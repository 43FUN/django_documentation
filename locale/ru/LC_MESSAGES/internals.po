# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-03-12 13:35\n"
"PO-Revision-Date: 2012-03-12 13:35\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 6c5d7cce521c4040b68f3372b9371364
#: ../../internals/committers.txt:3
msgid "Django committers"
msgstr ""

# 43fdca71173446abb6d056645a539e5c
#: ../../internals/committers.txt:6
msgid "The original team"
msgstr ""

# 08bb9255b45b434f992616c9a9ab8fd2
#: ../../internals/committers.txt:8
msgid ""
"Django originally started at World Online, the Web department of the "
"`Lawrence Journal-World`_ of Lawrence, Kansas, USA."
msgstr ""

# 5df1329666164cfcbd7617c0a67a135d
#: ../../internals/committers.txt:12
msgid ""
"Adrian is a Web developer with a background in journalism. He's known in "
"journalism circles as one of the pioneers of \"journalism via computer "
"programming\", and in technical circles as \"the guy who invented Django.\""
msgstr ""

# eef93183fd624e94958bac86bfbbbbe2
#: ../../internals/committers.txt:16
msgid ""
"He was lead developer at World Online for 2.5 years, during which time "
"Django was developed and implemented on World Online's sites. He's now the "
"leader and founder of EveryBlock_, a \"news feed for your block\"."
msgstr ""

# 9bdcca9553e64183a548fc78cd5cc42c
#: ../../internals/committers.txt:20
msgid "Adrian lives in Chicago, USA."
msgstr ""

# 9f9ef147d34040c08f4dd31e0346f063
#: ../../internals/committers.txt:23
msgid ""
"Simon is a well-respected Web developer from England. He had a one-year "
"internship at World Online, during which time he and Adrian developed Django "
"from scratch. The most enthusiastic Brit you'll ever meet, he's passionate "
"about best practices in Web development and maintains a well-read `web-"
"development blog`_."
msgstr ""

# 451e225ec1f04b289d2afd0513ee563d
#: ../../internals/committers.txt:29
msgid "Simon lives in Brighton, England."
msgstr ""

# 7b9684d9adea4c11a54e221dcf21be14
#: ../../internals/committers.txt:32
msgid ""
"Jacob is a partner at `Revolution Systems`_ which provides support services "
"around Django and related open source technologies. A good deal of Jacob's "
"work time is devoted to working on Django. Jacob previously worked at World "
"Online, where Django was invented, where he was the lead developer of "
"Ellington, a commercial Web publishing platform for media companies."
msgstr ""

# 64c6314f3a8c48b1a42f73bcec2b94df
#: ../../internals/committers.txt:38
msgid "Jacob lives in Lawrence, Kansas, USA."
msgstr ""

# 703ea8820ef44b69a944fb8dc3856870
#: ../../internals/committers.txt:41
msgid ""
"Wilson's design-fu is what makes Django look so nice. He designed the Web "
"site you're looking at right now, as well as Django's acclaimed admin "
"interface. Wilson is the designer for EveryBlock_."
msgstr ""

# 1615c1087af648d39fb3515b397a3d9b
#: ../../internals/committers.txt:45
msgid "Wilson lives in San Francisco, USA."
msgstr ""

# 7e4aaa4ad39c4ff890ba4b13f69ec2fa
#: ../../internals/committers.txt:57
msgid "Current developers"
msgstr ""

# 95ea09b252214a7a968a481647645a74
#: ../../internals/committers.txt:59
msgid "Currently, Django is led by a team of volunteers from around the globe."
msgstr ""

# 7a9fdde15eb84332bdea0590e952bbcb
#: ../../internals/committers.txt:64
msgid "BDFLs"
msgstr ""

# fc3d1a51123b437b80755a53db25bd5c
#: ../../internals/committers.txt:66
msgid ""
"Adrian and Jacob are the Co-`Benevolent Dictators for Life`_ of Django. When "
"\"rough consensus and working code\" fails, they're the ones who make the "
"tough decisions."
msgstr ""

# bd26de3d8a454d82b7d69f2c7b3dbc85
#: ../../internals/committers.txt:73
msgid "Core developers"
msgstr ""

# 533a60fbe82645f39ccba5ac4a21798a
#: ../../internals/committers.txt:75
msgid ""
"These are the folks who have a long history of contributions, a solid track "
"record of being helpful on the mailing lists, and a proven desire to "
"dedicate serious time to Django. In return, they've been granted the coveted "
"commit bit, and have free rein to hack on all parts of Django."
msgstr ""

# e78ac8b05fe84c85891bc6f8e1e19ec7
#: ../../internals/committers.txt:81
msgid ""
"Malcolm originally wanted to be a mathematician, somehow ended up a software "
"developer. He's contributed to many Open Source projects, has served on the "
"board of the GNOME foundation, and will kick your ass at chess."
msgstr ""

# a7bec8cd7db24c3185cf067285b427e8
#: ../../internals/committers.txt:85
msgid ""
"When he's not busy being an International Man of Mystery, Malcolm lives in "
"Sydney, Australia."
msgstr ""

# 84a4b462ccc14c148bbe54f97e2dc336
#: ../../internals/committers.txt:91
msgid ""
"Russell studied physics as an undergraduate, and studied neural networks for "
"his PhD. His first job was with a startup in the defense industry developing "
"simulation frameworks. Over time, mostly through work with Django, he's "
"become more involved in Web development."
msgstr ""

# 3fe889c72e0b4421b9a520ce885d9453
#: ../../internals/committers.txt:96
msgid ""
"Russell has helped with several major aspects of Django, including a couple "
"major internal refactorings, creation of the test system, and more."
msgstr ""

# bba7f4d9ae034d2a8839f43cc247537c
#: ../../internals/committers.txt:99
msgid ""
"Russell lives in the most isolated capital city in the world â€” Perth, "
"Australia."
msgstr ""

# cf8d83d518a9436f84e560553b4f3290
#: ../../internals/committers.txt:105
msgid ""
"Joseph is currently a developer at EveryBlock_, and previously worked for "
"the Lawrence Journal-World where he built most of the backend for their "
"Marketplace site. He often disappears for several days into the woods, "
"attempts to teach himself computational linguistics, and annoys his "
"neighbors with his Charango_ playing."
msgstr ""

# 72e1301f29d24589bfc2b9416ba57cb3
#: ../../internals/committers.txt:111
msgid ""
"Joseph's first contribution to Django was a series of improvements to the "
"authorization system leading up to support for pluggable authorization. "
"Since then, he's worked on the new forms system, its use in the admin, and "
"many other smaller improvements."
msgstr ""

# 3ada8bf7819e43a198e40dd9ac44316b
#: ../../internals/committers.txt:116
msgid "Joseph lives in Chicago, USA."
msgstr ""

# a5e2cdb47d2e414ca8e297e6084a3aac
#: ../../internals/committers.txt:121
msgid ""
"At University Luke studied physics and Materials Science and also met "
"`Michael Meeks`_ who introduced him to Linux and Open Source, re-igniting an "
"interest in programming.  Since then he has contributed to a number of Open "
"Source projects and worked professionally as a developer."
msgstr ""

# 3bad26d40a6e4840be7f3f985e0969cc
#: ../../internals/committers.txt:127
msgid ""
"Luke has contributed many excellent improvements to Django, including "
"database-level improvements, the CSRF middleware and many unit tests."
msgstr ""

# 8aac1ddc542145008b62f7629ce44c58
#: ../../internals/committers.txt:131
msgid ""
"Luke currently works for a church in Bradford, UK, and part-time as a "
"freelance developer."
msgstr ""

# 187351d0b3b34508bb926618206a8fe3
#: ../../internals/committers.txt:138
msgid ""
"Brian is currently the tech lead at Eldarion_ managing and developing "
"Django / Pinax_ based Web sites. He enjoys learning more about programming "
"languages and system architectures and contributing to open source projects. "
"Brian is the host of the `Django Dose`_ podcasts."
msgstr ""

# 35467e4fd26f4ca883f1591f9a4e83c1
#: ../../internals/committers.txt:143
msgid ""
"Brian helped immensely in getting Django's \"newforms-admin\" branch "
"finished in time for Django 1.0; he's now a full committer, continuing to "
"improve on the admin and forms system."
msgstr ""

# f6335efe540b440282d091597473a884
#: ../../internals/committers.txt:147
msgid "Brian lives in Denver, Colorado, USA."
msgstr ""

# 06055f9c86ac4f22b28e6b6fb4fcfe7a
#: ../../internals/committers.txt:154
msgid ""
"Gary starting contributing patches to Django in 2006 while developing Web "
"applications for `The University of Texas`_ (UT).  Since, he has made "
"contributions to the email and forms systems, as well as many other "
"improvements and code cleanups throughout the code base."
msgstr ""

# ba06003a33334747833e6006be4e8384
#: ../../internals/committers.txt:159
msgid ""
"Gary is currently a developer and software engineering graduate student at "
"UT, where his dedication to spreading the ways of Python and Django never "
"ceases."
msgstr ""

# 449fca9f4bad4ca099c3f65e939080a5
#: ../../internals/committers.txt:163
msgid "Gary lives in Austin, Texas, USA."
msgstr ""

# 3faa1907aee04981917c6ef03aa528e8
#: ../../internals/committers.txt:169
msgid ""
"Justin Bronn is a computer scientist and attorney specializing in legal "
"topics related to intellectual property and spatial law."
msgstr ""

# 5ec79561390349e2b30a7d68151339ab
#: ../../internals/committers.txt:172
msgid ""
"In 2007, Justin began developing ``django.contrib.gis`` in a branch, a.k.a. "
"GeoDjango_, which was merged in time for Django 1.0.  While implementing "
"GeoDjango, Justin obtained a deep knowledge of Django's internals including "
"the ORM, the admin, and Oracle support."
msgstr ""

# 857a5407253245049821846ae7a4c2fa
#: ../../internals/committers.txt:177
msgid "Justin lives in Houston, Texas."
msgstr ""

# e6481d74d21a40f9b8d570c577b6016c
#: ../../internals/committers.txt:182
msgid ""
"Karen has a background in distributed operating systems (graduate school), "
"communications software (industry) and crossword puzzle construction "
"(freelance).  The last of these brought her to Django, in late 2006, when "
"she set out to put a Web front-end on her crossword puzzle database. That "
"done, she stuck around in the community answering questions, debugging "
"problems, etc. -- because coding puzzles are as much fun as word puzzles."
msgstr ""

# 9ce4e4c0c10a42fa94abfe9df800fe9b
#: ../../internals/committers.txt:189
msgid "Karen lives in Apex, NC, USA."
msgstr ""

# 135b0a46a8894286b88400fea4712521
#: ../../internals/committers.txt:192
msgid ""
"Jannis graduated in media design from `Bauhaus-University Weimar`_, is the "
"author of a number of pluggable Django apps and likes to contribute to Open "
"Source projects like Pinax_. He currently works as a freelance Web developer "
"and designer."
msgstr ""

# 9ef435d753f8425c8c52c18344183537
#: ../../internals/committers.txt:197
msgid "Jannis lives in Berlin, Germany."
msgstr ""

# d5e648d5df654573842e4c0f240200d0
#: ../../internals/committers.txt:204
msgid ""
"James is the lead developer of Pinax_ and the CEO and founder of Eldarion_. "
"He has been doing open source software since 1993, Python since 1998 and "
"Django since 2006. He serves on the board of the Python Software Foundation "
"and is currently on a leave of absence from a PhD in linguistics."
msgstr ""

# 50b2640171474a08b010164ca5c42031
#: ../../internals/committers.txt:210
msgid ""
"James currently lives in Boston, MA, USA but originally hails from Perth, "
"Western Australia where he attended the same high school as Russell Keith-"
"Magee."
msgstr ""

# db06e0955bf8446f857b12d0f1ae2f91
#: ../../internals/committers.txt:217
msgid ""
"Alex is a student at Rensselaer Polytechnic Institute, and is also an "
"independent contractor.  He found Django in 2007 and has been addicted ever "
"since he found out you don't need to write out your forms by hand.  He has a "
"small obsession with compilers.  He's contributed to the ORM, forms, admin, "
"and other components of Django."
msgstr ""

# 53c3a538d810445ba033da9de3630a61
#: ../../internals/committers.txt:223
msgid "Alex lives in Chicago, IL, but spends most of his time in Troy, NY."
msgstr ""

# 15584d1172a94b898705d16161bdc3f0
#: ../../internals/committers.txt:228
msgid ""
"Andrew is a freelance Python developer and tinkerer, and has been developing "
"against Django since 2007. He graduated from Oxford University with a degree "
"in Computer Science, and has become most well known in the Django community "
"for his work on South, the schema migrations library."
msgstr ""

# 39d7b50f00d2470f80d7d66d335c8a3c
#: ../../internals/committers.txt:234
msgid "Andrew lives in London, UK."
msgstr ""

# 550c2fd40db34229ba0ae52f97f3511d
#: ../../internals/committers.txt:239
msgid ""
"Carl has been working with Django since 2007 (long enough to remember "
"queryset-refactor, but not magic-removal), and works as a freelance "
"developer with OddBird_.  He became a Django contributor by accident, "
"because fixing bugs is more interesting than working around them."
msgstr ""

# c06ed4923c344d418080262b013c3d90
#: ../../internals/committers.txt:244
msgid "Carl lives in Rapid City, SD, USA."
msgstr ""

# 7857cdb988414bb8bbf0952cb1f55342
#: ../../internals/committers.txt:250
msgid ""
"Ramiro has been reading Django source code and submitting patches since "
"mid-2006 after researching for a Python Web tool with matching awesomeness "
"and being pointed to it by an old ninja."
msgstr ""

# 55279c938ab94ddfb5d8106bba484464
#: ../../internals/committers.txt:254
msgid ""
"A software developer in the electronic transactions industry, he is a living "
"proof of the fact that anyone with enough enthusiasm can contribute to "
"Django, learning a lot and having fun in the process."
msgstr ""

# d5f383d90fa64cb990e836e1e279843e
#: ../../internals/committers.txt:258
msgid "Ramiro lives in CÃ³rdoba, Argentina."
msgstr ""

# bcbeb816b1a94a0aa9ef2b14155957e7
#: ../../internals/committers.txt:261
msgid ""
"Chris has been submitting patches and suggesting crazy ideas for Django "
"since early 2006. An advocate for community involvement and a long-term "
"triager, he is still often found answering questions in the #django IRC "
"channel."
msgstr ""

# ba54dedb508c407d808524a87ffbda10
#: ../../internals/committers.txt:266
msgid ""
"Chris lives in Napier, New Zealand (adding to the pool of Oceanic core "
"developers). He works remotely as a developer for `Lincoln Loop`_."
msgstr ""

# d308ab37ccc048b390d02c389adb788d
#: ../../internals/committers.txt:273
msgid ""
"Honza first discovered Django in 2006 and started using it right away, first "
"for school and personal projects and later in his full time job. He "
"contributed various patches and fixes mostly to the newforms library, "
"newforms admin and, through participation in the Google Summer of Code "
"project, assisted in creating the :ref:`model validation <validating-"
"objects>` functionality."
msgstr ""

# 99d63f173f0c4961994a63a2e613ea3d
#: ../../internals/committers.txt:280
msgid ""
"He is currently working for `Whiskey Media`_ in San Francisco developing "
"awesome sites running on pure Django."
msgstr ""

# 15905481ff564c418fafd5c77047417d
#: ../../internals/committers.txt:286
msgid ""
"As a self-professed design geek, Idan was initially attracted to Django "
"sometime between magic-removal and queryset-refactor. Formally trained as a "
"software engineer, Idan straddles the worlds of design and code, jack of two "
"trades and master of none. He is passionate about usability and finding "
"novel ways to extract meaning from data, and is a longtime photographer_."
msgstr ""

# f02fef966d59416fb0d4e45215ae0425
#: ../../internals/committers.txt:293
msgid ""
"Idan previously accepted freelance work under the Pixane_ imprint, but now "
"splits his days between his startup, Skills_, and beautifying all things "
"Django and Python."
msgstr ""

# 7b16116f60d84ff98eeb4d5b2362dd57
#: ../../internals/committers.txt:303
msgid ""
"Paul found Django in 2008 while looking for a more structured approach to "
"web programming. He stuck around after figuring out that the developers of "
"Django had already invented many of the wheels he needed. His passion for "
"breaking (and then fixing) things led to his current role working to "
"maintain and improve the security of Django."
msgstr ""

# f1f29fb1a7cf4dea9210518a513c447e
#: ../../internals/committers.txt:310
msgid ""
"Paul works in Berkeley, California as a `web developer`_ and `security "
"consultant`_."
msgstr ""

# 0ed097adf9aa488fbf0b82140b1e3b3f
#: ../../internals/committers.txt:318
msgid ""
"Julien has a background in software engineering and human-computer "
"interaction. As a Web developer, he enjoys tinkering with the backend as "
"much as designing and coding user interfaces. Julien discovered Django in "
"2007 while doing his PhD in Computing Sciences. Since then he has "
"contributed patches to various components of the framework, in particular "
"the admin. Julien was a co-founder of the `Interaction Consortium`_. He now "
"works at Odopod_, a digital agency based in San Francisco, CA, USA."
msgstr ""

# d51f6dd32fa443e3b49656828e50d057
#: ../../internals/committers.txt:331
msgid ""
"Aymeric is an engineer with a background in mathematics and computer "
"science. He chose Django because he believes that software should be simple, "
"explicit and tested. His perfectionist tendencies quickly led him to triage "
"tickets and contribute patches."
msgstr ""

# 2dfe1307a71f4d0c86b102c3c0ffbf55
#: ../../internals/committers.txt:336
msgid ""
"Aymeric has a pragmatic approach to software engineering, can't live without "
"a continuous integration server, and likes proving that Django is a good "
"choice for enterprise software."
msgstr ""

# b90be693d6f54a568511fe46d5659d68
#: ../../internals/committers.txt:340
msgid "He works in a `management consulting company`_ in Paris, France."
msgstr ""

# 776baccecf0f49e996907b3ae6619b98
#: ../../internals/committers.txt:346
msgid "Specialists"
msgstr ""

# f68d6272a8214939b2b0dfd1873dff47
#: ../../internals/committers.txt:349
msgid ""
"James is Django's release manager, and also contributes to the documentation "
"and provide the occasional bugfix."
msgstr ""

# 7b4419f7f4294e1480bbd3acd58cd829
#: ../../internals/committers.txt:352
msgid ""
"James came to Web development from philosophy when he discovered that "
"programmers get to argue just as much while collecting much better pay. He "
"lives in Lawrence, Kansas and previously worked at World Online; currently, "
"he's part of the Web development team at Mozilla."
msgstr ""

# bc53217d04564b80921a156691cbf825
#: ../../internals/committers.txt:358
msgid "He `keeps a blog`_, and enjoys fine port and talking to his car."
msgstr ""

# 72e85a2b2c294eee83153de744cab40c
#: ../../internals/committers.txt:364
msgid "Ian is responsible for Django's support for Oracle."
msgstr ""

# ece4eaa9565f4c819f3ff6184b077618
#: ../../internals/committers.txt:367
msgid "Matt is also responsible for Django's Oracle support."
msgstr ""

# 362829c144e94082a91b4bae74cbbd57
#: ../../internals/committers.txt:370
msgid ""
"Jeremy is the lead developer of Pegasus News, a personalized local site "
"based in Dallas, Texas. An early contributor to Greasemonkey and Django, he "
"sees technology as a tool for communication and access to knowledge."
msgstr ""

# 1b1e9266c61646f69ff7703261406d5a
#: ../../internals/committers.txt:374
msgid ""
"Jeremy helped kick off GeoDjango development, and is mostly responsible for "
"the serious speed improvements that signals received in Django 1.0."
msgstr ""

# e1c65b7f7c3042889bd60a073f684e97
#: ../../internals/committers.txt:377
msgid "Jeremy lives in Dallas, Texas, USA."
msgstr ""

# d37d0bfce42846978b5c007eb7f092b2
#: ../../internals/committers.txt:380
msgid ""
"Simon discovered Django 0.96 during his Computer Science PhD research and "
"has been developing with it full-time ever since. His core code "
"contributions are mostly in Django's admin application. He is also helping "
"to improve Django's documentation."
msgstr ""

# 91ca92b0f38a4ccf97ae2f84d4eadcb3
#: ../../internals/committers.txt:385
msgid "Simon works as a freelance developer based in Wollongong, Australia."
msgstr ""

# fe87b34a9aa34cf4bd1e467e2990f2b5
#: ../../internals/committers.txt:390
msgid ""
"Gabriel has been working with Django since 2008, shortly after the 1.0 "
"release. Convinced by his business partner that Python and Django were the "
"right direction for the company, he couldn't have been more happy with the "
"decision. His contributions range across many areas in Django, but years of "
"copy-editing and an eye for detail lead him to be particularly at home while "
"working on Django's documentation."
msgstr ""

# 2bd42072d5684707be819f10cc4c560f
#: ../../internals/committers.txt:397
msgid "Gabriel works as a web developer in Berkeley, CA, USA."
msgstr ""

# 7993682bfbc44c0683cdde4ebf3e0451
#: ../../internals/committers.txt:402
msgid ""
"When exploring Web frameworks for an independent study project in the fall "
"of 2008, Tim discovered Django and was lured to it by the documentation. He "
"enjoys contributing to the docs because they're awesome."
msgstr ""

# 03f7adce0b4e4a35bf187890e932c6d8
#: ../../internals/committers.txt:406
msgid "Tim works as a software engineer and lives in Philadelphia, PA, USA."
msgstr ""

# 34fb73f572824b22968447a6b9dea5da
#: ../../internals/committers.txt:409
msgid "Developers Emeritus"
msgstr ""

# a9f7664e504a4c859ccf1d78aca85658
#: ../../internals/committers.txt:412
msgid ""
"Georg created Django's internationalization system, managed i18n "
"contributions and made a ton of excellent tweaks, feature additions and bug "
"fixes."
msgstr ""

# 2ee3db41c59b4de98f20d4d5584902c5
#: ../../internals/committers.txt:417
msgid ""
"Robert was responsible for the *first* refactoring of Django's admin "
"application to allow for easier reuse and has made a ton of excellent "
"tweaks, feature additions and bug fixes."
msgstr ""

# 3e7f63645f83419dad708c940688e91a
#: ../../internals/contributing/bugs-and-features.txt:3
msgid "Reporting bugs and requesting features"
msgstr ""

# f39296bb2ead4053b2d18749da50ce8a
#: ../../internals/contributing/bugs-and-features.txt:5
msgid ""
"Before reporting a bug or requesting a new feature, please consider these "
"general points:"
msgstr ""

# 1c1d9930ad6e4e16afa35cb2b418dc5a
#: ../../internals/contributing/bugs-and-features.txt:8
msgid ""
"Check that someone hasn't already filed the bug or feature request by "
"`searching`_ or running `custom queries`_ in the ticket tracker."
msgstr ""

# 17aa918d224c449dac6b91d2a143f839
#: ../../internals/contributing/bugs-and-features.txt:11
msgid ""
"Don't use the ticket system to ask support questions. Use the `django-"
"users`_ list or the `#django`_ IRC channel for that."
msgstr ""

# ca53f53593d54b62bf2c482ed76e328e
#: ../../internals/contributing/bugs-and-features.txt:14
msgid ""
"Don't reopen issues that have been marked \"wontfix\" by a core developer. "
"This mark means that the decision has been made that we can't or won't fix "
"this particular issue. If you're not sure why, please ask on `django-"
"developers`_."
msgstr ""

# afc740d9f1524213b389d38448e263ea
#: ../../internals/contributing/bugs-and-features.txt:19
msgid ""
"Don't use the ticket tracker for lengthy discussions, because they're likely "
"to get lost. If a particular ticket is controversial, please move the "
"discussion to `django-developers`_."
msgstr ""

# a7d5e3059c8e44c886e50dcff36f3ecf
#: ../../internals/contributing/bugs-and-features.txt:26
msgid "Reporting bugs"
msgstr ""

# 32b188594ecb4e0288803d689679493e
#: ../../internals/contributing/bugs-and-features.txt:28
msgid ""
"Well-written bug reports are *incredibly* helpful. However, there's a "
"certain amount of overhead involved in working with any bug tracking system "
"so your help in keeping our ticket tracker as useful as possible is "
"appreciated. In particular:"
msgstr ""

# 6d9ad6f81bfa4fecaf87235975891201
#: ../../internals/contributing/bugs-and-features.txt:33
msgid ""
"**Do** read the :doc:`FAQ </faq/index>` to see if your issue might be a well-"
"known question."
msgstr ""

# f7cb38fc1c6245a1bee1ffcbdc3cdab3
#: ../../internals/contributing/bugs-and-features.txt:36
msgid ""
"**Do** ask on `django-users`_ or `#django`_ *first* if you're not sure if "
"what you're seeing is a bug."
msgstr ""

# 65bdba323d014e2fbb0ba63c682da1ae
#: ../../internals/contributing/bugs-and-features.txt:39
msgid ""
"**Do** write complete, reproducible, specific bug reports. You must include "
"a clear, concise description of the problem, and a set of instructions for "
"replicating it. Add as much debug information as you can: code snippets, "
"test cases, exception backtraces, screenshots, etc. A nice small test case "
"is the best way to report a bug, as it gives us an easy way to confirm the "
"bug quickly."
msgstr ""

# 9eabb662afa34316acfa3e275c191bb5
#: ../../internals/contributing/bugs-and-features.txt:46
msgid ""
"**Don't** post to `django-developers`_ just to announce that you have filed "
"a bug report. All the tickets are mailed to another list, `django-updates`_, "
"which is tracked by developers and interested community members; we see them "
"as they are filed."
msgstr ""

# 7601910ce04342fc998e8402f682c00f
#: ../../internals/contributing/bugs-and-features.txt:51
msgid ""
"To understand the lifecycle of your ticket once you have created it, refer "
"to :doc:`triaging-tickets`."
msgstr ""

# d3fc64a7e30b400e90695f745c5fa483
#: ../../internals/contributing/bugs-and-features.txt:59
msgid "Reporting security issues"
msgstr ""

# ee848c0754c74973b9e24d1df6656c4a
#: ../../internals/contributing/bugs-and-features.txt:63
msgid ""
"Please report security issues **only** to security@djangoproject.com. This "
"is a private list only open to long-time, highly trusted Django developers, "
"and its archives are not publicly readable."
msgstr ""

# 9cc4373ec73d4610a36647aa5037c32e
#: ../../internals/contributing/bugs-and-features.txt:67
msgid ""
"In the event of a confirmed vulnerability in Django itself, we will take the "
"following actions:"
msgstr ""

# 55b713156a7e4879a139b376583ee729
#: ../../internals/contributing/bugs-and-features.txt:70
msgid ""
"Acknowledge to the reporter that we've received the report and that a fix is "
"forthcoming. We'll give a rough timeline and ask the reporter to keep the "
"issue confidential until we announce it."
msgstr ""

# 73c7599753154c409e7842baa6717336
#: ../../internals/contributing/bugs-and-features.txt:74
msgid ""
"Focus on developing a fix as quickly as possible and produce patches against "
"the current and two previous releases."
msgstr ""

# 772246a05c334afaaa40fea6f7979799
#: ../../internals/contributing/bugs-and-features.txt:77
msgid ""
"Determine a go-public date for announcing the vulnerability and the fix. To "
"try to mitigate a possible \"arms race\" between those applying the patch "
"and those trying to exploit the hole, we will not announce security problems "
"immediately."
msgstr ""

# 8408dd1414c84a23bc4989ce37e3458d
#: ../../internals/contributing/bugs-and-features.txt:82
msgid ""
"Pre-notify third-party distributors of Django (\"vendors\"). We will send "
"these vendor notifications through private email which will include "
"documentation of the vulnerability, links to the relevant patch(es), and a "
"request to keep the vulnerability confidential until the official go-public "
"date."
msgstr ""

# 6cf583585bda4f2dbf1153b3e476e6d8
#: ../../internals/contributing/bugs-and-features.txt:88
msgid ""
"Publicly announce the vulnerability and the fix on the pre-determined go-"
"public date. This will probably mean a new release of Django, but in some "
"cases it may simply be patches against current releases."
msgstr ""

# cc56d949b8ce497eb5fba63c00e6c7f9
#: ../../internals/contributing/bugs-and-features.txt:93
msgid "Reporting user interface bugs and features"
msgstr ""

# fe9b043ab10b4bc282d4ebf3ba1dd546
#: ../../internals/contributing/bugs-and-features.txt:95
msgid ""
"If your bug or feature request touches on anything visual in nature, there "
"are a few additional guidelines to follow:"
msgstr ""

# 07275561bb9d4fc6946cd6a847f989c9
#: ../../internals/contributing/bugs-and-features.txt:98
msgid ""
"Include screenshots in your ticket which are the visual equivalent of a "
"minimal testcase. Show off the issue, not the crazy customizations you've "
"made to your browser."
msgstr ""

# fd9e6dc6ab7b418b8c6e8609fe482459
#: ../../internals/contributing/bugs-and-features.txt:102
msgid ""
"If the issue is difficult to show off using a still image, consider "
"capturing a *brief* screencast. If your software permits it, capture only "
"the relevant area of the screen."
msgstr ""

# e4f8af6765364ff0867fb614d2747604
#: ../../internals/contributing/bugs-and-features.txt:106
msgid ""
"If you're offering a patch which changes the look or behavior of Django's "
"UI, you **must** attach before *and* after screenshots/screencasts. Tickets "
"lacking these are difficult for triagers and core developers to assess "
"quickly."
msgstr ""

# 20dd13a5d61d43f89c3ef822c834d668
#: ../../internals/contributing/bugs-and-features.txt:111
msgid ""
"Screenshots don't absolve you of other good reporting practices. Make sure "
"to include URLs, code snippets, and step-by-step instructions on how to "
"reproduce the behavior visible in the screenshots."
msgstr ""

# 30e54ad0ad7740028dc1a6193092a4a4
#: ../../internals/contributing/bugs-and-features.txt:115
msgid ""
"Make sure to set the UI/UX flag on the ticket so interested parties can find "
"your ticket."
msgstr ""

# cb76931789674c10b6fe0ff01142da6d
#: ../../internals/contributing/bugs-and-features.txt:119
msgid "Requesting features"
msgstr ""

# 5ff148e9274449448806509273348857
#: ../../internals/contributing/bugs-and-features.txt:121
msgid ""
"We're always trying to make Django better, and your feature requests are a "
"key part of that. Here are some tips on how to make a request most "
"effectively:"
msgstr ""

# 82cd371cbe0b4dc9be534827d6818e4f
#: ../../internals/contributing/bugs-and-features.txt:124
msgid ""
"Make sure the feature actually requires changes in Django's core. If your "
"idea can be developed as an independent application or module â€” for "
"instance, you want to support another database engine â€” we'll probably "
"suggest that you to develop it independently. Then, if your project gathers "
"sufficient community support, we may consider it for inclusion in Django."
msgstr ""

# 0449804ebeb0450fb8dea8516904578a
#: ../../internals/contributing/bugs-and-features.txt:131
msgid ""
"First request the feature on the `django-developers`_ list, not in the "
"ticket tracker. It'll get read more closely if it's on the mailing list. "
"This is even more important for large-scale feature requests. We like to "
"discuss any big changes to Django's core on the mailing list before actually "
"working on them."
msgstr ""

# eb7aeb2634454cc18cf9f09433cd77bd
#: ../../internals/contributing/bugs-and-features.txt:137
msgid ""
"Describe clearly and concisely what the missing feature is and how you'd "
"like to see it implemented. Include example code (non-functional is OK) if "
"possible."
msgstr ""

# 067cc3c9501247adb52b55b5dbfc3944
#: ../../internals/contributing/bugs-and-features.txt:141
msgid ""
"Explain *why* you'd like the feature. In some cases this is obvious, but "
"since Django is designed to help real developers get real work done, you'll "
"need to explain it, if it isn't obvious why the feature would be useful."
msgstr ""

# ca42dc02f3584ea7802be0579bf946a3
#: ../../internals/contributing/bugs-and-features.txt:146
msgid ""
"If core developers agree on the feature, then it's appropriate to create a "
"ticket. Include a link the discussion on `django-developers`_ in the ticket "
"description."
msgstr ""

# ecfde25c61064be98673bc8a286cb0b9
#: ../../internals/contributing/bugs-and-features.txt:150
msgid ""
"As with most open-source projects, code talks. If you are willing to write "
"the code for the feature yourself or, even better, if you've already written "
"it, it's much more likely to be accepted. If it's a large feature that might "
"need multiple developers, we're always happy to give you an experimental "
"branch in our repository; see the :doc:`writing-code/branch-policy`."
msgstr ""

# cb823f9bdfa84c90baf82a8661631e71
#: ../../internals/contributing/bugs-and-features.txt:156
msgid "See also: :ref:`documenting-new-features`."
msgstr ""

# 0e1001407ebb422ca53bf687a8eb2c8c
#: ../../internals/contributing/bugs-and-features.txt:161
msgid "How we make decisions"
msgstr ""

# e0254321cde746a1a057dcf88bf513bd
#: ../../internals/contributing/bugs-and-features.txt:163
msgid ""
"Whenever possible, we strive for a rough consensus. To that end, we'll often "
"have informal votes on `django-developers`_ about a feature. In these votes "
"we follow the voting style invented by Apache and used on Python itself, "
"where votes are given as +1, +0, -0, or -1. Roughly translated, these votes "
"mean:"
msgstr ""

# ec50c25b79c14c48aebb8bbc5c7b9114
#: ../../internals/contributing/bugs-and-features.txt:168
msgid "+1: \"I love the idea and I'm strongly committed to it.\""
msgstr ""

# 69db90a7a9914f0b986cc5eda802d253
#: ../../internals/contributing/bugs-and-features.txt:170
msgid "+0: \"Sounds OK to me.\""
msgstr ""

# 5b16eca7036a4c0187e27410b69451fe
#: ../../internals/contributing/bugs-and-features.txt:172
msgid "-0: \"I'm not thrilled, but I won't stand in the way.\""
msgstr ""

# 6669790e207a4ab4856c5925e176a6f6
#: ../../internals/contributing/bugs-and-features.txt:174
msgid ""
"-1: \"I strongly disagree and would be very unhappy to see the idea turn "
"into reality.\""
msgstr ""

# 43d3be0da50f4378a266736db01fc643
#: ../../internals/contributing/bugs-and-features.txt:177
msgid ""
"Although these votes on `django-developers`_ are informal, they'll be taken "
"very seriously. After a suitable voting period, if an obvious consensus "
"arises we'll follow the votes."
msgstr ""

# 3fefbccbbe474303922806871f9953e0
#: ../../internals/contributing/bugs-and-features.txt:181
msgid ""
"However, consensus is not always possible. If consensus cannot be reached, "
"or if the discussion towards a consensus fizzles out without a concrete "
"decision, we use a more formal process."
msgstr ""

# 3fe0879f131b433789ca7003657a1b44
#: ../../internals/contributing/bugs-and-features.txt:185
msgid ""
"Any :doc:`core committer</internals/committers>` may call for a formal vote "
"using the same voting mechanism above. A proposition will be considered "
"carried by the core team if:"
msgstr ""

# 18b7b6838a0c4444aeba069f8a47658c
#: ../../internals/contributing/bugs-and-features.txt:189
msgid "There are three \"+1\" votes from members of the core team."
msgstr ""

# 39a95fb3ba764fc58767e74250261c1f
#: ../../internals/contributing/bugs-and-features.txt:191
msgid "There is no \"-1\" vote from any member of the core team."
msgstr ""

# 5b9163bfb03646989be8202e9973be63
#: ../../internals/contributing/bugs-and-features.txt:193
msgid ""
"The :ref:`BDFLs<django-bdfls>` haven't stepped in and executed their "
"positive or negative veto."
msgstr ""

# 5989865117304dc98e79ce6804dd01a0
#: ../../internals/contributing/bugs-and-features.txt:196
msgid ""
"When calling for a vote, the caller should specify a deadline by which votes "
"must be received. One week is generally suggested as the minimum amount of "
"time."
msgstr ""

# 70520287f4f64b36b2ab1eae08f5bb76
#: ../../internals/contributing/bugs-and-features.txt:200
msgid ""
"Since this process allows any core committer to veto a proposal, any \"-1\" "
"votes (or BDFL vetos) should be accompanied by an explanation that explains "
"what it would take to convert that \"-1\" into at least a \"+0\"."
msgstr ""

# df58bceaa6694ea9be9174e0c52e3796
#: ../../internals/contributing/bugs-and-features.txt:204
msgid ""
"Whenever possible, these formal votes should be announced and held in public "
"on the `django-developers`_ mailing list. However, overly sensitive or "
"contentious issues -- including, most notably, votes on new core committers "
"-- may be held in private."
msgstr ""

# 95a13f993d5f4f708ccc229c8c47cdb8
#: ../../internals/contributing/committing-code.txt:3
msgid "Committing code"
msgstr ""

# faccb2197e5046deb5812da30facc24e
#: ../../internals/contributing/committing-code.txt:5
msgid ""
"This section is addressed to the :doc:`/internals/committers` and to anyone "
"interested in knowing how code gets committed into Django core."
msgstr ""

# ce40b7e18ad04eb6831083553cc7dedf
#: ../../internals/contributing/committing-code.txt:9
msgid "Commit access"
msgstr ""

# 18c0670d39164d9e9b341beefe0880d9
#: ../../internals/contributing/committing-code.txt:11
msgid "Django has two types of committers:"
msgstr ""

# f6cac3a5558b4224b604a3a48ab78d3b
#: ../../internals/contributing/committing-code.txt:14
msgid ""
"These are people who have a long history of contributions to Django's "
"codebase, a solid track record of being polite and helpful on the mailing "
"lists, and a proven desire to dedicate serious time to Django's development. "
"The bar is high for full commit access."
msgstr ""

# c41096936f2e4ebe9cfbac6659f8e7a6
#: ../../internals/contributing/committing-code.txt:20
msgid ""
"These are people who are \"domain experts.\" They have direct check-in "
"access to the subsystems that fall under their jurisdiction, and they're "
"given a formal vote in questions that involve their subsystems. This type of "
"access is likely to be given to someone who contributes a large subframework "
"to Django and wants to continue to maintain it."
msgstr ""

# fcc5e3114d7b4d8da679f9611bb0e0ef
#: ../../internals/contributing/committing-code.txt:26
msgid ""
"Partial commit access is granted by the same process as full committers. "
"However, the bar is set lower; proven expertise in the area in question is "
"likely to be sufficient."
msgstr ""

# e77ec5e876d7407597c2688b41030631
#: ../../internals/contributing/committing-code.txt:30
msgid ""
"Decisions on new committers will follow the process explained in :ref:`how-"
"we-make-decisions`. To request commit access, please contact an existing "
"committer privately. Public requests for commit access are potential flame-"
"war starters, and will be ignored."
msgstr ""

# d1cae620e5374fbaa7d9750c405b20bd
#: ../../internals/contributing/committing-code.txt:36
msgid "Committing guidelines"
msgstr ""

# 471168bacaff4e308578a5965b695f7d
#: ../../internals/contributing/committing-code.txt:38
msgid ""
"Please follow these guidelines when committing code to Django's Subversion "
"repository:"
msgstr ""

# 5586bd70c32144f2bf62444ffdb17bc0
#: ../../internals/contributing/committing-code.txt:41
msgid ""
"For any medium-to-big changes, where \"medium-to-big\" is according to your "
"judgment, please bring things up on the `django-developers`_ mailing list "
"before making the change."
msgstr ""

# 2cc6519669d248e8959024ff99a912d3
#: ../../internals/contributing/committing-code.txt:45
msgid ""
"If you bring something up on `django-developers`_ and nobody responds, "
"please don't take that to mean your idea is great and should be implemented "
"immediately because nobody contested it. Django's lead developers don't have "
"a lot of time to read mailing-list discussions immediately, so you may have "
"to wait a couple of days before getting a response."
msgstr ""

# 15b83f8b604f492c9e8f40331f90f0cc
#: ../../internals/contributing/committing-code.txt:52
msgid "Write detailed commit messages in the past tense, not present tense."
msgstr ""

# 8141f1f1c2da4d5187c01fc743c6346d
#: ../../internals/contributing/committing-code.txt:54
msgid "Good: \"Fixed Unicode bug in RSS API.\""
msgstr ""

# 9d67cbfdfacc47cdbaaa6b42261282fb
#: ../../internals/contributing/committing-code.txt:55
msgid "Bad: \"Fixes Unicode bug in RSS API.\""
msgstr ""

# 69ac1a56dcab46c1824ee02ca6ab0eff
#: ../../internals/contributing/committing-code.txt:56
msgid "Bad: \"Fixing Unicode bug in RSS API.\""
msgstr ""

# b96ef9e162e44fac9b36a4f72fa5731c
#: ../../internals/contributing/committing-code.txt:58
msgid ""
"For commits to a branch, prefix the commit message with the branch name. For "
"example: \"magic-removal: Added support for mind reading.\""
msgstr ""

# c1775e7038a142a3bfefc56680c71608
#: ../../internals/contributing/committing-code.txt:61
msgid ""
"Limit commits to the most granular change that makes sense. This means, use "
"frequent small commits rather than infrequent large commits. For example, if "
"implementing feature X requires a small change to library Y, first commit "
"the change to library Y, then commit feature X in a separate commit. This "
"goes a *long way* in helping all core Django developers follow your changes."
msgstr ""

# f234fbb454554bf4b5d98cd1bef89017
#: ../../internals/contributing/committing-code.txt:68
msgid "Separate bug fixes from feature changes."
msgstr ""

# 36c22385441d490f8c8fc16727f48e2e
#: ../../internals/contributing/committing-code.txt:70
msgid ""
"Bug fixes need to be added to the current bugfix branch as well as the "
"current trunk."
msgstr ""

# 294241c4b64a449890b268172b336393
#: ../../internals/contributing/committing-code.txt:73
msgid ""
"If your commit closes a ticket in the Django `ticket tracker`_, begin your "
"commit message with the text \"Fixed #abc\", where \"abc\" is the number of "
"the ticket your commit fixes. Example: \"Fixed #123 -- Added support for foo"
"\". We've rigged Subversion and Trac so that any commit message in that "
"format will automatically close the referenced ticket and post a comment to "
"it with the full commit message."
msgstr ""

# 70b23616ee8d4ab88fedfb5c9925c7bf
#: ../../internals/contributing/committing-code.txt:80
msgid ""
"If your commit closes a ticket and is in a branch, use the branch name "
"first, then the \"Fixed #abc.\" For example: \"magic-removal: Fixed #123 -- "
"Added whizbang feature.\""
msgstr ""

# 6646d6969afc4cc7af5ff85849bd8493
#: ../../internals/contributing/committing-code.txt:84
msgid "For the curious: we're using a `Trac post-commit hook`_ for this."
msgstr ""

# 4fc8cc442f7744188039af6f8fcff279
#: ../../internals/contributing/committing-code.txt:88
msgid ""
"If your commit references a ticket in the Django `ticket tracker`_ but does "
"*not* close the ticket, include the phrase \"Refs #abc\", where \"abc\" is "
"the number of the ticket your commit references. We've rigged Subversion and "
"Trac so that any commit message in that format will automatically post a "
"comment to the appropriate ticket."
msgstr ""

# db04fdd8bdb9497a9f3df8030e4898fa
#: ../../internals/contributing/committing-code.txt:94
msgid "Write commit messages for backports using this pattern::"
msgstr ""

# b73d7aab2e754ddfbb5485e9405d6ee4
#: ../../internals/contributing/committing-code.txt:100
msgid "For example::"
msgstr ""

# 13554610096944a98d3a641a74d8399c
#: ../../internals/contributing/committing-code.txt:107
msgid "Reverting commits"
msgstr ""

# f62b35fbac514c1ba97d0181368ffbc7
#: ../../internals/contributing/committing-code.txt:109
msgid ""
"Nobody's perfect; mistakes will be committed. When a mistaken commit is "
"discovered, please follow these guidelines:"
msgstr ""

# 41d02508b501454f86ce2f639f750ce2
#: ../../internals/contributing/committing-code.txt:112
msgid ""
"Try very hard to ensure that mistakes don't happen. Just because we have a "
"reversion policy doesn't relax your responsibility to aim for the highest "
"quality possible. Really: double-check your work before you commit it in the "
"first place!"
msgstr ""

# c9b2a1415410410a9eeba6ec1677b48e
#: ../../internals/contributing/committing-code.txt:117
msgid "If possible, have the original author revert his/her own commit."
msgstr ""

# 4467512d2b964266adb9aa4f2d7b3802
#: ../../internals/contributing/committing-code.txt:119
msgid ""
"Don't revert another author's changes without permission from the original "
"author."
msgstr ""

# 438a85c7af0b48e7a894b9fcbeffc793
#: ../../internals/contributing/committing-code.txt:122
msgid ""
"If the original author can't be reached (within a reasonable amount of time "
"-- a day or so) and the problem is severe -- crashing bug, major test "
"failures, etc -- then ask for objections on the `django-developers`_ mailing "
"list then revert if there are none."
msgstr ""

# 9de94b6253cd4aa0839548b29b9c1b67
#: ../../internals/contributing/committing-code.txt:127
msgid ""
"If the problem is small (a feature commit after feature freeze, say), wait "
"it out."
msgstr ""

# 18bdd47afaab447990ef0dca303df1c1
#: ../../internals/contributing/committing-code.txt:130
msgid ""
"If there's a disagreement between the committer and the reverter-to-be then "
"try to work it out on the `django-developers`_ mailing list. If an agreement "
"can't be reached then it should be put to a vote."
msgstr ""

# 1088e6c88d9444ad9f877ae4dd26910a
#: ../../internals/contributing/committing-code.txt:135
msgid ""
"If the commit introduced a confirmed, disclosed security vulnerability then "
"the commit may be reverted immediately without permission from anyone."
msgstr ""

# 6588d2cfc6bf4e458bb07696ce779e6d
#: ../../internals/contributing/committing-code.txt:139
msgid ""
"The release branch maintainer may back out commits to the release branch "
"without permission if the commit breaks the release branch."
msgstr ""

# 1878eb9623554e70abfb0c8a81569c45
#: ../../internals/contributing/index.txt:3
msgid "Contributing to Django"
msgstr ""

# af084122ea80459f8a91f624e72b54ef
#: ../../internals/contributing/index.txt:5
msgid ""
"Django is a community that lives on its volunteers. As it keeps growing, we "
"always need more people to help others. As soon as you learn Django, you can "
"contribute in many ways:"
msgstr ""

# 25534138de7c43aa93091f5b2e9fce16
#: ../../internals/contributing/index.txt:9
msgid ""
"Join the `django-users`_ mailing list and answer questions. This mailing "
"list has a huge audience, and we really want to maintain a friendly and "
"helpful atmosphere. If you're new to the Django community, you should read "
"the `posting guidelines`_."
msgstr ""

# a3fa49c83daa4c8d91ab0f8cab5d22a2
#: ../../internals/contributing/index.txt:14
msgid ""
"Join the `#django IRC channel`_ on Freenode and answer questions. By "
"explaining Django to other users, you're going to learn a lot about the "
"framework yourself."
msgstr ""

# 63f7a5aa961d4b9397205d3bcb58fb73
#: ../../internals/contributing/index.txt:18
msgid ""
"Blog about Django. We syndicate all the Django blogs we know about on the "
"`community page`_; if you'd like to see your blog on that page you can "
"`register it here`_."
msgstr ""

# 7cb06891e6c0413d8463e4cb8af4ce5c
#: ../../internals/contributing/index.txt:22
msgid ""
"Contribute to open-source Django projects, write some documentation, or "
"release your own code as an open-source pluggable application. The ecosystem "
"of pluggable applications is a big strength of Django, help us build it!"
msgstr ""

# 8c8ebccbc7004439a92321254b7ee3fb
#: ../../internals/contributing/index.txt:27
msgid ""
"If you think working *with* Django is fun, wait until you start working *on* "
"it. We're passionate about helping Django users make the jump to "
"contributing members of the community, so there are several ways you can "
"help Django's development:"
msgstr ""

# 99e2a8f5480244e99023d8c21affe6e1
#: ../../internals/contributing/index.txt:32
msgid ":doc:`Report bugs <bugs-and-features>` in our `ticket tracker`_."
msgstr ""

# e0f2303f49b040508c617f528bdac98e
#: ../../internals/contributing/index.txt:34
msgid ""
"Join the `django-developers`_ mailing list and share your ideas for how to "
"improve Django. We're always open to suggestions."
msgstr ""

# b99efc91da014dde990a2c97fed9e952
#: ../../internals/contributing/index.txt:37
msgid ""
":doc:`Submit patches <writing-code/submitting-patches>` for new and/or fixed "
"behavior. If you're looking for an easy way to start contributing to Django "
"have a look at the `easy pickings`_ tickets."
msgstr ""

# 2c49bcddb51c46a5a428683c755d461b
#: ../../internals/contributing/index.txt:41
msgid ""
":doc:`Improve the documentation <writing-documentation>` or :doc:`write unit "
"tests <writing-code/unit-tests>`."
msgstr ""

# 97e829d7278843df886f778f356c2c3e
#: ../../internals/contributing/index.txt:44
msgid ""
":doc:`Triage tickets and review patches <triaging-tickets>` created by other "
"users."
msgstr ""

# f3feb11e83c24349a695b08230d6fc79
#: ../../internals/contributing/index.txt:47
msgid ""
"Really, **ANYONE** can do something to help make Django better and greater!"
msgstr ""

# fcb95ad9d2444a1ea2afb0782421ae5b
#: ../../internals/contributing/index.txt:49
msgid "Browse the following sections to find out how:"
msgstr ""

# b2b27fd566dc47d2b45ddbc2a4346c1e
#: ../../internals/contributing/localizing.txt:3
msgid "Localizing Django"
msgstr ""

# c814e8dd82004b02874686335df0af9b
#: ../../internals/contributing/localizing.txt:5
msgid ""
"Various parts of Django, such as the admin site and validation error "
"messages, are internationalized. This means they display differently "
"depending on each user's language or country. For this, Django uses the same "
"internationalization and localization infrastructure available to Django "
"applications, described in the :doc:`i18n documentation </topics/i18n/"
"index>`."
msgstr ""

# 03517d78de534b34b736931df3654682
#: ../../internals/contributing/localizing.txt:12
msgid "Translations"
msgstr ""

# bce5bb999707426f99aba18425d2f362
#: ../../internals/contributing/localizing.txt:14
msgid ""
"Translations are contributed by Django users worldwide. The translation work "
"is coordinated at `Transifex`_."
msgstr ""

# 5766a7e64cfc49c5915a2b47b1c39139
#: ../../internals/contributing/localizing.txt:17
msgid ""
"If you find an incorrect translation or want to discuss specific "
"translations, go to the `translation team`_ page for that language. If you "
"would like to help out with translating or add a language that isn't yet "
"translated, here's what to do:"
msgstr ""

# c3cf15200d5c4560bd01326e8ddb41f2
#: ../../internals/contributing/localizing.txt:22
msgid "Join the `Django i18n mailing list`_ and introduce yourself."
msgstr ""

# 6b979568fb874095804a74360740207e
#: ../../internals/contributing/localizing.txt:24
msgid "Make sure you read the notes about :ref:`specialties-of-django-i18n`."
msgstr ""

# e539e2d6a8de4e9da93b48ee8e406efe
#: ../../internals/contributing/localizing.txt:26
msgid "Signup at `Transifex`_ and visit the `Django project page`_."
msgstr ""

# c6e958e033214b558d0de7bf328ee136
#: ../../internals/contributing/localizing.txt:28
msgid ""
"On the `translation teams`_ page, choose the language team you want to work "
"with, **or** -- in case the language team doesn't exist yet -- request a new "
"team by clicking on the \"Request a new team\" button and select the "
"appropriate language."
msgstr ""

# 5f067eda05c44c97a2d15fcb7dbb8ae9
#: ../../internals/contributing/localizing.txt:33
msgid ""
"Then, click the \"Join this Team\" button to become a member of this team. "
"Every team has at least one coordinator who is responsible to review your "
"membership request. You can of course also contact the team coordinator to "
"clarify procedural problems and handle the actual translation process."
msgstr ""

# 0ebe9150622049b6aeffc531dc7ed3e3
#: ../../internals/contributing/localizing.txt:39
msgid ""
"Once you are a member of a team choose the translation resource you want to "
"update on the team page. For example the \"core\" resource refers to the "
"translation catalogue that contains all non-contrib translations. Each of "
"the contrib apps also have a resource (prefixed with \"contrib\")."
msgstr ""

# 89e39b354efa45958355ae93e4e97a81
#: ../../internals/contributing/localizing.txt:45
msgid ""
"For more information about how to use Transifex, read the `Transifex User "
"Guide`_."
msgstr ""

# 2aa13420d97447588e26a4f3f6ede2b9
#: ../../internals/contributing/localizing.txt:49
msgid "Formats"
msgstr ""

# 24d5e0d9f6044b439dd92b30815d26ab
#: ../../internals/contributing/localizing.txt:51
msgid ""
"You can also review ``conf/locale/<locale>/formats.py``. This file describes "
"the date, time and numbers formatting particularities of your locale. See :"
"ref:`format-localization` for details."
msgstr ""

# b7d58d85f90543d8abbd8dc72a1dfd45
#: ../../internals/contributing/localizing.txt:55
msgid ""
"The format files aren't managed by the use of Transifex. To change them, you "
"must :doc:`create a patch<writing-code/submitting-patches>` against the "
"Django source tree, as for any code change:"
msgstr ""

# 8565aed19a804f4a9ed13a9104714e2b
#: ../../internals/contributing/localizing.txt:58
msgid "Create a diff against the current Subversion trunk."
msgstr ""

# 16ad1cc1775f4fa49abe20ca2cf0af44
#: ../../internals/contributing/localizing.txt:60
msgid ""
"Open a ticket in Django's ticket system, set its ``Component`` field to "
"``Translations``, and attach the patch to it."
msgstr ""

# 5c44978db26e477a987f36633b31648d
#: ../../internals/contributing/new-contributors.txt:3
msgid "Advice for new contributors"
msgstr ""

# 75ae5b13be884834a11fa6e25abb3478
#: ../../internals/contributing/new-contributors.txt:5
msgid ""
"New contributor and not sure what to do? Want to help but just don't know "
"how to get started? This is the section for you."
msgstr ""

# 064af81af4134eafb9f874ce014a1558
#: ../../internals/contributing/new-contributors.txt:9
msgid "First steps"
msgstr ""

# df63e47ec4f74ecb9aaf0d862e91aede
#: ../../internals/contributing/new-contributors.txt:11
msgid "Start with these easy tasks to discover Django's development process."
msgstr ""

# 3487b66a6e0a40d69cfccbe60dcc1a3a
#: ../../internals/contributing/new-contributors.txt:13
msgid "**Triage tickets**"
msgstr ""

# 2bc7dee706a0405c858b5a50940a5511
#: ../../internals/contributing/new-contributors.txt:15
msgid ""
"If an `unreviewed ticket`_ reports a bug, try and reproduce it. If you can "
"reproduce it and it seems valid, make a note that you confirmed the bug and "
"accept the ticket. Make sure the ticket is filed under the correct component "
"area. Consider writing a patch that adds a test for the bug's behavior, even "
"if you don't fix the bug itself. See more at :ref:`how-can-i-help-with-"
"triaging`"
msgstr ""

# 572f633ff3ae40c0ad967807f86b980c
#: ../../internals/contributing/new-contributors.txt:22
msgid ""
"**Look for tickets that are accepted and review patches to build familiarity "
"with the codebase and the process**"
msgstr ""

# 3add7b3bd45b411d9d51d4b46df72d64
#: ../../internals/contributing/new-contributors.txt:25
msgid ""
"Mark the appropriate flags if a patch needs docs or tests. Look through the "
"changes a patch makes, and keep an eye out for syntax that is incompatible "
"with older but still supported versions of Python. Run the tests and make "
"sure they pass on your system.  Where possible and relevant, try them out on "
"a database other than SQLite. Leave comments and feedback!"
msgstr ""

# 6919800ef9be4695a52387d2a680e171
#: ../../internals/contributing/new-contributors.txt:31
msgid "**Keep old patches up to date**"
msgstr ""

# 4dce8daf44164cc3a1beb7a9ebadf7d9
#: ../../internals/contributing/new-contributors.txt:33
msgid ""
"Oftentimes the codebase will change between a patch being submitted and the "
"time it gets reviewed. Make sure it still applies cleanly and functions as "
"expected. Simply updating a patch is both useful and important! See more on :"
"doc:`writing-code/submitting-patches`."
msgstr ""

# c62b78d36a5642e2b1a82531281b115c
#: ../../internals/contributing/new-contributors.txt:38
msgid "**Write some documentation**"
msgstr ""

# fa41d539f07448069db2d7bec973be5e
#: ../../internals/contributing/new-contributors.txt:40
msgid ""
"Django's documentation is great but it can always be improved. Did you find "
"a typo? Do you think that something should be clarified? Go ahead and "
"suggest a documentation patch! See also the guide on :doc:`writing-"
"documentation`, in particular the tips for :ref:`improving-the-"
"documentation`."
msgstr ""

# 0b8ad00e69b4403e9876387ac4812bf5
#: ../../internals/contributing/new-contributors.txt:48
msgid ""
"The `reports page`_ contains links to many useful Trac queries, including "
"several that are useful for triaging tickets and reviewing patches as "
"suggested above."
msgstr ""

# eddea6f6fa3f4e4abba223fd40f85f5d
#: ../../internals/contributing/new-contributors.txt:58
msgid "Guidelines"
msgstr ""

# 10c1b38299da4cb4842ebd785879ed12
#: ../../internals/contributing/new-contributors.txt:60
msgid ""
"As a newcomer on a large project, it's easy to experience frustration. "
"Here's some advice to make your work on Django more useful and rewarding."
msgstr ""

# 68411f1730224797aa37b8ce1945891d
#: ../../internals/contributing/new-contributors.txt:63
msgid ""
"**Pick a subject area that you care about, that you are familiar with, or "
"that you want to learn about**"
msgstr ""

# f0760890e7364f3a8fc8fd168846d3fd
#: ../../internals/contributing/new-contributors.txt:66
msgid ""
"You don't already have to be an expert on the area you want to work on; you "
"become an expert through your ongoing contributions to the code."
msgstr ""

# b797ff3868b94c55a1a4970d194314ec
#: ../../internals/contributing/new-contributors.txt:69
msgid "**Analyze tickets' context and history**"
msgstr ""

# 4956ff1c401648fb9e10ac13250d50bc
#: ../../internals/contributing/new-contributors.txt:71
msgid ""
"Trac isn't an absolute; the context is just as important as the words. When "
"reading Trac, you need to take into account who says things, and when they "
"were said. Support for an idea two years ago doesn't necessarily mean that "
"the idea will still have support. You also need to pay attention to who "
"*hasn't* spoken -- for example, if a core team member hasn't been recently "
"involved in a discussion, then a ticket may not have the support required to "
"get into trunk."
msgstr ""

# e4606b7734454380b6ad101b162517de
#: ../../internals/contributing/new-contributors.txt:79
msgid "**Start small**"
msgstr ""

# e20bd9e062964d6eb2843d0bea8b137f
#: ../../internals/contributing/new-contributors.txt:81
msgid ""
"It's easier to get feedback on a little issue than on a big one. See the "
"`easy pickings`_."
msgstr ""

# d83be172645a4d17b9ed218cf5428a07
#: ../../internals/contributing/new-contributors.txt:84
msgid ""
"**If you're going to engage in a big task, make sure that your idea has "
"support first**"
msgstr ""

# 6900a5e84ebc42259382f2a635783945
#: ../../internals/contributing/new-contributors.txt:87
msgid ""
"This means getting someone else to confirm that a bug is real before you fix "
"the issue, and ensuring that the core team supports a proposed feature "
"before you go implementing it."
msgstr ""

# df2f7246bb724d90a5dac7c7b05c3106
#: ../../internals/contributing/new-contributors.txt:91
msgid "**Be bold! Leave feedback!**"
msgstr ""

# acb879b3c3ec4ada94879403f1122190
#: ../../internals/contributing/new-contributors.txt:93
msgid ""
"Sometimes it can be scary to put your opinion out to the world and say "
"\"this ticket is correct\" or \"this patch needs work\", but it's the only "
"way the project moves forward. The contributions of the broad Django "
"community ultimately have a much greater impact than that of the core "
"developers. We can't do it without YOU!"
msgstr ""

# 08e8259ea8f540b89ee7962ea17481dc
#: ../../internals/contributing/new-contributors.txt:99
msgid "**Err on the side of caution when marking things Ready For Check-in**"
msgstr ""

# bcdb2566fd52486998c304eb21cc0b1a
#: ../../internals/contributing/new-contributors.txt:101
msgid ""
"If you're really not certain if a ticket is ready, don't mark it as such. "
"Leave a comment instead, letting others know your thoughts.  If you're "
"mostly certain, but not completely certain, you might also try asking on IRC "
"to see if someone else can confirm your suspicions."
msgstr ""

# 8fe72f03b7654b9cb2af0543998a4428
#: ../../internals/contributing/new-contributors.txt:106
msgid "**Wait for feedback, and respond to feedback that you receive**"
msgstr ""

# 36779d4fce984d7eaacc7f79ad9ff528
#: ../../internals/contributing/new-contributors.txt:108
msgid ""
"Focus on one or two tickets, see them through from start to finish, and "
"repeat. The shotgun approach of taking on lots of tickets and letting some "
"fall by the wayside ends up doing more harm than good."
msgstr ""

# 1d3887f3f36b453f9c8457f0f973b4c3
#: ../../internals/contributing/new-contributors.txt:112
msgid "**Be rigorous**"
msgstr ""

# 07d5b815cb134313a7d28bf113c9f948
#: ../../internals/contributing/new-contributors.txt:114
msgid ""
"When we say \":pep:`8`, and must have docs and tests\", we mean it. If a "
"patch doesn't have docs and tests, there had better be a good reason. "
"Arguments like \"I couldn't find any existing tests of this feature\" don't "
"carry much weight--while it may be true, that means you have the extra-"
"important job of writing the very first tests for that feature, not that you "
"get a pass from writing tests altogether."
msgstr ""

# c193c84fb25b4ebea80f148da635d640
#: ../../internals/contributing/new-contributors.txt:126
msgid "FAQ"
msgstr ""

# a1b3e15b9bdf438c892cc42fea52fee5
#: ../../internals/contributing/new-contributors.txt:128
msgid ""
"**This ticket I care about has been ignored for days/weeks/months! What can "
"I do to get it committed?**"
msgstr ""

# 2c7b3ee8f4714a73bd1afd9122e48e48
#: ../../internals/contributing/new-contributors.txt:131
msgid ""
"First off, it's not personal. Django is entirely developed by volunteers "
"(even the core developers), and sometimes folks just don't have time. The "
"best thing to do is to send a gentle reminder to the django-developers "
"mailing list asking for review on the ticket, or to bring it up in the "
"#django-dev IRC channel."
msgstr ""

# 1636ff2b9ca3482f9f63fd54bab1c844
#: ../../internals/contributing/new-contributors.txt:137
msgid ""
"**I'm sure my ticket is absolutely 100% perfect, can I mark it as RFC myself?"
"**"
msgstr ""

# bfddf2bd8f4f421899cdb930bfeb270b
#: ../../internals/contributing/new-contributors.txt:140
msgid ""
"Short answer: No. It's always better to get another set of eyes on a ticket. "
"If you're having trouble getting that second set of eyes, see question 1, "
"above."
msgstr ""

# 426c1d2c08d84542b70290154c8e6ad3
#: ../../internals/contributing/new-contributors.txt:144
msgid "**My ticket has been in DDN forever! What should I do?**"
msgstr ""

# a149fc07ccff4001b3757491f2aeef08
#: ../../internals/contributing/new-contributors.txt:146
msgid ""
"Design Decision Needed requires consensus about the right solution.  At the "
"very least it needs consensus among the core developers, and ideally it has "
"consensus from the community as well. The best way to accomplish this is to "
"start a thread on the django-developers mailing list, and for very complex "
"issues to start a wiki page summarizing the problem and the possible "
"solutions."
msgstr ""

# 239a8d546efe4acdaf6cd6ecae7cf7a5
#: ../../internals/contributing/triaging-tickets.txt:3
msgid "Triaging tickets"
msgstr ""

# 3147d31a533340aa9468b7efdeab41dd
#: ../../internals/contributing/triaging-tickets.txt:5
msgid ""
"Django uses Trac_ for managing the work on the code base. Trac is a "
"community-tended garden of the bugs people have found and the features "
"people would like to see added. As in any garden, sometimes there are weeds "
"to be pulled and sometimes there are flowers and vegetables that need "
"picking. We need your help to sort out one from the other, and in the end we "
"all benefit together."
msgstr ""

# d25e82b073a34658ad3f37c53431e54a
#: ../../internals/contributing/triaging-tickets.txt:12
msgid ""
"Like all gardens, we can aspire to perfection but in reality there's no such "
"thing. Even in the most pristine garden there are still snails and insects. "
"In a community garden there are also helpful people who -- with the best of "
"intentions -- fertilize the weeds and poison the roses. It's the job of the "
"community as a whole to self-manage, keep the problems to a minimum, and "
"educate those coming into the community so that they can become valuable "
"contributing members."
msgstr ""

# da87cad2f23845019de94b2e82f7d762
#: ../../internals/contributing/triaging-tickets.txt:20
msgid ""
"Similarly, while we aim for Trac to be a perfect representation of the state "
"of Django's progress, we acknowledge that this simply will not happen. By "
"distributing the load of Trac maintenance to the community, we accept that "
"there will be mistakes. Trac is \"mostly accurate\", and we give allowances "
"for the fact that sometimes it will be wrong. That's okay. We're "
"perfectionists with deadlines."
msgstr ""

# d52258e1635449f4bd876a3638dc37a5
#: ../../internals/contributing/triaging-tickets.txt:27
msgid ""
"We rely on the community to keep participating, keep tickets as accurate as "
"possible, and raise issues for discussion on our mailing lists when there is "
"confusion or disagreement."
msgstr ""

# 1b93058c5da443758957ed7f70c3ca25
#: ../../internals/contributing/triaging-tickets.txt:31
msgid ""
"Django is a community project, and every contribution helps. We can't do "
"this without YOU!"
msgstr ""

# 8f5ef2719bc24554bbd0f500b7185d27
#: ../../internals/contributing/triaging-tickets.txt:35
msgid "Triage workflow"
msgstr ""

# bc6b2762a14f443fbdc5236be058df54
#: ../../internals/contributing/triaging-tickets.txt:37
msgid ""
"Unfortunately, not all bug reports and feature requests in the ticket "
"tracker provide all the :doc:`required details<bugs-and-features>`. A number "
"of tickets have patches, but those patches don't meet all the requirements "
"of a :ref:`good patch<patch-style>`."
msgstr ""

# 65cdb235d4224213ad3520a0678052eb
#: ../../internals/contributing/triaging-tickets.txt:42
msgid ""
"One way to help out is to *triage* tickets that have been created by other "
"users. The core team and several community members work on this regularly, "
"but more help is always appreciated."
msgstr ""

# f84435b1c37e40009c86d609e111b9c0
#: ../../internals/contributing/triaging-tickets.txt:46
msgid ""
"Most of the workflow is based around the concept of a ticket's :ref:`triage "
"stages <triage-stages>`. Each stage describes where in its lifetime a given "
"ticket is at any time. Along with a handful of flags, this attribute easily "
"tells us what and who each ticket is waiting on."
msgstr ""

# c2935b61692946cc833cd8dae071c163
#: ../../internals/contributing/triaging-tickets.txt:51
msgid "Since a picture is worth a thousand words, let's start there:"
msgstr ""

# 2eaa9b67a9b34779861f38875d4a15cf
#: ../../internals/contributing/triaging-tickets.txt:58
msgid "We've got two roles in this diagram:"
msgstr ""

# 82b8032ab71641328f060a8d559e6904
#: ../../internals/contributing/triaging-tickets.txt:60
msgid ""
":doc:`Committers</internals/committers>` (also called core developers): "
"people with commit access who are responsible for making the big decisions, "
"writing large portions of the code and integrating the contributions of the "
"community."
msgstr ""

# 612cf2226dfa4f33ab7eede12044c4e4
#: ../../internals/contributing/triaging-tickets.txt:65
msgid ""
"Ticket triagers: anyone in the Django community who chooses to become "
"involved in Django's development process. Our Trac installation is "
"intentionally left open to the public, and anyone can triage tickets. Django "
"is a community project, and we encourage :ref:`triage by the community<how-"
"can-i-help-with-triaging>`."
msgstr ""

# 22908de0b95a425e8e1ca83817bf8462
#: ../../internals/contributing/triaging-tickets.txt:71
msgid "By way of example, here we see the lifecycle of an average ticket:"
msgstr ""

# 6e29e94a0bd8419f959d72191628675b
#: ../../internals/contributing/triaging-tickets.txt:73
msgid ""
"Alice creates a ticket, and uploads an incomplete patch (no tests, incorrect "
"implementation)."
msgstr ""

# 09212d6af0fb469a9f1cadb48bdb41d6
#: ../../internals/contributing/triaging-tickets.txt:76
msgid ""
"Bob reviews the patch, marks it \"Accepted\", \"needs tests\", and \"patch "
"needs improvement\", and leaves a comment telling Alice how the patch could "
"be improved."
msgstr ""

# 2538a971c8814f078b4b6ce1d384576d
#: ../../internals/contributing/triaging-tickets.txt:80
msgid ""
"Alice updates the patch, adding tests (but not changing the implementation). "
"She removes the two flags."
msgstr ""

# 02b1b62ffc9943ff8fe3fdf1cdac3066
#: ../../internals/contributing/triaging-tickets.txt:83
msgid ""
"Charlie reviews the patch and resets the \"patch needs improvement\" flag "
"with another comment about improving the implementation."
msgstr ""

# 492a338eb0d6404c955909180b65da08
#: ../../internals/contributing/triaging-tickets.txt:86
msgid ""
"Alice updates the patch, fixing the implementation. She removes the \"patch "
"needs improvement\" flag."
msgstr ""

# 3d9970c2190446ba947769b00ec1183b
#: ../../internals/contributing/triaging-tickets.txt:89
msgid "Daisy reviews the patch, and marks it RFC."
msgstr ""

# e47ba34772af418e83bb261f88bb0d59
#: ../../internals/contributing/triaging-tickets.txt:91
msgid ""
"Jacob, a core developer, reviews the RFC patch, applies it to his checkout, "
"and commits it."
msgstr ""

# 05ce599675b14b9a8ef9ad55d7d1ae94
#: ../../internals/contributing/triaging-tickets.txt:94
msgid ""
"Some tickets require much less feedback than this, but then again some "
"tickets require much much more."
msgstr ""

# af4817f9811d42358f0b5bc1aa5f6b9c
#: ../../internals/contributing/triaging-tickets.txt:100
msgid "Triage stages"
msgstr ""

# f736067d26f84032a92de8b933c65e7b
#: ../../internals/contributing/triaging-tickets.txt:102
msgid ""
"Below we describe in more detail the various stages that a ticket may flow "
"through during its lifetime."
msgstr ""

# 36fdbd13ef6c4cd082a97570674a69fa
#: ../../internals/contributing/triaging-tickets.txt:106
msgid "Unreviewed"
msgstr ""

# 3126506b699c47bbb4d942c7c2bcd620
#: ../../internals/contributing/triaging-tickets.txt:108
msgid ""
"The ticket has not been reviewed by anyone who felt qualified to make a "
"judgment about whether the ticket contained a valid issue, a viable feature, "
"or ought to be closed for any of the various reasons."
msgstr ""

# 1aa3a00834bc45dd80fe568d0e899cf0
#: ../../internals/contributing/triaging-tickets.txt:113
msgid "Accepted"
msgstr ""

# c3583b9d3fa14abcbeb581620d19ecc1
#: ../../internals/contributing/triaging-tickets.txt:115
msgid ""
"The big grey area! The absolute meaning of \"accepted\" is that the issue "
"described in the ticket is valid and is in some stage of being worked on. "
"Beyond that there are several considerations:"
msgstr ""

# 5cd4838d02934e09b4710a0cfe656301
#: ../../internals/contributing/triaging-tickets.txt:119
msgid "**Accepted + No Flags**"
msgstr ""

# 3d8c7c63ba7d47a19f04cc6815fbc5a6
#: ../../internals/contributing/triaging-tickets.txt:121
msgid ""
"The ticket is valid, but no one has submitted a patch for it yet. Often this "
"means you could safely start writing a patch for it."
msgstr ""

# 700c87750c3f42ff9f35b5d5e32569c3
#: ../../internals/contributing/triaging-tickets.txt:124
msgid "**Accepted + Has Patch**"
msgstr ""

# 30b16e3ce6eb4eec8c829c588fa8108f
#: ../../internals/contributing/triaging-tickets.txt:126
msgid ""
"The ticket is waiting for people to review the supplied patch. This means "
"downloading the patch and trying it out, verifying that it contains tests "
"and docs, running the test suite with the included patch, and leaving "
"feedback on the ticket."
msgstr ""

# 830e8048e46c4c1b9ce3d7e98db10b54
#: ../../internals/contributing/triaging-tickets.txt:131
msgid "**Accepted + Has Patch + (any other flag)**"
msgstr ""

# 6bffdcc5fde647c289fbb034386c6ab8
#: ../../internals/contributing/triaging-tickets.txt:133
msgid ""
"This means the ticket has been reviewed, and has been found to need further "
"work. \"Needs tests\" and \"Needs documentation\" are self-explanatory. "
"\"Patch needs improvement\" will generally be accompanied by a comment on "
"the ticket explaining what is needed to improve the code."
msgstr ""

# 6e46b8fce3bb4a7b8b387f2205e64f07
#: ../../internals/contributing/triaging-tickets.txt:139
msgid "Design Decision Needed"
msgstr ""

# 3fca22f9b7ce4d938e35309f6b6a663d
#: ../../internals/contributing/triaging-tickets.txt:141
msgid ""
"This stage is for issues which may be contentious, may be backwards "
"incompatible, or otherwise involve high-level design decisions. These issues "
"should be discussed either in the ticket comments or on `django-developers`_."
msgstr ""

# 08c333a3f3f547489dcfdbf8ebb435b3
#: ../../internals/contributing/triaging-tickets.txt:145
msgid ""
"If a ticket has been marked as \"DDN\", decisions are generally eventually "
"made by the core committers, however that is not a requirement. See the :ref:"
"`New contributors' FAQ<new-contributors-faq>` for \"My ticket has been in "
"DDN forever! What should I do?\""
msgstr ""

# dcdd418ac013463b9333478f9707e438
#: ../../internals/contributing/triaging-tickets.txt:150
msgid ""
"This stage will often be used for feature requests. It can also be used for "
"issues that *might* be bugs, depending on opinion or interpretation. Obvious "
"bugs (such as crashes, incorrect query results, or non-compliance with a "
"standard) skip this stage and move straight to \"Accepted\"."
msgstr ""

# c6d71a4e9b71476a8e40d334d3344001
#: ../../internals/contributing/triaging-tickets.txt:156
msgid "Ready For Checkin"
msgstr ""

# 3684be06de0c4b9cb087fb0341e535f2
#: ../../internals/contributing/triaging-tickets.txt:158
msgid ""
"The ticket was reviewed by any member of the community other than the person "
"who supplied the patch and found to meet all the requirements for a commit-"
"ready patch. A core committer now needs to give the patch a final review "
"prior to being committed. See the :ref:`New contributors' FAQ<new-"
"contributors-faq>` for \"My ticket has been in RFC forever! What should I do?"
"\""
msgstr ""

# 76671a9094cb45548350f9f6e7a38a2b
#: ../../internals/contributing/triaging-tickets.txt:166
msgid "Someday/Maybe"
msgstr ""

# 89bebe164131460b8aec3d0f3a77ba03
#: ../../internals/contributing/triaging-tickets.txt:168
msgid ""
"Generally only used for vague/high-level features or design ideas. These "
"tickets are uncommon and overall less useful since they don't describe "
"concrete actionable issues. They are enhancement requests that we might "
"consider adding someday to the framework if an excellent patch is submitted. "
"These tickets are not a high priority."
msgstr ""

# aa143ed6b36b499f99dc33752c9b210a
#: ../../internals/contributing/triaging-tickets.txt:175
msgid "Fixed on a branch"
msgstr ""

# 86807ca69b0747cfbe4a2bf98505a32b
#: ../../internals/contributing/triaging-tickets.txt:177
msgid ""
"Used to indicate that a ticket is resolved as part of a major body of work "
"that will eventually be merged to trunk. Tickets in this stage generally "
"don't need further work. This may happen in the case of major features/"
"refactors in each release cycle, or as part of the annual Google Summer of "
"Code efforts."
msgstr ""

# 0ada7b8b1dad44cd9b5c75c36d531974
#: ../../internals/contributing/triaging-tickets.txt:184
msgid "Other triage attributes"
msgstr ""

# 91e085dd5de14c849864016faa1f5e44
#: ../../internals/contributing/triaging-tickets.txt:186
msgid ""
"A number of flags, appearing as checkboxes in Trac, can be set on a ticket:"
msgstr ""

# de72ff7b1d6e4683913ee2cdd39b8658
#: ../../internals/contributing/triaging-tickets.txt:189
msgid ""
"This means the ticket has an associated :doc:`patch<writing-code/submitting-"
"patches>`. These will be reviewed to see if the patch is \"good\"."
msgstr ""

# fe9834a364c7434faba988d5c31e735e
#: ../../internals/contributing/triaging-tickets.txt:194
msgid ""
"This flag is used for tickets with patches that need associated "
"documentation. Complete documentation of features is a prerequisite before "
"we can check them into the codebase."
msgstr ""

# 7f6ee7b221634092bd1443a06d6e92f3
#: ../../internals/contributing/triaging-tickets.txt:199
msgid ""
"This flags the patch as needing associated unit tests. Again, this is a "
"required part of a valid patch."
msgstr ""

# 2671e151920a4ca1ba04fdbf280aad58
#: ../../internals/contributing/triaging-tickets.txt:203
msgid ""
"This flag means that although the ticket *has* a patch, it's not quite ready "
"for checkin. This could mean the patch no longer applies cleanly, there is a "
"flaw in the implementation, or that the code doesn't meet our standards."
msgstr ""

# 5e15ac09b6f8443bbbacaf1b15f437bd
#: ../../internals/contributing/triaging-tickets.txt:209
msgid "Tickets that would require small, easy, patches."
msgstr ""

# 6cba0a3726604735bcf79e76bac83028
#: ../../internals/contributing/triaging-tickets.txt:211
msgid "Tickets should be categorized by *type* between:"
msgstr ""

# f481731c639840f5b5e8291ea5050f7a
#: ../../internals/contributing/triaging-tickets.txt:214
msgid "For adding something new."
msgstr ""

# 1044ca08e83d4fcea02e0c1a5c8b8548
#: ../../internals/contributing/triaging-tickets.txt:217
msgid "For when an existing thing is broken or not behaving as expected."
msgstr ""

# aa25887a0032439081327fd564310fe4
#: ../../internals/contributing/triaging-tickets.txt:220
msgid ""
"For when nothing is broken but something could be made cleaner, better, "
"faster, stronger."
msgstr ""

# e173f3b37bb64c72ac4295ccdfb830bb
#: ../../internals/contributing/triaging-tickets.txt:223
msgid ""
"Tickets should also be classified into *components* indicating which area of "
"the Django codebase they belong to. This makes tickets better organized and "
"easier to find."
msgstr ""

# 8930c1e4b3124e4d8b0b2ab9158daf52
#: ../../internals/contributing/triaging-tickets.txt:227
msgid ""
"The *severity* attribute is used to identify blockers, that is, issues which "
"should get fixed before releasing the next version of Django. Typically "
"those issues are bugs causing regressions from earlier versions or "
"potentially causing severe data losses. This attribute is quite rarely used "
"and the vast majority of tickets have a severity of \"Normal\"."
msgstr ""

# 6a0af4434ac3424d9a9e5d17ba242524
#: ../../internals/contributing/triaging-tickets.txt:233
msgid ""
"Finally, it is possible to use the *version* attribute to indicate in which "
"version the reported bug was identified."
msgstr ""

# 38cfa7ab43554741a54394c6169cbd5e
#: ../../internals/contributing/triaging-tickets.txt:239
msgid "Closing Tickets"
msgstr ""

# 57677da6c4eb419a80f98680d8da2473
#: ../../internals/contributing/triaging-tickets.txt:241
msgid ""
"When a ticket has completed its useful lifecycle, it's time for it to be "
"closed. Closing a ticket is a big responsibility, though. You have to be "
"sure that the issue is really resolved, and you need to keep in mind that "
"the reporter of the ticket may not be happy to have their ticket closed "
"(unless it's fixed, of course). If you're not certain about closing a "
"ticket, just leave a comment with your thoughts instead."
msgstr ""

# d88170cfd01946c5970d9583e273d0b6
#: ../../internals/contributing/triaging-tickets.txt:248
msgid "If you do close a ticket, you should always make sure of the following:"
msgstr ""

# 1187c605e8164948bcf0e5fdd8a42bb5
#: ../../internals/contributing/triaging-tickets.txt:250
msgid "Be certain that the issue is resolved."
msgstr ""

# a25a279418164c60a19796c4703b14f0
#: ../../internals/contributing/triaging-tickets.txt:252
msgid "Leave a comment explaining the decision to close the ticket."
msgstr ""

# 1204cb3d50254708af62fc597de9c1f3
#: ../../internals/contributing/triaging-tickets.txt:254
msgid ""
"If there is a way they can improve the ticket to reopen it, let them know."
msgstr ""

# eb642b98a0834faa8a81a3b0f76e65d9
#: ../../internals/contributing/triaging-tickets.txt:256
msgid ""
"If the ticket is a duplicate, reference the original ticket. Also cross-"
"reference the closed ticket by leaving a comment in the original one -- this "
"allows to access more related information about the reported bug or "
"requested feature."
msgstr ""

# 331e014e19594a1aadf4a522f299edff
#: ../../internals/contributing/triaging-tickets.txt:261
msgid ""
"**Be polite.** No one likes having their ticket closed. It can be "
"frustrating or even discouraging. The best way to avoid turning people off "
"from contributing to Django is to be polite and friendly and to offer "
"suggestions for how they could improve this ticket and other tickets in the "
"future."
msgstr ""

# aa88038189794f9a9b12ce25bafd3a35
#: ../../internals/contributing/triaging-tickets.txt:267
msgid "A ticket can be resolved in a number of ways:"
msgstr ""

# 25332aac8b674b51969349e5d1bb26b5
#: ../../internals/contributing/triaging-tickets.txt:270
msgid ""
"Used by the core developers once a patch has been rolled into Django and the "
"issue is fixed."
msgstr ""

# 0ecdc3462ac4438d85a14739f378ff13
#: ../../internals/contributing/triaging-tickets.txt:274
msgid ""
"Used if the ticket is found to be incorrect. This means that the issue in "
"the ticket is actually the result of a user error, or describes a problem "
"with something other than Django, or isn't a bug report or feature request "
"at all (for example, some new users submit support queries as tickets)."
msgstr ""

# cdbe9292f3594b6c8356f6b1979bffc3
#: ../../internals/contributing/triaging-tickets.txt:281
msgid ""
"Used when a core developer decides that this request is not appropriate for "
"consideration in Django. This is usually chosen after discussion in the "
"`django-developers`_ mailing list. Feel free to start or join in discussions "
"of \"wontfix\" tickets on the django-developers_ mailing list, but please do "
"not reopen tickets closed as \"wontfix\" by a :doc:`core developer</"
"internals/committers>`."
msgstr ""

# 6927b442f5da4833b30b979dfea85d58
#: ../../internals/contributing/triaging-tickets.txt:289
msgid ""
"Used when another ticket covers the same issue. By closing duplicate "
"tickets, we keep all the discussion in one place, which helps everyone."
msgstr ""

# 69a9858dca434aa39d294a063330c594
#: ../../internals/contributing/triaging-tickets.txt:294
msgid ""
"Used when the ticket doesn't contain enough detail to replicate the original "
"bug."
msgstr ""

# 36ca0516c14c4bafabf8c8b51aad2d7d
#: ../../internals/contributing/triaging-tickets.txt:298
msgid ""
"Used when the ticket does not contain enough information to replicate the "
"reported issue but is potentially still valid. The ticket should be reopened "
"when more information is supplied."
msgstr ""

# a272fe56b20346c19b7bec04f9ef4b23
#: ../../internals/contributing/triaging-tickets.txt:302
msgid ""
"If you believe that the ticket was closed in error -- because you're still "
"having the issue, or it's popped up somewhere else, or the triagers have "
"made a mistake -- please reopen the ticket and provide further information. "
"Again, please do not reopen tickets that have been marked as \"wontfix\" by "
"core developers and bring the issue to django-developers_ instead."
msgstr ""

# a580e4f236f24ec8890d4e1494dd3af6
#: ../../internals/contributing/triaging-tickets.txt:311
msgid "How can I help with triaging?"
msgstr ""

# 124a5b9a7e7f4ce1861690d9e2578d75
#: ../../internals/contributing/triaging-tickets.txt:313
msgid ""
"Although the core developers make the big decisions in the ticket triage "
"process, there's a lot that general community members can do to help the "
"triage process. Really, **ANYONE** can help."
msgstr ""

# f93744242926448399db0ea2e7319161
#: ../../internals/contributing/triaging-tickets.txt:317
msgid ""
"Start by `creating an account on Trac`_. If you have an account but have "
"forgotten your password, you can reset it using the `password reset page`_."
msgstr ""

# 014520581f114cb6ad1846af5bf3a598
#: ../../internals/contributing/triaging-tickets.txt:320
msgid "Then, you can help out by:"
msgstr ""

# 7abccc860f274bc9bc40640235c64bd9
#: ../../internals/contributing/triaging-tickets.txt:322
msgid ""
"Closing \"Unreviewed\" tickets as \"invalid\", \"worksforme\" or \"duplicate."
"\""
msgstr ""

# ef96b9bd7e824297aedb6044b88922b4
#: ../../internals/contributing/triaging-tickets.txt:324
msgid ""
"Promoting \"Unreviewed\" tickets to \"Design decision needed\" if a design "
"decision needs to be made, or \"Accepted\" in case of obvious bugs or "
"sensible, clearly defined, feature requests."
msgstr ""

# cdd1a54cd1ad41d0a01f849c7428fe9f
#: ../../internals/contributing/triaging-tickets.txt:328
msgid ""
"Correcting the \"Needs tests\", \"Needs documentation\", or \"Has patch\" "
"flags for tickets where they are incorrectly set."
msgstr ""

# 251b5fda23d0478c963fd9dd70b38311
#: ../../internals/contributing/triaging-tickets.txt:331
msgid ""
"Setting the \"`Easy pickings`_\" flag for tickets that are small and "
"relatively straightforward."
msgstr ""

# 7ccf1ee4fea14424a169966edc0eb157
#: ../../internals/contributing/triaging-tickets.txt:334
msgid ""
"Checking that old tickets are still valid. If a ticket hasn't seen any "
"activity in a long time, it's possible that the problem has been fixed but "
"the ticket hasn't yet been closed."
msgstr ""

# 815fe45a1a484ae38c700ac2363e2202
#: ../../internals/contributing/triaging-tickets.txt:338
msgid ""
"Contacting the owners of tickets that have been claimed but have not seen "
"any recent activity. If the owner doesn't respond after a week or so, remove "
"the owner's claim on the ticket."
msgstr ""

# 022b97e083134ece9093120e278b5bfa
#: ../../internals/contributing/triaging-tickets.txt:342
msgid ""
"Identifying trends and themes in the tickets. If there a lot of bug reports "
"about a particular part of Django, it may indicate we should consider "
"refactoring that part of the code. If a trend is emerging, you should raise "
"it for discussion (referencing the relevant tickets) on `django-developers`_."
msgstr ""

# 07b47c81a83844e382fceeece0e1fdd0
#: ../../internals/contributing/triaging-tickets.txt:348
msgid "Set the *type* of tickets that are still uncategorized."
msgstr ""

# 349ada6604c041b0a6bf094b53fa8021
#: ../../internals/contributing/triaging-tickets.txt:350
msgid ""
"Verify if patches submitted by other users are correct. If they do and also "
"contain appropriate documentation and tests then move them to the \"Ready "
"for Checkin\" stage. If they don't then leave a comment to explain why and "
"set the corresponding flags (\"Patch needs improvement\", \"Needs tests\" "
"etc.)."
msgstr ""

# 5912c5dcd877448b9762e951dd08baa0
#: ../../internals/contributing/triaging-tickets.txt:358
msgid ""
"The `Reports page`_ contains links to many useful Trac queries, including "
"several that are useful for triaging tickets and reviewing patches as "
"suggested above."
msgstr ""

# 064446115ace4fd5ade1c4d45d07cd4a
#: ../../internals/contributing/triaging-tickets.txt:362
msgid "You can also find more :doc:`new-contributors`."
msgstr ""

# bff3240c6e6e4381a17d36754c0f9bff
#: ../../internals/contributing/triaging-tickets.txt:366
msgid ""
"However, we do ask the following of all general community members working in "
"the ticket database:"
msgstr ""

# 0171d1b2b50946f2ae88b46308ae6b36
#: ../../internals/contributing/triaging-tickets.txt:369
msgid ""
"Please **don't** close tickets as \"wontfix.\" The core developers will make "
"the final determination of the fate of a ticket, usually after consultation "
"with the community."
msgstr ""

# 27692223055b4f729392c36a8b55848e
#: ../../internals/contributing/triaging-tickets.txt:373
msgid ""
"Please **don't** promote your own tickets to \"Ready for checkin\". You may "
"mark other people's tickets which you've reviewed as \"Ready for checkin\", "
"but you should get at minimum one other community member to review a patch "
"that you submit."
msgstr ""

# 579c4a58f7984ba798dda6737e427e16
#: ../../internals/contributing/triaging-tickets.txt:378
msgid ""
"Please **don't** reverse a decision that has been made by a :doc:`core "
"developer</internals/committers>`. If you disagree with a decision that has "
"been made, please post a message to `django-developers`_."
msgstr ""

# 43976966fdbe486785cccef26d544bf3
#: ../../internals/contributing/triaging-tickets.txt:382
msgid ""
"If you're unsure if you should be making a change, don't make the change but "
"instead leave a comment with your concerns on the ticket, or post a message "
"to `django-developers`_. It's okay to be unsure, but your input is still "
"valuable."
msgstr ""

# ff31d8376c564fd38408efcb7ea60cde
#: ../../internals/contributing/writing-code/branch-policy.txt:3
msgid "Branch policy"
msgstr ""

# e6783fd51fbd4dc5b81211b3c489026d
#: ../../internals/contributing/writing-code/branch-policy.txt:5
msgid ""
"In general, the trunk must be kept stable. People should be able to run "
"production sites against the trunk at any time. Additionally, commits to "
"trunk ought to be as atomic as possible -- smaller changes are better. Thus, "
"large feature changes -- that is, changes too large to be encapsulated in a "
"single patch, or changes that need multiple eyes on them -- must happen on "
"dedicated branches."
msgstr ""

# 5d9aa0f888224eb7bb63fc34729ff209
#: ../../internals/contributing/writing-code/branch-policy.txt:12
msgid ""
"This means that if you want to work on a large feature -- anything that "
"would take more than a single patch, or requires large-scale refactoring -- "
"you need to do it on a feature branch. Our development process recognizes "
"two options for feature branches:"
msgstr ""

# 511f41f6872d453ba0c1cc4628ae3c59
#: ../../internals/contributing/writing-code/branch-policy.txt:17
msgid ""
"Feature branches using a distributed revision control system like Git_, "
"Mercurial_, Bazaar_, etc."
msgstr ""

# 0fc5ada11ca24ac3b31c756db9f10a6a
#: ../../internals/contributing/writing-code/branch-policy.txt:20
msgid ""
"If you're familiar with one of these tools, this is probably your best "
"option since it doesn't require any support or buy-in from the Django core "
"developers."
msgstr ""

# 0c5919a05fd84b7a9d0fbf9a5828b1c2
#: ../../internals/contributing/writing-code/branch-policy.txt:24
msgid ""
"However, do keep in mind that Django will continue to use Subversion for the "
"foreseeable future, and this will naturally limit the recognition of your "
"branch. Further, if your branch becomes eligible for merging to trunk you'll "
"need to find a core developer familiar with your DVCS of choice who'll "
"actually perform the merge."
msgstr ""

# 4e74062f4dbc47da9fc2ce36edeb9071
#: ../../internals/contributing/writing-code/branch-policy.txt:30
msgid ""
"If you do decided to start a distributed branch of Django and choose to make "
"it public, please add the branch to the `Django branches`_ wiki page."
msgstr ""

# 4713d08807194eb7b5895d68722da9e8
#: ../../internals/contributing/writing-code/branch-policy.txt:34
msgid ""
"Feature branches using SVN have a higher bar. If you want a branch in SVN "
"itself, you'll need a \"mentor\" among the :doc:`core committers </internals/"
"committers>`. This person is responsible for actually creating the branch, "
"monitoring your process (see below), and ultimately merging the branch into "
"trunk."
msgstr ""

# f882f8d029ab4952b5ceb335a67d4831
#: ../../internals/contributing/writing-code/branch-policy.txt:40
msgid ""
"If you want a feature branch in SVN, you'll need to ask in `django-"
"developers`_ for a mentor."
msgstr ""

# e8470952698d4ddb8a2e35a5bc2a5e12
#: ../../internals/contributing/writing-code/branch-policy.txt:49
msgid "Branch rules"
msgstr ""

# 65d2930f815d484c886c3b3a721a831a
#: ../../internals/contributing/writing-code/branch-policy.txt:51
msgid ""
"We've got a few rules for branches born out of experience with what makes a "
"successful Django branch."
msgstr ""

# 1089e0c52db9489d9fa32ce167d94afc
#: ../../internals/contributing/writing-code/branch-policy.txt:54
msgid ""
"DVCS branches are obviously not under central control, so we have no way of "
"enforcing these rules. However, if you're using a DVCS, following these "
"rules will give you the best chance of having a successful branch (read: "
"merged back to trunk)."
msgstr ""

# 8b84007e098e4c27a5d401b9c63c50b1
#: ../../internals/contributing/writing-code/branch-policy.txt:59
msgid ""
"Developers with branches in SVN, however, **must** follow these rules. The "
"branch mentor will keep on eye on the branch and **will delete it** if these "
"rules are broken."
msgstr ""

# 2b8788ce415442a2b2aa9c8a79492c4a
#: ../../internals/contributing/writing-code/branch-policy.txt:63
msgid ""
"Only branch entire copies of the Django tree, even if work is only happening "
"on part of that tree. This makes it painless to switch to a branch."
msgstr ""

# 7f88522121e147aba2d14fdd445abe2a
#: ../../internals/contributing/writing-code/branch-policy.txt:67
msgid ""
"Merge changes from trunk no less than once a week, and preferably every "
"couple-three days."
msgstr ""

# 3e3a09b62eee4448b8e45ac53b22e232
#: ../../internals/contributing/writing-code/branch-policy.txt:70
msgid ""
"In our experience, doing regular trunk merges is often the difference "
"between a successful branch and one that fizzles and dies."
msgstr ""

# dbbc5a40673d4832b9fc371104b45094
#: ../../internals/contributing/writing-code/branch-policy.txt:73
msgid ""
"If you're working on an SVN branch, you should be using `svnmerge.py`_ to "
"track merges from trunk."
msgstr ""

# 6ac26023fd804c6ab27fe6cba2cc3415
#: ../../internals/contributing/writing-code/branch-policy.txt:76
msgid ""
"Keep tests passing and documentation up-to-date. As with patches, we'll only "
"merge a branch that comes with tests and documentation."
msgstr ""

# c3ad38bab8c44ff8814a36b9f38de8ba
#: ../../internals/contributing/writing-code/branch-policy.txt:81
msgid ""
"Once the branch is stable and ready to be merged into the trunk, alert "
"`django-developers`_."
msgstr ""

# 0da0b5c780a74494a093aef5a8ce1e3d
#: ../../internals/contributing/writing-code/branch-policy.txt:84
msgid ""
"After a branch has been merged, it should be considered \"dead\"; write "
"access to it will be disabled, and old branches will be periodically "
"\"trimmed.\" To keep our SVN wrangling to a minimum, we won't be merging "
"from a given branch into the trunk more than once."
msgstr ""

# 9849c5c1319240d49a8837e1415e10e7
#: ../../internals/contributing/writing-code/branch-policy.txt:90
msgid "Using branches"
msgstr ""

# 4a7adb31a0ad4fb1a60b3a924bfa205d
#: ../../internals/contributing/writing-code/branch-policy.txt:92
msgid "To use a branch, you'll need to do two things:"
msgstr ""

# 0d327fb66bc84eb18bd5aa5c6ad90f50
#: ../../internals/contributing/writing-code/branch-policy.txt:94
msgid "Get the branch's code through Subversion."
msgstr ""

# 67c2852078e4450289ca3a3592a9d870
#: ../../internals/contributing/writing-code/branch-policy.txt:96
msgid ""
"Point your Python ``site-packages`` directory at the branch's version of the "
"``django`` package rather than the version you already have installed."
msgstr ""

# be68aa77970a4a68aa39be852fb8a093
#: ../../internals/contributing/writing-code/branch-policy.txt:101
msgid "Getting the code from Subversion"
msgstr ""

# 7ee2940e7631474182c878f33dc88985
#: ../../internals/contributing/writing-code/branch-policy.txt:103
msgid ""
"To get the latest version of a branch's code, check it out using Subversion:"
msgstr ""

# 4a97ed392b3542bf848b9ffad374c858
#: ../../internals/contributing/writing-code/branch-policy.txt:109
msgid ""
"...where ``<branch>`` is the branch's name. See the `list of branch names`_."
msgstr ""

# 731ad419a37b44c2b108c27baeb5d90f
#: ../../internals/contributing/writing-code/branch-policy.txt:111
msgid ""
"Alternatively, you can automatically convert an existing directory of the "
"Django source code as long as you've checked it out via Subversion. To do "
"the conversion, execute this command from within your ``django`` directory:"
msgstr ""

# d0c5155d1b674af481ead382cee6a6fb
#: ../../internals/contributing/writing-code/branch-policy.txt:119
msgid ""
"The advantage of using ``svn switch`` instead of ``svn co`` is that the "
"``switch`` command retains any changes you might have made to your local "
"copy of the code. It attempts to merge those changes into the \"switched\" "
"code. The disadvantage is that it may cause conflicts with your local "
"changes if the \"switched\" code has altered the same lines of code."
msgstr ""

# f17fe18f78fe487fa1aa5b9abf35401b
#: ../../internals/contributing/writing-code/branch-policy.txt:125
msgid ""
"(Note that if you use ``svn switch``, you don't need to point Python at the "
"new version, as explained in the next section.)"
msgstr ""

# 782753c840cf478e9a5559f12dca201b
#: ../../internals/contributing/writing-code/branch-policy.txt:133
msgid "Pointing Python at the new Django version"
msgstr ""

# bdffb3ef315a46d1a9b3510ff28dd57f
#: ../../internals/contributing/writing-code/branch-policy.txt:135
msgid ""
"Once you've retrieved the branch's code, you'll need to change your Python "
"``site-packages`` directory so that it points to the branch version of the "
"``django`` directory. (The ``site-packages`` directory is somewhere such as "
"``/usr/lib/python2.7/site-packages`` or ``/usr/local/lib/python2.7/site-"
"packages`` or ``C:\\Python\\site-packages``.)"
msgstr ""

# 8fb8afaa8ec24bed9b8fe6cbb34a54af
#: ../../internals/contributing/writing-code/branch-policy.txt:141
msgid ""
"The simplest way to do this is by renaming the old ``django`` directory to "
"``django.OLD`` and moving the trunk version of the code into the directory "
"and calling it ``django``."
msgstr ""

# c846aebf367743ff81df6448f5943984
#: ../../internals/contributing/writing-code/branch-policy.txt:145
msgid ""
"Alternatively, you can use a symlink called ``django`` that points to the "
"location of the branch's ``django`` package. If you want to switch back, "
"just change the symlink to point to the old code."
msgstr ""

# cc81ced32c4c4e54b05bc94fbca88f44
#: ../../internals/contributing/writing-code/branch-policy.txt:149
msgid ""
"A third option is to use a path file (``<something>.pth``). This is a "
"feature of the :mod:`site` module. First, make sure there are no files, "
"directories or symlinks named ``django`` in your ``site-packages`` "
"directory. Then create a text file named ``django.pth`` and save it to your "
"``site-packages`` directory. That file should contain a path to your copy of "
"Django on a single line and optional comments. Here is an example that "
"points to multiple branches. Just uncomment the line for the branch you want "
"to use ('trunk' in this example) and make sure all other lines are "
"commented::"
msgstr ""

# eb2c023281bf4f4a96056627bdb6286e
#: ../../internals/contributing/writing-code/coding-style.txt:3
msgid "Coding style"
msgstr ""

# f4c974381eda4b9b9f33be1d03d6e1fe
#: ../../internals/contributing/writing-code/coding-style.txt:5
msgid ""
"Please follow these coding standards when writing code for inclusion in "
"Django."
msgstr ""

# 349a33c9ac0f428cbcc699fe70a68c5d
#: ../../internals/contributing/writing-code/coding-style.txt:8
msgid "Python style"
msgstr ""

# dd8111547e94449a9bb91b5547ea1a69
#: ../../internals/contributing/writing-code/coding-style.txt:10
msgid "Unless otherwise specified, follow :pep:`8`."
msgstr ""

# 0623717bfeb7407a9b83da3070831103
#: ../../internals/contributing/writing-code/coding-style.txt:12
msgid ""
"You could use a tool like `pep8`_ to check for some problems in this area, "
"but remember that :pep:`8` is only a guide, so respect the style of the "
"surrounding code as a primary goal."
msgstr ""

# 96bcd089f1ef4d618bf8561f68b4b66f
#: ../../internals/contributing/writing-code/coding-style.txt:16
msgid ""
"One big exception to :pep:`8` is our preference of longer line lengths. "
"We're well into the 21st Century, and we have high-resolution computer "
"screens that can fit way more than 79 characters on a screen. Don't limit "
"lines of code to 79 characters if it means the code looks significantly "
"uglier or is harder to read."
msgstr ""

# 68195e7586cc4f2f909bf0715a0bd433
#: ../../internals/contributing/writing-code/coding-style.txt:22
msgid "Use four spaces for indentation."
msgstr ""

# 173c5d98354b410985815f2862642b19
#: ../../internals/contributing/writing-code/coding-style.txt:24
msgid ""
"Use underscores, not camelCase, for variable, function and method names (i."
"e. ``poll.get_unique_voters()``, not ``poll.getUniqueVoters``)."
msgstr ""

# 9f9e10b364a64a5eac82197d84eff96e
#: ../../internals/contributing/writing-code/coding-style.txt:27
msgid ""
"Use ``InitialCaps`` for class names (or for factory functions that return "
"classes)."
msgstr ""

# 7b54a8379c484b77a4d6ecce021f44a0
#: ../../internals/contributing/writing-code/coding-style.txt:30
msgid "In docstrings, use \"action words\" such as::"
msgstr ""

# d01f18bf7e12402c9c00baeeff999e68
#: ../../internals/contributing/writing-code/coding-style.txt:38
msgid "Here's an example of what not to do::"
msgstr ""

# 8106e69b0fea4c599fbe8e891110153f
#: ../../internals/contributing/writing-code/coding-style.txt:47
msgid "Template style"
msgstr ""

# 49fe30e953694fd29f878620e7a77c37
#: ../../internals/contributing/writing-code/coding-style.txt:49
msgid ""
"In Django template code, put one (and only one) space between the curly "
"brackets and the tag contents."
msgstr ""

# e123f234b24e4e27947e0ab7919853fe
#: ../../internals/contributing/writing-code/coding-style.txt:52
msgid "Do this:"
msgstr ""

# c440b117230c4ed380dbddb8b66fb553
#: ../../internals/contributing/writing-code/coding-style.txt:58
msgid "Don't do this:"
msgstr ""

# fb5361f2f23c46619097ae39664dded2
#: ../../internals/contributing/writing-code/coding-style.txt:65
msgid "View style"
msgstr ""

# 1e3af65fc52d40b1b554c5bf0e66ee92
#: ../../internals/contributing/writing-code/coding-style.txt:67
msgid ""
"In Django views, the first parameter in a view function should be called "
"``request``."
msgstr ""

# 1e29c2c4472949f08f83207b98621a8e
# 19771791fda84b6aa08a14aa36b41ad1
# f5621a264ce14292b0f562e7d1e8f929
#: ../../internals/contributing/writing-code/coding-style.txt:70
#: ../../internals/contributing/writing-code/coding-style.txt:86
#: ../../internals/contributing/writing-code/coding-style.txt:101
msgid "Do this::"
msgstr ""

# 27c37fd313f84ee8a8ba6aa0fb3515f0
# df61ececc7fe42698a3ee59f5d9bbe85
# 9f9a3ca99e3147e49bee12bacbd283c9
#: ../../internals/contributing/writing-code/coding-style.txt:75
#: ../../internals/contributing/writing-code/coding-style.txt:92
#: ../../internals/contributing/writing-code/coding-style.txt:110
msgid "Don't do this::"
msgstr ""

# dfdf89efd6164608bac5ad26cbde5139
#: ../../internals/contributing/writing-code/coding-style.txt:81
msgid "Model style"
msgstr ""

# d0f5040d876047c5a5bf6907e8297c01
#: ../../internals/contributing/writing-code/coding-style.txt:83
msgid ""
"Field names should be all lowercase, using underscores instead of camelCase."
msgstr ""

# dd16774763c94150a3a7aa99ef731f72
#: ../../internals/contributing/writing-code/coding-style.txt:98
msgid ""
"The ``class Meta`` should appear *after* the fields are defined, with a "
"single blank line separating the fields and the class definition."
msgstr ""

# fd57de9744a34c09a03a3be3d62e53ad
#: ../../internals/contributing/writing-code/coding-style.txt:118
msgid "Don't do this, either::"
msgstr ""

# 5a742491f9cc43b3886fba2b1f8e32e8
#: ../../internals/contributing/writing-code/coding-style.txt:127
msgid ""
"The order of model inner classes and standard methods should be as follows "
"(noting that these are not all required):"
msgstr ""

# a01051d9919b4730a3f003bea759f36b
#: ../../internals/contributing/writing-code/coding-style.txt:130
msgid "All database fields"
msgstr ""

# 9ddb0235a927430c86d613311d840523
#: ../../internals/contributing/writing-code/coding-style.txt:131
msgid "Custom manager attributes"
msgstr ""

# bfa9b26a7ee54b8a9f1d7854cf9a72c6
#: ../../internals/contributing/writing-code/coding-style.txt:132
msgid "``class Meta``"
msgstr ""

# 307783d5b8ff446ebfba377c25fdc85d
#: ../../internals/contributing/writing-code/coding-style.txt:133
msgid "``def __unicode__()``"
msgstr ""

# 4a6aff420591426c8886ff27d3aef63a
#: ../../internals/contributing/writing-code/coding-style.txt:134
msgid "``def __str__()``"
msgstr ""

# ae3396e1ba4c40ce85ab467d6f71b928
#: ../../internals/contributing/writing-code/coding-style.txt:135
msgid "``def save()``"
msgstr ""

# 7eac2aa375f6468aa5bb9101e98e45cf
#: ../../internals/contributing/writing-code/coding-style.txt:136
msgid "``def get_absolute_url()``"
msgstr ""

# ca962cb292da48cebd5f5517b7062b42
#: ../../internals/contributing/writing-code/coding-style.txt:137
msgid "Any custom methods"
msgstr ""

# 410d96e2e70947fbb05f795d048269cb
#: ../../internals/contributing/writing-code/coding-style.txt:139
msgid ""
"If ``choices`` is defined for a given model field, define the choices as a "
"tuple of tuples, with an all-uppercase name, either near the top of the "
"model module or just above the model class. Example::"
msgstr ""

# f4ce106c29624bafaa5b586815df8b55
#: ../../internals/contributing/writing-code/coding-style.txt:149
msgid "Use of ``django.conf.settings``"
msgstr ""

# 37039918096e49a5afe2dcf5b1917192
#: ../../internals/contributing/writing-code/coding-style.txt:151
msgid ""
"Modules should not in general use settings stored in ``django.conf."
"settings`` at the top level (i.e. evaluated when the module is imported). "
"The explanation for this is as follows:"
msgstr ""

# 48390870f5dd42a08cdf23de985251ff
#: ../../internals/contributing/writing-code/coding-style.txt:155
msgid ""
"Manual configuration of settings (i.e. not relying on the "
"``DJANGO_SETTINGS_MODULE`` environment variable) is allowed and possible as "
"follows::"
msgstr ""

# 8225c8c4bf884c2f8f5ae3d2450b9387
#: ../../internals/contributing/writing-code/coding-style.txt:163
msgid ""
"However, if any setting is accessed before the ``settings.configure`` line, "
"this will not work. (Internally, ``settings`` is a ``LazyObject`` which "
"configures itself automatically when the settings are accessed if it has not "
"already been configured)."
msgstr ""

# 281b59301fc14c4ab77a01f6faf3609b
#: ../../internals/contributing/writing-code/coding-style.txt:168
msgid "So, if there is a module containing some code as follows::"
msgstr ""

# b2349ed9f81543b7b20c68c8f2e0d58e
#: ../../internals/contributing/writing-code/coding-style.txt:175
msgid ""
"...then importing this module will cause the settings object to be "
"configured. That means that the ability for third parties to import the "
"module at the top level is incompatible with the ability to configure the "
"settings object manually, or makes it very difficult in some circumstances."
msgstr ""

# c31cd6ef52af4f8ba2c4a9e7bee8c3d7
#: ../../internals/contributing/writing-code/coding-style.txt:180
msgid ""
"Instead of the above code, a level of laziness or indirection must be used, "
"such as :class:`django.utils.functional.LazyObject`, :func:`django.utils."
"functional.lazy` or ``lambda``."
msgstr ""

# ee5cad0a68a540d5a53174dbe43fa1bc
#: ../../internals/contributing/writing-code/coding-style.txt:185
msgid "Miscellaneous"
msgstr ""

# 71c318237e684d87968cc72c0938aaa8
#: ../../internals/contributing/writing-code/coding-style.txt:187
msgid ""
"Mark all strings for internationalization; see the :doc:`i18n documentation "
"</topics/i18n/index>` for details."
msgstr ""

# 71175d3a70b4484b90e83d2637b12836
#: ../../internals/contributing/writing-code/coding-style.txt:190
msgid ""
"Remove ``import`` statements that are no longer used when you change code. "
"The most common tools for this task are `pyflakes`_ and `pylint`_."
msgstr ""

# c6dd0cef0cc8400986ba44da60dd2f4f
#: ../../internals/contributing/writing-code/coding-style.txt:193
msgid ""
"Systematically remove all trailing whitespaces from your code as those add "
"unnecessary bytes, add visual clutter to the patches and can also "
"occasionally cause unnecessary merge conflicts. Some IDE's can be configured "
"to automatically remove them and most VCS tools can be set to highlight them "
"in diff outputs. Note, however, that patches which only remove whitespace "
"(or only make changes for nominal :pep:`8` conformance) are likely to be "
"rejected, since they only introduce noise rather than code improvement. Tidy "
"up when you're next changing code in the area."
msgstr ""

# ebf47512bdee4f64b3ee8c5ff2eff6cf
#: ../../internals/contributing/writing-code/coding-style.txt:202
msgid ""
"Please don't put your name in the code you contribute. Our policy is to keep "
"contributors' names in the ``AUTHORS`` file distributed with Django -- not "
"scattered throughout the codebase itself. Feel free to include a change to "
"the ``AUTHORS`` file in your patch if you make more than a single trivial "
"change."
msgstr ""

# 82b431b357544b74b7ff29314bbf6704
#: ../../internals/contributing/writing-code/index.txt:3
msgid "Writing code"
msgstr ""

# 4bb193131e8f4fe69337c74522dd70c7
#: ../../internals/contributing/writing-code/index.txt:5
msgid ""
"So you'd like to write some code to improve Django. Awesome! Browse the "
"following sections to find out how to give your code patches the best "
"chances to be included in Django core:"
msgstr ""

# 4572007291c247fab5dd5e7ec4239f2e
#: ../../internals/contributing/writing-code/submitting-patches.txt:3
msgid "Submitting patches"
msgstr ""

# 2ba2b48bc09b4f7b9d5fb0c961297e49
#: ../../internals/contributing/writing-code/submitting-patches.txt:5
msgid ""
"We're always grateful for patches to Django's code. Indeed, bug reports with "
"associated patches will get fixed *far* more quickly than those without "
"patches."
msgstr ""

# 617e237c9883411e9efbc82901589254
#: ../../internals/contributing/writing-code/submitting-patches.txt:10
msgid "\"Claiming\" tickets"
msgstr ""

# fdd4102d9ec6490da50acf8bb1485616
#: ../../internals/contributing/writing-code/submitting-patches.txt:12
msgid ""
"In an open-source project with hundreds of contributors around the world, "
"it's important to manage communication efficiently so that work doesn't get "
"duplicated and contributors can be as effective as possible. Hence, our "
"policy is for contributors to \"claim\" tickets in order to let other "
"developers know that a particular bug or feature is being worked on."
msgstr ""

# 7cc38585075548ceacf3e895cc777c93
#: ../../internals/contributing/writing-code/submitting-patches.txt:18
msgid ""
"If you have identified a contribution you want to make and you're capable of "
"fixing it (as measured by your coding ability, knowledge of Django internals "
"and time availability), claim it by following these steps:"
msgstr ""

# 57adcc3a2d3540ee84b55f6fd67bd37e
#: ../../internals/contributing/writing-code/submitting-patches.txt:22
msgid ""
"`Create an account`_ to use in our ticket system. If you have an account but "
"have forgotten your password, you can reset it using the `password reset "
"page`_."
msgstr ""

# b3da9fcd1bc14bbba27470b549825b47
#: ../../internals/contributing/writing-code/submitting-patches.txt:26
msgid ""
"If a ticket for this issue doesn't exist yet, create one in our `ticket "
"tracker`_."
msgstr ""

# 837863b480fa4413aebe4403cb94fc7a
#: ../../internals/contributing/writing-code/submitting-patches.txt:29
msgid ""
"If a ticket for this issue already exists, make sure nobody else has claimed "
"it. To do this, look at the \"Assigned to\" section of the ticket. If it's "
"assigned to \"nobody,\" then it's available to be claimed. Otherwise, "
"somebody else is working on this ticket, and you either find another bug/"
"feature to work on, or contact the developer working on the ticket to offer "
"your help."
msgstr ""

# a673cf0f0ece4d3492efcbde28ac59fe
#: ../../internals/contributing/writing-code/submitting-patches.txt:36
msgid ""
"Log into your account, if you haven't already, by clicking \"Login\" in the "
"upper right of the ticket page."
msgstr ""

# 2cc363afd4324231a02caec95276cc24
#: ../../internals/contributing/writing-code/submitting-patches.txt:39
msgid "Claim the ticket:"
msgstr ""

# eab81fd485da48629617aa853364b187
#: ../../internals/contributing/writing-code/submitting-patches.txt:41
msgid ""
"click the \"accept\" radio button under \"Action\" near the bottom of the "
"page,"
msgstr ""

# 9387405b23494cbba407710f8e80d537
#: ../../internals/contributing/writing-code/submitting-patches.txt:43
msgid "then click \"Submit changes.\""
msgstr ""

# 9dbf3fab75a54433920d827fccb85a44
#: ../../internals/contributing/writing-code/submitting-patches.txt:49
msgid "Ticket claimers' responsibility"
msgstr ""

# 669d486e91d74d5d91c7558d1e9b8b08
#: ../../internals/contributing/writing-code/submitting-patches.txt:51
msgid ""
"Once you've claimed a ticket, you have a responsibility to work on that "
"ticket in a reasonably timely fashion. If you don't have time to work on it, "
"either unclaim it or don't claim it in the first place!"
msgstr ""

# 429a1acefcf64c93905af798672b9080
#: ../../internals/contributing/writing-code/submitting-patches.txt:55
msgid ""
"If there's no sign of progress on a particular claimed ticket for a week or "
"two, another developer may ask you to relinquish the ticket claim so that "
"it's no longer monopolized and somebody else can claim it."
msgstr ""

# 5c40f6a4e64c4e9da2629bee0d4f6e13
#: ../../internals/contributing/writing-code/submitting-patches.txt:59
msgid ""
"If you've claimed a ticket and it's taking a long time (days or weeks) to "
"code, keep everybody updated by posting comments on the ticket. If you don't "
"provide regular updates, and you don't respond to a request for a progress "
"report, your claim on the ticket may be revoked. As always, more "
"communication is better than less communication!"
msgstr ""

# f6674726c64d485f943066d49e69f3e7
#: ../../internals/contributing/writing-code/submitting-patches.txt:66
msgid "Which tickets should be claimed?"
msgstr ""

# f9323887b9c54759bb6b630a1c2b3496
#: ../../internals/contributing/writing-code/submitting-patches.txt:68
msgid ""
"Of course, going through the steps of claiming tickets is overkill in some "
"cases. In the case of small changes, such as typos in the documentation or "
"small bugs that will only take a few minutes to fix, you don't need to jump "
"through the hoops of claiming tickets. Just submit your patch and be done "
"with it."
msgstr ""

# f69463442c01455f8cf1d3e335e1b286
#: ../../internals/contributing/writing-code/submitting-patches.txt:77
msgid "Patch style"
msgstr ""

# bb150262ab5a4869bc541997fe402a9d
#: ../../internals/contributing/writing-code/submitting-patches.txt:79
msgid "Make sure your code matches our :doc:`coding-style`."
msgstr ""

# d8ae26ba9906482e991ec7fba17f34a3
#: ../../internals/contributing/writing-code/submitting-patches.txt:81
msgid ""
"Submit patches in the format returned by the ``svn diff`` command. An "
"exception is for code changes that are described more clearly in plain "
"English than in code. Indentation is the most common example; it's hard to "
"read patches when the only difference in code is that it's indented."
msgstr ""

# 13f22b9be54b4bc8ab410095ac2705ed
#: ../../internals/contributing/writing-code/submitting-patches.txt:87
msgid "Patches in ``git diff`` format are also acceptable."
msgstr ""

# db0440c9bc424f54ba7e6782ff9dbe26
#: ../../internals/contributing/writing-code/submitting-patches.txt:89
msgid ""
"When creating patches, always run ``svn diff`` from the top-level ``trunk`` "
"directory -- i.e. the one that contains ``django``, ``docs``, ``tests``, "
"``AUTHORS``, etc. This makes it easy for other people to apply your patches."
msgstr ""

# 692d277c7e0d4d3997e7df3290968345
#: ../../internals/contributing/writing-code/submitting-patches.txt:94
msgid ""
"Attach patches to a ticket in the `ticket tracker`_, using the \"attach file"
"\" button. Please *don't* put the patch in the ticket description or comment "
"unless it's a single line patch."
msgstr ""

# fd68bd7843524490a93910269529546d
#: ../../internals/contributing/writing-code/submitting-patches.txt:98
msgid ""
"Name the patch file with a ``.diff`` extension; this will let the ticket "
"tracker apply correct syntax highlighting, which is quite helpful."
msgstr ""

# 9af0480b3ce040908cbaeb0746a0e0f6
#: ../../internals/contributing/writing-code/submitting-patches.txt:101
msgid ""
"Check the \"Has patch\" box on the ticket details. This will make it obvious "
"that the ticket includes a patch, and it will add the ticket to the `list of "
"tickets with patches`_."
msgstr ""

# 6a27f3f659424698aadbd4e79185e7d2
#: ../../internals/contributing/writing-code/submitting-patches.txt:105
msgid ""
"The code required to fix a problem or add a feature is an essential part of "
"a patch, but it is not the only part. A good patch should also include a "
"regression test to validate the behavior that has been fixed and to prevent "
"the problem from arising again. Also, if some tickets are relevant to the "
"code that you've written, mention the ticket numbers in some comments in the "
"test so that one can easily trace back the relevant discussions after your "
"patch gets committed and the tickets get closed."
msgstr ""

# 1f199ddd91424e4f8f97fcff19f5bf5c
#: ../../internals/contributing/writing-code/submitting-patches.txt:113
msgid ""
"If the code associated with a patch adds a new feature, or modifies behavior "
"of an existing feature, the patch should also contain documentation."
msgstr ""

# b79d22c3bfd4478293fdd1f21a97a754
#: ../../internals/contributing/writing-code/submitting-patches.txt:118
msgid "Non-trivial patches"
msgstr ""

# a113bd1e793847cca56cde3ed1baf8dc
#: ../../internals/contributing/writing-code/submitting-patches.txt:120
msgid ""
"A \"non-trivial\" patch is one that is more than a simple bug fix. It's a "
"patch that introduces Django functionality and makes some sort of design "
"decision."
msgstr ""

# b463591910ce4523896fe649c3238308
#: ../../internals/contributing/writing-code/submitting-patches.txt:123
msgid ""
"If you provide a non-trivial patch, include evidence that alternatives have "
"been discussed on `django-developers`_. If you're not sure whether your "
"patch should be considered non-trivial, just ask."
msgstr ""

# efe046ef1d5f496e850a26949d8fb95c
#: ../../internals/contributing/writing-code/submitting-patches.txt:128
msgid "Javascript patches"
msgstr ""

# 1f0020b8e91b42b18c35917b6d08f544
#: ../../internals/contributing/writing-code/submitting-patches.txt:132
msgid ""
"Django's admin system leverages the jQuery framework to increase the "
"capabilities of the admin interface. In conjunction, there is an emphasis on "
"admin javascript performance and minimizing overall admin media file size. "
"Serving compressed or \"minified\" versions of javascript files is "
"considered best practice in this regard."
msgstr ""

# b9878ef590304a478d5e95ac77ae2964
#: ../../internals/contributing/writing-code/submitting-patches.txt:138
msgid ""
"To that end, patches for javascript files should include both the original "
"code for future development (e.g. ``foo.js``), and a compressed version for "
"production use (e.g. ``foo.min.js``). Any links to the file in the codebase "
"should point to the compressed version."
msgstr ""

# 33941ad42ebc4d2594bc6d7b46a18a74
#: ../../internals/contributing/writing-code/submitting-patches.txt:143
msgid ""
"To simplify the process of providing optimized javascript code, Django "
"includes a handy script which should be used to create a \"minified\" "
"version. This script is located at ``django/contrib/admin/static/js/compress."
"py``."
msgstr ""

# 027f9e4a25df42458273a65728c39c9d
#: ../../internals/contributing/writing-code/submitting-patches.txt:147
msgid ""
"Behind the scenes, ``compress.py`` is a front-end for Google's `Closure "
"Compiler`_ which is written in Java. However, the Closure Compiler library "
"is not bundled with Django directly, so those wishing to contribute complete "
"javascript patches will need to download and install the library "
"independently."
msgstr ""

# e05dbf3cbb12490199fa46a903592abe
#: ../../internals/contributing/writing-code/submitting-patches.txt:153
msgid ""
"The Closure Compiler library requires Java version 6 or higher (Java 1.6 or "
"higher on Mac OS X). Note that Mac OS X 10.5 and earlier did not ship with "
"Java 1.6 by default, so it may be necessary to upgrade your Java "
"installation before the tool will be functional. Also note that even after "
"upgrading Java, the default ``/usr/bin/java`` command may remain linked to "
"the previous Java binary, so relinking that command may be necessary as well."
msgstr ""

# 25c486710fab4f7897b1e530fe085e26
#: ../../internals/contributing/writing-code/submitting-patches.txt:160
msgid ""
"Please don't forget to run ``compress.py`` and include the ``diff`` of the "
"minified scripts when submitting patches for Django's javascript."
msgstr ""

# 6f2749f599f04e3c8e0f11d984848421
#: ../../internals/contributing/writing-code/unit-tests.txt:3
msgid "Unit tests"
msgstr ""

# a3b0ec32b47740d7a1e9e79dc385ff3c
#: ../../internals/contributing/writing-code/unit-tests.txt:5
msgid ""
"Django comes with a test suite of its own, in the ``tests`` directory of the "
"code base. It's our policy to make sure all tests pass at all times."
msgstr ""

# 689e1e95b0fd4e06a72681719732f6c5
#: ../../internals/contributing/writing-code/unit-tests.txt:8
msgid "The tests cover:"
msgstr ""

# d116aa63242c4ce3ab30e0ad763e5ac7
#: ../../internals/contributing/writing-code/unit-tests.txt:10
msgid "Models and the database API (``tests/modeltests``),"
msgstr ""

# 537e1825e9af452fa148e210c3c25c37
#: ../../internals/contributing/writing-code/unit-tests.txt:11
msgid "Everything else in core Django code (``tests/regressiontests``),"
msgstr ""

# 829e359172044b97a27ab115c97df13c
#: ../../internals/contributing/writing-code/unit-tests.txt:12
msgid ":ref:`contrib-apps` (``django/contrib/<app>/tests``)."
msgstr ""

# 53f392d167ec4b408addf0b69dac0c86
#: ../../internals/contributing/writing-code/unit-tests.txt:14
msgid "We appreciate any and all contributions to the test suite!"
msgstr ""

# 6b6e79045bd64daf96f0722b6ddfae98
#: ../../internals/contributing/writing-code/unit-tests.txt:16
msgid ""
"The Django tests all use the testing infrastructure that ships with Django "
"for testing applications. See :doc:`Testing Django applications </topics/"
"testing>` for an explanation of how to write new tests."
msgstr ""

# 79d278bc7ecb4489ba6dec471e109d1c
#: ../../internals/contributing/writing-code/unit-tests.txt:23
msgid "Running the unit tests"
msgstr ""

# 708898a63e634556b4329f81446643b1
#: ../../internals/contributing/writing-code/unit-tests.txt:26
msgid "Quickstart"
msgstr ""

# f4b4479e8b43482497c5ef710487cbb1
#: ../../internals/contributing/writing-code/unit-tests.txt:28
msgid ""
"Running the tests requires a Django settings module that defines the "
"databases to use. To make it easy to get started, Django provides a sample "
"settings module that uses the SQLite database. To run the tests with this "
"sample ``settings`` module, ``cd`` into the Django ``tests/`` directory and "
"run:"
msgstr ""

# 9c6eb9b7a8544bd68e9cca6da73335a2
#: ../../internals/contributing/writing-code/unit-tests.txt:38
msgid ""
"If you get an ``ImportError: No module named django.contrib`` error, you "
"need to add your install of Django to your ``PYTHONPATH``. For more details "
"on how to do this, read :ref:`pointing-python-at-the-new-django-version`."
msgstr ""

# 0556de76c0394089b9f39511ffcbd4d1
#: ../../internals/contributing/writing-code/unit-tests.txt:44
msgid "Using another ``settings`` module"
msgstr ""

# 34ebee3060054e88ac4045e1b9820e04
#: ../../internals/contributing/writing-code/unit-tests.txt:46
msgid ""
"The included settings module allows you to run the test suite using SQLite. "
"If you want to test behavior using a different database (and if you're "
"proposing patches for Django, it's a good idea to test across databases), "
"you may need to define your own settings file."
msgstr ""

# f0c67dc5da1e4688b4f13b44f4d6fa31
#: ../../internals/contributing/writing-code/unit-tests.txt:51
msgid ""
"To run the tests with different settings, ``cd`` to the ``tests/`` directory "
"and type:"
msgstr ""

# d6b259c62a914621a85f317dcd85693a
#: ../../internals/contributing/writing-code/unit-tests.txt:58
msgid ""
"The :setting:`DATABASES` setting in this test settings module needs to "
"define two databases:"
msgstr ""

# 4682eda2485a4825861ed57506ea6633
#: ../../internals/contributing/writing-code/unit-tests.txt:61
msgid ""
"A ``default`` database. This database should use the backend that you want "
"to use for primary testing"
msgstr ""

# 73ea63e7c1074738a69658980be7f71b
#: ../../internals/contributing/writing-code/unit-tests.txt:64
msgid ""
"A database with the alias ``other``. The ``other`` database is used to "
"establish that queries can be directed to different databases. As a result, "
"this database can use any backend you want. It doesn't need to use the same "
"backend as the ``default`` database (although it can use the same backend if "
"you want to)."
msgstr ""

# ae5d00c72f9d4a07ae6b4791e6b609df
#: ../../internals/contributing/writing-code/unit-tests.txt:70
msgid ""
"If you're using a backend that isn't SQLite, you will need to provide other "
"details for each database:"
msgstr ""

# 31490aa118e745d391872d668cc6e4e1
#: ../../internals/contributing/writing-code/unit-tests.txt:73
msgid ""
"The :setting:`USER` option for each of your databases needs to specify an "
"existing user account for the database."
msgstr ""

# 3026b8be5f374b5da1feec33103c963d
#: ../../internals/contributing/writing-code/unit-tests.txt:76
msgid ""
"The :setting:`PASSWORD` option needs to provide the password for the :"
"setting:`USER` that has been specified."
msgstr ""

# f1e9c48b42fa47998e388267f4f6b1dc
#: ../../internals/contributing/writing-code/unit-tests.txt:79
msgid ""
"The :setting:`NAME` option must be the name of an existing database to which "
"the given user has permission to connect. The unit tests will not touch this "
"database; the test runner creates a new database whose name is :setting:"
"`NAME` prefixed with ``test_``, and this test database is deleted when the "
"tests are finished. This means your user account needs permission to execute "
"``CREATE DATABASE``."
msgstr ""

# 5f6def6aa5fd4e0ebd1abb65caa4ad06
#: ../../internals/contributing/writing-code/unit-tests.txt:86
msgid ""
"You will also need to ensure that your database uses UTF-8 as the default "
"character set. If your database server doesn't use UTF-8 as a default "
"charset, you will need to include a value for :setting:`TEST_CHARSET` in the "
"settings dictionary for the applicable database."
msgstr ""

# f545480fd3f947d4866de7f191d0de2c
#: ../../internals/contributing/writing-code/unit-tests.txt:92
msgid "Running only some of the tests"
msgstr ""

# 45d54908421d478cbaafb834d766b439
#: ../../internals/contributing/writing-code/unit-tests.txt:94
msgid ""
"Django's entire test suite takes a while to run, and running every single "
"test could be redundant if, say, you just added a test to Django that you "
"want to run quickly without running everything else. You can run a subset of "
"the unit tests by appending the names of the test modules to ``runtests.py`` "
"on the command line."
msgstr ""

# 7e771e6fa2cf44c0b12369f806def9a1
#: ../../internals/contributing/writing-code/unit-tests.txt:100
msgid ""
"For example, if you'd like to run tests only for generic relations and "
"internationalization, type:"
msgstr ""

# 3195a571597744289a62f4b28c28fb4b
#: ../../internals/contributing/writing-code/unit-tests.txt:107
msgid ""
"How do you find out the names of individual tests? Look in ``tests/"
"modeltests`` and ``tests/regressiontests`` â€” each directory name there is "
"the name of a test. Contrib app names are also valid test names."
msgstr ""

# 13bef5be077a4549b667674eee8da820
#: ../../internals/contributing/writing-code/unit-tests.txt:111
msgid ""
"If you just want to run a particular class of tests, you can specify a list "
"of paths to individual test classes. For example, to run the "
"``TranslationTests`` of the ``i18n`` module, type:"
msgstr ""

# 0e523555394f4778b17a4a32169cee9c
#: ../../internals/contributing/writing-code/unit-tests.txt:119
msgid "Going beyond that, you can specify an individual test method like this:"
msgstr ""

# cd53a79281aa4e88a6a23c634f10875a
#: ../../internals/contributing/writing-code/unit-tests.txt:126
msgid "Running the Selenium tests"
msgstr ""

# 7eba6768c88447ff96c4f16add614c5d
#: ../../internals/contributing/writing-code/unit-tests.txt:128
msgid ""
"Some admin tests require Selenium 2, Firefox and Python >= 2.6 to work via a "
"real Web browser. To allow those tests to run and not be skipped, you must "
"install the selenium_ package (version > 2.13) into your Python path."
msgstr ""

# 8419c8af9b9945ae94ec296b9e3da264
#: ../../internals/contributing/writing-code/unit-tests.txt:132
msgid "Then, run the tests normally, for example:"
msgstr ""

# fe62fc779be047cbad3d4d3703b574c8
#: ../../internals/contributing/writing-code/unit-tests.txt:139
msgid "Running all the tests"
msgstr ""

# 01ae2ac22d6c4d61911b88df2452e692
#: ../../internals/contributing/writing-code/unit-tests.txt:141
msgid ""
"If you want to run the full suite of tests, you'll need to install a number "
"of dependencies:"
msgstr ""

# 5a8afc04ca154cb1b36a0a63e7d81505
#: ../../internals/contributing/writing-code/unit-tests.txt:144
msgid "PyYAML_"
msgstr ""

# a2525036f780439b9902a1aec02311f9
#: ../../internals/contributing/writing-code/unit-tests.txt:145
msgid "Markdown_"
msgstr ""

# 000a0ef64ac94e769ada78336a2ab2ea
#: ../../internals/contributing/writing-code/unit-tests.txt:146
msgid "Textile_"
msgstr ""

# 8bba7768944e47309eed2460031f78ab
#: ../../internals/contributing/writing-code/unit-tests.txt:147
msgid "Docutils_"
msgstr ""

# 4d293dda684944b687992428baf4c519
#: ../../internals/contributing/writing-code/unit-tests.txt:148
msgid "setuptools_"
msgstr ""

# 978d234edadf42199d60fff454b05447
#: ../../internals/contributing/writing-code/unit-tests.txt:149
msgid "memcached_, plus a :ref:`supported Python binding <memcached>`"
msgstr ""

# 50022ccb8e0644e6ab4beae3533fc246
#: ../../internals/contributing/writing-code/unit-tests.txt:150
msgid "gettext_ (:ref:`gettext_on_windows`)"
msgstr ""

# 1e3f7fcfe5254015aaf54f18b199fff6
#: ../../internals/contributing/writing-code/unit-tests.txt:151
msgid "selenium_ (if also using Python >= 2.6)"
msgstr ""

# 42eb583997e14ddb8b25180a39c14392
#: ../../internals/contributing/writing-code/unit-tests.txt:153
msgid ""
"If you want to test the memcached cache backend, you'll also need to define "
"a :setting:`CACHES` setting that points at your memcached instance."
msgstr ""

# 8ee9d6c6cd6f46e2b0fb03292bfb4dca
#: ../../internals/contributing/writing-code/unit-tests.txt:156
msgid ""
"Each of these dependencies is optional. If you're missing any of them, the "
"associated tests will be skipped."
msgstr ""

# 7ec7770579094eb48582dd09e9f15e7f
#: ../../internals/contributing/writing-code/unit-tests.txt:171
msgid "Contrib apps"
msgstr ""

# a262b1d125894d52a1cd2cbb992ede4e
#: ../../internals/contributing/writing-code/unit-tests.txt:173
msgid ""
"Tests for contrib apps go in their respective directories under ``django/"
"contrib``, in a ``tests.py`` file. You can split the tests over multiple "
"modules by using a ``tests`` directory in the normal Python way."
msgstr ""

# 20188a20e05049d0ad88edc28c13416c
#: ../../internals/contributing/writing-code/unit-tests.txt:177
msgid ""
"For the tests to be found, a ``models.py`` file must exist, even if it's "
"empty. If you have URLs that need to be mapped, put them in ``tests/urls."
"py``."
msgstr ""

# 7d6bd2fe428d48969578b6ed3ae8c139
#: ../../internals/contributing/writing-code/unit-tests.txt:180
msgid ""
"To run tests for just one contrib app (e.g. ``markup``), use the same method "
"as above::"
msgstr ""

# b8e8021aa89d4312a22258759f35abbc
#: ../../internals/contributing/writing-documentation.txt:3
msgid "Writing documentation"
msgstr ""

# d33c5bd64a1143b687aae6dd3b2d8d35
#: ../../internals/contributing/writing-documentation.txt:5
msgid ""
"We place a high importance on consistency and readability of documentation. "
"After all, Django was created in a journalism environment! So we treat our "
"documentation like we treat our code: we aim to improve it as often as "
"possible."
msgstr ""

# 7d323a542c8f42da94d35a47ddef0088
#: ../../internals/contributing/writing-documentation.txt:10
msgid "Documentation changes generally come in two forms:"
msgstr ""

# ac71b30dcc1e4ee6b14e52f3cc096e1a
#: ../../internals/contributing/writing-documentation.txt:12
msgid ""
"General improvements: typo corrections, error fixes and better explanations "
"through clearer writing and more examples."
msgstr ""

# 869c0158e3d44729971797b3af3afb13
#: ../../internals/contributing/writing-documentation.txt:15
msgid ""
"New features: documentation of features that have been added to the "
"framework since the last release."
msgstr ""

# bd48f5d889914e099969ebf97a6abdb9
#: ../../internals/contributing/writing-documentation.txt:18
msgid ""
"This section explains how writers can craft their documentation changes in "
"the most useful and least error-prone ways."
msgstr ""

# eb604a25c42c47c4993e8fd24ae3a9de
#: ../../internals/contributing/writing-documentation.txt:22
msgid "Getting started with Sphinx"
msgstr ""

# 8ba10347f7ab44148d3dbaaff72e90c6
#: ../../internals/contributing/writing-documentation.txt:24
msgid ""
"Django's documentation uses the Sphinx__ documentation system, which in turn "
"is based on docutils__. The basic idea is that lightly-formatted plain-text "
"documentation is transformed into HTML, PDF, and any other output format."
msgstr ""

# 342f7312c6ca4ac7b939e96b2e278587
#: ../../internals/contributing/writing-documentation.txt:31
msgid ""
"To actually build the documentation locally, you'll currently need to "
"install Sphinx -- ``sudo pip install Sphinx`` should do the trick."
msgstr ""

# 9d5ffec274204b85bfa1314a370e3006
#: ../../internals/contributing/writing-documentation.txt:36
msgid ""
"Building the Django documentation requires Sphinx 1.0.2 or newer. Sphinx "
"also requires the Pygments__ library for syntax highlighting; building the "
"Django documentation requires Pygments 1.1 or newer (a new-enough version "
"should automatically be installed along with Sphinx)."
msgstr ""

# 9b41067bafb2411bb69465f0d966755b
#: ../../internals/contributing/writing-documentation.txt:43
msgid ""
"Then, building the HTML is easy; just ``make html`` (or ``make.bat html`` on "
"Windows) from the ``docs`` directory."
msgstr ""

# 4d5630520eb34f43bd24f304dbefaa84
#: ../../internals/contributing/writing-documentation.txt:46
msgid ""
"To get started contributing, you'll want to read the :ref:`reStructuredText "
"Primer <sphinx:rst-primer>`. After that, you'll want to read about the :ref:"
"`Sphinx-specific markup <sphinx:sphinxmarkup>` that's used to manage "
"metadata, indexing, and cross-references."
msgstr ""

# 3c7f46052c3a4a83aa85b845c86e0ca9
#: ../../internals/contributing/writing-documentation.txt:52
msgid "Commonly used terms"
msgstr ""

# 6a1b83c8ff3d41b2a53695adf097eacd
#: ../../internals/contributing/writing-documentation.txt:54
msgid ""
"Here are some style guidelines on commonly used terms throughout the "
"documentation:"
msgstr ""

# 19152edd9e394066b4c99270a67f1a35
#: ../../internals/contributing/writing-documentation.txt:57
msgid ""
"**Django** -- when referring to the framework, capitalize Django. It is "
"lowercase only in Python code and in the djangoproject.com logo."
msgstr ""

# 6318c73086ff40dca482acd641d3e8da
#: ../../internals/contributing/writing-documentation.txt:60
msgid "**email** -- no hyphen."
msgstr ""

# 3358129e46bc469aaaaaa65187a9ba82
#: ../../internals/contributing/writing-documentation.txt:62
msgid "**MySQL**, **PostgreSQL**, **SQLite**"
msgstr ""

# 1c5f90440c0349fd961f3a7224d2b764
#: ../../internals/contributing/writing-documentation.txt:64
msgid "**Python** -- when referring to the language, capitalize Python."
msgstr ""

# de62c72a481442fc93cf0ae43efc67a9
#: ../../internals/contributing/writing-documentation.txt:66
msgid ""
"**realize**, **customize**, **initialize**, etc. -- use the American \"ize\" "
"suffix, not \"ise.\""
msgstr ""

# 1bb135f7a3134cd2aafe14ca210fafdc
#: ../../internals/contributing/writing-documentation.txt:69
msgid ""
"**subclass** -- it's a single word without a hyphen, both as a verb "
"(\"subclass that model\") and as a noun (\"create a subclass\")."
msgstr ""

# 5f3dca79595c424890b3c174ae4b862b
#: ../../internals/contributing/writing-documentation.txt:72
msgid ""
"**Web**, **World Wide Web**, **the Web** -- note Web is always capitalized "
"when referring to the World Wide Web."
msgstr ""

# 8e844740b0264f8e9cea3dfc4c976354
#: ../../internals/contributing/writing-documentation.txt:75
msgid "**Web site** -- use two words, with Web capitalized."
msgstr ""

# 107bc2cc763a4c8786f4194f702f9c5b
#: ../../internals/contributing/writing-documentation.txt:78
msgid "Django-specific terminology"
msgstr ""

# c588408bf43141ba8ff34cbd2774a05d
#: ../../internals/contributing/writing-documentation.txt:80
msgid "**model** -- it's not capitalized."
msgstr ""

# b0ec6c78549e48c8aa015f52dcfc10c9
#: ../../internals/contributing/writing-documentation.txt:82
msgid "**template** -- it's not capitalized."
msgstr ""

# 2469eb77089e4e61a08877719d714296
#: ../../internals/contributing/writing-documentation.txt:84
msgid ""
"**URLconf** -- use three capitalized letters, with no space before \"conf.\""
msgstr ""

# 9506292b1f9d4b5ab2762d93b65bedf3
#: ../../internals/contributing/writing-documentation.txt:87
msgid "**view** -- it's not capitalized."
msgstr ""

# a9effa9fb0144c028bebab4ebb366bbf
#: ../../internals/contributing/writing-documentation.txt:90
msgid "Guidelines for reStructuredText files"
msgstr ""

# 7ecd77b55b0449e88ad6c48092610e6c
#: ../../internals/contributing/writing-documentation.txt:92
msgid ""
"These guidelines regulate the format of our reST (reStructuredText) "
"documentation:"
msgstr ""

# 8f62da3f8a004df5b80bd7b1a296e88b
#: ../../internals/contributing/writing-documentation.txt:95
msgid "In section titles, capitalize only initial words and proper nouns."
msgstr ""

# 2285f1cbb3944f40bc0b7f05f427a201
#: ../../internals/contributing/writing-documentation.txt:97
msgid ""
"Wrap the documentation at 80 characters wide, unless a code example is "
"significantly less readable when split over two lines, or for another good "
"reason."
msgstr ""

# f57d480de2064e84882345949434d2a6
#: ../../internals/contributing/writing-documentation.txt:101
msgid ""
"The main thing to keep in mind as you write and edit docs is that the more "
"semantic markup you can add the better. So::"
msgstr ""

# 2c830064f21349339303c2275ef4272b
#: ../../internals/contributing/writing-documentation.txt:106
msgid "Isn't nearly as helpful as::"
msgstr ""

# 5c963494c5eb42d19eb91269b2c1af33
#: ../../internals/contributing/writing-documentation.txt:110
msgid ""
"This is because Sphinx will generate proper links for the latter, which "
"greatly helps readers. There's basically no limit to the amount of useful "
"markup you can add."
msgstr ""

# a489739961a6403191a859884db93560
#: ../../internals/contributing/writing-documentation.txt:114
msgid ""
"Use :mod:`~sphinx.ext.intersphinx` to reference Python's and Sphinx' "
"documentation."
msgstr ""

# dde4133eaa6c4691aab2dfc4ac577438
#: ../../internals/contributing/writing-documentation.txt:118
msgid "Django-specific markup"
msgstr ""

# f5db8de1cbe9455b9c65d8d7b3662018
#: ../../internals/contributing/writing-documentation.txt:120
msgid ""
"Besides the `Sphinx built-in markup`__, Django's docs defines some extra "
"description units:"
msgstr ""

# 64212406bd5d48af93cdf65bc4697cea
#: ../../internals/contributing/writing-documentation.txt:125
msgid "Settings::"
msgstr ""

# 6459d8ca99f3428b8185db7335a8d0e0
#: ../../internals/contributing/writing-documentation.txt:129
msgid "To link to a setting, use ``:setting:`INSTALLED_APPS```."
msgstr ""

# 22c8bfcc905846d485ea150af39e3ac7
#: ../../internals/contributing/writing-documentation.txt:131
msgid "Template tags::"
msgstr ""

# fae2c74e3d9a49f684676c232c409ace
#: ../../internals/contributing/writing-documentation.txt:135
msgid "To link, use ``:ttag:`regroup```."
msgstr ""

# 8f69441fc40f4a80a3dbb03fb68f920c
#: ../../internals/contributing/writing-documentation.txt:137
msgid "Template filters::"
msgstr ""

# a4640eeba4ec4f5190e0de8624f69453
#: ../../internals/contributing/writing-documentation.txt:141
msgid "To link, use ``:tfilter:`linebreaksbr```."
msgstr ""

# c8bad0d0bfd94c47998e977da4655150
#: ../../internals/contributing/writing-documentation.txt:143
msgid "Field lookups (i.e. ``Foo.objects.filter(bar__exact=whatever)``)::"
msgstr ""

# 45b8ea05334f47a68548bc783b09f138
#: ../../internals/contributing/writing-documentation.txt:147
msgid "To link, use ``:lookup:`exact```."
msgstr ""

# 6feb7e478e484411aac43f34a6c4297f
#: ../../internals/contributing/writing-documentation.txt:149
msgid "``django-admin`` commands::"
msgstr ""

# 3e1d0a2bbca2404298eaf234cfdbff27
#: ../../internals/contributing/writing-documentation.txt:153
msgid "To link, use ``:djadmin:`syncdb```."
msgstr ""

# c975edc7f9fd40409eb9fc8219a0183c
#: ../../internals/contributing/writing-documentation.txt:155
msgid "``django-admin`` command-line options::"
msgstr ""

# 393cff91c1e548aab5fabd22878a83a2
#: ../../internals/contributing/writing-documentation.txt:159
msgid "To link, use ``:djadminopt:`--traceback```."
msgstr ""

# 15c1c0ad0d894e0a89174d4ed0307f66
#: ../../internals/contributing/writing-documentation.txt:164
msgid "Documenting new features"
msgstr ""

# a2a1669ca3074545a6596902a183cec1
#: ../../internals/contributing/writing-documentation.txt:166
msgid "Our policy for new features is:"
msgstr ""

# 3942bb7e102b41269baa8dfbbe33866b
#: ../../internals/contributing/writing-documentation.txt:168
msgid ""
"All documentation of new features should be written in a way that clearly "
"designates the features are only available in the Django development "
"version. Assume documentation readers are using the latest release, not the "
"development version."
msgstr ""

# d12d620f3939415d804edc5f98298b81
#: ../../internals/contributing/writing-documentation.txt:173
msgid ""
"Our preferred way for marking new features is by prefacing the features' "
"documentation with: \"``.. versionadded:: X.Y``\", followed by an optional "
"one line comment and a mandatory blank line."
msgstr ""

# e50b585bead847dbb5d58f4b29639c9d
#: ../../internals/contributing/writing-documentation.txt:177
msgid ""
"General improvements, or other changes to the APIs that should be emphasized "
"should use the \"``.. versionchanged:: X.Y``\" directive (with the same "
"format as the ``versionadded`` mentioned above."
msgstr ""

# ca224a9ee1094245a25812170bc4d030
#: ../../internals/contributing/writing-documentation.txt:182
msgid "An example"
msgstr ""

# f5d1032fb0124220911c6658090265ca
#: ../../internals/contributing/writing-documentation.txt:184
msgid ""
"For a quick example of how it all fits together, consider this hypothetical "
"example:"
msgstr ""

# d32820c8fa9d46e9ba68d6681e2d45aa
#: ../../internals/contributing/writing-documentation.txt:187
msgid ""
"First, the ``ref/settings.txt`` document could have an overall layout like "
"this:"
msgstr ""

# 73ae583d4db34ae2a0b6104aa865f95d
#: ../../internals/contributing/writing-documentation.txt:212
msgid ""
"Next, the ``topics/settings.txt`` document could contain something like this:"
msgstr ""

# 0f962721f0874bef898e10aebb86d9c4
#: ../../internals/contributing/writing-documentation.txt:224
msgid ""
"We use the Sphinx :rst:role:`doc` cross reference element when we want to "
"link to another document as a whole and the :rst:role:`ref` element when we "
"want to link to an arbitrary location in a document."
msgstr ""

# 84ae64b7aa1a4a0fa222137a3928b250
#: ../../internals/contributing/writing-documentation.txt:228
msgid "Next, notice how the settings are annotated:"
msgstr ""

# 39403630f599422cbb4b76e6e6a595e0
#: ../../internals/contributing/writing-documentation.txt:246
msgid ""
"This marks up the following header as the \"canonical\" target for the "
"setting ``ADMIN_FOR`` This means any time I talk about ``ADMIN_FOR``, I can "
"reference it using ``:setting:`ADMIN_FOR```."
msgstr ""

# 40b3e07a3947407d99d9b987897b6fcf
#: ../../internals/contributing/writing-documentation.txt:250
msgid "That's basically how everything fits together."
msgstr ""

# 9f1fe07018664771923ef33afb7b7cfd
#: ../../internals/contributing/writing-documentation.txt:255
msgid "Improving the documentation"
msgstr ""

# a1c37e737307439fbe097328235706ee
#: ../../internals/contributing/writing-documentation.txt:257
msgid ""
"A few small improvements can be made to make the documentation read and look "
"better:"
msgstr ""

# 29cdc628a718432b9fc372ea06109210
#: ../../internals/contributing/writing-documentation.txt:260
msgid ""
"Most of the various ``index.txt`` documents have *very* short or even non-"
"existent intro text. Each of those documents needs a good short intro the "
"content below that point."
msgstr ""

# a945e3fca5234d3b97cd9642ced72b72
#: ../../internals/contributing/writing-documentation.txt:264
msgid "The glossary is very perfunctory. It needs to be filled out."
msgstr ""

# c10d06808b204be19decc253bedd8ea5
#: ../../internals/contributing/writing-documentation.txt:266
msgid "Add more metadata targets. Lots of places look like::"
msgstr ""

# 31f57bb6ece84aa58d74407a4640020d
#: ../../internals/contributing/writing-documentation.txt:271
msgid "\\... these should be::"
msgstr ""

# fa004a2b1a784e8992c6aaa38b919e60
#: ../../internals/contributing/writing-documentation.txt:275
msgid "That is, use metadata instead of titles."
msgstr ""

# 342ac61540fd4b78bf16cf40a23af5a0
#: ../../internals/contributing/writing-documentation.txt:277
msgid ""
"Add more links -- nearly everything that's an inline code literal right now "
"can probably be turned into a xref."
msgstr ""

# 917a00c05ead491d9ba9125cb1166dbf
#: ../../internals/contributing/writing-documentation.txt:280
msgid ""
"See the ``literals_to_xrefs.py`` file in ``_ext`` -- it's a shell script to "
"help do this work."
msgstr ""

# c11b38c10f374fc48f366e608ce00945
#: ../../internals/contributing/writing-documentation.txt:283
msgid "This will probably be a continuing, never-ending project."
msgstr ""

# 821f0d43cdb14d6e8a98ee2e2f202b0b
#: ../../internals/contributing/writing-documentation.txt:285
msgid "Add `info field lists`__ where appropriate."
msgstr ""

# 563be9e556684f8b99f80c721d0d3538
#: ../../internals/contributing/writing-documentation.txt:289
msgid ""
"Whenever possible, use links. So, use ``:setting:`ADMIN_FOR``` instead of "
"````ADMIN_FOR````."
msgstr ""

# f2931a73ee7a417ea39db9347bd30eec
#: ../../internals/contributing/writing-documentation.txt:292
msgid ""
"Use directives where appropriate. Some directives (e.g. ``.. setting::``) "
"are prefix-style directives; they go *before* the unit they're describing. "
"These are known as \"crossref\" directives. Others (e.g. ``.. class::``) "
"generate their own markup; these should go inside the section they're "
"describing. These are called \"description units\"."
msgstr ""

# 3fa27ce3f48b4d25b7af5a5d90a5832d
#: ../../internals/contributing/writing-documentation.txt:299
msgid ""
"You can tell which are which by looking at in :file:`_ext/djangodocs.py`; it "
"registers roles as one of the other."
msgstr ""

# 7cf016b6210d4956b098072b17bc9f57
#: ../../internals/contributing/writing-documentation.txt:302
msgid ""
"Add ``.. code-block:: <lang>`` to literal blocks so that they get "
"highlighted."
msgstr ""

# 42447e16cc7248ca899a6153a9884c2a
#: ../../internals/contributing/writing-documentation.txt:305
msgid ""
"When referring to classes/functions/modules, etc., you'll want to use the "
"fully-qualified name of the target (``:class:`django.contrib.contenttypes."
"models.ContentType```)."
msgstr ""

# b25670d907fe40cd830417ce73122c1c
#: ../../internals/contributing/writing-documentation.txt:309
msgid ""
"Since this doesn't look all that awesome in the output -- it shows the "
"entire path to the object -- you can prefix the target with a ``~`` (that's "
"a tilde) to get just the \"last bit\" of that path. So ``:class:`~django."
"contrib.contenttypes.models.ContentType``` will just display a link with the "
"title \"ContentType\"."
msgstr ""

# 4ca4922749e74f03aecf59a92d103f63
#: ../../internals/deprecation.txt:3
msgid "Django Deprecation Timeline"
msgstr ""

# e2ac9291f0b44bc990888e1b987db207
#: ../../internals/deprecation.txt:5
msgid ""
"This document outlines when various pieces of Django will be removed or "
"altered in a backward incompatible way, following their deprecation, as per "
"the :ref:`deprecation policy <internal-release-deprecation-policy>`. More "
"details about each item can often be found in the release notes of two "
"versions prior."
msgstr ""

# 07410acdf82947ffa0409f512e3cbccd
#: ../../internals/deprecation.txt:11
msgid "1.3"
msgstr ""

# c02a1a142c7747f094fce6a0ec4c2bc5
#: ../../internals/deprecation.txt:13
msgid ""
"See the :doc:`Django 1.1 release notes</releases/1.1>` for more details on "
"these changes."
msgstr ""

# af6b64663b9b4815bc6e7ce174067099
#: ../../internals/deprecation.txt:16
msgid ""
"``AdminSite.root()``.  This method of hooking up the admin URLs will be "
"removed in favor of including ``admin.site.urls``."
msgstr ""

# ee4491a6937a4d03b5b41c91e2904edf
#: ../../internals/deprecation.txt:19
msgid ""
"Authentication backends need to define the boolean attributes "
"``supports_object_permissions`` and ``supports_anonymous_user`` until "
"version 1.4, at which point it will be assumed that all backends will "
"support these options."
msgstr ""

# 3d2590bc39224cde9358fbcdf82b6960
#: ../../internals/deprecation.txt:25
msgid "1.4"
msgstr ""

# 85435efb83fa4c5aa147d0d9ec7c23f0
#: ../../internals/deprecation.txt:27
msgid ""
"See the :doc:`Django 1.2 release notes</releases/1.2>` for more details on "
"these changes."
msgstr ""

# 3f34841a3a2247449afc6a5f1457c63e
#: ../../internals/deprecation.txt:30
msgid ""
"``CsrfResponseMiddleware`` and ``CsrfMiddleware`` will be removed.  Use the "
"{% csrf_token %} template tag inside forms to enable CSRF protection. "
"``CsrfViewMiddleware`` remains and is enabled by default."
msgstr ""

# 0ad0f08dc55e4bb693782ce116c6eeda
#: ../../internals/deprecation.txt:34
msgid ""
"The old imports for CSRF functionality (``django.contrib.csrf.*``), which "
"moved to core in 1.2, will be removed."
msgstr ""

# 5ef932d20542418cad8614fc79d68a97
#: ../../internals/deprecation.txt:37
msgid ""
"The :mod:`django.contrib.gis.db.backend` module will be removed in favor of "
"the specific backends."
msgstr ""

# 8844c658fc6b46289c2a2b1a5bba2cbe
#: ../../internals/deprecation.txt:40
msgid ""
"``SMTPConnection`` will be removed in favor of a generic E-mail backend API."
msgstr ""

# 61fe377e08c544f5a4fe9a007d311a2a
#: ../../internals/deprecation.txt:42
msgid ""
"The many to many SQL generation functions on the database backends will be "
"removed."
msgstr ""

# 2202327b97e649d28679b7c5a5a6032c
#: ../../internals/deprecation.txt:45
msgid ""
"The ability to use the ``DATABASE_*`` family of top-level settings to define "
"database connections will be removed."
msgstr ""

# 15848e98f17b4f77bbf15b662b3b7f5b
#: ../../internals/deprecation.txt:48
msgid ""
"The ability to use shorthand notation to specify a database backend (i.e., "
"``sqlite3`` instead of ``django.db.backends.sqlite3``) will be removed."
msgstr ""

# 85d76f276c5a46348afe61cb05fed649
#: ../../internals/deprecation.txt:52
msgid ""
"The ``get_db_prep_save``, ``get_db_prep_value`` and ``get_db_prep_lookup`` "
"methods will have to support multiple databases."
msgstr ""

# 35688d2135a44cc1942b6cee418b8221
#: ../../internals/deprecation.txt:55
msgid ""
"The ``Message`` model (in ``django.contrib.auth``), its related manager in "
"the ``User`` model (``user.message_set``), and the associated methods "
"(``user.message_set.create()`` and ``user.get_and_delete_messages()``), will "
"be removed.  The :doc:`messages framework </ref/contrib/messages>` should be "
"used instead. The related ``messages`` variable returned by the auth context "
"processor will also be removed. Note that this means that the admin "
"application will depend on the messages context processor."
msgstr ""

# 4cc97d6c54914859a943d9c4fb0e4347
#: ../../internals/deprecation.txt:65
msgid ""
"Authentication backends will need to support the ``obj`` parameter for "
"permission checking. The ``supports_object_permissions`` attribute will no "
"longer be checked and can be removed from custom backends."
msgstr ""

# 7de7f2bde7ce49bd829c2aca4cbc5ce4
#: ../../internals/deprecation.txt:69
msgid ""
"Authentication backends will need to support the ``AnonymousUser`` class "
"being passed to all methods dealing with permissions.  The "
"``supports_anonymous_user`` variable will no longer be checked and can be "
"removed from custom backends."
msgstr ""

# a11a0872bb434f739225f7449713b5b8
#: ../../internals/deprecation.txt:74
msgid ""
"The ability to specify a callable template loader rather than a ``Loader`` "
"class will be removed, as will the ``load_template_source`` functions that "
"are included with the built in template loaders for backwards compatibility."
msgstr ""

# 622409489ffd4749b10433b29f18f4c0
#: ../../internals/deprecation.txt:79
msgid ""
"``django.utils.translation.get_date_formats()`` and ``django.utils."
"translation.get_partial_date_formats()``. These functions will be removed; "
"use the locale-aware ``django.utils.formats.get_format()`` to get the "
"appropriate formats."
msgstr ""

# a5a0cc55d154480f835e8aa2a18da581
#: ../../internals/deprecation.txt:84
msgid ""
"In ``django.forms.fields``, the constants: ``DEFAULT_DATE_INPUT_FORMATS``, "
"``DEFAULT_TIME_INPUT_FORMATS`` and ``DEFAULT_DATETIME_INPUT_FORMATS`` will "
"be removed. Use ``django.utils.formats.get_format()`` to get the appropriate "
"formats."
msgstr ""

# 286aae6f86324ed6b2427ac0e80055f7
#: ../../internals/deprecation.txt:90
msgid ""
"The ability to use a function-based test runners will be removed, along with "
"the ``django.test.simple.run_tests()`` test runner."
msgstr ""

# c657bae6d8e845b7b0c7c4f1af948c0f
#: ../../internals/deprecation.txt:93
msgid ""
"The ``views.feed()`` view and ``feeds.Feed`` class in ``django.contrib."
"syndication`` will be removed. The class-based view ``views.Feed`` should be "
"used instead."
msgstr ""

# 2b40f14bc6c34afa864b4b9b60aa2d92
#: ../../internals/deprecation.txt:97
msgid ""
"``django.core.context_processors.auth``.  This release will remove the old "
"method in favor of the new method in ``django.contrib.auth."
"context_processors.auth``."
msgstr ""

# f982fea225ef4e68bda3cda461e73fad
#: ../../internals/deprecation.txt:101
msgid ""
"The ``postgresql`` database backend will be removed, use the "
"``postgresql_psycopg2`` backend instead."
msgstr ""

# 201851be42934ff088f70b8cd9a0b653
#: ../../internals/deprecation.txt:104
msgid ""
"The ``no`` language code will be removed and has been replaced by the ``nb`` "
"language code."
msgstr ""

# 824041f67f684220adb805f3b64baf45
#: ../../internals/deprecation.txt:107
msgid ""
"Authentication backends will need to define the boolean attribute "
"``supports_inactive_user`` until version 1.5 when it will be assumed that "
"all backends will handle inactive users."
msgstr ""

# da9973665bc9404db660740acd8c0c7e
#: ../../internals/deprecation.txt:111
msgid ""
"``django.db.models.fields.XMLField`` will be removed. This was deprecated as "
"part of the 1.3 release. An accelerated deprecation schedule has been used "
"because the field hasn't performed any role beyond that of a simple "
"``TextField`` since the removal of oldforms. All uses of ``XMLField`` can be "
"replaced with ``TextField``."
msgstr ""

# c09cb7ac43134b018ed8fb6e10d1bc1f
#: ../../internals/deprecation.txt:117
msgid ""
"The undocumented ``mixin`` parameter to the ``open()`` method of ``django."
"core.files.storage.Storage`` (and subclasses) will be removed."
msgstr ""

# 9f834bd38af747b6b4a747622a904c34
#: ../../internals/deprecation.txt:122
msgid "1.5"
msgstr ""

# cbde66f7682249f7abfd44cea7431457
#: ../../internals/deprecation.txt:124
msgid ""
"See the :doc:`Django 1.3 release notes</releases/1.3>` for more details on "
"these changes."
msgstr ""

# 71363b2944554ca2948d81d854513880
#: ../../internals/deprecation.txt:127
msgid ""
"Starting Django without a :setting:`SECRET_KEY` will result in an exception "
"rather than a `DeprecationWarning`. (This is accelerated from the usual "
"deprecation path; see the :doc:`Django 1.4 release notes</releases/1.4>`.)"
msgstr ""

# 984cf61eede3487d9bf671fa76d7872e
#: ../../internals/deprecation.txt:131
msgid ""
"The ``mod_python`` request handler will be removed. The ``mod_wsgi`` handler "
"should be used instead."
msgstr ""

# 594b16b74595495b8ca3eea37f45dc2b
#: ../../internals/deprecation.txt:134
msgid ""
"The ``template`` attribute on :class:`~django.test.client.Response` objects "
"returned by the :ref:`test client <test-client>` will be removed. The :attr:"
"`~django.test.client.Response.templates` attribute should be used instead."
msgstr ""

# 042f71ac5ca74cb4afbac9dcfb953395
#: ../../internals/deprecation.txt:139
msgid ""
"The :class:`~django.test.simple.DjangoTestRunner` will be removed. Instead "
"use a unittest-native class.  The features of the :class:`django.test.simple."
"DjangoTestRunner` (including fail-fast and Ctrl-C test termination) can "
"currently be provided by the unittest-native :class:`TextTestRunner`."
msgstr ""

# 23cb86461ff346658206a3c52f6ae8ca
#: ../../internals/deprecation.txt:145
msgid ""
"The undocumented function :func:`django.contrib.formtools.utils."
"security_hash` will be removed, instead use :func:`django.contrib.formtools."
"utils.form_hmac`"
msgstr ""

# f1291296d5264d1191f5bc56f369c353
#: ../../internals/deprecation.txt:149
msgid ""
"The function-based generic view modules will be removed in favor of their "
"class-based equivalents, outlined :doc:`here </topics/generic-views-"
"migration>`:"
msgstr ""

# 326eca83c17145ffbb47e4da2dbf7600
#: ../../internals/deprecation.txt:153
msgid ""
"The :class:`~django.core.servers.basehttp.AdminMediaHandler` will be "
"removed.  In its place use :class:`~django.contrib.staticfiles.handlers."
"StaticFilesHandler`."
msgstr ""

# 42a37342faf94ee0a5b976098071ae06
#: ../../internals/deprecation.txt:157
msgid ""
"The :ttag:`url` and :ttag:`ssi` template tags will be modified so that the "
"first argument to each tag is a template variable, not an implied string. "
"Until then, the new-style behavior is provided in the ``future`` template "
"tag library."
msgstr ""

# 5416019eca954d568e875f70e6f572f9
#: ../../internals/deprecation.txt:162
msgid ""
"The :djadmin:`reset` and :djadmin:`sqlreset` management commands will be "
"removed."
msgstr ""

# 2c3b2f2e6a3f4275913600b9f217737e
#: ../../internals/deprecation.txt:165
msgid ""
"Authentication backends will need to support an inactive user being passed "
"to all methods dealing with permissions. The ``supports_inactive_user`` "
"attribute will no longer be checked and can be removed from custom backends."
msgstr ""

# 9f910f512bda4e88be1aae5f4e3bff80
#: ../../internals/deprecation.txt:170
msgid ""
":meth:`~django.contrib.gis.geos.GEOSGeometry.transform` will raise a :class:"
"`~django.contrib.gis.geos.GEOSException` when called on a geometry with no "
"SRID value."
msgstr ""

# e8e8389353a34285832f45f9916fc997
#: ../../internals/deprecation.txt:174
msgid ""
":class:`~django.http.CompatCookie` will be removed in favor of :class:"
"`~django.http.SimpleCookie`."
msgstr ""

# 3814cd435bc445a1b99e1e383e946be7
#: ../../internals/deprecation.txt:177
msgid ""
":class:`django.core.context_processors.PermWrapper` and :class:`django.core."
"context_processors.PermLookupDict` will be removed in favor of the "
"corresponding :class:`django.contrib.auth.context_processors.PermWrapper` "
"and :class:`django.contrib.auth.context_processors.PermLookupDict`, "
"respectively."
msgstr ""

# e2bfeeb8c67d420dbd11bca12263e12e
#: ../../internals/deprecation.txt:184
msgid ""
"The :setting:`MEDIA_URL` or :setting:`STATIC_URL` settings will be required "
"to end with a trailing slash to ensure there is a consistent way to combine "
"paths in templates."
msgstr ""

# 97cfe61a4ca24c879a4f16cb0d54dbe0
#: ../../internals/deprecation.txt:188
msgid ""
"``django.db.models.fields.URLField.verify_exists`` will be removed. The "
"feature was deprecated in 1.3.1 due to intractable security and performance "
"issues and will follow a slightly accelerated deprecation timeframe."
msgstr ""

# 0e2f8e0dc71145d8918400168195cbf8
#: ../../internals/deprecation.txt:193
msgid ""
"Translations located under the so-called *project path* will be ignored "
"during the translation building process performed at runtime. The :setting:"
"`LOCALE_PATHS` setting can be used for the same task by including the "
"filesystem path to a ``locale`` directory containing non-app-specific "
"translations in its value."
msgstr ""

# 21a0e0fcf1e84f599c4b0b0e1aa41290
#: ../../internals/deprecation.txt:200
msgid "1.6"
msgstr ""

# bf986f1590d641b1bd9d6758fb24e58a
#: ../../internals/deprecation.txt:202
msgid ""
"See the :doc:`Django 1.4 release notes</releases/1.4>` for more details on "
"these changes."
msgstr ""

# 22a7fb34a15649b281461dae5a548e54
#: ../../internals/deprecation.txt:205
msgid ""
"The compatibility modules ``django.utils.copycompat`` and ``django.utils."
"hashcompat`` as well as the functions ``django.utils.itercompat.all`` and "
"``django.utils.itercompat.any`` will be removed. The Python builtin versions "
"should be used instead."
msgstr ""

# 4ab9b6ffdd294a75931b0947d44e1139
#: ../../internals/deprecation.txt:210
msgid ""
"The :func:`~django.views.decorators.csrf.csrf_response_exempt` and :func:"
"`~django.views.decorators.csrf.csrf_view_exempt` decorators will be removed. "
"Since 1.4 ``csrf_response_exempt`` has been a no-op (it returns the same "
"function), and ``csrf_view_exempt`` has been a synonym for ``django.views."
"decorators.csrf.csrf_exempt``, which should be used to replace it."
msgstr ""

# f5b495b80d4942118e2b44ed6be8e37c
#: ../../internals/deprecation.txt:217
msgid ""
"The :class:`~django.core.cache.backends.memcached.CacheClass` backend was "
"split into two in Django 1.3 in order to introduce support for PyLibMC. The "
"historical :class:`~django.core.cache.backends.memcached.CacheClass` will be "
"removed in favor of :class:`~django.core.cache.backends.memcached."
"MemcachedCache`."
msgstr ""

# 2119f2a226754c1aa246b7d9d2107911
#: ../../internals/deprecation.txt:222
msgid ""
"The UK-prefixed objects of ``django.contrib.localflavor.uk`` will only be "
"accessible through their GB-prefixed names (GB is the correct ISO 3166 code "
"for United Kingdom)."
msgstr ""

# 2448c0de544445659c7a9bf014a83c84
#: ../../internals/deprecation.txt:226
msgid ""
"The :setting:`IGNORABLE_404_STARTS` and :setting:`IGNORABLE_404_ENDS` "
"settings have been superseded by :setting:`IGNORABLE_404_URLS` in the 1.4 "
"release. They will be removed."
msgstr ""

# 9783e5a994b94c0683cd0fdaccb23b7d
#: ../../internals/deprecation.txt:230
msgid ""
"The :doc:`form wizard </ref/contrib/formtools/form-wizard>` has been "
"refactored to use class based views with pluggable backends in 1.4. The "
"previous implementation will be removed."
msgstr ""

# 7b40d51c1f6e4eb19d62552572f269d4
#: ../../internals/deprecation.txt:234
msgid ""
"Legacy ways of calling :func:`~django.views.decorators.cache.cache_page` "
"will be removed."
msgstr ""

# 8a50a1b8c31944c48df6021bc3f35c52
#: ../../internals/deprecation.txt:237
msgid ""
"The backward-compatibility shim to automatically add a debug-false filter to "
"the ``'mail_admins'`` logging handler will be removed. The :setting:"
"`LOGGING` setting should include this filter explicitly if it is desired."
msgstr ""

# adaf4afc920a4a98b3a3d6767a48190c
#: ../../internals/deprecation.txt:242
msgid ""
"The template tag :func:`django.contrib.admin.templatetags.adminmedia."
"admin_media_prefix` will be removed in favor of the generic static files "
"handling."
msgstr ""

# cf0d9f70b9e2458c82c443bb7bc3b765
#: ../../internals/deprecation.txt:246
msgid ""
"The builtin truncation functions :func:`django.utils.text.truncate_words` "
"and :func:`django.utils.text.truncate_html_words` will be removed in favor "
"of the ``django.utils.text.Truncator`` class."
msgstr ""

# f8dbb54a2d924b19a4cf07f26adb7fe7
#: ../../internals/deprecation.txt:250
msgid ""
"The :class:`~django.contrib.gis.geoip.GeoIP` class was moved to :mod:`django."
"contrib.gis.geoip` in 1.4 -- the shortcut in :mod:`django.contrib.gis.utils` "
"will be removed."
msgstr ""

# d8e0fa22128a4e2e82078d4460b71a9d
#: ../../internals/deprecation.txt:254
msgid ""
"``django.conf.urls.defaults`` will be removed. The functions :func:`~django."
"conf.urls.include`, :func:`~django.conf.urls.patterns` and :func:`~django."
"conf.urls.url` plus :data:`~django.conf.urls.handler404`, :data:`~django."
"conf.urls.handler500`, are now available through :mod:`django.conf.urls` ."
msgstr ""

# 2fb8d0a9ad434b61bf3da4dfec4dad7d
#: ../../internals/deprecation.txt:260
msgid "The Databrowse contrib module will be removed."
msgstr ""

# 801eead1fcf841a2972b3b1fc4af67b0
#: ../../internals/deprecation.txt:262
msgid ""
"The functions :func:`~django.core.management.setup_environ` and :func:"
"`~django.core.management.execute_manager` will be removed from :mod:`django."
"core.management`. This also means that the old (pre-1.4) style of :file:"
"`manage.py` file will no longer work."
msgstr ""

# 2abee223a1454e0398f0b2c50cbaa011
#: ../../internals/deprecation.txt:267
msgid ""
"Setting the ``is_safe`` and ``needs_autoescape`` flags as attributes of "
"template filter functions will no longer be supported."
msgstr ""

# c60ea9eb669d4d1bbac7d9360ee3dd36
#: ../../internals/deprecation.txt:270
msgid ""
"The attribute ``HttpRequest.raw_post_data`` was renamed to ``HttpRequest."
"body`` in 1.4. The backward compatibility will be removed -- ``HttpRequest."
"raw_post_data`` will no longer work."
msgstr ""

# 1ad28681cb344bac99691fc06d98a153
#: ../../internals/deprecation.txt:275
msgid "2.0"
msgstr ""

# 41252b98136a484b988f6cb91bcc5384
#: ../../internals/deprecation.txt:277
msgid ""
"``django.views.defaults.shortcut()``. This function has been moved to "
"``django.contrib.contenttypes.views.shortcut()`` as part of the goal of "
"removing all ``django.contrib`` references from the core Django codebase. "
"The old shortcut will be removed in the 2.0 release."
msgstr ""

# 290b8a6734564ddca69a05650eb40917
#: ../../internals/index.txt:2
msgid "Django internals"
msgstr ""

# bd9fec827c274d849468d2a6eac12af6
#: ../../internals/index.txt:4
msgid ""
"Documentation for people hacking on Django itself. This is the place to go "
"if you'd like to help improve Django, learn or learn about how Django works "
"\"under the hood\"."
msgstr ""

# d1d31ab10d2042b297cb28cac39aedbd
#: ../../internals/index.txt:10
msgid ""
"Elsewhere in the Django documentation, coverage of a feature is a sort of a "
"contract: once an API is in the official documentation, we consider it "
"\"stable\" and don't change it without a good reason. APIs covered here, "
"however, are considered \"internal-only\": we reserve the right to change "
"these internals if we must."
msgstr ""

# daaa852112b34bfba9ae17b256157f0b
#: ../../internals/release-process.txt:3
msgid "Django's release process"
msgstr ""

# 3d9dbae5b5314774bc870d1166f20114
#: ../../internals/release-process.txt:8
msgid "Official releases"
msgstr ""

# 112e3c0729304094848eec34f1c8064c
#: ../../internals/release-process.txt:10
msgid "Since version 1.0, Django's release numbering works as follows:"
msgstr ""

# 21410f75071a457aa33a8b424edea9b3
#: ../../internals/release-process.txt:12
msgid "Versions are numbered in the form ``A.B`` or ``A.B.C``."
msgstr ""

# 2e38ece2fc874e4aa617d7f8678e838a
#: ../../internals/release-process.txt:14
msgid ""
"``A`` is the *major version* number, which is only incremented for major "
"changes to Django, and these changes are not necessarily backwards-"
"compatible. That is, code you wrote for Django 1.2 may break when we release "
"Django 2.0."
msgstr ""

# 07a046710ca04f25bb66a999a6f12e96
#: ../../internals/release-process.txt:19
msgid ""
"``B`` is the *minor version* number, which is incremented for large yet "
"backwards compatible changes.  Code written for Django 1.2 will continue to "
"work under Django 1.3. Exceptions to this rule will be listed in the release "
"notes."
msgstr ""

# f0c3f49cbe4243439f1374dd7563c33a
#: ../../internals/release-process.txt:24
msgid ""
"``C`` is the *micro version* number, which is incremented for bug and "
"security fixes. A new micro-release will be 100% backwards-compatible with "
"the previous micro-release. The only exception is when a security issue "
"can't be fixed without breaking backwards-compatibility. If this happens, "
"the release notes will provide detailed upgrade instructions."
msgstr ""

# cf57e07f91b443ec9fc7d66a491e7c08
#: ../../internals/release-process.txt:30
msgid ""
"In some cases, we'll make alpha, beta, or release candidate releases. These "
"are of the form ``A.B alpha/beta/rc N``, which means the ``Nth`` alpha/beta/"
"release candidate of version ``A.B``."
msgstr ""

# 6e57adddb3274aefb948ce9cd1cdd159
#: ../../internals/release-process.txt:34
msgid ""
"In Subversion, each Django release will be tagged under ``tags/releases``.  "
"If it's necessary to release a bug fix release or a security release that "
"doesn't come from the trunk, we'll copy that tag to ``branches/releases`` to "
"make the bug fix release."
msgstr ""

# a7dc83a359df4953b2ce51dcbb0cd15e
#: ../../internals/release-process.txt:40
msgid "Major releases"
msgstr ""

# 7e721448c10e4368937eeec49da56b92
#: ../../internals/release-process.txt:42
msgid ""
"Major releases (1.0, 2.0, etc.) will happen very infrequently (think \"years"
"\", not \"months\"), and will probably represent major, sweeping changes to "
"Django."
msgstr ""

# 137247623dbb4d829f89f6efc25e4a9a
#: ../../internals/release-process.txt:46
msgid "Minor releases"
msgstr ""

# 8233e4f269e547e8a0be5f87be9f8eca
#: ../../internals/release-process.txt:48
msgid ""
"Minor release (1.1, 1.2, etc.) will happen roughly every nine months -- see "
"`release process`_, below for details."
msgstr ""

# d7a9b128004e46579f10b3922777e682
#: ../../internals/release-process.txt:53
msgid ""
"These releases will contain new features, improvements to existing features, "
"and such. A minor release may deprecate certain features from previous "
"releases. If a feature in version ``A.B`` is deprecated, it will continue to "
"work in version ``A.B+1``. In version ``A.B+2``, use of the feature will "
"raise a ``DeprecationWarning`` but will continue to work. Version ``A.B+3`` "
"will remove the feature entirely."
msgstr ""

# d5d3bbc6dc2a4abe904d0202cc1a9697
#: ../../internals/release-process.txt:60
msgid ""
"So, for example, if we decided to remove a function that existed in Django "
"1.0:"
msgstr ""

# 0d98b0542f894fcf8ca9b9cd397d4203
#: ../../internals/release-process.txt:62
msgid ""
"Django 1.1 will contain a backwards-compatible replica of the function which "
"will raise a ``PendingDeprecationWarning``. This warning is silent by "
"default; you need to explicitly turn on display of these warnings."
msgstr ""

# 78b18b6036ca402897f9a206b9b8d64e
#: ../../internals/release-process.txt:66
msgid ""
"Django 1.2 will contain the backwards-compatible replica, but the warning "
"will be promoted to a full-fledged ``DeprecationWarning``. This warning is "
"*loud* by default, and will likely be quite annoying."
msgstr ""

# e09dca87a2c64c91b4153c59b0e7558a
#: ../../internals/release-process.txt:70
msgid "Django 1.3 will remove the feature outright."
msgstr ""

# d40f4f0d7f694694a06afdad357e93d4
#: ../../internals/release-process.txt:73
msgid "Micro releases"
msgstr ""

# 16152c25e5484fdface517631fed5d96
#: ../../internals/release-process.txt:75
msgid ""
"Micro releases (1.0.1, 1.0.2, 1.1.1, etc.) will be issued at least once half-"
"way between minor releases, and probably more often as needed."
msgstr ""

# 9ce242cf180541ceab9f6e190ed12b23
#: ../../internals/release-process.txt:78
msgid ""
"These releases will be 100% compatible with the associated minor release, "
"unless this is impossible for security reasons. So the answer to \"should I "
"upgrade to the latest micro release?\" will always be \"yes.\""
msgstr ""

# b8ca6744933e488796d4e5bac0675594
#: ../../internals/release-process.txt:82
msgid ""
"Each minor release of Django will have a \"release maintainer\" appointed. "
"This person will be responsible for making sure that bug fixes are applied "
"to both trunk and the maintained micro-release branch. This person will also "
"work with the release manager to decide when to release the micro releases."
msgstr ""

# b044d9b509ae45d98fa4dff59f895cba
#: ../../internals/release-process.txt:88
msgid "Supported versions"
msgstr ""

# ec84ccc5f6634ba6bad1e6fb02d82a25
#: ../../internals/release-process.txt:90
msgid ""
"At any moment in time, Django's developer team will support a set of "
"releases to varying levels:"
msgstr ""

# f8e89ff5f18349d49adc5f8b41a476c7
#: ../../internals/release-process.txt:93
msgid ""
"The current development trunk will get new features and bug fixes requiring "
"major refactoring."
msgstr ""

# 8a97fd1ead984534b8a33d34420d9342
#: ../../internals/release-process.txt:96
msgid ""
"Patches applied to the trunk will also be applied to the last minor release, "
"to be released as the next micro release, when they fix critical problems:"
msgstr ""

# ac2b6c87bc6a49e5aa23af4f4612374d
#: ../../internals/release-process.txt:100
msgid "Security issues."
msgstr ""

# 17faaad371354d74926188ac0b2833f8
#: ../../internals/release-process.txt:102
msgid "Data-loss bugs."
msgstr ""

# 4283a3322fd14909948b535ebc170f95
#: ../../internals/release-process.txt:104
msgid "Crashing bugs."
msgstr ""

# fe1987ab8fe04c6f8b4be3d2a16847ca
#: ../../internals/release-process.txt:106
msgid "Major functionality bugs in newly-introduced features."
msgstr ""

# 89da860cacb84033b62efe72f8e41806
#: ../../internals/release-process.txt:108
msgid ""
"The rule of thumb is that fixes will be backported to the last minor release "
"for bugs that would have prevented a release in the first place."
msgstr ""

# 59c3bb1cdb66482086340356bb04016a
#: ../../internals/release-process.txt:111
msgid ""
"Security fixes will be applied to the current trunk and the previous two "
"minor releases."
msgstr ""

# 517a7c5391024ce3b60e9d28b8e94ade
#: ../../internals/release-process.txt:114
msgid ""
"Documentation fixes generally will be more freely backported to the last "
"release branch, at the discretion of the committer, and they don't need to "
"meet the \"critical fixes only\" bar. That's because it's highly "
"advantageous to have the docs for the last release be up-to-date and "
"correct, and the downside of backporting (risk of introducing regressions) "
"is much less of a concern."
msgstr ""

# 5342f4014e78445b810cb850e8e2cd07
#: ../../internals/release-process.txt:121
msgid ""
"As a concrete example, consider a moment in time halfway between the release "
"of Django 1.3 and 1.4. At this point in time:"
msgstr ""

# b257de8101f84987a3919da5603e18ff
#: ../../internals/release-process.txt:124
msgid ""
"Features will be added to development trunk, to be released as Django 1.4."
msgstr ""

# d2f996900cbb41d884f876c3e86daa35
#: ../../internals/release-process.txt:126
msgid ""
"Critical bug fixes will be applied to a ``1.3.X`` branch, and released as "
"1.3.1, 1.3.2, etc."
msgstr ""

# ce594c28faab49f39b04bb5d9813e3ae
#: ../../internals/release-process.txt:129
msgid ""
"Security fixes will be applied to trunk, a ``1.3.X`` branch and a ``1.2.X`` "
"branch. They will trigger the release of ``1.3.1``, ``1.2.1``, etc."
msgstr ""

# 23ec432d9c48489894af43a01771ec6e
#: ../../internals/release-process.txt:133
msgid ""
"Documentation fixes will be applied to trunk, and, if easily backported, to "
"the ``1.3.X`` branch."
msgstr ""

# cf91124136a04d9189c535bf15a294a0
#: ../../internals/release-process.txt:139
msgid "Release process"
msgstr ""

# 7d721fe88c0b4e649a95e7a1a343a49c
#: ../../internals/release-process.txt:141
msgid ""
"Django uses a time-based release schedule, with minor (i.e. 1.1, 1.2, etc.) "
"releases every nine months, or more, depending on features."
msgstr ""

# 44951e7cb82d4944a5b9035177f925f4
#: ../../internals/release-process.txt:144
msgid ""
"After each release, and after a suitable cooling-off period of a few weeks, "
"the core development team will examine the landscape and announce a timeline "
"for the next release. Most releases will be scheduled in the 6-9 month "
"range, but if we have bigger features to development we might schedule a "
"longer period to allow for more ambitious work."
msgstr ""

# ce3dd7205b8e44deb229a2ffb28f5013
#: ../../internals/release-process.txt:151
msgid "Release cycle"
msgstr ""

# 1327dfdcea894429982eb79f87000dd3
#: ../../internals/release-process.txt:153
msgid ""
"Each release cycle will be split into three periods, each lasting roughly "
"one-third of the cycle:"
msgstr ""

# 365e291492d44836b1b97729155cfc56
#: ../../internals/release-process.txt:157
msgid "Phase one: feature proposal"
msgstr ""

# d8c4d3a8d219451f96f1963417305501
#: ../../internals/release-process.txt:159
msgid ""
"The first phase of the release process will be devoted to figuring out what "
"features to include in the next version. This should include a good deal of "
"preliminary work on those features -- working code trumps grand design."
msgstr ""

# bce5c764a0924e539594278c699d8e34
#: ../../internals/release-process.txt:163
msgid ""
"At the end of part one, the core developers will propose a feature list for "
"the upcoming release. This will be broken into:"
msgstr ""

# bf004141421245388add855c5818017a
#: ../../internals/release-process.txt:166
msgid ""
"\"Must-have\": critical features that will delay the release if not finished"
msgstr ""

# 3c407d34d32346bb9f300aa5b2a01c29
#: ../../internals/release-process.txt:167
msgid ""
"\"Maybe\" features: that will be pushed to the next release if not finished"
msgstr ""

# 7e1f53e259d5434096592f2144afee99
#: ../../internals/release-process.txt:168
msgid ""
"\"Not going to happen\": features explicitly deferred to a later release."
msgstr ""

# 0a2ba5f5fdb44245af9aa5f29c038657
#: ../../internals/release-process.txt:170
msgid ""
"Anything that hasn't got at least some work done by the end of the first "
"third isn't eligible for the next release; a design alone isn't sufficient."
msgstr ""

# 8abf2a1f37a4476abc2885b4b3c579c2
#: ../../internals/release-process.txt:174
msgid "Phase two: development"
msgstr ""

# eb5f5b6e956942a79347850b591e9b73
#: ../../internals/release-process.txt:176
msgid ""
"The second third of the release schedule is the \"heads-down\" working "
"period. Using the roadmap produced at the end of phase one, we'll all work "
"very hard to get everything on it done."
msgstr ""

# 70c34f8ccda54f41ae4ffe88f69660e7
#: ../../internals/release-process.txt:180
msgid ""
"Longer release schedules will likely spend more than a third of the time in "
"this phase."
msgstr ""

# 83e313b9cab141029d60f13360444ca3
#: ../../internals/release-process.txt:183
msgid ""
"At the end of phase two, any unfinished \"maybe\" features will be postponed "
"until the next release. Though it shouldn't happen, any \"must-have\" "
"features will extend phase two, and thus postpone the final release."
msgstr ""

# f74a7eb550204f26a461408b87ae5c64
#: ../../internals/release-process.txt:187
msgid "Phase two will culminate with an alpha release."
msgstr ""

# 067db87932dd4d97b4d717ef73c473b1
#: ../../internals/release-process.txt:190
msgid "Phase three: bugfixes"
msgstr ""

# da8a7744865c4321a5f1ea018a8f2cb3
#: ../../internals/release-process.txt:192
msgid ""
"The last third of a release is spent fixing bugs -- no new features will be "
"accepted during this time. We'll release a beta release about halfway "
"through, and an rc complete with string freeze two weeks before the end of "
"the schedule."
msgstr ""

# 47a67db70177480c985cdf1801ced5e5
#: ../../internals/release-process.txt:197
msgid "Bug-fix releases"
msgstr ""

# b0c1da0b66024e6b9bc3c0e24c3acbda
#: ../../internals/release-process.txt:199
msgid ""
"After a minor release (e.g. 1.1), the previous release will go into bug-fix "
"mode."
msgstr ""

# f8467fc06e414809831fdc13a57b5091
#: ../../internals/release-process.txt:202
msgid ""
"A branch will be created of the form ``branches/releases/1.0.X`` to track "
"bug-fixes to the previous release. Critical bugs fixed on trunk must *also* "
"be fixed on the bug-fix branch; this means that commits need to cleanly "
"separate bug fixes from feature additions. The developer who commits a fix "
"to trunk will be responsible for also applying the fix to the current bug-"
"fix branch.  Each bug-fix branch will have a maintainer who will work with "
"the committers to keep them honest on backporting bug fixes."
msgstr ""

# e79b529bcfc74c5da65acd0c4544bfea
#: ../../internals/release-process.txt:211
msgid "How this all fits together"
msgstr ""

# b593273d8dd54601a292ce5d9a7155b2
#: ../../internals/release-process.txt:213
msgid ""
"Let's look at a hypothetical example for how this all first together. "
"Imagine, if you will, a point about halfway between 1.1 and 1.2. At this "
"point, development will be happening in a bunch of places:"
msgstr ""

# 67275e4f758842bb9720b0a274e778f8
#: ../../internals/release-process.txt:217
msgid ""
"On trunk, development towards 1.2 proceeds with small additions, bugs fixes, "
"etc. being checked in daily."
msgstr ""

# 1d5674dcf7d64c82927aa56a5f4a1530
#: ../../internals/release-process.txt:220
msgid ""
"On the branch \"branches/releases/1.1.X\", fixes for critical bugs found in "
"the 1.1 release are checked in as needed. At some point, this branch will be "
"released as \"1.1.1\", \"1.1.2\", etc."
msgstr ""

# 17ecf2e3422447c194ebc93625d62ed4
#: ../../internals/release-process.txt:224
msgid ""
"On the branch \"branches/releases/1.0.X\", security fixes are made if needed "
"and released as \"1.0.2\", \"1.0.3\", etc."
msgstr ""

# 3cc9d5e7de5c465dbfd87fd2c960f1ce
#: ../../internals/release-process.txt:227
msgid ""
"On feature branches, development of major features is done. These branches "
"will be merged into trunk before the end of phase two."
msgstr ""

# 765496149a744d10a021a07224d41d73
#: ../../internals/svn.txt:3
msgid "The Django source code repository"
msgstr ""

# 65572db3f53c4c88baab7e721154885f
#: ../../internals/svn.txt:6
msgid ""
"When deploying a Django application into a real production environment, you "
"will almost always want to use `an official packaged release of Django`_. "
"However, if you'd like to try out in-development code from an upcoming "
"release or contribute to the development of Django, you'll need to obtain a "
"checkout from Django's source code repository. This document covers the way "
"the code repository is laid out and how to work with and find things in it."
msgstr ""

# 03bad011692448429a33ef610e78f6f3
#: ../../internals/svn.txt:19
msgid "High-level overview"
msgstr ""

# 095c03d641fd467dbb81dd303ee776f7
#: ../../internals/svn.txt:21
msgid ""
"The Django source code repository uses `Subversion`_ to track changes to the "
"code over time, so you'll need a copy of the Subversion client (a program "
"called ``svn``) on your computer, and you'll want to familiarize yourself "
"with the basics of how Subversion works. Subversion's Web site offers "
"downloads for various operating systems, and `a free online book`_ is "
"available to help you get up to speed with using Subversion."
msgstr ""

# 70d0b6c4d0b04924858aa08bd2f2037e
#: ../../internals/svn.txt:29
msgid ""
"The Django Subversion repository is located online at `code.djangoproject."
"com/svn <http://code.djangoproject.com/svn/>`_. `A friendly Web-based "
"interface for browsing the code`_ is also available, though when using "
"Subversion you'll always want to use the repository address instead. At the "
"top level of the repository are two directories: ``django`` contains the "
"full source code for all Django releases, while ``djangoproject.com`` "
"contains the source code and templates for the `djangoproject.com <http://"
"www.djangoproject.com/>`_ Web site. For trying out in-development Django "
"code, or contributing to Django, you'll always want to check out code from "
"some location in the ``django`` directory."
msgstr ""

# 260e1f2db19f4e79ad04df5973d9cd17
#: ../../internals/svn.txt:41
msgid ""
"Inside the ``django`` directory, Django's source code is organized into "
"three areas:"
msgstr ""

# 8fd8a35e49c340279923b105c4d81e59
#: ../../internals/svn.txt:44
msgid ""
"``branches`` contains branched copies of Django's code, which are (or were) "
"maintained for various purposes. Some branches exist to provide a place to "
"develop major or experimental new features without affecting the rest of "
"Django's code, while others serve to provide bug fixes or support for older "
"Django releases."
msgstr ""

# 2012918d51da4f8b8a2848a3339ae318
#: ../../internals/svn.txt:50
msgid ""
"``tags`` contains snapshots of Django's code at various important points in "
"its history; mostly these are the exact revisions from which packaged Django "
"releases were produced."
msgstr ""

# 1220124c2e154c9383624e48b6122509
#: ../../internals/svn.txt:54
msgid ""
"``trunk`` contains the main in-development code which will become the next "
"packaged release of Django, and is where most development activity is "
"focused."
msgstr ""

# b876042ecf2440a9b26372cef0c7a864
#: ../../internals/svn.txt:65
msgid "Working with Django's trunk"
msgstr ""

# 945eeb5d0de74b8980f99dc9b27e3cf3
#: ../../internals/svn.txt:67
msgid ""
"If you'd like to try out the in-development code for the next release of "
"Django, or if you'd like to contribute to Django by fixing bugs or "
"developing new features, you'll want to get the code from trunk. You can get "
"a complete copy of this code (a \"Subversion checkout\") by typing::"
msgstr ""

# d515776c28a44b32ba2df690abc07ca4
#: ../../internals/svn.txt:75
msgid ""
"Note that this will get *all* of Django: in addition to the top-level "
"``django`` module containing Python code, you'll also get a copy of Django's "
"documentation, unit-test suite, packaging scripts and other miscellaneous "
"bits. Django's code will be present in your checkout as a directory named "
"``django``."
msgstr ""

# f7c118eb5412448daf5e87802069c42d
#: ../../internals/svn.txt:81
msgid ""
"To try out the in-development trunk code with your own applications, simply "
"place the directory containing your checkout on your Python import path. "
"Then ``import`` statements which look for Django will find the ``django`` "
"module within your checkout."
msgstr ""

# 72f903852a8a4454aab5b29f89eb4141
#: ../../internals/svn.txt:86
msgid ""
"If you're going to be working on Django's code (say, to fix a bug or develop "
"a new feature), you can probably stop reading here and move over to :doc:"
"`the documentation for contributing to Django </internals/contributing/"
"index>`, which covers things like the preferred coding style and how to "
"generate and submit a patch."
msgstr ""

# f9d9df612c7045c0a309fa790cadd0cb
#: ../../internals/svn.txt:94
msgid "Branches"
msgstr ""

# b4e1ac7bb4d54cbd9c7337ccc9d910be
#: ../../internals/svn.txt:96
msgid "Django uses branches for two main purposes:"
msgstr ""

# c343c8d4eef1474eb565325a9bb6fc3b
#: ../../internals/svn.txt:98
msgid ""
"Development of major or experimental features, to keep them from affecting "
"progress on other work in trunk."
msgstr ""

# 5a63783377774f2bbd8f3fad4cac4db3
#: ../../internals/svn.txt:101
msgid ""
"Security and bug-fix support for older releases of Django, during their "
"support lifetimes."
msgstr ""

# 9c5575060caf48698b1685a3d6d78393
#: ../../internals/svn.txt:106
msgid "Feature-development branches"
msgstr ""

# 69360e8b489e4c7aa8adb38ba9479463
#: ../../internals/svn.txt:108
msgid ""
"Feature-development branches tend by their nature to be temporary. Some "
"produce successful features which are merged back into Django's trunk to "
"become part of an official release, but others do not; in either case there "
"comes a time when the branch is no longer being actively worked on by any "
"developer. At this point the branch is considered closed."
msgstr ""

# a5e7c99bd8a64f7184c11af6a6445fbc
#: ../../internals/svn.txt:115
msgid ""
"Unfortunately, Subversion has no standard way of indicating this. As a "
"workaround, branches of Django which are closed and no longer maintained are "
"moved into the directory ``django/branches/attic``."
msgstr ""

# bd7475b362954ab592e10efa2b2b0d6e
#: ../../internals/svn.txt:119
msgid ""
"For reference, the following are branches whose code eventually became part "
"of Django itself, and so are no longer separately maintained:"
msgstr ""

# eacfd5410aaf47aaaf2db6e06ac2db66
#: ../../internals/svn.txt:122
msgid ""
"``boulder-oracle-sprint``: Added support for Oracle databases to Django's "
"object-relational mapper. This has been part of Django since the 1.0 release."
msgstr ""

# b2bdb1cf91414c18a0b6bc261e5e22af
#: ../../internals/svn.txt:126
msgid ""
"``gis``: Added support for geographic/spatial queries to Django's object-"
"relational mapper. This has been part of Django since the 1.0 release, as "
"the bundled application ``django.contrib.gis``."
msgstr ""

# 7b1dad07aaf144d6b42859fe030b4e78
#: ../../internals/svn.txt:130
msgid ""
"``i18n``: Added :doc:`internationalization support </topics/i18n/index>` to "
"Django. This has been part of Django since the 0.90 release."
msgstr ""

# 9ac43ce25821471da3c69b28c606fce1
#: ../../internals/svn.txt:133
msgid ""
"``magic-removal``: A major refactoring of both the internals and public APIs "
"of Django's object-relational mapper. This has been part of Django since the "
"0.95 release."
msgstr ""

# 19ca3515fc16439baeb5bbdb99bc2e80
#: ../../internals/svn.txt:137
msgid ""
"``multi-auth``: A refactoring of :doc:`Django's bundled authentication "
"framework </topics/auth>` which added support for :ref:`authentication "
"backends <authentication-backends>`. This has been part of Django since the "
"0.95 release."
msgstr ""

# f883f02a899d447ea849a6cecbb25597
#: ../../internals/svn.txt:142
msgid ""
"``new-admin``: A refactoring of :doc:`Django's bundled administrative "
"application </ref/contrib/admin/index>`. This became part of Django as of "
"the 0.91 release, but was superseded by another refactoring (see next "
"listing) prior to the Django 1.0 release."
msgstr ""

# d2fb624cc3d34bdc8c749af9f38095cb
#: ../../internals/svn.txt:147
msgid ""
"``newforms-admin``: The second refactoring of Django's bundled "
"administrative application. This became part of Django as of the 1.0 "
"release, and is the basis of the current incarnation of ``django.contrib."
"admin``."
msgstr ""

# e86f6ff267c64e0f99a237efc0fecf3c
#: ../../internals/svn.txt:152
msgid ""
"``queryset-refactor``: A refactoring of the internals of Django's object-"
"relational mapper. This became part of Django as of the 1.0 release."
msgstr ""

# 4afe276b998240c99dc36c8069077e9e
#: ../../internals/svn.txt:156
msgid ""
"``unicode``: A refactoring of Django's internals to consistently use Unicode-"
"based strings in most places within Django and Django applications. This "
"became part of Django as of the 1.0 release."
msgstr ""

# 4ed73e0189a34650b119efd7ee8b9709
#: ../../internals/svn.txt:160
msgid ""
"Additionally, the following branches are closed, but their code was never "
"merged into Django and the features they aimed to implement were never "
"finished:"
msgstr ""

# 8936a63d15e145679de3f48935a1d515
#: ../../internals/svn.txt:164
msgid "``full-history``"
msgstr ""

# 212afef7c48145759143eb053c117b92
#: ../../internals/svn.txt:166
msgid "``generic-auth``"
msgstr ""

# ffdd7fc9f2f64380b4e1e6388491d6b4
#: ../../internals/svn.txt:168
msgid "``multiple-db-support``"
msgstr ""

# 3a16cfe77e2040459809a1e62dcc88b1
#: ../../internals/svn.txt:170
msgid "``per-object-permissions``"
msgstr ""

# 0fd1af32d3e143dab7ed647dcb70c215
#: ../../internals/svn.txt:172
msgid "``schema-evolution``"
msgstr ""

# 1a0ac3e9ab9e4462ad6615af58d803e6
#: ../../internals/svn.txt:174
msgid "``schema-evolution-ng``"
msgstr ""

# 31d35f110aac4ee89c4a7f443da17284
#: ../../internals/svn.txt:176
msgid "``search-api``"
msgstr ""

# 30c155d2afd64df6b7d39761662cabb8
#: ../../internals/svn.txt:178
msgid "``sqlalchemy``"
msgstr ""

# bb985072a9a24ca6ad70f89b8e19c262
#: ../../internals/svn.txt:180
msgid ""
"All of the above-mentioned branches now reside in ``django/branches/attic``."
msgstr ""

# 1a3c451a6f51469c89a2dafe849f5b6e
#: ../../internals/svn.txt:185
msgid "Support and bugfix branches"
msgstr ""

# 9692f580a5d140fba417d8d9ade4d6a6
#: ../../internals/svn.txt:187
msgid ""
"In addition to fixing bugs in current trunk, the Django project provides "
"official bug-fix support for the most recent released version of Django, and "
"security support for the two most recently-released versions of Django. This "
"support is provided via branches in which the necessary bug or security "
"fixes are applied; the branches are then used as the basis for issuing "
"bugfix or security releases."
msgstr ""

# 8e601f35aa9747cb9504e3ecc8f19ea8
#: ../../internals/svn.txt:194
msgid ""
"As of the Django 1.0 release, these branches can be found in the repository "
"in the directory ``django/branches/releases``, and new branches will be "
"created there approximately one month after each new Django release. For "
"example, shortly after the release of Django 1.0, the branch ``django/"
"branches/releases/1.0.X`` was created to receive bug fixes, and shortly "
"after the release of Django 1.1 the branch ``django/branches/releases/1.1."
"X`` was created."
msgstr ""

# d582db0f1d6d429bacfcc29572322429
#: ../../internals/svn.txt:202
msgid ""
"Prior to the Django 1.0 release, these branches were maintained within the "
"top-level ``django/branches`` directory, and so the following branches exist "
"there and provided support for older Django releases:"
msgstr ""

# 45604212ba214996820ce67060840f7b
#: ../../internals/svn.txt:206
msgid "``0.90-bugfixes``"
msgstr ""

# f0339aba194b4924bad92acfc68e8429
#: ../../internals/svn.txt:208
msgid "``0.91-bugfixes``"
msgstr ""

# 41e2b56e1d644e4daa706ae98c217047
#: ../../internals/svn.txt:210
msgid "``0.95-bugfixes``"
msgstr ""

# 85349547fc4d4ce5a4143d1ec7c061f7
#: ../../internals/svn.txt:212
msgid "``0.96-bugfixes``"
msgstr ""

# b6b1827b0892457ca25c3dfe088fd17e
#: ../../internals/svn.txt:214
msgid ""
"Official support for those releases has expired, and so they no longer "
"receive direct maintenance from the Django project. However, the branches "
"continue to exist and interested community members have occasionally used "
"them to provide unofficial support for old Django releases."
msgstr ""

# caeafe4eedf745ddba129547cd08b412
#: ../../internals/svn.txt:222
msgid "Tags"
msgstr ""

# ea202e9dbcf8473eb85c9ee70bf4c47b
#: ../../internals/svn.txt:224
msgid ""
"The directory ``django/tags`` within the repository contains complete copies "
"of the Django source code as it existed at various points in its history. "
"These \"tagged\" copies of Django are *never* changed or updated; new tags "
"may be added as needed, but once added they are considered read-only and "
"serve as useful guides to Django's development history."
msgstr ""

# a38a1050635c41fe9ab221b19800b999
#: ../../internals/svn.txt:231
msgid ""
"Within ``django/tags/releases`` are copies of the code which formed each "
"packaged release of Django, and each tag is named with the version number of "
"the release to which it corresponds. So, for example, ``django/tags/"
"releases/1.1`` is a complete copy of the code which was packaged as the "
"Django 1.1 release."
msgstr ""

# f4d075acedc040bfa85db5a9e47cb9e9
#: ../../internals/svn.txt:237
msgid ""
"Within ``django/tags/notable_moments`` are copies of the Django code from "
"points which do not directly correspond to releases, but which are "
"nonetheless important historical milestones for Django development. The "
"current \"notable moments\" marked there are:"
msgstr ""

# acbde19e94624eacafac0d862841be0f
#: ../../internals/svn.txt:242
msgid ""
"``ipo``: Django's code as it existed at the moment Django was first publicly "
"announced in 2005."
msgstr ""

# ba667f48211641fb96f3d26263e56edc
#: ../../internals/svn.txt:245
msgid ""
"``pre-magic-removal``: The state of Django's code just before the merging of "
"the ``magic-removal`` branch (described above), which significantly updated "
"Django's object-relational mapper."
msgstr ""

# a3d18bb0b8b14e45b69f2034f056f5b1
#: ../../internals/svn.txt:249
msgid ""
"``pre-newforms-admin``: The state of Django's code just before the merging "
"of the ``newforms-admin`` branch (see above), which significantly updated "
"Django's bundled administrative application."
msgstr ""

# e228d25910ac4a329ed48f080c78e047
#: ../../internals/svn.txt:253
msgid ""
"Tags corresponding to each of the alpha, beta and release-candidate packages "
"in the run up to the Django 1.0 release."
msgstr ""
