# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-03-12 13:35\n"
"PO-Revision-Date: 2012-03-12 13:35\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 160e2e309c764b2ba2d2893709b99e1c
#: ../../ref/authbackends.txt:3
msgid "Authentication backends"
msgstr ""

# 4cc3df7d67204079bfe9a8942b73e2e0
#: ../../ref/authbackends.txt:8
msgid ""
"This document details the authentication backends that come with Django. For "
"information on how to use them and how to write your own authentication "
"backends, see the :ref:`Other authentication sources section <authentication-"
"backends>` of the :doc:`User authentication guide </topics/auth>`."
msgstr ""

# 728362d532464a49b2f4aa2bff3367af
#: ../../ref/authbackends.txt:16
msgid "Available authentication backends"
msgstr ""

# 7a34bdd2b6764e99927b7464bd674ab5
#: ../../ref/authbackends.txt:18
msgid ""
"The following backends are available in :mod:`django.contrib.auth.backends`:"
msgstr ""

# c7ab89fa6d4c4e4e871902c1f7942686
#: ../../ref/authbackends.txt:22
msgid ""
"This is the default authentication backend used by Django.  It authenticates "
"using usernames and passwords stored in the :class:`~django.contrib.auth."
"models.User` model."
msgstr ""

# 700b34a5f29948c1ac6c4b89880fab54
#: ../../ref/authbackends.txt:29
msgid ""
"Use this backend to take advantage of external-to-Django-handled "
"authentication.  It authenticates using usernames passed in :attr:`request."
"META['REMOTE_USER'] <django.http.HttpRequest.META>`.  See the :doc:"
"`Authenticating against REMOTE_USER </howto/auth-remote-user>` documentation."
msgstr ""

# 9273eb988e88437187fa31ee757c8fe5
#: ../../ref/class-based-views.txt:3
msgid "Class-based generic views"
msgstr ""

# 195752ccb85d4803bc8f5aa17a882b76
#: ../../ref/class-based-views.txt:8
msgid ""
"Prior to Django 1.3, generic views were implemented as functions. The "
"function-based implementation has been deprecated in favor of the class-"
"based approach described here."
msgstr ""

# 77a83eaf30474af0ac79c819306b19c4
#: ../../ref/class-based-views.txt:12
msgid ""
"For details on the previous generic views implementation, see the :doc:"
"`topic guide </topics/generic-views>` and :doc:`detailed reference </ref/"
"generic-views>`."
msgstr ""

# 983b3183466648bdb26621fc01664091
#: ../../ref/class-based-views.txt:16
msgid ""
"Writing Web applications can be monotonous, because we repeat certain "
"patterns again and again. Django tries to take away some of that monotony at "
"the model and template layers, but Web developers also experience this "
"boredom at the view level."
msgstr ""

# 01830fa739d34c07bc2d628baec4ec4b
#: ../../ref/class-based-views.txt:21
msgid ""
"A general introduction to class-based generic views can be found in the :doc:"
"`topic guide </topics/class-based-views>`."
msgstr ""

# be4d8aad4d12469b8b329142bb03597b
#: ../../ref/class-based-views.txt:24
msgid ""
"This reference contains details of Django's built-in generic views, along "
"with a list of the keyword arguments that each generic view expects. "
"Remember that arguments may either come from the URL pattern or from the "
"``extra_context`` additional-information dictionary."
msgstr ""

# 4800f02c79204eda9a6e914c611fc660
# da4d8c2099b944c4926250e9165177f1
#: ../../ref/class-based-views.txt:29 ../../ref/generic-views.txt:28
msgid ""
"Most generic views require the ``queryset`` key, which is a ``QuerySet`` "
"instance; see :doc:`/topics/db/queries` for more information about "
"``QuerySet`` objects."
msgstr ""

# 5cd387126d88422f8405866a470a5ac9
#: ../../ref/class-based-views.txt:34
msgid "Mixins"
msgstr ""

# e2bbe65d97f04664a567f38776943d80
#: ../../ref/class-based-views.txt:36
msgid ""
"A mixin class is a way of using the inheritance capabilities of classes to "
"compose a class out of smaller pieces of behavior. Django's class-based "
"generic views are constructed by composing mixins into usable generic views."
msgstr ""

# 6e43ae852b38473eaf57eb095af13891
#: ../../ref/class-based-views.txt:41
msgid ""
"For example, the :class:`~django.views.generic.base.detail.DetailView` is "
"composed from:"
msgstr ""

# 90f40cfcedcd44a4a4a288965f402037
#: ../../ref/class-based-views.txt:44
msgid ""
":class:`~django.db.views.generic.base.View`, which provides the basic class-"
"based behavior"
msgstr ""

# 878c0b73ca7448d2986fb888ac0c721f
#: ../../ref/class-based-views.txt:46
msgid ""
":class:`~django.db.views.generic.detail.SingleObjectMixin`, which provides "
"the utilities for retrieving and displaying a single object"
msgstr ""

# e226784c8b6b4820b6d0507e7e240fa2
#: ../../ref/class-based-views.txt:48
msgid ""
":class:`~django.db.views.generic.detail.SingleObjectTemplateResponseMixin`, "
"which provides the tools for rendering a single object into a template-based "
"response."
msgstr ""

# 3446ab40e82f485e9011e34c4035d78e
#: ../../ref/class-based-views.txt:52
msgid ""
"When combined, these mixins provide all the pieces necessary to provide a "
"view over a single object that renders a template to produce a response."
msgstr ""

# bd1b7d2a2b6e45c482bdbd86653e0606
#: ../../ref/class-based-views.txt:56
msgid ""
"Django provides a range of mixins. If you want to write your own generic "
"views, you can build classes that compose these mixins in interesting ways. "
"Alternatively, you can just use the pre-mixed `Generic views`_ that Django "
"provides."
msgstr ""

# 649e343805544e55be2c7347324650ef
#: ../../ref/class-based-views.txt:63
msgid ""
"When the documentation for a view gives the list of mixins, that view "
"inherits all the properties and methods of that mixin."
msgstr ""

# a8f06cd946564babb958647517d3a6d6
#: ../../ref/class-based-views.txt:67
msgid "Simple mixins"
msgstr ""

# 2e884113445449f09bd4a86105f90783
#: ../../ref/class-based-views.txt:72
msgid "TemplateResponseMixin"
msgstr ""

# dcdb9b3ee31b4262ac6a67f27659be71
#: ../../ref/class-based-views.txt:77
msgid "The path to the template to use when rendering the view."
msgstr ""

# 48e8f900e31443d4871c56c9de7c6e80
#: ../../ref/class-based-views.txt:81
msgid ""
"The response class to be returned by ``render_to_response`` method. Default "
"is :class:`TemplateResponse <django.template.response.TemplateResponse>`. "
"The template and context of ``TemplateResponse`` instances can be altered "
"later (e.g. in :ref:`template response middleware <template-response-"
"middleware>`)."
msgstr ""

# c12bad96f6764f95a0de856a319d435e
#: ../../ref/class-based-views.txt:88
msgid ""
"If you need custom template loading or custom context object instantiation, "
"create a ``TemplateResponse`` subclass and assign it to ``response_class``."
msgstr ""

# ac9ee838c2574d51b0b3db33a54a0787
#: ../../ref/class-based-views.txt:94
msgid "Returns a ``self.response_class`` instance."
msgstr ""

# 04ee60417669440bb958abc5565030d1
#: ../../ref/class-based-views.txt:96
msgid ""
"If any keyword arguments are provided, they will be passed to the "
"constructor of the response class."
msgstr ""

# c9e11810ac1541a785dadc0fb45018e5
#: ../../ref/class-based-views.txt:99
msgid ""
"Calls :meth:`~TemplateResponseMixin.get_template_names()` to obtain the list "
"of template names that will be searched looking for an existent template."
msgstr ""

# b9c454f300c14e18bf8df66a57f7ed9f
#: ../../ref/class-based-views.txt:105
msgid ""
"Returns a list of template names to search for when rendering the template."
msgstr ""

# d20abb8a58ee4e4eab51ba061cbd7d8b
#: ../../ref/class-based-views.txt:108
msgid ""
"If :attr:`TemplateResponseMixin.template_name` is specified, the default "
"implementation will return a list containing :attr:`TemplateResponseMixin."
"template_name` (if it is specified)."
msgstr ""

# ed0ae628936d42f39d76c19d7a593cfe
#: ../../ref/class-based-views.txt:114
msgid "Single object mixins"
msgstr ""

# 4eecea87a690431cbcbbea74433b1e99
#: ../../ref/class-based-views.txt:119
msgid "SingleObjectMixin"
msgstr ""

# 3d43071449e0446ea2c53030695703e3
# 6b0dd65423f54267a7ee829288508f90
#: ../../ref/class-based-views.txt:124 ../../ref/class-based-views.txt:287
msgid ""
"The model that this view will display data for. Specifying ``model = Foo`` "
"is effectively the same as specifying ``queryset = Foo.objects.all()``."
msgstr ""

# f80f4b89bbfd47e69d9ca10ce7942d48
#: ../../ref/class-based-views.txt:130
msgid ""
"A ``QuerySet`` that represents the objects. If provided, the value of :attr:"
"`SingleObjectMixin.queryset` supersedes the value provided for :attr:"
"`SingleObjectMixin.model`."
msgstr ""

# cf2c34789424471a981485c79e64a300
#: ../../ref/class-based-views.txt:136
msgid ""
"The name of the field on the model that contains the slug. By default, "
"``slug_field`` is ``'slug'``."
msgstr ""

# 1f9c5b952c4b45759746a15197e22c04
#: ../../ref/class-based-views.txt:143
msgid ""
"The name of the URLConf keyword argument that contains the slug. By default, "
"``slug_url_kwarg`` is ``'slug'``."
msgstr ""

# 0d559284df504f29b5a41acf9d2188c3
#: ../../ref/class-based-views.txt:150
msgid ""
"The name of the URLConf keyword argument that contains the primary key. By "
"default, ``pk_url_kwarg`` is ``'pk'``."
msgstr ""

# 45a5306b9088488f8e961bbbd3174a6b
# c05f020f5ef74f64877fe8b3b9ec121e
#: ../../ref/class-based-views.txt:155 ../../ref/class-based-views.txt:315
msgid "Designates the name of the variable to use in the context."
msgstr ""

# 9aa15556c9914a18a7ca8964d5d05a0b
#: ../../ref/class-based-views.txt:159
msgid ""
"Returns the single object that this view will display. If ``queryset`` is "
"provided, that queryset will be used as the source of objects; otherwise, :"
"meth:`~SingleObjectMixin.get_queryset` will be used. ``get_object()`` looks "
"for a :attr:`SingleObjectMixin.pk_url_kwarg` argument in the arguments to "
"the view; if this argument is found, this method performs a primary-key "
"based lookup using that value. If this argument is not found, it looks for "
"a :attr:`SingleObjectMixin.slug_url_kwarg` argument, and performs a slug "
"lookup using the :attr:`SingleObjectMixin.slug_field`."
msgstr ""

# 141f69b7c32143719b2049c884bdcefd
#: ../../ref/class-based-views.txt:173
msgid ""
"Returns the queryset that will be used to retrieve the object that this view "
"will display. By default, :meth:`~SingleObjectMixin.get_queryset` returns "
"the value of the :attr:`~SingleObjectMixin.queryset` attribute if it is set, "
"otherwise it constructs a :class:`QuerySet` by calling the `all()` method on "
"the :attr:`~SingleObjectMixin.model` attribute's default manager."
msgstr ""

# 273896fdde3e46d3af4f1122b2910d34
#: ../../ref/class-based-views.txt:182
msgid ""
"Return the context variable name that will be used to contain the data that "
"this view is manipulating. If :attr:`~SingleObjectMixin.context_object_name` "
"is not set, the context name will be constructed from the ``object_name`` of "
"the model that the queryset is composed from. For example, the model "
"``Article`` would have context object named ``'article'``."
msgstr ""

# 25a2e0d51d574e6d8ec11eeefbfe5681
# 21eaf40769de49a19a74930432f8e625
#: ../../ref/class-based-views.txt:191 ../../ref/class-based-views.txt:362
msgid "Returns context data for displaying the list of objects."
msgstr ""

# 0d43d61ab2a6439e9dbd62f0eed9060e
# 03f72679e8584a60a370812b759e8215
# 9f97a81803834d2d87c954652e01bc23
# d836bc875db04d3b8963d8312c81aaca
# 5bf7db8731f44fa58ae0180f3cd24f31
# 199ed1f60a404ba1920b3594725ed504
# 5554434436cf471c826f8d2ddf3b909e
# 03496529ef514ae794e2bca14c1ca1f4
#: ../../ref/class-based-views.txt:193 ../../ref/class-based-views.txt:364
#: ../../ref/class-based-views.txt:472 ../../ref/class-based-views.txt:902
#: ../../ref/class-based-views.txt:1150 ../../ref/class-based-views.txt:1189
#: ../../ref/class-based-views.txt:1235 ../../ref/class-based-views.txt:1271
msgid "**Context**"
msgstr ""

# 19e11f07edb94688bb7eb7bf926ee80d
#: ../../ref/class-based-views.txt:195
msgid ""
"``object``: The object that this view is displaying. If "
"``context_object_name`` is specified, that variable will also be set in the "
"context, with the same value as ``object``."
msgstr ""

# 7acadc32407e441593fd51059b833cfa
#: ../../ref/class-based-views.txt:200
msgid "SingleObjectTemplateResponseMixin"
msgstr ""

# b80ec3144cc94164ac96e8375783e209
#: ../../ref/class-based-views.txt:204
msgid ""
"A mixin class that performs template-based response rendering for views that "
"operate upon a single object instance. Requires that the view it is mixed "
"with provides ``self.object``, the object instance that the view is "
"operating on. ``self.object`` will usually be, but is not required to be, an "
"instance of a Django model. It may be ``None`` if the view is in the process "
"of constructing a new instance."
msgstr ""

# 2f4cbd7d8f22457fa0c632ee4e0acfa4
# d51f6cad759a41f789a7376ffdff8470
#: ../../ref/class-based-views.txt:211 ../../ref/class-based-views.txt:393
msgid "**Extends**"
msgstr ""

# a4578a1f638b425ba8f91f2d16ef46d3
# ede2a0216c9a48aa98b6d13ebb36e3ac
#: ../../ref/class-based-views.txt:213 ../../ref/class-based-views.txt:395
msgid ":class:`~django.views.generic.base.TemplateResponseMixin`"
msgstr ""

# 92608f35fb6b42eabeb0aed769965c8c
#: ../../ref/class-based-views.txt:217
msgid ""
"The field on the current object instance that can be used to determine the "
"name of a candidate template. If either ``template_name_field`` or the value "
"of the ``template_name_field`` on the current object instance is ``None``, "
"the object will not be interrogated for a candidate template name."
msgstr ""

# b896a9066ede466db63523e60a9633d2
#: ../../ref/class-based-views.txt:225
msgid ""
"The suffix to append to the auto-generated candidate template name. Default "
"suffix is ``_detail``."
msgstr ""

# 22cd33539b34409ca1991edc63863069
# fddec89da974494bab0eabac21221147
#: ../../ref/class-based-views.txt:230 ../../ref/class-based-views.txt:404
msgid "Returns a list of candidate template names. Returns the following list:"
msgstr ""

# 645c1129de8a4cfaa8917d88fe682e97
# f54ecfe603fd4b82840fc73e00cefdfb
#: ../../ref/class-based-views.txt:232 ../../ref/class-based-views.txt:406
msgid "the value of ``template_name`` on the view (if provided)"
msgstr ""

# 5c909f4bb54940b0a1c9d3b705af9548
#: ../../ref/class-based-views.txt:233
msgid ""
"the contents of the ``template_name_field`` field on the object instance "
"that the view is operating upon (if available)"
msgstr ""

# fd3c34e4d7454a2c88a17f7bd369710c
# 88d8d00f84084c5fb66cc8be0897ba66
#: ../../ref/class-based-views.txt:235 ../../ref/class-based-views.txt:407
msgid "``<app_label>/<object_name><template_name_suffix>.html``"
msgstr ""

# cff50d2a44ff45db90f12d44d1d40632
#: ../../ref/class-based-views.txt:238
msgid "Multiple object mixins"
msgstr ""

# 7edfadd53ece4a1f90d7d5013ff8bbb7
#: ../../ref/class-based-views.txt:243
msgid "MultipleObjectMixin"
msgstr ""

# bf1510d721ca4fb8b27e8d61adb61c9e
#: ../../ref/class-based-views.txt:246
msgid "A mixin that can be used to display a list of objects."
msgstr ""

# 648c5e9e40a24f2fadeee75e2e5f2dec
#: ../../ref/class-based-views.txt:248
msgid ""
"If ``paginate_by`` is specified, Django will paginate the results returned "
"by this. You can specify the page number in the URL in one of two ways:"
msgstr ""

# 579e75b9608e458dbb7c4a79d4a93a83
# f4a510724d054edfb44f65be290ea972
#: ../../ref/class-based-views.txt:251 ../../ref/generic-views.txt:771
msgid ""
"Use the ``page`` parameter in the URLconf. For example, this is what your "
"URLconf might look like::"
msgstr ""

# d9f7fe90536c42aeaf90e3e0c6354aea
# 77fc3016b3874779a4e2e3f9c7ce7f77
#: ../../ref/class-based-views.txt:256 ../../ref/generic-views.txt:776
msgid ""
"Pass the page number via the ``page`` query-string parameter. For example, a "
"URL would look like this::"
msgstr ""

# 61a6e0741c3543dab5d0d8946b22310b
# a30b2d3296b6427fb1800f1fe1df46ec
#: ../../ref/class-based-views.txt:261 ../../ref/generic-views.txt:785
msgid ""
"These values and lists are 1-based, not 0-based, so the first page would be "
"represented as page ``1``."
msgstr ""

# 31a1c933107740828d17510ac54dc73b
# 5e9b3988a1cc4d75bf0396c78a3c9a8b
#: ../../ref/class-based-views.txt:264 ../../ref/generic-views.txt:788
msgid ""
"For more on pagination, read the :doc:`pagination documentation </topics/"
"pagination>`."
msgstr ""

# aef7ca69488e4358a99a8166b345d569
# bbd16d204e2d4529932ae018d46b093b
#: ../../ref/class-based-views.txt:267 ../../ref/generic-views.txt:791
msgid ""
"As a special case, you are also permitted to use ``last`` as a value for "
"``page``::"
msgstr ""

# d3ad800f0a244fb48c410c69a3367ab9
# a8eb224b139540929206a9a585b278a8
#: ../../ref/class-based-views.txt:272 ../../ref/generic-views.txt:796
msgid ""
"This allows you to access the final page of results without first having to "
"determine how many pages there are."
msgstr ""

# 07383081f46b455faf5b6777e1c989a6
# 6a578cfd948e44f38d2673ac059ac87e
#: ../../ref/class-based-views.txt:275 ../../ref/generic-views.txt:799
msgid ""
"Note that ``page`` *must* be either a valid page number or the value "
"``last``; any other value for ``page`` will result in a 404 error."
msgstr ""

# 37b48148028c45fb8f2b15bd4e48f5a9
#: ../../ref/class-based-views.txt:280
msgid ""
"A boolean specifying whether to display the page if no objects are "
"available. If this is ``False`` and no objects are available, the view will "
"raise a 404 instead of displaying an empty page. By default, this is "
"``True``."
msgstr ""

# 3b3ab937b88840e3bec02d0c87bf8260
#: ../../ref/class-based-views.txt:293
msgid ""
"A ``QuerySet`` that represents the objects. If provided, the value of :attr:"
"`MultipleObjectMixin.queryset` supersedes the value provided for :attr:"
"`MultipleObjectMixin.model`."
msgstr ""

# 37e191c4fd3c4ffa95f266fbbe131a8e
#: ../../ref/class-based-views.txt:299
msgid ""
"An integer specifying how many objects should be displayed per page. If this "
"is given, the view will paginate objects with :attr:`MultipleObjectMixin."
"paginate_by` objects per page. The view will expect either a ``page`` query "
"string parameter (via ``GET``) or a ``page`` variable specified in the "
"URLconf."
msgstr ""

# f981082f25ad4ae3a2d674e148cb2a4b
#: ../../ref/class-based-views.txt:307
msgid ""
"The paginator class to be used for pagination. By default, :class:`django."
"core.paginator.Paginator` is used. If the custom paginator class doesn't "
"have the same constructor interface as :class:`django.core.paginator."
"Paginator`, you will also need to provide an implementation for :meth:"
"`MultipleObjectMixin.get_paginator`."
msgstr ""

# d4a8f9feb22241e6b15ce434c51e4fec
#: ../../ref/class-based-views.txt:319
msgid "Returns the queryset that represents the data this view will display."
msgstr ""

# 69e3bb3cac5147188a7309c2daef9372
#: ../../ref/class-based-views.txt:323
msgid ""
"Returns a 4-tuple containing (``paginator``, ``page``, ``object_list``, "
"``is_paginated``)."
msgstr ""

# 47e1c14dde6040c8a280fb410b2b1b8a
#: ../../ref/class-based-views.txt:326
msgid ""
"Constructed by paginating ``queryset`` into pages of size ``page_size``. If "
"the request contains a ``page`` argument, either as a captured URL argument "
"or as a GET argument, ``object_list`` will correspond to the objects from "
"that page."
msgstr ""

# 193796674b1c4d9b872b9cbfa78175c9
#: ../../ref/class-based-views.txt:333
msgid ""
"Returns the number of items to paginate by, or ``None`` for no pagination. "
"By default this simply returns the value of :attr:`MultipleObjectMixin."
"paginate_by`."
msgstr ""

# 3c0bfbfa1ab4452a8d3519ad0dfb684e
#: ../../ref/class-based-views.txt:339
msgid ""
"Returns an instance of the paginator to use for this view. By default, "
"instantiates an instance of :attr:`paginator_class`."
msgstr ""

# 3e60fa99c00549aa9a6a7fd4a8794250
#: ../../ref/class-based-views.txt:344
msgid ""
"Return a boolean specifying whether to display the page if no objects are "
"available. If this method returns ``False`` and no objects are available, "
"the view will raise a 404 instead of displaying an empty page. By default, "
"this is ``True``."
msgstr ""

# 3240b7c285344233880167577176c9ea
#: ../../ref/class-based-views.txt:351
msgid ""
"Return the context variable name that will be used to contain the list of "
"data that this view is manipulating. If ``object_list`` is a queryset of "
"Django objects and :attr:`~MultipleObjectMixin.context_object_name` is not "
"set, the context name will be the ``object_name`` of the model that the "
"queryset is composed from, with postfix ``'_list'`` appended. For example, "
"the model ``Article`` would have a context object named ``article_list``."
msgstr ""

# 1d220f2e6f6346ccb278d56d9477c360
#: ../../ref/class-based-views.txt:366
msgid ""
"``object_list``: The list of objects that this view is displaying. If "
"``context_object_name`` is specified, that variable will also be set in the "
"context, with the same value as ``object_list``."
msgstr ""

# 9bacfd75517148c583b738b424321c09
#: ../../ref/class-based-views.txt:370
msgid ""
"``is_paginated``: A boolean representing whether the results are paginated. "
"Specifically, this is set to ``False`` if no page size has been specified, "
"or if the available objects do not span multiple pages."
msgstr ""

# a10169825fa64b549c19afd7dfb32142
#: ../../ref/class-based-views.txt:375
msgid ""
"``paginator``: An instance of :class:`django.core.paginator.Paginator`. If "
"the page is not paginated, this context variable will be ``None``."
msgstr ""

# 141dcfdb422641f9bf725d28ee4dcc94
#: ../../ref/class-based-views.txt:379
msgid ""
"``page_obj``: An instance of :class:`django.core.paginator.Page`. If the "
"page is not paginated, this context variable will be ``None``."
msgstr ""

# a3ed3263bf7a46eca47ced19f8db1c29
#: ../../ref/class-based-views.txt:384
msgid "MultipleObjectTemplateResponseMixin"
msgstr ""

# 9b93fd15cad04406b7e7a57d9e4c6e76
#: ../../ref/class-based-views.txt:387
msgid ""
"A mixin class that performs template-based response rendering for views that "
"operate upon a list of object instances. Requires that the view it is mixed "
"with provides ``self.object_list``, the list of object instances that the "
"view is operating on. ``self.object_list`` may be, but is not required to "
"be, a :class:`~django.db.models.query.QuerySet`."
msgstr ""

# de011f5f6ea14a2fb256684340a10d36
#: ../../ref/class-based-views.txt:399
msgid ""
"The suffix to append to the auto-generated candidate template name. Default "
"suffix is ``_list``."
msgstr ""

# 0bb783635a814594b295caeb62d76db7
#: ../../ref/class-based-views.txt:410
msgid "Editing mixins"
msgstr ""

# 3cbe3a189fd14b108c9d211cc75e6c1d
#: ../../ref/class-based-views.txt:415
msgid "FormMixin"
msgstr ""

# 4c1096e4be214c7796e3bce7020a2889
#: ../../ref/class-based-views.txt:418
msgid ""
"A mixin class that provides facilities for creating and displaying forms."
msgstr ""

# a213280f66cd4ab396fbf78665bbb5cb
#: ../../ref/class-based-views.txt:422
msgid "A dictionary containing initial data for the form."
msgstr ""

# 8ebb298b457a43a6a2c5569bee673279
#: ../../ref/class-based-views.txt:426
msgid "The form class to instantiate."
msgstr ""

# 4eb188ef45a944bbb22f6ba84bfb7269
# 8f8ab1b7a7cb46f993e53f86da8bbec9
#: ../../ref/class-based-views.txt:430 ../../ref/class-based-views.txt:503
msgid "The URL to redirect to when the form is successfully processed."
msgstr ""

# 6a4af3fc55a3475894261ad31688f4c2
#: ../../ref/class-based-views.txt:434
msgid ""
"Retrieve initial data for the form. By default, returns :attr:`.initial`."
msgstr ""

# 2a02a2e4fe6d4d11ae74c7c3e5e43e93
#: ../../ref/class-based-views.txt:439
msgid "Retrieve the form class to instantiate. By default :attr:`.form_class`."
msgstr ""

# 0cb82388bfb34d599e2b6da0beaae1d8
#: ../../ref/class-based-views.txt:444
msgid ""
"Instantiate an instance of ``form_class`` using :meth:`.get_form_kwargs`."
msgstr ""

# 558830048bee4f578e97c94cf73b7c8e
#: ../../ref/class-based-views.txt:449
msgid "Build the keyword arguments required to instantiate the form."
msgstr ""

# 6ba9141500594082923b0e00054cea22
#: ../../ref/class-based-views.txt:451
msgid ""
"The ``initial`` argument is set to :meth:`.get_initial`. If the request is a "
"``POST`` or ``PUT``, the request data (``request.POST`` and ``request."
"FILES``) will also be provided."
msgstr ""

# 4302832f197a48708a2362a8d1cc9c81
#: ../../ref/class-based-views.txt:457
msgid ""
"Determine the URL to redirect to when the form is successfully validated. "
"Returns :attr:`.success_url` by default."
msgstr ""

# 6f49a27b81aa4b33bdacb4badab44b5e
#: ../../ref/class-based-views.txt:462
msgid "Redirects to :meth:`.get_success_url`."
msgstr ""

# b01453009a8e4d4b888266bea4b6aa44
# 9d5701f189d14f0681b3cffe11093ef1
#: ../../ref/class-based-views.txt:466 ../../ref/class-based-views.txt:537
msgid "Renders a response, providing the invalid form as context."
msgstr ""

# 8270913f270d4630807c2b1bf3b3ffd7
#: ../../ref/class-based-views.txt:470
msgid "Populates a context containing the contents of ``kwargs``."
msgstr ""

# 88ff0b90b7aa423e8a26c168dc560746
#: ../../ref/class-based-views.txt:474
msgid "``form``: The form instance that was generated for the view."
msgstr ""

# 4893cb46e0ca445bbc9f38d3f9764a0b
#: ../../ref/class-based-views.txt:478
msgid ""
"Views mixing :class:`FormMixin` must provide an implementation of :meth:`."
"form_valid` and :meth:`.form_invalid`."
msgstr ""

# 6b8da76134f444d6aef94a607a679d95
#: ../../ref/class-based-views.txt:483
msgid "ModelFormMixin"
msgstr ""

# 1e925a617c2d447d901ba33b311bfa49
#: ../../ref/class-based-views.txt:486
msgid "A form mixin that works on ModelForms, rather than a standalone form."
msgstr ""

# d8636b60be7e47dc9514ea7588fd4caa
#: ../../ref/class-based-views.txt:488
msgid ""
"Since this is a subclass of :class:`~django.views.generic.detail."
"SingleObjectMixin`, instances of this mixin have access to the :attr:"
"`~SingleObjectMixin.model` and :attr:`~SingleObjectMixin.queryset` "
"attributes, describing the type of object that the ModelForm is "
"manipulating. The view also provides ``self.object``, the instance being "
"manipulated. If the instance is being created, ``self.object`` will be "
"``None``."
msgstr ""

# 38c1b8eb15f84b7999213866c1e52ec0
# 087afc30004f4eff9ad3ba2328fc22a4
# d5cc6917ec644ce0a4ba8768f4e3e24f
# 91b4e39b9d2446b697e6ab22d22be3c9
# 7f93066933a54cb682ded9c5dcec520b
# 7a03f3c95a034215a4424478984bdeb0
# 98f515556d91414ea316a48b1a7179d8
# f6d733cdb6eb4d6b9d3508b0549b0bda
# 122013ac99a64df39108026f9978b761
# fede323e1c9c4d43a61152397f457118
# cc813d7ce1c849a28dccac840d89cb1b
# fb96a1f8967a4d6c80216bdf45e391ba
# 0eaa52b3a2b54337b08706a33ac60a95
# c14ca05261b74281a97dad367712d8e5
# 8e7b5a91bd244bc4b379c65c3468ed7a
# 87a8297e77c14a2f897df8f667be3669
#: ../../ref/class-based-views.txt:496 ../../ref/class-based-views.txt:783
#: ../../ref/class-based-views.txt:889 ../../ref/class-based-views.txt:972
#: ../../ref/class-based-views.txt:998 ../../ref/class-based-views.txt:1021
#: ../../ref/class-based-views.txt:1038 ../../ref/class-based-views.txt:1057
#: ../../ref/class-based-views.txt:1076 ../../ref/class-based-views.txt:1108
#: ../../ref/class-based-views.txt:1132 ../../ref/class-based-views.txt:1182
#: ../../ref/class-based-views.txt:1228 ../../ref/class-based-views.txt:1263
#: ../../ref/class-based-views.txt:1312 ../../ref/class-based-views.txt:1331
msgid "**Mixins**"
msgstr ""

# 19c25e8612714f13a6bafbeab1ced699
# 476958d5e69f4ddf9b822533d7845f3c
#: ../../ref/class-based-views.txt:498 ../../ref/class-based-views.txt:1023
msgid ":class:`django.views.generic.edit.FormMixin`"
msgstr ""

# 983028f0f389404599c009a881f04361
# 854400ee285641ec8bbffb542fdf486f
#: ../../ref/class-based-views.txt:499 ../../ref/class-based-views.txt:974
msgid ":class:`django.views.generic.detail.SingleObjectMixin`"
msgstr ""

# e1781bf132d54de0bc9b188fc6249907
#: ../../ref/class-based-views.txt:505
msgid ""
"``success_url`` may contain dictionary string formatting, which will be "
"interpolated against the object's field attributes. For example, you could "
"use ``success_url=\"/polls/%(slug)s/\"`` to redirect to a URL composed out "
"of the ``slug`` field on a model."
msgstr ""

# 16620c1fc97d4868966179c2db197b02
#: ../../ref/class-based-views.txt:512
msgid ""
"Retrieve the form class to instantiate. If :attr:`FormMixin.form_class` is "
"provided, that class will be used. Otherwise, a ModelForm will be "
"instantiated using the model associated with the :attr:`~SingleObjectMixin."
"queryset`, or with the :attr:`~SingleObjectMixin.model`, depending on which "
"attribute is provided."
msgstr ""

# fa4c618fa5c64d06922c9afde054c809
#: ../../ref/class-based-views.txt:521
msgid ""
"Add the current instance (``self.object``) to the standard :meth:`FormMixin."
"get_form_kwargs`."
msgstr ""

# b2e9b9c048124c8aab30a679461df9e5
#: ../../ref/class-based-views.txt:526
msgid ""
"Determine the URL to redirect to when the form is successfully validated. "
"Returns :attr:`FormMixin.success_url` if it is provided; otherwise, attempts "
"to use the ``get_absolute_url()`` of the object."
msgstr ""

# 66ab4acf57b94177a839e67ec6c52ef9
#: ../../ref/class-based-views.txt:532
msgid ""
"Saves the form instance, sets the current object for the view, and redirects "
"to :meth:`.get_success_url`."
msgstr ""

# 2b2d4c1aac474f0691debcbfcef20698
#: ../../ref/class-based-views.txt:540
msgid "ProcessFormView"
msgstr ""

# eeefdc8c614d40dc98f32fa78aab8c32
#: ../../ref/class-based-views.txt:543
msgid "A mixin that provides basic HTTP GET and POST workflow."
msgstr ""

# 2a0888bc99704b018df100dc62ca7981
#: ../../ref/class-based-views.txt:547
msgid ""
"Constructs a form, then renders a response using a context that contains "
"that form."
msgstr ""

# ac87dd309fea4eb7ab96df0f35be96dd
#: ../../ref/class-based-views.txt:552
msgid ""
"Constructs a form, checks the form for validity, and handles it accordingly."
msgstr ""

# 27bfe51b96484f6ca588fd1f29049ddb
#: ../../ref/class-based-views.txt:555
msgid "The PUT action is also handled, as an analog of POST."
msgstr ""

# 7f38993a025c4556b413d319c686100a
#: ../../ref/class-based-views.txt:558
msgid "DeletionMixin"
msgstr ""

# 9be85a1d5d774a50abf8e30964e17880
#: ../../ref/class-based-views.txt:561
msgid "Enables handling of the ``DELETE`` http action."
msgstr ""

# 4b853b5ed4f04bf3b2659edac2509328
#: ../../ref/class-based-views.txt:565
msgid ""
"The url to redirect to when the nominated object has been successfully "
"deleted."
msgstr ""

# 1df33609947a48779a29060621c6cda0
#: ../../ref/class-based-views.txt:570
msgid ""
"Returns the url to redirect to when the nominated object has been "
"successfully deleted. Returns :attr:`~django.views.generic.edit."
"DeletionMixin.success_url` by default."
msgstr ""

# 94ff3760210e4fdcbfe8a0bcf9621e9e
#: ../../ref/class-based-views.txt:576
msgid "Date-based mixins"
msgstr ""

# a4d8036b327443fab758b8d9cfd00561
#: ../../ref/class-based-views.txt:581
msgid "YearMixin"
msgstr ""

# 204ba957a64640cdab17fee5ca72b788
#: ../../ref/class-based-views.txt:584
msgid ""
"A mixin that can be used to retrieve and provide parsing information for a "
"year component of a date."
msgstr ""

# 7646c6ad8462437cb25ebfb24447c9a0
#: ../../ref/class-based-views.txt:589
msgid ""
"The :func:`~time.strftime` format to use when parsing the year. By default, "
"this is ``'%Y'``."
msgstr ""

# fafe381aef6941228feed235bc06f206
#: ../../ref/class-based-views.txt:594
msgid ""
"**Optional** The value for the year (as a string). By default, set to "
"``None``, which means the year will be determined using other means."
msgstr ""

# 4f40e6dfc11142f9bdf349a7f3ed3fc7
#: ../../ref/class-based-views.txt:599
msgid ""
"Returns the :func:`~time.strftime` format to use when parsing the year. "
"Returns :attr:`YearMixin.year_format` by default."
msgstr ""

# 0f7f8d765e174f15998147d1b7486c48
#: ../../ref/class-based-views.txt:604
msgid ""
"Returns the year for which this view will display data. Tries the following "
"sources, in order:"
msgstr ""

# c28b3d52f05345ea9ea63ff3295fbc66
#: ../../ref/class-based-views.txt:607
msgid "The value of the :attr:`YearMixin.year` attribute."
msgstr ""

# d3db9b6add0548a2996cc514a7cb0e9c
#: ../../ref/class-based-views.txt:608
msgid "The value of the `year` argument captured in the URL pattern"
msgstr ""

# 69d0c2e8f25a4925a54f6898ecd592cb
#: ../../ref/class-based-views.txt:609
msgid "The value of the `year` GET query argument."
msgstr ""

# 48c7e4c3d492466bba3a3d0b4c6bdb91
#: ../../ref/class-based-views.txt:611
msgid "Raises a 404 if no valid year specification can be found."
msgstr ""

# 3adc31b44ae34ef69407893c920ae010
#: ../../ref/class-based-views.txt:614
msgid "MonthMixin"
msgstr ""

# 8721946f0a444c9ca409f20ebea3b971
#: ../../ref/class-based-views.txt:617
msgid ""
"A mixin that can be used to retrieve and provide parsing information for a "
"month component of a date."
msgstr ""

# cd86ed5f72d746e29ffcfd6961a6e857
#: ../../ref/class-based-views.txt:622
msgid ""
"The :func:`~time.strftime` format to use when parsing the month. By default, "
"this is ``'%b'``."
msgstr ""

# 158495af225f4f9b82ca653b35f96d5c
#: ../../ref/class-based-views.txt:627
msgid ""
"**Optional** The value for the month (as a string). By default, set to "
"``None``, which means the month will be determined using other means."
msgstr ""

# 96f6ee4975ea4024b2f736af2c6322b3
#: ../../ref/class-based-views.txt:632
msgid ""
"Returns the :func:`~time.strftime` format to use when parsing the month. "
"Returns :attr:`MonthMixin.month_format` by default."
msgstr ""

# 316cbfb0026d4767ae632b7a1bd58ea8
#: ../../ref/class-based-views.txt:637
msgid ""
"Returns the month for which this view will display data. Tries the following "
"sources, in order:"
msgstr ""

# b87aa7c39a544187b6af48a643a70db6
#: ../../ref/class-based-views.txt:640
msgid "The value of the :attr:`MonthMixin.month` attribute."
msgstr ""

# 8ea6091ca4114f9281c8845316c335c2
#: ../../ref/class-based-views.txt:641
msgid "The value of the `month` argument captured in the URL pattern"
msgstr ""

# 524e51865a664ce6a2bd9a2ae2f14937
#: ../../ref/class-based-views.txt:642
msgid "The value of the `month` GET query argument."
msgstr ""

# 6d628e02790f4cc69e995bbf604ee775
#: ../../ref/class-based-views.txt:644
msgid "Raises a 404 if no valid month specification can be found."
msgstr ""

# 3c72aed9b9a4464aba551f878e2b9892
#: ../../ref/class-based-views.txt:648
msgid ""
"Returns a date object containing the first day of the month after the date "
"provided. Returns ``None`` if mixed with a view that sets ``allow_future = "
"False``, and the next month is in the future. If ``allow_empty = False``, "
"returns the next month that contains data."
msgstr ""

# c77f58f460f44caab43716248a3b7a1e
#: ../../ref/class-based-views.txt:655
msgid ""
"Returns a date object containing the first day of the month before the date "
"provided. If ``allow_empty = False``, returns the previous month that "
"contained data."
msgstr ""

# efd18980806b49c3bb1f7425cdf0d88e
#: ../../ref/class-based-views.txt:660
msgid "DayMixin"
msgstr ""

# 38653ea9311c46fa87c170612800b283
#: ../../ref/class-based-views.txt:663
msgid ""
"A mixin that can be used to retrieve and provide parsing information for a "
"day component of a date."
msgstr ""

# 549a8ce111f84d7eb52203fbe4bd4218
#: ../../ref/class-based-views.txt:668
msgid ""
"The :func:`~time.strftime` format to use when parsing the day. By default, "
"this is ``'%d'``."
msgstr ""

# e4169ec0db784c1a94720a5992c86a44
#: ../../ref/class-based-views.txt:673
msgid ""
"**Optional** The value for the day (as a string). By default, set to "
"``None``, which means the day will be determined using other means."
msgstr ""

# 0f0fe366e16f41ea991aea2fc0d3b58d
#: ../../ref/class-based-views.txt:678
msgid ""
"Returns the :func:`~time.strftime` format to use when parsing the day. "
"Returns :attr:`DayMixin.day_format` by default."
msgstr ""

# 6fc086aaf14440a2a99afaa71cdfb0d5
#: ../../ref/class-based-views.txt:683
msgid ""
"Returns the day for which this view will display data. Tries the following "
"sources, in order:"
msgstr ""

# d49ab30ad80e4ba19c3024450b237f67
#: ../../ref/class-based-views.txt:686
msgid "The value of the :attr:`DayMixin.day` attribute."
msgstr ""

# f8e4db4d2bcd465a87a5daffe9701d7f
#: ../../ref/class-based-views.txt:687
msgid "The value of the `day` argument captured in the URL pattern"
msgstr ""

# b264d672d5af4462b90840a96a97c816
#: ../../ref/class-based-views.txt:688
msgid "The value of the `day` GET query argument."
msgstr ""

# 204247e36881446a9efbda788f33877e
#: ../../ref/class-based-views.txt:690
msgid "Raises a 404 if no valid day specification can be found."
msgstr ""

# 3352548e03d442e7b02fbfb4c8b11d06
#: ../../ref/class-based-views.txt:694
msgid ""
"Returns a date object containing the next day after the date provided. "
"Returns ``None`` if mixed with a view that sets ``allow_future = False``, "
"and the next day is in the future. If ``allow_empty = False``, returns the "
"next day that contains data."
msgstr ""

# ef1f2ac65027408799e3375112aa486e
#: ../../ref/class-based-views.txt:701
msgid ""
"Returns a date object containing the previous day. If ``allow_empty = "
"False``, returns the previous day that contained data."
msgstr ""

# 14b2616221424fd18f7b5e866a9f2029
#: ../../ref/class-based-views.txt:705
msgid "WeekMixin"
msgstr ""

# 0c22904b2df14c95a37d78fce0855426
#: ../../ref/class-based-views.txt:708
msgid ""
"A mixin that can be used to retrieve and provide parsing information for a "
"week component of a date."
msgstr ""

# 6b2964e925d64be7a46288c6d29584ac
#: ../../ref/class-based-views.txt:713
msgid ""
"The :func:`~time.strftime` format to use when parsing the week. By default, "
"this is ``'%U'``."
msgstr ""

# b0ea4a54122245d3a130ed85ea7d0a76
#: ../../ref/class-based-views.txt:718
msgid ""
"**Optional** The value for the week (as a string). By default, set to "
"``None``, which means the week will be determined using other means."
msgstr ""

# c890252812164f8f9208beae561b0c94
#: ../../ref/class-based-views.txt:723
msgid ""
"Returns the :func:`~time.strftime` format to use when parsing the week. "
"Returns :attr:`WeekMixin.week_format` by default."
msgstr ""

# a88b53e5f2be4c1f8b11e2324641bcaf
#: ../../ref/class-based-views.txt:728
msgid ""
"Returns the week for which this view will display data. Tries the following "
"sources, in order:"
msgstr ""

# c25cd3a7ff644fe19fb0df1bc2b07dd9
#: ../../ref/class-based-views.txt:731
msgid "The value of the :attr:`WeekMixin.week` attribute."
msgstr ""

# 4228d0cf748245caaa7deb116cfb78b5
#: ../../ref/class-based-views.txt:732
msgid "The value of the `week` argument captured in the URL pattern"
msgstr ""

# eb86016c4daa48ee9524a03770f86bd3
#: ../../ref/class-based-views.txt:733
msgid "The value of the `week` GET query argument."
msgstr ""

# 8405004b948e43cda9bf99948d37bf9e
#: ../../ref/class-based-views.txt:735
msgid "Raises a 404 if no valid week specification can be found."
msgstr ""

# 01025322ebce46d296967fd1159718db
#: ../../ref/class-based-views.txt:739
msgid "DateMixin"
msgstr ""

# 505a1dda0db142d28c6077b47a7be9d9
#: ../../ref/class-based-views.txt:742
msgid "A mixin class providing common behavior for all date-based views."
msgstr ""

# 0318a8e4568049e6ade9a61efd3cb64d
#: ../../ref/class-based-views.txt:746
msgid ""
"The name of the ``DateField`` or ``DateTimeField`` in the ``QuerySet``'s "
"model that the date-based archive should use to determine the objects on the "
"page."
msgstr ""

# 8c9387773781405c8d1abe7548707226
#: ../../ref/class-based-views.txt:752
msgid ""
"A boolean specifying whether to include \"future\" objects on this page, "
"where \"future\" means objects in which the field specified in "
"``date_field`` is greater than the current date/time. By default, this is "
"``False``."
msgstr ""

# 8245b53ba13f4f27b5cfe032e7dca40a
#: ../../ref/class-based-views.txt:759
msgid ""
"Returns the name of the field that contains the date data that this view "
"will operate on. Returns :attr:`DateMixin.date_field` by default."
msgstr ""

# 4f039a5294644d69a66fd0f76be70199
#: ../../ref/class-based-views.txt:764
msgid ""
"Determine whether to include \"future\" objects on this page, where \"future"
"\" means objects in which the field specified in ``date_field`` is greater "
"than the current date/time. Returns :attr:`DateMixin.allow_future` by "
"default."
msgstr ""

# df1d02e5e5f740f88436444fe4e7b273
#: ../../ref/class-based-views.txt:770
msgid "BaseDateListView"
msgstr ""

# 41efc876365d4882b2c0dcf7b1252efe
#: ../../ref/class-based-views.txt:773
msgid ""
"A base class that provides common behavior for all date-based views. There "
"won't normally be a reason to instantiate :class:`~django.views.generic."
"dates.BaseDateListView`; instantiate one of the subclasses instead."
msgstr ""

# 3be4c720b916435f8e8d68f68d18d526
#: ../../ref/class-based-views.txt:778
msgid ""
"While this view (and it's subclasses) are executing, ``self.object_list`` "
"will contain the list of objects that the view is operating upon, and ``self."
"date_list`` will contain the list of dates for which data is available."
msgstr ""

# 4704255b57034f499245460e4babe8b2
#: ../../ref/class-based-views.txt:785
msgid ":class:`~django.views.generic.dates.DateMixin`"
msgstr ""

# e8e22468908b4508bfa69bcc253f63d6
#: ../../ref/class-based-views.txt:786
msgid ":class:`~django.views.generic.list.MultipleObjectMixin`"
msgstr ""

# 70e8f67f4a6544aa8ec637ff4dc99ae4
#: ../../ref/class-based-views.txt:790
msgid ""
"A boolean specifying whether to display the page if no objects are "
"available. If this is ``True`` and no objects are available, the view will "
"display an empty page instead of raising a 404. By default, this is "
"``False``."
msgstr ""

# a406d0f8f9654d5d9fd122884c106e86
#: ../../ref/class-based-views.txt:797
msgid ""
"Returns a 3-tuple containing (``date_list``, ``object_list``, "
"``extra_context``)."
msgstr ""

# e10a4d72c5b3404ba1c3f2f0f3afd9b5
#: ../../ref/class-based-views.txt:800
msgid ""
"``date_list`` is the list of dates for which data is available. "
"``object_list`` is the list of objects. ``extra_context`` is a dictionary of "
"context data that will be added to any context data provided by the :class:"
"`~django.views.generic.list.MultipleObjectMixin`."
msgstr ""

# fc92f25f5af546dc8191414f50731056
#: ../../ref/class-based-views.txt:808
msgid ""
"Returns a queryset, filtered using the query arguments defined by "
"``lookup``. Enforces any restrictions on the queryset, such as "
"``allow_empty`` and ``allow_future``."
msgstr ""

# 3d1c4eb2160940068ff882b783fab24f
#: ../../ref/class-based-views.txt:814
msgid ""
"Returns the list of dates of type ``date_type`` for which ``queryset`` "
"contains entries. For example, ``get_date_list(qs, 'year')`` will return the "
"list of years for which ``qs`` has entries. See :meth:`~django.db.models."
"query.QuerySet.dates()` for the ways that the ``date_type`` argument can be "
"used."
msgstr ""

# 5af95c9e4bcc430395af46fbdb60f15d
# 490087577cb54bb9b808a99ab2050bbb
#: ../../ref/class-based-views.txt:822 ../../ref/generic-views.txt:3
msgid "Generic views"
msgstr ""

# 7b0da6965e5c4cbf881261114a1e95b5
#: ../../ref/class-based-views.txt:825
msgid "Simple generic views"
msgstr ""

# cc4587a21dde4ffeadbf1a408f74fb6f
#: ../../ref/class-based-views.txt:830
msgid "View"
msgstr ""

# 81562f3037e1416880d92ff38e6f30f9
#: ../../ref/class-based-views.txt:833
msgid ""
"The master class-based base view. All other generic class-based views "
"inherit from this base class."
msgstr ""

# e88cb31e5e874d19afdad2c5d58d91ca
#: ../../ref/class-based-views.txt:836
msgid ""
"Each request served by a :class:`~django.views.generic.base.View` has an "
"independent state; therefore, it is safe to store state variables on the "
"instance (i.e., ``self.foo = 3`` is a thread-safe operation)."
msgstr ""

# 294df415681b45d7a216632a1ad0e65d
#: ../../ref/class-based-views.txt:840
msgid ""
"A class-based view is deployed into a URL pattern using the :meth:`~View."
"as_view()` classmethod::"
msgstr ""

# 0d40b65a21a94320baaa4e488a961ad3
#: ../../ref/class-based-views.txt:847
msgid ""
"Any argument passed into :meth:`~View.as_view()` will be assigned onto the "
"instance that is used to service a request. Using the previous example, this "
"means that every request on ``MyView`` is able to interrogate ``self.size``."
msgstr ""

# e888ba0a6b8a4e01b2a23f8dba80683b
#: ../../ref/class-based-views.txt:854
msgid ""
"Arguments passed to a view are shared between every instance of a view. This "
"means that you shoudn't use a list, dictionary, or any other variable object "
"as an argument to a view. If you did, the actions of one user visiting your "
"view could have an effect on subsequent users visiting the same view."
msgstr ""

# 202d5d5362bf428d8376342fb69aedf4
#: ../../ref/class-based-views.txt:862
msgid ""
"The ``view`` part of the view -- the method that accepts a ``request`` "
"argument plus arguments, and returns a HTTP response."
msgstr ""

# 0fce3f1059904711b09ab0a88cf3553d
#: ../../ref/class-based-views.txt:865
msgid ""
"The default implementation will inspect the HTTP method and attempt to "
"delegate to a method that matches the HTTP method; a ``GET`` will be "
"delegated to :meth:`~View.get()`, a ``POST`` to :meth:`~View.post()`, and so "
"on."
msgstr ""

# c97731b9c5e344b2b0f975751b12b3d6
#: ../../ref/class-based-views.txt:870
msgid ""
"The default implementation also sets ``request``, ``args`` and ``kwargs`` as "
"instance variables, so any method on the view can know the full details of "
"the request that was made to invoke the view."
msgstr ""

# d9f2e79b9053408ea78f6b35dcb7421a
#: ../../ref/class-based-views.txt:876
msgid ""
"If the view was called with HTTP method it doesn't support, this method is "
"called instead."
msgstr ""

# e31c948413c746a6a1c17e449a86795d
#: ../../ref/class-based-views.txt:879
msgid ""
"The default implementation returns ``HttpResponseNotAllowed`` with list of "
"allowed methods in plain text."
msgstr ""

# 7fd743629a0d48bfbe5c219c4408c855
#: ../../ref/class-based-views.txt:883
msgid "TemplateView"
msgstr ""

# 726aa6d0cd53443cbd18d7f3679abbf2
# ee59c927804e4e1d8083456eacc66864
#: ../../ref/class-based-views.txt:886 ../../ref/generic-views.txt:46
msgid ""
"Renders a given template, passing it a ``{{ params }}`` template variable, "
"which is a dictionary of the parameters captured in the URL."
msgstr ""

# f6c7188d0b804bb5864e0618f78ca9bb
#: ../../ref/class-based-views.txt:891
msgid ":class:`django.views.generic.base.TemplateResponseMixin`"
msgstr ""

# 5948e20b3913493fa7bc728f4fb3e19c
#: ../../ref/class-based-views.txt:895
msgid "The full name of a template to use."
msgstr ""

# 460077ceca6a475883db02fb538c7425
#: ../../ref/class-based-views.txt:899
msgid ""
"Return a context data dictionary consisting of the contents of ``kwargs`` "
"stored in the context variable ``params``."
msgstr ""

# 177ffbbb06414e47979163e1f157f48b
#: ../../ref/class-based-views.txt:904
msgid ""
"``params``: The dictionary of keyword arguments captured from the URL "
"pattern that served the view."
msgstr ""

# d81b02e29dbb465389e2b4f53e1dd13e
#: ../../ref/class-based-views.txt:908
msgid "RedirectView"
msgstr ""

# b76c4ff03a6c4e659b66d85b97657b3b
# 74a9fbeec6cd4425849f02903162e466
#: ../../ref/class-based-views.txt:911 ../../ref/generic-views.txt:83
msgid "Redirects to a given URL."
msgstr ""

# dea63d1a9ffe47179d26a185b121e92d
# 69a4892cfe3448c08c8c325f62e9daed
#: ../../ref/class-based-views.txt:913 ../../ref/generic-views.txt:85
msgid ""
"The given URL may contain dictionary-style string formatting, which will be "
"interpolated against the parameters captured in the URL. Because keyword "
"interpolation is *always* done (even if no arguments are passed in), any ``"
"\"%\"`` characters in the URL must be written as ``\"%%\"`` so that Python "
"will convert them to a single percent sign on output."
msgstr ""

# 8a2b20bf9f21474d951333281de77e72
# cb5929ee5b2b49279d15ebf5f05c1e3c
#: ../../ref/class-based-views.txt:919 ../../ref/generic-views.txt:91
msgid ""
"If the given URL is ``None``, Django will return an ``HttpResponseGone`` "
"(410)."
msgstr ""

# 23064894ff6b49349b8b0e6401b9854e
#: ../../ref/class-based-views.txt:924
msgid ""
"The URL to redirect to, as a string. Or ``None`` to raise a 410 (Gone) HTTP "
"error."
msgstr ""

# e7cfa7d61b304101bf13ddbc1a47a231
#: ../../ref/class-based-views.txt:929
msgid ""
"Whether the redirect should be permanent. The only difference here is the "
"HTTP status code returned. If ``True``, then the redirect will use status "
"code 301. If ``False``, then the redirect will use status code 302. By "
"default, ``permanent`` is ``True``."
msgstr ""

# f908163470f2469fb7eb1293291aeb7e
#: ../../ref/class-based-views.txt:936
msgid ""
"Whether to pass along the GET query string to the new location. If ``True``, "
"then the query string is appended to the URL. If ``False``, then the query "
"string is discarded. By default, ``query_string`` is ``False``."
msgstr ""

# 6a6e3c6388624db9acfdd22fcc2354ff
#: ../../ref/class-based-views.txt:943
msgid "Constructs the target URL for redirection."
msgstr ""

# 16aefddafa1f484790375a585473a254
#: ../../ref/class-based-views.txt:945
msgid ""
"The default implementation uses :attr:`~RedirectView.url` as a starting "
"string, performs expansion of ``%`` parameters in that string, as well as "
"the appending of query string if requested by :attr:`~RedirectView."
"query_string`. Subclasses may implement any behavior they wish, as long as "
"the method returns a redirect-ready URL string."
msgstr ""

# 506902308eef48b7b8b26c205c416ffc
#: ../../ref/class-based-views.txt:953
msgid "Detail views"
msgstr ""

# be9b273dfc844f388b5e54c8b8e5664a
#: ../../ref/class-based-views.txt:958
msgid "DetailView"
msgstr ""

# 1b4df5aff35c45459080bb3f331188e2
# 88124167169341ac9cee973c53260abf
# f59c162e77f24ff7bd47755222015e33
#: ../../ref/class-based-views.txt:962 ../../ref/generic-views.txt:805
#: ../../ref/generic-views.txt:809
msgid "A page representing an individual object."
msgstr ""

# da2def54127f433bb4427ee6e739cf00
#: ../../ref/class-based-views.txt:964
msgid ""
"While this view is executing, ``self.object`` will contain the object that "
"the view is operating upon."
msgstr ""

# b0d5d23a2ee04393a54377d357a60fb4
#: ../../ref/class-based-views.txt:967
msgid ""
":class:`~django.views.generic.base.BaseDetailView` implements the same "
"behavior as :class:`~django.views.generic.base.DetailView`, but doesn't "
"include the :class:`~django.views.generic.detail."
"SingleObjectTemplateResponseMixin`."
msgstr ""

# 24d45fc5c8854c75a36b4df2f418518d
# add4da245d55426abede8966241f1f4a
#: ../../ref/class-based-views.txt:975 ../../ref/class-based-views.txt:1333
msgid ":class:`django.views.generic.detail.SingleObjectTemplateResponseMixin`"
msgstr ""

# b604d49263b5498a8758035115f7f65a
#: ../../ref/class-based-views.txt:978
msgid "List views"
msgstr ""

# 06827acbf92b46a4b8615510b6d8eac9
#: ../../ref/class-based-views.txt:983
msgid "ListView"
msgstr ""

# 097d9eea87a34ae4b6df5ad6dc3c1e88
# d9426c84109c4f1380256dfbd1fc9dc4
#: ../../ref/class-based-views.txt:987 ../../ref/generic-views.txt:697
msgid "A page representing a list of objects."
msgstr ""

# 776f3d141d944f45a7d86f2031207fe9
#: ../../ref/class-based-views.txt:989
msgid ""
"While this view is executing, ``self.object_list`` will contain the list of "
"objects (usually, but not necessarily a queryset) that the view is operating "
"upon."
msgstr ""

# 7cebf1f14efe4fc680dae2969b224082
#: ../../ref/class-based-views.txt:993
msgid ""
":class:`~django.views.generic.list.BaseListView` implements the same "
"behavior as :class:`~django.views.generic.list.ListView`, but doesn't "
"include the :class:`~django.views.generic.list."
"MultipleObjectTemplateResponseMixin`."
msgstr ""

# 766f15dd1f7549b3aa5dfbde57bb14aa
#: ../../ref/class-based-views.txt:1000
msgid ":class:`django.views.generic.list.MultipleObjectMixin`"
msgstr ""

# c4c5587527c1476c89ced4fd555c1cb0
# 3ccf88b12e4a43748b283fd02cb235ea
# 6ca04f5efd784fdfb056831f40905774
# e067f99001d84464bdefab03bc9a2c6a
# 95958ab31ed646f79cbafa63d9064873
# 56f8744c7d7b4c0ca65f141d036de3ab
# e4e7e4eeed4d40c38a6319c422ccea8b
#: ../../ref/class-based-views.txt:1001 ../../ref/class-based-views.txt:1111
#: ../../ref/class-based-views.txt:1134 ../../ref/class-based-views.txt:1184
#: ../../ref/class-based-views.txt:1230 ../../ref/class-based-views.txt:1265
#: ../../ref/class-based-views.txt:1314
msgid ":class:`django.views.generic.list.MultipleObjectTemplateResponseMixin`"
msgstr ""

# d71bb1389b4f454fbb1672397e4b59da
#: ../../ref/class-based-views.txt:1005
msgid "Editing views"
msgstr ""

# d5e5b06f32f74e8c9586dd8fe8448416
#: ../../ref/class-based-views.txt:1010
msgid "FormView"
msgstr ""

# e445b7ac661b49c8b11da0360f2881d2
#: ../../ref/class-based-views.txt:1014
msgid ""
"A view that displays a form. On error, redisplays the form with validation "
"errors; on success, redirects to a new URL."
msgstr ""

# 8537bfd2d6eb497fa3ee710a8fcfd472
#: ../../ref/class-based-views.txt:1017
msgid ""
":class:`~django.views.generic.edit.BaseFormView` implements the same "
"behavior as :class:`~django.views.generic.edit.FormView`, but doesn't "
"include the :class:`~django.views.generic.base.TemplateResponseMixin`."
msgstr ""

# 839415ee02a14cb7aa5a998b216a9744
# ee22f1e226254a03b577f974ce2ebb4e
# c5b8df453d53473e928d3db471769f77
#: ../../ref/class-based-views.txt:1024 ../../ref/class-based-views.txt:1041
#: ../../ref/class-based-views.txt:1060
msgid ":class:`django.views.generic.edit.ProcessFormView`"
msgstr ""

# 5905d31f0d93404e95b52b2238056ba9
#: ../../ref/class-based-views.txt:1027
msgid "CreateView"
msgstr ""

# bab5a1c5652d430c9ffb4b805238d7cc
#: ../../ref/class-based-views.txt:1031
msgid ""
"A view that displays a form for creating an object, redisplaying the form "
"with validation errors (if there are any) and saving the object."
msgstr ""

# b6db0beb958b4783a6b55328655af7cd
#: ../../ref/class-based-views.txt:1034
msgid ""
":class:`~django.views.generic.edit.BaseCreateView` implements the same "
"behavior as :class:`~django.views.generic.edit.CreateView`, but doesn't "
"include the :class:`~django.views.generic.base.TemplateResponseMixin`."
msgstr ""

# 7bbd5b530f5948fa98beda29b54386e6
# 3bc12134b202445c904662bc63300ecd
#: ../../ref/class-based-views.txt:1040 ../../ref/class-based-views.txt:1059
msgid ":class:`django.views.generic.edit.ModelFormMixin`"
msgstr ""

# 78b5faf6d8a9441b8296669f4ec1d167
#: ../../ref/class-based-views.txt:1044
msgid "UpdateView"
msgstr ""

# d30b21ec666b4518971557b8686d63c8
#: ../../ref/class-based-views.txt:1048
msgid ""
"A view that displays a form for editing an existing object, redisplaying the "
"form with validation errors (if there are any) and saving changes to the "
"object. This uses a form automatically generated from the object's model "
"class (unless a form class is manually specified)."
msgstr ""

# ccbb2e4625a4447bb9ec142164dd6dc9
#: ../../ref/class-based-views.txt:1053
msgid ""
":class:`~django.views.generic.edit.BaseUpdateView` implements the same "
"behavior as :class:`~django.views.generic.edit.UpdateView`, but doesn't "
"include the :class:`~django.views.generic.base.TemplateResponseMixin`."
msgstr ""

# f143fbc5c7ec42cdbb05c43fe4af3a73
#: ../../ref/class-based-views.txt:1063
msgid "DeleteView"
msgstr ""

# 9fe49936ed0843f2869963a42c3e6092
# f4552a057dc04cea84bdebcb3c33c0a3
#: ../../ref/class-based-views.txt:1067 ../../ref/generic-views.txt:1050
msgid ""
"A view that displays a confirmation page and deletes an existing object. The "
"given object will only be deleted if the request method is ``POST``. If this "
"view is fetched via ``GET``, it will display a confirmation page that should "
"contain a form that POSTs to the same URL."
msgstr ""

# 66ec258b53994fc7ab78470cabb5da95
#: ../../ref/class-based-views.txt:1072
msgid ""
":class:`~django.views.generic.edit.BaseDeleteView` implements the same "
"behavior as :class:`~django.views.generic.edit.DeleteView`, but doesn't "
"include the :class:`~django.views.generic.base.TemplateResponseMixin`."
msgstr ""

# f87468201ee7435ca9274ddcb8afd1bd
#: ../../ref/class-based-views.txt:1078
msgid ":class:`django.views.generic.edit.DeletionMixin`"
msgstr ""

# 52b849a9b5474adfa7cd9024670777f9
# c5fc985fb30c47eea53f0193fc5283c9
#: ../../ref/class-based-views.txt:1079 ../../ref/class-based-views.txt:1334
msgid ":class:`django.views.generic.detail.BaseDetailView`"
msgstr ""

# 227b294e13034d809f00623a155e999c
# 618de0b23dfd4085a5e3a9990ed81dde
# 36d0fc580ab6408f8a1351665cd1347b
# f1da49fcaadc486d96c142a50ce592d6
# c5e1b3cb37ad4232b910661b67a40f33
# 92bbae7176fe4bdf9ad15b1e81986561
#: ../../ref/class-based-views.txt:1081 ../../ref/class-based-views.txt:1113
#: ../../ref/class-based-views.txt:1163 ../../ref/class-based-views.txt:1210
#: ../../ref/class-based-views.txt:1245 ../../ref/class-based-views.txt:1294
msgid "**Notes**"
msgstr ""

# 20019614692a4d7b9cdefc66a542eeef
#: ../../ref/class-based-views.txt:1083
msgid ""
"The delete confirmation page displayed to a GET request uses a "
"``template_name_suffix`` of ``'_confirm_delete'``."
msgstr ""

# 2024deeee91644bebfab10670870c68b
#: ../../ref/class-based-views.txt:1087
msgid "Date-based views"
msgstr ""

# 3d4edee0c77647cd934f0ebf74ee4c99
#: ../../ref/class-based-views.txt:1089
msgid ""
"Date-based generic views (in the module :mod:`django.views.generic.dates`) "
"are views for displaying drilldown pages for date-based data."
msgstr ""

# 0af75b73119949ceb9161ae60fd5dc11
#: ../../ref/class-based-views.txt:1095
msgid "ArchiveIndexView"
msgstr ""

# f6a3dfd0c00040939a5bcdeffbca629b
# 9b9eea09bb8f4a2b8c9ab3644594bc16
#: ../../ref/class-based-views.txt:1099 ../../ref/generic-views.txt:164
msgid ""
"A top-level index page showing the \"latest\" objects, by date. Objects with "
"a date in the *future* are not included unless you set ``allow_future`` to "
"``True``."
msgstr ""

# 180013ae77904afb8b61e8d90692e14c
#: ../../ref/class-based-views.txt:1103
msgid ""
":class:`~django.views.generic.dates.BaseArchiveIndexView` implements the "
"same behavior as :class:`~django.views.generic.dates.ArchiveIndexView`, but "
"doesn't include the :class:`~django.views.generic.list."
"MultipleObjectTemplateResponseMixin`."
msgstr ""

# 3ddd5eb916a84fc1a32dfca76da38cc0
# 2c023e17471047c1ac7cee6ddf4e9974
# 6e11c148cf5c452aadb16e1e718b3504
# bbd5eb6fd0b14fdfabf97bf559924c89
# 4c61719c2c9f4ad9a243f4f575609fd9
#: ../../ref/class-based-views.txt:1110 ../../ref/class-based-views.txt:1136
#: ../../ref/class-based-views.txt:1187 ../../ref/class-based-views.txt:1233
#: ../../ref/class-based-views.txt:1269
msgid ":class:`django.views.generic.dates.BaseDateListView`"
msgstr ""

# cb6a5a382ce643658983f74a122d4777
#: ../../ref/class-based-views.txt:1115
msgid "Uses a default ``context_object_name`` of ``latest``."
msgstr ""

# 30d98286e1a5477e8a3d4f122ad62fcf
#: ../../ref/class-based-views.txt:1116
msgid "Uses a default ``template_name_suffix`` of ``_archive``."
msgstr ""

# 34d4995dc4ee49c48a24f9cbe87fc32b
#: ../../ref/class-based-views.txt:1119
msgid "YearArchiveView"
msgstr ""

# 9f18b5d3235b4c718247574d49129aa9
# 23d48b8578844e56b94d33913941b542
#: ../../ref/class-based-views.txt:1123 ../../ref/generic-views.txt:245
msgid ""
"A yearly archive page showing all available months in a given year. Objects "
"with a date in the *future* are not displayed unless you set "
"``allow_future`` to ``True``."
msgstr ""

# 63cf939c250b42cf8d62ab309e6fade8
#: ../../ref/class-based-views.txt:1127
msgid ""
":class:`~django.views.generic.dates.BaseYearArchiveView` implements the same "
"behavior as :class:`~django.views.generic.dates.YearArchiveView`, but "
"doesn't include the :class:`~django.views.generic.list."
"MultipleObjectTemplateResponseMixin`."
msgstr ""

# 9e9a0893bd7e423b9f1f155ecd141337
# 16d7c135de5449ccb0109f75237a3433
# af38716f83b14de58aec6abd96a49199
# d964697915304c5d9bbadae79c8014cb
# a68e75cefab94399a66b2a9c2fec059d
#: ../../ref/class-based-views.txt:1135 ../../ref/class-based-views.txt:1185
#: ../../ref/class-based-views.txt:1231 ../../ref/class-based-views.txt:1266
#: ../../ref/class-based-views.txt:1336
msgid ":class:`django.views.generic.dates.YearMixin`"
msgstr ""

# fda7ca1d122348c3bba4baea439c6855
#: ../../ref/class-based-views.txt:1140
msgid ""
"A boolean specifying whether to retrieve the full list of objects for this "
"year and pass those to the template. If ``True``, the list of objects will "
"be made available to the context. By default, this is ``False``."
msgstr ""

# fd4520cd8b7044c4966259240e111650
#: ../../ref/class-based-views.txt:1147
msgid ""
"Determine if an object list will be returned as part of the context. If "
"``False``, the ``None`` queryset will be used as the object list."
msgstr ""

# 4cabfdad741140b8ba45995635b30698
#: ../../ref/class-based-views.txt:1152
msgid ""
"In addition to the context provided by :class:`django.views.generic.list."
"MultipleObjectMixin` (via :class:`django.views.generic.dates."
"BaseDateListView`), the template's context will be:"
msgstr ""

# 72eeb7d4efa74e7a84d692d4e5af2630
#: ../../ref/class-based-views.txt:1157
msgid ""
"``date_list``: A ``DateQuerySet`` object containing all months that have "
"objects available according to ``queryset``, represented as ``datetime."
"datetime`` objects, in ascending order."
msgstr ""

# 34b7935c13b147aca5987ff6adb98c40
# 5d7f4d76e0af49d58f3279cbc1d8e6c6
#: ../../ref/class-based-views.txt:1161 ../../ref/generic-views.txt:313
msgid "``year``: The given year, as a four-character string."
msgstr ""

# 0a1122c854564e4a817b8168188beea9
#: ../../ref/class-based-views.txt:1165
msgid "Uses a default ``template_name_suffix`` of ``_archive_year``."
msgstr ""

# 42e3ed6ca26a428f85e10fbb79357ee3
#: ../../ref/class-based-views.txt:1168
msgid "MonthArchiveView"
msgstr ""

# 9a3095d1c5b54784b00b50801daa26b7
# dcddb82bf78c440dbe440af42029f716
#: ../../ref/class-based-views.txt:1172 ../../ref/generic-views.txt:330
msgid ""
"A monthly archive page showing all objects in a given month. Objects with a "
"date in the *future* are not displayed unless you set ``allow_future`` to "
"``True``."
msgstr ""

# ac9b6a5c9cae4382ac513ddcedf58376
#: ../../ref/class-based-views.txt:1176
msgid ""
":class:`~django.views.generic.dates.BaseMonthArchiveView` implements the "
"same behavior as :class:`~django.views.generic.dates.MonthArchiveView`, but "
"doesn't include the :class:`~django.views.generic.list."
"MultipleObjectTemplateResponseMixin`."
msgstr ""

# 571b437f79224639ac0e11aceb06f50f
# 70733a5a123947598310108cd12d7fe5
# b6ccf33cc50947d0a3d9ed99cb403212
# daa27c40ccd245e8852e70105ecbe6f4
#: ../../ref/class-based-views.txt:1186 ../../ref/class-based-views.txt:1232
#: ../../ref/class-based-views.txt:1267 ../../ref/class-based-views.txt:1337
msgid ":class:`django.views.generic.dates.MonthMixin`"
msgstr ""

# 4b321f6d859e4c3095aea76b05c4be8a
# 0772815c13464bbb9beedf9af7a2305b
# 4963d303671d4a64b37c715085640b37
#: ../../ref/class-based-views.txt:1191 ../../ref/class-based-views.txt:1237
#: ../../ref/class-based-views.txt:1273
msgid ""
"In addition to the context provided by :class:`~django.views.generic.list."
"MultipleObjectMixin` (via :class:`~django.views.generic.dates."
"BaseDateListView`), the template's context will be:"
msgstr ""

# 3b6d0b4cf5c84cf7855c1feefbfef0fe
#: ../../ref/class-based-views.txt:1196
msgid ""
"``date_list``: A ``DateQuerySet`` object containing all days that have "
"objects available in the given month, according to ``queryset``, represented "
"as ``datetime.datetime`` objects, in ascending order."
msgstr ""

# 67ba9522b9e64ffeaf37f573056e31b1
# bfb5d2a176de4257a0b4dbc95bb3e29d
#: ../../ref/class-based-views.txt:1200 ../../ref/generic-views.txt:403
msgid "``month``: A ``datetime.date`` object representing the given month."
msgstr ""

# acfa5cc92724461d97452b5721259d6c
# bd1ae0e80e0a4a16a0809596c58b6c41
# e679f28aaa6845aba3ad49f1607919f7
#: ../../ref/class-based-views.txt:1202 ../../ref/class-based-views.txt:1286
#: ../../ref/generic-views.txt:405
msgid ""
"``next_month``: A ``datetime.date`` object representing the first day of the "
"next month. If the next month is in the future, this will be ``None``."
msgstr ""

# 9dee56d9afac40ac9712949ee2f49f19
# a9f967e7a70a43199be481057bfdc496
# 42ad066fe82745abaeff511fbf7b34db
#: ../../ref/class-based-views.txt:1206 ../../ref/class-based-views.txt:1290
#: ../../ref/generic-views.txt:409
msgid ""
"``previous_month``: A ``datetime.date`` object representing the first day of "
"the previous month. Unlike ``next_month``, this will never be ``None``."
msgstr ""

# 3ab4ce00e3b643ae9fe63426d5830d99
#: ../../ref/class-based-views.txt:1212
msgid "Uses a default ``template_name_suffix`` of ``_archive_month``."
msgstr ""

# 59f626c66cad4c1896ff5b260d35597c
#: ../../ref/class-based-views.txt:1215
msgid "WeekArchiveView"
msgstr ""

# 87c0bab48c964b0cb3069fc56fd6f1e1
# d0f7111c81704416a8fe7363316ec9c7
#: ../../ref/class-based-views.txt:1219 ../../ref/generic-views.txt:423
msgid ""
"A weekly archive page showing all objects in a given week. Objects with a "
"date in the *future* are not displayed unless you set ``allow_future`` to "
"``True``."
msgstr ""

# 176821cd24664825ad25cb0c42ff53e6
#: ../../ref/class-based-views.txt:1223
msgid ""
":class:`~django.views.generic.dates.BaseWeekArchiveView` implements the same "
"behavior as :class:`~django.views.generic.dates.WeekArchiveView`, but "
"doesn't include the :class:`~django.views.generic.list."
"MultipleObjectTemplateResponseMixin`."
msgstr ""

# 1bb7a2deb50c4089a661c27b11009292
# 526973a76119400cae5f2ce35c691b8e
#: ../../ref/class-based-views.txt:1242 ../../ref/generic-views.txt:482
msgid ""
"``week``: A ``datetime.date`` object representing the first day of the given "
"week."
msgstr ""

# 91b8761f82004cc2a5b8c26dcaf0ad33
#: ../../ref/class-based-views.txt:1247
msgid "Uses a default ``template_name_suffix`` of ``_archive_week``."
msgstr ""

# 30ee210301e54142b2373b3f01e4c23a
#: ../../ref/class-based-views.txt:1250
msgid "DayArchiveView"
msgstr ""

# dad494d5779442b2a89ac18cb8d28977
# a617fb72dabc4168a588986dee4a6778
#: ../../ref/class-based-views.txt:1254 ../../ref/generic-views.txt:495
msgid ""
"A day archive page showing all objects in a given day. Days in the future "
"throw a 404 error, regardless of whether any objects exist for future days, "
"unless you set ``allow_future`` to ``True``."
msgstr ""

# ed653048246c472882d725e1e2e1b133
#: ../../ref/class-based-views.txt:1258
msgid ""
":class:`~django.views.generic.dates.BaseDayArchiveView` implements the same "
"behavior as :class:`~django.views.generic.dates.DayArchiveView`, but doesn't "
"include the :class:`~django.views.generic.list."
"MultipleObjectTemplateResponseMixin`."
msgstr ""

# 5682dc8bd4b74f9b98eeb93c8921f38f
# d69c976721a44f9383d2c5a481ff6c98
#: ../../ref/class-based-views.txt:1268 ../../ref/class-based-views.txt:1338
msgid ":class:`django.views.generic.dates.DayMixin`"
msgstr ""

# 65a00b5c622043f6b44a39ae5d0e6980
# 869f3f25c42f4f40a53b56aad7291aa3
#: ../../ref/class-based-views.txt:1278 ../../ref/generic-views.txt:567
msgid "``day``: A ``datetime.date`` object representing the given day."
msgstr ""

# 602f3fca363147beb6ca385c2017e5a2
# e981c7bafdc34787aa9de357dd89e384
#: ../../ref/class-based-views.txt:1280 ../../ref/generic-views.txt:569
msgid ""
"``next_day``: A ``datetime.date`` object representing the next day. If the "
"next day is in the future, this will be ``None``."
msgstr ""

# 7de5b7681bd34588a695c73e953a45ac
# 356ef3368acd44789b197752056dc4da
#: ../../ref/class-based-views.txt:1283 ../../ref/generic-views.txt:572
msgid ""
"``previous_day``: A ``datetime.date`` object representing the previous day. "
"Unlike ``next_day``, this will never be ``None``."
msgstr ""

# bf11f44d3f1d4a16a0369a04e645a926
#: ../../ref/class-based-views.txt:1296
msgid "Uses a default ``template_name_suffix`` of ``_archive_day``."
msgstr ""

# 15be2be28dc6434baf05da97a527651a
#: ../../ref/class-based-views.txt:1299
msgid "TodayArchiveView"
msgstr ""

# 8848a7b37cdb420781d4313456a35a7f
#: ../../ref/class-based-views.txt:1303
msgid ""
"A day archive page showing all objects for *today*. This is exactly the same "
"as :class:`django.views.generic.dates.DayArchiveView`, except today's date "
"is used instead of the ``year``/``month``/``day`` arguments."
msgstr ""

# c25c4919149a49c0a8a1c659dd1b709b
#: ../../ref/class-based-views.txt:1307
msgid ""
":class:`~django.views.generic.dates.BaseTodayArchiveView` implements the "
"same behavior as :class:`~django.views.generic.dates.TodayArchiveView`, but "
"doesn't include the :class:`~django.views.generic.list."
"MultipleObjectTemplateResponseMixin`."
msgstr ""

# d069a9809f854c828edcd850d753ccf4
#: ../../ref/class-based-views.txt:1315
msgid ":class:`django.views.generic.dates.BaseDayArchiveView`"
msgstr ""

# b59d63860bbb4684819fa74d0b243f1d
#: ../../ref/class-based-views.txt:1318
msgid "DateDetailView"
msgstr ""

# 77e4f27893ab409f9558985bf54db3aa
# d413a002742b41e290219e70dfffac2d
#: ../../ref/class-based-views.txt:1322 ../../ref/generic-views.txt:594
msgid ""
"A page representing an individual object. If the object has a date value in "
"the future, the view will throw a 404 error by default, unless you set "
"``allow_future`` to ``True``."
msgstr ""

# 196ef567687d4b6c871a227c184401c9
#: ../../ref/class-based-views.txt:1326
msgid ""
":class:`~django.views.generic.dates.BaseDateDetailView` implements the same "
"behavior as :class:`~django.views.generic.dates.DateDetailView`, but doesn't "
"include the :class:`~django.views.generic.detail."
"SingleObjectTemplateResponseMixin`."
msgstr ""

# a0f688826bdc40349e94ca22295131fe
#: ../../ref/class-based-views.txt:1335
msgid ":class:`django.views.generic.dates.DateMixin`"
msgstr ""

# 61744884951045c0a7f82a38b0f17bef
#: ../../ref/clickjacking.txt:3
msgid "Clickjacking Protection"
msgstr ""

# 25894464f68b4841ac0f38ac89260d1b
#: ../../ref/clickjacking.txt:8
msgid ""
"The clickjacking middleware and decorators provide easy-to-use protection "
"against `clickjacking`_.  This type of attack occurs when a malicious site "
"tricks a user into clicking on a concealed element of another site which "
"they have loaded in a hidden frame or iframe."
msgstr ""

# a8ef919ca7ae421993e6aa0bd17f5f34
#: ../../ref/clickjacking.txt:19
msgid "An example of clickjacking"
msgstr ""

# 4597812dcf7a414eac9380b684488275
#: ../../ref/clickjacking.txt:21
msgid ""
"Suppose an online store has a page where a logged in user can click \"Buy Now"
"\" to purchase an item. A user has chosen to stay logged into the store all "
"the time for convenience. An attacker site might create an \"I Like Ponies\" "
"button on one of their own pages, and load the store's page in a transparent "
"iframe such that the \"Buy Now\" button is invisibly overlaid on the \"I "
"Like Ponies\" button. If the user visits the attacker site and clicks \"I "
"Like Ponies\" he will inadvertently click on the online store's \"Buy Now\" "
"button and unknowingly purchase the item."
msgstr ""

# 59c8439f57f643608c930c3fd7763279
#: ../../ref/clickjacking.txt:32
msgid "Preventing clickjacking"
msgstr ""

# 4508f65a219146aeb08d3f727a49a577
#: ../../ref/clickjacking.txt:34
msgid ""
"Modern browsers honor the `X-Frame-Options`_ HTTP header that indicates "
"whether or not a resource is allowed to load within a frame or iframe. If "
"the response contains the header with a value of SAMEORIGIN then the browser "
"will only load the resource in a frame if the request originated from the "
"same site. If the header is set to DENY then the browser will block the "
"resource from loading in a frame no matter which site made the request."
msgstr ""

# e779a90414f74ed286c43086c469fecc
#: ../../ref/clickjacking.txt:43
msgid ""
"Django provides a few simple ways to include this header in responses from "
"your site:"
msgstr ""

# 5ea9dadcaccb4d82bec1aeaca95272b4
#: ../../ref/clickjacking.txt:46
msgid "A simple middleware that sets the header in all responses."
msgstr ""

# 229bfc26cd7e4aa3a2d368ab86672c2c
#: ../../ref/clickjacking.txt:48
msgid ""
"A set of view decorators that can be used to override the middleware or to "
"only set the header for certain views."
msgstr ""

# a374fdf370e64c8c96cee2894ca74834
# a5abdd69603449b0ba30a719da196272
#: ../../ref/clickjacking.txt:52 ../../ref/contrib/csrf.txt:27
msgid "How to use it"
msgstr ""

# e60f0c86f8d64655bdd5a7a96b8a828e
#: ../../ref/clickjacking.txt:55
msgid "Setting X-Frame-Options for all responses"
msgstr ""

# c78dad5dda9648f288607c9573cdc33c
#: ../../ref/clickjacking.txt:57
msgid ""
"To set the same X-Frame-Options value for all responses in your site, add "
"``'django.middleware.clickjacking.XFrameOptionsMiddleware'`` to :setting:"
"`MIDDLEWARE_CLASSES`::"
msgstr ""

# e7ea309856fa4c08a31dcb05d5ac3263
#: ../../ref/clickjacking.txt:67
msgid ""
"By default, the middleware will set the X-Frame-Options header to SAMEORIGIN "
"for every outgoing ``HttpResponse``. If you want DENY instead, set the :"
"setting:`X_FRAME_OPTIONS` setting::"
msgstr ""

# 52fe7c223ea6404ba2a3bd768dddb6b9
#: ../../ref/clickjacking.txt:73
msgid ""
"When using the middleware there may be some views where you do **not** want "
"the X-Frame-Options header set. For those cases, you can use a view "
"decorator that tells the middleware not to set the header::"
msgstr ""

# 787a9bc2bd47458594536e2be88aabb9
#: ../../ref/clickjacking.txt:86
msgid "Setting X-Frame-Options per view"
msgstr ""

# 74b527bd50ac46bf9d9ae86061dc31a6
#: ../../ref/clickjacking.txt:88
msgid ""
"To set the X-Frame-Options header on a per view basis, Django provides these "
"decorators::"
msgstr ""

# 5695f9aba2cb4a90b364a11b1687c550
#: ../../ref/clickjacking.txt:103
msgid ""
"Note that you can use the decorators in conjunction with the middleware. Use "
"of a decorator overrides the middleware."
msgstr ""

# 22fe7397b690496fa23047ffe745b984
# 722efa2dfe3642159759e797e6bee786
#: ../../ref/clickjacking.txt:107 ../../ref/contrib/csrf.txt:299
msgid "Limitations"
msgstr ""

# bd26298aff964011811f165aa607f086
#: ../../ref/clickjacking.txt:109
msgid ""
"The `X-Frame-Options` header will only protect against clickjacking in a "
"modern browser. Older browsers will quietly ignore the header and need "
"`other clickjacking prevention techniques`_."
msgstr ""

# 2977b782177441e4896ec75b26c71f1c
#: ../../ref/clickjacking.txt:114
msgid "Browsers that support X-Frame-Options"
msgstr ""

# 3fa6cb3920ec40429eadc85cc5718348
#: ../../ref/clickjacking.txt:116
msgid "Internet Explorer 8+"
msgstr ""

# 1caf06a5044e4c41ac630abbafe20db4
#: ../../ref/clickjacking.txt:117
msgid "Firefox       3.6.9+"
msgstr ""

# 637dc4929d3e44b782779897fba782df
#: ../../ref/clickjacking.txt:118
msgid "Opera 10.5+"
msgstr ""

# 6e9a9da08cbd498195f04e32e7b89ae5
#: ../../ref/clickjacking.txt:119
msgid "Safari        4+"
msgstr ""

# 9ea2bac0cd024792b9551889b6df02b6
#: ../../ref/clickjacking.txt:120
msgid "Chrome        4.1+"
msgstr ""

# 2987b8b3c69f48c3ad0a2e3da2a77af8
#: ../../ref/clickjacking.txt:123
msgid "See also"
msgstr ""

# 64ea649cae534733b9b115d2089d7e86
#: ../../ref/clickjacking.txt:125
msgid "A `complete list`_ of browsers supporting X-Frame-Options."
msgstr ""

# 4aa5d424a5ec4c5db16110575cb271bb
#: ../../ref/contrib/admin/actions.txt:3
msgid "Admin actions"
msgstr ""

# a358e63f8551414e92d14ede60364b45
#: ../../ref/contrib/admin/actions.txt:7
msgid ""
"The basic workflow of Django's admin is, in a nutshell, \"select an object, "
"then change it.\" This works well for a majority of use cases. However, if "
"you need to make the same change to many objects at once, this workflow can "
"be quite tedious."
msgstr ""

# a6ea31c89f1d4de2be0453c5aea810b3
#: ../../ref/contrib/admin/actions.txt:12
msgid ""
"In these cases, Django's admin lets you write and register \"actions\" -- "
"simple functions that get called with a list of objects selected on the "
"change list page."
msgstr ""

# 3004745027374c2291fcb6f1ad542a75
#: ../../ref/contrib/admin/actions.txt:16
msgid ""
"If you look at any change list in the admin, you'll see this feature in "
"action; Django ships with a \"delete selected objects\" action available to "
"all models. For example, here's the user module from Django's built-in :mod:"
"`django.contrib.auth` app:"
msgstr ""

# aa192520618c49428097eaac5302c461
#: ../../ref/contrib/admin/actions.txt:25
msgid ""
"The \"delete selected objects\" action uses :meth:`QuerySet.delete() <django."
"db.models.query.QuerySet.delete>` for efficiency reasons, which has an "
"important caveat: your model's ``delete()`` method will not be called."
msgstr ""

# e62bf98752174d559206cc864409ee1f
#: ../../ref/contrib/admin/actions.txt:30
msgid ""
"If you wish to override this behavior, simply write a custom action which "
"accomplishes deletion in your preferred manner -- for example, by calling "
"``Model.delete()`` for each of the selected items."
msgstr ""

# 688b6f08ec014d8c89aee7490ad24479
#: ../../ref/contrib/admin/actions.txt:34
msgid ""
"For more background on bulk deletion, see the documentation on :ref:`object "
"deletion <topics-db-queries-delete>`."
msgstr ""

# fab03b4c157a46a1a46c57d14743ec2d
#: ../../ref/contrib/admin/actions.txt:37
msgid "Read on to find out how to add your own actions to this list."
msgstr ""

# eb4be6173b8d44b5b22dd5b31aae0b29
#: ../../ref/contrib/admin/actions.txt:40
msgid "Writing actions"
msgstr ""

# 4e85193904e5416e9f40629aa2c724e3
#: ../../ref/contrib/admin/actions.txt:42
msgid "The easiest way to explain actions is by example, so let's dive in."
msgstr ""

# 25ee959c9d66419eab225e80fe88ef06
#: ../../ref/contrib/admin/actions.txt:44
msgid ""
"A common use case for admin actions is the bulk updating of a model. Imagine "
"a simple news application with an ``Article`` model::"
msgstr ""

# 9ed26c5a59c84bd39d5b5305f52c90c2
#: ../../ref/contrib/admin/actions.txt:63
msgid ""
"A common task we might perform with a model like this is to update an "
"article's status from \"draft\" to \"published\". We could easily do this in "
"the admin one article at a time, but if we wanted to bulk-publish a group of "
"articles, it'd be tedious. So, let's write an action that lets us change an "
"article's status to \"published.\""
msgstr ""

# 40bcbbabec234b9b89ebe773265e56ac
#: ../../ref/contrib/admin/actions.txt:70
msgid "Writing action functions"
msgstr ""

# bcb4b8e82252457ca96766fd25efa3e3
#: ../../ref/contrib/admin/actions.txt:72
msgid ""
"First, we'll need to write a function that gets called when the action is "
"trigged from the admin. Action functions are just regular functions that "
"take three arguments:"
msgstr ""

# 05c7c79bd5724212accafb7544da1b51
#: ../../ref/contrib/admin/actions.txt:76
msgid "The current :class:`ModelAdmin`"
msgstr ""

# 792b3db1ee424faebbb22846dbe558ba
#: ../../ref/contrib/admin/actions.txt:77
msgid "An :class:`~django.http.HttpRequest` representing the current request,"
msgstr ""

# 5d4c8c602c124f34bf9507adc42ceca0
#: ../../ref/contrib/admin/actions.txt:78
msgid ""
"A :class:`~django.db.models.query.QuerySet` containing the set of objects "
"selected by the user."
msgstr ""

# 1786e318fe614bf2bd803a3a8353951c
#: ../../ref/contrib/admin/actions.txt:81
msgid ""
"Our publish-these-articles function won't need the :class:`ModelAdmin` or "
"the request object, but we will use the queryset::"
msgstr ""

# 37ccbe2d1f5b4cf9b533848075850a80
#: ../../ref/contrib/admin/actions.txt:89
msgid ""
"For the best performance, we're using the queryset's :ref:`update method "
"<topics-db-queries-update>`. Other types of actions might need to deal with "
"each object individually; in these cases we'd just iterate over the "
"queryset::"
msgstr ""

# a72b7a4626ad4c40b824dae3c1f17265
#: ../../ref/contrib/admin/actions.txt:97
msgid ""
"That's actually all there is to writing an action! However, we'll take one "
"more optional-but-useful step and give the action a \"nice\" title in the "
"admin. By default, this action would appear in the action list as \"Make "
"published\" -- the function name, with underscores replaced by spaces. "
"That's fine, but we can provide a better, more human-friendly name by giving "
"the ``make_published`` function a ``short_description`` attribute::"
msgstr ""

# 0d68cadc685e4401b564fe78419d751f
#: ../../ref/contrib/admin/actions.txt:110
msgid ""
"This might look familiar; the admin's ``list_display`` option uses the same "
"technique to provide human-readable descriptions for callback functions "
"registered there, too."
msgstr ""

# 081a00004783443b81d427fe2b5013b1
#: ../../ref/contrib/admin/actions.txt:115
msgid "Adding actions to the :class:`ModelAdmin`"
msgstr ""

# e8aa07a8ae654fe08d0acf6eb992acf0
#: ../../ref/contrib/admin/actions.txt:117
msgid ""
"Next, we'll need to inform our :class:`ModelAdmin` of the action. This works "
"just like any other configuration option. So, the complete ``admin.py`` with "
"the action and its registration would look like::"
msgstr ""

# 047c058af7a3459ab06768af0b806d1d
#: ../../ref/contrib/admin/actions.txt:135
msgid ""
"That code will give us an admin change list that looks something like this:"
msgstr ""

# bf831da4c1954020883d515827014333
#: ../../ref/contrib/admin/actions.txt:139
msgid ""
"That's really all there is to it! If you're itching to write your own "
"actions, you now know enough to get started. The rest of this document just "
"covers more advanced techniques."
msgstr ""

# 058a589db07045a0a37caf49c5802dd1
#: ../../ref/contrib/admin/actions.txt:144
msgid "Advanced action techniques"
msgstr ""

# a236a0cb08c64ff3b5888c5e562d27ad
#: ../../ref/contrib/admin/actions.txt:146
msgid ""
"There's a couple of extra options and possibilities you can exploit for more "
"advanced options."
msgstr ""

# 4e3a824ab4c543c5afe1bd52d62dd1bc
#: ../../ref/contrib/admin/actions.txt:150
msgid "Actions as :class:`ModelAdmin` methods"
msgstr ""

# b28837c8055f47c782efec8ed689f0ec
#: ../../ref/contrib/admin/actions.txt:152
msgid ""
"The example above shows the ``make_published`` action defined as a simple "
"function. That's perfectly fine, but it's not perfect from a code design "
"point of view: since the action is tightly coupled to the ``Article`` "
"object, it makes sense to hook the action to the ``ArticleAdmin`` object "
"itself."
msgstr ""

# 0ec4f912430c434ca3905f95e9db8a0b
#: ../../ref/contrib/admin/actions.txt:157
msgid "That's easy enough to do::"
msgstr ""

# 3f9584492bae4c87a432f62aeb151585
#: ../../ref/contrib/admin/actions.txt:168
msgid ""
"Notice first that we've moved ``make_published`` into a method and renamed "
"the `modeladmin` parameter to `self`, and second that we've now put the "
"string ``'make_published'`` in ``actions`` instead of a direct function "
"reference. This tells the :class:`ModelAdmin` to look up the action as a "
"method."
msgstr ""

# 6e966e864ca44bc79111904225750cc3
#: ../../ref/contrib/admin/actions.txt:173
msgid ""
"Defining actions as methods gives the action more straightforward, idiomatic "
"access to the :class:`ModelAdmin` itself, allowing the action to call any of "
"the methods provided by the admin."
msgstr ""

# 4245f24915714827beb76f927b0a76be
#: ../../ref/contrib/admin/actions.txt:179
msgid ""
"For example, we can use ``self`` to flash a message to the user informing "
"her that the action was successful::"
msgstr ""

# a25ce95a5cc045d0bf7a3c4405795626
#: ../../ref/contrib/admin/actions.txt:193
msgid ""
"This make the action match what the admin itself does after successfully "
"performing an action:"
msgstr ""

# 5ed6d694665d497080ca6e1d657d94c7
#: ../../ref/contrib/admin/actions.txt:199
msgid "Actions that provide intermediate pages"
msgstr ""

# a87a1e8780c645c3af306e8bbb8ebaa9
#: ../../ref/contrib/admin/actions.txt:201
msgid ""
"By default, after an action is performed the user is simply redirected back "
"to the original change list page. However, some actions, especially more "
"complex ones, will need to return intermediate pages. For example, the built-"
"in delete action asks for confirmation before deleting the selected objects."
msgstr ""

# 91ed1398020e4f6da168b12d84b029cd
#: ../../ref/contrib/admin/actions.txt:207
msgid ""
"To provide an intermediary page, simply return an :class:`~django.http."
"HttpResponse` (or subclass) from your action. For example, you might write a "
"simple export function that uses Django's :doc:`serialization functions </"
"topics/serialization>` to dump some selected objects as JSON::"
msgstr ""

# 69843388a36c4490965e0d1334ba4cfa
#: ../../ref/contrib/admin/actions.txt:221
msgid ""
"Generally, something like the above isn't considered a great idea. Most of "
"the time, the best practice will be to return an :class:`~django.http."
"HttpResponseRedirect` and redirect the user to a view you've written, "
"passing the list of selected objects in the GET query string. This allows "
"you to provide complex interaction logic on the intermediary pages. For "
"example, if you wanted to provide a more complete export function, you'd "
"want to let the user choose a format, and possibly a list of fields to "
"include in the export. The best thing to do would be to write a small action "
"that simply redirects to your custom export view::"
msgstr ""

# 05e1a08db0d74ae5882b40b1e8062f8b
#: ../../ref/contrib/admin/actions.txt:240
msgid ""
"As you can see, the action is the simple part; all the complex logic would "
"belong in your export view. This would need to deal with objects of any "
"type, hence the business with the ``ContentType``."
msgstr ""

# 21b87688f23d4a73a9308179e81f7eff
#: ../../ref/contrib/admin/actions.txt:244
msgid "Writing this view is left as an exercise to the reader."
msgstr ""

# 6d9333387f734907a8e1d0761a760716
#: ../../ref/contrib/admin/actions.txt:249
msgid "Making actions available site-wide"
msgstr ""

# e4e6ff72ffe84879a70dfa194e8a70c8
#: ../../ref/contrib/admin/actions.txt:253
msgid ""
"Some actions are best if they're made available to *any* object in the admin "
"site -- the export action defined above would be a good candidate. You can "
"make an action globally available using :meth:`AdminSite.add_action()`. For "
"example::"
msgstr ""

# 189371b164d5416783ae4264580f0f48
#: ../../ref/contrib/admin/actions.txt:262
msgid ""
"This makes the `export_selected_objects` action globally available as an "
"action named `\"export_selected_objects\"`. You can explicitly give the "
"action a name -- good if you later want to programatically :ref:`remove the "
"action <disabling-admin-actions>` -- by passing a second argument to :meth:"
"`AdminSite.add_action()`::"
msgstr ""

# 9737058effb447019ac5ae194157c5ad
#: ../../ref/contrib/admin/actions.txt:273
msgid "Disabling actions"
msgstr ""

# 7d47a1d3f7af4234be7cedaa938c9f80
#: ../../ref/contrib/admin/actions.txt:275
msgid ""
"Sometimes you need to disable certain actions -- especially those :ref:"
"`registered site-wide <adminsite-actions>` -- for particular objects. "
"There's a few ways you can disable actions:"
msgstr ""

# bb203650ca8f4d58b4e1b279ef7c7cd1
#: ../../ref/contrib/admin/actions.txt:280
msgid "Disabling a site-wide action"
msgstr ""

# 66f51c9126214b08b6c420bfeecf500b
#: ../../ref/contrib/admin/actions.txt:284
msgid ""
"If you need to disable a :ref:`site-wide action <adminsite-actions>` you can "
"call :meth:`AdminSite.disable_action()`."
msgstr ""

# 262b181ea5f54e81b1af79acc9ca47fd
#: ../../ref/contrib/admin/actions.txt:287
msgid ""
"For example, you can use this method to remove the built-in \"delete "
"selected objects\" action::"
msgstr ""

# 16ebc1acf7b54132b9ca86cccb9e12e3
#: ../../ref/contrib/admin/actions.txt:292
msgid ""
"Once you've done the above, that action will no longer be available site-"
"wide."
msgstr ""

# 31630c3f59264f9ba36f361b49aba651
#: ../../ref/contrib/admin/actions.txt:295
msgid ""
"If, however, you need to re-enable a globally-disabled action for one "
"particular model, simply list it explicitly in your ``ModelAdmin.actions`` "
"list::"
msgstr ""

# 1050a06d65af42b78190222bbf4fbc18
#: ../../ref/contrib/admin/actions.txt:314
msgid "Disabling all actions for a particular :class:`ModelAdmin`"
msgstr ""

# 2e4de0d7e5e74a4a91db81c9b4d83a45
#: ../../ref/contrib/admin/actions.txt:316
msgid ""
"If you want *no* bulk actions available for a given :class:`ModelAdmin`, "
"simply set :attr:`ModelAdmin.actions` to ``None``::"
msgstr ""

# dc460b4d6c4b46b281441e56db8bf1d8
#: ../../ref/contrib/admin/actions.txt:322
msgid ""
"This tells the :class:`ModelAdmin` to not display or allow any actions, "
"including any :ref:`site-wide actions <adminsite-actions>`."
msgstr ""

# e05b3b161fb94416a8ef8bcb3db16806
#: ../../ref/contrib/admin/actions.txt:326
msgid "Conditionally enabling or disabling actions"
msgstr ""

# fd7f0d7f99b64038bd513e0ee862b932
#: ../../ref/contrib/admin/actions.txt:330
msgid ""
"Finally, you can conditionally enable or disable actions on a per-request "
"(and hence per-user basis) by overriding :meth:`ModelAdmin.get_actions`."
msgstr ""

# b3b49e5b0bef46bdb4617699e7cf2b1f
#: ../../ref/contrib/admin/actions.txt:333
msgid ""
"This returns a dictionary of actions allowed. The keys are action names, and "
"the values are ``(function, name, short_description)`` tuples."
msgstr ""

# c8c33f7a13684793bd45a3bae9fedd1d
#: ../../ref/contrib/admin/actions.txt:336
msgid ""
"Most of the time you'll use this method to conditionally remove actions from "
"the list gathered by the superclass. For example, if I only wanted users "
"whose names begin with 'J' to be able to delete objects in bulk, I could do "
"the following::"
msgstr ""

# 23934c0009bb41789e738f48951e2ff6
#: ../../ref/contrib/admin/admindocs.txt:3
msgid "The Django admin documentation generator"
msgstr ""

# dee9f5fae75a455499dabcfc9fddcafe
#: ../../ref/contrib/admin/admindocs.txt:10
msgid ""
"Django's :mod:`~django.contrib.admindocs` app pulls documentation from the "
"docstrings of models, views, template tags, and template filters for any app "
"in :setting:`INSTALLED_APPS` and makes that documentation available from "
"the :mod:`Django admin <django.contrib.admin>`."
msgstr ""

# 749b61d2f1464e8085be7963cd37b65e
#: ../../ref/contrib/admin/admindocs.txt:15
msgid ""
"In addition to providing offline documentation for all template tags and "
"template filters that ship with Django, you may utilize admindocs to quickly "
"document your own code."
msgstr ""

# 1687f928d40c4405981792b6692713b4
# 02d2e81563d34969b77bf6face6e72b9
# 5362624d5e484e9ab9a722227138ee94
# 486088a341cd47eca6e1b6bcd2f2659a
# 4f9efedfb8d94feda4adf87eb7883038
# 7ee8c6cddd7a4c3ebbaef656e17fb119
# ae26ebd3314148a3b9de85747b5a1281
# 4f94786af5ca4c18aabf95eadc1d3c0f
# 5932132725e743f488429892add13d01
#: ../../ref/contrib/admin/admindocs.txt:20
#: ../../ref/contrib/admin/index.txt:15
#: ../../ref/contrib/comments/moderation.txt:19
#: ../../ref/contrib/contenttypes.txt:13
#: ../../ref/contrib/formtools/form-preview.txt:18
#: ../../ref/contrib/gis/gdal.txt:30 ../../ref/contrib/gis/install.txt:10
#: ../../ref/contrib/sitemaps.txt:14 ../../ref/contrib/syndication.txt:34
msgid "Overview"
msgstr ""

# 34600db9ab184c499967981d9f1688c1
#: ../../ref/contrib/admin/admindocs.txt:22
msgid ""
"To activate the :mod:`~django.contrib.admindocs`, you will need to do the "
"following:"
msgstr ""

# 5ac241ffb203456489e3cf642c1962c3
#: ../../ref/contrib/admin/admindocs.txt:25
msgid "Add :mod:`django.contrib.admindocs` to your :setting:`INSTALLED_APPS`."
msgstr ""

# f74f32bf45e4425da714ff68ae103989
#: ../../ref/contrib/admin/admindocs.txt:26
msgid ""
"Add ``(r'^admin/doc/', include('django.contrib.admindocs.urls'))`` to your :"
"data:`urlpatterns`. Make sure it's included *before* the ``r'^admin/'`` "
"entry, so that requests to ``/admin/doc/`` don't get handled by the latter "
"entry."
msgstr ""

# da22ad521a3240189834df38f4b6830f
#: ../../ref/contrib/admin/admindocs.txt:30
msgid "Install the docutils Python module (http://docutils.sf.net/)."
msgstr ""

# 98d6c7f2a0cf45189a44f1b36ca7769d
#: ../../ref/contrib/admin/admindocs.txt:31
msgid ""
"**Optional:** Linking to templates requires the :setting:`ADMIN_FOR` setting "
"to be configured."
msgstr ""

# 8452af4681df4a78a93799f16f87aa02
#: ../../ref/contrib/admin/admindocs.txt:33
msgid ""
"**Optional:** Using the admindocs bookmarklets requires the :mod:"
"`XViewMiddleware<django.middleware.doc>` to be installed."
msgstr ""

# c01b23e0571c4a6ea25fb8d2e31df648
#: ../../ref/contrib/admin/admindocs.txt:36
msgid ""
"Once those steps are complete, you can start browsing the documentation by "
"going to your admin interface and clicking the \"Documentation\" link in the "
"upper right of the page."
msgstr ""

# 737c9c7960c442bfa4824c7d0acfb676
#: ../../ref/contrib/admin/admindocs.txt:41
msgid "Documentation helpers"
msgstr ""

# 86062697240f4b7a8fcb54fbfe16c68a
#: ../../ref/contrib/admin/admindocs.txt:43
msgid ""
"The following special markup can be used in your docstrings to easily create "
"hyperlinks to other components:"
msgstr ""

# 6c832bd957ff4422a023eec6421083f0
#: ../../ref/contrib/admin/admindocs.txt:47
msgid "Django Component"
msgstr ""

# 1f0115b1a2fd478eabecd1657597b218
#: ../../ref/contrib/admin/admindocs.txt:47
msgid "reStructuredText roles"
msgstr ""

# 9a639d4c4dc942febed31273d7d4a98e
# c1e28e12408948198307d8ab1678e645
# f35008e3ea1d413e8f714de65ece2241
#: ../../ref/contrib/admin/admindocs.txt:49 ../../ref/models/index.txt:3
#: ../../ref/unicode.txt:207
msgid "Models"
msgstr ""

# 9c0a7cb58f6f48ab95c01e03614bcd69
#: ../../ref/contrib/admin/admindocs.txt:49
msgid "``:model:`appname.ModelName```"
msgstr ""

# 329ea755883f4c57a578db9e7a782b38
#: ../../ref/contrib/admin/admindocs.txt:50
msgid "Views"
msgstr ""

# c1e399613ab04a209ed8ee4c740998db
#: ../../ref/contrib/admin/admindocs.txt:50
msgid "``:view:`appname.view_name```"
msgstr ""

# 54190c487ac048a68e5ce1058ee97828
# a1b8ffdd6a3647b492da1f1ff58bc21b
# 9b480cca446c471b9ce5f90f28671338
#: ../../ref/contrib/admin/admindocs.txt:51
#: ../../ref/contrib/staticfiles.txt:359 ../../ref/contrib/webdesign.txt:19
msgid "Template tags"
msgstr ""

# 2f2d698618114ec6b4af6bd3b8b25461
#: ../../ref/contrib/admin/admindocs.txt:51
msgid "``:tag:`tagname```"
msgstr ""

# ec5c0b6e4f974886913a89fc1fdd9e91
#: ../../ref/contrib/admin/admindocs.txt:52
msgid "Template filters"
msgstr ""

# 3f687b98913d4d4daaa568df92ae526a
#: ../../ref/contrib/admin/admindocs.txt:52
msgid "``:filter:`filtername```"
msgstr ""

# b9585cac9bfd4b20ad771c7fccbdcfab
# 59f738ea6bef4614a44ab060b43e90c0
# a5885fab1c4d4b5aa60da535fc4c7b30
#: ../../ref/contrib/admin/admindocs.txt:53 ../../ref/templates/index.txt:3
#: ../../ref/unicode.txt:275
msgid "Templates"
msgstr ""

# 893fedfb70f34001bf5a24c189f2aa7a
#: ../../ref/contrib/admin/admindocs.txt:53
msgid "``:template:`path/to/template.html```"
msgstr ""

# d3fb13b542094677978674471d9d50c7
#: ../../ref/contrib/admin/admindocs.txt:57
msgid "Model reference"
msgstr ""

# 52c526bb4eca4a1baf6ccb1b45c7b5a8
#: ../../ref/contrib/admin/admindocs.txt:59
msgid ""
"The **models** section of the ``admindocs`` page describes each model in the "
"system along with all the fields and methods available on it. Relationships "
"to other models appear as hyperlinks. Descriptions are pulled from "
"``help_text`` attributes on fields or from docstrings on model methods."
msgstr ""

# 9f77b62a28054551b6db5e483709086f
#: ../../ref/contrib/admin/admindocs.txt:64
msgid "A model with useful documentation might look like this::"
msgstr ""

# ca4fa70532ee409382b397f01eb7ab04
#: ../../ref/contrib/admin/admindocs.txt:82
msgid "View reference"
msgstr ""

# a32f718fb4414b01b1a7f6fe91ada4b5
#: ../../ref/contrib/admin/admindocs.txt:84
msgid ""
"Each URL in your site has a separate entry in the ``admindocs`` page, and "
"clicking on a given URL will show you the corresponding view. Helpful things "
"you can document in your view function docstrings include:"
msgstr ""

# 8ab6ce6df4104f9698dd3505d49988d4
#: ../../ref/contrib/admin/admindocs.txt:88
msgid "A short description of what the view does."
msgstr ""

# 8af781bbc33042e6bcbd9517abcba6c4
#: ../../ref/contrib/admin/admindocs.txt:89
msgid ""
"The **context**, or a list of variables available in the view's template."
msgstr ""

# 6fbfe9ce8aaa411da030bda4bc02c3ca
#: ../../ref/contrib/admin/admindocs.txt:90
msgid "The name of the template or templates that are used for that view."
msgstr ""

# 02a755ff61c34143a00f97d00fc221e6
# 4bbbcada16784411a459ca5fb86d56ac
# 51cd324fdd5d4d5082fd367a44c8d085
# be4b403dae94415cb15a1ed7d87a8c08
# b990e3c5a6b34ae4bd68f0dff416ec2b
# 0e7355ad2af040fe8385d6f8e81d227a
# 3728015592574f7ab4b61c32c6791b04
# cb00319f0e8249029044aaee27daa15f
# c9b434754876497381030c6ae848f7f3
# 1fed9ac7cb8c401c98c6e0e4c3001beb
# c06b1747e1e14f84aa6de59b54798019
# 8537ec012b2f4b9bb1f1cbe6170cff76
# df57ca3dfed048169a1f58b3deaab67d
# 887046af65d64dbabd3ea8f2fd72ae0a
# 83122cd143c541c48b8daa258a59db9a
# ada3a0fc4a0048bcae03fe1030465e97
# da3b6db001aa4230923b6976f0fc7fd0
# 354230c039ba457492d4a049d681f4dc
# 2e2bbfced64d4ac3ae48813d4d5c6c85
# 4fec6ee482dd402792373cd4ea690c64
# 459652a0643243d0a45f7f117dd3d5e8
# c4484f78e0fc42bcb1796cf571295358
# 93a58a388b314e72bf944d7aa525821d
# 1b0c3798733044839b59bac6ea3c7911
# 9523167200084f7394bf496ac54ce5f5
# eaac47b19321467e8cca841086804941
# cecc41b36cb04c4b9c01840cc8bbf4dd
# caad9a94b63a40a9939b91a89879f015
# 9c739393306b41a7865704da49080b00
# 0557c7fbf18444baa4dc4e68a33ee26c
# 8c1c02929b194cf2bfcb7a7bbf6cd550
# 000d2f2aac894f15ad40fa107c2f7aad
# 92dc0321654847ffa2824f413b4b1c5a
# 2c0132e214db4f9bbd4407d69a2414f8
# 99651e2c438647d48b31dd53a4fee03c
# 897d600b350b43d48a6d77fee5f24eb0
# 712f3814828444d6aaa4831ff1134c49
# a7c667c0c2864ce28ace28360d0591f6
# f4b413a886414233abc40e83f004c0df
# 776a40833e7345b7a00d59d349beb9a3
# 4b16c2bee9f1440688686f18827d1533
# b97756b49a28447194f7d1d1c95b9484
# e3b84d5b1f02423e9b67f333c38a2ccc
# c0ec3c634eb24419b59ba62d24049369
# 7bdad57540ff472fbb728e28477ea6fb
# bb379d0d08e842c4b8173a31b4b2a667
# 3cc514d6599c43afa470570d2194e4ea
# a8f58c4490004440bfb8376ac0aeffdc
# 4a48d02174a14ce9b17661a1534128fb
# a83ae1fa4c3d4c58acebc36490ad6033
# 223c3cdf669040e9b7b777ff393f1893
# 36027ccf22eb4b01882190e48530c8fc
# ec84c763396b4a3a9abe997f3322f5b1
# bd8bbad9296446c0b0077d81d6d3c63a
# d754b0fb67d54d6491ddc25b3f7d588c
# b65aebdac6744fbca9b5411accece3ed
# 693da4ebd49f4085913dbc1fe6d758d2
# f678e316561540c79e6f3c7443b18e0b
# cc83d474c2d3417baa7ee657e550321e
# 5d9d6574a80046c4a931085b1540fbd9
# 0a1cb004bfab443e8815c681d2f644a6
# 98c42db8d76349c790b4f4206fb9d68c
# f60d9d5a08d246938dd59078c458b7a2
# bdb9c0d8701e431ca85f23dd55716669
# 0f1a8104fdcf49c0b78b7023d20bc160
# c61a6bc743a741cf8282526c80e97fcd
# 93155dfd2ab84bae8eb673af51d358dd
# cfe3e607633a49439f4e876d1ba12744
#: ../../ref/contrib/admin/admindocs.txt:92
#: ../../ref/contrib/admin/index.txt:514
#: ../../ref/contrib/comments/index.txt:101
#: ../../ref/contrib/comments/index.txt:117
#: ../../ref/contrib/comments/index.txt:151
#: ../../ref/contrib/comments/index.txt:177
#: ../../ref/contrib/comments/index.txt:200
#: ../../ref/contrib/gis/db-api.txt:107 ../../ref/contrib/gis/geos.txt:709
#: ../../ref/contrib/staticfiles.txt:214 ../../ref/django-admin.txt:930
#: ../../ref/django-admin.txt:1000 ../../ref/forms/widgets.txt:134
#: ../../ref/models/instances.txt:374 ../../ref/models/instances.txt:420
#: ../../ref/models/querysets.txt:467 ../../ref/models/querysets.txt:1008
#: ../../ref/models/querysets.txt:1166 ../../ref/models/querysets.txt:1184
#: ../../ref/request-response.txt:268 ../../ref/templates/builtins.txt:1143
#: ../../ref/templates/builtins.txt:1162 ../../ref/templates/builtins.txt:1192
#: ../../ref/templates/builtins.txt:1225 ../../ref/templates/builtins.txt:1239
#: ../../ref/templates/builtins.txt:1252 ../../ref/templates/builtins.txt:1265
#: ../../ref/templates/builtins.txt:1368 ../../ref/templates/builtins.txt:1408
#: ../../ref/templates/builtins.txt:1425 ../../ref/templates/builtins.txt:1439
#: ../../ref/templates/builtins.txt:1479 ../../ref/templates/builtins.txt:1517
#: ../../ref/templates/builtins.txt:1532 ../../ref/templates/builtins.txt:1545
#: ../../ref/templates/builtins.txt:1563 ../../ref/templates/builtins.txt:1640
#: ../../ref/templates/builtins.txt:1658 ../../ref/templates/builtins.txt:1671
#: ../../ref/templates/builtins.txt:1685 ../../ref/templates/builtins.txt:1699
#: ../../ref/templates/builtins.txt:1712 ../../ref/templates/builtins.txt:1727
#: ../../ref/templates/builtins.txt:1742 ../../ref/templates/builtins.txt:1756
#: ../../ref/templates/builtins.txt:1781 ../../ref/templates/builtins.txt:1794
#: ../../ref/templates/builtins.txt:1810 ../../ref/templates/builtins.txt:1829
#: ../../ref/templates/builtins.txt:1880 ../../ref/templates/builtins.txt:1893
#: ../../ref/templates/builtins.txt:1914 ../../ref/templates/builtins.txt:1979
#: ../../ref/templates/builtins.txt:1997 ../../ref/templates/builtins.txt:2010
#: ../../ref/templates/builtins.txt:2032 ../../ref/templates/builtins.txt:2103
#: ../../ref/templates/builtins.txt:2121 ../../ref/templates/builtins.txt:2136
#: ../../ref/templates/builtins.txt:2156 ../../ref/templates/builtins.txt:2199
#: ../../ref/templates/builtins.txt:2212 ../../ref/templates/builtins.txt:2258
#: ../../ref/templates/builtins.txt:2287 ../../ref/templates/builtins.txt:2304
#: ../../ref/templates/builtins.txt:2319 ../../ref/templates/builtins.txt:2338
#: ../../ref/utils.txt:373
msgid "For example::"
msgstr ""

# 6228250d2e814e8c8c294f67575ccdc1
#: ../../ref/contrib/admin/admindocs.txt:118
msgid "Template tags and filters reference"
msgstr ""

# 14e7b56231f84ea1a6735541028e1d6d
#: ../../ref/contrib/admin/admindocs.txt:120
msgid ""
"The **tags** and **filters** ``admindocs`` sections describe all the tags "
"and filters that come with Django (in fact, the :ref:`built-in tag reference "
"<ref-templates-builtins-tags>` and :ref:`built-in filter reference <ref-"
"templates-builtins-filters>` documentation come directly from those pages). "
"Any tags or filters that you create or are added by a third-party app will "
"show up in these sections as well."
msgstr ""

# ff904120929843eeaf9af188f30dfa8f
#: ../../ref/contrib/admin/admindocs.txt:129
msgid "Template reference"
msgstr ""

# dd66d2117e5640759d54e8b53dc47e84
#: ../../ref/contrib/admin/admindocs.txt:131
msgid ""
"While ``admindocs`` does not include a place to document templates by "
"themselves, if you use the ``:template:`path/to/template.html``` syntax in a "
"docstring the resulting page will verify the path of that template with "
"Django's :ref:`template loaders <template-loaders>`. This can be a handy way "
"to check if the specified template exists and to show where on the "
"filesystem that template is stored."
msgstr ""

# 5fe0c1a8494e45d0a7b5ad5993cdbf60
#: ../../ref/contrib/admin/admindocs.txt:140
msgid "Included Bookmarklets"
msgstr ""

# a67dbab6c59548c5a9fa56b9e927827b
#: ../../ref/contrib/admin/admindocs.txt:142
msgid "Several useful bookmarklets are available from the ``admindocs`` page:"
msgstr ""

# 99b9690a5a3a4a65a9708f8ab8a26149
#: ../../ref/contrib/admin/admindocs.txt:145
msgid ""
"Jumps you from any page to the documentation for the view that generates "
"that page."
msgstr ""

# ff0450df574242d79d4da20b65485141
#: ../../ref/contrib/admin/admindocs.txt:149
msgid ""
"Shows the content-type and unique ID for pages that represent a single "
"object."
msgstr ""

# 1c83e9320fba48b7bcb20c821fd0088c
#: ../../ref/contrib/admin/admindocs.txt:153
msgid "Jumps to the admin page for pages that represent a single object."
msgstr ""

# b47a1c26a06942aebc2b69b746096727
#: ../../ref/contrib/admin/admindocs.txt:155
msgid ""
"Using these bookmarklets requires that you are either logged into the :mod:"
"`Django admin <django.contrib.admin>` as a :class:`~django.contrib.auth."
"models.User` with :attr:`~django.contrib.auth.models.User.is_staff` set to "
"`True`, or that the :mod:`django.middleware.doc` middleware and :mod:"
"`XViewMiddleware <django.middleware.doc>` are installed and you are "
"accessing the site from an IP address listed in :setting:`INTERNAL_IPS`."
msgstr ""

# 8e5530ea308043a99963e5079bd432d8
#: ../../ref/contrib/admin/index.txt:3
msgid "The Django admin site"
msgstr ""

# 64d8eaf712c54da6bdb2b7a123a88fde
#: ../../ref/contrib/admin/index.txt:8
msgid ""
"One of the most powerful parts of Django is the automatic admin interface. "
"It reads metadata in your model to provide a powerful and production-ready "
"interface that content producers can immediately use to start adding content "
"to the site. In this document, we discuss how to activate, use and customize "
"Django's admin interface."
msgstr ""

# 537fa69b1e1c4f42863ba5ceae592f34
#: ../../ref/contrib/admin/index.txt:17
msgid "There are seven steps in activating the Django admin site:"
msgstr ""

# 259cf244c99e4945a5a7eb9d0b5cc728
#: ../../ref/contrib/admin/index.txt:19
msgid ""
"Add ``'django.contrib.admin'`` to your :setting:`INSTALLED_APPS` setting."
msgstr ""

# 4a7b7193edc64dd18e5f5c6ec6e37755
#: ../../ref/contrib/admin/index.txt:22
msgid ""
"The admin has four dependencies - :mod:`django.contrib.auth`, :mod:`django."
"contrib.contenttypes`, :mod:`django.contrib.messages` and :mod:`django."
"contrib.sessions`.  If these applications are not in your :setting:"
"`INSTALLED_APPS` list, add them."
msgstr ""

# da08ed4b423b4d3ead4df805d91d6f00
#: ../../ref/contrib/admin/index.txt:28
msgid ""
"Add ``django.contrib.messages.context_processors.messages`` to :setting:"
"`TEMPLATE_CONTEXT_PROCESSORS` and :class:`~django.contrib.messages."
"middleware.MessageMiddleware` to :setting:`MIDDLEWARE_CLASSES`. (These are "
"both active by default, so you only need to do this if you've manually "
"tweaked the settings.)"
msgstr ""

# c1dcd365dc274c9db7fe5c837a4c04a3
#: ../../ref/contrib/admin/index.txt:34
msgid ""
"Determine which of your application's models should be editable in the admin "
"interface."
msgstr ""

# 326a4b4f903e4d4489de6bec63ad8465
#: ../../ref/contrib/admin/index.txt:37
msgid ""
"For each of those models, optionally create a ``ModelAdmin`` class that "
"encapsulates the customized admin functionality and options for that "
"particular model."
msgstr ""

# a6427d1c3aa74cdf82ded03d1e09ae32
#: ../../ref/contrib/admin/index.txt:41
msgid ""
"Instantiate an ``AdminSite`` and tell it about each of your models and "
"``ModelAdmin`` classes."
msgstr ""

# a0546c9b9e734843b879542f41dea631
#: ../../ref/contrib/admin/index.txt:44
msgid "Hook the ``AdminSite`` instance into your URLconf."
msgstr ""

# e0453877b6d7422b8f7ecdd26d7d8244
#: ../../ref/contrib/admin/index.txt:46
msgid ""
"After you've taken these steps, you'll be able to use your Django admin site "
"by visiting the URL you hooked it into (``/admin/``, by default)."
msgstr ""

# e7bdec0e99fb4166852870be0a2b0888
#: ../../ref/contrib/admin/index.txt:50
msgid "Other topics"
msgstr ""

# 0e8407caf90d49988c88432fc05a7634
#: ../../ref/contrib/admin/index.txt:60
msgid ""
"For information about serving the static files (images, JavaScript, and CSS) "
"associated with the admin in production, see :ref:`serving-files`."
msgstr ""

# c5b8c870cad7445db9e12084632827ec
#: ../../ref/contrib/admin/index.txt:64
msgid "``ModelAdmin`` objects"
msgstr ""

# daec61fcdcdb46c1812fa566399224e8
#: ../../ref/contrib/admin/index.txt:68
msgid ""
"The ``ModelAdmin`` class is the representation of a model in the admin "
"interface. These are stored in a file named ``admin.py`` in your "
"application. Let's take a look at a very simple example of the "
"``ModelAdmin``::"
msgstr ""

# 4476941604664ae285008d9bae14cba9
#: ../../ref/contrib/admin/index.txt:82
msgid ""
"In the preceding example, the ``ModelAdmin`` class doesn't define any custom "
"values (yet). As a result, the default admin interface will be provided. If "
"you are happy with the default admin interface, you don't need to define a "
"``ModelAdmin`` object at all -- you can register the model class without "
"providing a ``ModelAdmin`` description. The preceding example could be "
"simplified to::"
msgstr ""

# c1a0c368ed394952a7565a297e5fa41c
#: ../../ref/contrib/admin/index.txt:95
msgid "``ModelAdmin`` options"
msgstr ""

# fa4336c20c9f4e65add5a33e7e8e2308
#: ../../ref/contrib/admin/index.txt:97
msgid ""
"The ``ModelAdmin`` is very flexible. It has several options for dealing with "
"customizing the interface. All options are defined on the ``ModelAdmin`` "
"subclass::"
msgstr ""

# 5a742ffcd9484386887a6aba109d82cc
#: ../../ref/contrib/admin/index.txt:106
msgid ""
"A list of actions to make available on the change list page. See :doc:`/ref/"
"contrib/admin/actions` for details."
msgstr ""

# 32cb405ea58f40389b865de8068286f4
#: ../../ref/contrib/admin/index.txt:112
msgid ""
"Controls where on the page the actions bar appears. By default, the admin "
"changelist displays actions at the top of the page (``actions_on_top = True; "
"actions_on_bottom = False``)."
msgstr ""

# 90f427add61f46c197fb8924414b6bf4
#: ../../ref/contrib/admin/index.txt:120
msgid ""
"Controls whether a selection counter is display next to the action dropdown. "
"By default, the admin changelist will display it "
"(``actions_selection_counter = True``)."
msgstr ""

# 5189689b2e9c4423b80be8a8529da23e
#: ../../ref/contrib/admin/index.txt:126
msgid ""
"Set ``date_hierarchy`` to the name of a ``DateField`` or ``DateTimeField`` "
"in your model, and the change list page will include a date-based drilldown "
"navigation by that field."
msgstr ""

# 8bcc9c929d3745fcaa3e6144bc646c00
# bd2056d4763844ddac3db08d398f4388
# 3349e071e84248dfb949ce844b3fdc2d
# cc5354fd6e424d5bb4600665d26fd538
# 299f138cf1a64685a736f73cbffc6fff
# 8994f6dad09c4462830ce2b460c29908
# b3a37054756a48bb9e8ae02002fb64af
# 82d102670adf49c2a252af714fab21dc
# 2564f2a8da5e4b28bbf5d7539e0a1a07
# d7481408c2734f8b95152f9fe7c53327
# 43fe901f32c54321b1afb0ee844ab1a1
# 298d20ddb8cb4a8bbd9a957a6e7e8a45
# 8f47740f03844579a126be75ffa7772c
# 8bc223f411794368b07db4c2e0fe234c
# b3c8048fc1124615b0a3fa99bc343989
# 2feb390c05274ec8b8ff8ca2ee21f981
# cabe1f13cc44410f814fd250c266d6b6
# 7aceb3e06f7c47089d5a7633ac04f938
# d128bbf7d6064910aff512b41cdac905
# 279215bdb5934af4bff540e0ed711527
# 6cb698c4659c47e692e34204600e5047
# 805f01e5064d44b38a727277be37537c
# 1de175d22b434382b9f63a590a9c090e
# 10cbf46312d24fbbb960559bec5208d0
# ba49d551790440e6a0a473e3afacf65b
# 6db0ec3284f64f4eab3a89eddc3846b9
# fe1be58425464b85937070de5132b2ae
# 37d8c04f8c784281b17d7ffa9fbf269d
# 86395a3a801440f99e0ba16481a616d0
# e6c2077589314e18ad0dad196c5d820e
# a6f89c53baac4c90b9d1be77498bcd0b
# 1d3752ca01664b2684fc85c471e00425
# 66a3389b7d5f432c9456a9d7f155767e
# 7833fe5f841647ca9eaf1ad2cdf7bc45
# dc25e6c20f3c4048aa991bc3badfdfe5
# 041efd31142347639a475801b732ae32
# d60f571110634d61a43fe385adfc7445
# f6661aafd5a749f9976e6d5f9385223b
# 9dc6f6595eaa4c7f81d143147b81449f
# 75fa990cd8a54f50a5873cb211f07bc6
# a81e29d22d5a4e9489136b89fa475328
# 5bfe268e99b24e6b8a10a85a5aa856f9
# c799f973137b4928add793664b9f1181
# 3dfc5db0c3724cc7a590b6db6dce46d9
# 1a7a27980a6a42248c0ca024fbcb681f
# 8428e683193142df9a57d71928965f78
# 56cc4ca5f9ee4adeb5461518ac48892c
# 5e47005ee160417396f039d680d60d43
# 616998b3c48c427e8a3df58f04743311
# 3f060c781cde496aa9b82be5b834cca5
# de1cc54345cb46e9a674378d9343a4df
# a825c9ac49f949e089d3e2c220e3b38c
# 1ad1b915125948c3bdf8d9b3b719c74e
# 1c03b807f7e144479a2f8079172d96e6
# 9bff0f2336fe4d9ab2a86130c25a7505
# b9dd538f15c44f57830b72eeb757b259
# eaa023e1447343babc8a0abe9ee2dcd0
# 0669e24b139e4a3ba0a3f49658510dcc
# ff10b07c37004a75bd9621954f5346a5
# 017db800ecff4548ab9ca7cde7de367a
# 2cef68b6cd2141688618b88e5329b58b
# 3267256d2d9e4e4dbcd75b2fdb1f3f20
# a9c7e9f4243745c0b3b546b171150fdf
# b4593a9da4224d3ea20939bc6da837b7
# 25d000c88e47444bab69a74bc880d91a
# 84888135f2d34289b0b7db55e5ff0854
# 4c31bb5cfdb4430eac38da40a83750ad
# 2f0bbaf311334a60a6f283e35db3080f
# 83a28d062e034e4281c4ed42192c031f
# 0501045eb7a941c39c0231e591aad2e3
# 0c98ee55f3ab4778ad76e00ad9505071
# 6f115ab1e32c464989db28134caabd89
# 910df65b3b1a4c8f85ba9993dd66f01c
# e9ae82e94cd847089b0c085c1bb28c27
# c024385766854780ab93eff221115991
# b2b4c1a6111c41adb746d88e0c3d0082
# eb3659464372458b831e041eacc325e1
# bd6f32f257ea49bc8fc00bcf84b7f610
# b7450f7755d34db48228a48acf977db4
# 69eb5d04aadb463e8213ddfea3225f67
# deca9f0d27d143cd972297920e80b365
# 55456a2eefad4fdd85f04b734dbc10a1
# 8f83500ef9db4f5c810161184320d906
# a7bcf50ae7c84a04bd78bac3a357998c
#: ../../ref/contrib/admin/index.txt:130 ../../ref/contrib/admin/index.txt:250
#: ../../ref/contrib/admin/index.txt:273 ../../ref/contrib/admin/index.txt:398
#: ../../ref/contrib/csrf.txt:339 ../../ref/contrib/gis/deployment.txt:33
#: ../../ref/contrib/gis/deployment.txt:68 ../../ref/contrib/gis/gdal.txt:904
#: ../../ref/contrib/gis/geoquerysets.txt:37
#: ../../ref/contrib/gis/geoquerysets.txt:59
#: ../../ref/contrib/gis/geoquerysets.txt:81
#: ../../ref/contrib/gis/geoquerysets.txt:102
#: ../../ref/contrib/gis/geoquerysets.txt:131
#: ../../ref/contrib/gis/geoquerysets.txt:151
#: ../../ref/contrib/gis/geoquerysets.txt:172
#: ../../ref/contrib/gis/geoquerysets.txt:192
#: ../../ref/contrib/gis/geoquerysets.txt:212
#: ../../ref/contrib/gis/geoquerysets.txt:247
#: ../../ref/contrib/gis/geoquerysets.txt:287
#: ../../ref/contrib/gis/geoquerysets.txt:311
#: ../../ref/contrib/gis/geoquerysets.txt:328
#: ../../ref/contrib/gis/geoquerysets.txt:350
#: ../../ref/contrib/gis/geoquerysets.txt:373
#: ../../ref/contrib/gis/geoquerysets.txt:391
#: ../../ref/contrib/gis/geoquerysets.txt:409
#: ../../ref/contrib/gis/geoquerysets.txt:428
#: ../../ref/contrib/gis/geoquerysets.txt:446
#: ../../ref/contrib/gis/geoquerysets.txt:464
#: ../../ref/contrib/gis/geoquerysets.txt:482
#: ../../ref/contrib/gis/geoquerysets.txt:500
#: ../../ref/contrib/gis/geoquerysets.txt:541
#: ../../ref/contrib/gis/geoquerysets.txt:561
#: ../../ref/contrib/gis/geoquerysets.txt:581
#: ../../ref/contrib/gis/geoquerysets.txt:601
#: ../../ref/contrib/gis/geoquerysets.txt:621
#: ../../ref/contrib/gis/geoquerysets.txt:873
#: ../../ref/contrib/gis/geoquerysets.txt:990
#: ../../ref/contrib/gis/geoquerysets.txt:1023
#: ../../ref/contrib/gis/geoquerysets.txt:1128
#: ../../ref/contrib/gis/geoquerysets.txt:1146
#: ../../ref/contrib/gis/geoquerysets.txt:1162
#: ../../ref/contrib/gis/geoquerysets.txt:1184
#: ../../ref/contrib/gis/geoquerysets.txt:1203
#: ../../ref/contrib/gis/geos.txt:742 ../../ref/contrib/gis/geos.txt:755
#: ../../ref/contrib/gis/geos.txt:771 ../../ref/contrib/gis/geos.txt:780
#: ../../ref/contrib/gis/geos.txt:835 ../../ref/contrib/gis/geos.txt:858
#: ../../ref/models/instances.txt:71 ../../ref/models/options.txt:90
#: ../../ref/models/querysets.txt:261 ../../ref/models/querysets.txt:449
#: ../../ref/models/querysets.txt:900 ../../ref/models/querysets.txt:969
#: ../../ref/models/querysets.txt:1027 ../../ref/models/querysets.txt:1397
#: ../../ref/models/querysets.txt:1423 ../../ref/models/querysets.txt:1683
#: ../../ref/models/querysets.txt:1708 ../../ref/models/querysets.txt:1733
#: ../../ref/models/querysets.txt:1754 ../../ref/models/querysets.txt:1827
#: ../../ref/models/querysets.txt:1863 ../../ref/models/querysets.txt:1881
#: ../../ref/models/querysets.txt:1902 ../../ref/models/querysets.txt:1923
#: ../../ref/models/querysets.txt:1944 ../../ref/models/querysets.txt:1964
#: ../../ref/models/querysets.txt:1982 ../../ref/models/querysets.txt:1999
#: ../../ref/models/querysets.txt:2022 ../../ref/models/querysets.txt:2048
#: ../../ref/models/querysets.txt:2064 ../../ref/models/querysets.txt:2091
#: ../../ref/models/querysets.txt:2115 ../../ref/models/relations.txt:41
#: ../../ref/settings.txt:1284 ../../ref/templates/builtins.txt:621
#: ../../ref/templates/builtins.txt:742 ../../ref/templates/builtins.txt:1843
#: ../../ref/templates/builtins.txt:1853 ../../ref/templates/builtins.txt:1860
#: ../../ref/templates/builtins.txt:1964
msgid "Example::"
msgstr ""

# 42856b7bc67f469fa17a83a9d292280e
#: ../../ref/contrib/admin/index.txt:136
msgid ""
"This will intelligently populate itself based on available data, e.g. if all "
"the dates are in one month, it'll show the day-level drill-down only."
msgstr ""

# 271b24df2c594043a5344dc1613c7fc2
#: ../../ref/contrib/admin/index.txt:142
msgid ""
"This attribute, if given, should be a list of field names to exclude from "
"the form."
msgstr ""

# 670be776701d4049833dd420a8405ad6
#: ../../ref/contrib/admin/index.txt:145
msgid "For example, let's consider the following model::"
msgstr ""

# 7b61c1c884984dd6aff80a1ae50db174
#: ../../ref/contrib/admin/index.txt:152
msgid ""
"If you want a form for the ``Author`` model that includes only the ``name`` "
"and ``title`` fields, you would specify ``fields`` or ``exclude`` like this::"
msgstr ""

# b7535293d90f4b08b04c8645b4559f9d
#: ../../ref/contrib/admin/index.txt:162
msgid ""
"Since the Author model only has three fields, ``name``, ``title``, and "
"``birth_date``, the forms resulting from the above declarations will contain "
"exactly the same fields."
msgstr ""

# 3223abb68ced4a69a6a583388f962269
#: ../../ref/contrib/admin/index.txt:168
msgid ""
"If you need to achieve simple changes in the layout of fields in the forms "
"of the \"add\" and \"change\" pages like only showing a subset of the "
"available fields, modifying their order or grouping them in rows you can use "
"the ``fields`` option (for more complex layout needs see the :attr:"
"`~ModelAdmin.fieldsets` option described in the next section). For example, "
"you could define a simpler version of the admin form for the ``django."
"contrib.flatpages.FlatPage`` model as follows::"
msgstr ""

# b134c93523b54a50b5df5c4ae01fc4ee
#: ../../ref/contrib/admin/index.txt:179
msgid ""
"In the above example, only the fields ``url``, ``title`` and ``content`` "
"will be displayed, sequentially, in the form."
msgstr ""

# 399422c29b574562b8e774e8acc28070
#: ../../ref/contrib/admin/index.txt:184
msgid ""
"``fields`` can contain values defined in :attr:`ModelAdmin.readonly_fields` "
"to be displayed as read-only."
msgstr ""

# 311e6e852f2d4e9ab89a1475111077de
#: ../../ref/contrib/admin/index.txt:189
msgid ""
"To display multiple fields on the same line, wrap those fields in their own "
"tuple. In this example, the ``url`` and ``title`` fields will display on the "
"same line and the ``content`` field will be displayed below them in its own "
"line::"
msgstr ""

# 5700183a4d35405fa1704390885c38cc
#: ../../ref/contrib/admin/index.txt:199
msgid ""
"This ``fields`` option should not be confused with the ``fields`` dictionary "
"key that is within the :attr:`~ModelAdmin.fieldsets` option, as described in "
"the next section."
msgstr ""

# 9c5bc02cab3c44d09f2560cc0f1810fa
#: ../../ref/contrib/admin/index.txt:203
msgid ""
"If neither ``fields`` nor :attr:`~ModelAdmin.fieldsets` options are present, "
"Django will default to displaying each field that isn't an ``AutoField`` and "
"has ``editable=True``, in a single fieldset, in the same order as the fields "
"are defined in the model."
msgstr ""

# 4ff6624ede7d4becb603b4ad3a7e770a
#: ../../ref/contrib/admin/index.txt:210
msgid ""
"Set ``fieldsets`` to control the layout of admin \"add\" and \"change\" "
"pages."
msgstr ""

# f01b9f9ae2d344799b8094cd4e54fb3f
#: ../../ref/contrib/admin/index.txt:212
msgid ""
"``fieldsets`` is a list of two-tuples, in which each two-tuple represents a "
"``<fieldset>`` on the admin form page. (A ``<fieldset>`` is a \"section\" of "
"the form.)"
msgstr ""

# c335820f434148699c60a6aa8f6293cf
#: ../../ref/contrib/admin/index.txt:216
msgid ""
"The two-tuples are in the format ``(name, field_options)``, where ``name`` "
"is a string representing the title of the fieldset and ``field_options`` is "
"a dictionary of information about the fieldset, including a list of fields "
"to be displayed in it."
msgstr ""

# 6eb8b82526a744efab5d8033b7d34cb9
#: ../../ref/contrib/admin/index.txt:221
msgid ""
"A full example, taken from the :class:`django.contrib.flatpages.FlatPage` "
"model::"
msgstr ""

# f6bc745f0d254f72a6364d40900c5d3e
#: ../../ref/contrib/admin/index.txt:235
msgid "This results in an admin page that looks like:"
msgstr ""

# a89c56ab4c434cecbd2ed5f3c5d5cf3b
#: ../../ref/contrib/admin/index.txt:239
msgid ""
"If neither ``fieldsets`` nor :attr:`~ModelAdmin.fields` options are present, "
"Django will default to displaying each field that isn't an ``AutoField`` and "
"has ``editable=True``, in a single fieldset, in the same order as the fields "
"are defined in the model."
msgstr ""

# 6715ff151f2b46f582056a187aaa4dd1
#: ../../ref/contrib/admin/index.txt:244
msgid "The ``field_options`` dictionary can have the following keys:"
msgstr ""

# b1664613b8694b58874d92807f7a646b
#: ../../ref/contrib/admin/index.txt:247
msgid ""
"A tuple of field names to display in this fieldset. This key is required."
msgstr ""

# 2debba20376b407c93a81c130feab8bd
#: ../../ref/contrib/admin/index.txt:256
msgid ""
"Just like with the :attr:`~ModelAdmin.fields` option, to display multiple "
"fields on the same line, wrap those fields in their own tuple. In this "
"example, the ``first_name`` and ``last_name`` fields will display on the "
"same line::"
msgstr ""

# 47ff553457e345ec8a398d4ac026a51b
#: ../../ref/contrib/admin/index.txt:267
msgid ""
"``fields`` can contain values defined in :attr:`~ModelAdmin.readonly_fields` "
"to be displayed as read-only."
msgstr ""

# 05bff5fff60349cebfa87269c673f951
#: ../../ref/contrib/admin/index.txt:271
msgid "A list containing extra CSS classes to apply to the fieldset."
msgstr ""

# 963055bd7c0e4ac0b1b4683e109dda14
#: ../../ref/contrib/admin/index.txt:279
msgid ""
"Two useful classes defined by the default admin site stylesheet are "
"``collapse`` and ``wide``. Fieldsets with the ``collapse`` style will be "
"initially collapsed in the admin and replaced with a small \"click to expand"
"\" link. Fieldsets with the ``wide`` style will be given extra horizontal "
"space."
msgstr ""

# 4aa5e74a96684d2b88305f8a5d1f6774
#: ../../ref/contrib/admin/index.txt:286
msgid ""
"A string of optional extra text to be displayed at the top of each fieldset, "
"under the heading of the fieldset."
msgstr ""

# 5cbca738240c406ca6c5f10060d3e51a
#: ../../ref/contrib/admin/index.txt:289
msgid ""
"Note that this value is *not* HTML-escaped when it's displayed in the admin "
"interface. This lets you include HTML if you so desire. Alternatively you "
"can use plain text and ``django.utils.html.escape()`` to escape any HTML "
"special characters."
msgstr ""

# 8c7e63651d8c4d8d9e3a165e1fac9eee
#: ../../ref/contrib/admin/index.txt:297
msgid ""
"By default, a :class:`~django.db.models.ManyToManyField` is displayed in the "
"admin site with a ``<select multiple>``. However, multiple-select boxes can "
"be difficult to use when selecting many items. Adding a :class:`~django.db."
"models.ManyToManyField` to this list will instead use a nifty unobtrusive "
"JavaScript \"filter\" interface that allows searching within the options. "
"The unselected and selected options appear in two boxes side by side. See :"
"attr:`~ModelAdmin.filter_vertical` to use a vertical interface."
msgstr ""

# 886d52f2c7ae41ce820e494c4fca717a
#: ../../ref/contrib/admin/index.txt:308
msgid ""
"Same as :attr:`~ModelAdmin.filter_horizontal`, but uses a vertical display "
"of the filter interface with the box of unselected options appearing above "
"the box of selected options."
msgstr ""

# ccdca206eaab4c9ea8304e9a29fab24e
#: ../../ref/contrib/admin/index.txt:314
msgid ""
"By default a ``ModelForm`` is dynamically created for your model. It is used "
"to create the form presented on both the add/change pages. You can easily "
"provide your own ``ModelForm`` to override any default form behavior on the "
"add/change pages."
msgstr ""

# 772ca523b6ef41108ea3b1f743ef9780
#: ../../ref/contrib/admin/index.txt:319
msgid ""
"For an example see the section `Adding custom validation to the admin`_."
msgstr ""

# 0b409a3a6bb64aebb49a1664cc9189e6
#: ../../ref/contrib/admin/index.txt:323
msgid ""
"If your ``ModelForm`` and ``ModelAdmin`` both define an ``exclude`` option "
"then ``ModelAdmin`` takes precedence::"
msgstr ""

# 9899479b48d847fb930349d65db066be
#: ../../ref/contrib/admin/index.txt:336
msgid ""
"In the above example, the \"age\" field will be excluded but the \"name\" "
"field will be included in the generated form."
msgstr ""

# 3537af645b7e46b187476791d3e60606
#: ../../ref/contrib/admin/index.txt:341
msgid ""
"This provides a quick-and-dirty way to override some of the :class:`~django."
"forms.Field` options for use in the admin. ``formfield_overrides`` is a "
"dictionary mapping a field class to a dict of arguments to pass to the field "
"at construction time."
msgstr ""

# ced2cdedb46c4c38993388a2cfe080a4
#: ../../ref/contrib/admin/index.txt:346
msgid ""
"Since that's a bit abstract, let's look at a concrete example. The most "
"common use of ``formfield_overrides`` is to add a custom widget for a "
"certain type of field. So, imagine we've written a ``RichTextEditorWidget`` "
"that we'd like to use for large text fields instead of the default "
"``<textarea>``. Here's how we'd do that::"
msgstr ""

# 9a5af2370958407781050398bf7f384e
#: ../../ref/contrib/admin/index.txt:364
msgid ""
"Note that the key in the dictionary is the actual field class, *not* a "
"string. The value is another dictionary; these arguments will be passed to :"
"meth:`~django.forms.Field.__init__`. See :doc:`/ref/forms/api` for details."
msgstr ""

# 33b734f7f1ba4516b832532d54904d00
#: ../../ref/contrib/admin/index.txt:371
msgid ""
"If you want to use a custom widget with a relation field (i.e. :class:"
"`~django.db.models.ForeignKey` or :class:`~django.db.models."
"ManyToManyField`), make sure you haven't included that field's name in "
"``raw_id_fields`` or ``radio_fields``."
msgstr ""

# d37dcfc22be0447ab5a6d273b4237fcc
#: ../../ref/contrib/admin/index.txt:376
msgid ""
"``formfield_overrides`` won't let you change the widget on relation fields "
"that have ``raw_id_fields`` or ``radio_fields`` set. That's because "
"``raw_id_fields`` and ``radio_fields`` imply custom widgets of their own."
msgstr ""

# 849879ca15e749ad9e34d05134ce3c79
#: ../../ref/contrib/admin/index.txt:385
msgid ""
"Returns the Changelist class to be used for listing. By default, ``django."
"contrib.admin.views.main.ChangeList`` is used. By inheriting this class you "
"can change the behavior of the listing."
msgstr ""

# 4c42b42a5d564bd4992b9805e1160081
#: ../../ref/contrib/admin/index.txt:391
msgid "See :class:`InlineModelAdmin` objects below."
msgstr ""

# 203c5c815c884d47aec585d712c52f22
#: ../../ref/contrib/admin/index.txt:395
msgid ""
"Set ``list_display`` to control which fields are displayed on the change "
"list page of the admin."
msgstr ""

# 63ea55267454438490c090c0ca422692
#: ../../ref/contrib/admin/index.txt:402
msgid ""
"If you don't set ``list_display``, the admin site will display a single "
"column that displays the ``__unicode__()`` representation of each object."
msgstr ""

# 6e83e6c8a69045b59254d7727715cfd0
#: ../../ref/contrib/admin/index.txt:405
msgid "You have four possible values that can be used in ``list_display``:"
msgstr ""

# 43d780622aec4d1a85325b724907ff87
#: ../../ref/contrib/admin/index.txt:407
msgid "A field of the model. For example::"
msgstr ""

# b37b0e7fe8bc4eb7a04e6de9b2a8e4cf
#: ../../ref/contrib/admin/index.txt:412
msgid ""
"A callable that accepts one parameter for the model instance. For example::"
msgstr ""

# 87887a056cf1427ebddf097c03f2bced
#: ../../ref/contrib/admin/index.txt:422
msgid ""
"A string representing an attribute on the ``ModelAdmin``. This behaves same "
"as the callable. For example::"
msgstr ""

# 1727cdcbb2cb4430836a907380d819ee
#: ../../ref/contrib/admin/index.txt:432
msgid ""
"A string representing an attribute on the model. This behaves almost the "
"same as the callable, but ``self`` in this context is the model instance. "
"Here's a full model example::"
msgstr ""

# bb0bc88bf5ed49f5879038d95e994fbd
#: ../../ref/contrib/admin/index.txt:447
msgid "A few special cases to note about ``list_display``:"
msgstr ""

# 0cfa729ed27c4dcfb14360c44f44ce18
#: ../../ref/contrib/admin/index.txt:449
msgid ""
"If the field is a ``ForeignKey``, Django will display the ``__unicode__()`` "
"of the related object."
msgstr ""

# debb2c174ebc443f9c96d712e1ec3407
#: ../../ref/contrib/admin/index.txt:452
msgid ""
"``ManyToManyField`` fields aren't supported, because that would entail "
"executing a separate SQL statement for each row in the table. If you want to "
"do this nonetheless, give your model a custom method, and add that method's "
"name to ``list_display``. (See below for more on custom methods in "
"``list_display``.)"
msgstr ""

# 804ff0a698284e2a86ae0bfd37bd917d
#: ../../ref/contrib/admin/index.txt:458
msgid ""
"If the field is a ``BooleanField`` or ``NullBooleanField``, Django will "
"display a pretty \"on\" or \"off\" icon instead of ``True`` or ``False``."
msgstr ""

# 4915f605cd02406ea8aed21ba90b1b54
#: ../../ref/contrib/admin/index.txt:462
msgid ""
"If the string given is a method of the model, ``ModelAdmin`` or a callable, "
"Django will HTML-escape the output by default. If you'd rather not escape "
"the output of the method, give the method an ``allow_tags`` attribute whose "
"value is ``True``."
msgstr ""

# c66039ec6e38441ab5984e1250af7423
# cf8e57bec86449e7918818de4347fce2
#: ../../ref/contrib/admin/index.txt:467 ../../ref/contrib/admin/index.txt:486
msgid "Here's a full example model::"
msgstr ""

# d4c0e068ae8a41ebb44222dad662f22f
#: ../../ref/contrib/admin/index.txt:481
msgid ""
"If the string given is a method of the model, ``ModelAdmin`` or a callable "
"that returns True or False Django will display a pretty \"on\" or \"off\" "
"icon if you give the method a ``boolean`` attribute whose value is ``True``."
msgstr ""

# 260bb67f9234417d87aa4249f57c4faa
#: ../../ref/contrib/admin/index.txt:500
msgid ""
"The ``__str__()`` and ``__unicode__()`` methods are just as valid in "
"``list_display`` as any other model method, so it's perfectly OK to do this::"
msgstr ""

# 2a5d1721c00f465cae30e1a7c76e42d7
#: ../../ref/contrib/admin/index.txt:506
msgid ""
"Usually, elements of ``list_display`` that aren't actual database fields "
"can't be used in sorting (because Django does all the sorting at the "
"database level)."
msgstr ""

# 40c1f457c0d54f2aaba04153f7ab1499
#: ../../ref/contrib/admin/index.txt:510
msgid ""
"However, if an element of ``list_display`` represents a certain database "
"field, you can indicate this fact by setting the ``admin_order_field`` "
"attribute of the item."
msgstr ""

# 2b9bcbec048e4f86834cb4ea4cd1ae7f
#: ../../ref/contrib/admin/index.txt:528
msgid ""
"The above will tell Django to order by the ``first_name`` field when trying "
"to sort by ``colored_first_name`` in the admin."
msgstr ""

# 486616ae572541cfa73e57afd7219f88
#: ../../ref/contrib/admin/index.txt:533
msgid ""
"Set ``list_display_links`` to control which fields in ``list_display`` "
"should be linked to the \"change\" page for an object."
msgstr ""

# ff5a1a8e441b41578d905af570c327f6
#: ../../ref/contrib/admin/index.txt:536
msgid ""
"By default, the change list page will link the first column -- the first "
"field specified in ``list_display`` -- to the change page for each item. But "
"``list_display_links`` lets you change which columns are linked. Set "
"``list_display_links`` to a list or tuple of fields (in the same format as "
"``list_display``) to link."
msgstr ""

# ebf09e8299854b0c816c30e806c26995
#: ../../ref/contrib/admin/index.txt:542
msgid ""
"``list_display_links`` can specify one or many fields. As long as the fields "
"appear in ``list_display``, Django doesn't care how many (or how few) fields "
"are linked. The only requirement is: If you want to use "
"``list_display_links``, you must define ``list_display``."
msgstr ""

# eb5cb997bb6d49d4b63fb559ea728401
#: ../../ref/contrib/admin/index.txt:547
msgid ""
"In this example, the ``first_name`` and ``last_name`` fields will be linked "
"on the change list page::"
msgstr ""

# e31fbd0ef35147aeae65d5476ffbff6d
#: ../../ref/contrib/admin/index.txt:558
msgid ""
"Set ``list_editable`` to a list of field names on the model which will allow "
"editing on the change list page. That is, fields listed in ``list_editable`` "
"will be displayed as form widgets on the change list page, allowing users to "
"edit and save multiple rows at once."
msgstr ""

# 07dce3d7ff2440bbbf8d2df9e7f7129b
#: ../../ref/contrib/admin/index.txt:565
msgid ""
"``list_editable`` interacts with a couple of other options in particular "
"ways; you should note the following rules:"
msgstr ""

# 7b31670fbf224d1e8f9d8c3a49bfd112
#: ../../ref/contrib/admin/index.txt:568
msgid ""
"Any field in ``list_editable`` must also be in ``list_display``. You can't "
"edit a field that's not displayed!"
msgstr ""

# 359db995703f47dbb865d00a51ca1321
#: ../../ref/contrib/admin/index.txt:571
msgid ""
"The same field can't be listed in both ``list_editable`` and "
"``list_display_links`` -- a field can't be both a form and a link."
msgstr ""

# ed62f2b070c6428da134b174f4a482d4
#: ../../ref/contrib/admin/index.txt:575
msgid "You'll get a validation error if either of these rules are broken."
msgstr ""

# db241d814d19427db2126c4591aa3f6d
#: ../../ref/contrib/admin/index.txt:581
msgid ""
"Set ``list_filter`` to activate filters in the right sidebar of the change "
"list page of the admin, as illustrated in the following screenshot:"
msgstr ""

# be8456d142904a2db5b243eeee3f6c1f
#: ../../ref/contrib/admin/index.txt:586
msgid ""
"``list_filter`` should be a list of elements, where each element should be "
"of one of the following types:"
msgstr ""

# b3f8a081c2a04d5b80ea39ed4a78e5fc
#: ../../ref/contrib/admin/index.txt:589
msgid ""
"a field name, where the specified field should be either a ``BooleanField``, "
"``CharField``, ``DateField``, ``DateTimeField``, ``IntegerField``, "
"``ForeignKey`` or ``ManyToManyField``, for example::"
msgstr ""

# 546a6e844df24c90856879ca1bf9765a
#: ../../ref/contrib/admin/index.txt:598
msgid ""
"Field names in ``list_filter`` can also span relations using the ``__`` "
"lookup, for example::"
msgstr ""

# 8c5eebc9bb76429ca98283a691fc5597
#: ../../ref/contrib/admin/index.txt:604
msgid ""
"a class inheriting from :mod:`django.contrib.admin.SimpleListFilter`, which "
"you need to provide the ``title`` and ``parameter_name`` attributes to and "
"override the ``lookups`` and ``queryset`` methods, e.g.::"
msgstr ""

# 1ea4b8eba7c742248d8a9f867f69558b
#: ../../ref/contrib/admin/index.txt:653
msgid ""
"As a convenience, the ``HttpRequest`` object is passed to the ``lookups`` "
"and ``queryset`` methods, for example::"
msgstr ""

# 5cc987d977174a44a302df83523f5aee
#: ../../ref/contrib/admin/index.txt:668
msgid ""
"Also as a convenience, the ``ModelAdmin`` object is passed to the "
"``lookups`` method, for example if you want to base the lookups on the "
"available data::"
msgstr ""

# 1401d242cd5b42499b6a41ea0ae3dc2b
#: ../../ref/contrib/admin/index.txt:687
msgid ""
"a tuple, where the first element is a field name and the second element is a "
"class inheriting from :mod:`django.contrib.admin.FieldListFilter`, for "
"example::"
msgstr ""

# f41379b7ec5c4b5ab19daaa98300d496
#: ../../ref/contrib/admin/index.txt:700
msgid ""
"The ``FieldListFilter`` API is considered internal and might be changed."
msgstr ""

# 8619d1d2fc86477fa964b4256fe6115d
#: ../../ref/contrib/admin/index.txt:705
msgid ""
"It is possible to specify a custom template for rendering a list filter::"
msgstr ""

# 156eac2445f7414cb0c6e50dcb382f9c
#: ../../ref/contrib/admin/index.txt:710
msgid ""
"See the default template provided by django (``admin/filter.html``) for a "
"concrete example."
msgstr ""

# 70f7fcfdcbff4c96a2c2f3d9612a78b9
#: ../../ref/contrib/admin/index.txt:717
msgid ""
"Set ``list_max_show_all`` to control how many items can appear on a \"Show "
"all\" admin change list page. The admin will display a \"Show all\" link on "
"the change list only if the total result count is less than or equal to this "
"setting. By default, this is set to ``200``."
msgstr ""

# 9cc6d26cc87543c584a17b50daea5dd0
#: ../../ref/contrib/admin/index.txt:724
msgid ""
"Set ``list_per_page`` to control how many items appear on each paginated "
"admin change list page. By default, this is set to ``100``."
msgstr ""

# 592b6704eda74cf98d963f5c1f1c8046
#: ../../ref/contrib/admin/index.txt:729
msgid ""
"Set ``list_select_related`` to tell Django to use :meth:`~django.db.models."
"query.QuerySet.select_related` in retrieving the list of objects on the "
"admin change list page. This can save you a bunch of database queries."
msgstr ""

# edd30206ebeb41eab2f3e3eb77093fe1
#: ../../ref/contrib/admin/index.txt:734
msgid "The value should be either ``True`` or ``False``. Default is ``False``."
msgstr ""

# e6ffdff582444cf7a1112d70c41bde4c
#: ../../ref/contrib/admin/index.txt:736
msgid ""
"Note that Django will use :meth:`~django.db.models.query.QuerySet."
"select_related`, regardless of this setting if one of the ``list_display`` "
"fields is a ``ForeignKey``."
msgstr ""

# 283cb300c615412c9b6fae4a43050b22
#: ../../ref/contrib/admin/index.txt:743
msgid ""
"Set ``ordering`` to specify how lists of objects should be ordered in the "
"Django admin views. This should be a list or tuple in the same format as a "
"model's :attr:`~django.db.models.Options.ordering` parameter."
msgstr ""

# cedcda3e47244894a62d26640331dccf
#: ../../ref/contrib/admin/index.txt:747
msgid ""
"If this isn't provided, the Django admin will use the model's default "
"ordering."
msgstr ""

# ef4885d8e2b8497da77d7b55d4b22d23
#: ../../ref/contrib/admin/index.txt:752
msgid ""
"If you need to specify a dynamic order (for example depending on user or "
"language) you can implement a :meth:`~ModelAdmin.get_ordering` method."
msgstr ""

# 5fa5fb2426244cbdbc9fa5f3159ade0f
#: ../../ref/contrib/admin/index.txt:757
msgid ""
"Django honors all elements in the list/tuple; before 1.4, only the first was "
"respected."
msgstr ""

# d4bbe551637f499ca4ac3276318a45b0
#: ../../ref/contrib/admin/index.txt:764
msgid ""
"The paginator class to be used for pagination. By default, :class:`django."
"core.paginator.Paginator` is used. If the custom paginator class doesn't "
"have the same constructor interface as :class:`django.core.paginator."
"Paginator`, you will also need to provide an implementation for :meth:"
"`ModelAdmin.get_paginator`."
msgstr ""

# 65edd0c477584a3599a37b6556341c88
#: ../../ref/contrib/admin/index.txt:772
msgid ""
"Set ``prepopulated_fields`` to a dictionary mapping field names to the "
"fields it should prepopulate from::"
msgstr ""

# b122858c39b64137a41314bfbaff920d
#: ../../ref/contrib/admin/index.txt:778
msgid ""
"When set, the given fields will use a bit of JavaScript to populate from the "
"fields assigned. The main use for this functionality is to automatically "
"generate the value for ``SlugField`` fields from one or more other fields. "
"The generated value is produced by concatenating the values of the source "
"fields, and then by transforming that result into a valid slug (e.g. "
"substituting dashes for spaces)."
msgstr ""

# edfeb15eb6e54ab2b996c2aa32b242cb
#: ../../ref/contrib/admin/index.txt:785
msgid ""
"``prepopulated_fields`` doesn't accept ``DateTimeField``, ``ForeignKey``, "
"nor ``ManyToManyField`` fields."
msgstr ""

# 7d565c3b4b734541a618ea7913abfc6f
#: ../../ref/contrib/admin/index.txt:790
msgid ""
"By default, Django's admin uses a select-box interface (<select>) for fields "
"that are ``ForeignKey`` or have ``choices`` set. If a field is present in "
"``radio_fields``, Django will use a radio-button interface instead. Assuming "
"``group`` is a ``ForeignKey`` on the ``Person`` model::"
msgstr ""

# bf375e75d7cc4a57b706b23c8af691c8
#: ../../ref/contrib/admin/index.txt:798
msgid ""
"You have the choice of using ``HORIZONTAL`` or ``VERTICAL`` from the "
"``django.contrib.admin`` module."
msgstr ""

# 81eb2e81e4a54434a277135a42dcc2bf
#: ../../ref/contrib/admin/index.txt:801
msgid ""
"Don't include a field in ``radio_fields`` unless it's a ``ForeignKey`` or "
"has ``choices`` set."
msgstr ""

# 6f97de2ffef448e4b3afdd894b452c21
# db0e8fc7bbcb4636aca17ed4863d5a6d
#: ../../ref/contrib/admin/index.txt:806
#: ../../ref/contrib/admin/index.txt:1479
msgid ""
"By default, Django's admin uses a select-box interface (<select>) for fields "
"that are ``ForeignKey``. Sometimes you don't want to incur the overhead of "
"having to select all the related instances to display in the drop-down."
msgstr ""

# 81fb828a57fb4d648d8400a4b3cc41d5
#: ../../ref/contrib/admin/index.txt:811
msgid ""
"``raw_id_fields`` is a list of fields you would like to change into an "
"``Input`` widget for either a ``ForeignKey`` or ``ManyToManyField``::"
msgstr ""

# 7ba0642b285a456cbf00e2754d27d6ef
#: ../../ref/contrib/admin/index.txt:822
msgid ""
"By default the admin shows all fields as editable. Any fields in this option "
"(which should be a ``list`` or ``tuple``) will display its data as-is and "
"non-editable. This option behaves nearly identical to :attr:`ModelAdmin."
"list_display`. Usage is the same, however, when you specify :attr:"
"`ModelAdmin.fields` or :attr:`ModelAdmin.fieldsets` the read-only fields "
"must be present to be shown (they are ignored otherwise)."
msgstr ""

# dac92edfe2224c82a2193a4523b7859b
#: ../../ref/contrib/admin/index.txt:829
msgid ""
"If ``readonly_fields`` is used without defining explicit ordering through :"
"attr:`ModelAdmin.fields` or :attr:`ModelAdmin.fieldsets` they will be added "
"last after all editable fields."
msgstr ""

# c61675ab712a4ce697137c3ec132b68d
#: ../../ref/contrib/admin/index.txt:835
msgid "Set ``save_as`` to enable a \"save as\" feature on admin change forms."
msgstr ""

# 837dc781f8af44779f854a1e17f8d452
#: ../../ref/contrib/admin/index.txt:837
msgid ""
"Normally, objects have three save options: \"Save\", \"Save and continue "
"editing\" and \"Save and add another\". If ``save_as`` is ``True``, \"Save "
"and add another\" will be replaced by a \"Save as\" button."
msgstr ""

# 74083981626b41c3805ef9a8cf5e5d26
#: ../../ref/contrib/admin/index.txt:841
msgid ""
"\"Save as\" means the object will be saved as a new object (with a new ID), "
"rather than the old object."
msgstr ""

# c7cd1b50f51e4f5f91094c66eb18f5b6
#: ../../ref/contrib/admin/index.txt:844
msgid "By default, ``save_as`` is set to ``False``."
msgstr ""

# df228f28529f43848c80da7c58ad571f
#: ../../ref/contrib/admin/index.txt:848
msgid ""
"Set ``save_on_top`` to add save buttons across the top of your admin change "
"forms."
msgstr ""

# 3b925b0e7be649c7af5ae3e1ebf90469
#: ../../ref/contrib/admin/index.txt:851
msgid ""
"Normally, the save buttons appear only at the bottom of the forms. If you "
"set ``save_on_top``, the buttons will appear both on the top and the bottom."
msgstr ""

# b2d85a3a23b2484c86dfc6b8dc88f7cf
#: ../../ref/contrib/admin/index.txt:855
msgid "By default, ``save_on_top`` is set to ``False``."
msgstr ""

# 1636431df7884bd0aec9ec92a65029bd
#: ../../ref/contrib/admin/index.txt:859
msgid ""
"Set ``search_fields`` to enable a search box on the admin change list page. "
"This should be set to a list of field names that will be searched whenever "
"somebody submits a search query in that text box."
msgstr ""

# c6a730ead46e44d397f8fbf9683ba853
#: ../../ref/contrib/admin/index.txt:863
msgid ""
"These fields should be some kind of text field, such as ``CharField`` or "
"``TextField``. You can also perform a related lookup on a ``ForeignKey`` or "
"``ManyToManyField`` with the lookup API \"follow\" notation::"
msgstr ""

# 38f0a107b68040ff9ad4b20d0d998841
#: ../../ref/contrib/admin/index.txt:869
msgid ""
"For example, if you have a blog entry with an author, the following "
"definition would enable search blog entries by the email address of the "
"author::"
msgstr ""

# b906a0bca4654d2e9ae425ff7e1b1e76
#: ../../ref/contrib/admin/index.txt:875
msgid ""
"When somebody does a search in the admin search box, Django splits the "
"search query into words and returns all objects that contain each of the "
"words, case insensitive, where each word must be in at least one of "
"``search_fields``. For example, if ``search_fields`` is set to ``"
"['first_name', 'last_name']`` and a user searches for ``john lennon``, "
"Django will do the equivalent of this SQL ``WHERE`` clause::"
msgstr ""

# 82d622002c224baaae0495013898bc56
#: ../../ref/contrib/admin/index.txt:885
msgid ""
"For faster and/or more restrictive searches, prefix the field name with an "
"operator:"
msgstr ""

# 141e9c0e1ce44a7ead582548d7ffd879
#: ../../ref/contrib/admin/index.txt:889
msgid ""
"Matches the beginning of the field. For example, if ``search_fields`` is set "
"to ``['^first_name', '^last_name']`` and a user searches for ``john "
"lennon``, Django will do the equivalent of this SQL ``WHERE`` clause::"
msgstr ""

# a2fdee30320d4ba081a95ebe4cb18165
#: ../../ref/contrib/admin/index.txt:897
msgid ""
"This query is more efficient than the normal ``'%john%'`` query, because the "
"database only needs to check the beginning of a column's data, rather than "
"seeking through the entire column's data. Plus, if the column has an index "
"on it, some databases may be able to use the index for this query, even "
"though it's a ``LIKE`` query."
msgstr ""

# 0110c2912e9e4dbfb9e5f2a1cfa2f709
#: ../../ref/contrib/admin/index.txt:904
msgid ""
"Matches exactly, case-insensitive. For example, if ``search_fields`` is set "
"to ``['=first_name', '=last_name']`` and a user searches for ``john "
"lennon``, Django will do the equivalent of this SQL ``WHERE`` clause::"
msgstr ""

# 262f5e97f3c54c14a12d15716c94b5f4
#: ../../ref/contrib/admin/index.txt:912
msgid ""
"Note that the query input is split by spaces, so, following this example, "
"it's currently not possible to search for all records in which "
"``first_name`` is exactly ``'john winston'`` (containing a space)."
msgstr ""

# 3f8f87ffad9b45c895cc96953f6a031f
#: ../../ref/contrib/admin/index.txt:917
msgid ""
"Performs a full-text match. This is like the default search method but uses "
"an index. Currently this is only available for MySQL."
msgstr ""

# 4c55bf7640fe4325889d30857cc0ff02
#: ../../ref/contrib/admin/index.txt:921
msgid "Custom template options"
msgstr ""

# 110ed0dfe84f41ea8158b93fc45855c1
#: ../../ref/contrib/admin/index.txt:923
msgid ""
"The `Overriding Admin Templates`_ section describes how to override or "
"extend the default admin templates.  Use the following options to override "
"the default templates used by the :class:`ModelAdmin` views:"
msgstr ""

# fd319a73fc3745919a39756fa71b4afa
#: ../../ref/contrib/admin/index.txt:931
msgid "Path to a custom template, used by :meth:`add_view`."
msgstr ""

# 046cf19f23d2491b982ae66cfaa4ca69
#: ../../ref/contrib/admin/index.txt:935
msgid "Path to a custom template, used by :meth:`change_view`."
msgstr ""

# 0f189c0fbd1245448edac0a4f7e50437
#: ../../ref/contrib/admin/index.txt:939
msgid "Path to a custom template, used by :meth:`changelist_view`."
msgstr ""

# 8477537ed1d0420a97f579b0f7651dbc
#: ../../ref/contrib/admin/index.txt:943
msgid ""
"Path to a custom template, used by :meth:`delete_view` for displaying a "
"confirmation page when deleting one or more objects."
msgstr ""

# 58217f917e694ce2b8a8381259ec3435
#: ../../ref/contrib/admin/index.txt:950
msgid ""
"Path to a custom template, used by the :meth:`delete_selected` action method "
"for displaying a confirmation page when deleting one or more objects. See "
"the :doc:`actions documentation</ref/contrib/admin/actions>`."
msgstr ""

# 8f3f434edb0048b0a424155eb65bdcca
#: ../../ref/contrib/admin/index.txt:957
msgid "Path to a custom template, used by :meth:`history_view`."
msgstr ""

# d0de0081d47f41c7b348263ddcda4be9
#: ../../ref/contrib/admin/index.txt:963
msgid "``ModelAdmin`` methods"
msgstr ""

# 65927be768af4a82bcae2e4a65a4ef2b
#: ../../ref/contrib/admin/index.txt:967
msgid ""
":meth:`ModelAdmin.save_model` and :meth:`ModelAdmin.delete_model` must save/"
"delete the object, they are not for veto purposes, rather they allow you to "
"perform extra operations."
msgstr ""

# ae620bf6a01a4b30a347cedf47f6fe42
#: ../../ref/contrib/admin/index.txt:973
msgid ""
"The ``save_model`` method is given the ``HttpRequest``, a model instance, a "
"``ModelForm`` instance and a boolean value based on whether it is adding or "
"changing the object. Here you can do any pre- or post-save operations."
msgstr ""

# 58f0201a36884cb29f75908a9b301263
#: ../../ref/contrib/admin/index.txt:977
msgid "For example to attach ``request.user`` to the object prior to saving::"
msgstr ""

# 27f0e1e730ee4612a5331f3b225956ee
#: ../../ref/contrib/admin/index.txt:988
msgid ""
"The ``delete_model`` method is given the ``HttpRequest`` and a model "
"instance. Use this method to do pre- or post-delete operations."
msgstr ""

# 731df137aa4e421380dd019ce113abb6
#: ../../ref/contrib/admin/index.txt:993
msgid ""
"The ``save_formset`` method is given the ``HttpRequest``, the parent "
"``ModelForm`` instance and a boolean value based on whether it is adding or "
"changing the parent object."
msgstr ""

# be682bf6155d46efb3469e904eb086b6
#: ../../ref/contrib/admin/index.txt:997
msgid ""
"For example to attach ``request.user`` to each changed formset model "
"instance::"
msgstr ""

# 7067f6cf53804336ad5b119684476421
#: ../../ref/contrib/admin/index.txt:1012
msgid ""
"The ``get_ordering`` method takes a``request`` as parameter and is expected "
"to return a ``list`` or ``tuple`` for ordering similar to the :attr:"
"`ordering` attribute. For example::"
msgstr ""

# 5afce2c10f054e059ba1fe4fc51d9dd0
#: ../../ref/contrib/admin/index.txt:1028
msgid ""
"The ``save_related`` method is given the ``HttpRequest``, the parent "
"``ModelForm`` instance, the list of inline formsets and a boolean value "
"based on whether the parent is being added or changed. Here you can do any "
"pre- or post-save operations for objects related to the parent. Note that at "
"this point the parent object and its form have already been saved."
msgstr ""

# 12340992b5674b0289402cef9befc741
#: ../../ref/contrib/admin/index.txt:1038
msgid ""
"The ``get_readonly_fields`` method is given the ``HttpRequest`` and the "
"``obj`` being edited (or ``None`` on an add form) and is expected to return "
"a ``list`` or ``tuple`` of field names that will be displayed as read-only, "
"as described above in the :attr:`ModelAdmin.readonly_fields` section."
msgstr ""

# d473382121f14e6d8f0eb3a100e25fc7
#: ../../ref/contrib/admin/index.txt:1047
msgid ""
"The ``get_prepopulated_fields`` method is given the ``HttpRequest`` and the "
"``obj`` being edited (or ``None`` on an add form) and is expected to return "
"a ``dictionary``, as described above in the :attr:`ModelAdmin."
"prepopulated_fields` section."
msgstr ""

# 46229489054d45cba8fa986452a83635
#: ../../ref/contrib/admin/index.txt:1056
msgid ""
"The ``get_list_display`` method is given the ``HttpRequest`` and is expected "
"to return a ``list`` or ``tuple`` of field names that will be displayed on "
"the changelist view as described above in the :attr:`ModelAdmin."
"list_display` section."
msgstr ""

# e0e1b8eeecdb45cc9c37cdf3b2380e55
#: ../../ref/contrib/admin/index.txt:1065
msgid ""
"The ``get_list_display_links`` method is given the ``HttpRequest`` and the "
"``list`` or ``tuple`` returned by :meth:`ModelAdmin.get_list_display`. It is "
"expected to return a ``list`` or ``tuple`` of field names on the changelist "
"that will be linked to the change view, as described in the :attr:"
"`ModelAdmin.list_display_links` section."
msgstr ""

# c11689bb6b9a496d95dd3c2e9cf9183a
#: ../../ref/contrib/admin/index.txt:1073
msgid ""
"The ``get_urls`` method on a ``ModelAdmin`` returns the URLs to be used for "
"that ModelAdmin in the same way as a URLconf.  Therefore you can extend them "
"as documented in :doc:`/topics/http/urls`::"
msgstr ""

# 3a2c874c650c47479fec33e1cba26583
#: ../../ref/contrib/admin/index.txt:1091
msgid ""
"Notice that the custom patterns are included *before* the regular admin "
"URLs: the admin URL patterns are very permissive and will match nearly "
"anything, so you'll usually want to prepend your custom URLs to the built-in "
"ones."
msgstr ""

# c9f65714d0fd40028306c90819e5739d
#: ../../ref/contrib/admin/index.txt:1096
msgid ""
"In this example, ``my_view`` will be accessed at ``/admin/myapp/mymodel/"
"my_view/`` (assuming the admin URLs are included at ``/admin/``.)"
msgstr ""

# 8f9ee5b3d2734a7eaae79d07ecc32185
#: ../../ref/contrib/admin/index.txt:1100
msgid ""
"However, the ``self.my_view`` function registered above suffers from two "
"problems:"
msgstr ""

# cecd997d798a499882c34eeca42f9035
#: ../../ref/contrib/admin/index.txt:1103
msgid ""
"It will *not* perform any permission checks, so it will be accessible to the "
"general public."
msgstr ""

# e20a363d3c864cf6a9d3efaa2e88b65b
#: ../../ref/contrib/admin/index.txt:1105
msgid ""
"It will *not* provide any header details to prevent caching. This means if "
"the page retrieves data from the database, and caching middleware is active, "
"the page could show outdated information."
msgstr ""

# d666523902644ffc88e05a4a6d79936f
#: ../../ref/contrib/admin/index.txt:1109
msgid ""
"Since this is usually not what you want, Django provides a convenience "
"wrapper to check permissions and mark the view as non-cacheable. This "
"wrapper is :meth:`AdminSite.admin_view` (i.e. ``self.admin_site.admin_view`` "
"inside a ``ModelAdmin`` instance); use it like so::"
msgstr ""

# 200bf19581be4c5b922a76865e133a85
#: ../../ref/contrib/admin/index.txt:1123
msgid "Notice the wrapped view in the fifth line above::"
msgstr ""

# 9f591315d6a34e08bed04d6cca01b0a3
#: ../../ref/contrib/admin/index.txt:1127
msgid ""
"This wrapping will protect ``self.my_view`` from unauthorized access and "
"will apply the ``django.views.decorators.cache.never_cache`` decorator to "
"make sure it is not cached if the cache middleware is active."
msgstr ""

# 66309bab39a2496f882e98684a2da32a
#: ../../ref/contrib/admin/index.txt:1131
msgid ""
"If the page is cacheable, but you still want the permission check to be "
"performed, you can pass a ``cacheable=True`` argument to :meth:`AdminSite."
"admin_view`::"
msgstr ""

# 92e1061638564a8e84f5fa7aa68e13a0
#: ../../ref/contrib/admin/index.txt:1139
msgid ""
"The ``formfield_for_foreignkey`` method on a ``ModelAdmin`` allows you to "
"override the default formfield for a foreign keys field. For example, to "
"return a subset of objects for this foreign key field based on the user::"
msgstr ""

# a8b14792338847bf884cbc42c412db38
#: ../../ref/contrib/admin/index.txt:1149
msgid ""
"This uses the ``HttpRequest`` instance to filter the ``Car`` foreign key "
"field to only display the cars owned by the ``User`` instance."
msgstr ""

# b865bec026a14c3c9fe244dc3e22cc9e
#: ../../ref/contrib/admin/index.txt:1154
msgid ""
"Like the ``formfield_for_foreignkey`` method, the "
"``formfield_for_manytomany`` method can be overridden to change the default "
"formfield for a many to many field. For example, if an owner can own "
"multiple cars and cars can belong to multiple owners -- a many to many "
"relationship -- you could filter the ``Car`` foreign key field to only "
"display the cars owned by the ``User``::"
msgstr ""

# d05f09aad95940cc99b27ba1f21fbbd5
#: ../../ref/contrib/admin/index.txt:1169
msgid ""
"Like the ``formfield_for_foreignkey`` and ``formfield_for_manytomany`` "
"methods, the ``formfield_for_choice_field`` method can be overridden to "
"change the default formfield for a field that has declared choices. For "
"example, if the choices available to a superuser should be different than "
"those available to regular staff, you could proceed as follows::"
msgstr ""

# 2e1d0bacda484ef8b03a532021c58025
#: ../../ref/contrib/admin/index.txt:1188
msgid ""
"Should return ``True`` if adding an object is permitted, ``False`` otherwise."
msgstr ""

# 93084b4366a448cab9f1383ff724dac8
#: ../../ref/contrib/admin/index.txt:1193
msgid ""
"Should return ``True`` if editing obj is permitted, ``False`` otherwise. If "
"obj is ``None``, should return ``True`` or ``False`` to indicate whether "
"editing of objects of this type is permitted in general (e.g., ``False`` "
"will be interpreted as meaning that the current user is not permitted to "
"edit any object of this type)."
msgstr ""

# 91a250777f5646138957470dee4e1713
#: ../../ref/contrib/admin/index.txt:1201
msgid ""
"Should return ``True`` if deleting obj is permitted, ``False`` otherwise. If "
"obj is ``None``, should return ``True`` or ``False`` to indicate whether "
"deleting objects of this type is permitted in general (e.g., ``False`` will "
"be interpreted as meaning that the current user is not permitted to delete "
"any object of this type)."
msgstr ""

# 6a4d3118ab2d44b7b5756f2131a786c6
#: ../../ref/contrib/admin/index.txt:1209
msgid ""
"The ``queryset`` method on a ``ModelAdmin`` returns a :class:`~django.db."
"models.query.QuerySet` of all model instances that can be edited by the "
"admin site. One use case for overriding this method is to show objects owned "
"by the logged-in user::"
msgstr ""

# e85bf094277b4e4e99f40380199c9e81
#: ../../ref/contrib/admin/index.txt:1223
msgid ""
"Sends a message to the user. The default implementation creates a message "
"using the :mod:`django.contrib.messages` backend. See the :ref:`custom "
"ModelAdmin example <custom-admin-action>`."
msgstr ""

# c475623ba5804fccab237fe9fb5fc6b1
#: ../../ref/contrib/admin/index.txt:1231
msgid ""
"Returns an instance of the paginator to use for this view. By default, "
"instantiates an instance of :attr:`paginator`."
msgstr ""

# 05971123c6ce488abb811f1ba3a81d58
#: ../../ref/contrib/admin/index.txt:1235
msgid "Other methods"
msgstr ""

# 0dc06cb6905c4ed2800e8ced13aca796
#: ../../ref/contrib/admin/index.txt:1239
msgid "Django view for the model instance addition page. See note below."
msgstr ""

# bb0cd5a41a814218b1a29012200ab8ed
#: ../../ref/contrib/admin/index.txt:1243
msgid "Django view for the model instance edition page. See note below."
msgstr ""

# 899649cca23a4e039420edae68b44c55
#: ../../ref/contrib/admin/index.txt:1247
msgid ""
"Django view for the model instances change list/actions page. See note below."
msgstr ""

# 3f7d09eb5d314c278ee8a26919ae2be5
#: ../../ref/contrib/admin/index.txt:1252
msgid ""
"Django view for the model instance(s) deletion confirmation page. See note "
"below."
msgstr ""

# c13cfe24d0944169ae11f7c10295007a
#: ../../ref/contrib/admin/index.txt:1257
msgid ""
"Django view for the page that shows the modification history for a given "
"model instance."
msgstr ""

# 0b386511bb974d82a4ea32294465b263
#: ../../ref/contrib/admin/index.txt:1260
msgid ""
"Unlike the hook-type ``ModelAdmin`` methods detailed in the previous "
"section, these five methods are in reality designed to be invoked as Django "
"views from the admin application URL dispatching handler to render the pages "
"that deal with model instances CRUD operations. As a result, completely "
"overriding these methods will significantly change the behavior of the admin "
"application."
msgstr ""

# 4ea3d7ee3265477d95fdf61ceb7ec578
#: ../../ref/contrib/admin/index.txt:1266
msgid ""
"One common reason for overriding these methods is to augment the context "
"data that is provided to the template that renders the view. In the "
"following example, the change view is overridden so that the rendered "
"template is provided some extra mapping data that would not otherwise be "
"available::"
msgstr ""

# 51a54bf72efc4412892578b2e35896f3
#: ../../ref/contrib/admin/index.txt:1288
msgid ""
"These views now return :class:`~django.template.response.TemplateResponse` "
"instances which allow you to easily customize the response data before "
"rendering. For more details, see the :doc:`TemplateResponse documentation </"
"ref/template-response>`."
msgstr ""

# f6068f6bca8c44309fa7e78e6fa7303e
#: ../../ref/contrib/admin/index.txt:1294
msgid "``ModelAdmin`` media definitions"
msgstr ""

# 68a24c97d05d42b5a6d7146afd66c925
#: ../../ref/contrib/admin/index.txt:1296
msgid ""
"There are times where you would like add a bit of CSS and/or JavaScript to "
"the add/change views. This can be accomplished by using a Media inner class "
"on your ``ModelAdmin``::"
msgstr ""

# f264c0abbf1748eaa3dcafd805ff9c55
#: ../../ref/contrib/admin/index.txt:1309
msgid ""
"The :doc:`staticfiles app </ref/contrib/staticfiles>` prepends :setting:"
"`STATIC_URL` (or :setting:`MEDIA_URL` if :setting:`STATIC_URL` is ``None``) "
"to any media paths. The same rules apply as :ref:`regular media definitions "
"on forms <form-media-paths>`."
msgstr ""

# c560f3a95aaa4214aabd0b71c654bdc3
#: ../../ref/contrib/admin/index.txt:1314
msgid ""
"Django admin Javascript makes use of the `jQuery`_ library. To avoid "
"conflicts with user-supplied scripts or libraries, Django's jQuery is "
"namespaced as ``django.jQuery``. If you want to use jQuery in your own admin "
"JavaScript without including a second copy, you can use the ``django."
"jQuery`` object on changelist and add/edit views."
msgstr ""

# 4b60e714bb1848c1be08e460945168e7
#: ../../ref/contrib/admin/index.txt:1320
msgid ""
"If you require the jQuery library to be in the global namespace, for example "
"when using third-party jQuery plugins, or need a newer version of jQuery, "
"you will have to include your own copy of jQuery."
msgstr ""

# 492c9cb3b8a1485db0be007894cd4164
#: ../../ref/contrib/admin/index.txt:1327
msgid "Adding custom validation to the admin"
msgstr ""

# 153beea3a4514cfa81212124ed1ca08b
#: ../../ref/contrib/admin/index.txt:1329
msgid ""
"Adding custom validation of data in the admin is quite easy. The automatic "
"admin interface reuses :mod:`django.forms`, and the ``ModelAdmin`` class "
"gives you the ability define your own form::"
msgstr ""

# f86368b24d9a49d3bdc00bf5a109dcad
#: ../../ref/contrib/admin/index.txt:1336
msgid ""
"``MyArticleAdminForm`` can be defined anywhere as long as you import where "
"needed. Now within your form you can add your own custom validation for any "
"field::"
msgstr ""

# b167d9688ed642b7a22f199a92a38878
#: ../../ref/contrib/admin/index.txt:1348
msgid ""
"It is important you use a ``ModelForm`` here otherwise things can break. See "
"the :doc:`forms </ref/forms/index>` documentation on :doc:`custom validation "
"</ref/forms/validation>` and, more specifically, the :ref:`model form "
"validation notes <overriding-modelform-clean-method>` for more information."
msgstr ""

# b43f0f24ed9945f0b673d57d43a18d10
#: ../../ref/contrib/admin/index.txt:1357
msgid "``InlineModelAdmin`` objects"
msgstr ""

# e208ba02b0384a97922395a1ef468133
#: ../../ref/contrib/admin/index.txt:1363
msgid ""
"The admin interface has the ability to edit models on the same page as a "
"parent model. These are called inlines. Suppose you have these two models::"
msgstr ""

# 0ca78b3392b84860b9b2e4f5a95a3e05
#: ../../ref/contrib/admin/index.txt:1373
msgid ""
"You can edit the books authored by an author on the author page. You add "
"inlines to a model by specifying them in a ``ModelAdmin.inlines``::"
msgstr ""

# 1d16db8d83ce49fb90b4b56c20fd7b8a
#: ../../ref/contrib/admin/index.txt:1384
msgid "Django provides two subclasses of ``InlineModelAdmin`` and they are:"
msgstr ""

# 04d10aa426a5440db5970f2d8d809690
#: ../../ref/contrib/admin/index.txt:1386
msgid ":class:`~django.contrib.admin.TabularInline`"
msgstr ""

# 299907d6b78f4439b1e16b41795739a0
#: ../../ref/contrib/admin/index.txt:1387
msgid ":class:`~django.contrib.admin.StackedInline`"
msgstr ""

# 382e8d55e7c64f899dc447a235abf84a
#: ../../ref/contrib/admin/index.txt:1389
msgid ""
"The difference between these two is merely the template used to render them."
msgstr ""

# 7fae1d16fdb14650a7fa9051eed3a819
#: ../../ref/contrib/admin/index.txt:1393
msgid "``InlineModelAdmin`` options"
msgstr ""

# e406c17301f14e969fae76d8eb542888
#: ../../ref/contrib/admin/index.txt:1395
msgid ""
"``InlineModelAdmin`` shares many of the same features as ``ModelAdmin``, and "
"adds some of its own (the shared features are actually defined in the "
"``BaseModelAdmin`` superclass). The shared features are:"
msgstr ""

# 887cdc1955c949e5968800d318c44fed
#: ../../ref/contrib/admin/index.txt:1399
msgid ":attr:`~InlineModelAdmin.form`"
msgstr ""

# 91dd46888c084e9e935996142b22069a
#: ../../ref/contrib/admin/index.txt:1400
msgid ":attr:`~ModelAdmin.fieldsets`"
msgstr ""

# 17f2126fb92b481da0a97cf28fb2b243
#: ../../ref/contrib/admin/index.txt:1401
msgid ":attr:`~ModelAdmin.fields`"
msgstr ""

# 4df2bb7d818545a3bab2903fa761d723
#: ../../ref/contrib/admin/index.txt:1402
msgid ":attr:`~ModelAdmin.exclude`"
msgstr ""

# 5c453a7c883a494396d2edf0487a9992
#: ../../ref/contrib/admin/index.txt:1403
msgid ":attr:`~ModelAdmin.filter_horizontal`"
msgstr ""

# e6c686b0b5ee4da0a2426f57da62cff8
#: ../../ref/contrib/admin/index.txt:1404
msgid ":attr:`~ModelAdmin.filter_vertical`"
msgstr ""

# 58d336b1b20d4543a0660b4db4d19752
#: ../../ref/contrib/admin/index.txt:1405
msgid ":attr:`~ModelAdmin.prepopulated_fields`"
msgstr ""

# a7ebfa220c1248c7acf928c68913f115
#: ../../ref/contrib/admin/index.txt:1406
msgid ":attr:`~ModelAdmin.radio_fields`"
msgstr ""

# 049aae1fed8842c882f7ede359e820e6
#: ../../ref/contrib/admin/index.txt:1407
msgid ":attr:`~InlineModelAdmin.raw_id_fields`"
msgstr ""

# 02c5dd89f5544fe5be5b81e7f7529efb
#: ../../ref/contrib/admin/index.txt:1408
msgid ":meth:`~ModelAdmin.formfield_for_foreignkey`"
msgstr ""

# 1f4cf013ceff4a439b6b6d361b7c6124
#: ../../ref/contrib/admin/index.txt:1409
msgid ":meth:`~ModelAdmin.formfield_for_manytomany`"
msgstr ""

# 60e1d7826290451b961936c9e75f7692
#: ../../ref/contrib/admin/index.txt:1413
msgid ":attr:`~ModelAdmin.readonly_fields`"
msgstr ""

# ecbe6012196448baa78dbab618b4bac5
#: ../../ref/contrib/admin/index.txt:1414
msgid ":attr:`~ModelAdmin.formfield_overrides`"
msgstr ""

# 3e7d9a01e14b4113bbb1684cbe2e7b12
#: ../../ref/contrib/admin/index.txt:1418
msgid ":attr:`~ModelAdmin.ordering`"
msgstr ""

# 3d94e12923a144798a3e139c15ca25c3
#: ../../ref/contrib/admin/index.txt:1419
msgid ":meth:`~ModelAdmin.queryset`"
msgstr ""

# 363193b90f1a4c54955533196cfe6a25
#: ../../ref/contrib/admin/index.txt:1423
msgid ":meth:`~ModelAdmin.has_add_permission`"
msgstr ""

# 4cb08600b62f445b8cc21e94b76ee87d
#: ../../ref/contrib/admin/index.txt:1424
msgid ":meth:`~ModelAdmin.has_change_permission`"
msgstr ""

# 61a3ee9b500041f58503b1218b793884
#: ../../ref/contrib/admin/index.txt:1425
msgid ":meth:`~ModelAdmin.has_delete_permission`"
msgstr ""

# 0ddaa51263d6417ead669f0d55d2c06c
#: ../../ref/contrib/admin/index.txt:1427
msgid "The ``InlineModelAdmin`` class adds:"
msgstr ""

# da7a92eb6951451a97deb1220f7fa5ba
#: ../../ref/contrib/admin/index.txt:1431
msgid "The model which the inline is using. This is required."
msgstr ""

# 3359fc2de1df465f856391b855caa377
#: ../../ref/contrib/admin/index.txt:1435
msgid ""
"The name of the foreign key on the model. In most cases this will be dealt "
"with automatically, but ``fk_name`` must be specified explicitly if there "
"are more than one foreign key to the same parent model."
msgstr ""

# 8e1e3e28efa64a09a023a6a61aa548d3
#: ../../ref/contrib/admin/index.txt:1441
msgid ""
"This defaults to ``BaseInlineFormSet``. Using your own formset can give you "
"many possibilities of customization. Inlines are built around :ref:`model "
"formsets <model-formsets>`."
msgstr ""

# 61fe63f52e264976b017fc9854e9bb60
#: ../../ref/contrib/admin/index.txt:1447
msgid ""
"The value for ``form`` defaults to ``ModelForm``. This is what is passed "
"through to ``inlineformset_factory`` when creating the formset for this "
"inline."
msgstr ""

# 9d35a6380f6746f5a3924578555c4620
#: ../../ref/contrib/admin/index.txt:1455
msgid ""
"This controls the number of extra forms the formset will display in addition "
"to the initial forms. See the :doc:`formsets documentation </topics/forms/"
"formsets>` for more information."
msgstr ""

# 8955d09ccf9a46db9ece9c98ec92fa14
#: ../../ref/contrib/admin/index.txt:1462
msgid ""
"For users with JavaScript-enabled browsers, an \"Add another\" link is "
"provided to enable any number of additional inlines to be added in addition "
"to those provided as a result of the ``extra`` argument."
msgstr ""

# f518e08b1de7414296f059371f0c37a0
#: ../../ref/contrib/admin/index.txt:1466
msgid ""
"The dynamic link will not appear if the number of currently displayed forms "
"exceeds ``max_num``, or if the user does not have JavaScript enabled."
msgstr ""

# c30fed5ef5114a74b7b7f0c8c120f502
#: ../../ref/contrib/admin/index.txt:1473
msgid ""
"This controls the maximum number of forms to show in the inline. This "
"doesn't directly correlate to the number of objects, but can if the value is "
"small enough. See :ref:`model-formsets-max-num` for more information."
msgstr ""

# cd5bcda622e443108644a29e2f4c2372
#: ../../ref/contrib/admin/index.txt:1484
msgid ""
"``raw_id_fields`` is a list of fields you would like to change into a "
"``Input`` widget for either a ``ForeignKey`` or ``ManyToManyField``::"
msgstr ""

# 2d72a66a368f4f9cb7cd67a94f70666d
#: ../../ref/contrib/admin/index.txt:1494
msgid "The template used to render the inline on the page."
msgstr ""

# b600d314aca54c388c674515c79491b7
#: ../../ref/contrib/admin/index.txt:1498
msgid ""
"An override to the ``verbose_name`` found in the model's inner ``Meta`` "
"class."
msgstr ""

# 077948ef31074438a74de700bd221e4c
#: ../../ref/contrib/admin/index.txt:1503
msgid ""
"An override to the ``verbose_name_plural`` found in the model's inner "
"``Meta`` class."
msgstr ""

# 2a57f4b5d3d3470191400f3307602ebd
#: ../../ref/contrib/admin/index.txt:1508
msgid ""
"Specifies whether or not inline objects can be deleted in the inline. "
"Defaults to ``True``."
msgstr ""

# f4f38d1e181547a6b8d3df8bd9da4d3c
#: ../../ref/contrib/admin/index.txt:1513
msgid ""
"Working with a model with two or more foreign keys to the same parent model"
msgstr ""

# d638d9e7d65043fca798cd310be91dec
#: ../../ref/contrib/admin/index.txt:1515
msgid ""
"It is sometimes possible to have more than one foreign key to the same "
"model. Take this model for instance::"
msgstr ""

# fb39f8354c904c3788232aac1057a20d
#: ../../ref/contrib/admin/index.txt:1522
msgid ""
"If you wanted to display an inline on the ``Person`` admin add/change pages "
"you need to explicitly define the foreign key since it is unable to do so "
"automatically::"
msgstr ""

# 55178ddb036247a4b663eff0d0f36b08
#: ../../ref/contrib/admin/index.txt:1536
msgid "Working with many-to-many models"
msgstr ""

# 9ba9eec9758e4e8797d726d9ea38cd29
#: ../../ref/contrib/admin/index.txt:1540
msgid ""
"By default, admin widgets for many-to-many relations will be displayed on "
"whichever model contains the actual reference to the :class:`~django.db."
"models.ManyToManyField`. Depending on your ``ModelAdmin`` definition, each "
"many-to-many field in your model will be represented by a standard HTML "
"``<select multiple>``, a horizontal or vertical filter, or a "
"``raw_id_admin`` widget. However, it is also possible to replace these "
"widgets with inlines."
msgstr ""

# f24ebb96eacd43e28b107c3c8d78a841
#: ../../ref/contrib/admin/index.txt:1548
msgid "Suppose we have the following models::"
msgstr ""

# 03eff91d93f447debd3ec111f158ef41
#: ../../ref/contrib/admin/index.txt:1557
msgid ""
"If you want to display many-to-many relations using an inline, you can do so "
"by defining an ``InlineModelAdmin`` object for the relationship::"
msgstr ""

# 35e306250eca4fdd8c2f56437dbf0aa1
#: ../../ref/contrib/admin/index.txt:1574
msgid "There are two features worth noting in this example."
msgstr ""

# ad8d50a298d24b759dac1512b7fa82f8
#: ../../ref/contrib/admin/index.txt:1576
msgid ""
"Firstly - the ``MembershipInline`` class references ``Group.members."
"through``. The ``through`` attribute is a reference to the model that "
"manages the many-to-many relation. This model is automatically created by "
"Django when you define a many-to-many field."
msgstr ""

# 6d891f89a27647d9a7587d48e824596a
#: ../../ref/contrib/admin/index.txt:1581
msgid ""
"Secondly, the ``GroupAdmin`` must manually exclude the ``members`` field. "
"Django displays an admin widget for a many-to-many field on the model that "
"defines the relation (in this case, ``Group``). If you want to use an inline "
"model to represent the many-to-many relationship, you must tell Django's "
"admin to *not* display this widget - otherwise you will end up with two "
"widgets on your admin page for managing the relation."
msgstr ""

# 61a6d830e12c422f861ed3e87cf1a435
#: ../../ref/contrib/admin/index.txt:1588
msgid ""
"In all other respects, the ``InlineModelAdmin`` is exactly the same as any "
"other. You can customize the appearance using any of the normal "
"``ModelAdmin`` properties."
msgstr ""

# 063992e9d4f345b19e5548008516ddb4
#: ../../ref/contrib/admin/index.txt:1593
msgid "Working with many-to-many intermediary models"
msgstr ""

# 5b71bec790e240f3b150bb643362eb53
#: ../../ref/contrib/admin/index.txt:1595
msgid ""
"When you specify an intermediary model using the ``through`` argument to a :"
"class:`~django.db.models.ManyToManyField`, the admin will not display a "
"widget by default. This is because each instance of that intermediary model "
"requires more information than could be displayed in a single widget, and "
"the layout required for multiple widgets will vary depending on the "
"intermediate model."
msgstr ""

# a6da95cb36964ab2aab104457ad24bc0
#: ../../ref/contrib/admin/index.txt:1602
msgid ""
"However, we still want to be able to edit that information inline. "
"Fortunately, this is easy to do with inline admin models. Suppose we have "
"the following models::"
msgstr ""

# 9f497a01fdb849c79cee1f6c6e29b66f
#: ../../ref/contrib/admin/index.txt:1619
msgid ""
"The first step in displaying this intermediate model in the admin is to "
"define an inline class for the ``Membership`` model::"
msgstr ""

# 208731232628455c977fc2f1f9c6ec3c
#: ../../ref/contrib/admin/index.txt:1626
msgid ""
"This simple example uses the default ``InlineModelAdmin`` values for the "
"``Membership`` model, and limits the extra add forms to one. This could be "
"customized using any of the options available to ``InlineModelAdmin`` "
"classes."
msgstr ""

# c65bca759ff741959fa50e124ba1c579
#: ../../ref/contrib/admin/index.txt:1630
msgid "Now create admin views for the ``Person`` and ``Group`` models::"
msgstr ""

# 5e3cc1550a1241d68594766b595770e9
#: ../../ref/contrib/admin/index.txt:1638
msgid ""
"Finally, register your ``Person`` and ``Group`` models with the admin site::"
msgstr ""

# 8665fe865ece4e1eb790f55fd7fb97c3
#: ../../ref/contrib/admin/index.txt:1643
msgid ""
"Now your admin site is set up to edit ``Membership`` objects inline from "
"either the ``Person`` or the ``Group`` detail pages."
msgstr ""

# 38417b644ca34a4e929ee0e12b21f5da
#: ../../ref/contrib/admin/index.txt:1649
msgid "Using generic relations as an inline"
msgstr ""

# e6ba7c4747d04a6fb041b3bce3c09fe6
#: ../../ref/contrib/admin/index.txt:1651
msgid ""
"It is possible to use an inline with generically related objects. Let's say "
"you have the following models::"
msgstr ""

# 550447f568ff451b9bd5cba696f14ae7
#: ../../ref/contrib/admin/index.txt:1663
msgid ""
"If you want to allow editing and creating ``Image`` instance on the "
"``Product`` add/change views you can use ``GenericTabularInline`` or "
"``GenericStackedInline`` (both subclasses of ``GenericInlineModelAdmin``) "
"provided by ``django.contrib.contenttypes.generic``, they implement tabular "
"and stacked visual layouts for the forms representing the inline objects "
"respectively just like their non-generic counterparts and behave just like "
"any other inline. In your ``admin.py`` for this example app::"
msgstr ""

# b8ae9817eea242ab94e15a30a37db185
#: ../../ref/contrib/admin/index.txt:1686
msgid ""
"See the :doc:`contenttypes documentation </ref/contrib/contenttypes>` for "
"more specific information."
msgstr ""

# 7db11a61a0bf4e4483e18f0d61a45a65
#: ../../ref/contrib/admin/index.txt:1690
msgid "Overriding admin templates"
msgstr ""

# 3394e7f4391b4a2ba580cfe3b3ba34ef
#: ../../ref/contrib/admin/index.txt:1692
msgid ""
"It is relatively easy to override many of the templates which the admin "
"module uses to generate the various pages of an admin site. You can even "
"override a few of these templates for a specific app, or a specific model."
msgstr ""

# 80da255b534b4be38518cb802ef33981
#: ../../ref/contrib/admin/index.txt:1697
msgid "Set up your projects admin template directories"
msgstr ""

# d18e372b918b485d854f804bc2783c5d
#: ../../ref/contrib/admin/index.txt:1699
msgid ""
"The admin template files are located in the ``contrib/admin/templates/"
"admin`` directory."
msgstr ""

# f78c090df6b5467e850eabb8fa16df04
#: ../../ref/contrib/admin/index.txt:1702
msgid ""
"In order to override one or more of them, first create an ``admin`` "
"directory in your project's ``templates`` directory. This can be any of the "
"directories you specified in :setting:`TEMPLATE_DIRS`."
msgstr ""

# 6b52037ae90749b7aaabc462a9b00247
#: ../../ref/contrib/admin/index.txt:1706
msgid ""
"Within this ``admin`` directory, create sub-directories named after your "
"app. Within these app subdirectories create sub-directories named after your "
"models. Note, that the admin app will lowercase the model name when looking "
"for the directory, so make sure you name the directory in all lowercase if "
"you are going to run your app on a case-sensitive filesystem."
msgstr ""

# 42e703a49daf486ba7d33a4b9a060adb
#: ../../ref/contrib/admin/index.txt:1712
msgid ""
"To override an admin template for a specific app, copy and edit the template "
"from the ``django/contrib/admin/templates/admin`` directory, and save it to "
"one of the directories you just created."
msgstr ""

# 1eda4af6f2814acfa677a3cd26170d4e
#: ../../ref/contrib/admin/index.txt:1716
msgid ""
"For example, if we wanted to add a tool to the change list view for all the "
"models in an app named ``my_app``, we would copy ``contrib/admin/templates/"
"admin/change_list.html`` to the ``templates/admin/my_app/`` directory of our "
"project, and make any necessary changes."
msgstr ""

# 51d4e4b61a094cbf813110eefe19dec8
#: ../../ref/contrib/admin/index.txt:1722
msgid ""
"If we wanted to add a tool to the change list view for only a specific model "
"named 'Page', we would copy that same file to the ``templates/admin/my_app/"
"page`` directory of our project."
msgstr ""

# 428f4e4f822b4791a3723038037e1bb8
#: ../../ref/contrib/admin/index.txt:1727
msgid "Overriding vs. replacing an admin template"
msgstr ""

# ee4c841c7acd42eead74a7d7dcff1f99
#: ../../ref/contrib/admin/index.txt:1729
msgid ""
"Because of the modular design of the admin templates, it is usually neither "
"necessary nor advisable to replace an entire template. It is almost always "
"better to override only the section of the template which you need to change."
msgstr ""

# b8d9fbc3919b4df2aa1630c75d8c9e07
#: ../../ref/contrib/admin/index.txt:1733
msgid ""
"To continue the example above, we want to add a new link next to the "
"``History`` tool for the ``Page`` model. After looking at ``change_form."
"html`` we determine that we only need to override the ``object-tools`` "
"block. Therefore here is our new ``change_form.html`` :"
msgstr ""

# a7fccdbdb1cb42dfb76bdb393a3e0ce0
#: ../../ref/contrib/admin/index.txt:1756
msgid ""
"And that's it! If we placed this file in the ``templates/admin/my_app`` "
"directory, our link would appear on every model's change form."
msgstr ""

# 6c48b081ae224e45b8df884df7242635
#: ../../ref/contrib/admin/index.txt:1760
msgid "Templates which may be overridden per app or model"
msgstr ""

# 9fc2e0a9e1ed41ec9201a347a7bf8ff4
#: ../../ref/contrib/admin/index.txt:1762
msgid ""
"Not every template in ``contrib/admin/templates/admin`` may be overridden "
"per app or per model. The following can:"
msgstr ""

# 9b4ea85ca5a848388205bcd5bed90e50
#: ../../ref/contrib/admin/index.txt:1765
msgid "``app_index.html``"
msgstr ""

# 4eae40cec5f84c6ca772147fb148f778
#: ../../ref/contrib/admin/index.txt:1766
msgid "``change_form.html``"
msgstr ""

# a67dd7443a2246859c57cd6a3fcff005
#: ../../ref/contrib/admin/index.txt:1767
msgid "``change_list.html``"
msgstr ""

# 7294e36c19c74ec2ae5d86945511d33a
#: ../../ref/contrib/admin/index.txt:1768
msgid "``delete_confirmation.html``"
msgstr ""

# 49e7502821114ba394fe4f4ed71b28ea
#: ../../ref/contrib/admin/index.txt:1769
msgid "``object_history.html``"
msgstr ""

# fb298d7175ba4401a5fadceabc578e42
#: ../../ref/contrib/admin/index.txt:1771
msgid ""
"For those templates that cannot be overridden in this way, you may still "
"override them for your entire project. Just place the new version in your "
"``templates/admin`` directory. This is particularly useful to create custom "
"404 and 500 pages."
msgstr ""

# 29066a9df4754b81a2283e0a7cf01df0
#: ../../ref/contrib/admin/index.txt:1778
msgid ""
"Some of the admin templates, such as ``change_list_request.html`` are used "
"to render custom inclusion tags. These may be overridden, but in such cases "
"you are probably better off creating your own version of the tag in question "
"and giving it a different name. That way you can use it selectively."
msgstr ""

# d563e56c0ee3421a88db32dcd8f138c3
#: ../../ref/contrib/admin/index.txt:1785
msgid "Root and login templates"
msgstr ""

# d6845cd08c4e4d3d9aa8cecd2a9bf492
#: ../../ref/contrib/admin/index.txt:1787
msgid ""
"If you wish to change the index, login or logout templates, you are better "
"off creating your own ``AdminSite`` instance (see below), and changing the :"
"attr:`AdminSite.index_template` , :attr:`AdminSite.login_template` or :attr:"
"`AdminSite.logout_template` properties."
msgstr ""

# c793d71f93c04bc69255122bc5e49490
#: ../../ref/contrib/admin/index.txt:1793
msgid "``AdminSite`` objects"
msgstr ""

# ed6a390e4c3c4a958bc9a095d47fea3b
#: ../../ref/contrib/admin/index.txt:1797
msgid ""
"A Django administrative site is represented by an instance of ``django."
"contrib.admin.sites.AdminSite``; by default, an instance of this class is "
"created as ``django.contrib.admin.site`` and you can register your models "
"and ``ModelAdmin`` instances with it."
msgstr ""

# 7403e8deb697438db80b98d2e17cb45b
#: ../../ref/contrib/admin/index.txt:1802
msgid ""
"If you'd like to set up your own administrative site with custom behavior, "
"however, you're free to subclass ``AdminSite`` and override or add anything "
"you like. Then, simply create an instance of your ``AdminSite`` subclass "
"(the same way you'd instantiate any other Python class), and register your "
"models and ``ModelAdmin`` subclasses with it instead of using the default."
msgstr ""

# ef877ba5ca214f6fbc993bdc57f98af8
#: ../../ref/contrib/admin/index.txt:1809
msgid ""
"When constructing an instance of an ``AdminSite``, you are able to provide a "
"unique instance name using the ``name`` argument to the constructor. This "
"instance name is used to identify the instance, especially when :ref:"
"`reversing admin URLs <admin-reverse-urls>`. If no instance name is "
"provided, a default instance name of ``admin`` will be used."
msgstr ""

# 526305251f4143149e5650f21ad96de4
#: ../../ref/contrib/admin/index.txt:1816
msgid "``AdminSite`` attributes"
msgstr ""

# cf1c03f046784e3f94717d57f9589726
#: ../../ref/contrib/admin/index.txt:1818
msgid ""
"Templates can override or extend base admin templates as described in "
"`Overriding Admin Templates`_."
msgstr ""

# a2371ad20b4b4a7888fc1cf90a13968a
#: ../../ref/contrib/admin/index.txt:1823
msgid ""
"Path to a custom template that will be used by the admin site main index "
"view."
msgstr ""

# e4c5cb1b98474bd287be23f35616ee5d
#: ../../ref/contrib/admin/index.txt:1828
msgid ""
"Path to a custom template that will be used by the admin site login view."
msgstr ""

# 951dcb3d1ab947fe94f5b33216da9d6d
#: ../../ref/contrib/admin/index.txt:1834
msgid ""
"Subclass of :class:`~django.contrib.auth.forms.AuthenticationForm` that will "
"be used by the admin site login view."
msgstr ""

# 6ca1da1496264ea7b425f0956ba6eed8
#: ../../ref/contrib/admin/index.txt:1841
msgid ""
"Path to a custom template that will be used by the admin site logout view."
msgstr ""

# 4aead1938b5048b3915c6885a0eb230b
#: ../../ref/contrib/admin/index.txt:1847
msgid ""
"Path to a custom template that will be used by the admin site password "
"change view."
msgstr ""

# 4122b9b4628c48f384ee58f454b8228c
#: ../../ref/contrib/admin/index.txt:1854
msgid ""
"Path to a custom template that will be used by the admin site password "
"change done view."
msgstr ""

# 79d70739cd4544c4b77c7dafa183d0fe
#: ../../ref/contrib/admin/index.txt:1858
msgid "Hooking ``AdminSite`` instances into your URLconf"
msgstr ""

# 323dfb23695f489aa6e86bd198f737e3
#: ../../ref/contrib/admin/index.txt:1860
msgid ""
"The last step in setting up the Django admin is to hook your ``AdminSite`` "
"instance into your URLconf. Do this by pointing a given URL at the "
"``AdminSite.urls`` method."
msgstr ""

# ca78b4b747a74ee780ea6a83314dab90
#: ../../ref/contrib/admin/index.txt:1864
msgid ""
"In this example, we register the default ``AdminSite`` instance ``django."
"contrib.admin.site`` at the URL ``/admin/`` ::"
msgstr ""

# 85dc3dc5eb2c46f5a2048767e2f75b32
#: ../../ref/contrib/admin/index.txt:1877
msgid ""
"Above we used ``admin.autodiscover()`` to automatically load the :setting:"
"`INSTALLED_APPS` admin.py modules."
msgstr ""

# 68f09dfb50bf4ae5920d483fd6d51876
#: ../../ref/contrib/admin/index.txt:1880
msgid ""
"In this example, we register the ``AdminSite`` instance ``myproject.admin."
"admin_site`` at the URL ``/myadmin/`` ::"
msgstr ""

# 638e8cd34e7b424a915632240428a8ba
#: ../../ref/contrib/admin/index.txt:1891
msgid ""
"There is really no need to use autodiscover when using your own "
"``AdminSite`` instance since you will likely be importing all the per-app "
"admin.py modules in your ``myproject.admin`` module."
msgstr ""

# 7dbbbebc25a440cc8e0fa147679d94f2
#: ../../ref/contrib/admin/index.txt:1896
msgid "Multiple admin sites in the same URLconf"
msgstr ""

# e8f2b717766645ccb3d79539b89aea5b
#: ../../ref/contrib/admin/index.txt:1898
msgid ""
"It's easy to create multiple instances of the admin site on the same Django-"
"powered Web site. Just create multiple instances of ``AdminSite`` and root "
"each one at a different URL."
msgstr ""

# d8005ccea72243308b64dca04970db1d
#: ../../ref/contrib/admin/index.txt:1902
msgid ""
"In this example, the URLs ``/basic-admin/`` and ``/advanced-admin/`` feature "
"separate versions of the admin site -- using the ``AdminSite`` instances "
"``myproject.admin.basic_site`` and ``myproject.admin.advanced_site``, "
"respectively::"
msgstr ""

# 283c83abdb6d4642a220d2785cde1571
#: ../../ref/contrib/admin/index.txt:1916
msgid ""
"``AdminSite`` instances take a single argument to their constructor, their "
"name, which can be anything you like. This argument becomes the prefix to "
"the URL names for the purposes of :ref:`reversing them<admin-reverse-urls>`. "
"This is only necessary if you are using more than one ``AdminSite``."
msgstr ""

# 1272f9865b4f450e888114999bf9c52d
#: ../../ref/contrib/admin/index.txt:1922
msgid "Adding views to admin sites"
msgstr ""

# d009b57785524c0ea6e2f7ec60d70799
#: ../../ref/contrib/admin/index.txt:1924
msgid ""
"Just like :class:`ModelAdmin`, :class:`AdminSite` provides a :meth:`~django."
"contrib.admin.ModelAdmin.get_urls()` method that can be overridden to define "
"additional views for the site. To add a new view to your admin site, extend "
"the base :meth:`~django.contrib.admin.ModelAdmin.get_urls()` method to "
"include a pattern for your new view."
msgstr ""

# 46862daed6b14279a88fcb792ad8fc08
#: ../../ref/contrib/admin/index.txt:1933
msgid ""
"Any view you render that uses the admin templates, or extends the base admin "
"template, should provide the ``current_app`` argument to :class:`~django."
"template.RequestContext` or :class:`~django.template.Context` when rendering "
"the template.  It should be set to either ``self.name`` if your view is on "
"an ``AdminSite`` or ``self.admin_site.name`` if your view is on a "
"``ModelAdmin``."
msgstr ""

# 2ecfbbade06e4126a0091f8f56c9a81b
#: ../../ref/contrib/admin/index.txt:1943
msgid "Adding a password-reset feature"
msgstr ""

# ea82e0efc3694874aeee53922579c0b7
#: ../../ref/contrib/admin/index.txt:1945
msgid ""
"You can add a password-reset feature to the admin site by adding a few lines "
"to your URLconf. Specifically, add these four patterns:"
msgstr ""

# e1565e5cabcc4275a4ea373a5ab83bb0
#: ../../ref/contrib/admin/index.txt:1955
msgid ""
"(This assumes you've added the admin at ``admin/`` and requires that you put "
"the URLs starting with ``^admin/`` before the line that includes the admin "
"app itself)."
msgstr ""

# 357a344bb796416c85b8564806f5e2ed
#: ../../ref/contrib/admin/index.txt:1961
msgid ""
"The presence of the ``admin_password_reset`` named URL will cause a "
"\"forgotten your password?\" link to appear on the default admin log-in page "
"under the password box."
msgstr ""

# 9db8b2da9cfe4d40bcc86252b7429be6
#: ../../ref/contrib/admin/index.txt:1968
msgid "Reversing admin URLs"
msgstr ""

# 9ccc8268a37d4d83a450944e01ef2e42
#: ../../ref/contrib/admin/index.txt:1970
msgid ""
"When an :class:`AdminSite` is deployed, the views provided by that site are "
"accessible using Django's :ref:`URL reversing system <naming-url-patterns>`."
msgstr ""

# a5727e711497445397378691850a6aa6
#: ../../ref/contrib/admin/index.txt:1973
msgid "The :class:`AdminSite` provides the following named URL patterns:"
msgstr ""

# 39b9c2e791ed49b59861c953e1368bb9
# c6d86eba71ef4ff881abae6e20d86895
#: ../../ref/contrib/admin/index.txt:1976
#: ../../ref/contrib/admin/index.txt:1989
msgid "Page"
msgstr ""

# f3bdda395a23494d973d71d60813f87c
# 0ea29e45ff74478cbb53ae38bd4d8222
#: ../../ref/contrib/admin/index.txt:1976
#: ../../ref/contrib/admin/index.txt:1989
msgid "URL name"
msgstr ""

# c972f626ef41426d9deac4bb55d30506
# 14fb37fc7897438aada97e9bf74d07f0
#: ../../ref/contrib/admin/index.txt:1976
#: ../../ref/contrib/admin/index.txt:1989
msgid "Parameters"
msgstr ""

# edb6f89db8ce41769ea5682e9092f871
# 4854b1b5a0cb4f1eab77954b32baae60
#: ../../ref/contrib/admin/index.txt:1978 ../../ref/contrib/sitemaps.txt:366
msgid "Index"
msgstr ""

# 76f6862fae5f4a048cb901056c5232b9
#: ../../ref/contrib/admin/index.txt:1978
msgid "``index``"
msgstr ""

# 51033ef9ca014127bd020618a87e0952
#: ../../ref/contrib/admin/index.txt:1979
msgid "Logout"
msgstr ""

# a09c16dbfcb74262a32dcbab7f6d0c8e
#: ../../ref/contrib/admin/index.txt:1979
msgid "``logout``"
msgstr ""

# 68b5e6fe4ce14fedb959652b4a2befe2
#: ../../ref/contrib/admin/index.txt:1980
msgid "Password change"
msgstr ""

# 87c0a736afad4b0b89f303e6883667d5
#: ../../ref/contrib/admin/index.txt:1980
msgid "``password_change``"
msgstr ""

# dda95a528e3747a5af148f63a69edcd1
#: ../../ref/contrib/admin/index.txt:1981
msgid "Password change done"
msgstr ""

# 31f92717fd474752a3981240d4a6fae8
#: ../../ref/contrib/admin/index.txt:1981
msgid "``password_change_done``"
msgstr ""

# 5693bfb665b547deabad517b09d7a251
#: ../../ref/contrib/admin/index.txt:1982
msgid "i18n javascript"
msgstr ""

# 264042308ff14b32bcf725835c416416
#: ../../ref/contrib/admin/index.txt:1982
msgid "``jsi18n``"
msgstr ""

# d4bc1d17da784e56b4cd7d9052dd1595
#: ../../ref/contrib/admin/index.txt:1983
msgid "Application index page"
msgstr ""

# c4b8b7d5b6c44ab48f491e09fa7ddbe3
#: ../../ref/contrib/admin/index.txt:1983
msgid "``app_list``"
msgstr ""

# 5b8d49143e9f44f79174bfaea6d8bc0a
# 9d5e14495cd84bbbb88fc7059bbb6d19
#: ../../ref/contrib/admin/index.txt:1983 ../../ref/models/options.txt:23
msgid "``app_label``"
msgstr ""

# d757ab3bd4514687a3d8437aa30d9c36
#: ../../ref/contrib/admin/index.txt:1986
msgid ""
"Each :class:`ModelAdmin` instance provides an additional set of named URLs:"
msgstr ""

# cbfbe93d036a417a86524ac1eaf41140
#: ../../ref/contrib/admin/index.txt:1991
msgid "Changelist"
msgstr ""

# 5b4c190f84214108afdd7351771d712e
#: ../../ref/contrib/admin/index.txt:1991
msgid "``{{ app_label }}_{{ model_name }}_changelist``"
msgstr ""

# b54e626e353f47c28a94921e6f47c09b
#: ../../ref/contrib/admin/index.txt:1992
msgid "Add"
msgstr ""

# c56c46780baa4d608ecabc28a5cc7334
#: ../../ref/contrib/admin/index.txt:1992
msgid "``{{ app_label }}_{{ model_name }}_add``"
msgstr ""

# 2130af2de393473b98d577749871f8dc
#: ../../ref/contrib/admin/index.txt:1993
msgid "History"
msgstr ""

# 0c13fc4905c94547adc39d8160b6e027
#: ../../ref/contrib/admin/index.txt:1993
msgid "``{{ app_label }}_{{ model_name }}_history``"
msgstr ""

# e4889a25725e4f05a0f1c5678e86bef4
# 6d5677dbf96e4e61859eaec03384220e
# 6ea1a958adad4c63ba2bb42422f3f785
#: ../../ref/contrib/admin/index.txt:1993
#: ../../ref/contrib/admin/index.txt:1994
#: ../../ref/contrib/admin/index.txt:1995
msgid "``object_id``"
msgstr ""

# e4693d693ae94343be223bfdfc0fe363
#: ../../ref/contrib/admin/index.txt:1994
msgid "Delete"
msgstr ""

# 17361d5295134a52abdebef31fe7da3b
#: ../../ref/contrib/admin/index.txt:1994
msgid "``{{ app_label }}_{{ model_name }}_delete``"
msgstr ""

# 2cb6a6c767f34b9dbf6b79143e418454
#: ../../ref/contrib/admin/index.txt:1995
msgid "Change"
msgstr ""

# 958f2bd7de814817a3aba36bff04a70d
#: ../../ref/contrib/admin/index.txt:1995
msgid "``{{ app_label }}_{{ model_name }}_change``"
msgstr ""

# f691b4c4e49849afa89595b1f4aef8bb
#: ../../ref/contrib/admin/index.txt:1998
msgid ""
"These named URLs are registered with the application namespace ``admin``, "
"and with an instance namespace corresponding to the name of the Site "
"instance."
msgstr ""

# 0b248a0bd2e54340b6a33567848bcfef
#: ../../ref/contrib/admin/index.txt:2001
msgid ""
"So - if you wanted to get a reference to the Change view for a particular "
"``Choice`` object (from the polls application) in the default admin, you "
"would call::"
msgstr ""

# 82387a343bab4db08904915e1d5b3271
#: ../../ref/contrib/admin/index.txt:2009
msgid ""
"This will find the first registered instance of the admin application "
"(whatever the instance name), and resolve to the view for changing ``poll."
"Choice`` instances in that instance."
msgstr ""

# 2a75208f300b4c299b04b03773886a25
#: ../../ref/contrib/admin/index.txt:2013
msgid ""
"If you want to find a URL in a specific admin instance, provide the name of "
"that instance as a ``current_app`` hint to the reverse call. For example, if "
"you specifically wanted the admin view from the admin instance named "
"``custom``, you would need to call::"
msgstr ""

# 883544a9a1fd4f69a2ed9de85166dced
#: ../../ref/contrib/admin/index.txt:2020
msgid ""
"For more details, see the documentation on :ref:`reversing namespaced URLs "
"<topics-http-reversing-url-namespaces>`."
msgstr ""

# 58b945b04639412fa9a7a3d7685d7346
#: ../../ref/contrib/admin/index.txt:2025
msgid ""
"To allow easier reversing of the admin urls in templates, Django provides an "
"``admin_urlname`` filter which takes an action as argument:"
msgstr ""

# 359ec4726f0a4102a50335488f23766a
#: ../../ref/contrib/admin/index.txt:2035
msgid ""
"The action in the examples above match the last part of the URL names for :"
"class:`ModelAdmin` instances described above. The ``opts`` variable can be "
"any object which has an ``app_label`` and ``module_name`` and is usually "
"supplied by the admin views for the current model."
msgstr ""

# dc952179dc04426894dcdd5347e98cb9
# 49482d4efa5140b0b622d7ea5e7c951a
#: ../../ref/contrib/auth.txt:2 ../../ref/django-admin.txt:1183
msgid "``django.contrib.auth``"
msgstr ""

# 6cd72740a09f40d69d15c82740f1f69e
# e60e52e510284b17a1175fc4309c24a1
#: ../../ref/contrib/auth.txt:4 ../../ref/contrib/index.txt:59
msgid "See :doc:`/topics/auth`."
msgstr ""

# 40cd14dd2ebf4b06859630fbe05d669c
#: ../../ref/contrib/comments/custom.txt:3
msgid "Customizing the comments framework"
msgstr ""

# 2b9d1c16ab7c479db568720070bb9e30
#: ../../ref/contrib/comments/custom.txt:7
msgid ""
"If the built-in comment framework doesn't quite fit your needs, you can "
"extend the comment app's behavior to add custom data and logic. The comments "
"framework lets you extend the built-in comment model, the built-in comment "
"form, and the various comment views."
msgstr ""

# 434714c4ed834f8f8631cee512822d90
#: ../../ref/contrib/comments/custom.txt:12
msgid ""
"The :setting:`COMMENTS_APP` setting is where this customization begins. Set :"
"setting:`COMMENTS_APP` to the name of the app you'd like to use to provide "
"custom behavior. You'll use the same syntax as you'd use for :setting:"
"`INSTALLED_APPS`, and the app given must also be in the :setting:"
"`INSTALLED_APPS` list."
msgstr ""

# cc90d4a6c803434b90f0c5b32a2aab01
#: ../../ref/contrib/comments/custom.txt:18
msgid ""
"For example, if you wanted to use an app named ``my_comment_app``, your "
"settings file would contain::"
msgstr ""

# 8f67615821504137a006a022090d5fc9
#: ../../ref/contrib/comments/custom.txt:29
msgid ""
"The app named in :setting:`COMMENTS_APP` provides its custom behavior by "
"defining some module-level functions in the app's ``__init__.py``. The :ref:"
"`complete list of these functions <custom-comment-app-api>` can be found "
"below, but first let's look at a quick example."
msgstr ""

# 3793c64606e74e588cb5ae447dc77430
#: ../../ref/contrib/comments/custom.txt:35
msgid "An example custom comments app"
msgstr ""

# 02a08cf31cf44ba284cf8570b5f3cf38
#: ../../ref/contrib/comments/custom.txt:37
msgid ""
"One of the most common types of customization is modifying the set of fields "
"provided on the built-in comment model. For example, some sites that allow "
"comments want the commentator to provide a title for their comment; the "
"built-in comment model has no field for that title."
msgstr ""

# 2ef6b0be82c34f7db5b99d0994a6e956
#: ../../ref/contrib/comments/custom.txt:42
msgid "To make this kind of customization, we'll need to do three things:"
msgstr ""

# f9d7059b8b17441c8a64b56c9c6fff52
#: ../../ref/contrib/comments/custom.txt:44
msgid ""
"Create a custom comment :class:`~django.db.models.Model` that adds on the "
"\"title\" field."
msgstr ""

# 9e36cd127a024227b2b293cc0d2cad78
#: ../../ref/contrib/comments/custom.txt:47
msgid ""
"Create a custom comment :class:`~django.forms.Form` that also adds this "
"\"title\" field."
msgstr ""

# 4cd0cdbaf3864ee19b099ce61f8cffae
#: ../../ref/contrib/comments/custom.txt:50
msgid ""
"Inform Django of these objects by defining a few functions in a custom :"
"setting:`COMMENTS_APP`."
msgstr ""

# aa24d235485c41e6be601a89d7bff0c6
#: ../../ref/contrib/comments/custom.txt:53
msgid ""
"So, carrying on the example above, we're dealing with a typical app "
"structure in the ``my_custom_app`` directory::"
msgstr ""

# 8a0021c0c1e24d3681e2f8722f538545
#: ../../ref/contrib/comments/custom.txt:61
msgid "In the ``models.py`` we'll define a ``CommentWithTitle`` model::"
msgstr ""

# 7e01061362ef4dc4b51a0b7e60a133fa
#: ../../ref/contrib/comments/custom.txt:69
msgid ""
"Most custom comment models will subclass the :class:`Comment` model. "
"However, if you want to substantially remove or change the fields available "
"in the :class:`Comment` model, but don't want to rewrite the templates, you "
"could try subclassing from :class:`BaseCommentAbstractModel`."
msgstr ""

# 87d9af8e094248b5bc8af29884d56b4f
#: ../../ref/contrib/comments/custom.txt:74
msgid ""
"Next, we'll define a custom comment form in ``forms.py``. This is a little "
"more tricky: we have to both create a form and override :meth:`CommentForm."
"get_comment_model` and :meth:`CommentForm.get_comment_create_data` to return "
"deal with our custom title field::"
msgstr ""

# a02e22e39fb5463ca794e11b5f2f4ace
#: ../../ref/contrib/comments/custom.txt:97
msgid ""
"Django provides a couple of \"helper\" classes to make writing certain types "
"of custom comment forms easier; see :mod:`django.contrib.comments.forms` for "
"more."
msgstr ""

# b4fb752eb1ec4c1f92da47fe3640f366
#: ../../ref/contrib/comments/custom.txt:101
msgid ""
"Finally, we'll define a couple of methods in ``my_custom_app/__init__.py`` "
"to point Django at these classes we've created::"
msgstr ""

# c67fc03aa8c44da69c05ec8de620ac5e
#: ../../ref/contrib/comments/custom.txt:116
msgid ""
"Be careful not to create cyclic imports in your custom comments app. If you "
"feel your comment configuration isn't being used as defined -- for example, "
"if your comment moderation policy isn't being applied -- you may have a "
"cyclic import problem."
msgstr ""

# b04ed7191f454292869783dcb5192081
#: ../../ref/contrib/comments/custom.txt:121
msgid ""
"If you are having unexplained problems with comments behavior, check if your "
"custom comments application imports (even indirectly) any module that itself "
"imports Django's comments module."
msgstr ""

# 426177f487f1424f8631fa838d37a806
#: ../../ref/contrib/comments/custom.txt:125
msgid ""
"The above process should take care of most common situations. For more "
"advanced usage, there are additional methods you can define. Those are "
"explained in the next section."
msgstr ""

# 79cbbf78c96e4470878efbe4f5c1d1a8
#: ../../ref/contrib/comments/custom.txt:132
msgid "Custom comment app API"
msgstr ""

# 8f64976064be4618a8e73d213aa445f8
#: ../../ref/contrib/comments/custom.txt:134
msgid ""
"The :mod:`django.contrib.comments` app defines the following methods; any "
"custom comment app must define at least one of them. All are optional, "
"however."
msgstr ""

# 3af1d6df07ef43009a7717e75f397e26
#: ../../ref/contrib/comments/custom.txt:140
msgid ""
"Return the :class:`~django.db.models.Model` class to use for comments. This "
"model should inherit from :class:`django.contrib.comments.models."
"BaseCommentAbstractModel`, which defines necessary core fields."
msgstr ""

# 7aae96801c32403c9d1e330cb7dcf78b
#: ../../ref/contrib/comments/custom.txt:145
msgid ""
"The default implementation returns :class:`django.contrib.comments.models."
"Comment`."
msgstr ""

# b1327cdb1d3349f09931565a3e5454ed
#: ../../ref/contrib/comments/custom.txt:150
msgid ""
"Return the :class:`~django.forms.Form` class you want to use for creating, "
"validating, and saving your comment model.  Your custom comment form should "
"accept an additional first argument, ``target_object``, which is the object "
"the comment will be attached to."
msgstr ""

# c19fed3c89ee428993bf9b78bccf4b73
#: ../../ref/contrib/comments/custom.txt:156
msgid ""
"The default implementation returns :class:`django.contrib.comments.forms."
"CommentForm`."
msgstr ""

# a1eafb5e21414066976a588d7e459ee1
#: ../../ref/contrib/comments/custom.txt:161
msgid ""
"The default comment form also includes a number of unobtrusive spam-"
"prevention features (see :ref:`notes-on-the-comment-form`).  If replacing it "
"with your own form, you may want to look at the source code for the built-in "
"form and consider incorporating similar features."
msgstr ""

# 3cc007e8360843178baf824c197bc9d2
#: ../../ref/contrib/comments/custom.txt:169
msgid ""
"Return the URL for POSTing comments. This will be the ``<form action>`` "
"attribute when rendering your comment form."
msgstr ""

# 2fc363db0100446e85b1f27a00341b81
#: ../../ref/contrib/comments/custom.txt:172
msgid ""
"The default implementation returns a reverse-resolved URL pointing to the :"
"func:`post_comment` view."
msgstr ""

# 78a1e1b6059644c9bc026cdfe6a243d4
#: ../../ref/contrib/comments/custom.txt:177
msgid ""
"If you provide a custom comment model and/or form, but you want to use the "
"default :func:`post_comment` view, you will need to be aware that it "
"requires the model and form to have certain additional attributes and "
"methods: see the :func:`post_comment` view documentation for details."
msgstr ""

# 9a10c046cc5141f79fe7e51206725793
#: ../../ref/contrib/comments/custom.txt:185
msgid "Return the URL for the \"flag this comment\" view."
msgstr ""

# 1b2eb2c284014ce592075ca375dc3159
#: ../../ref/contrib/comments/custom.txt:187
msgid ""
"The default implementation returns a reverse-resolved URL pointing to the :"
"func:`django.contrib.comments.views.moderation.flag` view."
msgstr ""

# 110b63389dc64d699e1058ccf8b63d23
#: ../../ref/contrib/comments/custom.txt:192
msgid "Return the URL for the \"delete this comment\" view."
msgstr ""

# 126b074931b942af931f831743671b28
#: ../../ref/contrib/comments/custom.txt:194
msgid ""
"The default implementation returns a reverse-resolved URL pointing to the :"
"func:`django.contrib.comments.views.moderation.delete` view."
msgstr ""

# b41fe4295de848478a975614f5a83cf2
#: ../../ref/contrib/comments/custom.txt:199
msgid "Return the URL for the \"approve this comment from moderation\" view."
msgstr ""

# 1c00cc09583543d1acb47ecaf6785db0
#: ../../ref/contrib/comments/custom.txt:201
msgid ""
"The default implementation returns a reverse-resolved URL pointing to the :"
"func:`django.contrib.comments.views.moderation.approve` view."
msgstr ""

# 01eedae497af42828d51ca5156202403
#: ../../ref/contrib/comments/example.txt:5
msgid "Example of using the built-in comments app"
msgstr ""

# 25872338c5434531b8a685b0a29d48d6
#: ../../ref/contrib/comments/example.txt:7
msgid ""
"Follow the first three steps of the quick start guide in the :doc:"
"`documentation </ref/contrib/comments/index>`."
msgstr ""

# ded7f2eed27a43c18b9d9e11f9dde146
#: ../../ref/contrib/comments/example.txt:10
msgid ""
"Now suppose, you have an app (``blog``) with a model (``Post``) to which you "
"want to attach comments. Let's also suppose that you have a template called "
"``blog_detail.html`` where you want to display the comments list and comment "
"form."
msgstr ""

# 901889c3fd22473cbcdb62e50fc18973
# e8e9bcb64a164248b95c824c28b58e4a
# 70ab30ecf6894daaadeaa766bd791fa3
# 52771dac9bbe4c82a1b5731c4187aeb4
#: ../../ref/contrib/comments/example.txt:16
#: ../../ref/templates/builtins.txt:1586 ../../ref/templates/builtins.txt:1597
#: ../../ref/templates/builtins.txt:1609
msgid "Template"
msgstr ""

# b03ad6a1c6e745e6947390dfa79b2bec
#: ../../ref/contrib/comments/example.txt:18
msgid ""
"First, we should load the ``comment`` template tags in the ``blog_detail."
"html`` so that we can use its functionality. So just like all other custom "
"template tag libraries::"
msgstr ""

# defba2b22b884a82860766c34cb35387
#: ../../ref/contrib/comments/example.txt:24
msgid ""
"Next, let's add the number of comments attached to the particular model "
"instance of ``Post``. For this we assume that a context variable "
"``object_pk`` is present which gives the ``id`` of the instance of ``Post``."
msgstr ""

# 552779a8daaf43289232476997a9edc6
#: ../../ref/contrib/comments/example.txt:29
msgid "The usage of the :ttag:`get_comment_count` tag is like below::"
msgstr ""

# 8a0e93845cb24718ab062a9c14366421
#: ../../ref/contrib/comments/example.txt:34
msgid ""
"If you have the instance (say ``entry``) of the model (``Post``) available "
"in the context, then you can refer to it directly::"
msgstr ""

# ca6c059c98d948f6a9d90cb4baf1955b
#: ../../ref/contrib/comments/example.txt:42
msgid ""
"Next, we can use the :ttag:`render_comment_list` tag, to render all comments "
"to the given instance (``entry``) by using the ``comments/list.html`` "
"template::"
msgstr ""

# dd9a584cea9a4a388d85427c583684a7
#: ../../ref/contrib/comments/example.txt:47
msgid ""
"Django will will look for the ``list.html`` under the following directories "
"(for our example)::"
msgstr ""

# ea074ee30d3c4837845e9dbee7433c8a
#: ../../ref/contrib/comments/example.txt:54
msgid ""
"To get a list of comments, we make use of the :ttag:`get_comment_list` tag. "
"Using this tag is very similar to the :ttag:`get_comment_count` tag. We need "
"to remember that :ttag:`get_comment_list` returns a list of comments and "
"hence we have to iterate through them to display them::"
msgstr ""

# 21780342e15f4e0e9baa216b6b083014
#: ../../ref/contrib/comments/example.txt:67
msgid ""
"Finally, we display the comment form, enabling users to enter their "
"comments. There are two ways of doing so. The first is when you want to "
"display the comments template available under your ``comments/form.html``. "
"The other method gives you a chance to customize the form."
msgstr ""

# d8f413bcebaa4d4d866073ecd8aa629c
#: ../../ref/contrib/comments/example.txt:72
msgid ""
"The first method makes use of the :ttag:`render_comment_form` tag. Its usage "
"too is similar to the other three tags we have discussed above::"
msgstr ""

# 4350fd6f0dba4df6823dcd7ec32295bd
#: ../../ref/contrib/comments/example.txt:77
msgid ""
"It looks for the ``form.html`` under the following directories (for our "
"example)::"
msgstr ""

# 645181901e794ac8b1d0b2b89e54b762
#: ../../ref/contrib/comments/example.txt:84
msgid ""
"Since we customize the form in the second method, we make use of another tag "
"called :ttag:`comment_form_target`. This tag on rendering gives the URL "
"where the comment form is posted. Without any :doc:`customization </ref/"
"contrib/comments/custom>`, :ttag:`comment_form_target` evaluates to ``/"
"comments/post/``. We use this tag in the form's ``action`` attribute."
msgstr ""

# 1f84522d0318453a94fd2c70950beefc
#: ../../ref/contrib/comments/example.txt:90
msgid ""
"The :ttag:`get_comment_form` tag renders a ``form`` for a model instance by "
"creating a context variable. One can iterate over the ``form`` object to get "
"individual fields. This gives you fine-grain control over the form::"
msgstr ""

# 37877746e5c744b2ba74c190be1fb10d
#: ../../ref/contrib/comments/example.txt:100
msgid "But let's look at a simple example::"
msgstr ""

# 7674606d19fe436790ac4822d9bed961
#: ../../ref/contrib/comments/example.txt:119
msgid "Flagging"
msgstr ""

# b93ab023976e43829cd396ad81c7b225
#: ../../ref/contrib/comments/example.txt:121
msgid ""
"If you want your users to be able to flag comments (say for profanity), you "
"can just direct them (by placing a link in your comment list) to ``/flag/"
"{{ comment.id }}/``. Similarly, a user with requisite permissions (``\"Can "
"moderate comments\"``) can approve and delete comments. This can also be "
"done through the ``admin`` as you'll see later. You might also want to "
"customize the following templates:"
msgstr ""

# 24287e9671a1474a9379024eb9c1dc16
#: ../../ref/contrib/comments/example.txt:128
msgid "``flag.html``"
msgstr ""

# 44d6b7cfd03947dda02c165888989637
#: ../../ref/contrib/comments/example.txt:129
msgid "``flagged.html``"
msgstr ""

# 3f1cbfbb44a24addb58176ba1fb92357
#: ../../ref/contrib/comments/example.txt:130
msgid "``approve.html``"
msgstr ""

# e44f8721d2094a2b9f140830271f9e91
#: ../../ref/contrib/comments/example.txt:131
msgid "``approved.html``"
msgstr ""

# 3422169914724f6cb2a4150f386d994c
#: ../../ref/contrib/comments/example.txt:132
msgid "``delete.html``"
msgstr ""

# c609e42ac72f4e669a14b8ed0a17b120
#: ../../ref/contrib/comments/example.txt:133
msgid "``deleted.html``"
msgstr ""

# 1a7552def41246008c7aa366ff2c8b4f
#: ../../ref/contrib/comments/example.txt:135
msgid "found under the directory structure we saw for ``form.html``."
msgstr ""

# 67ed1eff48474abfa2683b958c163b86
#: ../../ref/contrib/comments/example.txt:138
msgid "Feeds"
msgstr ""

# f9bfe9f4eab24c2d8122b0b9afc8380c
#: ../../ref/contrib/comments/example.txt:140
msgid ""
"Suppose you want to export a :doc:`feed </ref/contrib/syndication>` of the "
"latest comments, you can use the built-in :class:`LatestCommentFeed`. Just "
"enable it in your project's ``urls.py``:"
msgstr ""

# 49403904e3ae43a282d31389235abc88
#: ../../ref/contrib/comments/example.txt:155
msgid ""
"Now you should have the latest comment feeds being served off ``/feeds/"
"latest/``."
msgstr ""

# 83cfc5ed771c4233aea5f4e5422f10b6
#: ../../ref/contrib/comments/example.txt:159
msgid ""
"Prior to Django 1.3, the LatestCommentFeed was deployed using the "
"syndication feed view:"
msgstr ""

# a61f52d588ac4f63a8010fba2db07a8c
#: ../../ref/contrib/comments/example.txt:180
msgid "Moderation"
msgstr ""

# f6dabfebb8b94229ae39da10d657be32
#: ../../ref/contrib/comments/example.txt:182
msgid ""
"Now that we have the comments framework working, we might want to have some "
"moderation setup to administer the comments. The comments framework comes "
"built-in with :doc:`generic comment moderation </ref/contrib/comments/"
"moderation>`. The comment moderation has the following features (all of "
"which or only certain can be enabled):"
msgstr ""

# 85f29388f0ff4b48b26f615a14eb0fc7
#: ../../ref/contrib/comments/example.txt:188
msgid "Enable comments for a particular model instance."
msgstr ""

# 27f73c0a76414f9a86ec264dbb6516fe
#: ../../ref/contrib/comments/example.txt:189
msgid "Close comments after a particular (user-defined) number of days."
msgstr ""

# 3e597236bd124356b7dc67aa786adc12
#: ../../ref/contrib/comments/example.txt:190
msgid "Email new comments to the site-staff."
msgstr ""

# bb6540d4541147ccbb835bda0350f5cc
#: ../../ref/contrib/comments/example.txt:192
msgid ""
"To enable comment moderation, we subclass the :class:`CommentModerator` and "
"register it with the moderation features we want. Let's suppose we want to "
"close comments after 7 days of posting and also send out an email to the "
"site staff. In ``blog/models.py``, we register a comment moderator in the "
"following way:"
msgstr ""

# 200f10d48b0c499d92cf3dc93e1206b4
#: ../../ref/contrib/comments/example.txt:216
msgid ""
"The generic comment moderation also has the facility to remove comments. "
"These comments can then be moderated by any user who has access to the "
"``admin`` site and the ``Can moderate comments`` permission (can be set "
"under the ``Users`` page in the ``admin``)."
msgstr ""

# 2ae4ca0e030f426fa685509b65b0e1f5
#: ../../ref/contrib/comments/example.txt:221
msgid ""
"The moderator can ``Flag``, ``Approve`` or ``Remove`` comments using the "
"``Action`` drop-down in the ``admin`` under the ``Comments`` page."
msgstr ""

# 21c1a8cc132b43e991c9ac096b829c51
#: ../../ref/contrib/comments/example.txt:226
msgid ""
"Only a super-user will be able to delete comments from the database. "
"``Remove Comments`` only sets the ``is_public`` attribute to ``False``."
msgstr ""

# 38c0a8fb734e41b499ad5334b8a74118
#: ../../ref/contrib/comments/forms.txt:3
msgid "Comment form classes"
msgstr ""

# 38ccb98fa1fc4606b48b6016f56004b8
#: ../../ref/contrib/comments/forms.txt:8
msgid ""
"The ``django.contrib.comments.forms`` module contains a handful of forms "
"you'll use when writing custom views dealing with comments, or when writing :"
"doc:`custom comment apps </ref/contrib/comments/custom>`."
msgstr ""

# afdf21d1c9aa45448bc78119f2217d4b
#: ../../ref/contrib/comments/forms.txt:14
msgid ""
"The main comment form representing the standard, built-in way of handling "
"submitted comments. This is the class used by all the views :mod:`django."
"contrib.comments` to handle submitted comments."
msgstr ""

# 1e86365fc77a4772a3452ad12fa32ef8
#: ../../ref/contrib/comments/forms.txt:18
msgid ""
"If you want to build custom views that are similar to Django's built-in "
"comment handling views, you'll probably want to use this form."
msgstr ""

# b9692c1eaa464862a2be519ca055579b
#: ../../ref/contrib/comments/forms.txt:22
msgid "Abstract comment forms for custom comment apps"
msgstr ""

# ed497a30792248b28c5795ac35c6da73
#: ../../ref/contrib/comments/forms.txt:24
msgid ""
"If you're building a :doc:`custom comment app </ref/contrib/comments/"
"custom>`, you might want to replace *some* of the form logic but still rely "
"on parts of the existing form."
msgstr ""

# 820b2003204f409094905a018dd1a65f
#: ../../ref/contrib/comments/forms.txt:28
msgid ""
":class:`CommentForm` is actually composed of a couple of abstract base class "
"forms that you can subclass to reuse pieces of the form handling logic:"
msgstr ""

# 77433d71568d48a1a7227d0ffd8776ff
#: ../../ref/contrib/comments/forms.txt:33
msgid ""
"Handles the anti-spoofing protection aspects of the comment form handling."
msgstr ""

# ace1c65d818a41caa2556ba92843867f
#: ../../ref/contrib/comments/forms.txt:35
msgid ""
"This class contains the ``content_type`` and ``object_pk`` fields pointing "
"to the object the comment is attached to, along with a ``timestamp`` and a "
"``security_hash`` of all the form data. Together, the timestamp and the "
"security hash ensure that spammers can't \"replay\" form submissions and "
"flood you with comments."
msgstr ""

# 95c66018d5c143c7827a7d0cdf69b04c
#: ../../ref/contrib/comments/forms.txt:43
msgid "Handles the details of the comment itself."
msgstr ""

# 943498e85fc04559aee12abc29e465c5
#: ../../ref/contrib/comments/forms.txt:45
msgid ""
"This class contains the ``name``, ``email``, ``url``, and the ``comment`` "
"field itself, along with the associated validation logic."
msgstr ""

# a2d60e06c1474557adf5c5a2be87d01c
#: ../../ref/contrib/comments/index.txt:3
msgid "Django's comments framework"
msgstr ""

# 74b3f0288d104d6c99312c24598950ec
#: ../../ref/contrib/comments/index.txt:10
msgid ""
"Django includes a simple, yet customizable comments framework. The built-in "
"comments framework can be used to attach comments to any model, so you can "
"use it for comments on blog entries, photos, book chapters, or anything else."
msgstr ""

# ddc5d29fd8fb439ba29e6f6afe61c833
#: ../../ref/contrib/comments/index.txt:16
msgid ""
"If you used to use Django's older (undocumented) comments framework, you'll "
"need to upgrade. See the :doc:`upgrade guide </ref/contrib/comments/"
"upgrade>` for instructions."
msgstr ""

# 9b3ffd0ddce546fdb3510473ce6fc5d6
#: ../../ref/contrib/comments/index.txt:21
msgid "Quick start guide"
msgstr ""

# 403ae98dafb6446ba0eb0af5104193a9
#: ../../ref/contrib/comments/index.txt:23
msgid "To get started using the ``comments`` app, follow these steps:"
msgstr ""

# ab92901d65194bcda1253982d5fc52a6
#: ../../ref/contrib/comments/index.txt:25
msgid ""
"Install the comments framework by adding ``'django.contrib.comments'`` to :"
"setting:`INSTALLED_APPS`."
msgstr ""

# b81de08790e546c19620c5c6ab26aff0
#: ../../ref/contrib/comments/index.txt:28
msgid "Run ``manage.py syncdb`` so that Django will create the comment tables."
msgstr ""

# 4cf81d8b51424470b5384fead92b2b0b
#: ../../ref/contrib/comments/index.txt:30
msgid "Add the comment app's URLs to your project's ``urls.py``:"
msgstr ""

# 06f3a1992bd6413088874b014bc714a8
#: ../../ref/contrib/comments/index.txt:40
msgid ""
"Use the `comment template tags`_ below to embed comments in your templates."
msgstr ""

# e50ace7eb8e146578ddf21078b85356e
#: ../../ref/contrib/comments/index.txt:43
msgid "You might also want to examine :doc:`/ref/contrib/comments/settings`."
msgstr ""

# 6c9225af8b6e4d25be4dc6c8bfaebbc8
#: ../../ref/contrib/comments/index.txt:46
msgid "Comment template tags"
msgstr ""

# 902b5f62cfa54af1bc56c21670a0f1bd
#: ../../ref/contrib/comments/index.txt:48
msgid ""
"You'll primarily interact with the comment system through a series of "
"template tags that let you embed comments and generate forms for your users "
"to post them."
msgstr ""

# fb373536e84a4a2682431f807bede508
#: ../../ref/contrib/comments/index.txt:51
msgid ""
"Like all custom template tag libraries, you'll need to :ref:`load the custom "
"tags <loading-custom-template-libraries>` before you can use them::"
msgstr ""

# 294d27da07a548578718ff44e7520f1a
#: ../../ref/contrib/comments/index.txt:56
msgid "Once loaded you can use the template tags below."
msgstr ""

# ed9707bf0f8c481eb5189c80c378d8cb
#: ../../ref/contrib/comments/index.txt:59
msgid "Specifying which object comments are attached to"
msgstr ""

# 456623c8ad874a789ac0f8f875f1af12
#: ../../ref/contrib/comments/index.txt:61
msgid ""
"Django's comments are all \"attached\" to some parent object. This can be "
"any instance of a Django model. Each of the tags below gives you a couple of "
"different ways you can specify which object to attach to:"
msgstr ""

# 34dc4c0bccb4439d952392c30a5dcd72
#: ../../ref/contrib/comments/index.txt:65
msgid ""
"Refer to the object directly -- the more common method. Most of the time, "
"you'll have some object in the template's context you want to attach the "
"comment to; you can simply use that object."
msgstr ""

# 0ae0958f869340299086c31777623164
#: ../../ref/contrib/comments/index.txt:69
msgid ""
"For example, in a blog entry page that has a variable named ``entry``, you "
"could use the following to load the number of comments::"
msgstr ""

# 6b9757a9bc5747fcb44f9211f6169ab1
#: ../../ref/contrib/comments/index.txt:74
msgid ""
"Refer to the object by content-type and object id. You'd use this method if "
"you, for some reason, don't actually have direct access to the object."
msgstr ""

# 460bdcf0879d44d2bb2644dc45bdcea0
#: ../../ref/contrib/comments/index.txt:77
msgid ""
"Following the above example, if you knew the object ID was ``14`` but didn't "
"have access to the actual object, you could do something like::"
msgstr ""

# 460939a2f5bd4ccab6b0ffedb19ed9d8
#: ../../ref/contrib/comments/index.txt:82
msgid ""
"In the above, ``blog.entry`` is the app label and (lower-cased) model name "
"of the model class."
msgstr ""

# bc60950c1c4340c89049a988c76f4903
#: ../../ref/contrib/comments/index.txt:86
msgid "Displaying comments"
msgstr ""

# 37d0b06884724963808bf3905959003a
#: ../../ref/contrib/comments/index.txt:88
msgid ""
"To display a list of comments, you can use the template tags :ttag:"
"`render_comment_list` or :ttag:`get_comment_list`."
msgstr ""

# f883c4695e244a81b4e17b59a841d3d5
#: ../../ref/contrib/comments/index.txt:94
msgid "Quickly rendering a comment list"
msgstr ""

# 7a117d9c8c5649a29eea9d37b11c0823
#: ../../ref/contrib/comments/index.txt:96
msgid ""
"The easiest way to display a list of comments for some object is by using :"
"ttag:`render_comment_list`::"
msgstr ""

# 728a482bd79a495a9cfb63129540b4a5
#: ../../ref/contrib/comments/index.txt:105
msgid ""
"This will render comments using a template named ``comments/list.html``, a "
"default version of which is included with Django."
msgstr ""

# 083bb7ea090345c6bc01b06ed783a8d3
#: ../../ref/contrib/comments/index.txt:111
msgid "Rendering a custom comment list"
msgstr ""

# 2a7dfd9fb8c94e05a8347857c37dcb6d
#: ../../ref/contrib/comments/index.txt:113
msgid ""
"To get the list of comments for some object, use :ttag:`get_comment_list`::"
msgstr ""

# 190da5061df2436fac0700fc6a5d53de
#: ../../ref/contrib/comments/index.txt:124
msgid ""
"This returns a list of :class:`~django.contrib.comments.models.Comment` "
"objects; see :doc:`the comment model documentation </ref/contrib/comments/"
"models>` for details."
msgstr ""

# 8f144aa6f57144c6a276b81310cfcf03
#: ../../ref/contrib/comments/index.txt:131
msgid "Linking to comments"
msgstr ""

# f3251a5bd6c6457fbdb8287cf6e1dabd
#: ../../ref/contrib/comments/index.txt:135
msgid ""
"To provide a permalink to a specific comment, use :ttag:"
"`get_comment_permalink`::"
msgstr ""

# f69d5384129b46e48a22a3706dff7106
#: ../../ref/contrib/comments/index.txt:139
msgid ""
"By default, the named anchor that will be appended to the URL will be the "
"letter 'c' followed by the comment id, for example 'c82'. You may specify a "
"custom format string if you wish to override this behavior::"
msgstr ""

# 3d02ede8ef64472dae1470fef1e6b467
#: ../../ref/contrib/comments/index.txt:145
msgid ""
"The format string is a standard python format string. Valid mapping keys "
"include any attributes of the comment object."
msgstr ""

# 7e3a5c3e574148a39b0d74b83c31a170
#: ../../ref/contrib/comments/index.txt:148
msgid ""
"Regardless of whether you specify a custom anchor pattern, you must supply a "
"matching named anchor at a suitable place in your template."
msgstr ""

# b16aaf85019242f7bf89b796d215a653
#: ../../ref/contrib/comments/index.txt:163
msgid ""
"There's a known bug in Safari/Webkit which causes the named anchor to be "
"forgotten following a redirect. The practical impact for comments is that "
"the Safari/webkit browsers will arrive at the correct page but will not "
"scroll to the named anchor."
msgstr ""

# 3e5e9540ffdb46858ea193f114f0d8c5
#: ../../ref/contrib/comments/index.txt:171
msgid "Counting comments"
msgstr ""

# cf26c0dfdc684af191fce8804bf30dbf
#: ../../ref/contrib/comments/index.txt:173
msgid ""
"To count comments attached to an object, use :ttag:`get_comment_count`::"
msgstr ""

# 13a73e50a1fc428ba3bb716393efbba7
#: ../../ref/contrib/comments/index.txt:185
msgid "Displaying the comment post form"
msgstr ""

# ac9360df797043319ece71fdefd10f7e
#: ../../ref/contrib/comments/index.txt:187
msgid ""
"To show the form that users will use to post a comment, you can use :ttag:"
"`render_comment_form` or :ttag:`get_comment_form`"
msgstr ""

# 31693826e3704d1f86b7aaf891228394
#: ../../ref/contrib/comments/index.txt:193
msgid "Quickly rendering the comment form"
msgstr ""

# f1ee1b24b10c42bea6f3e578976b8d8c
#: ../../ref/contrib/comments/index.txt:195
msgid ""
"The easiest way to display a comment form is by using :ttag:"
"`render_comment_form`::"
msgstr ""

# 53cc1502a9a4401ba0a9c94345096e51
#: ../../ref/contrib/comments/index.txt:204
msgid ""
"This will render comments using a template named ``comments/form.html``, a "
"default version of which is included with Django."
msgstr ""

# 44b0a1c0e08841408d25142137973573
#: ../../ref/contrib/comments/index.txt:210
msgid "Rendering a custom comment form"
msgstr ""

# a9ebac87ee3648e99c88320c43725e81
#: ../../ref/contrib/comments/index.txt:212
msgid ""
"If you want more control over the look and feel of the comment form, you use "
"use :ttag:`get_comment_form` to get a :doc:`form object </topics/forms/"
"index>` that you can use in the template::"
msgstr ""

# 3e7d2d2ad8ca4588adc54f6e576d26dc
#: ../../ref/contrib/comments/index.txt:218
msgid "A complete form might look like::"
msgstr ""

# 914068da11674a2e8f3b79de1a69c527
#: ../../ref/contrib/comments/index.txt:234
msgid ""
"Be sure to read the `notes on the comment form`_, below, for some special "
"considerations you'll need to make if you're using this approach."
msgstr ""

# cbbc28559a63485aadc9d87bcb1b4227
#: ../../ref/contrib/comments/index.txt:240
msgid "Getting the comment form target"
msgstr ""

# 14ba958aa6fc41829187075a3d200ab1
#: ../../ref/contrib/comments/index.txt:242
msgid ""
"You may have noticed that the above example uses another template tag -- :"
"ttag:`comment_form_target` -- to actually get the ``action`` attribute of "
"the form. This will always return the correct URL that comments should be "
"posted to; you'll always want to use it like above::"
msgstr ""

# 98077f30b2b049deb690ff8a7bc20568
#: ../../ref/contrib/comments/index.txt:250
msgid "Redirecting after the comment post"
msgstr ""

# c490c2d4144444b3be105e7edced3458
#: ../../ref/contrib/comments/index.txt:252
msgid ""
"To specify the URL you want to redirect to after the comment has been "
"posted, you can include a hidden form input called ``next`` in your comment "
"form. For example::"
msgstr ""

# ac2713856181498cbddc478cadfd498b
#: ../../ref/contrib/comments/index.txt:260
msgid "Notes on the comment form"
msgstr ""

# 0d9af0eed2d547f3813e3b9fa1324757
#: ../../ref/contrib/comments/index.txt:262
msgid ""
"The form used by the comment system has a few important anti-spam attributes "
"you should know about:"
msgstr ""

# 78f5bd9d67f04230921696752df00efd
#: ../../ref/contrib/comments/index.txt:265
msgid ""
"It contains a number of hidden fields that contain timestamps, information "
"about the object the comment should be attached to, and a \"security hash\" "
"used to validate this information. If someone tampers with this data -- "
"something comment spammers will try -- the comment submission will fail."
msgstr ""

# 58dd12c582ce4af2a4e8885173d2cb05
#: ../../ref/contrib/comments/index.txt:270
msgid ""
"If you're rendering a custom comment form, you'll need to make sure to pass "
"these values through unchanged."
msgstr ""

# 82f72f26db4048519726277e7308952e
#: ../../ref/contrib/comments/index.txt:273
msgid ""
"The timestamp is used to ensure that \"reply attacks\" can't continue very "
"long. Users who wait too long between requesting the form and posting a "
"comment will have their submissions refused."
msgstr ""

# bbbf086b961a4e4e9a2028fc3205b09f
#: ../../ref/contrib/comments/index.txt:277
msgid ""
"The comment form includes a \"honeypot_\" field. It's a trap: if any data is "
"entered in that field, the comment will be considered spam (spammers often "
"automatically fill in all fields in an attempt to make valid submissions)."
msgstr ""

# b04b9997ca4647fe9fd40b7dd488ee6e
#: ../../ref/contrib/comments/index.txt:281
msgid ""
"The default form hides this field with a piece of CSS and further labels it "
"with a warning field; if you use the comment form with a custom template you "
"should be sure to do the same."
msgstr ""

# 0f49d172da57437cbb7c528bd190db48
#: ../../ref/contrib/comments/index.txt:285
msgid ""
"The comments app also depends on the more general :doc:`Cross Site Request "
"Forgery protection </ref/contrib/csrf>` that comes with Django.  As "
"described in the documentation, it is best to use ``CsrfViewMiddleware``.  "
"However, if you are not using that, you will need to use the "
"``csrf_protect`` decorator on any views that include the comment form, in "
"order for those views to be able to output the CSRF token and cookie."
msgstr ""

# 4ef754a5657e4019b03bd5608bc15fb7
#: ../../ref/contrib/comments/index.txt:295
msgid "More information"
msgstr ""

# c64cc5e9c4b641c9b17ebe5283c4a213
#: ../../ref/contrib/comments/models.txt:3
msgid "The built-in comment models"
msgstr ""

# 021281c3e4a641389ca9a9f325c434b5
#: ../../ref/contrib/comments/models.txt:10
msgid "Django's built-in comment model. Has the following fields:"
msgstr ""

# eb2d330de4244bc0815ba8abc3cc549f
#: ../../ref/contrib/comments/models.txt:14
msgid ""
"A :class:`~django.contrib.contettypes.generic.GenericForeignKey` attribute "
"pointing to the object the comment is attached to. You can use this to get "
"at the related object (i.e. ``my_comment.content_object``)."
msgstr ""

# 6f72bfe4ed1745318db9a3fb5db025f6
#: ../../ref/contrib/comments/models.txt:18
msgid ""
"Since this field is a :class:`~django.contrib.contettypes.generic."
"GenericForeignKey`, it's actually syntactic sugar on top of two underlying "
"attributes, described below."
msgstr ""

# c88d7272801c44189dd8c514d6bcd3cf
#: ../../ref/contrib/comments/models.txt:25
msgid ""
"A :class:`~django.db.models.ForeignKey` to :class:`~django.contrib."
"contenttypes.models.ContentType`; this is the type of the object the comment "
"is attached to."
msgstr ""

# e9e29e89241f40a082ff408ffb08e701
#: ../../ref/contrib/comments/models.txt:31
msgid ""
"A :class:`~django.db.models.TextField` containing the primary key of the "
"object the comment is attached to."
msgstr ""

# fd59cc20a76e454bb467bd65764db54f
#: ../../ref/contrib/comments/models.txt:36
msgid ""
"A :class:`~django.db.models.ForeignKey` to the :class:`~django.contrib.sites."
"models.Site` on which the comment was posted."
msgstr ""

# b182f4102160450db331471ee3d6a2e7
#: ../../ref/contrib/comments/models.txt:42
msgid ""
"A :class:`~django.db.models.ForeignKey` to the :class:`~django.contrib.auth."
"models.User` who posted the comment. May be blank if the comment was posted "
"by an unauthenticated user."
msgstr ""

# 0b9c629d411b42f699ae7a84c1ed9a53
#: ../../ref/contrib/comments/models.txt:48
msgid "The name of the user who posted the comment."
msgstr ""

# 5c97b0583b424f8dbf61901624a40ae1
#: ../../ref/contrib/comments/models.txt:52
msgid "The email of the user who posted the comment."
msgstr ""

# 69d2f92daa734cd99d02f8597beaaec9
#: ../../ref/contrib/comments/models.txt:56
msgid "The URL entered by the person who posted the comment."
msgstr ""

# e13b859d54754cb1889741df64464026
#: ../../ref/contrib/comments/models.txt:60
msgid "The actual content of the comment itself."
msgstr ""

# 46805bed939244ab9806ee6268397caf
#: ../../ref/contrib/comments/models.txt:64
msgid "The date the comment was submitted."
msgstr ""

# 2f930997fe64484c8aead349bd1ff29a
#: ../../ref/contrib/comments/models.txt:68
msgid "The IP address of the user posting the comment."
msgstr ""

# c8518487d62f49a281ce3af2944ba077
#: ../../ref/contrib/comments/models.txt:72
msgid ""
"``False`` if the comment is in moderation (see :doc:`/ref/contrib/comments/"
"moderation`); If ``True``, the comment will be displayed on the site."
msgstr ""

# d0feaff4548e41bda07db686e1d2e6ed
#: ../../ref/contrib/comments/models.txt:78
msgid ""
"``True`` if the comment was removed. Used to keep track of removed comments "
"instead of just deleting them."
msgstr ""

# cd7f744644a7438487a02f5bc69a3b9d
#: ../../ref/contrib/comments/moderation.txt:3
msgid "Generic comment moderation"
msgstr ""

# dca7f5ffaab14f9fa79292b6352342d3
#: ../../ref/contrib/comments/moderation.txt:8
msgid ""
"Django's bundled comments application is extremely useful on its own, but "
"the amount of comment spam circulating on the Web today essentially makes it "
"necessary to have some sort of automatic moderation system in place for any "
"application which makes use of comments. To make this easier to handle in a "
"consistent fashion, ``django.contrib.comments.moderation`` provides a "
"generic, extensible comment-moderation system which can be applied to any "
"model or set of models which want to make use of Django's comment system."
msgstr ""

# 3593e2ceb0624c1ba53931bfa399331f
#: ../../ref/contrib/comments/moderation.txt:21
msgid ""
"The entire system is contained within ``django.contrib.comments."
"moderation``, and uses a two-step process to enable moderation for any given "
"model:"
msgstr ""

# f579b1aa9ed74ff1b5270fc8ac0cab59
#: ../../ref/contrib/comments/moderation.txt:24
msgid ""
"A subclass of :class:`CommentModerator` is defined which specifies the "
"moderation options the model wants to enable."
msgstr ""

# 0f71839264a1465b992d90c10634f0a5
#: ../../ref/contrib/comments/moderation.txt:28
msgid ""
"The model is registered with the moderation system, passing in the model "
"class and the class which specifies its moderation options."
msgstr ""

# 3675eee649c74b1da80a76e435597fcc
#: ../../ref/contrib/comments/moderation.txt:31
msgid ""
"A simple example is the best illustration of this. Suppose we have the "
"following model, which would represent entries in a Weblog::"
msgstr ""

# 4b26db35b3384a3fabdd8eaf55c31306
#: ../../ref/contrib/comments/moderation.txt:42
msgid ""
"Now, suppose that we want the following steps to be applied whenever a new "
"comment is posted on an ``Entry``:"
msgstr ""

# 2798200f4f7545bbbd1876e22f9af417
#: ../../ref/contrib/comments/moderation.txt:45
msgid ""
"If the ``Entry``'s ``enable_comments`` field is ``False``, the comment will "
"simply be disallowed (i.e., immediately deleted)."
msgstr ""

# b8dfffde622a46779fed2874f4f66966
#: ../../ref/contrib/comments/moderation.txt:48
msgid ""
"If the ``enable_comments`` field is ``True``, the comment will be allowed to "
"save."
msgstr ""

# c817e009c6ad4b2f975a61501a01a19c
#: ../../ref/contrib/comments/moderation.txt:51
msgid ""
"Once the comment is saved, an email should be sent to site staff notifying "
"them of the new comment."
msgstr ""

# 0401c9b2524b4dda983a1b8443ae238b
#: ../../ref/contrib/comments/moderation.txt:54
msgid ""
"Accomplishing this is fairly straightforward and requires very little code::"
msgstr ""

# 0bfeecbbd09a4a79b28fa7fdc941b821
#: ../../ref/contrib/comments/moderation.txt:65
msgid ""
"The :class:`CommentModerator` class pre-defines a number of useful "
"moderation options which subclasses can enable or disable as desired, and "
"``moderator`` knows how to work with them to determine whether to allow a "
"comment, whether to moderate a comment which will be allowed to post, and "
"whether to email notifications of new comments."
msgstr ""

# 7f4690b9ce7c4465a22f54e94d628f97
#: ../../ref/contrib/comments/moderation.txt:72
msgid "Built-in moderation options"
msgstr ""

# fe881155d5b04beca913dc68fb415c19
#: ../../ref/contrib/comments/moderation.txt:76
msgid ""
"Most common comment-moderation needs can be handled by subclassing :class:"
"`CommentModerator` and changing the values of pre-defined attributes; the "
"full range of built-in options is as follows."
msgstr ""

# 7e2060fb2bb04f97ab7f283ec73d79d7
#: ../../ref/contrib/comments/moderation.txt:83
msgid ""
"If this is set to the name of a :class:`~django.db.models.fields.DateField` "
"or :class:`~django.db.models.fields.DateTimeField` on the model for which "
"comments are being moderated, new comments for objects of that model will be "
"disallowed (immediately deleted) when a certain number of days have passed "
"after the date specified in that field. Must be used in conjunction with :"
"attr:`close_after`, which specifies the number of days past which comments "
"should be disallowed. Default value is ``None``."
msgstr ""

# 4555f58a6e004db3949e5c061fd47e34
#: ../../ref/contrib/comments/moderation.txt:95
msgid ""
"Like :attr:`auto_close_field`, but instead of outright deleting new comments "
"when the requisite number of days have elapsed, it will simply set the "
"``is_public`` field of new comments to ``False`` before saving them. Must be "
"used in conjunction with :attr:`moderate_after`, which specifies the number "
"of days past which comments should be moderated. Default value is ``None``."
msgstr ""

# 3e6a3667228940c4b20269af2e11680e
#: ../../ref/contrib/comments/moderation.txt:104
msgid ""
"If :attr:`auto_close_field` is used, this must specify the number of days "
"past the value of the field specified by :attr:`auto_close_field` after "
"which new comments for an object should be disallowed. Allowed values are "
"``None``, 0 (which disallows comments immediately), or any positive integer. "
"Default value is ``None``."
msgstr ""

# 0b8f8fd2ce614282806ed73e62620de7
#: ../../ref/contrib/comments/moderation.txt:113
msgid ""
"If ``True``, any new comment on an object of this model which survives "
"moderation (i.e., is not deleted) will generate an email to site staff. "
"Default value is ``False``."
msgstr ""

# 6092e598c7884e22b74f9a6dc82da050
#: ../../ref/contrib/comments/moderation.txt:119
msgid ""
"If this is set to the name of a :class:`~django.db.models.fields."
"BooleanField` on the model for which comments are being moderated, new "
"comments on objects of that model will be disallowed (immediately deleted) "
"whenever the value of that field is ``False`` on the object the comment "
"would be attached to. Default value is ``None``."
msgstr ""

# 9cfe1b47bfe244a7b08c4adb6653f515
#: ../../ref/contrib/comments/moderation.txt:128
msgid ""
"If :attr:`auto_moderate_field` is used, this must specify the number of days "
"past the value of the field specified by :attr:`auto_moderate_field` after "
"which new comments for an object should be marked non-public. Allowed values "
"are ``None``, 0 (which moderates comments immediately), or any positive "
"integer. Default value is ``None``."
msgstr ""

# 0800992d82064f699d19d98407671646
#: ../../ref/contrib/comments/moderation.txt:135
msgid ""
"Simply subclassing :class:`CommentModerator` and changing the values of "
"these options will automatically enable the various moderation methods for "
"any models registered using the subclass."
msgstr ""

# 241175b5724842e3acf35be1d4504c13
#: ../../ref/contrib/comments/moderation.txt:141
msgid "``moderate_after`` and ``close_after`` now accept 0 as a valid value."
msgstr ""

# 959879d0a2584022ac46cd8e04f1cd9f
#: ../../ref/contrib/comments/moderation.txt:144
msgid "Adding custom moderation methods"
msgstr ""

# 3823a388fd0240dab70433b1293650bb
#: ../../ref/contrib/comments/moderation.txt:146
msgid ""
"For situations where the built-in options listed above are not sufficient, "
"subclasses of :class:`CommentModerator` can also override the methods which "
"actually perform the moderation, and apply any logic they desire.  :class:"
"`CommentModerator` defines three methods which determine how moderation will "
"take place; each method will be called by the moderation system and passed "
"two arguments: ``comment``, which is the new comment being posted, "
"``content_object``, which is the object the comment will be attached to, and "
"``request``, which is the :class:`~django.http.HttpRequest` in which the "
"comment is being submitted:"
msgstr ""

# 6596ca7daa224f50bf6b75f5ba1b0713
#: ../../ref/contrib/comments/moderation.txt:158
msgid ""
"Should return ``True`` if the comment should be allowed to post on the "
"content object, and ``False`` otherwise (in which case the comment will be "
"immediately deleted)."
msgstr ""

# 7dc29cc84be44befb6187e4d011107c5
#: ../../ref/contrib/comments/moderation.txt:164
msgid ""
"If email notification of the new comment should be sent to site staff or "
"moderators, this method is responsible for sending the email."
msgstr ""

# 2cdcb5d045a043728b41b08c122ed79e
#: ../../ref/contrib/comments/moderation.txt:170
msgid ""
"Should return ``True`` if the comment should be moderated (in which case its "
"``is_public`` field will be set to ``False`` before saving), and ``False`` "
"otherwise (in which case the ``is_public`` field will not be changed)."
msgstr ""

# 221b4db31bf24278b4b397ced989d2fa
#: ../../ref/contrib/comments/moderation.txt:177
msgid "Registering models for moderation"
msgstr ""

# 086015e5b8b44c54805724ab47f4d226
#: ../../ref/contrib/comments/moderation.txt:179
msgid ""
"The moderation system, represented by ``django.contrib.comments.moderation."
"moderator`` is an instance of the class :class:`Moderator`, which allows "
"registration and \"unregistration\" of models via two methods:"
msgstr ""

# ac81be73b7494031b6e9354990777a2b
#: ../../ref/contrib/comments/moderation.txt:186
msgid ""
"Takes two arguments: the first should be either a model class or list of "
"model classes, and the second should be a subclass of ``CommentModerator``, "
"and register the model or models to be moderated using the options defined "
"in the ``CommentModerator`` subclass. If any of the models are already "
"registered for moderation, the exception :exc:`AlreadyModerated` will be "
"raised."
msgstr ""

# 506811a4e5054a5682631b293c2a07b7
#: ../../ref/contrib/comments/moderation.txt:196
msgid ""
"Takes one argument: a model class or list of model classes, and removes the "
"model or models from the set of models which are being moderated. If any of "
"the models are not currently being moderated, the exception :exc:"
"`NotModerated` will be raised."
msgstr ""

# e01a946fd1684717be3031c1d03d7094
#: ../../ref/contrib/comments/moderation.txt:204
msgid "Customizing the moderation system"
msgstr ""

# fcb8530410ff4dbf908f67b5a2abab7f
#: ../../ref/contrib/comments/moderation.txt:206
msgid ""
"Most use cases will work easily with simple subclassing of :class:"
"`CommentModerator` and registration with the provided :class:`Moderator` "
"instance, but customization of global moderation behavior can be achieved by "
"subclassing :class:`Moderator` and instead registering models with an "
"instance of the subclass."
msgstr ""

# 16860c1aefc040d6b579400a55b83e78
#: ../../ref/contrib/comments/moderation.txt:214
msgid ""
"In addition to the :meth:`Moderator.register` and :meth:`Moderator."
"unregister` methods detailed above, the following methods on :class:"
"`Moderator` can be overridden to achieve customized behavior:"
msgstr ""

# 13e32d059fe6401a87f031b767f96371
#: ../../ref/contrib/comments/moderation.txt:220
msgid ""
"Determines how moderation is set up globally. The base implementation in :"
"class:`Moderator` does this by attaching listeners to the :data:`~django."
"contrib.comments.signals.comment_will_be_posted` and :data:`~django.contrib."
"comments.signals.comment_was_posted` signals from the comment models."
msgstr ""

# 42fe8d6f14424a44b1c76a753697be75
#: ../../ref/contrib/comments/moderation.txt:229
msgid ""
"In the base implementation, applies all pre-save moderation steps (such as "
"determining whether the comment needs to be deleted, or whether it needs to "
"be marked as non-public or generate an email)."
msgstr ""

# 03e810a86e214a74b538279b65076154
#: ../../ref/contrib/comments/moderation.txt:236
msgid ""
"In the base implementation, applies all post-save moderation steps "
"(currently this consists entirely of deleting comments which were "
"disallowed)."
msgstr ""

# 1432613f85344dbca4dec4f7a61256a9
#: ../../ref/contrib/comments/settings.txt:3
msgid "Comment settings"
msgstr ""

# 8772e775424a401182036939024a41f8
#: ../../ref/contrib/comments/settings.txt:5
msgid "These settings configure the behavior of the comments framework:"
msgstr ""

# 604c5cea4e574b91a4688759b25baead
#: ../../ref/contrib/comments/settings.txt:10
msgid "COMMENTS_HIDE_REMOVED"
msgstr ""

# 81a382706633471b9b913f77cb5aeef7
#: ../../ref/contrib/comments/settings.txt:12
msgid ""
"If ``True`` (default), removed comments will be excluded from comment lists/"
"counts (as taken from template tags). Otherwise, the template author is "
"responsible for some sort of a \"this comment has been removed by the site "
"staff\" message."
msgstr ""

# 282da4680fda470984d9923fabfab2cd
#: ../../ref/contrib/comments/settings.txt:20
msgid "COMMENT_MAX_LENGTH"
msgstr ""

# 2cfed6e28c51485496e3f13823ccccab
#: ../../ref/contrib/comments/settings.txt:22
msgid ""
"The maximum length of the comment field, in characters. Comments longer than "
"this will be rejected. Defaults to 3000."
msgstr ""

# 2afb6d7da39245b3af83161d541adcc3
#: ../../ref/contrib/comments/settings.txt:28
msgid "COMMENTS_APP"
msgstr ""

# 0c102755394f42f3b98780f2f19ce43e
#: ../../ref/contrib/comments/settings.txt:30
msgid ""
"An app which provides :doc:`customization of the comments framework </ref/"
"contrib/comments/custom>`.  Use the same dotted-string notation as in :"
"setting:`INSTALLED_APPS`.  Your custom :setting:`COMMENTS_APP` must also be "
"listed in :setting:`INSTALLED_APPS`."
msgstr ""

# 334453ba7df14facb146b0056e06f10f
#: ../../ref/contrib/comments/signals.txt:3
msgid "Signals sent by the comments app"
msgstr ""

# 000dece6984a43ccaf0b163cd1162ee9
#: ../../ref/contrib/comments/signals.txt:8
msgid ""
"The comment app sends a series of :doc:`signals </topics/signals>` to allow "
"for comment moderation and similar activities. See :doc:`the introduction to "
"signals </topics/signals>` for information about how to register for and "
"receive these signals."
msgstr ""

# 184a06e0575e4ec78eca06f44e6106b7
#: ../../ref/contrib/comments/signals.txt:14
msgid "comment_will_be_posted"
msgstr ""

# bf56e0efc70b458dbdfd913c7b2e7eef
#: ../../ref/contrib/comments/signals.txt:19
msgid ""
"Sent just before a comment will be saved, after it's been sanity checked and "
"submitted. This can be used to modify the comment (in place) with posting "
"details or other such actions."
msgstr ""

# ae19d1890b0c4e7694cea994410ce372
#: ../../ref/contrib/comments/signals.txt:23
msgid ""
"If any receiver returns ``False`` the comment will be discarded and a 403 "
"(not allowed) response will be returned."
msgstr ""

# 145d794efa044423bf20ba651910dd4b
#: ../../ref/contrib/comments/signals.txt:26
msgid ""
"This signal is sent at more or less the same time (just before, actually) as "
"the ``Comment`` object's :data:`~django.db.models.signals.pre_save` signal."
msgstr ""

# 32885825cc4841ffbeeddd97d360bb0a
# 8535860e6bb7481796a88af343a36f54
# 1f27be34e2244d24b46a24fcc98bb87e
# de5b6fe13287454486c55914ea6bc755
# cb7ffd042e954603a46f97691ef083e7
# 252e1d6dab7e4f35b488b11a0e6eefe2
# d89fdbc3ce224aec87f7f70ba8eed0a3
# 45f904af645a43969f98f1c7c67fedfc
# d0eebf894463455e8ac307f8feaaac59
# 6615e0f862244740a7a1912d9a97a1c4
# bbdd2334754f4897a07a4ab650be8853
# b86b83265dad479c9fc91f5aefbe7e3b
# 03379d18201d416dadcb43db3db6f9b6
# 117fec43f6994e0a9828e0a986f9f43e
# 6bafb954073a407c8ed8a53ceb5acc17
# a4adb470d166458793b55effdd06be9d
# 9c3ad333048f4b2bb4fa424c50686f5f
#: ../../ref/contrib/comments/signals.txt:29
#: ../../ref/contrib/comments/signals.txt:50
#: ../../ref/contrib/comments/signals.txt:73 ../../ref/signals.txt:52
#: ../../ref/signals.txt:90 ../../ref/signals.txt:107
#: ../../ref/signals.txt:135 ../../ref/signals.txt:166
#: ../../ref/signals.txt:189 ../../ref/signals.txt:219
#: ../../ref/signals.txt:372 ../../ref/signals.txt:428
#: ../../ref/signals.txt:443 ../../ref/signals.txt:456
#: ../../ref/signals.txt:484 ../../ref/signals.txt:504
#: ../../ref/signals.txt:538
msgid "Arguments sent with this signal:"
msgstr ""

# 8b7efe395a254c2594a3217b49a187a7
# 6b17b3341b294886918bef1fb89ad761
# f7c76627114e4da49df95ce53eb8c581
#: ../../ref/contrib/comments/signals.txt:32
#: ../../ref/contrib/comments/signals.txt:53
#: ../../ref/contrib/comments/signals.txt:76
msgid "The comment model."
msgstr ""

# 3c12bcf411c94fb5bf59753f4ac302d2
#: ../../ref/contrib/comments/signals.txt:35
msgid ""
"The comment instance about to be posted. Note that it won't have been saved "
"into the database yet, so it won't have a primary key, and any relations "
"might not work correctly yet."
msgstr ""

# c8e395d35d864da8bd910a2add3190d6
# b834574a2a47444683fbfd0dae4dc1bd
# 117b61c2e5ce4b988b5a38c7b507ca77
#: ../../ref/contrib/comments/signals.txt:40
#: ../../ref/contrib/comments/signals.txt:61
#: ../../ref/contrib/comments/signals.txt:91
msgid "The :class:`~django.http.HttpRequest` that posted the comment."
msgstr ""

# b3375d26214b49a98709754d45ca9bac
#: ../../ref/contrib/comments/signals.txt:43
msgid "comment_was_posted"
msgstr ""

# a760c1cfc00442f0907b3bf51a9b8de1
#: ../../ref/contrib/comments/signals.txt:48
msgid "Sent just after the comment is saved."
msgstr ""

# 451dd11097bb4adfadfc7dc4fabac122
# c02854e21f9b433bb705b1c0d6cefbc8
#: ../../ref/contrib/comments/signals.txt:56
#: ../../ref/contrib/comments/signals.txt:79
msgid ""
"The comment instance that was posted. Note that it will have already been "
"saved, so if you modify it you'll need to call :meth:`~django.db.models."
"Model.save` again."
msgstr ""

# 4425df707e5b4ab1ae040805ff9c9eef
#: ../../ref/contrib/comments/signals.txt:64
msgid "comment_was_flagged"
msgstr ""

# 2b39c462e7334dc8bd1157423979d0e9
#: ../../ref/contrib/comments/signals.txt:69
msgid ""
"Sent after a comment was \"flagged\" in some way. Check the flag to see if "
"this was a user requesting removal of a comment, a moderator approving/"
"removing a comment, or some other custom user flag."
msgstr ""

# 7736d930191241ffb522965324061c6a
#: ../../ref/contrib/comments/signals.txt:84
msgid ""
"The :class:`~django.contrib.comments.models.CommentFlag` that's been "
"attached to the comment."
msgstr ""

# dcb2e0da5ad24cf8bbb3c8d58b09168e
#: ../../ref/contrib/comments/signals.txt:88
msgid "``True`` if this is a new flag; ``False`` if it's a duplicate flag."
msgstr ""

# d54fbccf1df245a38c123d10849b0114
#: ../../ref/contrib/comments/upgrade.txt:3
msgid "Upgrading from Django's previous comment system"
msgstr ""

# 2b1a9bfea4dc4fe2b9e9400384d3a828
#: ../../ref/contrib/comments/upgrade.txt:5
msgid ""
"Prior versions of Django included an outdated, undocumented comment system. "
"Users who reverse-engineered this framework will need to upgrade to use the "
"new comment system; this guide explains how."
msgstr ""

# 0e30b2ed637045a2b0480cb664d64acf
#: ../../ref/contrib/comments/upgrade.txt:8
msgid "The main changes from the old system are:"
msgstr ""

# 815c49013b4846758a500274e396a075
#: ../../ref/contrib/comments/upgrade.txt:10
msgid "This new system is documented."
msgstr ""

# 42f9fd20749d423889863efe8a7ecbab
#: ../../ref/contrib/comments/upgrade.txt:12
msgid ""
"It uses modern Django features like :doc:`forms </topics/forms/index>` and :"
"doc:`modelforms </topics/forms/modelforms>`."
msgstr ""

# ff90c939a55442de9c7b74ac1c81e2b0
#: ../../ref/contrib/comments/upgrade.txt:15
msgid ""
"It has a single ``Comment`` model instead of separate ``FreeComment`` and "
"``Comment`` models."
msgstr ""

# 32e7596964af48d9860f5b881d269db4
#: ../../ref/contrib/comments/upgrade.txt:18
msgid "Comments have \"email\" and \"URL\" fields."
msgstr ""

# 992bdad08d224906818e345a9943c50d
#: ../../ref/contrib/comments/upgrade.txt:20
msgid "No ratings, photos and karma. This should only effect World Online."
msgstr ""

# 78fa5df9b6234be898dda757e9f90423
#: ../../ref/contrib/comments/upgrade.txt:22
msgid ""
"The ``{% comment_form %}`` tag no longer exists. Instead, there's now two "
"functions: ``{% get_comment_form %}``, which returns a form for posting a "
"new comment, and ``{% render_comment_form %}``, which renders said form "
"using the ``comments/form.html`` template."
msgstr ""

# cf7528c5b5d9493ab9655d3ad427a895
#: ../../ref/contrib/comments/upgrade.txt:27
msgid ""
"The way comments are include in your URLconf have changed; you'll need to "
"replace::"
msgstr ""

# 239fc5f5456a49f985a94cf0938f9a83
#: ../../ref/contrib/comments/upgrade.txt:32
msgid "with::"
msgstr ""

# 81de5c5cdfcf47c08b20330b16b65b8a
#: ../../ref/contrib/comments/upgrade.txt:37
msgid "Upgrading data"
msgstr ""

# 347eab8aa7a74c0b939e1b03bdcbe43e
#: ../../ref/contrib/comments/upgrade.txt:39
msgid ""
"The data models for Django's comment system have changed, as have the table "
"names. Before you transfer your existing data into the new comments system, "
"make sure that you have installed the new comments system as explained in "
"the :doc:`quick start guide </ref/contrib/comments/index>`. This will ensure "
"that the new tables have been properly created."
msgstr ""

# 4aca694d216541ef95a343c1233e9156
#: ../../ref/contrib/comments/upgrade.txt:46
msgid ""
"To transfer your data into the new comments system, you'll need to directly "
"run the following SQL:"
msgstr ""

# c8d7c0b8b5b8447eb168dca4770b1555
#: ../../ref/contrib/contenttypes.txt:3
msgid "The contenttypes framework"
msgstr ""

# 02e7172784fe495496aa1a99da32aceb
#: ../../ref/contrib/contenttypes.txt:8
msgid ""
"Django includes a :mod:`~django.contrib.contenttypes` application that can "
"track all of the models installed in your Django-powered project, providing "
"a high-level, generic interface for working with your models."
msgstr ""

# 8389ea099749445db658b293168cd0cb
#: ../../ref/contrib/contenttypes.txt:15
msgid ""
"At the heart of the contenttypes application is the :class:`~django.contrib."
"contenttypes.models.ContentType` model, which lives at ``django.contrib."
"contenttypes.models.ContentType``. Instances of :class:`~django.contrib."
"contenttypes.models.ContentType` represent and store information about the "
"models installed in your project, and new instances of :class:`~django."
"contrib.contenttypes.models.ContentType` are automatically created whenever "
"new models are installed."
msgstr ""

# 99322811caec472fbc16d3b5de89017c
#: ../../ref/contrib/contenttypes.txt:23
msgid ""
"Instances of :class:`~django.contrib.contenttypes.models.ContentType` have "
"methods for returning the model classes they represent and for querying "
"objects from those models. :class:`~django.contrib.contenttypes.models."
"ContentType` also has a :ref:`custom manager <custom-managers>` that adds "
"methods for working with :class:`~django.contrib.contenttypes.models."
"ContentType` and for obtaining instances of :class:`~django.contrib."
"contenttypes.models.ContentType` for a particular model."
msgstr ""

# 1cb5962973a44e5c9084188720b56a37
#: ../../ref/contrib/contenttypes.txt:31
msgid ""
"Relations between your models and :class:`~django.contrib.contenttypes."
"models.ContentType` can also be used to enable \"generic\" relationships "
"between an instance of one of your models and instances of any model you "
"have installed."
msgstr ""

# 08c7ac6d47604929833e2818efb32e0e
#: ../../ref/contrib/contenttypes.txt:37
msgid "Installing the contenttypes framework"
msgstr ""

# 92f7b63dabd14692bbaad94c5780a7f2
#: ../../ref/contrib/contenttypes.txt:39
msgid ""
"The contenttypes framework is included in the default :setting:"
"`INSTALLED_APPS` list created by ``django-admin.py startproject``, but if "
"you've removed it or if you manually set up your :setting:`INSTALLED_APPS` "
"list, you can enable it by adding ``'django.contrib.contenttypes'`` to your :"
"setting:`INSTALLED_APPS` setting."
msgstr ""

# 6ae9a1051c354f66894e2754af4923e3
#: ../../ref/contrib/contenttypes.txt:45
msgid ""
"It's generally a good idea to have the contenttypes framework installed; "
"several of Django's other bundled applications require it:"
msgstr ""

# be44813590f64651b5a3dce5d7fed5d1
#: ../../ref/contrib/contenttypes.txt:48
msgid ""
"The admin application uses it to log the history of each object added or "
"changed through the admin interface."
msgstr ""

# 605e3df60f304dfe941e187cb4f2c9c4
#: ../../ref/contrib/contenttypes.txt:51
msgid ""
"Django's :mod:`authentication framework <django.contrib.auth>` uses it to "
"tie user permissions to specific models."
msgstr ""

# 12ca400fa3cb4271abbbbeebbc19a8de
#: ../../ref/contrib/contenttypes.txt:54
msgid ""
"Django's comments system (:mod:`django.contrib.comments`) uses it to \"attach"
"\" comments to any installed model."
msgstr ""

# c23d355677214754b394dd2bf24e5c11
#: ../../ref/contrib/contenttypes.txt:60
msgid "The ``ContentType`` model"
msgstr ""

# 93b385d2f1fa4035b2ef8570b1f88ee9
#: ../../ref/contrib/contenttypes.txt:64
msgid ""
"Each instance of :class:`~django.contrib.contenttypes.models.ContentType` "
"has three fields which, taken together, uniquely describe an installed model:"
msgstr ""

# 7dee6d899c5146cc95cc3feae0d7556c
#: ../../ref/contrib/contenttypes.txt:70
msgid ""
"The name of the application the model is part of. This is taken from the :"
"attr:`app_label` attribute of the model, and includes only the *last* part "
"of the application's Python import path; \"django.contrib.contenttypes\", "
"for example, becomes an :attr:`app_label` of \"contenttypes\"."
msgstr ""

# 501b5039852c44949f4fb3c17e57d17b
#: ../../ref/contrib/contenttypes.txt:78
msgid "The name of the model class."
msgstr ""

# 9a362377fd694789a9a88d887e90ce3c
#: ../../ref/contrib/contenttypes.txt:82
msgid ""
"The human-readable name of the model. This is taken from the :attr:"
"`verbose_name <django.db.models.Field.verbose_name>` attribute of the model."
msgstr ""

# 562b5b56903c436fb9bda95601c245e2
#: ../../ref/contrib/contenttypes.txt:86
msgid ""
"Let's look at an example to see how this works. If you already have the :mod:"
"`~django.contrib.contenttypes` application installed, and then add :mod:`the "
"sites application <django.contrib.sites>` to your :setting:`INSTALLED_APPS` "
"setting and run ``manage.py syncdb`` to install it, the model :class:`django."
"contrib.sites.models.Site` will be installed into your database. Along with "
"it a new instance of :class:`~django.contrib.contenttypes.models."
"ContentType` will be created with the following values:"
msgstr ""

# b3613cad353a4887ac60a381d0e8876d
#: ../../ref/contrib/contenttypes.txt:95
msgid ""
":attr:`~django.contrib.contenttypes.models.ContentType.app_label` will be "
"set to ``'sites'`` (the last part of the Python path \"django.contrib.sites"
"\")."
msgstr ""

# 096d37702f5a4b70a97f84a9c632b623
#: ../../ref/contrib/contenttypes.txt:99
msgid ""
":attr:`~django.contrib.contenttypes.models.ContentType.model` will be set to "
"``'site'``."
msgstr ""

# 24d2783a23464318b0200fc546849c8c
#: ../../ref/contrib/contenttypes.txt:102
msgid ""
":attr:`~django.contrib.contenttypes.models.ContentType.name` will be set to "
"``'site'``."
msgstr ""

# 66a7a7a4c1394918a4b0d60a3d8286d2
#: ../../ref/contrib/contenttypes.txt:108
msgid "Methods on ``ContentType`` instances"
msgstr ""

# e6cc081dcbdb432db49fe94adab141bc
#: ../../ref/contrib/contenttypes.txt:110
msgid ""
"Each :class:`~django.contrib.contenttypes.models.ContentType` instance has "
"methods that allow you to get from a :class:`~django.contrib.contenttypes."
"models.ContentType` instance to the model it represents, or to retrieve "
"objects from that model:"
msgstr ""

# 3fafe6a85b18450d93492170c6483354
#: ../../ref/contrib/contenttypes.txt:117
msgid ""
"Takes a set of valid :ref:`lookup arguments <field-lookups-intro>` for the "
"model the :class:`~django.contrib.contenttypes.models.ContentType` "
"represents, and does :meth:`a get() lookup <django.db.models.query.QuerySet."
"get>` on that model, returning the corresponding object."
msgstr ""

# 03efc2aa8e7f454c8ec7217cd26bc056
#: ../../ref/contrib/contenttypes.txt:125
msgid ""
"Returns the model class represented by this :class:`~django.contrib."
"contenttypes.models.ContentType` instance."
msgstr ""

# ba00ff2b9da3465f927e79b95545bf70
#: ../../ref/contrib/contenttypes.txt:128
msgid ""
"For example, we could look up the :class:`~django.contrib.contenttypes."
"models.ContentType` for the :class:`~django.contrib.auth.models.User` model::"
msgstr ""

# 2874ecd2a7864147a8b0d19d03bdb752
#: ../../ref/contrib/contenttypes.txt:137
msgid ""
"And then use it to query for a particular :class:`~django.contrib.auth."
"models.User`, or to get access to the ``User`` model class::"
msgstr ""

# a1f587c39e854ad0ba525dce55a31f05
#: ../../ref/contrib/contenttypes.txt:146
msgid ""
"Together, :meth:`~django.contrib.contenttypes.models.ContentType."
"get_object_for_this_type` and :meth:`~django.contrib.contenttypes.models."
"ContentType.model_class` enable two extremely important use cases:"
msgstr ""

# 771b03bcc48e43fd811eaf11a6843a0a
#: ../../ref/contrib/contenttypes.txt:151
msgid ""
"Using these methods, you can write high-level generic code that performs "
"queries on any installed model -- instead of importing and using a single "
"specific model class, you can pass an ``app_label`` and ``model`` into a :"
"class:`~django.contrib.contenttypes.models.ContentType` lookup at runtime, "
"and then work with the model class or retrieve objects from it."
msgstr ""

# a98cbedbd5fd428ab90b70a626853952
#: ../../ref/contrib/contenttypes.txt:158
msgid ""
"You can relate another model to :class:`~django.contrib.contenttypes.models."
"ContentType` as a way of tying instances of it to particular model classes, "
"and use these methods to get access to those model classes."
msgstr ""

# 71ff860b844c4585b14c193ea5d1ec04
#: ../../ref/contrib/contenttypes.txt:163
msgid ""
"Several of Django's bundled applications make use of the latter technique. "
"For example, :class:`the permissions system <django.contrib.auth.models."
"Permission>` in Django's authentication framework uses a :class:`~django."
"contrib.auth.models.Permission` model with a foreign key to :class:`~django."
"contrib.contenttypes.models.ContentType`; this lets :class:`~django.contrib."
"auth.models.Permission` represent concepts like \"can add blog entry\" or "
"\"can delete news story\"."
msgstr ""

# 46587a16e6b9413fa1f8486e44d543ea
#: ../../ref/contrib/contenttypes.txt:173
msgid "The ``ContentTypeManager``"
msgstr ""

# 102e543384de48e58a09274c569f8c55
#: ../../ref/contrib/contenttypes.txt:177
msgid ""
":class:`~django.contrib.contenttypes.models.ContentType` also has a custom "
"manager, :class:`~django.contrib.contenttypes.models.ContentTypeManager`, "
"which adds the following methods:"
msgstr ""

# efaae94e7d1248efb459e6f054c1a62e
#: ../../ref/contrib/contenttypes.txt:183
msgid ""
"Clears an internal cache used by :class:`~django.contrib.contenttypes.models."
"ContentType` to keep track of which models for which it has created :class:"
"`~django.contrib.contenttypes.models.ContentType` instances. You probably "
"won't ever need to call this method yourself; Django will call it "
"automatically when it's needed."
msgstr ""

# 8ac8498e5dbe4b03b4a2dcd4bf3b9bbe
#: ../../ref/contrib/contenttypes.txt:192
msgid ""
"Takes either a model class or an instance of a model, and returns the :class:"
"`~django.contrib.contenttypes.models.ContentType` instance representing that "
"model."
msgstr ""

# ade5bc3faf354d91a99347babb4219cf
#: ../../ref/contrib/contenttypes.txt:198
msgid ""
"Takes a variadic number of model classes, and returns a dictionary mapping "
"the model classes to the :class:`~django.contrib.contenttypes.models."
"ContentType` instances representing them."
msgstr ""

# 2dfd281f8b2543dd8bf62615e1ab95c0
#: ../../ref/contrib/contenttypes.txt:205
msgid ""
"Returns the :class:`~django.contrib.contenttypes.models.ContentType` "
"instance uniquely identified by the given application label and model name. "
"The primary purpose of this method is to allow :class:`~django.contrib."
"contenttypes.models.ContentType` objects to be referenced via a :ref:"
"`natural key<topics-serialization-natural-keys>` during deserialization."
msgstr ""

# 19deab8e57ca4169b6af0fe9f2cf4e28
#: ../../ref/contrib/contenttypes.txt:212
msgid ""
"The :meth:`~ContentTypeManager.get_for_model()` method is especially useful "
"when you know you need to work with a :class:`ContentType <django.contrib."
"contenttypes.models.ContentType>` but don't want to go to the trouble of "
"obtaining the model's metadata to perform a manual lookup::"
msgstr ""

# 256cf179ef1e4ab7b4d22215323254d6
#: ../../ref/contrib/contenttypes.txt:228
msgid "Generic relations"
msgstr ""

# 164c1d1a86374d3984d8f8078252b8cf
#: ../../ref/contrib/contenttypes.txt:230
msgid ""
"Adding a foreign key from one of your own models to :class:`~django.contrib."
"contenttypes.models.ContentType` allows your model to effectively tie itself "
"to another model class, as in the example of the :class:`~django.contrib."
"auth.models.Permission` model above. But it's possible to go one step "
"further and use :class:`~django.contrib.contenttypes.models.ContentType` to "
"enable truly generic (sometimes called \"polymorphic\") relationships "
"between models."
msgstr ""

# f6203480f5074b05bd44a9ebc6535d12
#: ../../ref/contrib/contenttypes.txt:238
msgid "A simple example is a tagging system, which might look like this::"
msgstr ""

# 004594ec63694c549076142956d86a70
#: ../../ref/contrib/contenttypes.txt:253
msgid ""
"A normal :class:`~django.db.models.ForeignKey` can only \"point to\" one "
"other model, which means that if the ``TaggedItem`` model used a :class:"
"`~django.db.models.ForeignKey` it would have to choose one and only one "
"model to store tags for. The contenttypes application provides a special "
"field type which works around this and allows the relationship to be with "
"any model:"
msgstr ""

# 7d2f258736a044e9a9f9dd59399e9b54
#: ../../ref/contrib/contenttypes.txt:263
msgid ""
"There are three parts to setting up a :class:`~django.contrib.contenttypes."
"generic.GenericForeignKey`:"
msgstr ""

# 858dd885d51543e783bf43dc825b7c91
#: ../../ref/contrib/contenttypes.txt:266
msgid ""
"Give your model a :class:`~django.db.models.ForeignKey` to :class:`~django."
"contrib.contenttypes.models.ContentType`."
msgstr ""

# 3702ae4284bc4850866fc800dcc9fb38
#: ../../ref/contrib/contenttypes.txt:269
msgid ""
"Give your model a field that can store primary key values from the models "
"you'll be relating to. For most models, this means a :class:`~django.db."
"models.PositiveIntegerField`. The usual name for this field is \"object_id\"."
msgstr ""

# e6134ecf69364b478f411db1c8753f41
#: ../../ref/contrib/contenttypes.txt:274
msgid ""
"Give your model a :class:`~django.contrib.contenttypes.generic."
"GenericForeignKey`, and pass it the names of the two fields described above. "
"If these fields are named \"content_type\" and \"object_id\", you can omit "
"this -- those are the default field names :class:`~django.contrib."
"contenttypes.generic.GenericForeignKey` will look for."
msgstr ""

# d907d903e0164ee4b481f438f7458413
#: ../../ref/contrib/contenttypes.txt:284
msgid ""
"The \"object_id\" field doesn't have to be the same type as the primary key "
"fields on the related models, but their primary key values must be coercible "
"to the same type as the \"object_id\" field by its :meth:`~django.db.models."
"Field.get_db_prep_value` method."
msgstr ""

# b2bb9943c0d94470ba263e9acff85c9b
#: ../../ref/contrib/contenttypes.txt:289
msgid ""
"For example, if you want to allow generic relations to models with either :"
"class:`~django.db.models.IntegerField` or :class:`~django.db.models."
"CharField` primary key fields, you can use :class:`~django.db.models."
"CharField` for the \"object_id\" field on your model since integers can be "
"coerced to strings by :meth:`~django.db.models.Field.get_db_prep_value`."
msgstr ""

# 11fab3370e634587a7bafd6dc19d4f07
#: ../../ref/contrib/contenttypes.txt:296
msgid ""
"For maximum flexibility you can use a :class:`~django.db.models.TextField` "
"which doesn't have a maximum length defined, however this may incur "
"significant performance penalties depending on your database backend."
msgstr ""

# e3ae48e7325f4ca28fb1897b65a5dd73
#: ../../ref/contrib/contenttypes.txt:301
msgid ""
"There is no one-size-fits-all solution for which field type is best. You "
"should evaluate the models you expect to be pointing to and determine which "
"solution will be most effective for your use case."
msgstr ""

# 5f07e27de7a349169ad102a68b7dfb3d
#: ../../ref/contrib/contenttypes.txt:307
msgid ""
"If you're serializing data (for example, when generating :class:`~django."
"test.TestCase.fixtures`) from a model that implements generic relations, you "
"should probably be using a natural key to uniquely identify related :class:"
"`~django.contrib.contenttypes.models.ContentType` objects. See :ref:`natural "
"keys<topics-serialization-natural-keys>` and :djadminopt:`dumpdata --natural "
"<--natural>` for more information."
msgstr ""

# e8751826685043f7a24c4c51f3a16c36
#: ../../ref/contrib/contenttypes.txt:314
msgid ""
"This will enable an API similar to the one used for a normal :class:`~django."
"db.models.ForeignKey`; each ``TaggedItem`` will have a ``content_object`` "
"field that returns the object it's related to, and you can also assign to "
"that field or use it when creating a ``TaggedItem``::"
msgstr ""

# 0826419c9bf54363ad23e0afbb0f3788
#: ../../ref/contrib/contenttypes.txt:327
msgid ""
"Due to the way :class:`~django.contrib.contenttypes.generic."
"GenericForeignKey` is implemented, you cannot use such fields directly with "
"filters (``filter()`` and ``exclude()``, for example) via the database API. "
"Because a :class:`~django.contrib.contenttypes.generic.GenericForeignKey` "
"isn't a normal field objects, these examples will *not* work::"
msgstr ""

# b2c8ccc7be5e49eabe9dfdd51cab51ed
#: ../../ref/contrib/contenttypes.txt:339
msgid "Reverse generic relations"
msgstr ""

# 6ba03c0d9b6d465b82e53b4d2e4f5b02
#: ../../ref/contrib/contenttypes.txt:343
msgid ""
"If you know which models you'll be using most often, you can also add a "
"\"reverse\" generic relationship to enable an additional API. For example::"
msgstr ""

# 8a58c9e6e08f44beac6a4098701961d9
#: ../../ref/contrib/contenttypes.txt:350
msgid ""
"``Bookmark`` instances will each have a ``tags`` attribute, which can be "
"used to retrieve their associated ``TaggedItems``::"
msgstr ""

# f1f2c1c5f7f64d9b9133c1e6b691b775
#: ../../ref/contrib/contenttypes.txt:362
msgid ""
"Just as :class:`~django.contrib.contenttypes.generic.GenericForeignKey` "
"accepts the names of the content-type and object-ID fields as arguments, so "
"too does :class:`~django.contrib.contenttypes.generic.GenericRelation`; if "
"the model which has the generic foreign key is using non-default names for "
"those fields, you must pass the names of the fields when setting up a :class:"
"`.GenericRelation` to it. For example, if the ``TaggedItem`` model referred "
"to above used fields named ``content_type_fk`` and ``object_primary_key`` to "
"create its generic foreign key, then a :class:`.GenericRelation` back to it "
"would need to be defined like so::"
msgstr ""

# 055942c51485472c8fff532c657752d2
#: ../../ref/contrib/contenttypes.txt:377
msgid ""
"Of course, if you don't add the reverse relationship, you can do the same "
"types of lookups manually::"
msgstr ""

# de3556cda70249a0ac1bc8d135eb0d19
#: ../../ref/contrib/contenttypes.txt:386
msgid ""
"Note that if the model in a :class:`~django.contrib.contenttypes.generic."
"GenericRelation` uses a non-default value for ``ct_field`` or ``fk_field`` "
"in its :class:`~django.contrib.contenttypes.generic.GenericForeignKey` (e.g. "
"the :mod:`django.contrib.comments` app uses ``ct_field=\"object_pk\"``), "
"you'll need to set ``content_type_field`` and/or ``object_id_field`` in the :"
"class:`~django.contrib.contenttypes.generic.GenericRelation` to match the "
"``ct_field`` and ``fk_field``, respectively, in the :class:`~django.contrib."
"contenttypes.generic.GenericForeignKey`::"
msgstr ""

# ec9ec1a1393f48a5b8257ec31284ba67
#: ../../ref/contrib/contenttypes.txt:398
msgid ""
"Note also, that if you delete an object that has a :class:`~django.contrib."
"contenttypes.generic.GenericRelation`, any objects which have a :class:"
"`~django.contrib.contenttypes.generic.GenericForeignKey` pointing at it will "
"be deleted as well. In the example above, this means that if a ``Bookmark`` "
"object were deleted, any ``TaggedItem`` objects pointing at it would be "
"deleted at the same time."
msgstr ""

# 8489a813a0d14ab1bdac718b9a7ac095
#: ../../ref/contrib/contenttypes.txt:407
msgid ""
"Unlike :class:`~django.db.models.ForeignKey`, :class:`~django.contrib."
"contenttypes.generic.GenericForeignKey` does not accept an :attr:`~django.db."
"models.ForeignKey.on_delete` argument to customize this behavior; if "
"desired, you can avoid the cascade-deletion simply by not using :class:"
"`~django.contrib.contenttypes.generic.GenericRelation`, and alternate "
"behavior can be provided via the :data:`~django.db.models.signals."
"pre_delete` signal."
msgstr ""

# 1435402f16a441eab89299211e50ec40
#: ../../ref/contrib/contenttypes.txt:416
msgid "Generic relations and aggregation"
msgstr ""

# 77ce2f3deaa14509886e114651ba84b2
#: ../../ref/contrib/contenttypes.txt:418
msgid ""
":doc:`Django's database aggregation API </topics/db/aggregation>` doesn't "
"work with a :class:`~django.contrib.contenttypes.generic.GenericRelation`. "
"For example, you might be tempted to try something like::"
msgstr ""

# b23c3afd19974c38a154316215913db3
#: ../../ref/contrib/contenttypes.txt:425
msgid ""
"This will not work correctly, however. The generic relation adds extra "
"filters to the queryset to ensure the correct content type, but the :meth:"
"`~django.db.models.query.QuerySet.aggregate` method doesn't take them into "
"account. For now, if you need aggregates on generic relations, you'll need "
"to calculate them without using the aggregation API."
msgstr ""

# 5f14c7862bc3496186941b7c1ad3ead1
#: ../../ref/contrib/contenttypes.txt:432
msgid "Generic relations in forms and admin"
msgstr ""

# 2af7d950dda3485ebce3d8793d321987
#: ../../ref/contrib/contenttypes.txt:434
msgid ""
"The :mod:`django.contrib.contenttypes.generic` module provides :class:"
"`~django.contrib.contenttypes.generic.BaseGenericInlineFormSet`, :class:"
"`~django.contrib.contenttypes.generic.GenericTabularInline` and :class:"
"`~django.contrib.contenttypes.generic.GenericStackedInline` (the last two "
"are subclasses of :class:`~django.contrib.contenttypes.generic."
"GenericInlineModelAdmin`). This enables the use of generic relations in "
"forms and the admin. See the :doc:`model formset </topics/forms/modelforms>` "
"and :ref:`admin <using-generic-relations-as-an-inline>` documentation for "
"more information."
msgstr ""

# 811915490d034d51b91c4d04c04498e7
#: ../../ref/contrib/contenttypes.txt:447
msgid ""
"The :class:`~django.contrib.contenttypes.generic.GenericInlineModelAdmin` "
"class inherits all properties from an :class:`~django.contrib.admin."
"InlineModelAdmin` class. However, it adds a couple of its own for working "
"with the generic relation:"
msgstr ""

# c806635a528e4d02a82f2b2ee82af1dd
#: ../../ref/contrib/contenttypes.txt:454
msgid ""
"The name of the :class:`~django.contrib.contenttypes.models.ContentType` "
"foreign key field on the model. Defaults to ``content_type``."
msgstr ""

# 13011280e58a439ea49bccef7638a4e2
#: ../../ref/contrib/contenttypes.txt:460
msgid ""
"The name of the integer field that represents the ID of the related object. "
"Defaults to ``object_id``."
msgstr ""

# e98e4a1dbe7c4121a8c9ab04378da27d
#: ../../ref/contrib/csrf.txt:3
msgid "Cross Site Request Forgery protection"
msgstr ""

# c916fca28abd40dfba56da25849e67ff
#: ../../ref/contrib/csrf.txt:8
msgid ""
"The CSRF middleware and template tag provides easy-to-use protection against "
"`Cross Site Request Forgeries`_.  This type of attack occurs when a "
"malicious Web site contains a link, a form button or some javascript that is "
"intended to perform some action on your Web site, using the credentials of a "
"logged-in user who visits the malicious site in their browser.  A related "
"type of attack, 'login CSRF', where an attacking site tricks a user's "
"browser into logging into a site with someone else's credentials, is also "
"covered."
msgstr ""

# d3143b8f26e544788a291e006b5343ef
#: ../../ref/contrib/csrf.txt:16
msgid ""
"The first defense against CSRF attacks is to ensure that GET requests (and "
"other 'safe' methods, as defined by 9.1.1 Safe Methods, HTTP 1.1, :rfc:"
"`2616#section-9.1.1`) are side-effect free. Requests via 'unsafe' methods, "
"such as POST, PUT and DELETE, can then be protected by following the steps "
"below."
msgstr ""

# 3312dded76854903bf4358f94bd1fe85
#: ../../ref/contrib/csrf.txt:29
msgid "To enable CSRF protection for your views, follow these steps:"
msgstr ""

# 269607fe5e2d48f9bf9fa1fb8fe6f6a3
#: ../../ref/contrib/csrf.txt:31
msgid ""
"Add the middleware ``'django.middleware.csrf.CsrfViewMiddleware'`` to your "
"list of middleware classes, :setting:`MIDDLEWARE_CLASSES`.  (It should come "
"before any view middleware that assume that CSRF attacks have been dealt "
"with.)"
msgstr ""

# 686188361e314225ab50e0741c99184b
#: ../../ref/contrib/csrf.txt:37
msgid ""
"Alternatively, you can use the decorator :func:`~django.views.decorators."
"csrf.csrf_protect` on particular views you want to protect (see below)."
msgstr ""

# 4d33aa9380c746c0920f0de0af1b54d6
#: ../../ref/contrib/csrf.txt:41
msgid ""
"In any template that uses a POST form, use the :ttag:`csrf_token` tag inside "
"the ``<form>`` element if the form is for an internal URL, e.g.::"
msgstr ""

# e10e17c5359140918fec5fd2458ae7ad
#: ../../ref/contrib/csrf.txt:46
msgid ""
"This should not be done for POST forms that target external URLs, since that "
"would cause the CSRF token to be leaked, leading to a vulnerability."
msgstr ""

# 58fdd508bcca4837bb639a006b82bcf2
#: ../../ref/contrib/csrf.txt:49
msgid ""
"In the corresponding view functions, ensure that the ``'django.core."
"context_processors.csrf'`` context processor is being used. Usually, this "
"can be done in one of two ways:"
msgstr ""

# 58e6256bc0bb44ca9f209c7758bdd323
#: ../../ref/contrib/csrf.txt:53
msgid ""
"Use RequestContext, which always uses ``'django.core.context_processors."
"csrf'`` (no matter what your TEMPLATE_CONTEXT_PROCESSORS setting).  If you "
"are using generic views or contrib apps, you are covered already, since "
"these apps use RequestContext throughout."
msgstr ""

# c22344a149a84b39a25f39d17efb4eb4
#: ../../ref/contrib/csrf.txt:59
msgid ""
"Manually import and use the processor to generate the CSRF token and add it "
"to the template context. e.g.::"
msgstr ""

# 11ff031485ec407ca802772c5fcc3e30
#: ../../ref/contrib/csrf.txt:71
msgid ""
"You may want to write your own :func:`~django.shortcuts.render_to_response()"
"` wrapper that takes care of this step for you."
msgstr ""

# 3ef85e6f7fc6450083e697ef64e4fce6
#: ../../ref/contrib/csrf.txt:75
msgid ""
"The utility script ``extras/csrf_migration_helper.py`` can help to automate "
"the finding of code and templates that may need these steps. It contains "
"full help on how to use it."
msgstr ""

# 2ac564021063429b886ed8a8089e36db
#: ../../ref/contrib/csrf.txt:82
msgid "AJAX"
msgstr ""

# 38edf46a4b964b288e7ae3b7142a08d8
#: ../../ref/contrib/csrf.txt:84
msgid ""
"While the above method can be used for AJAX POST requests, it has some "
"inconveniences: you have to remember to pass the CSRF token in as POST data "
"with every POST request. For this reason, there is an alternative method: on "
"each XMLHttpRequest, set a custom `X-CSRFToken` header to the value of the "
"CSRF token. This is often easier, because many javascript frameworks provide "
"hooks that allow headers to be set on every request. In jQuery, you can use "
"the ``ajaxSend`` event as follows:"
msgstr ""

# d4914f4b8844435b8aa94c824abac28c
#: ../../ref/contrib/csrf.txt:133
msgid ""
"Due to a bug introduced in jQuery 1.5, the example above will not work "
"correctly on that version. Make sure you are running at least jQuery 1.5.1."
msgstr ""

# e2b50f1bf1334debaf26a3e75f11ded0
#: ../../ref/contrib/csrf.txt:136
msgid ""
"Adding this to a javascript file that is included on your site will ensure "
"that AJAX POST requests that are made via jQuery will not be caught by the "
"CSRF protection."
msgstr ""

# b8adb3b31ca842f5b857b6ecd82d0a96
#: ../../ref/contrib/csrf.txt:140
msgid ""
"The above code could be simplified by using the `jQuery cookie plugin "
"<http://plugins.jquery.com/project/Cookie>`_ to replace ``getCookie``, and "
"`settings.crossDomain <http://api.jquery.com/jQuery.ajax>`_ in jQuery 1.5 "
"and later to replace ``sameOrigin``."
msgstr ""

# 9439491e549447e3ad0d4872fed2deaa
#: ../../ref/contrib/csrf.txt:145
msgid ""
"In addition, if the CSRF cookie has not been sent to the client by use of :"
"ttag:`csrf_token`, you may need to ensure the client receives the cookie by "
"using :func:`~django.views.decorators.csrf.ensure_csrf_cookie`."
msgstr ""

# 2448a80e59f746a1848c6caf9c12e1a1
#: ../../ref/contrib/csrf.txt:150
msgid "Other template engines"
msgstr ""

# 316575d8db714cd4a522084651d05618
#: ../../ref/contrib/csrf.txt:152
msgid ""
"When using a different template engine than Django's built-in engine, you "
"can set the token in your forms manually after making sure it's available in "
"the template context."
msgstr ""

# 931ab4d123014644987b5c1377d53986
#: ../../ref/contrib/csrf.txt:156
msgid ""
"For example, in the Cheetah template language, your form could contain the "
"following:"
msgstr ""

# 352a64c8cbc447138fef0efc0e2b52d5
#: ../../ref/contrib/csrf.txt:165
msgid ""
"You can use JavaScript similar to the :ref:`AJAX code <csrf-ajax>` above to "
"get the value of the CSRF token."
msgstr ""

# 3f1abe3e11b8423cb406f42075bc9d84
#: ../../ref/contrib/csrf.txt:169
msgid "The decorator method"
msgstr ""

# 7a53c95cfd3d4ba0815b567d42ca8234
#: ../../ref/contrib/csrf.txt:173
msgid ""
"Rather than adding ``CsrfViewMiddleware`` as a blanket protection, you can "
"use the ``csrf_protect`` decorator, which has exactly the same "
"functionality, on particular views that need the protection. It must be used "
"**both** on views that insert the CSRF token in the output, and on those "
"that accept the POST form data. (These are often the same view function, but "
"not always)."
msgstr ""

# 78329028ce674fb5abe03c29b5d5a70a
#: ../../ref/contrib/csrf.txt:179
msgid ""
"Use of the decorator by itself is **not recommended**, since if you forget "
"to use it, you will have a security hole. The 'belt and braces' strategy of "
"using both is fine, and will incur minimal overhead."
msgstr ""

# 91759eeb2ea84159999feccdc0208205
#: ../../ref/contrib/csrf.txt:185
msgid ""
"Decorator that provides the protection of ``CsrfViewMiddleware`` to a view."
msgstr ""

# 3943772dd2ee4eb5be1c88ce44e12545
# 2c7f7c5b3eab44608c7daed3b886f3ae
#: ../../ref/contrib/csrf.txt:187 ../../ref/contrib/webdesign.txt:32
msgid "Usage::"
msgstr ""

# f04b0e46a71b45608062682edbffc246
#: ../../ref/contrib/csrf.txt:199
msgid "Rejected requests"
msgstr ""

# 9df92bd6d0684c55b3b201cfd8bd7e3b
#: ../../ref/contrib/csrf.txt:201
msgid ""
"By default, a '403 Forbidden' response is sent to the user if an incoming "
"request fails the checks performed by ``CsrfViewMiddleware``.  This should "
"usually only be seen when there is a genuine Cross Site Request Forgery, or "
"when, due to a programming error, the CSRF token has not been included with "
"a POST form."
msgstr ""

# c7b9760d22ea425f9556671b7be636d5
#: ../../ref/contrib/csrf.txt:207
msgid ""
"The error page, however, is not very friendly, so you may want to provide "
"your own view for handling this condition.  To do this, simply set the :"
"setting:`CSRF_FAILURE_VIEW` setting."
msgstr ""

# 889f8b24710d4b9cbbd2d7c5c8eb9b2e
# c7c9122399fe4762977bf014bce24757
# 1eb5e23da74e489b95fb745bb7e6ee28
# 13dea1f05b7c451280f82e311da4a272
#: ../../ref/contrib/csrf.txt:214 ../../ref/contrib/flatpages.txt:53
#: ../../ref/contrib/formtools/form-wizard.txt:23
#: ../../ref/contrib/redirects.txt:23
msgid "How it works"
msgstr ""

# 8cda980291ef46fb87ca44218cacc983
#: ../../ref/contrib/csrf.txt:216
msgid "The CSRF protection is based on the following things:"
msgstr ""

# ec84d7aa0cb143f79104876bd24d840b
#: ../../ref/contrib/csrf.txt:218
msgid ""
"A CSRF cookie that is set to a random value (a session independent nonce, as "
"it is called), which other sites will not have access to."
msgstr ""

# 1d2c8128acd54ed0b927c633259bd0aa
#: ../../ref/contrib/csrf.txt:221
msgid ""
"This cookie is set by ``CsrfViewMiddleware``.  It is meant to be permanent, "
"but since there is no way to set a cookie that never expires, it is sent "
"with every response that has called ``django.middleware.csrf.get_token()`` "
"(the function used internally to retrieve the CSRF token)."
msgstr ""

# 371840ff64854a9bb4c5092381eea790
#: ../../ref/contrib/csrf.txt:226
msgid ""
"A hidden form field with the name 'csrfmiddlewaretoken' present in all "
"outgoing POST forms.  The value of this field is the value of the CSRF "
"cookie."
msgstr ""

# 6c2d505a01c247a3b2d2afa6c1868aca
#: ../../ref/contrib/csrf.txt:230
msgid "This part is done by the template tag."
msgstr ""

# e3cd0b11bb4b4021b854a0c51b578916
#: ../../ref/contrib/csrf.txt:232
msgid ""
"For all incoming requests that are not using HTTP GET, HEAD, OPTIONS or "
"TRACE, a CSRF cookie must be present, and the 'csrfmiddlewaretoken' field "
"must be present and correct. If it isn't, the user will get a 403 error."
msgstr ""

# f30ee883aeb2471aa60b8d7d7599ed18
#: ../../ref/contrib/csrf.txt:236
msgid "This check is done by ``CsrfViewMiddleware``."
msgstr ""

# 79ab987206e843dab6b101ed5d37368e
#: ../../ref/contrib/csrf.txt:238
msgid ""
"In addition, for HTTPS requests, strict referer checking is done by "
"``CsrfViewMiddleware``.  This is necessary to address a Man-In-The-Middle "
"attack that is possible under HTTPS when using a session independent nonce, "
"due to the fact that HTTP 'Set-Cookie' headers are (unfortunately) accepted "
"by clients that are talking to a site under HTTPS.  (Referer checking is not "
"done for HTTP requests because the presence of the Referer header is not "
"reliable enough under HTTP.)"
msgstr ""

# 33f90fe75a10439aa033ab9b361749d5
#: ../../ref/contrib/csrf.txt:246
msgid ""
"This ensures that only forms that have originated from your Web site can be "
"used to POST data back."
msgstr ""

# aff3a6d56af241baaea2a2af8a7e6b5b
#: ../../ref/contrib/csrf.txt:249
msgid ""
"It deliberately ignores GET requests (and other requests that are defined as "
"'safe' by :rfc:`2616`). These requests ought never to have any potentially "
"dangerous side effects , and so a CSRF attack with a GET request ought to be "
"harmless. :rfc:`2616` defines POST, PUT and DELETE as 'unsafe', and all "
"other methods are assumed to be unsafe, for maximum protection."
msgstr ""

# ee5b4cb3bc764f0b9edcdd25836a97cc
#: ../../ref/contrib/csrf.txt:256
msgid "Caching"
msgstr ""

# a704405830b346faa452f322b53db929
#: ../../ref/contrib/csrf.txt:258
msgid ""
"If the :ttag:`csrf_token` template tag is used by a template (or the "
"``get_token`` function is called some other way), ``CsrfViewMiddleware`` "
"will add a cookie and a ``Vary: Cookie`` header to the response. This means "
"that the middleware will play well with the cache middleware if it is used "
"as instructed (``UpdateCacheMiddleware`` goes before all other middleware)."
msgstr ""

# 771a5d1af3da490c84e523169fd16078
#: ../../ref/contrib/csrf.txt:264
msgid ""
"However, if you use cache decorators on individual views, the CSRF "
"middleware will not yet have been able to set the Vary header or the CSRF "
"cookie, and the response will be cached without either one. In this case, on "
"any views that will require a CSRF token to be inserted you should use the :"
"func:`django.views.decorators.csrf.csrf_protect` decorator first::"
msgstr ""

# a7ceb5ea1ac249a8829e1760e610969f
#: ../../ref/contrib/csrf.txt:280
msgid "Testing"
msgstr ""

# b492a432e30b4c22a7ccbf56e293338c
#: ../../ref/contrib/csrf.txt:282
msgid ""
"The ``CsrfViewMiddleware`` will usually be a big hindrance to testing view "
"functions, due to the need for the CSRF token which must be sent with every "
"POST request.  For this reason, Django's HTTP client for tests has been "
"modified to set a flag on requests which relaxes the middleware and the "
"``csrf_protect`` decorator so that they no longer rejects requests.  In "
"every other respect (e.g. sending cookies etc.), they behave the same."
msgstr ""

# a25c09bdc0674d2a863eb6b428738190
#: ../../ref/contrib/csrf.txt:289
msgid ""
"If, for some reason, you *want* the test client to perform CSRF checks, you "
"can create an instance of the test client that enforces CSRF checks::"
msgstr ""

# 65c6ef35ae89481aaf33ef0ebc8cd272
#: ../../ref/contrib/csrf.txt:301
msgid ""
"Subdomains within a site will be able to set cookies on the client for the "
"whole domain.  By setting the cookie and using a corresponding token, "
"subdomains will be able to circumvent the CSRF protection.  The only way to "
"avoid this is to ensure that subdomains are controlled by trusted users (or, "
"are at least unable to set cookies).  Note that even without CSRF, there are "
"other vulnerabilities, such as session fixation, that make giving subdomains "
"to untrusted parties a bad idea, and these vulnerabilities cannot easily be "
"fixed with current browsers."
msgstr ""

# 7003ed87ea604d7ea5c81406de3b8994
#: ../../ref/contrib/csrf.txt:310
msgid "Edge cases"
msgstr ""

# 5d989e27630c443984f589c41fa6a8bf
#: ../../ref/contrib/csrf.txt:312
msgid ""
"Certain views can have unusual requirements that mean they don't fit the "
"normal pattern envisaged here. A number of utilities can be useful in these "
"situations. The scenarios they might be needed in are described in the "
"following section."
msgstr ""

# 334919d70c2a4b948c9a7ebc25a78bd4
#: ../../ref/contrib/csrf.txt:318
msgid "Utilities"
msgstr ""

# 0f504816ea4446da9a485738a8dec1df
#: ../../ref/contrib/csrf.txt:322
msgid ""
"This decorator marks a view as being exempt from the protection ensured by "
"the middleware. Example::"
msgstr ""

# 747024e71ca74375996742f7dc5fb4f5
#: ../../ref/contrib/csrf.txt:333
msgid ""
"Normally the :ttag:`csrf_token` template tag will not work if "
"``CsrfViewMiddleware.process_view`` or an equivalent like ``csrf_protect`` "
"has not run. The view decorator ``requires_csrf_token`` can be used to "
"ensure the template tag does work. This decorator works similarly to "
"``csrf_protect``, but never rejects an incoming request."
msgstr ""

# 96d401a4914f46e08388a393ae0ca5de
#: ../../ref/contrib/csrf.txt:354
msgid "This decorator forces a view to send the CSRF cookie."
msgstr ""

# 1a247f5c97d2414d94f1ec0610feb124
#: ../../ref/contrib/csrf.txt:357
msgid "Scenarios"
msgstr ""

# ffe5ba580ef94455822c73745bef9502
#: ../../ref/contrib/csrf.txt:360
msgid "CSRF protection should be disabled for just a few views"
msgstr ""

# abdf7e04640e49eebf070b94ab974e9c
#: ../../ref/contrib/csrf.txt:362
msgid "Most views requires CSRF protection, but a few do not."
msgstr ""

# 4a9ced4322fc47fd801666f23338dd3b
#: ../../ref/contrib/csrf.txt:364
msgid ""
"Solution: rather than disabling the middleware and applying ``csrf_protect`` "
"to all the views that need it, enable the middleware and use :func:`~django."
"views.decorators.csrf.csrf_exempt`."
msgstr ""

# 49a7bebd9b6e46148f02b5637d4a5f8c
#: ../../ref/contrib/csrf.txt:369
msgid "CsrfViewMiddleware.process_view not used"
msgstr ""

# e8f7b2b37e9f4a509150ddeec56862fe
#: ../../ref/contrib/csrf.txt:371
msgid ""
"There are cases when ``CsrfViewMiddleware.process_view`` may not have run "
"before your view is run - 404 and 500 handlers, for example - but you still "
"need the CSRF token in a form."
msgstr ""

# 7cded46d73fa49ca84fe3a1a923a1f89
#: ../../ref/contrib/csrf.txt:375
msgid "Solution: use :func:`~django.views.decorators.csrf.requires_csrf_token`"
msgstr ""

# c9778b0ea68f421281f5273f5dd76981
#: ../../ref/contrib/csrf.txt:378
msgid "Unprotected view needs the CSRF token"
msgstr ""

# e909d71813d846ed82ca1731740d62b8
#: ../../ref/contrib/csrf.txt:380
msgid ""
"There may be some views that are unprotected and have been exempted by "
"``csrf_exempt``, but still need to include the CSRF token."
msgstr ""

# 7026467bf2864521860ec5d86319c371
#: ../../ref/contrib/csrf.txt:383
msgid ""
"Solution: use :func:`~django.views.decorators.csrf.csrf_exempt` followed by :"
"func:`~django.views.decorators.csrf.requires_csrf_token`. (i.e. "
"``requires_csrf_token`` should be the innermost decorator)."
msgstr ""

# e635034ff98c40e98d78b8656a16fbbb
#: ../../ref/contrib/csrf.txt:388
msgid "View needs protection for one path"
msgstr ""

# 3e5d23912bd64e81a43650152f4a383a
#: ../../ref/contrib/csrf.txt:390
msgid ""
"A view needs CRSF protection under one set of conditions only, and mustn't "
"have it for the rest of the time."
msgstr ""

# f524e68eeeaf471ea02c825f1c2ba369
#: ../../ref/contrib/csrf.txt:393
msgid ""
"Solution: use :func:`~django.views.decorators.csrf.csrf_exempt` for the "
"whole view function, and :func:`~django.views.decorators.csrf.csrf_protect` "
"for the path within it that needs protection. Example::"
msgstr ""

# 6296f47203bf4baa97d1dcb20d97e1f0
#: ../../ref/contrib/csrf.txt:412
msgid "Page uses AJAX without any HTML form"
msgstr ""

# e43032dfdf8f442ba67bfc1b5394565b
#: ../../ref/contrib/csrf.txt:414
msgid ""
"A page makes a POST request via AJAX, and the page does not have an HTML "
"form with a :ttag:`csrf_token` that would cause the required CSRF cookie to "
"be sent."
msgstr ""

# 231755f0036346f58c201b538ac8896e
#: ../../ref/contrib/csrf.txt:417
msgid ""
"Solution: use :func:`~django.views.decorators.csrf.ensure_csrf_cookie` on "
"the view that sends the page."
msgstr ""

# 712b7ca9c7c94000a8c72092a28ef914
#: ../../ref/contrib/csrf.txt:421
msgid "Contrib and reusable apps"
msgstr ""

# 12dd5fddc0d04df4aa2c78d8a795a250
#: ../../ref/contrib/csrf.txt:423
msgid ""
"Because it is possible for the developer to turn off the "
"``CsrfViewMiddleware``, all relevant views in contrib apps use the "
"``csrf_protect`` decorator to ensure the security of these applications "
"against CSRF.  It is recommended that the developers of other reusable apps "
"that want the same guarantees also use the ``csrf_protect`` decorator on "
"their views."
msgstr ""

# c818aec4a95c435887ae740800852b53
# 1061aa47d82141a9861da707b36986ae
# a6aa6755cf4546958c692d119791c123
# ee24c63bd6914fc6b71b8277a1002bd1
# f1aefe0cc64c458a85027e6edc64f456
# 08e6a00692ba4b849ad62037ba172a31
# 809c0d7cac244df5bbc2320da49ea1d7
# ae889551c4704e989e2b5e993b7080e3
#: ../../ref/contrib/csrf.txt:430 ../../ref/contrib/gis/gdal.txt:1097
#: ../../ref/contrib/gis/geos.txt:903 ../../ref/contrib/gis/testing.txt:20
#: ../../ref/contrib/gis/testing.txt:123 ../../ref/contrib/messages.txt:319
#: ../../ref/contrib/staticfiles.txt:22 ../../ref/settings.txt:3
msgid "Settings"
msgstr ""

# 30df513fd5e54af09816e2e0f29f20d7
#: ../../ref/contrib/csrf.txt:432
msgid "A number of settings can be used to control Django's CSRF behavior."
msgstr ""

# 87c87008de15468b800d3662be1b4078
# b2d11d19b59244e9971a158b34f8cd89
#: ../../ref/contrib/csrf.txt:435 ../../ref/settings.txt:308
msgid "CSRF_COOKIE_DOMAIN"
msgstr ""

# 7531e3343d5941e0a6b82c5f3679fc6a
# 2ca73ed2ae1441488470b77cbd07b12d
# f9dc9ebe568f4e4596ac16f3f41c68ab
# 375813066b1e42be9dd6bd26ff91cfd3
# 7a5fd7f555714499a129584f4bfaa212
# cb248dfde94e41a980cddac1e63cbf14
# 7535ec6c368b462f80abc3ac0a4d0787
# 2bd9729ab2c24a7bb490fa8ce5b61770
# 2baed713d8b8428d8a7617c3385a0380
# af34f1464626471db3635c4d55e7351e
# d21ab3023c224c3886ca0d6f20e1b9f3
# 15984bb7a9ef441e919d14c1ea565b5b
# bc076f21531b4cef82ab868b6be276a6
# 8be0768077ff4083a137304e856e3a89
# 4a3ad96ba06f420498562b18dacfbd0a
# 08183da7be0a4ab2b2da43c02b1daa6c
# 834bedb4f8cc4a989d12d2f2214a08bd
# f7f709a066834f5e810b99c1be7632ab
# e49dacdbe99d47ef9a917c69cb30218d
# d862ba4ed2944a4d8db549185a2ce063
#: ../../ref/contrib/csrf.txt:439 ../../ref/contrib/messages.txt:390
#: ../../ref/settings.txt:312 ../../ref/settings.txt:520
#: ../../ref/settings.txt:537 ../../ref/settings.txt:565
#: ../../ref/settings.txt:580 ../../ref/settings.txt:607
#: ../../ref/settings.txt:631 ../../ref/settings.txt:643
#: ../../ref/settings.txt:655 ../../ref/settings.txt:1050
#: ../../ref/settings.txt:1076 ../../ref/settings.txt:1118
#: ../../ref/settings.txt:1132 ../../ref/settings.txt:1600
#: ../../ref/settings.txt:1703 ../../ref/settings.txt:1797
#: ../../ref/settings.txt:1910 ../../ref/settings.txt:2265
msgid "Default: ``None``"
msgstr ""

# 56c0f3b5baec4aa68c1d5db562db08f7
#: ../../ref/contrib/csrf.txt:441
msgid ""
"The domain to be used when setting the CSRF cookie.  This can be useful for "
"easily allowing cross-subdomain requests to be excluded from the normal "
"cross site request forgery protection.  It should be set to a string such as "
"``\".lawrence.com\"`` to allow a POST request from a form on one subdomain "
"to be accepted by a view served from another subdomain."
msgstr ""

# 269ecdb86fd240e4a016a28d664db64e
#: ../../ref/contrib/csrf.txt:447
msgid ""
"Please note that, with or without use of this setting, this CSRF protection "
"mechanism is not safe against cross-subdomain attacks -- see `Limitations`_."
msgstr ""

# b570831c584b45e0b822c4f66295a11b
# b1c94373048842a293f59ad03f3439ef
#: ../../ref/contrib/csrf.txt:451 ../../ref/settings.txt:327
msgid "CSRF_COOKIE_NAME"
msgstr ""

# d53f72f7394e4da7967dc678ba329af3
# bccac4f9cc494a8c9bf471baeed8ca1e
#: ../../ref/contrib/csrf.txt:455 ../../ref/settings.txt:331
msgid "Default: ``'csrftoken'``"
msgstr ""

# 8127485a14484fe5a7973bacd3544efe
#: ../../ref/contrib/csrf.txt:457
msgid ""
"The name of the cookie to use for the CSRF authentication token. This can be "
"whatever you want."
msgstr ""

# a877993859f14140be3b3e4c6d97446a
# 3d4b9175b59542fd97adbda3fa7799a7
#: ../../ref/contrib/csrf.txt:461 ../../ref/settings.txt:339
msgid "CSRF_COOKIE_PATH"
msgstr ""

# 7cac7f680ec54ff19d6250c45e6014c1
# ab79a07cd8274d77895876911a9044a9
# 0a18edd5f4db4af681d6710c641993d9
#: ../../ref/contrib/csrf.txt:465 ../../ref/settings.txt:343
#: ../../ref/settings.txt:1744
msgid "Default: ``'/'``"
msgstr ""

# 3f9a8825a01744d4aafee3e7b77cc868
# 3b5b0e1588714ff1968830aad158866f
#: ../../ref/contrib/csrf.txt:467 ../../ref/settings.txt:345
msgid ""
"The path set on the CSRF cookie. This should either match the URL path of "
"your Django installation or be a parent of that path."
msgstr ""

# 230c0d042d5d4cb48b262194e02188f5
# d5a8358588a04924982fb31e2735cd80
#: ../../ref/contrib/csrf.txt:470 ../../ref/settings.txt:348
msgid ""
"This is useful if you have multiple Django instances running under the same "
"hostname. They can use different cookie paths, and each instance will only "
"see its own CSRF cookie."
msgstr ""

# 258ab1dffdf74f4eb8155dce6ba86ea5
# 9762265dd5a043508fb28d3d01807c2c
#: ../../ref/contrib/csrf.txt:475 ../../ref/settings.txt:355
msgid "CSRF_COOKIE_SECURE"
msgstr ""

# 5715d96d26f24344aba4e0d888f8c6ba
# 18557e73decc4dab8dabc49cc57549a1
# ac3ec836d66840619013f8f1472bb277
# 7056b51ae0f14853a39c2e372d92927d
# fac56ffde832406aa290034f34944157
# 5d4f09fc8ba54c6bad89f4c895820735
# bb4c143b961c45afba6133c141276e4a
# 6bcf06ece82d464eba2608940a1d5757
# b51a2bc1d32e4ead98400ebd7eebb46b
# 92e408ba37694d0fb0b382c9af4f0c92
# 077f2b77bc9f44b5bea284f40cb60172
# 93c313d4cd1b4f3cbe51205a6e00f181
# 8b0339b5b4f74734bf67b957a809589a
# 73aef9a7ff4c4fd5bb1afb994851cff5
# d75788cdddf1495c82bbba2cac74a80c
# c7c41e6221d043c6a8debf473dfad272
# 7ac8b71b703643848edf1c9d7f32a5b2
# ac96de6aade24b5ea396aa724dece8a7
#: ../../ref/contrib/csrf.txt:479 ../../ref/settings.txt:271
#: ../../ref/settings.txt:359 ../../ref/settings.txt:766
#: ../../ref/settings.txt:814 ../../ref/settings.txt:1009
#: ../../ref/settings.txt:1540 ../../ref/settings.txt:1658
#: ../../ref/settings.txt:1714 ../../ref/settings.txt:1758
#: ../../ref/settings.txt:1787 ../../ref/settings.txt:1809
#: ../../ref/settings.txt:1966 ../../ref/settings.txt:2166
#: ../../ref/settings.txt:2194 ../../ref/settings.txt:2214
#: ../../ref/settings.txt:2231 ../../ref/settings.txt:2252
msgid "Default: ``False``"
msgstr ""

# f2d51fd14f30423c8b471f2270565eaa
# 681a1cf29c0343988121e2e0d8dd99e8
#: ../../ref/contrib/csrf.txt:481 ../../ref/settings.txt:361
msgid ""
"Whether to use a secure cookie for the CSRF cookie. If this is set to "
"``True``, the cookie will be marked as \"secure,\" which means browsers may "
"ensure that the cookie is only sent under an HTTPS connection."
msgstr ""

# ce6b7fd727494d1393b48205059e8b61
# 32e7a12bb0a74ddd9f17369de83a8f57
#: ../../ref/contrib/csrf.txt:486 ../../ref/settings.txt:368
msgid "CSRF_FAILURE_VIEW"
msgstr ""

# 2fc6b8a3471d462a92223bac70d6a436
# 4e77871644504a6b9a3a99e113f13601
#: ../../ref/contrib/csrf.txt:490 ../../ref/settings.txt:372
msgid "Default: ``'django.views.csrf.csrf_failure'``"
msgstr ""

# 80c67ad8193248c8aa5b1c9e5fac584c
# c6c725aab1cc4d5caff27aa11d9e910f
#: ../../ref/contrib/csrf.txt:492 ../../ref/settings.txt:374
msgid ""
"A dotted path to the view function to be used when an incoming request is "
"rejected by the CSRF protection.  The function should have this signature::"
msgstr ""

# 9e3fc70420594570b0afaabc9ab04868
#: ../../ref/contrib/csrf.txt:497
msgid ""
"where ``reason`` is a short message (intended for developers or logging, not "
"for end users) indicating the reason the request was rejected."
msgstr ""

# f02b10add142432bb209742c77668146
#: ../../ref/contrib/databrowse.txt:3
msgid "Databrowse"
msgstr ""

# ac013e5f88414cffab004aba9f69faa9
#: ../../ref/contrib/databrowse.txt:11
msgid "Databrowse is a Django application that lets you browse your data."
msgstr ""

# 39c796aeef614d22822b5e48b1e797fe
#: ../../ref/contrib/databrowse.txt:13
msgid ""
"As the Django admin dynamically creates an admin interface by introspecting "
"your models, Databrowse dynamically creates a rich, browsable Web site by "
"introspecting your models."
msgstr ""

# 0f1a94013d5548f99c17de74220b22b5
#: ../../ref/contrib/databrowse.txt:18
msgid "How to use Databrowse"
msgstr ""

# 4bfe1a230d0544c983883820acea30e7
#: ../../ref/contrib/databrowse.txt:20
msgid ""
"Point Django at the default Databrowse templates. There are two ways to do "
"this:"
msgstr ""

# cf04fdefe23f4b85b38a1df44811de69
#: ../../ref/contrib/databrowse.txt:23
msgid ""
"Add ``'django.contrib.databrowse'`` to your :setting:`INSTALLED_APPS` "
"setting. This will work if your :setting:`TEMPLATE_LOADERS` setting includes "
"the ``app_directories`` template loader (which is the case by default). See "
"the :ref:`template loader docs <template-loaders>` for more."
msgstr ""

# ab13c012fb694a6ab54947d2ecb9f046
#: ../../ref/contrib/databrowse.txt:29
msgid ""
"Otherwise, determine the full filesystem path to the :file:`django/contrib/"
"databrowse/templates` directory, and add that directory to your :setting:"
"`TEMPLATE_DIRS` setting."
msgstr ""

# 234419a98b5d49d7b7976154581fb2fb
#: ../../ref/contrib/databrowse.txt:33
msgid "Register a number of models with the Databrowse site::"
msgstr ""

# ba8196342fad410bbaed7ebf09b1ee0d
#: ../../ref/contrib/databrowse.txt:41
msgid "Note that you should register the model *classes*, not instances."
msgstr ""

# aacf1c04eaf44a5a81d408e27d97ed74
#: ../../ref/contrib/databrowse.txt:45
msgid ""
"Since Django 1.4, it is possible to register several models in the same call "
"to :func:`~databrowse.site.register`."
msgstr ""

# 61d767f3890a497f90ddd5555b00fb71
#: ../../ref/contrib/databrowse.txt:48
msgid ""
"It doesn't matter where you put this, as long as it gets executed at some "
"point. A good place for it is in your :doc:`URLconf file </topics/http/"
"urls>` (``urls.py``)."
msgstr ""

# 7b41c759de83418585e179abcb2bc36e
#: ../../ref/contrib/databrowse.txt:52
msgid ""
"Change your URLconf to import the :mod:`~django.contrib.databrowse` module::"
msgstr ""

# eac9895f90a34b5aa7a527541dcf5594
#: ../../ref/contrib/databrowse.txt:56
msgid "...and add the following line to your URLconf::"
msgstr ""

# f318cad5d84e4050b315095e051443f0
#: ../../ref/contrib/databrowse.txt:60
msgid ""
"The prefix doesn't matter -- you can use ``databrowse/`` or ``db/`` or "
"whatever you'd like."
msgstr ""

# aa927607b92d45eebdb2ec47ef1743f3
#: ../../ref/contrib/databrowse.txt:63
msgid "Run the Django server and visit ``/databrowse/`` in your browser."
msgstr ""

# 7385c0091cc74a5794782d26db713a53
#: ../../ref/contrib/databrowse.txt:66
msgid "Requiring user login"
msgstr ""

# a24d368dbc0a489498bf1a5325066eac
#: ../../ref/contrib/databrowse.txt:68
msgid ""
"You can restrict access to logged-in users with only a few extra lines of "
"code. Simply add the following import to your URLconf::"
msgstr ""

# 9f738560133e4f6d8194fbb33a546fc6
#: ../../ref/contrib/databrowse.txt:73
msgid ""
"Then modify the :doc:`URLconf </topics/http/urls>` so that the :func:"
"`databrowse.site.root` view is decorated with :func:`django.contrib.auth."
"decorators.login_required`::"
msgstr ""

# b0f0379f240348f0b867df5771faef1b
#: ../../ref/contrib/databrowse.txt:79
msgid ""
"If you haven't already added support for user logins to your :doc:`URLconf </"
"topics/http/urls>`, as described in the :doc:`user authentication docs </ref/"
"contrib/auth>`, then you will need to do so now with the following mapping::"
msgstr ""

# a7ae1645285d4e629e653d6bc1bdfd08
#: ../../ref/contrib/databrowse.txt:86
msgid ""
"The final step is to create the login form required by :func:`django.contrib."
"auth.views.login`. The :doc:`user authentication docs </ref/contrib/auth>` "
"provide full details and a sample template that can be used for this purpose."
msgstr ""

# 73ce20f421104a07bdc5d5410e40d06d
#: ../../ref/contrib/flatpages.txt:3
msgid "The flatpages app"
msgstr ""

# a2343027f85842c0b1b3897101c3d907
#: ../../ref/contrib/flatpages.txt:8
msgid ""
"Django comes with an optional \"flatpages\" application. It lets you store "
"simple \"flat\" HTML content in a database and handles the management for "
"you via Django's admin interface and a Python API."
msgstr ""

# 57a9247bcbdf4a67900e043857ade3a0
#: ../../ref/contrib/flatpages.txt:12
msgid ""
"A flatpage is a simple object with a URL, title and content. Use it for one-"
"off, special-case pages, such as \"About\" or \"Privacy Policy\" pages, that "
"you want to store in a database but for which you don't want to develop a "
"custom Django application."
msgstr ""

# 6677446ee718404bb90d35cf01817da6
#: ../../ref/contrib/flatpages.txt:17
msgid ""
"A flatpage can use a custom template or a default, systemwide flatpage "
"template. It can be associated with one, or multiple, sites."
msgstr ""

# 09d8776b606f450bad991c3982d6952c
#: ../../ref/contrib/flatpages.txt:20
msgid ""
"The content field may optionally be left blank if you prefer to put your "
"content in a custom template."
msgstr ""

# f8e6497789b9402dabaf5d82332679d3
#: ../../ref/contrib/flatpages.txt:23
msgid "Here are some examples of flatpages on Django-powered sites:"
msgstr ""

# 01e8a2213c0f417f9eedaa26437fa35b
#: ../../ref/contrib/flatpages.txt:25
msgid "http://www.lawrence.com/about/contact/"
msgstr ""

# e647aa49e2d04e8fb55ba79d5139701b
#: ../../ref/contrib/flatpages.txt:26
msgid "http://www2.ljworld.com/site/rules/"
msgstr ""

# 1c3aebac062a44b29b4c471f95858f13
# b4e730cb9cd74da88c4bf134af71ae29
# 0cc912064d8e476c8e624e4d3a010a20
#: ../../ref/contrib/flatpages.txt:29 ../../ref/contrib/redirects.txt:12
#: ../../ref/contrib/sitemaps.txt:30
msgid "Installation"
msgstr ""

# 5a28ab7aa0f849aba8d9a992ce002530
#: ../../ref/contrib/flatpages.txt:31
msgid "To install the flatpages app, follow these steps:"
msgstr ""

# 13e0a35d53e049a5b0197f994ed6b3e3
#: ../../ref/contrib/flatpages.txt:33
msgid ""
"Install the :mod:`sites framework <django.contrib.sites>` by adding "
"``'django.contrib.sites'`` to your :setting:`INSTALLED_APPS` setting, if "
"it's not already in there."
msgstr ""

# 8471755e78d549409d61fa9719d82e6f
#: ../../ref/contrib/flatpages.txt:37
msgid ""
"Also make sure you've correctly set :setting:`SITE_ID` to the ID of the site "
"the settings file represents. This will usually be ``1`` (i.e. ``SITE_ID = "
"1``, but if you're using the sites framework to manage multiple sites, it "
"could be the ID of a different site."
msgstr ""

# e1471a93edbf4ed3a087e89844645c21
#: ../../ref/contrib/flatpages.txt:42
msgid ""
"Add ``'django.contrib.flatpages'`` to your :setting:`INSTALLED_APPS` setting."
msgstr ""

# be862d2f0b3d4354aa16692c2a92826e
#: ../../ref/contrib/flatpages.txt:45
msgid ""
"Add ``'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware'`` to "
"your :setting:`MIDDLEWARE_CLASSES` setting."
msgstr ""

# 5f325f5cb76a400097e50f223b2f781f
# 7cae5d53415a485b8b0744a480d05e61
#: ../../ref/contrib/flatpages.txt:48 ../../ref/contrib/redirects.txt:20
msgid "Run the command :djadmin:`manage.py syncdb <syncdb>`."
msgstr ""

# 91ffce632a6645c2a5f88eb4cccd9b0f
#: ../../ref/contrib/flatpages.txt:55
msgid ""
"``manage.py syncdb`` creates two tables in your database: "
"``django_flatpage`` and ``django_flatpage_sites``. ``django_flatpage`` is a "
"simple lookup table that simply maps a URL to a title and bunch of text "
"content. ``django_flatpage_sites`` associates a flatpage with a site."
msgstr ""

# d8e59be59dcd4649980cca7a29d73d7b
#: ../../ref/contrib/flatpages.txt:60
msgid ""
"The :class:`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware` "
"does all of the work."
msgstr ""

# d19c70418cb64905bc8269718ea51b59
#: ../../ref/contrib/flatpages.txt:65
msgid ""
"Each time any Django application raises a 404 error, this middleware checks "
"the flatpages database for the requested URL as a last resort. Specifically, "
"it checks for a flatpage with the given URL with a site ID that corresponds "
"to the :setting:`SITE_ID` setting."
msgstr ""

# 762e83503bca41d791450c48eb5e42d1
#: ../../ref/contrib/flatpages.txt:70
msgid "If it finds a match, it follows this algorithm:"
msgstr ""

# d25db2cb801146a1a65950000a5914ed
#: ../../ref/contrib/flatpages.txt:72
msgid ""
"If the flatpage has a custom template, it loads that template. Otherwise, it "
"loads the template :file:`flatpages/default.html`."
msgstr ""

# 573389e16884474c8df27d6456614cd4
#: ../../ref/contrib/flatpages.txt:75
msgid ""
"It passes that template a single context variable, ``flatpage``, which is "
"the flatpage object. It uses :class:`~django.template.RequestContext` in "
"rendering the template."
msgstr ""

# 9d05861fdc5a48a0943656e85fdf6a06
# d2262ae3b7e04a76b475946b3488e3c1
#: ../../ref/contrib/flatpages.txt:92 ../../ref/contrib/redirects.txt:38
msgid ""
"If it doesn't find a match, the request continues to be processed as usual."
msgstr ""

# 1c12f932d7c9434c8fc34eabb51b131a
# 80f8e4b50faa4961a46a9f6ed8e96bd1
#: ../../ref/contrib/flatpages.txt:94 ../../ref/contrib/redirects.txt:41
msgid ""
"The middleware only gets activated for 404s -- not for 500s or responses of "
"any other status code."
msgstr ""

# b33fa4fe52df428782d306d6c65f819c
#: ../../ref/contrib/flatpages.txt:99
msgid ""
"Because the ``FlatpageFallbackMiddleware`` is applied only after URL "
"resolution has failed and produced a 404, the response it returns will not "
"apply any :ref:`view middleware <view-middleware>` methods. Only requests "
"which are successfully routed to a view via normal URL resolution apply view "
"middleware."
msgstr ""

# 6afde05645b7416495b7aad86cd03d73
#: ../../ref/contrib/flatpages.txt:105
msgid ""
"Note that the order of :setting:`MIDDLEWARE_CLASSES` matters. Generally, you "
"can put :class:`~django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware` at the end of the list. This means it will run "
"first when processing the response, and ensures that any other response-"
"processing middlewares see the real flatpage response rather than the 404."
msgstr ""

# fc4796e8e5c44d299c338a2ca591fd77
# f35a0c0892a4487c9e15bf851b0facb7
#: ../../ref/contrib/flatpages.txt:112 ../../ref/contrib/redirects.txt:48
msgid ""
"For more on middleware, read the :doc:`middleware docs </topics/http/"
"middleware>`."
msgstr ""

# 9ead89e3447a40d3b79b882e4b32fb2b
#: ../../ref/contrib/flatpages.txt:117
msgid ""
"Note that the :class:`~django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware` only steps in once another view has successfully "
"produced a 404 response. If another view or middleware class attempts to "
"produce a 404 but ends up raising an exception instead (such as a "
"``TemplateDoesNotExist`` exception if your site does not have an appropriate "
"template to use for HTTP 404 responses), the response will become an HTTP "
"500 (\"Internal Server Error\") and the :class:`~django.contrib.flatpages."
"middleware.FlatpageFallbackMiddleware` will not attempt to serve a flat page."
msgstr ""

# a0d47b18d7604036921213c767e86d9f
#: ../../ref/contrib/flatpages.txt:131
msgid "How to add, change and delete flatpages"
msgstr ""

# 4a272147bf4847c9b08f3ea8a1747ca5
# 7c234996850543e59a985431682c06c5
#: ../../ref/contrib/flatpages.txt:134 ../../ref/contrib/redirects.txt:55
msgid "Via the admin interface"
msgstr ""

# 934dcade20b245569f73e6090b59051a
#: ../../ref/contrib/flatpages.txt:136
msgid ""
"If you've activated the automatic Django admin interface, you should see a "
"\"Flatpages\" section on the admin index page. Edit flatpages as you edit "
"any other object in the system."
msgstr ""

# 3b807632ef7c425db07f13a9d9fcc23b
# 56384b458c504613b236941b34ef682b
#: ../../ref/contrib/flatpages.txt:141 ../../ref/contrib/redirects.txt:62
msgid "Via the Python API"
msgstr ""

# c6c8158c180e4394b9be3fbf0f64be20
#: ../../ref/contrib/flatpages.txt:145
msgid ""
"Flatpages are represented by a standard :doc:`Django model </topics/db/"
"models>`, which lives in `django/contrib/flatpages/models.py`_. You can "
"access flatpage objects via the :doc:`Django database API </topics/db/"
"queries>`."
msgstr ""

# 2401a4a2a2f549f9b9277f52ded10334
#: ../../ref/contrib/flatpages.txt:156
msgid ""
"If you add or modify flatpages via your own code, you will likely want to "
"check for duplicate flatpage URLs within the same site. The flatpage form "
"used in the admin performs this validation check, and can be imported from :"
"class:`django.contrib.flatpages.forms.FlatPageForm` and used in your own "
"views."
msgstr ""

# 98f1181df45f45da9700600b83355cb2
#: ../../ref/contrib/flatpages.txt:163
msgid "Flatpage templates"
msgstr ""

# 59d8f41a31724b98a91a6181faadf840
#: ../../ref/contrib/flatpages.txt:165
msgid ""
"By default, flatpages are rendered via the template :file:`flatpages/default."
"html`, but you can override that for a particular flatpage: in the admin, a "
"collapsed fieldset titled \"Advanced options\" (clicking will expand it) "
"contains a field for specifying a template name. If you're creating a flat "
"page via the Python API you can simply set the template name as the field "
"``template_name`` on the ``FlatPage`` object."
msgstr ""

# 5f4c8fc3be0e4c8f81426bbfe6528097
#: ../../ref/contrib/flatpages.txt:173
msgid ""
"Creating the :file:`flatpages/default.html` template is your responsibility; "
"in your template directory, just create a :file:`flatpages` directory "
"containing a file :file:`default.html`."
msgstr ""

# b93fb933475a4c5490889f8f4111c9a8
#: ../../ref/contrib/flatpages.txt:177
msgid ""
"Flatpage templates are passed a single context variable, ``flatpage``, which "
"is the flatpage object."
msgstr ""

# 4a804d12b14f470bb50c2ad53d1a1130
#: ../../ref/contrib/flatpages.txt:180
msgid "Here's a sample :file:`flatpages/default.html` template:"
msgstr ""

# 114615fff3d14d1aaafbe596a8075830
#: ../../ref/contrib/flatpages.txt:194
msgid ""
"Since you're already entering raw HTML into the admin page for a flatpage, "
"both ``flatpage.title`` and ``flatpage.content`` are marked as **not** "
"requiring :ref:`automatic HTML escaping <automatic-html-escaping>` in the "
"template."
msgstr ""

# 7e41f635f8c642a68f2d78b5c8de9454
#: ../../ref/contrib/flatpages.txt:200
msgid ""
"Getting a list of :class:`~django.contrib.flatpages.models.FlatPage` objects "
"in your templates"
msgstr ""

# 2a5f7eec731e42ac861d177e3b08f45b
#: ../../ref/contrib/flatpages.txt:204
msgid ""
"The flatpages app provides a template tag that allows you to iterate over "
"all of the available flatpages on the :ref:`current site <hooking-into-"
"current-site-from-views>`."
msgstr ""

# 31a76ddc04094279bc0476e00f4774d6
#: ../../ref/contrib/flatpages.txt:208
msgid ""
"Like all custom template tags, you'll need to :ref:`load its custom tag "
"library <loading-custom-template-libraries>` before you can use it. After "
"loading the library, you can retrieve all current flatpages via the :ttag:"
"`get_flatpages` tag:"
msgstr ""

# 80ed0f9588ec489aa9069586c21193ae
#: ../../ref/contrib/flatpages.txt:226
msgid "Displaying ``registration_required`` flatpages"
msgstr ""

# 85195402ccd84ba18412a9a10721d155
#: ../../ref/contrib/flatpages.txt:228
msgid ""
"By default, the :ttag:`get_flatpages` templatetag will only show flatpages "
"that are marked ``registration_required = False``. If you want to display "
"registration-protected flatpages, you need to specify an authenticated user "
"using a``for`` clause."
msgstr ""

# 919f4fdf95224cebb350c25f7920d654
# 42204924da5d45dea2edb1d088a914b0
#: ../../ref/contrib/flatpages.txt:233 ../../ref/contrib/flatpages.txt:251
msgid "For example:"
msgstr ""

# 2b124ca3d1da42559ffa39a8c4384d82
#: ../../ref/contrib/flatpages.txt:239
msgid ""
"If you provide an anonymous user, :ttag:`get_flatpages` will behave the same "
"as if you hadn't provided a user -- i.e., it will only show you public "
"flatpages."
msgstr ""

# a33c433dcaa64f7da6a668d93025af0e
#: ../../ref/contrib/flatpages.txt:244
msgid "Limiting flatpages by base URL"
msgstr ""

# 8b777c2e951547949e4a2e7bb42e9461
#: ../../ref/contrib/flatpages.txt:246
msgid ""
"An optional argument, ``starts_with``, can be applied to limit the returned "
"pages to those beginning with a particular base URL. This argument may be "
"passed as a string, or as a variable to be resolved from the context."
msgstr ""

# fc122d7f0d194ad2995ba60a1f545ba1
#: ../../ref/contrib/formtools/form-preview.txt:3
msgid "Form preview"
msgstr ""

# 6296739ecee94fd598e93dd561fd1b4f
#: ../../ref/contrib/formtools/form-preview.txt:9
msgid ""
"Django comes with an optional \"form preview\" application that helps "
"automate the following workflow:"
msgstr ""

# a0835c54c6cb4d97b3104f117b744a0c
# a00dff5c6a48490994953cd683d5da43
#: ../../ref/contrib/formtools/form-preview.txt:12
#: ../../ref/contrib/index.txt:100
msgid ""
"\"Display an HTML form, force a preview, then do something with the "
"submission.\""
msgstr ""

# defb4f51ad7345289088803ac3416393
#: ../../ref/contrib/formtools/form-preview.txt:14
msgid ""
"To force a preview of a form submission, all you have to do is write a short "
"Python class."
msgstr ""

# bd27caf2e43d4c0c9fc914e187b995ac
#: ../../ref/contrib/formtools/form-preview.txt:20
msgid ""
"Given a :class:`django.forms.Form` subclass that you define, this "
"application takes care of the following workflow:"
msgstr ""

# 52568aeeb3ac4996be0564e0382b2fe5
#: ../../ref/contrib/formtools/form-preview.txt:23
msgid "Displays the form as HTML on a Web page."
msgstr ""

# 0ceab02e02a640289662985f4ad98f3b
#: ../../ref/contrib/formtools/form-preview.txt:24
msgid ""
"Validates the form data when it's submitted via POST. a. If it's valid, "
"displays a preview page. b. If it's not valid, redisplays the form with "
"error messages."
msgstr ""

# 3b735a28e3f641b2be3096947baa046d
#: ../../ref/contrib/formtools/form-preview.txt:27
msgid ""
"When the \"confirmation\" form is submitted from the preview page, calls a "
"hook that you define -- a :meth:`~django.contrib.formtools.preview."
"FormPreview.done()` method that gets passed the valid data."
msgstr ""

# c81af1d6005643f5bc180598e6ffad91
#: ../../ref/contrib/formtools/form-preview.txt:32
msgid ""
"The framework enforces the required preview by passing a shared-secret hash "
"to the preview page via hidden form fields. If somebody tweaks the form "
"parameters on the preview page, the form submission will fail the hash-"
"comparison test."
msgstr ""

# 664a301250d240dea694cb87cc0c8689
#: ../../ref/contrib/formtools/form-preview.txt:37
msgid "How to use ``FormPreview``"
msgstr ""

# cc0ab78b5f374071ae1cfdc776ccfeaa
#: ../../ref/contrib/formtools/form-preview.txt:39
msgid ""
"Point Django at the default FormPreview templates. There are two ways to do "
"this:"
msgstr ""

# 2def62bfb51146fabe25c2fd506c709f
#: ../../ref/contrib/formtools/form-preview.txt:42
msgid ""
"Add ``'django.contrib.formtools'`` to your :setting:`INSTALLED_APPS` "
"setting. This will work if your :setting:`TEMPLATE_LOADERS` setting includes "
"the ``app_directories`` template loader (which is the case by default). See "
"the :ref:`template loader docs <template-loaders>` for more."
msgstr ""

# 0fed9896eb424b9ea2d70c516a06e3f2
#: ../../ref/contrib/formtools/form-preview.txt:49
msgid ""
"Otherwise, determine the full filesystem path to the :file:`django/contrib/"
"formtools/templates` directory, and add that directory to your :setting:"
"`TEMPLATE_DIRS` setting."
msgstr ""

# c630230e36314ee7b8ce8e850ab4d56b
#: ../../ref/contrib/formtools/form-preview.txt:53
msgid ""
"Create a :class:`~django.contrib.formtools.preview.FormPreview` subclass "
"that overrides the :meth:`~django.contrib.formtools.preview.FormPreview.done"
"()` method::"
msgstr ""

# e8c54080f113452bb8bd1a9ef47e09a0
#: ../../ref/contrib/formtools/form-preview.txt:67
msgid ""
"This method takes an :class:`~django.http.HttpRequest` object and a "
"dictionary of the form data after it has been validated and cleaned. It "
"should return an :class:`~django.http.HttpResponseRedirect` that is the end "
"result of the form being submitted."
msgstr ""

# 3baa955566be4dccb9b0d70cbca5f255
#: ../../ref/contrib/formtools/form-preview.txt:72
msgid ""
"Change your URLconf to point to an instance of your :class:`~django.contrib."
"formtools.preview.FormPreview` subclass::"
msgstr ""

# 86dda89e9a6d4db6add47af943116af2
#: ../../ref/contrib/formtools/form-preview.txt:79
msgid ""
"...and add the following line to the appropriate model in your URLconf::"
msgstr ""

# 4bdf4fc7ac104e32a1b74fefd6723830
#: ../../ref/contrib/formtools/form-preview.txt:83
msgid "where ``SomeModelForm`` is a Form or ModelForm class for the model."
msgstr ""

# 9dd96e838fb74315a3477903140f822a
#: ../../ref/contrib/formtools/form-preview.txt:85
msgid "Run the Django server and visit :file:`/post/` in your browser."
msgstr ""

# 3e31eabd7b6244a69057c0b034f25455
#: ../../ref/contrib/formtools/form-preview.txt:88
msgid "``FormPreview`` classes"
msgstr ""

# 99de6b7ce51c4ad79c702b5631430969
#: ../../ref/contrib/formtools/form-preview.txt:92
msgid ""
"A :class:`~django.contrib.formtools.preview.FormPreview` class is a simple "
"Python class that represents the preview workflow. :class:`~django.contrib."
"formtools.preview.FormPreview` classes must subclass ``django.contrib."
"formtools.preview.FormPreview`` and override the :meth:`~django.contrib."
"formtools.preview.FormPreview.done()` method. They can live anywhere in your "
"codebase."
msgstr ""

# 343073ab1482456691efbc04255d8466
#: ../../ref/contrib/formtools/form-preview.txt:100
msgid "``FormPreview`` templates"
msgstr ""

# b2386d01039941ffa1230a9820e28760
#: ../../ref/contrib/formtools/form-preview.txt:102
msgid ""
"By default, the form is rendered via the template :file:`formtools/form."
"html`, and the preview page is rendered via the template :file:`formtools/"
"preview.html`. These values can be overridden for a particular form preview "
"by setting :attr:`~django.contrib.formtools.preview.FormPreview."
"preview_template` and :attr:`~django.contrib.formtools.preview.FormPreview."
"form_template` attributes on the FormPreview subclass. See :file:`django/"
"contrib/formtools/templates` for the default templates."
msgstr ""

# 07d31e169ea742d48c7c7366ff54e67d
#: ../../ref/contrib/formtools/form-preview.txt:111
msgid "Advanced ``FormPreview`` methods"
msgstr ""

# b742f1dc29e8402bacc0efb3681f9547
#: ../../ref/contrib/formtools/form-preview.txt:117
msgid ""
"Given a validated form, performs any extra processing before displaying the "
"preview page, and saves any extra data in context."
msgstr ""

# 1319e1199d9445f488fdf80c2230414d
#: ../../ref/contrib/formtools/form-preview.txt:120
msgid ""
"By default, this method is empty.  It is called after the form is validated, "
"but before the context is modified with hash information and rendered."
msgstr ""

# 4a018c2e84de49edbe4350e72ff6eff6
#: ../../ref/contrib/formtools/form-wizard.txt:3
msgid "Form wizard"
msgstr ""

# 47512f3ee66444618425c99c7889d8f6
#: ../../ref/contrib/formtools/form-wizard.txt:8
msgid ""
"Django comes with an optional \"form wizard\" application that splits :doc:"
"`forms </topics/forms/index>` across multiple Web pages. It maintains state "
"in one of the backends so that the full server-side processing can be "
"delayed until the submission of the final form."
msgstr ""

# e98f829f66d04817a004c0f61625266c
#: ../../ref/contrib/formtools/form-wizard.txt:13
msgid ""
"You might want to use this if you have a lengthy form that would be too "
"unwieldy for display on a single page. The first page might ask the user for "
"core information, the second page might ask for less important information, "
"etc."
msgstr ""

# 45eecd48a5394d34ada957e4a2c37afe
#: ../../ref/contrib/formtools/form-wizard.txt:18
msgid "The term \"wizard\", in this context, is `explained on Wikipedia`_."
msgstr ""

# 9c4692bbdd0545909b50a090471e5747
#: ../../ref/contrib/formtools/form-wizard.txt:25
msgid "Here's the basic workflow for how a user would use a wizard:"
msgstr ""

# fa2ebdd285da471ea5099b91c0ba97f5
#: ../../ref/contrib/formtools/form-wizard.txt:27
msgid ""
"The user visits the first page of the wizard, fills in the form and submits "
"it."
msgstr ""

# 008da68417bf40b282f1831a170641af
#: ../../ref/contrib/formtools/form-wizard.txt:29
msgid ""
"The server validates the data. If it's invalid, the form is displayed again, "
"with error messages. If it's valid, the server saves the current state of "
"the wizard in the backend and redirects to the next step."
msgstr ""

# c72687b1cdec4ef4ad4fc2133f36d1b6
#: ../../ref/contrib/formtools/form-wizard.txt:32
msgid "Step 1 and 2 repeat, for every subsequent form in the wizard."
msgstr ""

# 37c6d67f919941f2af2441dd062f249c
#: ../../ref/contrib/formtools/form-wizard.txt:33
msgid ""
"Once the user has submitted all the forms and all the data has been "
"validated, the wizard processes the data -- saving it to the database, "
"sending an email, or whatever the application needs to do."
msgstr ""

# 2c0c39793fc942489a023d9b651745d6
# 546f2ae4019a416a9eca72cb5e057faa
# fd4ada8126684b6f9c7e4dbef46d3b20
#: ../../ref/contrib/formtools/form-wizard.txt:38
#: ../../ref/django-admin.txt:36 ../../ref/request-response.txt:537
msgid "Usage"
msgstr ""

# 78b4cdb6f34a4e48a1198eeee8461d56
#: ../../ref/contrib/formtools/form-wizard.txt:40
msgid ""
"This application handles as much machinery for you as possible. Generally, "
"you just have to do these things:"
msgstr ""

# 27eb2901c4e84bddadb791df6ac47ffc
#: ../../ref/contrib/formtools/form-wizard.txt:43
msgid ""
"Define a number of :class:`~django.forms.Form` classes -- one per wizard "
"page."
msgstr ""

# 7817a419df0143f79b1c7a4410cd1b56
#: ../../ref/contrib/formtools/form-wizard.txt:46
msgid ""
"Create a :class:`WizardView` subclass that specifies what to do once all of "
"your forms have been submitted and validated. This also lets you override "
"some of the wizard's behavior."
msgstr ""

# 0654c252838c48bb9daaed983448b9fa
#: ../../ref/contrib/formtools/form-wizard.txt:50
msgid ""
"Create some templates that render the forms. You can define a single, "
"generic template to handle every one of the forms, or you can define a "
"specific template for each form."
msgstr ""

# e95c83c16171440aba9c6a906c646fa5
#: ../../ref/contrib/formtools/form-wizard.txt:54
msgid ""
"Add ``django.contrib.formtools`` to your :setting:`INSTALLED_APPS` list in "
"your settings file."
msgstr ""

# d6b354e274374076a9f0f841f4f38faa
#: ../../ref/contrib/formtools/form-wizard.txt:57
msgid ""
"Point your URLconf at your :class:`WizardView` :meth:`~WizardView.as_view` "
"method."
msgstr ""

# 7b828a0d2d98463aa922b759349e2233
#: ../../ref/contrib/formtools/form-wizard.txt:60
msgid "Defining ``Form`` classes"
msgstr ""

# d91f3bd8baa9417bb11ea34d7904dfdd
#: ../../ref/contrib/formtools/form-wizard.txt:62
msgid ""
"The first step in creating a form wizard is to create the :class:`~django."
"forms.Form` classes.  These should be standard :class:`django.forms.Form` "
"classes, covered in the :doc:`forms documentation </topics/forms/index>`.  "
"These classes can live anywhere in your codebase, but convention is to put "
"them in a file called :file:`forms.py` in your application."
msgstr ""

# b6b159d081034b9289fdaaabeadfd0ae
#: ../../ref/contrib/formtools/form-wizard.txt:69
msgid ""
"For example, let's write a \"contact form\" wizard, where the first page's "
"form collects the sender's email address and subject, and the second page "
"collects the message itself. Here's what the :file:`forms.py` might look "
"like::"
msgstr ""

# 9359a44d280449a483340bee15a587d2
#: ../../ref/contrib/formtools/form-wizard.txt:85
msgid ""
"In order to use :class:`~django.forms.FileField` in any form, see the "
"section :ref:`Handling files <wizard-files>` below to learn more about what "
"to do."
msgstr ""

# 7b69cabfdb464b13bc9aeca02877f0a6
#: ../../ref/contrib/formtools/form-wizard.txt:90
msgid "Creating a ``WizardView`` class"
msgstr ""

# 7877249180ad44a5ada04d4078c7072e
#: ../../ref/contrib/formtools/form-wizard.txt:92
msgid ""
"The next step is to create a :class:`django.contrib.formtools.wizard.views."
"WizardView` subclass. You can also use the :class:`SessionWizardView` or :"
"class:`CookieWizardView` classes which preselect the backend used for "
"storing information during execution of the wizard (as their names indicate, "
"server-side sessions and browser cookies respectively)."
msgstr ""

# e703a7c453b248aa9321a65a8df619a3
#: ../../ref/contrib/formtools/form-wizard.txt:101
msgid ""
"To use the :class:`SessionWizardView` follow the instructions in the :doc:"
"`sessions documentation </topics/http/sessions>` on how to enable sessions."
msgstr ""

# 97fe0b6a5cab429fb63a736ae7cbfba3
#: ../../ref/contrib/formtools/form-wizard.txt:105
msgid ""
"We will use the :class:`SessionWizardView` in all examples but is is "
"completely fine to use the :class:`CookieWizardView` instead. As with your :"
"class:`~django.forms.Form` classes, this :class:`WizardView` class can live "
"anywhere in your codebase, but convention is to put it in :file:`views.py`."
msgstr ""

# 3fd4b0d7e6324d59b131765734e5fa89
#: ../../ref/contrib/formtools/form-wizard.txt:110
msgid ""
"The only requirement on this subclass is that it implement a :meth:"
"`~WizardView.done()` method."
msgstr ""

# a1f60849dcab400e9e42a1b1a157b3f5
#: ../../ref/contrib/formtools/form-wizard.txt:115
msgid ""
"This method specifies what should happen when the data for *every* form is "
"submitted and validated. This method is passed a list of validated :class:"
"`~django.forms.Form` instances."
msgstr ""

# 73d3d9b9f37247cfa402352595d4d349
#: ../../ref/contrib/formtools/form-wizard.txt:119
msgid ""
"In this simplistic example, rather than performing any database operation, "
"the method simply renders a template of the validated data::"
msgstr ""

# 719505cdba2f44058fd38bc73fd7a1f6
#: ../../ref/contrib/formtools/form-wizard.txt:131
msgid ""
"Note that this method will be called via ``POST``, so it really ought to be "
"a good Web citizen and redirect after processing the data. Here's another "
"example::"
msgstr ""

# f8a25e2b165d41c890e6edab793adea6
#: ../../ref/contrib/formtools/form-wizard.txt:143
msgid ""
"See the section :ref:`Advanced WizardView methods <wizardview-advanced-"
"methods>` below to learn about more :class:`WizardView` hooks."
msgstr ""

# 089e6a307ee2460e9ad8977681a7109d
#: ../../ref/contrib/formtools/form-wizard.txt:147
msgid "Creating templates for the forms"
msgstr ""

# 71a32326fa8345a2a3e68694abb3514e
#: ../../ref/contrib/formtools/form-wizard.txt:149
msgid ""
"Next, you'll need to create a template that renders the wizard's forms. By "
"default, every form uses a template called :file:`formtools/wizard/"
"wizard_form.html`. You can change this template name by overriding either "
"the :attr:`~django.views.generic.base.TemplateResponseMixin.template_name` "
"attribute or the :meth:`~django.views.generic.base.TemplateResponseMixin."
"get_template_names()` method, which are documented in the :class:`~django."
"views.generic.base.TemplateResponseMixin` documentation.  The latter one "
"allows you to use a different template for each form."
msgstr ""

# 2ed38785794b4a64aa66d2e258ef20bc
#: ../../ref/contrib/formtools/form-wizard.txt:160
msgid ""
"This template expects a ``wizard`` object that has various items attached to "
"it:"
msgstr ""

# 9f59773b4c654e1f95997c9dcd5ab931
#: ../../ref/contrib/formtools/form-wizard.txt:163
msgid ""
"``form`` -- The :class:`~django.forms.Form` or :class:`~django.forms.formset."
"BaseFormSet` instance for the current step (either empty or with errors)."
msgstr ""

# 35e88c62b63e475db62cbd4856491d5d
#: ../../ref/contrib/formtools/form-wizard.txt:167
msgid "``steps`` -- A helper object to access the various steps related data:"
msgstr ""

# f9fab78c964b4f7f9b14aeae37f207e8
#: ../../ref/contrib/formtools/form-wizard.txt:169
msgid "``step0`` -- The current step (zero-based)."
msgstr ""

# 91dd9408f0f445b2b5344d83c0c42a6c
#: ../../ref/contrib/formtools/form-wizard.txt:170
msgid "``step1`` -- The current step (one-based)."
msgstr ""

# 9fb559a8ec0f41f6b293a8726ba12f3c
#: ../../ref/contrib/formtools/form-wizard.txt:171
msgid "``count`` -- The total number of steps."
msgstr ""

# 69356165af604571a478ac2e017de674
#: ../../ref/contrib/formtools/form-wizard.txt:172
msgid "``first`` -- The first step."
msgstr ""

# 0dad8f7b437049dc9da2e5ea0bae6494
#: ../../ref/contrib/formtools/form-wizard.txt:173
msgid "``last`` -- The last step."
msgstr ""

# ac5b2546c5fd4cd298ee0f4d6fe3834c
#: ../../ref/contrib/formtools/form-wizard.txt:174
msgid "``current`` -- The current (or first) step."
msgstr ""

# 1bf5b1e85dee495d825b9f77797858b4
#: ../../ref/contrib/formtools/form-wizard.txt:175
msgid "``next`` -- The next step."
msgstr ""

# 35e1b751735e4128b9574949e525bc1e
#: ../../ref/contrib/formtools/form-wizard.txt:176
msgid "``prev`` -- The previous step."
msgstr ""

# 858588c9522a4c93a36562be84b18825
#: ../../ref/contrib/formtools/form-wizard.txt:177
msgid "``index`` -- The index of the current step."
msgstr ""

# 2b90dcf82bc541a78937915b144d7402
#: ../../ref/contrib/formtools/form-wizard.txt:178
msgid "``all`` -- A list of all steps of the wizard."
msgstr ""

# da9c3580d7d3433b804fbd6bc060dff5
#: ../../ref/contrib/formtools/form-wizard.txt:180
msgid ""
"You can supply additional context variables by using the :meth:`~WizardView."
"get_context_data` method of your :class:`WizardView` subclass."
msgstr ""

# 9f04266c387f4a68b92d1eb859fdc967
#: ../../ref/contrib/formtools/form-wizard.txt:184
msgid "Here's a full example template:"
msgstr ""

# 4877fcb3c32d4e4abe2fb9244f6b38a2
#: ../../ref/contrib/formtools/form-wizard.txt:218
msgid ""
"Note that ``{{ wizard.management_form }}`` **must be used** for the wizard "
"to work properly."
msgstr ""

# f05052c2d74c406b82e43437a72d9ce4
#: ../../ref/contrib/formtools/form-wizard.txt:224
msgid "Hooking the wizard into a URLconf"
msgstr ""

# 4ea0efa541f4439291dca812aed48041
#: ../../ref/contrib/formtools/form-wizard.txt:226
msgid ""
"Finally, we need to specify which forms to use in the wizard, and then "
"deploy the new :class:`WizardView` object at an URL in the ``urls.py``. The "
"wizard's :meth:`as_view` method takes a list of your :class:`~django.forms."
"Form` classes as an argument during instantiation::"
msgstr ""

# 2eb625d2affb4e7197434ebc7e3ff20f
#: ../../ref/contrib/formtools/form-wizard.txt:243
msgid "Advanced ``WizardView`` methods"
msgstr ""

# 166bc5ea4e8a42fbba4dc17e3a5c26ab
#: ../../ref/contrib/formtools/form-wizard.txt:247
msgid ""
"Aside from the :meth:`~done()` method, :class:`WizardView` offers a few "
"advanced method hooks that let you customize how your wizard works."
msgstr ""

# 4a1006e4527e43a79a4d23fdc03a0db8
#: ../../ref/contrib/formtools/form-wizard.txt:250
msgid ""
"Some of these methods take an argument ``step``, which is a zero-based "
"counter as string representing the current step of the wizard. (E.g., the "
"first form is ``'0'`` and the second form is ``'1'``)"
msgstr ""

# 658e15f00fca48b8933976999851f137
#: ../../ref/contrib/formtools/form-wizard.txt:256
msgid ""
"Given the step, returns a form prefix to use. By default, this simply uses "
"the step itself. For more, see the :ref:`form prefix documentation <form-"
"prefix>`."
msgstr ""

# 1c10c1ded1c848f298cadc7c6a72b7fd
#: ../../ref/contrib/formtools/form-wizard.txt:262
msgid ""
"Returns a dictionary which will be passed as the :attr:`~django.forms.Form."
"initial` argument when instantiating the Form instance for step ``step``. If "
"no initial data was provided while initializing the form wizard, an empty "
"dictionary should be returned."
msgstr ""

# 8201d2c9d2a94dfba991247f5153d9ef
# bd1833599b34425597e0ce3ebefd1252
# 66845e7bb9c74473a55ff33ac83ff9fd
# 6b6fedd5ad244cc788eb797b3f187941
#: ../../ref/contrib/formtools/form-wizard.txt:267
#: ../../ref/contrib/formtools/form-wizard.txt:277
#: ../../ref/contrib/formtools/form-wizard.txt:292
#: ../../ref/contrib/formtools/form-wizard.txt:367
msgid "The default implementation::"
msgstr ""

# 974647a5808b42cfae76852bbd4625be
#: ../../ref/contrib/formtools/form-wizard.txt:274
msgid ""
"Returns a dictionary which will be used as the keyword arguments when "
"instantiating the form instance on given ``step``."
msgstr ""

# 78de101c1c6542d6aa08867485706a50
#: ../../ref/contrib/formtools/form-wizard.txt:284
msgid ""
"This method will be called only if a :class:`~django.forms.ModelForm` is "
"used as the form for step ``step``."
msgstr ""

# 04a4f69dd8344724a4644229dc369153
#: ../../ref/contrib/formtools/form-wizard.txt:287
msgid ""
"Returns an :class:`~django.db.models.Model` object which will be passed as "
"the :attr:`~django.forms.ModelForm.instance` argument when instantiating the "
"ModelForm for step ``step``.  If no instance object was provided while "
"initializing the form wizard, ``None`` will be returned."
msgstr ""

# f581793e86d94c39ae52e8624d3ac9f0
#: ../../ref/contrib/formtools/form-wizard.txt:299
msgid ""
"Returns the template context for a step. You can overwrite this method to "
"add more data for all or some steps. This method returns a dictionary "
"containing the rendered form step."
msgstr ""

# dbd8bf85c1cf446b90f5331a4e59dca4
#: ../../ref/contrib/formtools/form-wizard.txt:303
msgid "The default template context variables are:"
msgstr ""

# a09b3398158841a9b34a5bf334d1d5a9
#: ../../ref/contrib/formtools/form-wizard.txt:305
msgid "Any extra data the storage backend has stored"
msgstr ""

# c0bdc7df005b40789c30f5639a164110
#: ../../ref/contrib/formtools/form-wizard.txt:306
msgid "``form`` -- form instance of the current step"
msgstr ""

# e69e7e653220496098f5c1173395f477
#: ../../ref/contrib/formtools/form-wizard.txt:307
msgid "``wizard`` -- the wizard instance itself"
msgstr ""

# a2d6587516244999930fc9a51f1219da
#: ../../ref/contrib/formtools/form-wizard.txt:309
msgid "Example to add extra variables for a specific step::"
msgstr ""

# f2b56aacac71404a8647c0e08b892ad7
#: ../../ref/contrib/formtools/form-wizard.txt:319
msgid ""
"This method returns a prefix for use by the storage backends. Backends use "
"the prefix as a mechanism to allow data to be stored separately for each "
"wizard. This allows wizards to store their data in a single backend without "
"overwriting each other."
msgstr ""

# e2a788ce05ca428f95c94e667808a6c9
#: ../../ref/contrib/formtools/form-wizard.txt:324
msgid ""
"You can change this method to make the wizard data prefix more unique to, e."
"g. have multiple instances of one wizard in one session."
msgstr ""

# f36152451f844296ac946d385c31c943
# 665181f0684f40aeb0dc35cc7b8bbad0
# bcd923108c63489e846e115941c5ef1b
# 327f5d09072a42a4a4e941f6d58c3d50
# 494e4114878648cf9ba4686900fb30b7
# 239fdf592f844307b4823a09efe023a7
# c02873f5c9bb41e8a557966f5ef0297d
#: ../../ref/contrib/formtools/form-wizard.txt:327
#: ../../ref/contrib/formtools/form-wizard.txt:380
#: ../../ref/contrib/formtools/form-wizard.txt:396
#: ../../ref/contrib/formtools/form-wizard.txt:408
#: ../../ref/contrib/formtools/form-wizard.txt:418
#: ../../ref/contrib/formtools/form-wizard.txt:428
#: ../../ref/contrib/formtools/form-wizard.txt:606
msgid "Default implementation::"
msgstr ""

# ca56fd1a062b439aae5c5caf770d0e78
#: ../../ref/contrib/formtools/form-wizard.txt:335
msgid ""
"This method constructs the form for a given ``step``. If no ``step`` is "
"defined, the current step will be determined automatically. The method gets "
"three arguments:"
msgstr ""

# da5c95b7b1864657bb62558c82790840
#: ../../ref/contrib/formtools/form-wizard.txt:339
msgid "``step`` -- The step for which the form instance should be generated."
msgstr ""

# 22a182a68460418aa9358a55e1911d1d
#: ../../ref/contrib/formtools/form-wizard.txt:340
msgid "``data`` -- Gets passed to the form's data argument"
msgstr ""

# 3e05b5f5e5844db08c4809516ae959be
#: ../../ref/contrib/formtools/form-wizard.txt:341
msgid "``files`` -- Gets passed to the form's files argument"
msgstr ""

# fc904f27395742558561682c558337a0
#: ../../ref/contrib/formtools/form-wizard.txt:343
msgid ""
"You can override this method to add extra arguments to the form instance."
msgstr ""

# f315e756fcd74e2dbea69f40ece5642a
#: ../../ref/contrib/formtools/form-wizard.txt:345
msgid "Example code to add a user attribute to the form on step 2::"
msgstr ""

# 63b89a1b1b6b45889240ab548761972a
#: ../../ref/contrib/formtools/form-wizard.txt:355
msgid ""
"Hook for modifying the wizard's internal state, given a fully validated :"
"class:`~django.forms.Form` object. The Form is guaranteed to have clean, "
"valid data."
msgstr ""

# 2506f8bbc8304744b459fb7d3abfaa7d
#: ../../ref/contrib/formtools/form-wizard.txt:359
msgid ""
"This method gives you a way to post-process the form data before the data "
"gets stored within the storage backend. By default it just returns the "
"``form.data`` dictionary. You should not manipulate the data here but you "
"can use it to do some extra work if needed (e.g. set storage extra data)."
msgstr ""

# 06235d5cecad41ee93fa303b1e816309
#: ../../ref/contrib/formtools/form-wizard.txt:364
msgid ""
"Note that this method is called every time a page is rendered for *all* "
"submitted steps."
msgstr ""

# 0001b38c3acd4d919b365648a9c41763
#: ../../ref/contrib/formtools/form-wizard.txt:374
msgid ""
"This method gives you a way to post-process the form files before the files "
"gets stored within the storage backend. By default it just returns the "
"``form.files`` dictionary. You should not manipulate the data here but you "
"can use it to do some extra work if needed (e.g. set storage extra data)."
msgstr ""

# aef907940d944c448c0a19f8846c6147
#: ../../ref/contrib/formtools/form-wizard.txt:387
msgid ""
"When the wizard thinks all steps have passed it revalidates all forms with "
"the data from the backend storage."
msgstr ""

# c9f1c55b19c848b6806e2cee7e084bcb
#: ../../ref/contrib/formtools/form-wizard.txt:390
msgid ""
"If any of the forms don't validate correctly, this method gets called. This "
"method expects two arguments, ``step`` and ``form``."
msgstr ""

# 2a35568d82fe4fff9f8cdec45ead887a
#: ../../ref/contrib/formtools/form-wizard.txt:393
msgid ""
"The default implementation resets the current step to the first failing form "
"and redirects the user to the invalid form."
msgstr ""

# d658a81e8dd8435d9cce03d58a531618
#: ../../ref/contrib/formtools/form-wizard.txt:404
msgid ""
"This method fetches the data from the ``form`` Form instance and returns the "
"dictionary. You can use this method to manipulate the values before the data "
"gets stored in the storage backend."
msgstr ""

# e923cbff380f4fac94a5a8dc1a7d7982
#: ../../ref/contrib/formtools/form-wizard.txt:415
msgid ""
"This method returns the form files. You can use this method to manipulate "
"the files before the data gets stored in the storage backend."
msgstr ""

# 1a73ad01c23142cc93f133b369f41d4d
#: ../../ref/contrib/formtools/form-wizard.txt:425
msgid ""
"This method gets called after the GET or POST request has been handled. You "
"can hook in this method to, e.g. change the type of HTTP response."
msgstr ""

# 39ff8145f09f43009a2c12be26a364f7
#: ../../ref/contrib/formtools/form-wizard.txt:436
msgid "Providing initial data for the forms"
msgstr ""

# 6c35ca7b68fe4ab7bebb9e2022500e30
#: ../../ref/contrib/formtools/form-wizard.txt:440
msgid ""
"Initial data for a wizard's :class:`~django.forms.Form` objects can be "
"provided using the optional :attr:`~Wizard.initial_dict` keyword argument. "
"This argument should be a dictionary mapping the steps to dictionaries "
"containing the initial data for each step. The dictionary of initial data "
"will be passed along to the constructor of the step's :class:`~django.forms."
"Form`::"
msgstr ""

# d3a2b0fc7aa24873a1f2b3a845c865eb
#: ../../ref/contrib/formtools/form-wizard.txt:461
msgid ""
"The ``initial_dict`` can also take a list of dictionaries for a specific "
"step if the step is a ``FormSet``."
msgstr ""

# 060e2444175c4c0d9d2c884daa5dc9ca
#: ../../ref/contrib/formtools/form-wizard.txt:467
msgid "Handling files"
msgstr ""

# 28cdba851ee1425b9507dbd16424996c
#: ../../ref/contrib/formtools/form-wizard.txt:469
msgid ""
"To handle :class:`~django.forms.FileField` within any step form of the "
"wizard, you have to add a :attr:`file_storage` to your :class:`WizardView` "
"subclass."
msgstr ""

# 2768969bf6c54d39a3fe93f81f010d94
#: ../../ref/contrib/formtools/form-wizard.txt:472
msgid ""
"This storage will temporarily store the uploaded files for the wizard. The :"
"attr:`file_storage` attribute should be a :class:`~django.core.files.storage."
"Storage` subclass."
msgstr ""

# 6ff0776ff74c45b9947890db59d55dee
#: ../../ref/contrib/formtools/form-wizard.txt:478
msgid ""
"Please remember to take care of removing old files as the :class:"
"`WizardView` won't remove any files, whether the wizard gets finished "
"correctly or not."
msgstr ""

# 1eaef89833d84ad6aa76f72154c292c7
#: ../../ref/contrib/formtools/form-wizard.txt:483
msgid "Conditionally view/skip specific steps"
msgstr ""

# 8ce1e4edd0884628a9e255ced1c1d6f2
#: ../../ref/contrib/formtools/form-wizard.txt:487
msgid ""
"The :meth:`~WizardView.as_view` method accepts a ``condition_dict`` "
"argument. You can pass a dictionary of boolean values or callables. The key "
"should match the steps names (e.g. '0', '1')."
msgstr ""

# d207a9b4711a414db8818b7d0a739ae8
#: ../../ref/contrib/formtools/form-wizard.txt:491
msgid ""
"If the value of a specific step is callable it will be called with the :"
"class:`WizardView` instance as the only argument. If the return value is "
"true, the step's form will be used."
msgstr ""

# 21906272dfe54f3bb952b1422e616c63
#: ../../ref/contrib/formtools/form-wizard.txt:495
msgid ""
"This example provides a contact form including a condition. The condition is "
"used to show a message form only if a checkbox in the first step was checked."
msgstr ""

# 1beb42f7ad244f5b803000148e5526c4
#: ../../ref/contrib/formtools/form-wizard.txt:498
msgid "The steps are defined in a ``forms.py`` file::"
msgstr ""

# fdbc788866c749149df7b24814ce654d
#: ../../ref/contrib/formtools/form-wizard.txt:510
msgid "We define our wizard in a ``views.py``::"
msgstr ""

# e91a550e862446c0a2600ebfc873329d
#: ../../ref/contrib/formtools/form-wizard.txt:528
msgid "We need to add the ``ContactWizard`` to our ``urls.py`` file::"
msgstr ""

# 30af6dd6b96f4724b4646461b0ccfc71
#: ../../ref/contrib/formtools/form-wizard.txt:543
msgid ""
"As you can see, we defined a ``show_message_form_condition`` next to our :"
"class:`WizardView` subclass and added a ``condition_dict`` argument to the :"
"meth:`~WizardView.as_view` method. The key refers to the second wizard step "
"(because of the zero based step index)."
msgstr ""

# 34ab74c9d6134bfe965bac61d57e3bed
#: ../../ref/contrib/formtools/form-wizard.txt:549
msgid "How to work with ModelForm and ModelFormSet"
msgstr ""

# 952932539077480bad58186995716ef0
#: ../../ref/contrib/formtools/form-wizard.txt:553
msgid ""
"WizardView supports :doc:`ModelForms </topics/forms/modelforms>` and :ref:"
"`ModelFormSets <model-formsets>`. Additionally to :attr:`~WizardView."
"initial_dict`, the :meth:`~WizardView.as_view` method takes an "
"``instance_dict`` argument that should contain instances of ``ModelForm`` "
"and ``ModelFormSet``.  Similarly to :attr:`~WizardView.initial_dict`, these "
"dictionary key values should be equal to the step number in the form list."
msgstr ""

# 76f133c9de6e47159f8551aa791acb8f
#: ../../ref/contrib/formtools/form-wizard.txt:561
msgid "Usage of ``NamedUrlWizardView``"
msgstr ""

# 552e6537d838434c9a83ac2944b7e25b
#: ../../ref/contrib/formtools/form-wizard.txt:565
msgid ""
"There is a :class:`WizardView` subclass which adds named-urls support to the "
"wizard. By doing this, you can have single urls for every step."
msgstr ""

# 201eb34f8f5744d08ff05a27d04fd10c
#: ../../ref/contrib/formtools/form-wizard.txt:568
msgid "To use the named urls, you have to change the ``urls.py``."
msgstr ""

# b0855711c82442bfad52a9a11424ac85
#: ../../ref/contrib/formtools/form-wizard.txt:570
msgid ""
"Below you will see an example of a contact wizard with two steps, step 1 "
"with \"contactdata\" as its name and step 2 with \"leavemessage\" as its "
"name."
msgstr ""

# 4568c1dcb4514557a1d1cf19562cb11d
#: ../../ref/contrib/formtools/form-wizard.txt:573
msgid ""
"Additionally you have to pass two more arguments to the :meth:`~WizardView."
"as_view` method:"
msgstr ""

# afab1b4319e94fb883f246de861f4799
#: ../../ref/contrib/formtools/form-wizard.txt:576
msgid "``url_name`` -- the name of the url (as provided in the urls.py)"
msgstr ""

# 4f54606a3011449199d4dc30e494d48d
#: ../../ref/contrib/formtools/form-wizard.txt:577
msgid "``done_step_name`` -- the name in the url for the done step"
msgstr ""

# c1d8dcdddeb44e9c862eb3ddd0a14d0b
#: ../../ref/contrib/formtools/form-wizard.txt:579
msgid "Example code for the changed ``urls.py`` file::"
msgstr ""

# dc51fab4ef8d488d84615e44a0b57b37
#: ../../ref/contrib/formtools/form-wizard.txt:600
msgid "Advanced ``NamedUrlWizardView`` methods"
msgstr ""

# cc61f28c15cd4804a800023d49cfbc6e
#: ../../ref/contrib/formtools/form-wizard.txt:604
msgid "This method returns the URL for a specific step."
msgstr ""

# 1acc1a4a43bf4359bbca076f08654f7c
#: ../../ref/contrib/formtools/index.txt:2
msgid "django.contrib.formtools"
msgstr ""

# 8c838c75148049978d0521bab37610d9
#: ../../ref/contrib/formtools/index.txt:4
msgid ""
"A set of high-level abstractions for Django forms (:mod:`django.forms`)."
msgstr ""

# f5e0dd368c0c403e89027075fa008267
#: ../../ref/contrib/gis/admin.txt:5
msgid "GeoDjango's admin site"
msgstr ""

# 6e0a62d148d34c29acb7c26ede3df931
#: ../../ref/contrib/gis/admin.txt:12
msgid "``GeoModelAdmin``"
msgstr ""

# 5edde985d24247ee874dab3cef680ad8
#: ../../ref/contrib/gis/admin.txt:18
msgid "The default center longitude."
msgstr ""

# 795dfe00cacf433d92f0c85e5a3fcd23
#: ../../ref/contrib/gis/admin.txt:22
msgid "The default center latitude."
msgstr ""

# 1ec94ca6f07641cea04780fb348c4383
#: ../../ref/contrib/gis/admin.txt:26
msgid "The default zoom level to use.  Defaults to 18."
msgstr ""

# 6b77187bb7ec459e889c66e40c57b307
#: ../../ref/contrib/gis/admin.txt:30
msgid "Sequence of URLs to any extra JavaScript to include."
msgstr ""

# 79fcf7c8981541b3b0fa52690de1c3a3
#: ../../ref/contrib/gis/admin.txt:34
msgid ""
"Override the template used to generate the JavaScript slippy map. Default is "
"``'gis/admin/openlayers.html'``."
msgstr ""

# c64dbaec6bf54c478bb2c3abbd168f72
#: ../../ref/contrib/gis/admin.txt:39
msgid "Width of the map, in pixels.  Defaults to 600."
msgstr ""

# 4490d6d921914dc5a99986d3f669877d
#: ../../ref/contrib/gis/admin.txt:43
msgid "Height of the map, in pixels.  Defaults to 400."
msgstr ""

# 0a932c65aae4432688d09421c94ff8bb
#: ../../ref/contrib/gis/admin.txt:47
msgid ""
"Link to the URL of the OpenLayers JavaScript.  Defaults to ``'http://"
"openlayers.org/api/2.8/OpenLayers.js'``."
msgstr ""

# 3a6450a2e97941338d623c489e654c41
#: ../../ref/contrib/gis/admin.txt:53
msgid ""
"Defaults to ``True``.  When set to ``False``, disables editing of existing "
"geometry fields in the admin."
msgstr ""

# e4d77e9f23114c6597064779df891bd8
#: ../../ref/contrib/gis/admin.txt:58
msgid ""
"This is different from adding the geometry field to :attr:`~django.contrib."
"admin.ModelAdmin.readonly_fields`, which will only display the WKT of the "
"geometry. Setting ``modifiable=False``, actually displays the geometry in a "
"map, but disables the ability to edit its vertices."
msgstr ""

# 0af70ca753d14a36a4ec331ba23d127d
# 691fdcfc39d949b5b96dbc48f457a5de
#: ../../ref/contrib/gis/admin.txt:65 ../../ref/contrib/gis/tutorial.txt:763
msgid "``OSMGeoAdmin``"
msgstr ""

# 533388877ee241098f374e9c3f8df4cc
#: ../../ref/contrib/gis/admin.txt:69
msgid ""
"A subclass of :class:`GeoModelAdmin` that uses a spherical mercator "
"projection with `OpenStreetMap <http://openstreetmap.org/>`_ street data "
"tiles. See the :ref:`OSMGeoAdmin introduction <osmgeoadmin-intro>` in the "
"tutorial for a usage example."
msgstr ""

# 2dc76de03c734e1c9f7cc0d256bb4cb3
#: ../../ref/contrib/gis/commands.txt:5
msgid "GeoDjango Management Commands"
msgstr ""

# 13f27ec8ee3b4f188116e8b539433cfb
# c6abd3b514274fefb1c9bb136f2a5aa0
#: ../../ref/contrib/gis/commands.txt:8 ../../ref/django-admin.txt:249
msgid "inspectdb"
msgstr ""

# d2f2ebcd04c84944b8b8c29e18c34ed5
#: ../../ref/contrib/gis/commands.txt:12
msgid ""
"When :mod:`django.contrib.gis` is in your :setting:`INSTALLED_APPS`, the :"
"djadmin:`inspectdb` management command is overridden with one from "
"GeoDjango. The overridden command is spatially-aware, and places geometry "
"fields in the auto-generated model definition, where appropriate."
msgstr ""

# 953133abada9471ba4def824aafc5355
#: ../../ref/contrib/gis/commands.txt:18
msgid "ogrinspect <data_source> <model_name>"
msgstr ""

# 28335aedc2944528a046732a4f2e0ab4
#: ../../ref/contrib/gis/commands.txt:22
msgid ""
"The ``ogrinpsect`` management command will inspect the given OGR-compatible :"
"class:`~django.contrib.gis.gdal.DataSource` (e.g., a shapefile) and will "
"output a GeoDjango model with the given model name.  There's a detailed "
"example of using ``ogrinspect`` :ref:`in the tutorial <ogrinspect-intro>`."
msgstr ""

# af2314f5a34445809c5fb53e6c888397
#: ../../ref/contrib/gis/commands.txt:29
msgid ""
"Use a comma separated list of OGR field names to add the ``blank=True`` "
"keyword option to the field definition.  Set with ``true`` to apply to all "
"applicable fields."
msgstr ""

# 8e54d1388d534644a5ae07ac41a65a42
#: ../../ref/contrib/gis/commands.txt:35
msgid ""
"Use a comma separated list of OGR float fields to generate :class:`~django."
"db.models.DecimalField` instead of the default :class:`~django.db.models."
"FloatField`. Set to ``true`` to apply to all OGR float fields."
msgstr ""

# f16aa184ad7549e6b7061f49cdff5727
#: ../../ref/contrib/gis/commands.txt:42
msgid ""
"Specifies the model attribute name to use for the geometry field. Defaults "
"to ``'geom'``."
msgstr ""

# 154d4456ea4d476e9ef8d9f1561196d3
#: ../../ref/contrib/gis/commands.txt:47
msgid ""
"The key for specifying which layer in the OGR :class:`~django.contrib.gis."
"gdal.DataSource` source to use. Defaults to 0 (the first layer). May be an "
"integer or a string identifier for the :class:`~django.contrib.gis.gdal."
"Layer`."
msgstr ""

# 8db6cfd20a0d4ba58551bb6272fec3b0
#: ../../ref/contrib/gis/commands.txt:54
msgid ""
"Automatically generate a mapping dictionary for use with :class:`~django."
"contrib.gis.utils.LayerMapping`."
msgstr ""

# d7042db382cf45818a2cb633b6a96855
#: ../../ref/contrib/gis/commands.txt:59
msgid ""
"When generating the geometry field, treat it as a geometry collection. For "
"example, if this setting is enabled then a :class:`~django.contrib.gis.db."
"models.MultiPolygonField` will be placed in the generated model rather than :"
"class:`~django.contrib.gis.db.models.PolygonField`."
msgstr ""

# 9f169d5b86f6413c9610dccf2c1912a4
#: ../../ref/contrib/gis/commands.txt:67
msgid ""
"Generates a ``__unicode__`` routine on the model that will return the the "
"given field name."
msgstr ""

# 99152c2c9df7435996077fb872631372
#: ../../ref/contrib/gis/commands.txt:72
msgid ""
"Suppresses the ``from django.contrib.gis.db import models`` import statement."
msgstr ""

# 893ebafef1be49179c4e0227c56c02eb
#: ../../ref/contrib/gis/commands.txt:76
msgid ""
"Use a comma separated list of OGR field names to add the ``null=True`` "
"keyword option to the field definition.  Set with ``true`` to apply to all "
"applicable fields."
msgstr ""

# 76fa038a6c854178a6e6e6129da757cc
#: ../../ref/contrib/gis/commands.txt:82
msgid ""
"The SRID to use for the geometry field.  If not set, ``ogrinspect`` attempts "
"to automatically determine of the SRID of the data source."
msgstr ""

# e9cea9720bf04bab8b1bb925f51be779
#: ../../ref/contrib/gis/db-api.txt:5
msgid "GeoDjango Database API"
msgstr ""

# 18fa0d1c0a8c4bd2af7bc490a081c7d9
#: ../../ref/contrib/gis/db-api.txt:13
msgid "Spatial Backends"
msgstr ""

# c127170c4a77415d9dd1a17a5ec0cf0b
#: ../../ref/contrib/gis/db-api.txt:17
msgid ""
"In Django 1.2, support for :doc:`multiple databases </topics/db/multi-db>` "
"was introduced.  In order to support multiple databases, GeoDjango has "
"segregated its functionality into full-fledged spatial database backends:"
msgstr ""

# 76300222831449f3b543e0842e31321f
#: ../../ref/contrib/gis/db-api.txt:21
msgid ":mod:`django.contrib.gis.db.backends.postgis`"
msgstr ""

# 110f61f86b12494ba1ee4b6cbfc752da
#: ../../ref/contrib/gis/db-api.txt:22
msgid ":mod:`django.contrib.gis.db.backends.mysql`"
msgstr ""

# ab016b2f136b4416a43e13faf4780a75
#: ../../ref/contrib/gis/db-api.txt:23
msgid ":mod:`django.contrib.gis.db.backends.oracle`"
msgstr ""

# b4b7e75d37e24d2892056213c093075d
#: ../../ref/contrib/gis/db-api.txt:24
msgid ":mod:`django.contrib.gis.db.backends.spatialite`"
msgstr ""

# 12565f6f562245c3b06e39f2605900e5
#: ../../ref/contrib/gis/db-api.txt:29
msgid "MySQL Spatial Limitations"
msgstr ""

# 636c1b9d4ca6452582e264dbc617168e
#: ../../ref/contrib/gis/db-api.txt:31
msgid ""
"MySQL's spatial extensions only support bounding box operations (what MySQL "
"calls minimum bounding rectangles, or MBR).  Specifically, `MySQL does not "
"conform to the OGC standard <http://dev.mysql.com/doc/refman/5.1/en/"
"functions-that-test-spatial-relationships-between-geometries.html>`_:"
msgstr ""

# 60dac7457cdc4c66a179b73b98f0ab8f
#: ../../ref/contrib/gis/db-api.txt:35
msgid ""
"Currently, MySQL does not implement these functions [``Contains``, "
"``Crosses``, ``Disjoint``, ``Intersects``, ``Overlaps``, ``Touches``, "
"``Within``] according to the specification.  Those that are implemented "
"return the same result as the corresponding MBR-based functions."
msgstr ""

# c9f723bdf0934146b2226d83b2cc2ed1
#: ../../ref/contrib/gis/db-api.txt:41
msgid ""
"In other words, while spatial lookups such as :lookup:`contains <gis-"
"contains>` are available in GeoDjango when using MySQL, the results returned "
"are really equivalent to what would be returned when using :lookup:"
"`bbcontains` on a different spatial backend."
msgstr ""

# f09d30a78c8247688d400421a36025c0
#: ../../ref/contrib/gis/db-api.txt:48
msgid ""
"True spatial indexes (R-trees) are only supported with MyISAM tables on "
"MySQL. [#fnmysqlidx]_ In other words, when using MySQL spatial extensions "
"you have to choose between fast spatial lookups and the integrity of your "
"data -- MyISAM tables do not support transactions or foreign key constraints."
msgstr ""

# cf0dfe0e33c340e6ae06059f2baaa679
#: ../../ref/contrib/gis/db-api.txt:55
msgid "Creating and Saving Geographic Models"
msgstr ""

# a0088e43d58443428fa8be6834739a8d
#: ../../ref/contrib/gis/db-api.txt:56
msgid ""
"Here is an example of how to create a geometry object (assuming the "
"``Zipcode`` model)::"
msgstr ""

# e267d476d5034196bcec0ef27620edbf
#: ../../ref/contrib/gis/db-api.txt:63
msgid ""
":class:`~django.contrib.gis.geos.GEOSGeometry` objects may also be used to "
"save geometric models::"
msgstr ""

# 348b505282ce477385cead079ee32103
#: ../../ref/contrib/gis/db-api.txt:70
msgid ""
"Moreover, if the ``GEOSGeometry`` is in a different coordinate system (has a "
"different SRID value) than that of the field, then it will be implicitly "
"transformed into the SRID of the model's field, using the spatial database's "
"transform procedure::"
msgstr ""

# 4060d1e4362141f9ae5da921f6acf127
#: ../../ref/contrib/gis/db-api.txt:82
msgid ""
"Thus, geometry parameters may be passed in using the ``GEOSGeometry`` "
"object, WKT (Well Known Text [#fnwkt]_), HEXEWKB (PostGIS specific -- a WKB "
"geometry in hexadecimal [#fnewkb]_), and GeoJSON [#fngeojson]_ (requires "
"GDAL). Essentially, if the input is not a ``GEOSGeometry`` object, the "
"geometry field will attempt to create a ``GEOSGeometry`` instance from the "
"input."
msgstr ""

# bc7b56631c27417fb015617e84fa850d
#: ../../ref/contrib/gis/db-api.txt:88
msgid ""
"For more information creating :class:`~django.contrib.gis.geos.GEOSGeometry` "
"objects, refer to the :ref:`GEOS tutorial <geos-tutorial>`."
msgstr ""

# be0c0892a72e41b5830009691de1564f
# 385d65d7b49044ee8d4294c672f2bde0
# 424e983fb3584de0bd70619c27732145
# 0d17efc58c3c4f6d8186ba5c9823ee82
#: ../../ref/contrib/gis/db-api.txt:94 ../../ref/contrib/gis/db-api.txt:228
#: ../../ref/contrib/gis/geoquerysets.txt:15
#: ../../ref/contrib/gis/tutorial.txt:604
msgid "Spatial Lookups"
msgstr ""

# c483eba5ec824d0ab64e5fd45d05e48a
#: ../../ref/contrib/gis/db-api.txt:96
msgid ""
"GeoDjango's lookup types may be used with any manager method like ``filter()"
"``, ``exclude()``, etc.  However, the lookup types unique to GeoDjango are "
"only available on geometry fields. Filters on 'normal' fields (e.g. :class:"
"`~django.db.models.CharField`) may be chained with those on geographic "
"fields.  Thus, geographic queries take the following general form (assuming  "
"the ``Zipcode`` model used in the :ref:`ref-gis-model-api`)::"
msgstr ""

# 35d22ca831c740429691beb637695596
#: ../../ref/contrib/gis/db-api.txt:111
msgid ""
"In this case, ``poly`` is the geographic field, :lookup:`contains <gis-"
"contains>` is the spatial lookup type, and ``pnt`` is the parameter (which "
"may be a :class:`~django.contrib.gis.geos.GEOSGeometry` object or a string "
"of GeoJSON , WKT, or HEXEWKB)."
msgstr ""

# a7aa1f32bac9408381c2b4066a26a080
#: ../../ref/contrib/gis/db-api.txt:116
msgid ""
"A complete reference can be found in the :ref:`spatial lookup reference "
"<spatial-lookups>`."
msgstr ""

# 1bd02b1e29d74c50ab4f69cc9bcf8df4
#: ../../ref/contrib/gis/db-api.txt:121
msgid ""
"GeoDjango constructs spatial SQL with the :class:`GeoQuerySet`, a subclass "
"of :class:`~django.db.models.query.QuerySet`.  The :class:`GeoManager` "
"instance attached to your model is what enables use of :class:`GeoQuerySet`."
msgstr ""

# 771c3acc84e040d2a7291298c8b5a0a7
#: ../../ref/contrib/gis/db-api.txt:129
msgid "Distance Queries"
msgstr ""

# 1f407de180a5491babac3e8f58913380
# 431fc2a91d7f4cc28774c3d24556f040
#: ../../ref/contrib/gis/db-api.txt:132 ../../ref/contrib/gis/tutorial.txt:6
msgid "Introduction"
msgstr ""

# 92326c4917714deda83aa2b9213d66cc
#: ../../ref/contrib/gis/db-api.txt:133
msgid ""
"Distance calculations with spatial data is tricky because, unfortunately, "
"the Earth is not flat.  Some distance queries with fields in a geographic "
"coordinate system may have to be expressed differently because of "
"limitations in PostGIS.  Please see the :ref:`selecting-an-srid` section in "
"the :ref:`ref-gis-model-api` documentation for more details."
msgstr ""

# 442d5bc3b84443e2940e48d7ec1e5525
# b65d4497851742429478ae690087cfff
#: ../../ref/contrib/gis/db-api.txt:142
#: ../../ref/contrib/gis/geoquerysets.txt:512
msgid "Distance Lookups"
msgstr ""

# 3485107c0c5e4db89702fad05f45fed8
# de8fdc28c08b47909bacdeb5968347fb
# 048dbb9d0bc1495bb41fcf724c232022
# 5d83db727d4745699fe4f6c3b2d330b5
# e6c77fd9ab3147ebadb30be7174fcb08
# c55e7a090e8e41459543b2aa10ee2c72
# dbb9551acedc4b88b9ea2ca52add257e
# 64b280048fac4bb7a1a6ad838da05901
# 7deaac52208c4595967fdb143a3c8c95
# 75428e48cd174e6680ea578bcb239eeb
# 9d753271a06a4111b90ff08e3fa7faa3
# 3f05f57a0d974e079113fb3f1f6281bf
#: ../../ref/contrib/gis/db-api.txt:143
#: ../../ref/contrib/gis/geoquerysets.txt:272
#: ../../ref/contrib/gis/geoquerysets.txt:514
#: ../../ref/contrib/gis/geoquerysets.txt:693
#: ../../ref/contrib/gis/geoquerysets.txt:772
#: ../../ref/contrib/gis/geoquerysets.txt:792
#: ../../ref/contrib/gis/geoquerysets.txt:855
#: ../../ref/contrib/gis/geoquerysets.txt:893
#: ../../ref/contrib/gis/geoquerysets.txt:985
#: ../../ref/contrib/gis/geoquerysets.txt:1081
#: ../../ref/contrib/gis/geoquerysets.txt:1093
#: ../../ref/contrib/gis/geoquerysets.txt:1172
msgid "*Availability*: PostGIS, Oracle, SpatiaLite"
msgstr ""

# fe1d600e6a2a4d288b05139b5207abbb
#: ../../ref/contrib/gis/db-api.txt:145
msgid "The following distance lookups are available:"
msgstr ""

# a8f8825882ee4832aa803e53dfcf6c40
# e731eeb8ec2c414db43b924bd1c16912
#: ../../ref/contrib/gis/db-api.txt:147 ../../ref/contrib/gis/db-api.txt:247
msgid ":lookup:`distance_lt`"
msgstr ""

# ccbd38b587c54f69a66b375b4e7aaf12
# 4909a5e78c804e2a80f0e53291f731ef
#: ../../ref/contrib/gis/db-api.txt:148 ../../ref/contrib/gis/db-api.txt:248
msgid ":lookup:`distance_lte`"
msgstr ""

# 21a4ef4500f6468db599ec1ad76a5625
# 7449f142f9e4462b967a272390b9bd07
#: ../../ref/contrib/gis/db-api.txt:149 ../../ref/contrib/gis/db-api.txt:245
msgid ":lookup:`distance_gt`"
msgstr ""

# 21529549a548437c9c32e22b4c5d4c6f
# 6ec4b5432fd34c86932bb38f6057b928
#: ../../ref/contrib/gis/db-api.txt:150 ../../ref/contrib/gis/db-api.txt:246
msgid ":lookup:`distance_gte`"
msgstr ""

# 649902debf1c47a9b35808cf30e8a58e
# 81b0d5cbc53b49198273007463a3e2bd
#: ../../ref/contrib/gis/db-api.txt:151 ../../ref/contrib/gis/db-api.txt:249
msgid ":lookup:`dwithin`"
msgstr ""

# 0b44e5d02f26479bbeb53bb151692063
#: ../../ref/contrib/gis/db-api.txt:155
msgid ""
"For *measuring*, rather than querying on distances, use the :meth:"
"`GeoQuerySet.distance` method."
msgstr ""

# a1ad4521f0ff40f58b29ac4cf3632d51
#: ../../ref/contrib/gis/db-api.txt:158
msgid "Distance lookups take a tuple parameter comprising:"
msgstr ""

# d05262ece80b40149026a713ff3714e1
#: ../../ref/contrib/gis/db-api.txt:160
msgid "A geometry to base calculations from; and"
msgstr ""

# 7f1d35788cff4c3e9a445d873488ad30
#: ../../ref/contrib/gis/db-api.txt:161
msgid ""
"A number or :class:`~django.contrib.gis.measure.Distance` object containing "
"the distance."
msgstr ""

# eaec51589e3c4cce87ca06c7b66ed829
#: ../../ref/contrib/gis/db-api.txt:163
msgid ""
"If a :class:`~django.contrib.gis.measure.Distance` object is used, it may be "
"expressed in any units (the SQL generated will use units converted to those "
"of the field); otherwise, numeric parameters are assumed to be in the units "
"of the field."
msgstr ""

# c6035147ce7349edab56d2e648c21a5a
#: ../../ref/contrib/gis/db-api.txt:170
msgid ""
"For users of PostGIS 1.4 and below, the routine ``ST_Distance_Sphere`` is "
"used by default for calculating distances on geographic coordinate systems "
"(e.g., WGS84) -- which may only be called with point geometries "
"[#fndistsphere14]_. Thus, geographic distance lookups on traditional PostGIS "
"geometry columns are only allowed on :class:`PointField` model fields using "
"a point for the geometry parameter."
msgstr ""

# 37163c0756c74c9a97b150568933ddfb
#: ../../ref/contrib/gis/db-api.txt:179
msgid ""
"In PostGIS 1.5, ``ST_Distance_Sphere`` does *not* limit the geometry types "
"geographic distance queries are performed with. [#fndistsphere15]_  However, "
"these queries may take a long time, as great-circle distances must be "
"calculated on the fly for *every* row in the query.  This is because the "
"spatial index on traditional geometry fields cannot be used."
msgstr ""

# f0ff4e8a15cf4056b55b03d00ec3e8d6
#: ../../ref/contrib/gis/db-api.txt:185
msgid ""
"For much better performance on WGS84 distance queries, consider using :ref:"
"`geography columns <geography-type>` in your database instead because they "
"are able to use their spatial index in distance queries. You can tell "
"GeoDjango to use a geography column by setting ``geography=True`` in your "
"field definition."
msgstr ""

# 9a4a740a7d4c496db59e52e83332cfa2
#: ../../ref/contrib/gis/db-api.txt:191
msgid ""
"For example, let's say we have a ``SouthTexasCity`` model (from the "
"`GeoDjango distance tests`__ ) on a *projected* coordinate system valid for "
"cities in southern Texas::"
msgstr ""

# 585c8b6af3324feabd832b64a129bdbd
#: ../../ref/contrib/gis/db-api.txt:204
msgid "Then distance queries may be performed as follows::"
msgstr ""

# 056261b3e89f4dd0951dc97811d9f489
#: ../../ref/contrib/gis/db-api.txt:223
msgid "Compatibility Tables"
msgstr ""

# adf3880ce2b1454abc2a564f051d04b4
#: ../../ref/contrib/gis/db-api.txt:230
msgid ""
"The following table provides a summary of what spatial lookups are available "
"for each spatial database backend."
msgstr ""

# eccadfbe75e54b8c8df80cd221551e13
#: ../../ref/contrib/gis/db-api.txt:234
msgid "Lookup Type"
msgstr ""

# 088b47ffd72f428d8380ef5d6ec41357
# 3f0156bf2ed34b0fbc11f9a6dbf8ed61
# 0569813a191f4d1db2fa98e8e8a05688
# c2fc2629b359429594325a72535c0a94
# ba50334cb0fc412197b6a9d3652aba72
# 10aa31ca3e854aa5b178256ce4562a2b
# 341fa1a38c3d4a919b42bef4a71f5fbf
# 419c561fa5af485786029d106c129325
# ab50998521f24572bbc619c05cbc118f
# 268303b0222940928937ff0e308a11f2
# 3283fcb11f8844e5b96fad4466532b2c
# b7d23a4022114047a9a90f11c26b62b2
# 66ce60a02e5145dd9c9eaab665de11d0
# 289358e55cf44e34bda98f151efec584
# 0e95bb2529e54545a4f6a970a883e1e9
# 3d9099504be64156a38b942b290d8ab7
# b595dc9517b34ef0b296f69d93a75176
# 7515294b9bee47aba76577595a8854e0
# 566e5787ef534bbba6a14b5980135828
# 261b11318160442787883ebd63a0610e
# 83061e0c6aeb4eb5b44c102dbe57aeee
# 4a6ef222bc464d81830924277c99f006
#: ../../ref/contrib/gis/db-api.txt:234 ../../ref/contrib/gis/db-api.txt:277
#: ../../ref/contrib/gis/geoquerysets.txt:44
#: ../../ref/contrib/gis/geoquerysets.txt:66
#: ../../ref/contrib/gis/geoquerysets.txt:88
#: ../../ref/contrib/gis/geoquerysets.txt:109
#: ../../ref/contrib/gis/geoquerysets.txt:138
#: ../../ref/contrib/gis/geoquerysets.txt:158
#: ../../ref/contrib/gis/geoquerysets.txt:179
#: ../../ref/contrib/gis/geoquerysets.txt:199
#: ../../ref/contrib/gis/geoquerysets.txt:219
#: ../../ref/contrib/gis/geoquerysets.txt:254
#: ../../ref/contrib/gis/geoquerysets.txt:335
#: ../../ref/contrib/gis/geoquerysets.txt:357
#: ../../ref/contrib/gis/geoquerysets.txt:548
#: ../../ref/contrib/gis/geoquerysets.txt:568
#: ../../ref/contrib/gis/geoquerysets.txt:588
#: ../../ref/contrib/gis/geoquerysets.txt:608
#: ../../ref/contrib/gis/geoquerysets.txt:628
#: ../../ref/contrib/gis/install.txt:225
#: ../../ref/contrib/gis/install.txt:1177 ../../ref/contrib/gis/testing.txt:17
msgid "PostGIS"
msgstr ""

# f2aee05d1a8d4a7382250c17800240c4
# 54e59d6d55324c61993a81dd060931fe
# a95b5a888cd64552bc29298b58f63105
# 53fe916fa8cf47738ce0aed5ae56fcc3
# 1ebdbb2590fe4f1da9d79a6da411836e
# c87beff095d34584abf03f1167d6a9bb
# 81c863f5cc75489a88d9277ce3d9eb5d
# f8664c6f113048a5bea94f59a10fef55
# b386fe0d763a4f2893d752f98deb43b5
# 8859fa7a559a4f319cecb13f879cd377
# ccfb9ff300d444f9a896f08096b1c5a5
# e758d9132946465d832301a83ee1c770
# 09c611b927e04c07a12643a2544b6de8
# 773795cb5969452181381cb0974a96b5
# 8b80020b1dd242f78537e0fa7aa18ee5
# 9fd07ea4d9d04b0b994172289c53da39
#: ../../ref/contrib/gis/db-api.txt:234 ../../ref/contrib/gis/db-api.txt:277
#: ../../ref/contrib/gis/geoquerysets.txt:110
#: ../../ref/contrib/gis/geoquerysets.txt:159
#: ../../ref/contrib/gis/geoquerysets.txt:180
#: ../../ref/contrib/gis/geoquerysets.txt:220
#: ../../ref/contrib/gis/geoquerysets.txt:255
#: ../../ref/contrib/gis/geoquerysets.txt:302
#: ../../ref/contrib/gis/geoquerysets.txt:337
#: ../../ref/contrib/gis/geoquerysets.txt:359
#: ../../ref/contrib/gis/geoquerysets.txt:549
#: ../../ref/contrib/gis/geoquerysets.txt:569
#: ../../ref/contrib/gis/geoquerysets.txt:589
#: ../../ref/contrib/gis/geoquerysets.txt:609
#: ../../ref/contrib/gis/geoquerysets.txt:629
#: ../../ref/contrib/gis/install.txt:68
msgid "Oracle"
msgstr ""

# ef35be4dd5884af594ae6b4070e9b826
#: ../../ref/contrib/gis/db-api.txt:234
msgid "MySQL [#]_"
msgstr ""

# 4ab2d201b08f48d4afa7a1230e5b39f3
# b920420ac1664d20b5932d8198111073
# 7ad6d2f212ce4ccba6b5f3be34199984
# 068b10dbdd394d58b744043212d8af5f
# 66e648302f954234a514fb6a69b88543
# d314880cbcce4b3da6e7cecfa80e6305
# 0e1e03acd8674131888b546172cb7a6b
# 85cc0c09bd8d401facb986487239593c
# fd648dbb1cec4c3b880ec1760b19a3e5
# d73b69688da04a1b986a41cdb0d18069
# 69e7bb4c2de24d3e819b7d5a3d31a6af
# ee42ae377d544ed089f53303c137ea87
# dbcac349cec34191a5e53109e5bea5db
# bbb22c9dad054f5bbb64771ffd1b6af3
# d2579db6be1048f98867970167a9d7f0
# 9d064c1b3baa4df7a46f726ae0c149c7
# 58d864c801804d6199781d004626dd7f
# e33160c909d049e6be0d4296fedb815f
#: ../../ref/contrib/gis/db-api.txt:234 ../../ref/contrib/gis/db-api.txt:277
#: ../../ref/contrib/gis/geoquerysets.txt:46
#: ../../ref/contrib/gis/geoquerysets.txt:68
#: ../../ref/contrib/gis/geoquerysets.txt:90
#: ../../ref/contrib/gis/geoquerysets.txt:112
#: ../../ref/contrib/gis/geoquerysets.txt:200
#: ../../ref/contrib/gis/geoquerysets.txt:222
#: ../../ref/contrib/gis/geoquerysets.txt:257
#: ../../ref/contrib/gis/geoquerysets.txt:338
#: ../../ref/contrib/gis/geoquerysets.txt:360
#: ../../ref/contrib/gis/geoquerysets.txt:550
#: ../../ref/contrib/gis/geoquerysets.txt:570
#: ../../ref/contrib/gis/geoquerysets.txt:590
#: ../../ref/contrib/gis/geoquerysets.txt:610
#: ../../ref/contrib/gis/install.txt:363 ../../ref/contrib/gis/install.txt:869
#: ../../ref/contrib/gis/testing.txt:115
msgid "SpatiaLite"
msgstr ""

# 02c8ae8c14d04d4e9d5ad2ebe5c6d2f9
#: ../../ref/contrib/gis/db-api.txt:236
msgid ":lookup:`bbcontains`"
msgstr ""

# fc64cf131f05438a84b5b061f5127951
# 1906d8f743644576a383f0097906c0c2
# b9c900c0296b4e4cbf33e96ad2aea64b
# 6fbf30ddace14650b0450bebaf5af429
# 3856d7a4691c4d4390b4c1da391c1eb8
# 8086fcd67e0d462ca6418bf2ac68956c
# f3c544a9bf2a447bbe3cea34785393be
# 66865fb805a54ca68c3055cfe2c02e0b
# ef70a285bacf43e09bed2c614895f219
# 1a19132f02cb4b68bc84d3d311718f31
# bcadf063edc944b5afd49cde2b79797a
# c7e410eccc20445fb154603848276a0e
# c0cf3a467e3f49168c102a60932af15b
# 02b8e350e3cb4f59ae8df2a0281012f1
# e46ac3c2a2f84b999bbcdcb801a822ec
# 4903a568af944aef8f4764eb975e5bbc
# 55919e2001e24c8292c5f4d6fb8240fe
# 1a3b4267cf724481acac902d0705f26d
# 990bb4a6c5ac4c2da16005bea9895254
# 58dc4a1430e44a2c8e0de7ecb8b67424
# 7ab139b98ff54443bf82332f370855cb
# 57ba5380a5d2482e8cfb33cfc1d4dfee
# 4cfcf4187bbe4ea2953cb30aab2930d3
# 71858062f8db4c5b9798c3597eec9bdb
# ea5a6014e82c49f6848a8df41aa874aa
# 4e7ca0a5f9334333b55c305ed07c8014
# 249751a178044094a33181a9cf8b7b88
# d94d6a29741748c6b45f7dc38baa69de
# 0f2370520cb74884abc99177787e3b57
# 599bd675110c4da4b1dfb5ab37c28439
# 2817ed9e0200415fad0bfaf4484aac88
# cb5afbd83e134f3a8464b0bbb0536f10
# b4cf292245b54dac8f2d05ffe85416bb
# 44e9c3abe8774b7b8c0db3ca8dece09e
# 8a5acc514ba1438280476c87fa2cec69
# bdef62fdcce04ac38a5e9e4877318af4
# 1b130dd4355a421ca49bf8b602287492
# f58ff21442994db088c491f5de721865
# 40af81243f614806961582aa232e057e
# 9836cb5892d94511b3e6317fbf9c5f66
# 6b40c4ab8f2d42e4afccbf51b832c2c5
# 2c9673b61d384c90ad419daa1a5e0ec4
# 65f7eb506a2a4fc89be5a4bf1af7e9cb
# 168eeaef68de46c9a68fcd57d70f182d
# 64e74e6e0b324dd9bf232d4e53764bcf
# fc67ccf4206042deb04293169b87162d
# 15c4d7710ced4062b44d02138d466a59
# f24955fa0189432b9985403ae28ec450
# 678abffcb0fe4d56b70a8902971300ad
# 08c6b4fc08f64269b88fcf363fd24b42
# 7469874627e8486d8bcb20e72392857f
# bb3bb8fa97b74cdbb21d08fc22642c41
# 330bcd902b5443d4b92733a43f19b74a
# 6da1626c6a2449deabbd7e9133e59b9e
# 49c246c58d684a0fa7acae9853e30bd0
# 0622ba52edae40089bf5f825ba70b259
# 49813e8418a743729deec184b98fbcdd
# 3c8d9b467db241b1950fd87cc2df98e2
# 2763d03f4bd44b9493ac832b70cb16b3
# 46c479be095944549e9c47888e77d515
# c5b7cde9227b4e37ab5755d27ea5967a
# df48c26c6e314f928e2b262d35474e34
# bf59c4b9810342a5a30993f12fdc6875
# 654df962ef4e46d28d9f3b5b6d9cf580
# aff6e6e6009a48529f7ecbb8bcf338ca
# 1fe17105d82e4c9d9a4d1c2f04daa763
# 76a58d2b64a34af5a0bdf428b30ca141
# c145f3fc9561456ab0f856004e78d4a4
# 51383d0411a84e49944a8c613a2af4f6
# 51ce06c1da28469e9fb7d4cea3ea0eb1
# cda18456dbac4b44bab3f7b08b15f019
# 482e392bd5264f728e07a323ce30f2a0
# 9a999499b8b6491885d6edfa08432f36
# fa38588c2ce44634a9f91be611834e60
# 9a6c0098d2f34169a5ef95cb04cd2b5d
# c98f1c8905e543bb9affe539d0ae516e
# c79fe476b28949cd949b33869a6d1da0
# 38361e4726a94521a9c18f271ff303f6
# 3ddcb8f83502489186a52f5361ac96b0
# 8af602da66ff42df9a12d3a7a2047ba3
# 0ce7caf3ae7444a39c183f84a8250d72
# b61c73ee62b7481880b9192fe787cd54
# 782ca273ad194a5fb6255d43af267f73
# b10bf7055c6e48a8bc7b5748cf549b59
# 92c0e38e9d95498a9d8e0ccea21c5c1b
# 68fef45985ec46be9f266e76b2c0ef81
# 269e5b4d637d4cf9a2d52a798ac95c86
# 9882a206876840e99d57a06553e23144
# de0712e1adcd41579e7c54970e373278
# 7082b26f79184ee391449de3491b2e56
# 75c09bcef6d14bacb83a78ecb0d9d18d
# 7883fea367b64f7a9856daf7f1f19592
# 698523138a2445c8ac59be8871eeb01f
# 241e55e53bac46c8b592d628de099ebc
# 518cc9f93fa144f792bcf9671019c6f9
# f98a962e91454c8bacd6e85b6c41df5f
# c7747e00808e407aa2d85df9913ca8b3
# 743baaba01d942bf8209bab8f7b5193b
# c8fa734e73774d1388401b6becf2c38c
# eeff43f0a77f4c94960719f8d2f606fa
# 00c94b037e634a0b8d01fd9a60fe7a75
# 7704993d64b2410a812aed59b4b28010
# 5d77b98ce1c642fbb175fad97821b020
# d2e4d97dbe45419ea516275e19176929
# c80d4f255ca54b788edeedf69add9701
# ce4a7974c3d54340a339b1a0438f039b
# d8a675f4369c455599f5371ca58c5b61
# 3d6941208de5452d84de9ae623973e21
# 66e0af33a87d4655b372848d2f7b74ed
# 067834b289904bbba8dc0f1969b93296
# 956b067a92f84ca38c36b0d1e269b6c4
# 4e4aeedb995344a7ac14534b68102b88
# 4a6d83ec74bf427c8d032fd94488f6f9
# 5ef0e5a470ac4fd49476844df1f1d4df
# 0104aa0042254b70bea36cfd71c8ef14
# 7a34939f30df4ff2820d66298ecabc01
# 308b7b6cc19a47f3ae7c6ae27b91177a
# 8d93fa9d1d554357a7f0a230de1b8d09
# 083617a7f8464e2ba0550a368af520c1
# 34e919a20b5a4ae7bf82a689b7e534dd
# 2e0d7760fe9c4dacbfb85e719cf884f2
# d04e36e311394efa88c21f7c0d8605e2
# e501e72084ef41f99e08e20f9e2c6a62
# 4e1f0199f4da4da98ff69b7a6d76bfd0
# 786dcbbb2fef46b391311a2ab3bd9700
# fb19f5789fc94d748c8ed7667856fa99
# 71c1b742c68140d387d39ec8e0dc084c
# 34bb9843c5f04e5fa74963ebc88f3866
# 86f7ca3649794e7bbb942df999c56f0f
# 2e652cd7ed2d449c89dc69b72efcdf0e
# e9bccde8d8b647abb469f1a74f235d6f
# 126816b42a704a459f7268f547bdb223
# 67a9cceca7344e1381afaf83c94fa4b6
# 906f33203b534f7896fdbcae3f6d554b
# c6fe535606d845eb89439df429029928
# 378a9cbc70c34c68806896696a774206
# fbc7d3378f824218bd2eb25bf46574c4
# 0465212308374bff8c97f32027db08cf
# f58f7864cf5e48758fd392fed2a667ae
# 26ae1622e4a14acf9aaebd9f56dbfb52
# 5553473f3b324e0d9cada10a89e0baa3
# 004ab125798a4b77a4e2782e3b6590f8
# 91fa2b703ae84dd49ede45882dabd7e9
#: ../../ref/contrib/gis/db-api.txt:236 ../../ref/contrib/gis/db-api.txt:237
#: ../../ref/contrib/gis/db-api.txt:238 ../../ref/contrib/gis/db-api.txt:239
#: ../../ref/contrib/gis/db-api.txt:240 ../../ref/contrib/gis/db-api.txt:241
#: ../../ref/contrib/gis/db-api.txt:242 ../../ref/contrib/gis/db-api.txt:243
#: ../../ref/contrib/gis/db-api.txt:244 ../../ref/contrib/gis/db-api.txt:245
#: ../../ref/contrib/gis/db-api.txt:246 ../../ref/contrib/gis/db-api.txt:247
#: ../../ref/contrib/gis/db-api.txt:248 ../../ref/contrib/gis/db-api.txt:249
#: ../../ref/contrib/gis/db-api.txt:250 ../../ref/contrib/gis/db-api.txt:251
#: ../../ref/contrib/gis/db-api.txt:252 ../../ref/contrib/gis/db-api.txt:253
#: ../../ref/contrib/gis/db-api.txt:254 ../../ref/contrib/gis/db-api.txt:255
#: ../../ref/contrib/gis/db-api.txt:256 ../../ref/contrib/gis/db-api.txt:257
#: ../../ref/contrib/gis/db-api.txt:258 ../../ref/contrib/gis/db-api.txt:259
#: ../../ref/contrib/gis/db-api.txt:260 ../../ref/contrib/gis/db-api.txt:261
#: ../../ref/contrib/gis/db-api.txt:262 ../../ref/contrib/gis/db-api.txt:263
#: ../../ref/contrib/gis/db-api.txt:264 ../../ref/contrib/gis/db-api.txt:265
#: ../../ref/contrib/gis/db-api.txt:279 ../../ref/contrib/gis/db-api.txt:280
#: ../../ref/contrib/gis/db-api.txt:281 ../../ref/contrib/gis/db-api.txt:282
#: ../../ref/contrib/gis/db-api.txt:283 ../../ref/contrib/gis/db-api.txt:284
#: ../../ref/contrib/gis/db-api.txt:285 ../../ref/contrib/gis/db-api.txt:286
#: ../../ref/contrib/gis/db-api.txt:287 ../../ref/contrib/gis/db-api.txt:288
#: ../../ref/contrib/gis/db-api.txt:289 ../../ref/contrib/gis/db-api.txt:290
#: ../../ref/contrib/gis/db-api.txt:291 ../../ref/contrib/gis/db-api.txt:292
#: ../../ref/contrib/gis/db-api.txt:293 ../../ref/contrib/gis/db-api.txt:294
#: ../../ref/contrib/gis/db-api.txt:295 ../../ref/contrib/gis/db-api.txt:296
#: ../../ref/contrib/gis/db-api.txt:297 ../../ref/contrib/gis/db-api.txt:298
#: ../../ref/contrib/gis/db-api.txt:299 ../../ref/contrib/gis/db-api.txt:300
#: ../../ref/contrib/gis/db-api.txt:301 ../../ref/contrib/gis/db-api.txt:302
#: ../../ref/contrib/gis/db-api.txt:303 ../../ref/contrib/gis/db-api.txt:304
#: ../../ref/contrib/gis/db-api.txt:305 ../../ref/contrib/gis/db-api.txt:306
#: ../../ref/contrib/gis/db-api.txt:307 ../../ref/contrib/gis/db-api.txt:308
msgid "X"
msgstr ""

# 4312d75165114c419f105a8f9f711034
# 3bca488671cf421db1141be76a003bd4
#: ../../ref/contrib/gis/db-api.txt:237
#: ../../ref/contrib/gis/model-api.txt:218
msgid ":lookup:`bboverlaps`"
msgstr ""

# e73b6c0bef5c4740a27d3808b2b8c5b9
#: ../../ref/contrib/gis/db-api.txt:238
msgid ":lookup:`contained`"
msgstr ""

# 8c4230b5c7be40188c9e41358d97ae04
#: ../../ref/contrib/gis/db-api.txt:239
msgid ":lookup:`contains <gis-contains>`"
msgstr ""

# b83daf3b6e3a4f9981b760a6c5465a9b
#: ../../ref/contrib/gis/db-api.txt:240
msgid ":lookup:`contains_properly`"
msgstr ""

# c3f82d55d45544faaeb034547e7caa20
# 90b4b520b4c84ee5a8afc08384d18b68
#: ../../ref/contrib/gis/db-api.txt:241
#: ../../ref/contrib/gis/model-api.txt:219
msgid ":lookup:`coveredby`"
msgstr ""

# 0f6ece0a8d9a4fdbaf1003f2ea5082f7
# 0b5ffb5087d8413994f4325154155ea8
#: ../../ref/contrib/gis/db-api.txt:242
#: ../../ref/contrib/gis/model-api.txt:220
msgid ":lookup:`covers`"
msgstr ""

# 646ca87fbce841edbb156564f3da9e54
#: ../../ref/contrib/gis/db-api.txt:243
msgid ":lookup:`crosses`"
msgstr ""

# 143c2371fa6c4f1eaecb58f29ed3c7a5
#: ../../ref/contrib/gis/db-api.txt:244
msgid ":lookup:`disjoint`"
msgstr ""

# 5f8fc521a4fe49dba8c1f913f6dbbb93
#: ../../ref/contrib/gis/db-api.txt:250
msgid ":lookup:`equals`"
msgstr ""

# 09b435c2b0114230b053dc0773529052
#: ../../ref/contrib/gis/db-api.txt:251
msgid ":lookup:`exact`"
msgstr ""

# 7c05d843d61e49a8aff4aa064b75bfc7
# e4af1514aaa446898e854a80525bc04d
#: ../../ref/contrib/gis/db-api.txt:252
#: ../../ref/contrib/gis/model-api.txt:221
msgid ":lookup:`intersects`"
msgstr ""

# f4d47e4c5917439b93b62a9d254317b6
#: ../../ref/contrib/gis/db-api.txt:253
msgid ":lookup:`overlaps`"
msgstr ""

# ee7193608f734ba383f2010a4f352b3b
#: ../../ref/contrib/gis/db-api.txt:254
msgid ":lookup:`relate`"
msgstr ""

# bf34f2a007834f80ae1dd724cd6b03de
#: ../../ref/contrib/gis/db-api.txt:255
msgid ":lookup:`same_as`"
msgstr ""

# d6fea91ab3574d059be44b12fda6c0f5
#: ../../ref/contrib/gis/db-api.txt:256
msgid ":lookup:`touches`"
msgstr ""

# 921ffefa9a28482db3c1ad8f6f7fd70c
#: ../../ref/contrib/gis/db-api.txt:257
msgid ":lookup:`within`"
msgstr ""

# b018045684e1498bb166093952adf1b3
#: ../../ref/contrib/gis/db-api.txt:258
msgid ":lookup:`left`"
msgstr ""

# 64e88a0c6dbd411c99ca4dc42a65c49b
#: ../../ref/contrib/gis/db-api.txt:259
msgid ":lookup:`right`"
msgstr ""

# 277f28c420994f2d8013a7362df7ae36
#: ../../ref/contrib/gis/db-api.txt:260
msgid ":lookup:`overlaps_left`"
msgstr ""

# 3d97eb8677da459a80719abc040e5122
#: ../../ref/contrib/gis/db-api.txt:261
msgid ":lookup:`overlaps_right`"
msgstr ""

# 3bfc1c691c88416784995867ebed0463
#: ../../ref/contrib/gis/db-api.txt:262
msgid ":lookup:`overlaps_above`"
msgstr ""

# e1a05ebf2e7744f1a643a622b5591547
#: ../../ref/contrib/gis/db-api.txt:263
msgid ":lookup:`overlaps_below`"
msgstr ""

# 1f8e89f3faa549c88fc97637af533549
#: ../../ref/contrib/gis/db-api.txt:264
msgid ":lookup:`strictly_above`"
msgstr ""

# 792d5ea8aba142e39f90b8227afab6ea
#: ../../ref/contrib/gis/db-api.txt:265
msgid ":lookup:`strictly_below`"
msgstr ""

# 63421ee4f7854d94a363d0704da7bb86
# 49bc850894314154a3e7c0c703fd3588
# 7ac6b54dd2724cb1b1e3afcdf1394454
#: ../../ref/contrib/gis/db-api.txt:271
#: ../../ref/contrib/gis/geoquerysets.txt:640
#: ../../ref/contrib/gis/tutorial.txt:703
msgid "``GeoQuerySet`` Methods"
msgstr ""

# fbd7a16a07b041c2b298d52bbf1627c5
#: ../../ref/contrib/gis/db-api.txt:272
msgid ""
"The following table provides a summary of what :class:`GeoQuerySet` methods "
"are available on each spatial backend.  Please note that MySQL does not "
"support any of these methods, and is thus excluded from the table."
msgstr ""

# 11b02fed37a243b687db28e0e242f547
#: ../../ref/contrib/gis/db-api.txt:277
msgid "Method"
msgstr ""

# 3abd2245f1484aa4b1e7acd759ecac2d
#: ../../ref/contrib/gis/db-api.txt:279
msgid ":meth:`GeoQuerySet.area`"
msgstr ""

# 0dd9e8f4400742a582f0cb9d07765b4f
#: ../../ref/contrib/gis/db-api.txt:280
msgid ":meth:`GeoQuerySet.centroid`"
msgstr ""

# dc2ceabc64f5420cbd4ddec7eca69af4
#: ../../ref/contrib/gis/db-api.txt:281
msgid ":meth:`GeoQuerySet.collect`"
msgstr ""

# a8de3d8559a64fc2be2950dbf1b6766d
#: ../../ref/contrib/gis/db-api.txt:282
msgid ":meth:`GeoQuerySet.difference`"
msgstr ""

# 415380e0d5b04e1d84fbd593c35007ec
#: ../../ref/contrib/gis/db-api.txt:283
msgid ":meth:`GeoQuerySet.distance`"
msgstr ""

# 27fbbe8192cd43e9ab179b1a3f240925
#: ../../ref/contrib/gis/db-api.txt:284
msgid ":meth:`GeoQuerySet.envelope`"
msgstr ""

# 002b07118e524b3392f6d1e6282eda9e
#: ../../ref/contrib/gis/db-api.txt:285
msgid ":meth:`GeoQuerySet.extent`"
msgstr ""

# 8b66458ca54c444487bc3c65c6afa988
#: ../../ref/contrib/gis/db-api.txt:286
msgid ":meth:`GeoQuerySet.extent3d`"
msgstr ""

# e230da302d584b75988241628bb3b020
#: ../../ref/contrib/gis/db-api.txt:287
msgid ":meth:`GeoQuerySet.force_rhr`"
msgstr ""

# 07e3b06f79a94771a090e54eacf6bea1
#: ../../ref/contrib/gis/db-api.txt:288
msgid ":meth:`GeoQuerySet.geohash`"
msgstr ""

# 48d2e446e81649ef8e2ecfe38f58aac0
#: ../../ref/contrib/gis/db-api.txt:289
msgid ":meth:`GeoQuerySet.geojson`"
msgstr ""

# ff501beaadef483f8f2a19fea1f834c1
#: ../../ref/contrib/gis/db-api.txt:290
msgid ":meth:`GeoQuerySet.gml`"
msgstr ""

# 7388fb5e86da4a7bb74b6eaa5ef8cd8c
#: ../../ref/contrib/gis/db-api.txt:291
msgid ":meth:`GeoQuerySet.intersection`"
msgstr ""

# f85ba56e73ab414280be54183f986582
#: ../../ref/contrib/gis/db-api.txt:292
msgid ":meth:`GeoQuerySet.kml`"
msgstr ""

# 311a4e5b07f1427997055669b9531e51
#: ../../ref/contrib/gis/db-api.txt:293
msgid ":meth:`GeoQuerySet.length`"
msgstr ""

# 523c80361331410ca823b3b1427d94e4
#: ../../ref/contrib/gis/db-api.txt:294
msgid ":meth:`GeoQuerySet.make_line`"
msgstr ""

# 463b141670304da484406cade140da3e
#: ../../ref/contrib/gis/db-api.txt:295
msgid ":meth:`GeoQuerySet.mem_size`"
msgstr ""

# 1a8f709dfed94a7d9c9010c191c77dae
#: ../../ref/contrib/gis/db-api.txt:296
msgid ":meth:`GeoQuerySet.num_geom`"
msgstr ""

# f04026a50d764fdd9ddaaf0e53aefb58
#: ../../ref/contrib/gis/db-api.txt:297
msgid ":meth:`GeoQuerySet.num_points`"
msgstr ""

# 32a83af741a04188b9bf5d89a0450d9f
#: ../../ref/contrib/gis/db-api.txt:298
msgid ":meth:`GeoQuerySet.perimeter`"
msgstr ""

# 06b82a90af1e422f89b60a5366796449
#: ../../ref/contrib/gis/db-api.txt:299
msgid ":meth:`GeoQuerySet.point_on_surface`"
msgstr ""

# 600d15b8ac89407683418b09f2899bb5
#: ../../ref/contrib/gis/db-api.txt:300
msgid ":meth:`GeoQuerySet.reverse_geom`"
msgstr ""

# d6f858f7f1fe404b9a92e001ad39524e
#: ../../ref/contrib/gis/db-api.txt:301
msgid ":meth:`GeoQuerySet.scale`"
msgstr ""

# 3f709a4489ba4019ba0abe319dc1b207
#: ../../ref/contrib/gis/db-api.txt:302
msgid ":meth:`GeoQuerySet.snap_to_grid`"
msgstr ""

# a4edfc2d93524c9eb43a6bee10e28d7e
#: ../../ref/contrib/gis/db-api.txt:303
msgid ":meth:`GeoQuerySet.svg`"
msgstr ""

# 2682296823144823a69b9dbda1f405f2
#: ../../ref/contrib/gis/db-api.txt:304
msgid ":meth:`GeoQuerySet.sym_difference`"
msgstr ""

# d6a5e24f25bc473abc072f2bcc1a51d9
#: ../../ref/contrib/gis/db-api.txt:305
msgid ":meth:`GeoQuerySet.transform`"
msgstr ""

# 13509b1cf00b4868903f27e10c84e08a
#: ../../ref/contrib/gis/db-api.txt:306
msgid ":meth:`GeoQuerySet.translate`"
msgstr ""

# 2b9e6e6a2c6c45df9d0500c1c0542663
#: ../../ref/contrib/gis/db-api.txt:307
msgid ":meth:`GeoQuerySet.union`"
msgstr ""

# a78b573e12ab4359a05f0b7aa3b22975
#: ../../ref/contrib/gis/db-api.txt:308
msgid ":meth:`GeoQuerySet.unionagg`"
msgstr ""

# 889326de10e04bffb2c73c478839e0e0
# a933a70c1cc74280a64a6c23eb34d1f2
# acc21300f145463681ea12aed8f901ff
# ee82800196dc4c939bb83aaba0c66cc5
# 0c82c261f93d4e708d43e3243b0ce38f
# 1f42ffc212db45ae969947efdc582f68
# 5da4b846694a4b2f84164e60dfe911e7
# a8623b75e7104ab3ba4ffb3b3f8a296b
# 9c4489f751284171a889cf2cb0032ab5
#: ../../ref/contrib/gis/db-api.txt:311 ../../ref/contrib/gis/geoip.txt:229
#: ../../ref/contrib/gis/geoquerysets.txt:1245
#: ../../ref/contrib/gis/geos.txt:898 ../../ref/contrib/gis/install.txt:1271
#: ../../ref/contrib/gis/measure.txt:177
#: ../../ref/contrib/gis/model-api.txt:258
#: ../../ref/contrib/gis/sitemaps.txt:25
#: ../../ref/contrib/gis/tutorial.txt:785
msgid "Footnotes"
msgstr ""

# 2afba6efa7ad490fa7c5075d2459f81e
#: ../../ref/contrib/gis/db-api.txt:312
msgid ""
"*See* Open Geospatial Consortium, Inc., `OpenGIS Simple Feature "
"Specification For SQL <http://www.opengis.org/docs/99-049.pdf>`_, Document "
"99-049 (May 5, 1999), at  Ch. 3.2.5, p. 3-11 (SQL Textual Representation of "
"Geometry)."
msgstr ""

# 9629329e550547958945a61d9b2070f7
#: ../../ref/contrib/gis/db-api.txt:313
msgid ""
"*See* `PostGIS EWKB, EWKT and Canonical Forms <http://postgis.refractions."
"net/documentation/manual-1.5/ch04.html#EWKB_EWKT>`_, PostGIS documentation "
"at Ch. 4.1.2."
msgstr ""

# 1f5ddecafe0a4048bab0c0dcc763bf11
#: ../../ref/contrib/gis/db-api.txt:314
msgid ""
"*See* Howard Butler, Martin Daly, Allan Doyle, Tim Schaub, & Christopher "
"Schmidt, `The GeoJSON Format Specification <http://geojson.org/geojson-spec."
"html>`_, Revision 1.0 (June 16, 2008)."
msgstr ""

# 20a8f083c1bf43fa98edf6ced17405fc
#: ../../ref/contrib/gis/db-api.txt:315
msgid ""
"*See* `PostGIS 1.4 documentation <http://postgis.refractions.net/"
"documentation/manual-1.4/ST_Distance_Sphere.html>`_ on "
"``ST_distance_sphere``."
msgstr ""

# 23b66b650473416284beacb3383041cb
#: ../../ref/contrib/gis/db-api.txt:316
msgid ""
"*See* `PostGIS 1.5 documentation <http://postgis.refractions.net/"
"documentation/manual-1.5/ST_Distance_Sphere.html>`_ on "
"``ST_distance_sphere``."
msgstr ""

# 15fde6e6132843dea6ea3f0430a70c14
#: ../../ref/contrib/gis/db-api.txt:317
msgid ""
"*See* `Creating Spatial Indexes <http://dev.mysql.com/doc/refman/5.1/en/"
"creating-spatial-indexes.html>`_ in the MySQL 5.1 Reference Manual:"
msgstr ""

# 3ee911924b4a4a9bb99ee43a31fea30e
#: ../../ref/contrib/gis/db-api.txt:320
msgid ""
"For MyISAM tables, ``SPATIAL INDEX`` creates an R-tree index. For storage "
"engines that support nonspatial indexing of spatial columns, the engine "
"creates a B-tree index. A B-tree index on spatial values will be useful for "
"exact-value lookups, but not for range scans."
msgstr ""

# 7ec13e57c3d9430f9fedc19497a9b8db
#: ../../ref/contrib/gis/db-api.txt:325
msgid "Refer :ref:`mysql-spatial-limitations` section for more details."
msgstr ""

# 3577136cbfea45408a92e99d7b4decbd
#: ../../ref/contrib/gis/deployment.txt:3
msgid "Deploying GeoDjango"
msgstr ""

# 2a9e5f8e35b94a8abbdb3b1fda057686
#: ../../ref/contrib/gis/deployment.txt:7
msgid ""
"GeoDjango uses the GDAL geospatial library which is not thread safe at this "
"time.  Thus, it is *highly* recommended to not use threading when deploying "
"-- in other words, use an appropriate configuration of Apache or the prefork "
"method when using FastCGI through another Web server."
msgstr ""

# 1c0bf12b37c24049935f4f093ed12925
#: ../../ref/contrib/gis/deployment.txt:14
msgid "Apache"
msgstr ""

# 06f524015a794dd782c0494f360f7421
#: ../../ref/contrib/gis/deployment.txt:15
msgid ""
"In this section there are some example ``VirtualHost`` directives for when "
"deploying using either ``mod_python`` or ``mod_wsgi``.  At this time, we "
"recommend ``mod_wsgi``, as it is now officially recommended way to deploy "
"Django applications with Apache.  Moreover, if ``mod_python`` is used, then "
"a prefork version of Apache must also be used.  As long as ``mod_wsgi`` is "
"configured correctly, it does not matter whether the version of Apache is "
"prefork or worker."
msgstr ""

# e20a41167a284de382b9203e6807b3a5
#: ../../ref/contrib/gis/deployment.txt:25
msgid ""
"The ``Alias`` and ``Directory`` configurations in the examples below use an "
"example path to a system-wide installation folder of Django. Substitute in "
"an appropriate location, if necessary, as it may be different than the path "
"on your system."
msgstr ""

# 3a77a9fb4c1a43ddaaf42e5875de69b3
#: ../../ref/contrib/gis/deployment.txt:31
msgid "``mod_wsgi``"
msgstr ""

# 6f7b3a2513564532930e792a43266277
#: ../../ref/contrib/gis/deployment.txt:52
msgid ""
"If the ``WSGIDaemonProcess`` attribute ``threads`` is not set to ``1``, then "
"Apache may crash when running your GeoDjango application.  Increase the "
"number of ``processes`` instead."
msgstr ""

# 98cc1ba97c7645d2b9f0e61535341908
#: ../../ref/contrib/gis/deployment.txt:56
msgid ""
"For more information, please consult Django's :doc:`mod_wsgi documentation </"
"howto/deployment/wsgi/modwsgi>`."
msgstr ""

# 2f9ef3e70e0042d1b6a64883dfd9ab7f
#: ../../ref/contrib/gis/deployment.txt:60
msgid "``mod_python``"
msgstr ""

# 7fbbcd68cf8741e79ed4eed115237f3d
#: ../../ref/contrib/gis/deployment.txt:63
msgid ""
"Support for mod_python will be deprecated in a future release of Django. If "
"you are configuring a new deployment, you are strongly encouraged to "
"consider using :doc:`mod_wsgi </howto/deployment/wsgi/modwsgi>` or any of "
"the other :doc:`supported servers </howto/deployment/index>`."
msgstr ""

# 883f07e5bdc244c4948a9812a31dbf00
#: ../../ref/contrib/gis/deployment.txt:89
msgid ""
"When using ``mod_python`` you *must* be using a prefork version of Apache, "
"or else your GeoDjango application may crash Apache."
msgstr ""

# 28632178e75641719ca8eaaa23482665
#: ../../ref/contrib/gis/deployment.txt:92
msgid ""
"For more information, please consult Django's :doc:`mod_python documentation "
"</howto/deployment/modpython>`."
msgstr ""

# b5d5ce50945143cea3a10feb1df11f0c
#: ../../ref/contrib/gis/deployment.txt:96
msgid "Lighttpd"
msgstr ""

# 39156297f1784def86f27cf90fb24caf
# 299ffed856ef47a19f4704e22ac67f08
#: ../../ref/contrib/gis/deployment.txt:99
#: ../../ref/contrib/gis/deployment.txt:105
msgid "FastCGI"
msgstr ""

# a85bfd361ab4483b965a8123e495ac86
#: ../../ref/contrib/gis/deployment.txt:102
msgid "Nginx"
msgstr ""

# 065adff441d14c1f80b455f98967f625
#: ../../ref/contrib/gis/feeds.txt:3
msgid "Geographic Feeds"
msgstr ""

# 03a646b0510c4e9695772155114e8584
#: ../../ref/contrib/gis/feeds.txt:8
msgid ""
"GeoDjango has its own :class:`Feed` subclass that may embed location "
"information in RSS/Atom feeds formatted according to either the `Simple "
"GeoRSS`__ or `W3C Geo`_ standards.  Because GeoDjango's syndication API is a "
"superset of Django's, please consult :doc:`Django's syndication "
"documentation </ref/contrib/syndication>` for details on general usage."
msgstr ""

# 28fc1281751e42c98a963efd2fc7652a
# 2e9e60f309ac4f1b97a0d51f3ec14d70
# e2a55ae2d836467390e2d6cd4756c558
# 09bbccda5a984282ad5680c4354a00b7
# 8aaeca0be13a4db7818bfca0a68eb995
# 970c985224e343bcb042df6cf3ac3672
# 4aaafc94a7ba4a73bcf6c84b00424f65
# dcdbf166905d420b918a4283add76391
#: ../../ref/contrib/gis/feeds.txt:19 ../../ref/contrib/gis/geoip.txt:38
#: ../../ref/contrib/gis/layermapping.txt:34
#: ../../ref/contrib/gis/measure.txt:17 ../../ref/contrib/gis/sitemaps.txt:11
#: ../../ref/contrib/gis/testing.txt:159 ../../ref/contrib/gis/testing.txt:194
#: ../../ref/contrib/sitemaps.txt:255
msgid "Example"
msgstr ""

# 65b01d3081ca4f06b253f833b06aa3ce
# 81356a05c2f444d290bae987c3785ca9
#: ../../ref/contrib/gis/feeds.txt:22 ../../ref/index.txt:3
msgid "API Reference"
msgstr ""

# 8899b2cb90fc461b98faf4601f2e8f75
#: ../../ref/contrib/gis/feeds.txt:25
msgid "``Feed`` Subclass"
msgstr ""

# e051422ccec94f7c9c01564e62a0b037
#: ../../ref/contrib/gis/feeds.txt:29
msgid ""
"In addition to methods provided by the :class:`django.contrib.syndication."
"feeds.Feed` base class, GeoDjango's ``Feed`` class provides the following "
"overrides.  Note that these overrides may be done in multiple ways::"
msgstr ""

# 1ac58a95cc6644dbaf73aa5fed589dca
#: ../../ref/contrib/gis/feeds.txt:58
msgid ""
"Takes the object returned by ``get_object()`` and returns the *feed's* "
"geometry.  Typically this is a ``GEOSGeometry`` instance, or can be a tuple "
"to represent a point or a box.  For example::"
msgstr ""

# 6445ff95b8ce4969b373509fcbce7cac
#: ../../ref/contrib/gis/feeds.txt:70
msgid ""
"Set this to return the geometry for each *item* in the feed.  This can be a "
"``GEOSGeometry`` instance, or a tuple that represents a point coordinate or "
"bounding box.  For example::"
msgstr ""

# d6893b989bad4a809fc334bb1b425b48
#: ../../ref/contrib/gis/feeds.txt:81
msgid "``SyndicationFeed`` Subclasses"
msgstr ""

# 4ea3275aa50b4482b139e4444e256d62
#: ../../ref/contrib/gis/feeds.txt:83
msgid ""
"The following :class:`django.utils.feedgenerator.SyndicationFeed` subclasses "
"are available:"
msgstr ""

# b436edc230e24c58ab53ed545d0f9f3b
#: ../../ref/contrib/gis/feeds.txt:94
msgid ""
"`W3C Geo`_ formatted feeds only support :class:`~django.contrib.gis.db."
"models.PointField` geometries."
msgstr ""

# 880674fafd4f486cbda99ba046494cfe
#: ../../ref/contrib/gis/gdal.txt:5
msgid "GDAL API"
msgstr ""

# 88beb0c3b5c0447e8877a13579a00493
#: ../../ref/contrib/gis/gdal.txt:10
msgid ""
"`GDAL`__ stands for **G**\\ eospatial **D**\\ ata **A**\\ bstraction **L**\\ "
"ibrary, and is a veritable \"swiss army knife\" of GIS data functionality.  "
"A subset of GDAL is the `OGR`__ Simple Features Library, which specializes "
"in reading and writing vector geographic data in a variety of standard "
"formats."
msgstr ""

# fcd1f8f96db94b1d98c748387e6f22f8
#: ../../ref/contrib/gis/gdal.txt:16
msgid ""
"GeoDjango provides a high-level Python interface for some of the "
"capabilities of OGR, including the reading and coordinate transformation of "
"vector spatial data."
msgstr ""

# 8fca954ea3d047bc99f730b1349e6aec
#: ../../ref/contrib/gis/gdal.txt:22
msgid ""
"Although the module is named ``gdal``, GeoDjango only supports some of the "
"capabilities of OGR.  Thus, none of GDAL's features with respect to raster "
"(image) data are supported at this time."
msgstr ""

# 6f40123c53dd4f6dae5865e1ab548256
#: ../../ref/contrib/gis/gdal.txt:33
msgid "Sample Data"
msgstr ""

# 36aa368c020c4a07ad8afe443c94ee7e
#: ../../ref/contrib/gis/gdal.txt:35
msgid ""
"The GDAL/OGR tools described here are designed to help you read in your "
"geospatial data, in order for most of them to be useful you have to have "
"some data to work with.  If you're starting out and don't yet have any data "
"of your own to use, GeoDjango comes with a number of simple data sets that "
"you can use for testing.  This snippet will determine where these sample "
"files are installed on your computer::"
msgstr ""

# 82b8539663d544cfada0f058d24e3a17
#: ../../ref/contrib/gis/gdal.txt:48
msgid "Vector Data Source Objects"
msgstr ""

# 07e811538bcd47f18d51fbcb71a3fc12
#: ../../ref/contrib/gis/gdal.txt:51
msgid "``DataSource``"
msgstr ""

# 22ae420217e6453e8bb837be3120cf50
#: ../../ref/contrib/gis/gdal.txt:53
msgid ""
":class:`DataSource` is a wrapper for the OGR data source object that "
"supports reading data from a variety of OGR-supported geospatial file "
"formats and data sources using a simple, consistent interface.  Each data "
"source is represented by a :class:`DataSource` object which contains one or "
"more layers of data.  Each layer, represented by a :class:`Layer` object, "
"contains some number of geographic features (:class:`Feature`), information "
"about the type of features contained in that layer (e.g. points, polygons, "
"etc.), as well as the names and types of any additional fields (:class:"
"`Field`) of data that may be associated with each feature in that layer."
msgstr ""

# 75b71e10ec794ca1a87a0e56b0975396
#: ../../ref/contrib/gis/gdal.txt:66
msgid ""
"The constructor for ``DataSource`` just a single parameter: the path of the "
"file you want to read.  However, OGR also supports a variety of more complex "
"data sources, including databases, that may be accessed by passing a special "
"name string instead of a path.  For more information, see the `OGR Vector "
"Formats`__ documentation.  The :attr:`name` property of a ``DataSource`` "
"instance gives the OGR name of the underlying data source that it is using."
msgstr ""

# 9d8c7e5480cb4128abb5bec3ee9ddb7f
#: ../../ref/contrib/gis/gdal.txt:75
msgid ""
"Once you've created your ``DataSource``, you can find out how many layers of "
"data it contains by accessing the :attr:`layer_count` property, or "
"(equivalently) by using the ``len()`` function.  For information on "
"accessing the layers of data themselves, see the next section::"
msgstr ""

# 9f939f279ca84b2e8714f9e58590876c
#: ../../ref/contrib/gis/gdal.txt:89
msgid "Returns the number of layers in the data source."
msgstr ""

# 0487fc33bbc447dea3d5311ffc2bf6f9
#: ../../ref/contrib/gis/gdal.txt:93
msgid "Returns the name of the data source."
msgstr ""

# a056dd497e2646cabb46c71019affb0a
#: ../../ref/contrib/gis/gdal.txt:98
msgid "``Layer``"
msgstr ""

# dfac431b9cba43b59dfbbfadddda92cc
#: ../../ref/contrib/gis/gdal.txt:102
msgid ""
"``Layer`` is a wrapper for a layer of data in a ``DataSource`` object. You "
"never create a ``Layer`` object directly.  Instead, you retrieve them from "
"a :class:`DataSource` object, which is essentially a standard Python "
"container of ``Layer`` objects.  For example, you can access a specific "
"layer by its index (e.g. ``ds[0]`` to access the first layer), or you can "
"iterate over all the layers in the container in a ``for`` loop.  The "
"``Layer`` itself acts as a container for geometric features."
msgstr ""

# 15ef4d94153f45549e80dd9ce1981b09
#: ../../ref/contrib/gis/gdal.txt:111
msgid ""
"Typically, all the features in a given layer have the same geometry type. "
"The :attr:`geom_type` property of a layer is an :class:`OGRGeomType` that "
"identifies the feature type.  We can use it to print out some basic "
"information about each layer in a :class:`DataSource`::"
msgstr ""

# 3ebeb8c82f8941f0b73c66c28fb09828
#: ../../ref/contrib/gis/gdal.txt:121
msgid ""
"The example output is from the cities data source, loaded above, which "
"evidently contains one layer, called ``\"cities\"``, which contains three "
"point features.  For simplicity, the examples below assume that you've "
"stored that layer in the variable ``layer``::"
msgstr ""

# 91c8d11fec4b4b9ebe69ff72c4db457d
#: ../../ref/contrib/gis/gdal.txt:130
msgid "Returns the name of this layer in the data source."
msgstr ""

# b9babc54901740d793ca56f8f51c2c88
#: ../../ref/contrib/gis/gdal.txt:137
msgid "Returns the number of features in the layer.  Same as ``len(layer)``::"
msgstr ""

# 448a6d03f0ce4b24bae38912ee092c85
#: ../../ref/contrib/gis/gdal.txt:144
msgid ""
"Returns the geometry type of the layer, as an :class:`OGRGeomType` object::"
msgstr ""

# f6be0c88af6f4b42b792c36380e8c7ef
#: ../../ref/contrib/gis/gdal.txt:152
msgid ""
"Returns the number of fields in the layer, i.e the number of fields of data "
"associated with each feature in the layer::"
msgstr ""

# 719278602ad94e61b599cb4ba9cdd389
#: ../../ref/contrib/gis/gdal.txt:160
msgid "Returns a list of the names of each of the fields in this layer::"
msgstr ""

# 9b23ba87dd7240e4a08dfeead6b550b6
#: ../../ref/contrib/gis/gdal.txt:167
msgid ""
"Returns a list of the data types of each of the fields in this layer. These "
"are subclasses of ``Field``, discussed below::"
msgstr ""

# 882e547126a040f6b624c7d1c65712bb
#: ../../ref/contrib/gis/gdal.txt:175
msgid ""
"Returns a list of the maximum field widths for each of the fields in this "
"layer::"
msgstr ""

# b98f7fe6652e4f2bbb13c1d76d6fb82e
#: ../../ref/contrib/gis/gdal.txt:183
msgid ""
"Returns a list of the numeric precisions for each of the fields in this "
"layer.  This is meaningless (and set to zero) for non-numeric fields::"
msgstr ""

# 7a33ce4db6694e2eb2aa3c0e64abb296
#: ../../ref/contrib/gis/gdal.txt:192
msgid ""
"Returns the spatial extent of this layer, as an :class:`Envelope` object::"
msgstr ""

# 1b6c55f11b394e10b174ec31d124b645
#: ../../ref/contrib/gis/gdal.txt:200
msgid ""
"Property that returns the :class:`SpatialReference` associated with this "
"layer::"
msgstr ""

# 104de6ea7ad241e09a15a8248c84e74e
#: ../../ref/contrib/gis/gdal.txt:210
msgid ""
"If the :class:`Layer` has no spatial reference information associated with "
"it, ``None`` is returned."
msgstr ""

# 2d7d69bf0e714863b3add8e42e23931b
#: ../../ref/contrib/gis/gdal.txt:217
msgid ""
"Property that may be used to retrieve or set a spatial filter for this "
"layer.  A spatial filter can only be set with an :class:`OGRGeometry` "
"instance, a 4-tuple extent, or ``None``.  When set with something other than "
"``None``, only features that intersect the filter will be returned when "
"iterating over the layer::"
msgstr ""

# 3e112d64790344048bf4d89130c89675
#: ../../ref/contrib/gis/gdal.txt:241
msgid ""
"A method that returns a list of the values of a given field for each feature "
"in the layer::"
msgstr ""

# 20463e5643ed41b796f7fa5425772dcc
#: ../../ref/contrib/gis/gdal.txt:249
msgid ""
"A method that returns a list containing the geometry of each feature in the "
"layer.  If the optional argument ``geos`` is set to ``True`` then the "
"geometries are converted to :class:`~django.contrib.gis.geos.GEOSGeometry` "
"objects. Otherwise, they are returned as :class:`OGRGeometry` objects::"
msgstr ""

# 8a40ef2a2949471684d5391177d4ae8d
#: ../../ref/contrib/gis/gdal.txt:259
msgid ""
"Returns a boolean indicating whether this layer supports the given "
"capability (a string).  Examples of valid capability strings include: "
"``'RandomRead'``, ``'SequentialWrite'``, ``'RandomWrite'``, "
"``'FastSpatialFilter'``, ``'FastFeatureCount'``, ``'FastGetExtent'``, "
"``'CreateField'``, ``'Transactions'``, ``'DeleteFeature'``, and "
"``'FastSetNextByIndex'``."
msgstr ""

# 8efae90163c34e0ab54a16120d218ff4
#: ../../ref/contrib/gis/gdal.txt:267
msgid "``Feature``"
msgstr ""

# d5dad15e2e9f40ecb5e4cc69e795211a
#: ../../ref/contrib/gis/gdal.txt:272
msgid ""
"``Feature`` wraps an OGR feature.  You never create a ``Feature`` object "
"directly.  Instead, you retrieve them from a :class:`Layer` object. Each "
"feature consists of a geometry and a set of fields containing additional "
"properties.  The geometry of a field is accessible via its ``geom`` "
"property, which returns an :class:`OGRGeometry` object.  A ``Feature`` "
"behaves like a standard Python container for its fields, which it returns "
"as :class:`Field` objects: you can access a field directly by its index or "
"name, or you can iterate over a feature's fields, e.g. in a ``for`` loop."
msgstr ""

# 1ef70980df144d8ab8e46e91a60c97dd
#: ../../ref/contrib/gis/gdal.txt:283
msgid "Returns the geometry for this feature, as an ``OGRGeometry`` object::"
msgstr ""

# 19364c54dfb24f2abdb8a8482315472e
#: ../../ref/contrib/gis/gdal.txt:290
msgid ""
"A method that returns the value of the given field (specified by name) for "
"this feature, **not** a ``Field`` wrapper object::"
msgstr ""

# 657458671c9b4c1fb558edca5864703a
#: ../../ref/contrib/gis/gdal.txt:298
msgid ""
"Returns the type of geometry for this feature, as an :class:`OGRGeomType` "
"object.  This will be the same for all features in a given layer, and is "
"equivalent to the :attr:`Layer.geom_type` property of the :class:`Layer`` "
"object the feature came from."
msgstr ""

# 3b5d6dd7a1ab4ab585b28706aa0aaf23
#: ../../ref/contrib/gis/gdal.txt:305
msgid ""
"Returns the number of fields of data associated with the feature. This will "
"be the same for all features in a given layer, and is equivalent to the :"
"attr:`Layer.num_fields` property of the :class:`Layer` object the feature "
"came from."
msgstr ""

# 9ed0fe15a02c4c0996e85bef95d20670
#: ../../ref/contrib/gis/gdal.txt:312
msgid ""
"Returns a list of the names of the fields of data associated with the "
"feature.  This will be the same for all features in a given layer, and is "
"equivalent to the :attr:`Layer.fields` property of the :class:`Layer` object "
"the feature came from."
msgstr ""

# d95ebeff7fa14674b2dc5e1b8d2c3c23
#: ../../ref/contrib/gis/gdal.txt:319
msgid "Returns the feature identifier within the layer::"
msgstr ""

# e8733be987fe407e893a6fd58aa2d137
#: ../../ref/contrib/gis/gdal.txt:326
msgid ""
"Returns the name of the :class:`Layer` that the feature came from. This will "
"be the same for all features in a given layer::"
msgstr ""

# 447a811ac736495cb176275d250ecc92
#: ../../ref/contrib/gis/gdal.txt:334
msgid ""
"A method that returns the index of the given field name.  This will be the "
"same for all features in a given layer::"
msgstr ""

# 343bd3c2ac2544f1824abe11ca197153
#: ../../ref/contrib/gis/gdal.txt:341
msgid "``Field``"
msgstr ""

# 961ca8bbe9114a648a5aabb3dbd023fe
#: ../../ref/contrib/gis/gdal.txt:347
msgid "Returns the name of this field::"
msgstr ""

# 55444fdb8a4d477f8135152759fedf49
#: ../../ref/contrib/gis/gdal.txt:354
msgid ""
"Returns the OGR type of this field, as an integer.  The ``FIELD_CLASSES`` "
"dictionary maps these values onto subclasses of ``Field``::"
msgstr ""

# 3245c1d8112b4b65ab602b377ef5680f
#: ../../ref/contrib/gis/gdal.txt:363
msgid "Returns a string with the name of the data type of this field::"
msgstr ""

# f276df378488445687f92d380af77aba
#: ../../ref/contrib/gis/gdal.txt:370
msgid ""
"Returns the value of this field.  The ``Field`` class itself returns the "
"value as a string, but each subclass returns the value in the most "
"appropriate form::"
msgstr ""

# 3e4d9006c69441669d8d069e1eac225d
#: ../../ref/contrib/gis/gdal.txt:379
msgid "Returns the width of this field::"
msgstr ""

# 13e79d985c7341949d550d7bb470c86e
#: ../../ref/contrib/gis/gdal.txt:386
msgid ""
"Returns the numeric precision of this field.  This is meaningless (and set "
"to zero) for non-numeric fields::"
msgstr ""

# 33f394e6c99f43f3b564fe19d14f8b65
#: ../../ref/contrib/gis/gdal.txt:394
msgid "Returns the value of the field as a double (float)::"
msgstr ""

# 7aaa2fe0a77447b699aa27e19d6918f8
#: ../../ref/contrib/gis/gdal.txt:401
msgid "Returns the value of the field as an integer::"
msgstr ""

# 01fde95fb54248b9bbfe2b50e97bef42
#: ../../ref/contrib/gis/gdal.txt:408
msgid "Returns the value of the field as a string::"
msgstr ""

# 0f4cd47d738045e29cd954838a621691
#: ../../ref/contrib/gis/gdal.txt:415
msgid "Returns the value of the field as a tuple of date and time components::"
msgstr ""

# 8b0e99cf24644057ad15740e8d3910ec
#: ../../ref/contrib/gis/gdal.txt:421
msgid "``Driver``"
msgstr ""

# e8c608dc2ffc4f1bb34704a23e70ba2c
#: ../../ref/contrib/gis/gdal.txt:425
msgid ""
"The ``Driver`` class is used internally to wrap an OGR :class:`DataSource` "
"driver."
msgstr ""

# 42fdfbae0c9a42eebaa7fe6742223e56
#: ../../ref/contrib/gis/gdal.txt:429
msgid "Returns the number of OGR vector drivers currently registered."
msgstr ""

# cf5264284ed541c09348fcc3992b4591
#: ../../ref/contrib/gis/gdal.txt:433
msgid "OGR Geometries"
msgstr ""

# 13c590b3821c4984a40821fe35485495
#: ../../ref/contrib/gis/gdal.txt:436
msgid "``OGRGeometry``"
msgstr ""

# 5ba9ac3cbe1444afa6a2f9702a0e475a
#: ../../ref/contrib/gis/gdal.txt:438
msgid ""
":class:`OGRGeometry` objects share similar functionality with :class:"
"`~django.contrib.gis.geos.GEOSGeometry` objects, and are thin wrappers "
"around OGR's internal geometry representation.  Thus, they allow for more "
"efficient access to data when using :class:`DataSource`. Unlike its GEOS "
"counterpart, :class:`OGRGeometry` supports spatial reference systems and "
"coordinate transformation::"
msgstr ""

# d6cb237a6b51405587a17fc176477526
#: ../../ref/contrib/gis/gdal.txt:450
msgid ""
"This object is a wrapper for the `OGR Geometry`__ class. These objects are "
"instantiated directly from the given ``geom_input`` parameter, which may be "
"a string containing WKT or HEX, a ``buffer`` containing WKB data, or an :"
"class:`OGRGeomType` object. These objects are also returned from the :class:"
"`Feature.geom` attribute, when reading vector data from :class:`Layer` "
"(which is in turn a part of a :class:`DataSource`)."
msgstr ""

# ad86f0a0bd024edd80b364be64d6012f
#: ../../ref/contrib/gis/gdal.txt:462
msgid "Constructs a :class:`Polygon` from the given bounding-box (a 4-tuple)."
msgstr ""

# 80d1ea148b1c48e4b609ea1e69c30f21
#: ../../ref/contrib/gis/gdal.txt:466
msgid ""
"Returns the number of points in a :class:`LineString`, the number of rings "
"in a :class:`Polygon`, or the number of geometries in a :class:"
"`GeometryCollection`. Not applicable to other geometry types."
msgstr ""

# a8ec4e87f1774a84b49a8c381e5e4024
#: ../../ref/contrib/gis/gdal.txt:472
msgid ""
"Iterates over the points in a :class:`LineString`, the rings in a :class:"
"`Polygon`, or the geometries in a :class:`GeometryCollection`. Not "
"applicable to other geometry types."
msgstr ""

# ffc97b770c9646239f0c9544eb585e0c
#: ../../ref/contrib/gis/gdal.txt:478
msgid ""
"Returns the point at the specified index for a :class:`LineString`, the "
"interior ring at the specified index for a :class:`Polygon`, or the geometry "
"at the specified index in a :class:`GeometryCollection`.  Not applicable to "
"other geometry types."
msgstr ""

# ef2411235b6f4201b819ad6205e13601
#: ../../ref/contrib/gis/gdal.txt:485
msgid ""
"Returns the number of coordinated dimensions of the geometry, i.e. 0 for "
"points, 1 for lines, and so forth::"
msgstr ""

# 1c9b1d52415c4702b8034dc57243c993
#: ../../ref/contrib/gis/gdal.txt:495
msgid ""
"Returns or sets the coordinate dimension of this geometry.  For example, the "
"value would be 2 for two-dimensional geometries."
msgstr ""

# 5c8328e8447a47bf989bee55985e9caa
#: ../../ref/contrib/gis/gdal.txt:500
msgid "Setting this property is only available in versions 1.2 and above."
msgstr ""

# 2d67fe69663941a1a429971a034f29a1
#: ../../ref/contrib/gis/gdal.txt:504
msgid "Returns the number of elements in this geometry::"
msgstr ""

# 1dfc784113374db29dc90a989d9f72e0
#: ../../ref/contrib/gis/gdal.txt:511
msgid "Returns the number of points used to describe this geometry::"
msgstr ""

# ce7ae058ea6144cd91fcc05d3e3490f9
# 10a1eebcc7c94d3e8b6ba7cbf63a13f7
#: ../../ref/contrib/gis/gdal.txt:518 ../../ref/contrib/gis/gdal.txt:522
msgid "Alias for :attr:`point_count`."
msgstr ""

# 53866d066d044f3690267aa3009272e5
#: ../../ref/contrib/gis/gdal.txt:526
msgid "Returns the type of this geometry, as an :class:`OGRGeomType` object."
msgstr ""

# 51b6bdaa49944b37b5cfa005ff526be1
#: ../../ref/contrib/gis/gdal.txt:530
msgid "Returns the name of the type of this geometry::"
msgstr ""

# 45ec7c8afb224d6c96dd9787bcf18b0e
#: ../../ref/contrib/gis/gdal.txt:537
msgid ""
"Returns the area of this geometry, or 0 for geometries that do not contain "
"an area::"
msgstr ""

# 9cff821fe1bc4178bd4bdca45125ced7
#: ../../ref/contrib/gis/gdal.txt:545
msgid "Returns the envelope of this geometry, as an :class:`Envelope` object."
msgstr ""

# f7f886512a494688b3ad83008c76362c
#: ../../ref/contrib/gis/gdal.txt:549
msgid ""
"Returns the envelope of this geometry as a 4-tuple, instead of as an :class:"
"`Envelope` object::"
msgstr ""

# 9535389be5fc492bb1d1b574373f050b
#: ../../ref/contrib/gis/gdal.txt:557
msgid ""
"This property controls the spatial reference for this geometry, or ``None`` "
"if no spatial reference system has been assigned to it. If assigned, "
"accessing this property returns a :class:`SpatialReference` object.  It may "
"be set with another :class:`SpatialReference` object, or any input that :"
"class:`SpatialReference` accepts. Example::"
msgstr ""

# 735253969e754cec87a8048bd95246d5
#: ../../ref/contrib/gis/gdal.txt:568
msgid ""
"Returns or sets the spatial reference identifier corresponding to :class:"
"`SpatialReference` of this geometry.  Returns ``None`` if there is no "
"spatial reference information associated with this geometry, or if an SRID "
"cannot be determined."
msgstr ""

# 05964a9155e146558b3cbc8fc9ffa900
#: ../../ref/contrib/gis/gdal.txt:575
msgid ""
"Returns a :class:`~django.contrib.gis.geos.GEOSGeometry` object "
"corresponding to this geometry."
msgstr ""

# 0d16d61489a84150a7f3b35eac8a7eec
#: ../../ref/contrib/gis/gdal.txt:580
msgid "Returns a string representation of this geometry in GML format::"
msgstr ""

# f231301cdac14a2d9aeeda3c371009c6
#: ../../ref/contrib/gis/gdal.txt:587
msgid "Returns a string representation of this geometry in HEX WKB format::"
msgstr ""

# f5b7601b17444a399075fee1f8a80bfd
#: ../../ref/contrib/gis/gdal.txt:594
msgid "Returns a string representation of this geometry in JSON format::"
msgstr ""

# e0bc5f19be874f058bd272f79af95808
#: ../../ref/contrib/gis/gdal.txt:602
msgid "Returns a string representation of this geometry in KML format."
msgstr ""

# 5f3c472d3a614f83ad974d3828dfba75
#: ../../ref/contrib/gis/gdal.txt:606
msgid ""
"Returns the size of the WKB buffer needed to hold a WKB representation of "
"this geometry::"
msgstr ""

# 46b79f58c03d404fba78126e20737091
#: ../../ref/contrib/gis/gdal.txt:614
msgid "Returns a ``buffer`` containing a WKB representation of this geometry."
msgstr ""

# 87d6a06fe32f46bd97ffa8a1cb205c5f
#: ../../ref/contrib/gis/gdal.txt:618
msgid "Returns a string representation of this geometry in WKT format."
msgstr ""

# 0c72c1ab17a9478ebcd28dc8010ea54e
#: ../../ref/contrib/gis/gdal.txt:624
msgid "Returns the EWKT representation of this geometry."
msgstr ""

# 1043afbc6ada427dbfc20ce88aff4f77
#: ../../ref/contrib/gis/gdal.txt:628
msgid "Returns a new :class:`OGRGeometry` clone of this geometry object."
msgstr ""

# b1d9fe495ff84b18827e24627d9023a5
#: ../../ref/contrib/gis/gdal.txt:632
msgid ""
"If there are any rings within this geometry that have not been closed, this "
"routine will do so by adding the starting point to the end::"
msgstr ""

# 34b63fb4e55e4a69ae7e6c49bcb20889
#: ../../ref/contrib/gis/gdal.txt:642
msgid ""
"Transforms this geometry to a different spatial reference system.  May take "
"a :class:`CoordTransform` object, a :class:`SpatialReference` object, or any "
"other input accepted by :class:`SpatialReference` (including spatial "
"reference WKT and PROJ.4 strings, or an integer SRID). By default nothing is "
"returned and the geometry is transformed in-place. However, if the `clone` "
"keyword is set to ``True`` then a transformed clone of this geometry is "
"returned instead."
msgstr ""

# ad4b745467074fb9b0acacd06854e0e3
#: ../../ref/contrib/gis/gdal.txt:652
msgid ""
"Returns ``True`` if this geometry intersects the other, otherwise returns "
"``False``."
msgstr ""

# 0ad5545e666843238063a3b21ed66ad3
#: ../../ref/contrib/gis/gdal.txt:657
msgid ""
"Returns ``True`` if this geometry is equivalent to the other, otherwise "
"returns ``False``."
msgstr ""

# 72e0fe4a21c54b55b379c54959d37a4e
#: ../../ref/contrib/gis/gdal.txt:662
msgid ""
"Returns ``True`` if this geometry is spatially disjoint to (i.e. does not "
"intersect) the other, otherwise returns ``False``."
msgstr ""

# 961d27ce565b4cfaaf9f95a08fce084c
#: ../../ref/contrib/gis/gdal.txt:667
msgid ""
"Returns ``True`` if this geometry touches the other, otherwise returns "
"``False``."
msgstr ""

# 59dd3d49e69043a2a6e1315d51f2f275
#: ../../ref/contrib/gis/gdal.txt:672
msgid ""
"Returns ``True`` if this geometry crosses the other, otherwise returns "
"``False``."
msgstr ""

# 4c08eae85fd04101aa9c8bae07e4ff5e
#: ../../ref/contrib/gis/gdal.txt:677
msgid ""
"Returns ``True`` if this geometry is contained within the other, otherwise "
"returns ``False``."
msgstr ""

# d8ceb8f10e64469ebd269344fd7e2f2c
#: ../../ref/contrib/gis/gdal.txt:682
msgid ""
"Returns ``True`` if this geometry contains the other, otherwise returns "
"``False``."
msgstr ""

# 75e3a8876b3a47f590a73a0a1927448d
#: ../../ref/contrib/gis/gdal.txt:687
msgid ""
"Returns ``True`` if this geometry overlaps the other, otherwise returns "
"``False``."
msgstr ""

# a3543a180c764f6a85c2fca3a583c1c5
#: ../../ref/contrib/gis/gdal.txt:692
msgid "The boundary of this geometry, as a new :class:`OGRGeometry` object."
msgstr ""

# c8a36ee096124a748b34fc3295edbb45
#: ../../ref/contrib/gis/gdal.txt:696
msgid ""
"The smallest convex polygon that contains this geometry, as a new :class:"
"`OGRGeometry` object."
msgstr ""

# 0ff01f8c13b34e49bbabb57db3c30ac2
#: ../../ref/contrib/gis/gdal.txt:701
msgid ""
"Returns the region consisting of the difference of this geometry and the "
"other, as a new :class:`OGRGeometry` object."
msgstr ""

# caade47b041b4acca9c1cd40d06cf355
#: ../../ref/contrib/gis/gdal.txt:706
msgid ""
"Returns the region consisting of the intersection of this geometry and the "
"other, as a new :class:`OGRGeometry` object."
msgstr ""

# 1784f95151b34ec29a9b051d3b724bb1
#: ../../ref/contrib/gis/gdal.txt:711
msgid ""
"Returns the region consisting of the symmetric difference of this geometry "
"and the other, as a new :class:`OGRGeometry` object."
msgstr ""

# dedf3ba7cb504728b97f03da50024ed2
#: ../../ref/contrib/gis/gdal.txt:716
msgid ""
"Returns the region consisting of the union of this geometry and the other, "
"as a new :class:`OGRGeometry` object."
msgstr ""

# 8878c392c40142249adbb645ac54ebee
#: ../../ref/contrib/gis/gdal.txt:721
msgid ""
"Returns the coordinates of a point geometry as a tuple, the coordinates of a "
"line geometry as a tuple of tuples, and so forth::"
msgstr ""

# d41f21da717141ec8c82ba3e5e1ff7a5
#: ../../ref/contrib/gis/gdal.txt:731
msgid "An alias for :attr:`tuple`."
msgstr ""

# 2d4dea00a3e6404dbd0131de2886d12b
#: ../../ref/contrib/gis/gdal.txt:737
msgid "Returns the X coordinate of this point::"
msgstr ""

# c2a2ff4fc1f94e06850198315e8faffa
#: ../../ref/contrib/gis/gdal.txt:744
msgid "Returns the Y coordinate of this point::"
msgstr ""

# 222cca8c01c1473e9d87a04c7ae2e696
#: ../../ref/contrib/gis/gdal.txt:751
msgid ""
"Returns the Z coordinate of this point, or ``None`` if the the point does "
"not have a Z coordinate::"
msgstr ""

# 98546309c8ab4447a30a7c4bc89a2694
#: ../../ref/contrib/gis/gdal.txt:761
msgid "Returns a list of X coordinates in this line::"
msgstr ""

# 8622d84b1ee641df92b3800cd3011256
#: ../../ref/contrib/gis/gdal.txt:768
msgid "Returns a list of Y coordinates in this line::"
msgstr ""

# 7d85fb8ef6c942f1a74c6c0048ab3820
#: ../../ref/contrib/gis/gdal.txt:775
msgid ""
"Returns a list of Z coordinates in this line, or ``None`` if the line does "
"not have Z coordinates::"
msgstr ""

# ab883bc0046849a8886b1c49eba24ce6
#: ../../ref/contrib/gis/gdal.txt:786
msgid ""
"Returns the shell or exterior ring of this polygon, as a ``LinearRing`` "
"geometry."
msgstr ""

# 19457824a03d4d4a8d24e9d1caa0ea42
#: ../../ref/contrib/gis/gdal.txt:791
msgid "An alias for :attr:`shell`."
msgstr ""

# 8efc00af601d4bac92c2de78c589f826
#: ../../ref/contrib/gis/gdal.txt:795
msgid "Returns a :class:`Point` representing the centroid of this polygon."
msgstr ""

# 5ab820ad2c0a43d692883c58a8b109bc
#: ../../ref/contrib/gis/gdal.txt:801
msgid ""
"Adds a geometry to this geometry collection.  Not applicable to other "
"geometry types."
msgstr ""

# b67b11154d2d4f0fbdd2d5ab2703a0fc
#: ../../ref/contrib/gis/gdal.txt:806
msgid "``OGRGeomType``"
msgstr ""

# 9c5c8a3f0b24468cb3288cafb1883de8
#: ../../ref/contrib/gis/gdal.txt:810
msgid ""
"This class allows for the representation of an OGR geometry type in any of "
"several ways::"
msgstr ""

# 2ae273bd3d824e5691ba705996347daf
#: ../../ref/contrib/gis/gdal.txt:822
msgid "Returns a short-hand string form of the OGR Geometry type::"
msgstr ""

# 404f19cc8bee4809a04f5da6e04f7de0
#: ../../ref/contrib/gis/gdal.txt:829
msgid "Returns the number corresponding to the OGR geometry type::"
msgstr ""

# aa3daea8c0094077b65d694f6d9e3f14
#: ../../ref/contrib/gis/gdal.txt:836
msgid ""
"Returns the Django field type (a subclass of GeometryField) to use for "
"storing this OGR type, or ``None`` if there is no appropriate Django type::"
msgstr ""

# b0af51a42b5848aba5e5e5dbf30b5380
#: ../../ref/contrib/gis/gdal.txt:844
msgid "``Envelope``"
msgstr ""

# 012ae33668e64eaea46f7c0c65be368e
#: ../../ref/contrib/gis/gdal.txt:848
msgid ""
"Represents an OGR Envelope structure that contains the minimum and maximum "
"X, Y coordinates for a rectangle bounding box. The naming of the variables "
"is compatible with the OGR Envelope C structure."
msgstr ""

# 2c34c3b7111949eb80e2141432883aa6
#: ../../ref/contrib/gis/gdal.txt:855
msgid "The value of the minimum X coordinate."
msgstr ""

# 12d8f2e66f92419d89fe17918dbf6eb4
#: ../../ref/contrib/gis/gdal.txt:859
msgid "The value of the maximum X coordinate."
msgstr ""

# d948f85bb1564ba49d41986737dc0635
#: ../../ref/contrib/gis/gdal.txt:863
msgid "The value of the minimum Y coordinate."
msgstr ""

# 1786f4a00ca34b8a83fd04a682aae2f5
#: ../../ref/contrib/gis/gdal.txt:867
msgid "The value of the maximum Y coordinate."
msgstr ""

# f0f7575dc0834f04b681f7ab6d39855b
#: ../../ref/contrib/gis/gdal.txt:871
msgid "The upper-right coordinate, as a tuple."
msgstr ""

# b4b4466539e24becb5770dfe1ead0c60
#: ../../ref/contrib/gis/gdal.txt:875
msgid "The lower-left coordinate, as a tuple."
msgstr ""

# 5626515b80694771bfef87af1b1beaea
#: ../../ref/contrib/gis/gdal.txt:879
msgid "A tuple representing the envelope."
msgstr ""

# a57010785b2944059ae947635cad92c9
#: ../../ref/contrib/gis/gdal.txt:883
msgid "A string representing this envelope as a polygon in WKT format."
msgstr ""

# 40cc60134ee748ceb33c3c127e4e83f0
#: ../../ref/contrib/gis/gdal.txt:889
msgid "Coordinate System Objects"
msgstr ""

# 19139921bc284b3c8762713f74164358
#: ../../ref/contrib/gis/gdal.txt:892
msgid "``SpatialReference``"
msgstr ""

# 65aacc31de644262b9e77769baf464d6
#: ../../ref/contrib/gis/gdal.txt:896
msgid ""
"Spatial reference objects are initialized on the given ``srs_input``, which "
"may be one of the following:"
msgstr ""

# 5d3b3fdbc07746fc85f775ddf3588a60
#: ../../ref/contrib/gis/gdal.txt:899
msgid "OGC Well Known Text (WKT) (a string)"
msgstr ""

# 14c3739a73c946969f0bc6822de9a300
#: ../../ref/contrib/gis/gdal.txt:900
msgid "EPSG code (integer or string)"
msgstr ""

# 4c284c95e0cb42a9939933da539862e5
#: ../../ref/contrib/gis/gdal.txt:901
msgid "PROJ.4 string"
msgstr ""

# b9830fe8edfa4164889786737d8a31f4
#: ../../ref/contrib/gis/gdal.txt:902
msgid ""
"A shorthand string for well-known standards (``'WGS84'``, ``'WGS72'``, "
"``'NAD27'``, ``'NAD83'``)"
msgstr ""

# 0bf4bab072e84c74b23007d7f2c324df
#: ../../ref/contrib/gis/gdal.txt:924
msgid ""
"Returns the value of the given string attribute node, ``None`` if the node "
"doesn't exist.  Can also take a tuple as a parameter, (target, child), where "
"child is the index of the attribute in the WKT.  For example::"
msgstr ""

# 2c2fc2afbf144ac386e3d002fe1d8241
#: ../../ref/contrib/gis/gdal.txt:947
msgid ""
"The attribute value for the given target node (e.g. ``'PROJCS'``). The index "
"keyword specifies an index of the child node to return."
msgstr ""

# 95ec0d25b8d34c1b83f48ca2b8d23f2a
#: ../../ref/contrib/gis/gdal.txt:952
msgid "Returns the authority name for the given string target node."
msgstr ""

# 19430c3c3ba64520bd96cba24caf9632
#: ../../ref/contrib/gis/gdal.txt:956
msgid "Returns the authority code for the given string target node."
msgstr ""

# ae689a71a9a14b9781dfb89206a174dd
#: ../../ref/contrib/gis/gdal.txt:960
msgid "Returns a clone of this spatial reference object."
msgstr ""

# 9941f46369a84570ab4e5ae0039de3ad
#: ../../ref/contrib/gis/gdal.txt:964
msgid ""
"This method inspects the WKT of this SpatialReference, and will add EPSG "
"authority nodes where an EPSG identifier is applicable."
msgstr ""

# 337b271f99e34ce5a46eb7c7e1d90ea7
#: ../../ref/contrib/gis/gdal.txt:969
msgid "Morphs this SpatialReference from ESRI's format to EPSG"
msgstr ""

# 80768caafd454fa9aaabeb858e765db1
#: ../../ref/contrib/gis/gdal.txt:973
msgid "Morphs this SpatialReference to ESRI's format."
msgstr ""

# d1ee1f07716343358520ee89224d58eb
#: ../../ref/contrib/gis/gdal.txt:977
msgid ""
"Checks to see if the given spatial reference is valid, if not an exception "
"will be raised."
msgstr ""

# 8e3a5f7843e5434189114795ed2c1de9
#: ../../ref/contrib/gis/gdal.txt:982
msgid "Import spatial reference from EPSG code."
msgstr ""

# a9528fa1c80c4b20af3b5de3f820ed56
#: ../../ref/contrib/gis/gdal.txt:986
msgid "Import spatial reference from PROJ.4 string."
msgstr ""

# 68691b000faa444d9be5a8391cbb9688
#: ../../ref/contrib/gis/gdal.txt:992
msgid "Import spatial reference from WKT."
msgstr ""

# bd5845be7e4c4c1eaccaf3d63090286e
#: ../../ref/contrib/gis/gdal.txt:996
msgid "Import spatial reference from XML."
msgstr ""

# ad5fd8da69ca4ba68d7cdf0ae05ee254
#: ../../ref/contrib/gis/gdal.txt:1000
msgid "Returns the name of this Spatial Reference."
msgstr ""

# ee4007c893084ed6bc28d0875dc4432a
#: ../../ref/contrib/gis/gdal.txt:1004
msgid "Returns the SRID of top-level authority, or ``None`` if undefined."
msgstr ""

# fa7bde08854d41cd8c0d6ba0ba2243c5
#: ../../ref/contrib/gis/gdal.txt:1008
msgid "Returns the name of the linear units."
msgstr ""

# 6643b6b2f1f24fc09f46e7f50e81a03a
#: ../../ref/contrib/gis/gdal.txt:1012
msgid "Returns the value of the linear units."
msgstr ""

# 746e58fb3fa2422582db65d76e7d9a7d
#: ../../ref/contrib/gis/gdal.txt:1016
msgid "Returns the name of the angular units.\""
msgstr ""

# d0dc7562bd404398a4678f1b8a666147
#: ../../ref/contrib/gis/gdal.txt:1020
msgid "Returns the value of the angular units."
msgstr ""

# 53ab379f8c0b43c3ac0c99359f7ce529
#: ../../ref/contrib/gis/gdal.txt:1024
msgid ""
"Returns a 2-tuple of the units value and the units name, and will "
"automatically determines whether to return the linear or angular units."
msgstr ""

# 84df7d967a7a439aaf64271b347e9e09
#: ../../ref/contrib/gis/gdal.txt:1030
msgid ""
"Returns a tuple of the ellipsoid parameters for this spatial reference: "
"(semimajor axis, semiminor axis, and inverse flattening)"
msgstr ""

# b1bf260689d74cb8b7ff8da0d689c459
#: ../../ref/contrib/gis/gdal.txt:1035
msgid ""
"Returns the semi major axis of the ellipsoid for this spatial reference."
msgstr ""

# 10eacdf4af954b3cb3ddd3d069b801f9
#: ../../ref/contrib/gis/gdal.txt:1039
msgid ""
"Returns the semi minor axis of the ellipsoid for this spatial reference."
msgstr ""

# 4eaea015cc0b4e0198bfa0ccc4503842
#: ../../ref/contrib/gis/gdal.txt:1043
msgid ""
"Returns the inverse flattening of the ellipsoid for this spatial reference."
msgstr ""

# fb9c4f7f500f473c951cb292e2227103
#: ../../ref/contrib/gis/gdal.txt:1047
msgid ""
"Returns ``True`` if this spatial reference is geographic (root node is "
"``GEOGCS``)."
msgstr ""

# 33836b1862af4a6ba272850008cd8344
#: ../../ref/contrib/gis/gdal.txt:1052
msgid ""
"Returns ``True`` if this spatial reference is local (root node is "
"``LOCAL_CS``)."
msgstr ""

# 85c178ae203143b48d51cf0a12849f14
#: ../../ref/contrib/gis/gdal.txt:1057
msgid ""
"Returns ``True`` if this spatial reference is a projected coordinate system "
"(root node is ``PROJCS``)."
msgstr ""

# 8076997587da41d6b1e665e75c1778d9
#: ../../ref/contrib/gis/gdal.txt:1062
msgid "Returns the WKT representation of this spatial reference."
msgstr ""

# e8c24897421540eba4386df7574b6624
#: ../../ref/contrib/gis/gdal.txt:1066
msgid "Returns the 'pretty' representation of the WKT."
msgstr ""

# 246615b1740f4bb0ab7abdd923178989
#: ../../ref/contrib/gis/gdal.txt:1070
msgid "Returns the PROJ.4 representation for this spatial reference."
msgstr ""

# b8fffb0ab7704c7dbad664ed7b483d8c
#: ../../ref/contrib/gis/gdal.txt:1074
msgid "Alias for :attr:`SpatialReference.proj`."
msgstr ""

# 5037dd9fbffd4c50b48571bb1384c7b3
#: ../../ref/contrib/gis/gdal.txt:1078
msgid "Returns the XML representation of this spatial reference."
msgstr ""

# fea51e77bbba4d7ba246be519fdb0086
#: ../../ref/contrib/gis/gdal.txt:1082
msgid "``CoordTransform``"
msgstr ""

# d6b615a410a24606b05113185ff17761
#: ../../ref/contrib/gis/gdal.txt:1086
msgid ""
"Represents a coordinate system transform.  It is initialized with two :class:"
"`SpatialReference`, representing the source and target coordinate systems, "
"respectively.  These objects should be used when performing the same "
"coordinate transformation repeatedly on different geometries::"
msgstr ""

# bd3f0f36315d4d54b93b83c13d4d416e
#: ../../ref/contrib/gis/gdal.txt:1102
msgid "GDAL_LIBRARY_PATH"
msgstr ""

# c274ae0c372247ef89d581a4501d1ed8
#: ../../ref/contrib/gis/gdal.txt:1104
msgid ""
"A string specifying the location of the GDAL library.  Typically, this "
"setting is only used if the GDAL library is in a non-standard location (e."
"g., ``/home/john/lib/libgdal.so``)."
msgstr ""

# cb8efc365ea743cfb8926ddbc1ae4fbb
#: ../../ref/contrib/gis/geoip.txt:5
msgid "Geolocation with GeoIP"
msgstr ""

# 4d9586d163f04cfa8a171e536c1244ad
#: ../../ref/contrib/gis/geoip.txt:14
msgid ""
"In Django 1.4, the :class:`GeoIP` object was moved out of :mod:`django."
"contrib.gis.utils` and into its own module, :mod:`django.contrib.gis.geoip`. "
"A shortcut is still provided in ``utils``, but will be removed in Django 1.6."
msgstr ""

# e358e199a3dd447d81c4b8e68eb7eb90
#: ../../ref/contrib/gis/geoip.txt:19
msgid ""
"The :class:`GeoIP` object is a ctypes wrapper for the `MaxMind GeoIP C "
"API`__. [#]_  This interface is a BSD-licensed alternative to the GPL-"
"licensed `Python GeoIP`__ interface provided by MaxMind."
msgstr ""

# db95fbfff0d04fe788509a9afe618738
#: ../../ref/contrib/gis/geoip.txt:23
msgid ""
"In order to perform IP-based geolocation, the :class:`GeoIP` object requires "
"the GeoIP C libary and either the GeoIP `Country`__ or `City`__ datasets in "
"binary format (the CSV files will not work!).  These datasets may be "
"`downloaded from MaxMind`__.  Grab the ``GeoIP.dat.gz`` and ``GeoLiteCity."
"dat.gz`` and unzip them in a directory corresponding to what you set :"
"setting:`GEOIP_PATH` with in your settings.  See the example and reference "
"below for more details."
msgstr ""

# 50dc2436917f408aa2f3f7e5acc254ba
#: ../../ref/contrib/gis/geoip.txt:40
msgid ""
"Assuming you have the GeoIP C library installed, here is an example of its "
"usage::"
msgstr ""

# 7bb1ab8a98364ddeb25ff8e422c4a9ee
#: ../../ref/contrib/gis/geoip.txt:66
msgid "``GeoIP`` Settings"
msgstr ""

# 941922aae7d341a1ab6b1fa8558d4da8
#: ../../ref/contrib/gis/geoip.txt:71
msgid "GEOIP_PATH"
msgstr ""

# 858c4119c480432fba60e92ad033cad4
#: ../../ref/contrib/gis/geoip.txt:73
msgid ""
"A string specifying the directory where the GeoIP data files are located.  "
"This setting is *required* unless manually specified with ``path`` keyword "
"when initializing the :class:`GeoIP` object."
msgstr ""

# 873ce048931441ad9e0db7bf28bf5b29
#: ../../ref/contrib/gis/geoip.txt:80
msgid "GEOIP_LIBRARY_PATH"
msgstr ""

# e06ab2ffbb30414096cd2c1582500561
#: ../../ref/contrib/gis/geoip.txt:82
msgid ""
"A string specifying the location of the GeoIP C library.  Typically, this "
"setting is only used if the GeoIP C library is in a non-standard location (e."
"g., ``/home/sue/lib/libGeoIP.so``)."
msgstr ""

# e79bd93b757a4d98abe55ebfc9ca2ae1
#: ../../ref/contrib/gis/geoip.txt:89
msgid "GEOIP_COUNTRY"
msgstr ""

# c41ccae16de44407a29e699a8e982168
#: ../../ref/contrib/gis/geoip.txt:91
msgid ""
"The basename to use for the GeoIP country data file. Defaults to ``'GeoIP."
"dat'``."
msgstr ""

# 70db3ce04ce841dcaee7044b85ecbac2
#: ../../ref/contrib/gis/geoip.txt:97
msgid "GEOIP_CITY"
msgstr ""

# adb50955e1a84003a7bd8f66053ecbcf
#: ../../ref/contrib/gis/geoip.txt:99
msgid ""
"The basename to use for the GeoIP city data file. Defaults to ``'GeoLiteCity."
"dat'``."
msgstr ""

# 069ab277868e40618a7ffd480c3f195a
#: ../../ref/contrib/gis/geoip.txt:103
msgid "``GeoIP`` API"
msgstr ""

# cbd41e590e75406f8d553b615cf5c8df
#: ../../ref/contrib/gis/geoip.txt:107
msgid ""
"The ``GeoIP`` object does not require any parameters to use the default "
"settings.  However, at the very least the :setting:`GEOIP_PATH` setting "
"should be set with the path of the location of your GeoIP data sets.  The "
"following intialization keywords may be used to customize any of the "
"defaults."
msgstr ""

# 3d2d0e93d94340b592f6f0b050a544a0
# e4cf21c228cd43ec8836edff6d43c27f
#: ../../ref/contrib/gis/geoip.txt:114
#: ../../ref/contrib/gis/layermapping.txt:112
msgid "Keyword Arguments"
msgstr ""

# bfc995ae4da84109badc61ceaf98a810
# c5ba2934279f4460b1e9dfc0373f6b98
# 89d819f8c2b84e849aeb65331f30f42d
# 1765ffa38d234c22878c9cc59b74e0c4
# 95d24ee2bb904049a5d5b72a28b48ed1
# bcc13cba312b4ab3a9ce33973ed6356d
# 2010a64584cd459184a3bdcc204a30cf
# 3eb01e5e721e40f399a01325d8da2f13
# 13031b1ec53d4b7385aa012df0719c5f
# 4513e2ae37b54eb5a25a8340e705bf13
# 0265b1c29cba421c99ab89f947e51847
# 6515ccfee2e14633bc7915c9cbe65538
# d2cf7327e220406db1ae7bb7a51eec17
# df7ad8e978a8408f87247123b3006fb6
# ec06661c9f4b451eba0c1eca9dc379ca
# a9cf617f503b430993cf69a4fe12a911
# dbfd2842df184bde9dc7b4941f580e04
#: ../../ref/contrib/gis/geoip.txt:114
#: ../../ref/contrib/gis/geoquerysets.txt:661
#: ../../ref/contrib/gis/geoquerysets.txt:843
#: ../../ref/contrib/gis/geoquerysets.txt:964
#: ../../ref/contrib/gis/geoquerysets.txt:997
#: ../../ref/contrib/gis/geoquerysets.txt:1030
#: ../../ref/contrib/gis/geoquerysets.txt:1050
#: ../../ref/contrib/gis/geoquerysets.txt:1190
#: ../../ref/contrib/gis/geos.txt:829 ../../ref/contrib/gis/geos.txt:852
#: ../../ref/contrib/gis/install.txt:80
#: ../../ref/contrib/gis/layermapping.txt:95
#: ../../ref/contrib/gis/layermapping.txt:157
#: ../../ref/contrib/webdesign.txt:40 ../../ref/models/fields.txt:514
#: ../../ref/templates/builtins.txt:316 ../../ref/templates/builtins.txt:1285
msgid "Description"
msgstr ""

# cb7e0954e3134bf083be0f8d1572e6b1
#: ../../ref/contrib/gis/geoip.txt:116
msgid "``path``"
msgstr ""

# 0c02c414d1ee4cada06ea32701340bdf
#: ../../ref/contrib/gis/geoip.txt:116
msgid ""
"Base directory to where GeoIP data is located or the full path to where the "
"city or country data files (.dat) are located.  Assumes that both the city "
"and country data sets are located in this directory; overrides the :setting:"
"`GEOIP_PATH` settings attribute."
msgstr ""

# a90e4e1d31b040a9bb54e35fa33e18d0
#: ../../ref/contrib/gis/geoip.txt:122
msgid "``cache``"
msgstr ""

# ba3a37c63dfb48d4894f2b3bf344303e
#: ../../ref/contrib/gis/geoip.txt:122
msgid ""
"The cache settings when opening up the GeoIP datasets, and may be an integer "
"in (0, 1, 2, 4) corresponding to the ``GEOIP_STANDARD``, "
"``GEOIP_MEMORY_CACHE``, ``GEOIP_CHECK_CACHE``, and ``GEOIP_INDEX_CACHE`` "
"``GeoIPOptions`` C API settings, respectively. Defaults to 0 "
"(``GEOIP_STANDARD``)."
msgstr ""

# bb7102c45a4c44a3a04f68fe08f107f5
#: ../../ref/contrib/gis/geoip.txt:129
msgid "``country``"
msgstr ""

# 8c9bec28e8dd49f7bdc802a52880b9f5
#: ../../ref/contrib/gis/geoip.txt:129
msgid ""
"The name of the GeoIP country data file.  Defaults to ``GeoIP.dat``.  "
"Setting this keyword overrides the :setting:`GEOIP_COUNTRY` settings "
"attribute."
msgstr ""

# a05e9395377841e980873a0cd26026b8
#: ../../ref/contrib/gis/geoip.txt:133
msgid "``city``"
msgstr ""

# 8ca114e0ec894a0d81aadad2742849ee
#: ../../ref/contrib/gis/geoip.txt:133
msgid ""
"The name of the GeoIP city data file.  Defaults to ``GeoLiteCity.dat``.  "
"Setting this keyword overrides the :setting:`GEOIP_CITY` settings attribute."
msgstr ""

# 48a20c70323b4c51acbefe7aceaf2c57
#: ../../ref/contrib/gis/geoip.txt:139
msgid "``GeoIP`` Methods"
msgstr ""

# f6f08369e6c6492194ef2ebd63651dd9
#: ../../ref/contrib/gis/geoip.txt:142
msgid "Querying"
msgstr ""

# 91b7163b49b64cdf9a51b3bda804db4b
#: ../../ref/contrib/gis/geoip.txt:144
msgid ""
"All the following querying routines may take either a string IP address or a "
"fully qualified domain name (FQDN).  For example, both ``'205.186.163.125'`` "
"and ``'djangoproject.com'`` would be valid query parameters."
msgstr ""

# c3d3d82a93694d289e0e6690ee965b6e
#: ../../ref/contrib/gis/geoip.txt:151
msgid ""
"Returns a dictionary of city information for the given query.  Some of the "
"values in the dictionary may be undefined (``None``)."
msgstr ""

# eff657544efe4f7598748740552f2fd5
#: ../../ref/contrib/gis/geoip.txt:156
msgid ""
"Returns a dictionary with the country code and country for the given query."
msgstr ""

# c4376e9a59794aa9aef191e5ccac5121
#: ../../ref/contrib/gis/geoip.txt:161
msgid "Returns only the country code corresponding to the query."
msgstr ""

# 22b825ee6e164dcd9e29d3f68d2c6348
#: ../../ref/contrib/gis/geoip.txt:165
msgid "Returns only the country name corresponding to the query."
msgstr ""

# d02a96f4b7324245becde79f4e84000c
#: ../../ref/contrib/gis/geoip.txt:168
msgid "Coordinate Retrieval"
msgstr ""

# 0cd9e6af8a884c28a7362e74cdcd7a60
# 909cf0c1882f4d51b77d7fc30135186c
#: ../../ref/contrib/gis/geoip.txt:172 ../../ref/contrib/gis/geoip.txt:176
msgid "Returns a coordinate tuple of (longitude, latitude)."
msgstr ""

# 86cad46b216c45b0a0c7ad1e8360968b
#: ../../ref/contrib/gis/geoip.txt:180
msgid "Returns a coordinate tuple of (latitude, longitude),"
msgstr ""

# 4c4c94de6ee44f5ba005c6dd6b006f88
#: ../../ref/contrib/gis/geoip.txt:184
msgid ""
"Returns a :class:`django.contrib.gis.geos.Point` object corresponding to the "
"query."
msgstr ""

# 1d3e09e4865b443a9c32ce4c0cacd4c5
#: ../../ref/contrib/gis/geoip.txt:187
msgid "Database Information"
msgstr ""

# 702f28a80ca2476b8291e53014fda3ae
#: ../../ref/contrib/gis/geoip.txt:191
msgid "This property returns information about the GeoIP country database."
msgstr ""

# 9cbbca62f309412bb219062aafe803ad
#: ../../ref/contrib/gis/geoip.txt:195
msgid "This property returns information about the GeoIP city database."
msgstr ""

# 16fbc840c5d748a7a1da9284b11827a0
#: ../../ref/contrib/gis/geoip.txt:199
msgid ""
"This property returns information about all GeoIP databases (both city and "
"country), and the version of the GeoIP C library (if supported)."
msgstr ""

# 3b91c3607fcf4d2999edc55b0d275712
#: ../../ref/contrib/gis/geoip.txt:203
msgid "GeoIP-Python API compatibility methods"
msgstr ""

# 701032b758894569aa02725036766814
#: ../../ref/contrib/gis/geoip.txt:205
msgid ""
"These methods exist to ease compatibility with any code using MaxMind's "
"existing Python API."
msgstr ""

# e198c27f007848aa99c94f318cb66e99
#: ../../ref/contrib/gis/geoip.txt:210
msgid ""
"This classmethod instantiates the GeoIP object from the given database path "
"and given cache setting."
msgstr ""

# 0529fc58641842d69690b3138f87521f
#: ../../ref/contrib/gis/geoip.txt:230
msgid ""
"GeoIP(R) is a registered trademark of MaxMind, LLC of Boston, Massachusetts."
msgstr ""

# 3d338ea89fca42f19e5c9ecda925a217
#: ../../ref/contrib/gis/geoquerysets.txt:5
msgid "GeoQuerySet API Reference"
msgstr ""

# 384c97bfd16f41aaa07f6bd81da0b34a
#: ../../ref/contrib/gis/geoquerysets.txt:17
msgid ""
"Just like when using the :ref:`queryset-api`, interaction with "
"``GeoQuerySet`` by :ref:`chaining filters <chaining-filters>`. Instead of "
"the regular Django :ref:`field-lookups`, the spatial lookups in this section "
"are available for :class:`GeometryField`."
msgstr ""

# 615762a038a14a7c81c2e56ccd898f60
#: ../../ref/contrib/gis/geoquerysets.txt:22
msgid ""
"For an introduction, see the :ref:`spatial lookups introduction <spatial-"
"lookups-intro>`.  For an overview of what lookups are compatible with a "
"particular spatial backend, refer to the :ref:`spatial lookup compatibility "
"table <spatial-lookup-compatibility>`."
msgstr ""

# dc6b9701dca140189a771833e6c0ab18
#: ../../ref/contrib/gis/geoquerysets.txt:30
msgid "bbcontains"
msgstr ""

# 76d3c4b8073e4c78b82fd06b0f3b10cf
# 3bd55e0bd73b4f369dbbe1f4b917a858
# 77b8eb6fa4164eecaf6c869cb145f07a
#: ../../ref/contrib/gis/geoquerysets.txt:32
#: ../../ref/contrib/gis/geoquerysets.txt:54
#: ../../ref/contrib/gis/geoquerysets.txt:76
msgid "*Availability*: PostGIS, MySQL, SpatiaLite"
msgstr ""

# c1fc8d6acf8e4cd7a1eb554ceae96569
#: ../../ref/contrib/gis/geoquerysets.txt:34
msgid ""
"Tests if the geometry field's bounding box completely contains the lookup "
"geometry's bounding box."
msgstr ""

# 2a268494c08444db8f433583e56b3100
# 37c0f40c362442098e557297e55a533c
# ac30af2fd8604aebb6453fae41faf27a
# 0b14a59b6da648b994dd96bfc3191477
# bff054226bca4ca2b24cedef6e010078
# 30051c5fec4f4cd09f5d2ab531a10a3f
# bc8ee33f24734717982215133ab5d4eb
# d4b1b79348c44c4f8d9b67d6c809bd15
# adf0fd6b2b544227a443364b84de7393
# f830ea955d894b1b9346e83188ff3cc4
# 1756a1fa02804c2fa16c4006a2bd63b9
# 478415efd17d4f38a7ca5b0d8e9daa8b
# de1d859a8aa24bb6848b085bbb6e85d4
# e4de69e518894e39a956744067e454c6
# 170c2250b0cd46d3baf161694c6b63ac
# 7a9120d6f61145a580a210b81de5af86
# be2ce7b568584a9197ee4975f01eb1f1
#: ../../ref/contrib/gis/geoquerysets.txt:42
#: ../../ref/contrib/gis/geoquerysets.txt:64
#: ../../ref/contrib/gis/geoquerysets.txt:86
#: ../../ref/contrib/gis/geoquerysets.txt:107
#: ../../ref/contrib/gis/geoquerysets.txt:136
#: ../../ref/contrib/gis/geoquerysets.txt:156
#: ../../ref/contrib/gis/geoquerysets.txt:177
#: ../../ref/contrib/gis/geoquerysets.txt:197
#: ../../ref/contrib/gis/geoquerysets.txt:217
#: ../../ref/contrib/gis/geoquerysets.txt:252
#: ../../ref/contrib/gis/geoquerysets.txt:333
#: ../../ref/contrib/gis/geoquerysets.txt:355
#: ../../ref/contrib/gis/geoquerysets.txt:546
#: ../../ref/contrib/gis/geoquerysets.txt:566
#: ../../ref/contrib/gis/geoquerysets.txt:586
#: ../../ref/contrib/gis/geoquerysets.txt:606
#: ../../ref/contrib/gis/geoquerysets.txt:626
msgid "Backend"
msgstr ""

# f1b62dd939374a82a024981bbb232e45
# 4503bf9495af45baaefff1280edc2926
# 642953ffa3e14c55b9b723fa3b27467d
# 7eb99061e19f4dc39e74112c80788eeb
# 0bb9a7dbd90949038d01da1da90a5fef
# dafd0badf9d949fab60b33e1245e9330
# b0e5ccefe2994826a06878374a1304f8
# 5059bd6d97df416596db41bad249690b
# 90eb937687364e52ba5cc5110835541e
# 0edd3b924ca84436aa71b2d1de32a437
# e63f5e0bb02a4d5a955d166143aacbfe
# d8e9887ab1d0427dbc9d9de5794cafc8
# a05abfe19c74435fbe4844a841a85570
# f5b8a7ab8027432eb05ecdbd73b0bac1
# 6729a549072d4e498c276da0e9ef3fed
# d0172640e9ff4b009043e1f98ef8ed3e
# 7b703c46f425455281efc17db633b967
#: ../../ref/contrib/gis/geoquerysets.txt:42
#: ../../ref/contrib/gis/geoquerysets.txt:64
#: ../../ref/contrib/gis/geoquerysets.txt:86
#: ../../ref/contrib/gis/geoquerysets.txt:107
#: ../../ref/contrib/gis/geoquerysets.txt:136
#: ../../ref/contrib/gis/geoquerysets.txt:156
#: ../../ref/contrib/gis/geoquerysets.txt:177
#: ../../ref/contrib/gis/geoquerysets.txt:197
#: ../../ref/contrib/gis/geoquerysets.txt:217
#: ../../ref/contrib/gis/geoquerysets.txt:252
#: ../../ref/contrib/gis/geoquerysets.txt:333
#: ../../ref/contrib/gis/geoquerysets.txt:355
#: ../../ref/contrib/gis/geoquerysets.txt:546
#: ../../ref/contrib/gis/geoquerysets.txt:566
#: ../../ref/contrib/gis/geoquerysets.txt:586
#: ../../ref/contrib/gis/geoquerysets.txt:606
#: ../../ref/contrib/gis/geoquerysets.txt:626
msgid "SQL Equivalent"
msgstr ""

# b6fd04156b714a39983eee61d79d6609
#: ../../ref/contrib/gis/geoquerysets.txt:44
msgid "``poly ~ geom``"
msgstr ""

# adb5a87761e64dd5a6f88b46bea6430f
# c8a07956efa04886ad2e57c19952a0f3
# 343f14e8734540b6bca99e012942958e
# 492fb225d5404b1585899896e2891efa
# 8dd4f3f334524986994021d3563f6d1b
# 8b747c6f11ef4d6f9b388162a913ef0d
# 543a38d9548d47f7a597acb70b6d7424
# 58edc6810bea46d48ad50ab71d48434a
# 6bec66b2c68841708b61611970f0f95b
#: ../../ref/contrib/gis/geoquerysets.txt:45
#: ../../ref/contrib/gis/geoquerysets.txt:67
#: ../../ref/contrib/gis/geoquerysets.txt:89
#: ../../ref/contrib/gis/geoquerysets.txt:111
#: ../../ref/contrib/gis/geoquerysets.txt:221
#: ../../ref/contrib/gis/geoquerysets.txt:256
#: ../../ref/contrib/gis/geoquerysets.txt:336
#: ../../ref/contrib/gis/geoquerysets.txt:358
#: ../../ref/contrib/gis/install.txt:67
msgid "MySQL"
msgstr ""

# f0e3097ef47347baa629324dfbcaac8b
# 3cef23e0807a45bca660a862b286b99e
#: ../../ref/contrib/gis/geoquerysets.txt:45
#: ../../ref/contrib/gis/geoquerysets.txt:111
msgid "``MBRContains(poly, geom)``"
msgstr ""

# d7caffe2208844cd87bb03581cc5b36a
#: ../../ref/contrib/gis/geoquerysets.txt:46
msgid "``MbrContains(poly, geom)``"
msgstr ""

# 2495bde80e3b45a5833737f8b8cabfef
#: ../../ref/contrib/gis/geoquerysets.txt:52
msgid "bboverlaps"
msgstr ""

# 3b958a13d86041c1ac29b67da3a89d4a
#: ../../ref/contrib/gis/geoquerysets.txt:56
msgid ""
"Tests if the geometry field's bounding box overlaps the lookup geometry's "
"bounding box."
msgstr ""

# 025e4fee61294b8882e547e4dcf0c5d2
#: ../../ref/contrib/gis/geoquerysets.txt:66
msgid "``poly && geom``"
msgstr ""

# 953bc4460b4640199e4342af68b5dde0
#: ../../ref/contrib/gis/geoquerysets.txt:67
msgid "``MBROverlaps(poly, geom)``"
msgstr ""

# 98e250efd3154ec1a7bc311d952329f9
#: ../../ref/contrib/gis/geoquerysets.txt:68
msgid "``MbrOverlaps(poly, geom)``"
msgstr ""

# bef203c5d1634dc39d6dc902e2201baa
#: ../../ref/contrib/gis/geoquerysets.txt:74
msgid "contained"
msgstr ""

# ee04afb081804380aa20c4517c21c27c
#: ../../ref/contrib/gis/geoquerysets.txt:78
msgid ""
"Tests if the geometry field's bounding box is completely contained by the "
"lookup geometry's bounding box."
msgstr ""

# c90d4f7c0f88438eb369352f1e096f59
#: ../../ref/contrib/gis/geoquerysets.txt:88
msgid "``poly @ geom``"
msgstr ""

# 3e53925ecaa848308a3c1192fb7a8c02
# c89cd3b1e2c7418fbc044754ad066192
#: ../../ref/contrib/gis/geoquerysets.txt:89
#: ../../ref/contrib/gis/geoquerysets.txt:358
msgid "``MBRWithin(poly, geom)``"
msgstr ""

# 8f13e2cc92084459800905194dd2feb4
#: ../../ref/contrib/gis/geoquerysets.txt:90
msgid "``MbrWithin(poly, geom)``"
msgstr ""

# 2a6da6b70933461a8f11731f969aadf3
# 0664508bb46440319e02e1008547408d
#: ../../ref/contrib/gis/geoquerysets.txt:96
#: ../../ref/models/querysets.txt:1704
msgid "contains"
msgstr ""

# 753226a4c0094f5daf66f6e840b063ac
# 3808b6df2c894284bbefa716666ba3c7
# 16edb041eca644da998f60aa5d0653a7
# 2a497a87628f46f28fac9219b124a294
# 78c57f08abe943b183ed0c5c404a134c
# 735c943ac36f4c46962ca97e73e960d0
# d8cb057a373b4d1f808685ee7be115d9
# 07464f33678c4cc7bc40d97610713a06
#: ../../ref/contrib/gis/geoquerysets.txt:98
#: ../../ref/contrib/gis/geoquerysets.txt:208
#: ../../ref/contrib/gis/geoquerysets.txt:228
#: ../../ref/contrib/gis/geoquerysets.txt:236
#: ../../ref/contrib/gis/geoquerysets.txt:243
#: ../../ref/contrib/gis/geoquerysets.txt:265
#: ../../ref/contrib/gis/geoquerysets.txt:324
#: ../../ref/contrib/gis/geoquerysets.txt:346
msgid "*Availability*: PostGIS, Oracle, MySQL, SpatiaLite"
msgstr ""

# c0b95c6a9cec4c8ba1a9957009022703
#: ../../ref/contrib/gis/geoquerysets.txt:100
msgid "Tests if the geometry field spatially contains the lookup geometry."
msgstr ""

# 6db7518fe9944cf6a6dd4c80a3dabdb1
#: ../../ref/contrib/gis/geoquerysets.txt:109
msgid "``ST_Contains(poly, geom)``"
msgstr ""

# ee973372966a4320976c8f3b7aa3f012
#: ../../ref/contrib/gis/geoquerysets.txt:110
msgid "``SDO_CONTAINS(poly, geom)``"
msgstr ""

# c1f5223be3bb4a6783be11a0f19a248e
#: ../../ref/contrib/gis/geoquerysets.txt:112
msgid "``Contains(poly, geom)``"
msgstr ""

# b4f0d0ed06984c1284be0616eb91d582
#: ../../ref/contrib/gis/geoquerysets.txt:118
msgid "contains_properly"
msgstr ""

# 2f81ea46b2a84a0db1ebb01636d8b6da
# 771f3ff57d7847a49435399e491493ae
# cb1d9d1779d7405bb030ec761c791883
# 5677393825e2456e92ffc694100f9e23
# d8c24749640f4650b02695eca2cd1424
# 7a417792590a4ce19628c2ef2eeae73d
# 1062407424004b2fb15bdeb6aed96122
# 57d632b475a54e87af284fbb64848c50
# 6524f90b40414b5784699a7ffdba1265
# e6917c09d25141288f4a85b3b8419434
# aba82d85a9594138ad69cce12784d306
# 6a610d35762a45299d9948e2b912ac57
# b994cb11d6a640499f6bec7a11fd3715
# 5525b18926224a809d02812c1128fad6
# 5faea20b897f4c2e95754df0cffcfb48
#: ../../ref/contrib/gis/geoquerysets.txt:122
#: ../../ref/contrib/gis/geoquerysets.txt:368
#: ../../ref/contrib/gis/geoquerysets.txt:386
#: ../../ref/contrib/gis/geoquerysets.txt:404
#: ../../ref/contrib/gis/geoquerysets.txt:423
#: ../../ref/contrib/gis/geoquerysets.txt:441
#: ../../ref/contrib/gis/geoquerysets.txt:459
#: ../../ref/contrib/gis/geoquerysets.txt:477
#: ../../ref/contrib/gis/geoquerysets.txt:495
#: ../../ref/contrib/gis/geoquerysets.txt:808
#: ../../ref/contrib/gis/geoquerysets.txt:958
#: ../../ref/contrib/gis/geoquerysets.txt:1071
#: ../../ref/contrib/gis/geoquerysets.txt:1110
#: ../../ref/contrib/gis/geoquerysets.txt:1141
#: ../../ref/contrib/gis/geoquerysets.txt:1157
msgid "*Availability*: PostGIS"
msgstr ""

# a4fc11d512944a85ba50c65fb3c24772
#: ../../ref/contrib/gis/geoquerysets.txt:124
msgid ""
"Returns true if the lookup geometry intersects the interior of the geometry "
"field, but not the boundary (or exterior). [#fncontainsproperly]_"
msgstr ""

# 5cc2f37c08274dd995bd083d1308ee57
#: ../../ref/contrib/gis/geoquerysets.txt:129
msgid "Requires PostGIS 1.4 and above."
msgstr ""

# 707944b47e184c47b6d46a9907bca073
#: ../../ref/contrib/gis/geoquerysets.txt:138
msgid "``ST_ContainsProperly(poly, geom)``"
msgstr ""

# 7ddd06eb2daf47179cac5ce558ebb7a9
#: ../../ref/contrib/gis/geoquerysets.txt:144
msgid "coveredby"
msgstr ""

# 23a6558d8f5b47b3ae88b935c4da0935
# f55dbc3799fa4b69b9ba1eedd3fdda58
# eae36492e93f49baaca720df20c5f698
# 7ff41de8e4af4728aef07112f7e556d8
#: ../../ref/contrib/gis/geoquerysets.txt:146
#: ../../ref/contrib/gis/geoquerysets.txt:167
#: ../../ref/contrib/gis/geoquerysets.txt:821
#: ../../ref/contrib/gis/geoquerysets.txt:1123
msgid "*Availability*: PostGIS, Oracle"
msgstr ""

# cbef571f8c0043cf9b896c094750ca48
#: ../../ref/contrib/gis/geoquerysets.txt:148
msgid ""
"Tests if no point in the geometry field is outside the lookup geometry. "
"[#fncovers]_"
msgstr ""

# 4bdb5967be734554b27e18146be8ffa0
#: ../../ref/contrib/gis/geoquerysets.txt:158
msgid "``ST_CoveredBy(poly, geom)``"
msgstr ""

# f1ee33debbb241f4b369fae964be9954
#: ../../ref/contrib/gis/geoquerysets.txt:159
msgid "``SDO_COVEREDBY(poly, geom)``"
msgstr ""

# b9df723742c34d1283bee1b118f23a55
#: ../../ref/contrib/gis/geoquerysets.txt:165
msgid "covers"
msgstr ""

# 7ec75d06ed2d4823bb0209778d2879d4
#: ../../ref/contrib/gis/geoquerysets.txt:169
msgid ""
"Tests if no point in the lookup geometry is outside the geometry field. "
"[#fncovers]_"
msgstr ""

# 12d6db79b4e646efb53745136080d2a6
#: ../../ref/contrib/gis/geoquerysets.txt:179
msgid "``ST_Covers(poly, geom)``"
msgstr ""

# dd320d84faf845e8ba7beffb62037398
#: ../../ref/contrib/gis/geoquerysets.txt:180
msgid "``SDO_COVERS(poly, geom)``"
msgstr ""

# 4c155d236ebe47218e27353bc4e9e6e7
#: ../../ref/contrib/gis/geoquerysets.txt:186
msgid "crosses"
msgstr ""

# 13af4c2f288b489fb17a3d92fd6d221c
# 542eb8c5524347d2b047c3ebb7a0abdb
# 2b886b9383b048158d46650b7d4d85c8
# b2013f07a87e41d3bada740ede1d5e4e
# acb19dbb6fba4814a991daf017e3da07
# c538a377129144a580b4adb505b07a1c
#: ../../ref/contrib/gis/geoquerysets.txt:188
#: ../../ref/contrib/gis/geoquerysets.txt:782
#: ../../ref/contrib/gis/geoquerysets.txt:831
#: ../../ref/contrib/gis/geoquerysets.txt:886
#: ../../ref/contrib/gis/geoquerysets.txt:1016
#: ../../ref/contrib/gis/geoquerysets.txt:1044
msgid "*Availability*: PostGIS, SpatiaLite"
msgstr ""

# ebfa250463b54eb7ac312c9e2f6dc028
#: ../../ref/contrib/gis/geoquerysets.txt:190
msgid "Tests if the geometry field spatially crosses the lookup geometry."
msgstr ""

# 1ddffc20a19940039dca05c024ee4fae
#: ../../ref/contrib/gis/geoquerysets.txt:199
msgid "``ST_Crosses(poly, geom)``"
msgstr ""

# 0ce8e122b621412ea9b7eba96ac1779b
#: ../../ref/contrib/gis/geoquerysets.txt:200
msgid "``Crosses(poly, geom)``"
msgstr ""

# 35e4678f4ced4e20a6d4866fd0da88e8
#: ../../ref/contrib/gis/geoquerysets.txt:206
msgid "disjoint"
msgstr ""

# ec64e5199657457db7c34503c4e0f7f1
#: ../../ref/contrib/gis/geoquerysets.txt:210
msgid ""
"Tests if the geometry field is spatially disjoint from the lookup geometry."
msgstr ""

# 24fd7f9bd5c2486ab1dd7f38a4506de8
#: ../../ref/contrib/gis/geoquerysets.txt:219
msgid "``ST_Disjoint(poly, geom)``"
msgstr ""

# 66992e5b0fe94977a89cfe253e8b5ec2
#: ../../ref/contrib/gis/geoquerysets.txt:220
msgid "``SDO_GEOM.RELATE(poly, 'DISJOINT', geom, 0.05)``"
msgstr ""

# 0c1bff5707b94532a64825420e0310e3
#: ../../ref/contrib/gis/geoquerysets.txt:221
msgid "``MBRDisjoint(poly, geom)``"
msgstr ""

# 7bbc613ae4094d538a891387af5b3890
#: ../../ref/contrib/gis/geoquerysets.txt:222
msgid "``Disjoint(poly, geom)``"
msgstr ""

# 8ed1399c6b0d4e01962774a021cffdd0
#: ../../ref/contrib/gis/geoquerysets.txt:226
msgid "equals"
msgstr ""

# 7815186391c2459888a25ff7d618a089
#: ../../ref/contrib/gis/geoquerysets.txt:234
msgid "exact, same_as"
msgstr ""

# 84959caab75e4733a87132c6ce25e59b
#: ../../ref/contrib/gis/geoquerysets.txt:241
msgid "intersects"
msgstr ""

# 24677d5e6a084a8da8cfb18ed4f0bdc2
#: ../../ref/contrib/gis/geoquerysets.txt:245
msgid "Tests if the geometry field spatially intersects the lookup geometry."
msgstr ""

# 537c0318624b4b4799823aa520ebed34
#: ../../ref/contrib/gis/geoquerysets.txt:254
msgid "``ST_Intersects(poly, geom)``"
msgstr ""

# b2446d94df204b3a8837f9b68e60b1b9
#: ../../ref/contrib/gis/geoquerysets.txt:255
msgid "``SDO_OVERLAPBDYINTERSECT(poly, geom)``"
msgstr ""

# 62017093a01f462fa03efca3987a3df2
#: ../../ref/contrib/gis/geoquerysets.txt:256
msgid "``MBRIntersects(poly, geom)``"
msgstr ""

# fa74d2b2973b408fb61628597bd5e5d1
#: ../../ref/contrib/gis/geoquerysets.txt:257
msgid "``Intersects(poly, geom)``"
msgstr ""

# 9a694a6cd4574327b721350643471e7b
#: ../../ref/contrib/gis/geoquerysets.txt:263
msgid "overlaps"
msgstr ""

# 9f0e2f6a43ee47e99c602c97685df528
#: ../../ref/contrib/gis/geoquerysets.txt:270
msgid "relate"
msgstr ""

# 9a811d04ffd04b499d16c8f269c4d721
#: ../../ref/contrib/gis/geoquerysets.txt:274
msgid ""
"Tests if the geometry field is spatially related to the lookup geometry by "
"the values given in the given pattern.  This lookup requires a tuple "
"parameter, ``(geom, pattern)``; the form of ``pattern`` will depend on the "
"spatial backend:"
msgstr ""

# 197a8732179440ecabe7d205ed7f9b4b
#: ../../ref/contrib/gis/geoquerysets.txt:279
msgid "PostGIS & SpatiaLite"
msgstr ""

# 484eb4fa2d2a4cb8a6d51fee99ad26ce
#: ../../ref/contrib/gis/geoquerysets.txt:280
msgid ""
"On these spatial backends the intersection pattern is a string comprising "
"nine characters, which  define intersections between  the interior, "
"boundary, and exterior of the geometry field and the lookup geometry. The "
"intersection pattern matrix may only use the following characters: ``1``, "
"``2``, ``T``, ``F``, or ``*``.  This lookup type allows users to \"fine tune"
"\" a specific geometric relationship consistent with the DE-9IM model. "
"[#fnde9im]_"
msgstr ""

# d6bb4d4633bb4157adf9272818364590
#: ../../ref/contrib/gis/geoquerysets.txt:293
msgid "PostGIS SQL equivalent::"
msgstr ""

# ab83fa67881147f4b0be87a6f1257261
#: ../../ref/contrib/gis/geoquerysets.txt:297
msgid "SpatiaLite SQL equivalent::"
msgstr ""

# 5b6a211d701943668f9d7ac2007254aa
#: ../../ref/contrib/gis/geoquerysets.txt:304
msgid ""
"Here the relation pattern is comprised at least one of the nine relation "
"strings: ``TOUCH``, ``OVERLAPBDYDISJOINT``, ``OVERLAPBDYINTERSECT``, "
"``EQUAL``, ``INSIDE``, ``COVEREDBY``, ``CONTAINS``, ``COVERS``, ``ON``, and "
"``ANYINTERACT``.   Multiple strings may be combined with the logical Boolean "
"operator OR, for example, ``'inside+touch'``. [#fnsdorelate]_  The relation "
"strings are case-insensitive."
msgstr ""

# 74d228daacbe48828f746253e9a0236d
#: ../../ref/contrib/gis/geoquerysets.txt:315
msgid "Oracle SQL equivalent::"
msgstr ""

# dfd0352eebd54e69983da35702c5013c
#: ../../ref/contrib/gis/geoquerysets.txt:322
msgid "touches"
msgstr ""

# dc3940c09df847b8bc2e92987e95ea92
#: ../../ref/contrib/gis/geoquerysets.txt:326
msgid "Tests if the geometry field spatially touches the lookup geometry."
msgstr ""

# 548aad28d4b04e0c90974e539977ff9a
#: ../../ref/contrib/gis/geoquerysets.txt:335
msgid "``ST_Touches(poly, geom)``"
msgstr ""

# 06b403cf29da479d8911e2068376d190
#: ../../ref/contrib/gis/geoquerysets.txt:336
msgid "``MBRTouches(poly, geom)``"
msgstr ""

# 961d9696ba3e4ef2a19d318b795b0a20
#: ../../ref/contrib/gis/geoquerysets.txt:337
msgid "``SDO_TOUCH(poly, geom)``"
msgstr ""

# 0d0a2f82c2584a978baeb39d966c443c
#: ../../ref/contrib/gis/geoquerysets.txt:338
msgid "``Touches(poly, geom)``"
msgstr ""

# e80e827c0bcf4c57b3c76b6c7fe85d56
#: ../../ref/contrib/gis/geoquerysets.txt:344
msgid "within"
msgstr ""

# dbcbd86f83ff4beebb71dc67b27e9772
#: ../../ref/contrib/gis/geoquerysets.txt:348
msgid "Tests if the geometry field is spatially within the lookup geometry."
msgstr ""

# 46ba58c56d54426495177ea6d37df2a8
#: ../../ref/contrib/gis/geoquerysets.txt:357
msgid "``ST_Within(poly, geom)``"
msgstr ""

# a32dcc2cf1f5450a8ccaa9fa4d9272fb
#: ../../ref/contrib/gis/geoquerysets.txt:359
msgid "``SDO_INSIDE(poly, geom)``"
msgstr ""

# 0f281263f66943379387bd6cc598b9aa
#: ../../ref/contrib/gis/geoquerysets.txt:360
msgid "``Within(poly, geom)``"
msgstr ""

# 513e971633734442a455a914ffc767b6
#: ../../ref/contrib/gis/geoquerysets.txt:366
msgid "left"
msgstr ""

# 9bf857be14de4f6999767fe01cb6f4bf
#: ../../ref/contrib/gis/geoquerysets.txt:370
msgid ""
"Tests if the geometry field's bounding box is strictly to the left of the "
"lookup geometry's bounding box."
msgstr ""

# ea31ff3405c942f7975f2efb08ae3495
# 553ba4acf8f34900a45de715b7f3945b
# 562ea65b4f6a43899fb2671cf4b9ee6c
# d0374023429a436eb5710ca542a840e7
# efff0167ae7043d1989f5d2c1d1079c0
# fc2f2e3dee284f08a211547edb092b26
# 9d9cfcf8b6984cc0bf941a869ce4166d
# d34e033ca63d415297516f848abb14d2
#: ../../ref/contrib/gis/geoquerysets.txt:377
#: ../../ref/contrib/gis/geoquerysets.txt:395
#: ../../ref/contrib/gis/geoquerysets.txt:413
#: ../../ref/contrib/gis/geoquerysets.txt:432
#: ../../ref/contrib/gis/geoquerysets.txt:450
#: ../../ref/contrib/gis/geoquerysets.txt:468
#: ../../ref/contrib/gis/geoquerysets.txt:486
#: ../../ref/contrib/gis/geoquerysets.txt:504
msgid "PostGIS equivalent::"
msgstr ""

# 3d74857428f0474c9b9aa16440a7278d
#: ../../ref/contrib/gis/geoquerysets.txt:384
msgid "right"
msgstr ""

# a952cd89e8084bafb1b2ac1b3c5e7816
#: ../../ref/contrib/gis/geoquerysets.txt:388
msgid ""
"Tests if the geometry field's bounding box is strictly to the right of the "
"lookup geometry's bounding box."
msgstr ""

# 171ffa98359347ee99a23a59dbed9627
#: ../../ref/contrib/gis/geoquerysets.txt:402
msgid "overlaps_left"
msgstr ""

# 2f47054b72f24f06a3b1a5cc34717506
#: ../../ref/contrib/gis/geoquerysets.txt:406
msgid ""
"Tests if the geometry field's bounding box overlaps or is to the left of the "
"lookup geometry's bounding box."
msgstr ""

# 96d6fa3232ef4e4e91851ced6d305fbe
#: ../../ref/contrib/gis/geoquerysets.txt:421
msgid "overlaps_right"
msgstr ""

# d6ef10658d4f405696faec18c888af31
#: ../../ref/contrib/gis/geoquerysets.txt:425
msgid ""
"Tests if the geometry field's bounding box overlaps or is to the right of "
"the lookup geometry's bounding box."
msgstr ""

# fa8b67b810fb46099d65849579bfee04
#: ../../ref/contrib/gis/geoquerysets.txt:439
msgid "overlaps_above"
msgstr ""

# 620852c63d724ab4b1b017954424f3d5
#: ../../ref/contrib/gis/geoquerysets.txt:443
msgid ""
"Tests if the geometry field's bounding box overlaps or is above the lookup "
"geometry's bounding box."
msgstr ""

# ebde194a433f46868bf01127a95a6893
#: ../../ref/contrib/gis/geoquerysets.txt:457
msgid "overlaps_below"
msgstr ""

# de96aa16521e451e82ddedef1b131f2f
#: ../../ref/contrib/gis/geoquerysets.txt:461
msgid ""
"Tests if the geometry field's bounding box overlaps or is below the lookup "
"geometry's bounding box."
msgstr ""

# 0e1aeb53974845b199093af497410829
#: ../../ref/contrib/gis/geoquerysets.txt:475
msgid "strictly_above"
msgstr ""

# 39dafdcbba7a4c72b57321eeb016ea7f
# 52eaa86549cc4c248d75cf7ed063728a
#: ../../ref/contrib/gis/geoquerysets.txt:479
#: ../../ref/contrib/gis/geoquerysets.txt:497
msgid ""
"Tests if the geometry field's bounding box is strictly above the lookup "
"geometry's bounding box."
msgstr ""

# b21d519c06ab4684a6360a397760bf64
#: ../../ref/contrib/gis/geoquerysets.txt:493
msgid "strictly_below"
msgstr ""

# bd1f53a37f484c60b71027b057062975
#: ../../ref/contrib/gis/geoquerysets.txt:516
msgid ""
"For an overview on performing distance queries, please refer to the :ref:"
"`distance queries introduction <distance-queries>`."
msgstr ""

# 46d3d8ce72ed4b25aee73c82d635bbd7
#: ../../ref/contrib/gis/geoquerysets.txt:519
msgid "Distance lookups take the following form::"
msgstr ""

# dabc7faaf5744c28a4abf2f4479826f5
#: ../../ref/contrib/gis/geoquerysets.txt:523
msgid ""
"The value passed into a distance lookup is a tuple; the first two values are "
"mandatory, and are the geometry to calculate distances to, and a distance "
"value (either a number in units of the field or a :class:`~django.contrib."
"gis.measure.Distance` object).  On every distance lookup but :lookup:"
"`dwithin`, an optional third element, ``'spheroid'``, may be included to "
"tell GeoDjango to use the more accurate spheroid distance calculation "
"functions on fields with a geodetic coordinate system (e.g., "
"``ST_Distance_Spheroid`` would be used instead of ``ST_Distance_Sphere``)."
msgstr ""

# f3d92e8069814ccda74c7d7052e04d10
#: ../../ref/contrib/gis/geoquerysets.txt:536
msgid "distance_gt"
msgstr ""

# 54919872e6b7473885406ddf41385cce
#: ../../ref/contrib/gis/geoquerysets.txt:538
msgid ""
"Returns models where the distance to the geometry field from the lookup "
"geometry is greater than the given distance value."
msgstr ""

# 808c4624708e47a99204dbc3df0be467
#: ../../ref/contrib/gis/geoquerysets.txt:548
msgid "``ST_Distance(poly, geom) > 5``"
msgstr ""

# 6c1ae4200ac84206950cf9689a79493b
#: ../../ref/contrib/gis/geoquerysets.txt:549
msgid "``SDO_GEOM.SDO_DISTANCE(poly, geom, 0.05) > 5``"
msgstr ""

# 7058a3d50c1a4acf9c329c12e3e981e9
#: ../../ref/contrib/gis/geoquerysets.txt:550
msgid "``Distance(poly, geom) > 5``"
msgstr ""

# 3e1bff2d039048909d387f6615b8903d
#: ../../ref/contrib/gis/geoquerysets.txt:556
msgid "distance_gte"
msgstr ""

# e338e2e5a0c34e6383f9b3f91b63c85c
#: ../../ref/contrib/gis/geoquerysets.txt:558
msgid ""
"Returns models where the distance to the geometry field from the lookup "
"geometry is greater than or equal to the given distance value."
msgstr ""

# 0f8f71237a1f42fb92eaf0bde9720ae0
#: ../../ref/contrib/gis/geoquerysets.txt:568
msgid "``ST_Distance(poly, geom) >= 5``"
msgstr ""

# ef2bc7aec1fe46fab210865f7a11d713
#: ../../ref/contrib/gis/geoquerysets.txt:569
msgid "``SDO_GEOM.SDO_DISTANCE(poly, geom, 0.05) >= 5``"
msgstr ""

# cf5174dfd27549d0aa55fbc8c3f2787e
#: ../../ref/contrib/gis/geoquerysets.txt:570
msgid "``Distance(poly, geom) >= 5``"
msgstr ""

# 1840fac8f9b14ce08b61f4cc1cd8ab36
#: ../../ref/contrib/gis/geoquerysets.txt:576
msgid "distance_lt"
msgstr ""

# 3bfa689a7a5c468595e45755c2dfc958
#: ../../ref/contrib/gis/geoquerysets.txt:578
msgid ""
"Returns models where the distance to the geometry field from the lookup "
"geometry is less than the given distance value."
msgstr ""

# c6f517f7ec384257990603861c7a0c69
#: ../../ref/contrib/gis/geoquerysets.txt:588
msgid "``ST_Distance(poly, geom) < 5``"
msgstr ""

# a1d15f8feb1d4cdbb69abfd09adb3084
#: ../../ref/contrib/gis/geoquerysets.txt:589
msgid "``SDO_GEOM.SDO_DISTANCE(poly, geom, 0.05) < 5``"
msgstr ""

# 1d437dd525df4c2da37482aa3cb561d4
#: ../../ref/contrib/gis/geoquerysets.txt:590
msgid "``Distance(poly, geom) < 5``"
msgstr ""

# 68ec7e4e173d4a45a332a3e27a5bb687
#: ../../ref/contrib/gis/geoquerysets.txt:596
msgid "distance_lte"
msgstr ""

# 7b601866f9714db9a095ffe2ad5d7d09
#: ../../ref/contrib/gis/geoquerysets.txt:598
msgid ""
"Returns models where the distance to the geometry field from the lookup "
"geometry is less than or equal to the given distance value."
msgstr ""

# b4ea63d258334dc38784f7fd7498afe9
#: ../../ref/contrib/gis/geoquerysets.txt:608
msgid "``ST_Distance(poly, geom) <= 5``"
msgstr ""

# 928039ef74c6483a8c31ed595c5f3931
#: ../../ref/contrib/gis/geoquerysets.txt:609
msgid "``SDO_GEOM.SDO_DISTANCE(poly, geom, 0.05) <= 5``"
msgstr ""

# 924969bd4d784d6c88b4b9e12fc9aa36
#: ../../ref/contrib/gis/geoquerysets.txt:610
msgid "``Distance(poly, geom) <= 5``"
msgstr ""

# 9e8f908c7a3c4adf8a258d8a6288f7c5
#: ../../ref/contrib/gis/geoquerysets.txt:616
msgid "dwithin"
msgstr ""

# 8a38869b02fd423d98530ce92c9408c5
#: ../../ref/contrib/gis/geoquerysets.txt:618
msgid ""
"Returns models where the distance to the geometry field from the lookup "
"geometry are within the given distance from one another."
msgstr ""

# 6d7e3e04c8344601a9db63795c3511d9
#: ../../ref/contrib/gis/geoquerysets.txt:628
msgid "``ST_DWithin(poly, geom, 5)``"
msgstr ""

# 4eaff69c0883473981c897f03736f1b2
#: ../../ref/contrib/gis/geoquerysets.txt:629
msgid "``SDO_WITHIN_DISTANCE(poly, geom, 5)``"
msgstr ""

# 403340781f2a49db8036eeaea31ae9e6
#: ../../ref/contrib/gis/geoquerysets.txt:634
msgid "This lookup is not available on SpatiaLite."
msgstr ""

# 716e0f41314f4ce49fd8676c672d6d08
#: ../../ref/contrib/gis/geoquerysets.txt:642
msgid ""
"``GeoQuerySet`` methods specify that a spatial operation be performed on "
"each patial operation on each geographic field in the queryset and store its "
"output in a new attribute on the model (which is generally the name of the "
"``GeoQuerySet`` method)."
msgstr ""

# 48d1b64d399040a9924f927b5ed12c66
#: ../../ref/contrib/gis/geoquerysets.txt:647
msgid ""
"There are also aggregate ``GeoQuerySet`` methods which return a single value "
"instead of a queryset.  This section will describe the API and availability "
"of every ``GeoQuerySet`` method available in GeoDjango."
msgstr ""

# 955de820e2eb45edb30d8462ec2299a3
#: ../../ref/contrib/gis/geoquerysets.txt:653
msgid ""
"What methods are available depend on your spatial backend.  See the :ref:"
"`compatibility table <geoqueryset-method-compatibility>` for more details."
msgstr ""

# 3985d27a1f5749c0ba89640e07cca3ca
#: ../../ref/contrib/gis/geoquerysets.txt:657
msgid ""
"With a few exceptions, the following keyword arguments may be used with all "
"``GeoQuerySet`` methods:"
msgstr ""

# 33e42f0ac25840f98c9c718dc4d60334
# 7e46c2adb18d46feaab8e627ed876075
# 0d70db9ebbe444108a0c38c344277b1c
# 4eb105d8d3fe4883abd3cae15ba5e232
# a416baf986fe4538aec87bd48d01f48a
# e49f5a7c459e48d588ae4e9d8bb81b3e
#: ../../ref/contrib/gis/geoquerysets.txt:661
#: ../../ref/contrib/gis/geoquerysets.txt:964
#: ../../ref/contrib/gis/geoquerysets.txt:997
#: ../../ref/contrib/gis/geoquerysets.txt:1030
#: ../../ref/contrib/gis/geoquerysets.txt:1050
#: ../../ref/contrib/gis/geoquerysets.txt:1190
msgid "Keyword Argument"
msgstr ""

# 436089821bca456fa39bb4b657d63a13
#: ../../ref/contrib/gis/geoquerysets.txt:663
msgid "``field_name``"
msgstr ""

# d846c7c6c4c5425fab1dd8b525d6ce5e
#: ../../ref/contrib/gis/geoquerysets.txt:663
msgid ""
"By default, ``GeoQuerySet`` methods use the first geographic field "
"encountered in the model.  This keyword should be used to specify another "
"geographic field (e.g., ``field_name='point2'``) when there are multiple "
"geographic fields in a model."
msgstr ""

# aa1ef20e86fb454da88ece0bda9f6a58
#: ../../ref/contrib/gis/geoquerysets.txt:669
msgid ""
"On PostGIS, the ``field_name`` keyword may also be used on geometry fields "
"in models that are related via a ``ForeignKey`` relation (e.g., "
"``field_name='related__point'``)."
msgstr ""

# 817e89a6952f4450a7927fec94fb507f
#: ../../ref/contrib/gis/geoquerysets.txt:674
msgid "``model_att``"
msgstr ""

# 4485af9e4efb410687d3633565708967
#: ../../ref/contrib/gis/geoquerysets.txt:674
msgid ""
"By default, ``GeoQuerySet`` methods typically attach their output in an "
"attribute with the same name as the ``GeoQuerySet`` method.  Setting this "
"keyword with the desired attribute name will override this default "
"behavior.  For example, ``qs = Zipcode.objects.centroid(model_att='c')`` "
"will attach the centroid of the ``Zipcode`` geometry field in a ``c`` "
"attribute on every model rather than in a ``centroid`` attribute."
msgstr ""

# da21975286c844e8abd565b2134f4323
#: ../../ref/contrib/gis/geoquerysets.txt:684
msgid ""
"This keyword is required if a method name clashes with an existing "
"``GeoQuerySet`` method -- if you wanted to use the ``area()`` method on "
"model with a ``PolygonField`` named ``area``, for example."
msgstr ""

# fa536b1c466d42608a4ca52f8c29d693
#: ../../ref/contrib/gis/geoquerysets.txt:692
msgid "Measurement"
msgstr ""

# 5cd2990ce67a4ada8980c0d7479779e7
#: ../../ref/contrib/gis/geoquerysets.txt:696
msgid "``area``"
msgstr ""

# 1c308509a3dd425ea7431d246c08f9db
#: ../../ref/contrib/gis/geoquerysets.txt:700
msgid ""
"Returns the area of the geographic field in an ``area`` attribute on each "
"element of this GeoQuerySet."
msgstr ""

# 2ac793b4c39f406da37aa7ce3124a04f
#: ../../ref/contrib/gis/geoquerysets.txt:704
msgid "``distance``"
msgstr ""

# e06469a261e64d78b363feb25293d58d
#: ../../ref/contrib/gis/geoquerysets.txt:708
msgid ""
"This method takes a geometry as a parameter, and attaches a ``distance`` "
"attribute to every model in the returned queryset that contains the distance "
"(as a :class:`~django.contrib.gis.measure.Distance` object) to the given "
"geometry."
msgstr ""

# b68d4cbaa28246e0b4154687e975d34b
#: ../../ref/contrib/gis/geoquerysets.txt:712
msgid ""
"In the following example (taken from the `GeoDjango distance tests`__), the "
"distance from the `Tasmanian`__ city of Hobart to every other :class:"
"`PointField` in the ``AustraliaCity`` queryset is calculated::"
msgstr ""

# 021bdf6aa02c49bcbaa8270f11f41212
#: ../../ref/contrib/gis/geoquerysets.txt:732
msgid ""
"Because the ``distance`` attribute is a :class:`~django.contrib.gis.measure."
"Distance` object, you can easily express the value in the units of your "
"choice.  For example, ``city.distance.mi`` is the distance value in miles "
"and ``city.distance.km`` is the distance value in kilometers.  See the :ref:"
"`ref-measure` for usage details and the list of :ref:`supported_units`."
msgstr ""

# 8d85db3080b3408a85dcce10a1308eb5
#: ../../ref/contrib/gis/geoquerysets.txt:743
msgid "``length``"
msgstr ""

# adbc19d55be14681a9b299cb9681d47d
#: ../../ref/contrib/gis/geoquerysets.txt:747
msgid ""
"Returns the length of the geometry field in a ``length`` attribute (a :class:"
"`~django.contrib.gis.measure.Distance` object) on each model in the queryset."
msgstr ""

# 5cea1eba3e4345e0af660ed8d3ece940
#: ../../ref/contrib/gis/geoquerysets.txt:752
msgid "``perimeter``"
msgstr ""

# ae9361579a03441c9c5ac181c56a2a5e
#: ../../ref/contrib/gis/geoquerysets.txt:756
msgid ""
"Returns the perimeter of the geometry field in a ``perimeter`` attribute (a :"
"class:`~django.contrib.gis.measure.Distance` object) on each model in the "
"queryset."
msgstr ""

# d755504b1e46408787b3fd3db17af53a
#: ../../ref/contrib/gis/geoquerysets.txt:761
msgid "Geometry Relationships"
msgstr ""

# 6bfaeacddf6b4c89a8bbcf2ae34dca24
#: ../../ref/contrib/gis/geoquerysets.txt:763
msgid ""
"The following methods take no arguments, and attach geometry objects each "
"element of the :class:`GeoQuerySet` that is the result of relationship "
"function evaluated on the geometry field."
msgstr ""

# 50200c8372e24b1db8eef7acee127082
#: ../../ref/contrib/gis/geoquerysets.txt:768
msgid "``centroid``"
msgstr ""

# d5ec45dfe06f4f6a8755ba75d9358e84
#: ../../ref/contrib/gis/geoquerysets.txt:774
msgid ""
"Returns the ``centroid`` value for the geographic field in a ``centroid`` "
"attribute on each element of the ``GeoQuerySet``."
msgstr ""

# 90c286a0e0394ba7a4bf3d464849aa65
#: ../../ref/contrib/gis/geoquerysets.txt:778
msgid "``envelope``"
msgstr ""

# 52bd86ec663e4c05aad93042b5838ece
#: ../../ref/contrib/gis/geoquerysets.txt:784
msgid ""
"Returns a geometry representing the bounding box of the geometry field in an "
"``envelope`` attribute on each element of the ``GeoQuerySet``."
msgstr ""

# a7d7871fa8ed471ca9b4c6288408a4fa
#: ../../ref/contrib/gis/geoquerysets.txt:788
msgid "``point_on_surface``"
msgstr ""

# 19a3774a91fe40fc9188a4bb8a3fcce2
#: ../../ref/contrib/gis/geoquerysets.txt:794
msgid ""
"Returns a Point geometry guaranteed to lie on the surface of the geometry "
"field in a ``point_on_surface`` attribute on each element of the queryset; "
"otherwise sets with None."
msgstr ""

# 338377418e454712a75298036a072003
#: ../../ref/contrib/gis/geoquerysets.txt:799
msgid "Geometry Editors"
msgstr ""

# 02db82484fee49e291cad5c980fb8fc5
#: ../../ref/contrib/gis/geoquerysets.txt:802
msgid "``force_rhr``"
msgstr ""

# 49114665ace049c4af7234424cea538f
#: ../../ref/contrib/gis/geoquerysets.txt:810
msgid ""
"Returns a modified version of the polygon/multipolygon in which all of the "
"vertices follow the Right-Hand-Rule, and attaches as a ``force_rhr`` "
"attribute on each element of the queryset."
msgstr ""

# 5d01e497bd564651993bde67963c00b3
#: ../../ref/contrib/gis/geoquerysets.txt:815
msgid "``reverse_geom``"
msgstr ""

# a72aa749a9384e1c96145658e883327d
#: ../../ref/contrib/gis/geoquerysets.txt:823
msgid ""
"Reverse the coordinate order of the geometry field, and attaches as a "
"``reverse`` attribute on each element of the queryset."
msgstr ""

# 143be6d44f804dc0a57693283261dfe7
#: ../../ref/contrib/gis/geoquerysets.txt:827
msgid "``scale``"
msgstr ""

# 33e0d97dbd32452f89f394fb6f96875a
#: ../../ref/contrib/gis/geoquerysets.txt:834
msgid "``snap_to_grid``"
msgstr ""

# 4d9b4818b8204960b7f7d96f09b9f3f8
#: ../../ref/contrib/gis/geoquerysets.txt:838
msgid ""
"Snap all points of the input geometry to the grid.  How the geometry is "
"snapped to the grid depends on how many numeric (either float, integer, or "
"long) arguments are given."
msgstr ""

# f646bb73022c4357a79392ed0b026311
#: ../../ref/contrib/gis/geoquerysets.txt:843
msgid "Number of Arguments"
msgstr ""

# 458933f8945e48919e9855b8a79ffd6d
# a314c7c9d64944c580b0e44b6b3ef38f
# f4d2bba418544035becbbdc19f73e7a3
#: ../../ref/contrib/gis/geoquerysets.txt:845
#: ../../ref/contrib/gis/geos.txt:183 ../../ref/contrib/gis/geos.txt:832
msgid "1"
msgstr ""

# 3e2f21d82abf42c5bd840bf7fe062899
#: ../../ref/contrib/gis/geoquerysets.txt:845
msgid "A single size to snap bot the X and Y grids to."
msgstr ""

# 84feaa17edfc40c88e5ca89b29c0ad18
# 221395aa27d64b70b8fe6f2ab18e44b1
# 9e385ad30a374e9e8c2aa11197a01287
#: ../../ref/contrib/gis/geoquerysets.txt:846
#: ../../ref/contrib/gis/geos.txt:184 ../../ref/contrib/gis/geos.txt:854
msgid "2"
msgstr ""

# f71fcc1a11e8417bb349f6488f1522f1
#: ../../ref/contrib/gis/geoquerysets.txt:846
msgid "X and Y sizes to snap the grid to."
msgstr ""

# 8d44454cf0f74f028daf8799c21c25ff
# 7a22f6c10a4e4fd39019fd29a2a7ab8f
#: ../../ref/contrib/gis/geoquerysets.txt:847
#: ../../ref/contrib/gis/geos.txt:186
msgid "4"
msgstr ""

# 74927768017041c4addfc5d7620ed18d
#: ../../ref/contrib/gis/geoquerysets.txt:847
msgid "X, Y sizes and the corresponding X, Y origins."
msgstr ""

# 98cb541504124a99817dd00f10d82ea9
# f5c9f632438e46e9afabd700e72ea56c
#: ../../ref/contrib/gis/geoquerysets.txt:851
#: ../../ref/contrib/gis/layermapping.txt:131
msgid "``transform``"
msgstr ""

# ed26110b9b464112afccba8cde34026b
#: ../../ref/contrib/gis/geoquerysets.txt:857
msgid ""
"The ``transform`` method transforms the geometry field of a model to the "
"spatial reference system specified by the ``srid`` parameter.  If no "
"``srid`` is given, then 4326 (WGS84) is used by default."
msgstr ""

# 393e07c92fb4454b80f06ce3165c121b
#: ../../ref/contrib/gis/geoquerysets.txt:863
msgid ""
"Unlike other ``GeoQuerySet`` methods, ``transform`` stores its output \"in-"
"place\".  In other words, no new attribute for the transformed geometry is "
"placed on the models."
msgstr ""

# 8fe6240e14dc4708a237e1c64b63e501
#: ../../ref/contrib/gis/geoquerysets.txt:869
msgid ""
"What spatial reference system an integer SRID corresponds to may depend on "
"the spatial database used.  In other words, the SRID numbers used for Oracle "
"are not necessarily the same as those used by PostGIS."
msgstr ""

# ab422c2f0a074bd0a12267d92d00fad8
#: ../../ref/contrib/gis/geoquerysets.txt:883
msgid "``translate``"
msgstr ""

# 3d96417c63f2444aa3ab55f3a8c47dd5
#: ../../ref/contrib/gis/geoquerysets.txt:888
msgid ""
"Translates the geometry field to a new location using the given numeric "
"parameters as offsets."
msgstr ""

# a2b45a15991e4af6a0bf5c514fdfbdf4
#: ../../ref/contrib/gis/geoquerysets.txt:892
msgid "Geometry Operations"
msgstr ""

# dbc46a87aeeb4aafa7669f25cb28fa02
#: ../../ref/contrib/gis/geoquerysets.txt:895
msgid ""
"The following methods all take a geometry as a parameter and attach a "
"geometry to each element of the ``GeoQuerySet`` that is the result of the "
"operation."
msgstr ""

# 6bd1b6fa50eb4101b05633654332a852
#: ../../ref/contrib/gis/geoquerysets.txt:899
msgid "``difference``"
msgstr ""

# 43c58821e7b9470bae2ae851dd9e1546
#: ../../ref/contrib/gis/geoquerysets.txt:903
msgid ""
"Returns the spatial difference of the geographic field with the given "
"geometry in a ``difference`` attribute on each element of the "
"``GeoQuerySet``."
msgstr ""

# 957322fb58854cb8bdb076a2de699dd6
#: ../../ref/contrib/gis/geoquerysets.txt:909
msgid "``intersection``"
msgstr ""

# 3d4866d47d9e49ef940dfc7393912ef3
#: ../../ref/contrib/gis/geoquerysets.txt:913
msgid ""
"Returns the spatial intersection of the geographic field with the given "
"geometry in an ``intersection`` attribute on each element of the "
"``GeoQuerySet``."
msgstr ""

# 1a22274e50594d599652a72b4285f4d3
#: ../../ref/contrib/gis/geoquerysets.txt:918
msgid "``sym_difference``"
msgstr ""

# 336b332db98c4f8cae7508a30187a9d6
#: ../../ref/contrib/gis/geoquerysets.txt:922
msgid ""
"Returns the symmetric difference of the geographic field with the given "
"geometry in a ``sym_difference`` attribute on each element of the "
"``GeoQuerySet``."
msgstr ""

# 5bc65af32c90445f9936c35a8525edba
#: ../../ref/contrib/gis/geoquerysets.txt:927
msgid "``union``"
msgstr ""

# 261c01df59aa415da041f9a6f40bc82b
#: ../../ref/contrib/gis/geoquerysets.txt:931
msgid ""
"Returns the union of the geographic field with the given geometry in an "
"``union`` attribute on each element of the ``GeoQuerySet``."
msgstr ""

# cca6b474fe7846fab12b8d486a917bf1
#: ../../ref/contrib/gis/geoquerysets.txt:936
msgid "Geometry Output"
msgstr ""

# aad10b35bdd04eceba95c98de1809702
#: ../../ref/contrib/gis/geoquerysets.txt:938
msgid ""
"The following ``GeoQuerySet`` methods will return an attribute that has the "
"value of the geometry field in each model converted to the requested output "
"format."
msgstr ""

# d7ca1cc8816a4619a0f82f0a1f25eb20
#: ../../ref/contrib/gis/geoquerysets.txt:942
msgid "``geohash``"
msgstr ""

# e250345e513e4f0f92a944d3b565f430
#: ../../ref/contrib/gis/geoquerysets.txt:948
msgid ""
"Attaches a ``geohash`` attribute to every model the queryset containing the "
"`GeoHash`__ representation of the geometry."
msgstr ""

# 89a76da698de47adb53afc95ac750f8f
#: ../../ref/contrib/gis/geoquerysets.txt:954
msgid "``geojson``"
msgstr ""

# 35dffc25234c4b829326e5332155234c
#: ../../ref/contrib/gis/geoquerysets.txt:960
msgid ""
"Attaches a ``geojson`` attribute to every model in the queryset that "
"contains the `GeoJSON`__ representation of the geometry."
msgstr ""

# 80777f32e3f54782bdb4cc2f018936ac
# d134961cee614704936ef3dd7eedcd7a
# f4d7ce307c1945fbb13fc5103c1aecb6
# a5c98b9af25b462cb88d2a54a04831ba
#: ../../ref/contrib/gis/geoquerysets.txt:966
#: ../../ref/contrib/gis/geoquerysets.txt:999
#: ../../ref/contrib/gis/geoquerysets.txt:1032
#: ../../ref/contrib/gis/geoquerysets.txt:1056
msgid "``precision``"
msgstr ""

# 03abec1bdd6f4b8980fc0f318052af8f
#: ../../ref/contrib/gis/geoquerysets.txt:966
msgid ""
"It may be used to specify the number of significant digits for the "
"coordinates in the GeoJSON representation -- the default value is 8."
msgstr ""

# 4d0c272fa1d9449bbea2d55daf1e9aaf
#: ../../ref/contrib/gis/geoquerysets.txt:970
msgid "``crs``"
msgstr ""

# 59569c8de002419db6c8ebdea6a5b7fc
#: ../../ref/contrib/gis/geoquerysets.txt:970
msgid ""
"Set this to ``True`` if you want the coordinate reference system to be "
"included in the returned GeoJSON."
msgstr ""

# ecfa1c5192004b3b84c821ac797e36ed
#: ../../ref/contrib/gis/geoquerysets.txt:974
msgid "``bbox``"
msgstr ""

# afd9147f95c044239153b5101a8debe0
#: ../../ref/contrib/gis/geoquerysets.txt:974
msgid ""
"Set this to ``True`` if you want the bounding box to be included in the "
"returned GeoJSON."
msgstr ""

# c5c6e081a4464944b9ae76fa3b90b447
#: ../../ref/contrib/gis/geoquerysets.txt:981
msgid "``gml``"
msgstr ""

# c4531e95539c4c909bdb1738b37f1a74
#: ../../ref/contrib/gis/geoquerysets.txt:987
msgid ""
"Attaches a ``gml`` attribute to every model in the queryset that contains "
"the `Geographic Markup Language (GML)`__ representation of the geometry."
msgstr ""

# 395b8676982843a5b7f572ca929cfe29
#: ../../ref/contrib/gis/geoquerysets.txt:999
msgid ""
"This keyword is for PostGIS only.  It may be used to specify the number of "
"significant digits for the coordinates in the GML representation -- the "
"default value is 8."
msgstr ""

# c073575b8fef4956abcdb74f485efb36
#: ../../ref/contrib/gis/geoquerysets.txt:1004
msgid "``version``"
msgstr ""

# 6ba89c0bd0c34145b0e1ed6250bcd47d
#: ../../ref/contrib/gis/geoquerysets.txt:1004
msgid ""
"This keyword is for PostGIS only.  It may be used to specify the GML version "
"used, and may only be values of 2 or 3.  The default value is 2."
msgstr ""

# aa4fb687b54b4b2f9026b8c9449ab7bb
#: ../../ref/contrib/gis/geoquerysets.txt:1012
msgid "``kml``"
msgstr ""

# c288690be9914d018d31b13e219cf93b
#: ../../ref/contrib/gis/geoquerysets.txt:1018
msgid ""
"Attaches a ``kml`` attribute to every model in the queryset that contains "
"the `Keyhole Markup Language (KML)`__ representation of the geometry fields. "
"It should be noted that the contents of the KML are transformed to WGS84 if "
"necessary."
msgstr ""

# bdf9d1c5d6f7489295aac6e34fb58614
#: ../../ref/contrib/gis/geoquerysets.txt:1032
msgid ""
"This keyword may be used to specify the number of significant digits for the "
"coordinates in the KML representation -- the default value is 8."
msgstr ""

# 9c6201e4b70a4917977e48397eae3952
#: ../../ref/contrib/gis/geoquerysets.txt:1040
msgid "``svg``"
msgstr ""

# fea3c3dcbe394701b99964ea0413a173
#: ../../ref/contrib/gis/geoquerysets.txt:1046
msgid ""
"Attaches a ``svg`` attribute to every model in the queryset that contains "
"the `Scalable Vector Graphics (SVG)`__ path data of the geometry fields."
msgstr ""

# 5c66d73c10cc47b09cac1305c8918b5e
#: ../../ref/contrib/gis/geoquerysets.txt:1052
msgid "``relative``"
msgstr ""

# fbca7e3dc56e4cffa3a646790c9217c5
#: ../../ref/contrib/gis/geoquerysets.txt:1052
msgid ""
"If set to ``True``, the path data will be implemented in terms of relative "
"moves.  Defaults to ``False``, meaning that absolute moves are used instead."
msgstr ""

# 5364cd61237040a3a97368f42cf0a91d
#: ../../ref/contrib/gis/geoquerysets.txt:1056
msgid ""
"This keyword may be used to specify the number of significant digits for the "
"coordinates in the SVG representation -- the default value is 8."
msgstr ""

# 1e6d87881f3f45789c4c36b79ca42e8a
#: ../../ref/contrib/gis/geoquerysets.txt:1064
msgid "Miscellaneous"
msgstr ""

# 6a3b13a780b641a78aa37f4f63385dde
#: ../../ref/contrib/gis/geoquerysets.txt:1067
msgid "``mem_size``"
msgstr ""

# b8e99186041a48289e7f743efb1f36e6
#: ../../ref/contrib/gis/geoquerysets.txt:1073
msgid ""
"Returns the memory size (number of bytes) that the geometry field takes in a "
"``mem_size`` attribute  on each element of the ``GeoQuerySet``."
msgstr ""

# 184ece7a3e3644e7836ca719119289c7
#: ../../ref/contrib/gis/geoquerysets.txt:1077
msgid "``num_geom``"
msgstr ""

# 6a1edfa73e404858a8b607d5ca0caa04
#: ../../ref/contrib/gis/geoquerysets.txt:1083
msgid ""
"Returns the number of geometries in a ``num_geom`` attribute on each element "
"of the ``GeoQuerySet`` if the geometry field is a collection (e.g., a "
"``GEOMETRYCOLLECTION`` or ``MULTI*`` field); otherwise sets with ``None``."
msgstr ""

# ae6e17bb439b4005898b6d9ad42d23ba
#: ../../ref/contrib/gis/geoquerysets.txt:1089
msgid "``num_points``"
msgstr ""

# 6a6bb34341ac4e0f9ce7020f4a73f363
#: ../../ref/contrib/gis/geoquerysets.txt:1095
msgid ""
"Returns the number of points in the first linestring in the geometry field "
"in a ``num_points`` attribute on each element of the ``GeoQuerySet``; "
"otherwise sets with ``None``."
msgstr ""

# d62967790308482aad45b7df0ee21e2c
#: ../../ref/contrib/gis/geoquerysets.txt:1100
msgid "Spatial Aggregates"
msgstr ""

# 095a212e1f544287bf58391aa37676f5
#: ../../ref/contrib/gis/geoquerysets.txt:1103
msgid "Aggregate Methods"
msgstr ""

# 94871d1627794479b7f96575e991d3b2
#: ../../ref/contrib/gis/geoquerysets.txt:1106
msgid "``collect``"
msgstr ""

# 452cd38e4cfe41538a7fa30e7f3f65fb
#: ../../ref/contrib/gis/geoquerysets.txt:1112
msgid ""
"Returns a ``GEOMETRYCOLLECTION`` or a ``MULTI`` geometry object from the "
"geometry column.  This is analagous to a simplified version of the :meth:"
"`GeoQuerySet.unionagg` method, except it can be several orders of magnitude "
"faster than peforming a union because it simply rolls up geometries into a "
"collection or multi object, not caring about dissolving boundaries."
msgstr ""

# cdea4fbdd3734085822ca505f07d0159
#: ../../ref/contrib/gis/geoquerysets.txt:1119
msgid "``extent``"
msgstr ""

# 581898bc8bc6444aa60cd518b58dc052
#: ../../ref/contrib/gis/geoquerysets.txt:1125
msgid ""
"Returns the extent of the ``GeoQuerySet`` as a four-tuple, comprising the "
"lower left coordinate and the upper right coordinate."
msgstr ""

# 7c1eda0acf0049a0858953024e0da752
#: ../../ref/contrib/gis/geoquerysets.txt:1135
msgid "``extent3d``"
msgstr ""

# 2d3181c801584944b63e9112fb02f04f
#: ../../ref/contrib/gis/geoquerysets.txt:1143
msgid ""
"Returns the 3D extent of the ``GeoQuerySet`` as a six-tuple, comprising the "
"lower left coordinate and upper right coordinate."
msgstr ""

# 33ab764f19b94576afb60edaf7bdef42
#: ../../ref/contrib/gis/geoquerysets.txt:1153
msgid "``make_line``"
msgstr ""

# 62b1020173624a5c81c813f872c89a5c
#: ../../ref/contrib/gis/geoquerysets.txt:1159
msgid ""
"Returns a ``LineString`` constructed from the point field geometries in the "
"``GeoQuerySet``.  Currently, ordering the queryset has no effect."
msgstr ""

# 1dd433a8baeb4659b02a349a30858980
#: ../../ref/contrib/gis/geoquerysets.txt:1168
msgid "``unionagg``"
msgstr ""

# cdb96bcc398349e6bf7bbd9b591f4d53
#: ../../ref/contrib/gis/geoquerysets.txt:1174
msgid ""
"This method returns a :class:`~django.contrib.gis.geos.GEOSGeometry` object "
"comprising the union of every geometry in the queryset.  Please note that "
"use of ``unionagg`` is processor intensive and may take a significant amount "
"of time on large querysets."
msgstr ""

# ddd634655ef9443c96463e1e96f1d339
#: ../../ref/contrib/gis/geoquerysets.txt:1181
msgid ""
"If the computation time for using this method is too expensive, consider "
"using :meth:`GeoQuerySet.collect` instead."
msgstr ""

# 3e110a25566346f9aa669d998faecf0a
#: ../../ref/contrib/gis/geoquerysets.txt:1192
msgid "``tolerance``"
msgstr ""

# f85b5b559e5045dca18c975fab5f4cdc
#: ../../ref/contrib/gis/geoquerysets.txt:1192
msgid ""
"This keyword is for Oracle only.  It is for the tolerance value used by the "
"``SDOAGGRTYPE`` procedure; the  `Oracle documentation`__ has more details."
msgstr ""

# 2a900b24f13342659b33eb6c4f99fa69
#: ../../ref/contrib/gis/geoquerysets.txt:1201
msgid "Aggregate Functions"
msgstr ""

# 7fa849698ce64e6187738527da313dbb
#: ../../ref/contrib/gis/geoquerysets.txt:1209
msgid "``Collect``"
msgstr ""

# 9568f124612e4b069075fbeb8ef8f096
#: ../../ref/contrib/gis/geoquerysets.txt:1213
msgid "Returns the same as the :meth:`GeoQuerySet.collect` aggregate method."
msgstr ""

# ff51b5d9198f4b22a841a3d440241629
#: ../../ref/contrib/gis/geoquerysets.txt:1216
msgid "``Extent``"
msgstr ""

# a21d1a11532b48479143efb850e7c169
#: ../../ref/contrib/gis/geoquerysets.txt:1220
msgid "Returns the same as the :meth:`GeoQuerySet.extent` aggregate method."
msgstr ""

# afec544ec06b4b21b4c6f6fdc1ac525c
#: ../../ref/contrib/gis/geoquerysets.txt:1223
msgid "``Extent3D``"
msgstr ""

# 7049d648bdf24d7498705073aee3bbe0
#: ../../ref/contrib/gis/geoquerysets.txt:1229
msgid "Returns the same as the :meth:`GeoQuerySet.extent3d` aggregate method."
msgstr ""

# 3b8e7fadcd8c4fed9660f57a50096fd7
#: ../../ref/contrib/gis/geoquerysets.txt:1232
msgid "``MakeLine``"
msgstr ""

# 0f0e375ffae548caa69651149810a732
#: ../../ref/contrib/gis/geoquerysets.txt:1236
msgid "Returns the same as the :meth:`GeoQuerySet.make_line` aggregate method."
msgstr ""

# 7e6b248417784ec8b62f1952b5085ae2
#: ../../ref/contrib/gis/geoquerysets.txt:1239
msgid "``Union``"
msgstr ""

# b9b1c59ae880417896ccb4b46a4c66a9
#: ../../ref/contrib/gis/geoquerysets.txt:1243
msgid "Returns the same as the :meth:`GeoQuerySet.union` aggregate method."
msgstr ""

# 96fef71e470f4e4e838c58522c0f4fb7
#: ../../ref/contrib/gis/geoquerysets.txt:1246
msgid ""
"*See* `OpenGIS Simple Feature Specification For SQL <http://www.opengis.org/"
"docs/99-049.pdf>`_, at Ch. 2.1.13.2, p. 2-13 (The Dimensionally Extended "
"Nine-Intersection Model)."
msgstr ""

# bb3c40f4bb1f43058d8ec2c733db07da
#: ../../ref/contrib/gis/geoquerysets.txt:1247
msgid ""
"*See* `SDO_RELATE documentation <http://download.oracle.com/docs/cd/"
"B19306_01/appdev.102/b14255/sdo_operat.htm#sthref845>`_, from Ch. 11 of the "
"Oracle Spatial User's Guide and Manual."
msgstr ""

# fa012fa4bc80453e9557c259c6800092
#: ../../ref/contrib/gis/geoquerysets.txt:1248
msgid ""
"For an explanation of this routine, read `Quirks of the \"Contains\" Spatial "
"Predicate <http://lin-ear-th-inking.blogspot.com/2007/06/subtleties-of-ogc-"
"covers-spatial.html>`_ by Martin Davis (a PostGIS developer)."
msgstr ""

# 9aab2aaf87984983b5e1b400b665905d
#: ../../ref/contrib/gis/geoquerysets.txt:1249
msgid ""
"Refer to the PostGIS ``ST_ContainsProperly`` `documentation <http://postgis."
"refractions.net/documentation/manual-1.4/ST_ContainsProperly.html>`_ for "
"more details."
msgstr ""

# bfb89decb38443389d69820a14804405
#: ../../ref/contrib/gis/geos.txt:5
msgid "GEOS API"
msgstr ""

# 815601eeee3e45a48888c6e30824a095
#: ../../ref/contrib/gis/geos.txt:11
msgid "Background"
msgstr ""

# 6c747021067c419a8027b96013131fa4
#: ../../ref/contrib/gis/geos.txt:14
msgid "What is GEOS?"
msgstr ""

# af06153f471346318950c10f7e583453
#: ../../ref/contrib/gis/geos.txt:16
msgid ""
"`GEOS`__ stands for **G**\\ eometry **E**\\ ngine - **O**\\ pen **S**\\ "
"ource, and is a C++ library, ported from the  `Java Topology Suite`__.  GEOS "
"implements the OpenGIS `Simple Features for SQL`__ spatial predicate "
"functions and spatial operators. GEOS, now an OSGeo project, was initially "
"developed and maintained by `Refractions Research`__ of Victoria, Canada."
msgstr ""

# 61f2f4c0b19747d7a6e262b3e1e2905b
#: ../../ref/contrib/gis/geos.txt:28
msgid "Features"
msgstr ""

# 1b45da4c55994f188516e34efb11f4b0
#: ../../ref/contrib/gis/geos.txt:30
msgid ""
"GeoDjango implements a high-level Python wrapper for the GEOS library, its "
"features include:"
msgstr ""

# 4f58c199fa324abfb580e91b81f39465
#: ../../ref/contrib/gis/geos.txt:33
msgid ""
"A BSD-licensed interface to the GEOS geometry routines, implemented purely "
"in Python using ``ctypes``."
msgstr ""

# 5f321191683a47f5bebb165c0412df92
#: ../../ref/contrib/gis/geos.txt:35
msgid ""
"Loosely-coupled to GeoDjango.  For example, :class:`GEOSGeometry` objects "
"may be used outside of a django project/application.  In other words, no "
"need to have ``DJANGO_SETTINGS_MODULE`` set or use a database, etc."
msgstr ""

# a5ed21dfdf5c4cd1b8031b12649ff56d
#: ../../ref/contrib/gis/geos.txt:38
msgid "Mutability: :class:`GEOSGeometry` objects may be modified."
msgstr ""

# b114325a3f9c42f986c52f9269dff5e4
#: ../../ref/contrib/gis/geos.txt:39
msgid ""
"Cross-platform and tested; compatible with Windows, Linux, Solaris, and Mac "
"OS X platforms."
msgstr ""

# fbbba45c4473460baee4a11f1ef3f434
#: ../../ref/contrib/gis/geos.txt:45
msgid "Tutorial"
msgstr ""

# b62ff1b9d236452fb2421546bf7bd52c
#: ../../ref/contrib/gis/geos.txt:47
msgid ""
"This section contains a brief introduction and tutorial to using :class:"
"`GEOSGeometry` objects."
msgstr ""

# bf9f51c40c2d4ae38642828c5fdcbd92
#: ../../ref/contrib/gis/geos.txt:51
msgid "Creating a Geometry"
msgstr ""

# 9cdd0507cfdc41b7806946dc8192b3ac
#: ../../ref/contrib/gis/geos.txt:53
msgid ""
":class:`GEOSGeometry` objects may be created in a few ways.  The first is to "
"simply instantiate the object on some spatial input -- the following are "
"examples of creating the same geometry from WKT, HEX, WKB, and GeoJSON::"
msgstr ""

# 399ecc34794d49428e6b67bb960d2e91
#: ../../ref/contrib/gis/geos.txt:63
msgid ""
"Another option is to use the constructor for the specific geometry type that "
"you wish to create.  For example, a :class:`Point` object may be created by "
"passing in the X and Y coordinates into its constructor::"
msgstr ""

# 11bf34e61cc94afbb64bcd3ffef0a035
#: ../../ref/contrib/gis/geos.txt:70
msgid ""
"Finally, there are :func:`fromstr` and :func:`fromfile` factory methods, "
"which return a :class:`GEOSGeometry` object from an input string or a file::"
msgstr ""

# 9ada609fcfa4414aa4f0ddb9439ab997
#: ../../ref/contrib/gis/geos.txt:79
msgid "Geometries are Pythonic"
msgstr ""

# 0f3a8011b48b45e9a7f910de5eee9e4d
#: ../../ref/contrib/gis/geos.txt:80
msgid ""
":class:`GEOSGeometry` objects are 'Pythonic', in other words components may "
"be accessed, modified, and iterated over using standard Python conventions. "
"For example, you can iterate over the coordinates in a :class:`Point`::"
msgstr ""

# d7a9fe8437914b7dbf1c1028bdc6314c
#: ../../ref/contrib/gis/geos.txt:88
msgid ""
"With any geometry object, the :attr:`GEOSGeometry.coords` property may be "
"used to get the geometry coordinates as a Python tuple::"
msgstr ""

# 9b087bc5b2984018bab5391dd1bf3ee2
#: ../../ref/contrib/gis/geos.txt:94
msgid ""
"You can get/set geometry components using standard Python indexing "
"techniques.  However, what is returned depends on the geometry type of the "
"object.  For example, indexing on a :class:`LineString` returns a coordinate "
"tuple::"
msgstr ""

# 9f7efd665ffe4cee9118180a653f466c
#: ../../ref/contrib/gis/geos.txt:106
msgid ""
"Whereas indexing on a :class:`Polygon` will return the ring (a :class:"
"`LinearRing` object) corresponding to the index::"
msgstr ""

# af2c73fb76c343328312e09571308cda
#: ../../ref/contrib/gis/geos.txt:116
msgid ""
"In addition, coordinates/components of the geometry may added or modified, "
"just like a Python list::"
msgstr ""

# 8d609a4fc98a4451abeb9ce484ee8d17
#: ../../ref/contrib/gis/geos.txt:127
msgid "Geometry Objects"
msgstr ""

# eb57671225164f0e8cf17a15099a4146
#: ../../ref/contrib/gis/geos.txt:130
msgid "``GEOSGeometry``"
msgstr ""

# ed29a673babe47708acd6bd48bf0eae5
#: ../../ref/contrib/gis/geos.txt:139
msgid ""
"This is the base class for all GEOS geometry objects.  It initializes on the "
"given ``geo_input`` argument, and then assumes the proper geometry subclass "
"(e.g., ``GEOSGeometry('POINT(1 1)')`` will create a :class:`Point` object)."
msgstr ""

# d98d08f8041f499e892f65cc28c63de9
#: ../../ref/contrib/gis/geos.txt:143
msgid ""
"The following input formats, along with their corresponding Python types, "
"are accepted:"
msgstr ""

# 36c4bd3f62d4424ba594c4060c3cfbc4
#: ../../ref/contrib/gis/geos.txt:147
msgid "Format"
msgstr ""

# 6cb4a35fb9a24e52a4a5fa1a8e2568ea
#: ../../ref/contrib/gis/geos.txt:147
msgid "Input Type"
msgstr ""

# cf8c43f131104576b5b292d53e081671
#: ../../ref/contrib/gis/geos.txt:149
msgid "WKT / EWKT"
msgstr ""

# 716cdb317c524d629ad91d3d9d5ca0cf
# 5207cf3d615c4a8a86bb26b17d3ecb3e
# c2bbed5e18774f5684c4bf2215030b68
#: ../../ref/contrib/gis/geos.txt:149 ../../ref/contrib/gis/geos.txt:150
#: ../../ref/contrib/gis/geos.txt:152
msgid "``str`` or ``unicode``"
msgstr ""

# d2274c4a09c647ecaff0517e9d40aae9
#: ../../ref/contrib/gis/geos.txt:150
msgid "HEX / HEXEWKB"
msgstr ""

# b4a68d892cee4ff9a5fa9737a7eecdc5
#: ../../ref/contrib/gis/geos.txt:151
msgid "WKB / EWKB"
msgstr ""

# 7b6ab58e958842fc94c83a81e201e074
#: ../../ref/contrib/gis/geos.txt:151
msgid "``buffer``"
msgstr ""

# 14913d4833dc4a12b14aa0f0fdb1890e
#: ../../ref/contrib/gis/geos.txt:152
msgid "GeoJSON"
msgstr ""

# de4b3be1aca24f48a1b1c9fd66f90e92
#: ../../ref/contrib/gis/geos.txt:156
msgid "Properties"
msgstr ""

# b5d1bab8c2424311b6ea906758912fc6
#: ../../ref/contrib/gis/geos.txt:160
msgid "Returns the coordinates of the geometry as a tuple."
msgstr ""

# 11cd0ee611714301a831286538a33483
#: ../../ref/contrib/gis/geos.txt:164
msgid "Returns whether or not the set of points in the geometry is empty."
msgstr ""

# 0265ca01b8d24db38e0ad128a9f82a08
#: ../../ref/contrib/gis/geos.txt:168
msgid "Returns a string corresponding to the type of geometry.  For example::"
msgstr ""

# 638d01b0c4244dfa94cb4923d698919e
#: ../../ref/contrib/gis/geos.txt:176
msgid ""
"Returns the GEOS geometry type identification number.  The following table "
"shows the value for each geometry type:"
msgstr ""

# aa6d94e9c33a4e078940368adc1ab4d9
#: ../../ref/contrib/gis/geos.txt:180
msgid "Geometry"
msgstr ""

# 84f4a10c22b0466399463d77f91a0fb7
#: ../../ref/contrib/gis/geos.txt:180
msgid "ID"
msgstr ""

# 1272297b6dcc49e889891cefd3d62af9
#: ../../ref/contrib/gis/geos.txt:182
msgid ":class:`Point`"
msgstr ""

# e397f001d6594c2485ca9f0e8738092d
# 213b8830e37f44cbbaf436b352d8a010
#: ../../ref/contrib/gis/geos.txt:182 ../../ref/contrib/gis/geos.txt:831
msgid "0"
msgstr ""

# c7a6bfbc21044e978b082752ecd93cbc
#: ../../ref/contrib/gis/geos.txt:183
msgid ":class:`LineString`"
msgstr ""

# 4338e1272ad4410185b0d382687ffbca
#: ../../ref/contrib/gis/geos.txt:184
msgid ":class:`LinearRing`"
msgstr ""

# 186f26055e6b4376a7b92d069d6875fe
#: ../../ref/contrib/gis/geos.txt:185
msgid ":class:`Polygon`"
msgstr ""

# 342cfe314be144118cc7376203f7569d
# 47f83fdfe7084ab7a2d6d64ddc1da38a
#: ../../ref/contrib/gis/geos.txt:185 ../../ref/contrib/gis/geos.txt:855
msgid "3"
msgstr ""

# ff201747154746719b1a3a38e3c8e891
#: ../../ref/contrib/gis/geos.txt:186
msgid ":class:`MultiPoint`"
msgstr ""

# 1ccbc626c5084dc8b9a42762f46c74ad
#: ../../ref/contrib/gis/geos.txt:187
msgid ":class:`MultiLineString`"
msgstr ""

# bfa8c9d172f246e385852824e3abbbc7
#: ../../ref/contrib/gis/geos.txt:187
msgid "5"
msgstr ""

# 47f67daf47b6487ba1bd07bfde6061c3
#: ../../ref/contrib/gis/geos.txt:188
msgid ":class:`MultiPolygon`"
msgstr ""

# 103fe14c223e42c6abd0f8287fd79fbb
#: ../../ref/contrib/gis/geos.txt:188
msgid "6"
msgstr ""

# ab0eec42458c4bd29e190eb7e9f44753
#: ../../ref/contrib/gis/geos.txt:189
msgid ":class:`GeometryCollection`"
msgstr ""

# 217ac2a34da347e1b4d26b5bc5749e9c
#: ../../ref/contrib/gis/geos.txt:189
msgid "7"
msgstr ""

# 54fd9243190e495ca191d2baa6d0103b
#: ../../ref/contrib/gis/geos.txt:194
msgid "Returns the number of coordinates in the geometry."
msgstr ""

# 34b56d47a305422fad35834f566eaf84
#: ../../ref/contrib/gis/geos.txt:198
msgid ""
"Returns the number of geometries in this geometry.  In other words, will "
"return 1 on anything but geometry collections."
msgstr ""

# 2962738457e24ad4ae46a3b58dfc1e02
#: ../../ref/contrib/gis/geos.txt:203
msgid "Returns a boolean indicating whether the geometry is three-dimensional."
msgstr ""

# fc3d2ce6d7184224b49933e7fb258dd6
#: ../../ref/contrib/gis/geos.txt:207
msgid "Returns a boolean indicating whether the geometry is a ``LinearRing``."
msgstr ""

# c90c860317c341f4b5ceb3a66a752ee5
#: ../../ref/contrib/gis/geos.txt:211
msgid ""
"Returns a boolean indicating whether the geometry is 'simple'. A geometry is "
"simple if and only if it does not intersect itself (except at boundary "
"points).  For example, a :class:`LineString` object is not simple if it "
"intersects itself. Thus, :class:`LinearRing` and :class`Polygon` objects are "
"always simple because they do cannot intersect themselves, by definition."
msgstr ""

# 42f97ecb0c3e4a5e875fdc585d6ffa7f
#: ../../ref/contrib/gis/geos.txt:220
msgid "Returns a boolean indicating whether the geometry is valid."
msgstr ""

# a917d44bcfdc41208783e117984bfa84
#: ../../ref/contrib/gis/geos.txt:226
msgid "Returns a string describing the reason why a geometry is invalid."
msgstr ""

# 97261161d7174b0d84ee2a78de7d4474
#: ../../ref/contrib/gis/geos.txt:230
msgid ""
"Property that may be used to retrieve or set the SRID associated with the "
"geometry.  For example::"
msgstr ""

# 415e5eb7a29448b386959d732333663a
#: ../../ref/contrib/gis/geos.txt:241
msgid "Output Properties"
msgstr ""

# 8568256fdb9f4744aeab44b8fd9acb6b
#: ../../ref/contrib/gis/geos.txt:243
msgid ""
"The properties in this section export the :class:`GEOSGeometry` object into "
"a different.  This output may be in the form of a string, buffer, or even "
"another object."
msgstr ""

# b910e8dcd8e24a1d8e7abd01d57e8c92
#: ../../ref/contrib/gis/geos.txt:249
msgid ""
"Returns the \"extended\" Well-Known Text of the geometry.  This "
"representation is specific to PostGIS and is a super set of the OGC WKT "
"standard. [#fnogc]_ Essentially the SRID is prepended to the WKT "
"representation, for example ``SRID=4326;POINT(5 23)``."
msgstr ""

# 20b4606708d94460ba8f457840a0d7de
#: ../../ref/contrib/gis/geos.txt:256
msgid ""
"The output from this property does not include the 3dm, 3dz, and 4d "
"information that PostGIS supports in its EWKT representations."
msgstr ""

# 5beb4b80575f480e8ed691091d88144d
#: ../../ref/contrib/gis/geos.txt:261
msgid ""
"Returns the WKB of this Geometry in hexadecimal form.  Please note that the "
"SRID and Z values are not included in this representation because it is not "
"a part of the OGC specification (use the :attr:`GEOSGeometry.hexewkb` "
"property instead)."
msgstr ""

# 269af9948e3f41b7958b1627e107c2de
#: ../../ref/contrib/gis/geos.txt:270
msgid ""
"Returns the EWKB of this Geometry in hexadecimal form.  This is an extension "
"of the WKB specification that includes SRID and Z values that are a part of "
"this geometry."
msgstr ""

# d6e1c8682846423bbaecadf23a9b53d4
#: ../../ref/contrib/gis/geos.txt:276
msgid "GEOS 3.1 is *required* if you want valid 3D HEXEWKB."
msgstr ""

# ffe12f5419514a97bc381f5348e62d07
#: ../../ref/contrib/gis/geos.txt:280
msgid "Returns the GeoJSON representation of the geometry."
msgstr ""

# 585f433816a84478af66e5905f262d7e
# f31e2b33f557468295bf8f2a7396f562
# 56d4739b02e641bda603a28032495472
# c07a43499b4543bfa35078b931d741dd
#: ../../ref/contrib/gis/geos.txt:284 ../../ref/contrib/gis/geos.txt:303
#: ../../ref/contrib/gis/geos.txt:522 ../../ref/contrib/gis/geos.txt:538
msgid "Requires GDAL."
msgstr ""

# 17fb7d59ca7e405c8fab3f7c281700eb
#: ../../ref/contrib/gis/geos.txt:288
msgid "Alias for :attr:`GEOSGeometry.json`."
msgstr ""

# 3f7ea20b8484426eac1e4512eec933e4
#: ../../ref/contrib/gis/geos.txt:292
msgid ""
"Returns a `KML`__ (Keyhole Markup Language) representation of the geometry.  "
"This should only be used for geometries with an SRID of 4326 (WGS84), but "
"this restriction is not enforced."
msgstr ""

# a1f4c9413cc94348805ee535bc5893ef
#: ../../ref/contrib/gis/geos.txt:298
msgid ""
"Returns an :class:`~django.contrib.gis.gdal.OGRGeometry` object correspondg "
"to the GEOS geometry."
msgstr ""

# 0e878d17ee9442739525a542a681d0f6
#: ../../ref/contrib/gis/geos.txt:309
msgid ""
"Returns the WKB (Well-Known Binary) representation of this Geometry as a "
"Python buffer.  SRID and Z values are not included, use the :attr:"
"`GEOSGeometry.ewkb` property instead."
msgstr ""

# a0dc3c2d7a1b4c2983a52331a3df6f96
#: ../../ref/contrib/gis/geos.txt:319
msgid ""
"Return the EWKB representation of this Geometry as a Python buffer. This is "
"an extension of the WKB specification that includes any SRID and Z values "
"that are a part of this geometry."
msgstr ""

# 92bbfc931413475794e15993008f1079
#: ../../ref/contrib/gis/geos.txt:325
msgid "GEOS 3.1 is *required* if you want valid 3D EWKB."
msgstr ""

# 7afdfa258058463ca0f29600059b231e
#: ../../ref/contrib/gis/geos.txt:329
msgid "Returns the Well-Known Text of the geometry (an OGC standard)."
msgstr ""

# 26ca85dc4e404773b4b614c461dcde80
#: ../../ref/contrib/gis/geos.txt:334
msgid "Spatial Predicate Methods"
msgstr ""

# 13d26389a015439e86086c444b6040fd
#: ../../ref/contrib/gis/geos.txt:336
msgid ""
"All of the following spatial predicate methods take another :class:"
"`GEOSGeometry` instance (``other``) as a parameter, and return a boolean."
msgstr ""

# 0a68c170c22548318cca40bc037a3791
#: ../../ref/contrib/gis/geos.txt:342
msgid "Returns ``True`` if :meth:`GEOSGeometry.within` is ``False``."
msgstr ""

# 819f650bfa6d4e8dbd76e1ee31e4979b
#: ../../ref/contrib/gis/geos.txt:346
msgid ""
"Returns ``True`` if the DE-9IM intersection matrix for the two Geometries is "
"``T*T******`` (for a point and a curve,a point and an area or a line and an "
"area) ``0********`` (for two curves)."
msgstr ""

# 41ec93bdcdf64d0f8e9b1e3cd0895c70
#: ../../ref/contrib/gis/geos.txt:352
msgid ""
"Returns ``True`` if the DE-9IM intersection matrix for the two geometries is "
"``FF*FF****``."
msgstr ""

# 9d1a9f3ae04c48dfb542ff2a9a80c1a2
#: ../../ref/contrib/gis/geos.txt:357
msgid ""
"Returns ``True`` if the DE-9IM intersection matrix for the two geometries is "
"``T*F**FFF*``."
msgstr ""

# db6d9742255841ed9235de284b2de0b3
#: ../../ref/contrib/gis/geos.txt:362
msgid ""
"Returns true if the two geometries are exactly equal, up to a specified "
"tolerance.  The ``tolerance`` value should be a floating point number "
"representing the error tolerance in the comparison, e.g., ``poly1."
"equals_exact(poly2, 0.001)`` will compare equality to within one thousandth "
"of a unit."
msgstr ""

# 510bbba41290458f85ee4df3147949ef
#: ../../ref/contrib/gis/geos.txt:370
msgid "Returns ``True`` if :meth:`GEOSGeometry.disjoint` is ``False``."
msgstr ""

# a37c104f78544b9e8cb78558a329d57d
#: ../../ref/contrib/gis/geos.txt:374
msgid ""
"Returns true if the DE-9IM intersection matrix for the two geometries is "
"``T*T***T**`` (for two points or two surfaces) ``1*T***T**`` (for two "
"curves)."
msgstr ""

# 40db5b30c06d422997154598d121c8ca
#: ../../ref/contrib/gis/geos.txt:380
msgid ""
"Returns ``True`` if the elements in the DE-9IM intersection matrix for this "
"geometry and the other matches the given ``pattern`` -- a string of nine "
"characters from the alphabet: {``T``, ``F``, ``*``, ``0``}."
msgstr ""

# 17a57da41d51473caa5b4671d3136d93
#: ../../ref/contrib/gis/geos.txt:386
msgid ""
"Returns ``True`` if the DE-9IM intersection matrix for the two geometries is "
"``FT*******``, ``F**T*****`` or ``F***T****``."
msgstr ""

# 4c242732e16c43b9a46a01333625971f
#: ../../ref/contrib/gis/geos.txt:391
msgid ""
"Returns ``True`` if the DE-9IM intersection matrix for the two geometries is "
"``T*F**F***``."
msgstr ""

# c2bafd893c884af482a93cb52835f222
#: ../../ref/contrib/gis/geos.txt:395
msgid "Topological Methods"
msgstr ""

# 1b8592712a344ebda9220f7e13afec52
#: ../../ref/contrib/gis/geos.txt:399
msgid ""
"Returns a :class:`GEOSGeometry` that represents all points whose distance "
"from this geometry is less than or equal to the given ``width``. The "
"optional ``quadsegs`` keyword sets the number of segments used to "
"approximate a quarter circle (defaults is 8)."
msgstr ""

# 4479d908b3a84d0bb3635e2716b2b7e0
#: ../../ref/contrib/gis/geos.txt:406
msgid ""
"Returns a :class:`GEOSGeometry` representing the points making up this "
"geometry that do not make up other."
msgstr ""

# 2d3275a27744422591d987eb2d1075cc
#: ../../ref/contrib/gis/geos.txt:411
msgid ""
"Returns a :class:`GEOSGeometry` representing the points shared by this "
"geometry and other."
msgstr ""

# 0b1d91d50228439588f85d42ab728482
#: ../../ref/contrib/gis/geos.txt:416
msgid ""
"Returns the DE-9IM intersection matrix (a string) representing the "
"topological relationship between this geometry and the other."
msgstr ""

# 995a4e7d4b02475e86f25c936a883db6
#: ../../ref/contrib/gis/geos.txt:421
msgid ""
"Returns a new :class:`GEOSGeometry`, simplified using the Douglas-Peucker "
"algorithm to the specified tolerance.  A higher tolerance value implies less "
"points in the output.  If no tolerance is tolerance provided, it defaults to "
"0."
msgstr ""

# c4dc01336783433aa861ddf7d6163379
#: ../../ref/contrib/gis/geos.txt:426
msgid ""
"By default, this function does not preserve topology - e.g., :class:"
"`Polygon` objects can be split, collapsed into lines or disappear. :class:"
"`Polygon` holes can be created or disappear, and lines can cross. By "
"specifying ``preserve_topology=True``, the result will have the same "
"dimension and number of components as the input, however, this is "
"significantly slower."
msgstr ""

# df45179e103d4af3814f66a6beb3c5cd
#: ../../ref/contrib/gis/geos.txt:435
msgid ""
"Returns a :class:`GEOSGeometry` combining the points in this geometry not in "
"other, and the points in other not in this geometry."
msgstr ""

# 837943aa6b73461e9ba73c3ab1a998fb
#: ../../ref/contrib/gis/geos.txt:440
msgid ""
"Returns a :class:`GEOSGeometry` representing all the points in this geometry "
"and the other."
msgstr ""

# e6f7eb917c854e64b1983f66fa20a36e
#: ../../ref/contrib/gis/geos.txt:444
msgid "Topological Properties"
msgstr ""

# c3e984ad1c9e4a3db342e4220797bd8e
#: ../../ref/contrib/gis/geos.txt:448
msgid "Returns the boundary as a newly allocated Geometry object."
msgstr ""

# e63700b9dac740a18fbe1a873191f581
#: ../../ref/contrib/gis/geos.txt:452
msgid ""
"Returns a :class:`Point` object representing the geometric center of the "
"geometry.  The point is not guaranteed to be on the interior of the geometry."
msgstr ""

# 06358d0f149f423ca83cacb46f17bf48
#: ../../ref/contrib/gis/geos.txt:458
msgid ""
"Returns the smallest :class:`Polygon` that contains all the points in the "
"geometry."
msgstr ""

# 16c393c198224a6e96cc16dcb3fbf32e
#: ../../ref/contrib/gis/geos.txt:463
msgid ""
"Returns a :class:`Polygon` that represents the bounding envelope of this "
"geometry."
msgstr ""

# f533b63d07504a74b643c57eb0402c90
#: ../../ref/contrib/gis/geos.txt:468
msgid ""
"Computes and returns a :class:`Point` guaranteed to be on the interior of "
"this geometry."
msgstr ""

# 90945729466d4e0c93943d61445aa207
#: ../../ref/contrib/gis/geos.txt:472
msgid "Other Properties & Methods"
msgstr ""

# 109ad9d5d55d40c9b69fe0c4003d1d58
#: ../../ref/contrib/gis/geos.txt:476
msgid "This property returns the area of the Geometry."
msgstr ""

# a48450740635419289bfaaf298fabefd
#: ../../ref/contrib/gis/geos.txt:480
msgid ""
"This property returns the extent of this geometry as a 4-tuple, consisting "
"of (xmin, ymin, xmax, ymax)."
msgstr ""

# f5e53012bde94a7da13427927d131501
#: ../../ref/contrib/gis/geos.txt:485
msgid ""
"This method returns a :class:`GEOSGeometry` that is a clone of the original."
msgstr ""

# e56c0addef0340f8af275ace4a3fc7d2
#: ../../ref/contrib/gis/geos.txt:489
msgid ""
"Returns the distance between the closest points on this geometry and the "
"given ``geom`` (another :class:`GEOSGeometry` object)."
msgstr ""

# 658ac11db1814c1da93920d758eec342
#: ../../ref/contrib/gis/geos.txt:494
msgid ""
"GEOS distance calculations are  linear -- in other words, GEOS does not "
"perform a spherical calculation even if the SRID specifies a geographic "
"coordinate system."
msgstr ""

# 33fbbd6da0924ad6a591e92bd37ef745
#: ../../ref/contrib/gis/geos.txt:500
msgid ""
"Returns the length of this geometry (e.g., 0 for a :class:`Point`, the "
"length of a :class:`LineString`, or the circumference of a :class:`Polygon`)."
msgstr ""

# 7431fadae8ce406aadb7a66a8fc46c38
#: ../../ref/contrib/gis/geos.txt:508
msgid "Support for prepared geometries requires GEOS 3.1."
msgstr ""

# 79e1f07f4a924580960d087e585ff8ef
#: ../../ref/contrib/gis/geos.txt:510
msgid ""
"Returns a GEOS ``PreparedGeometry`` for the contents of this geometry. "
"``PreparedGeometry`` objects are optimized for the contains, intersects, and "
"covers operations.  Refer to the :ref:`prepared-geometries` documentation "
"for more information."
msgstr ""

# 2d4eab8e45884a1daae6b29ce0a8d8eb
#: ../../ref/contrib/gis/geos.txt:517
msgid ""
"Returns a :class:`~django.contrib.gis.gdal.SpatialReference` object "
"corresponding to the SRID of the geometry or ``None``."
msgstr ""

# 527175abfc224c269f02ebe17f36f42b
#: ../../ref/contrib/gis/geos.txt:528
msgid ""
"Transforms the geometry according to the given coordinate transformation "
"paramter (``ct``), which may be an integer SRID, spatial reference WKT "
"string, a PROJ.4 string, a :class:`~django.contrib.gis.gdal."
"SpatialReference` object, or a :class:`~django.contrib.gis.gdal."
"CoordTransform` object. By default, the geometry is transformed in-place and "
"nothing is returned. However if the ``clone`` keyword is set, then the "
"geometry is not modified and a transformed clone of the geometry is returned "
"instead."
msgstr ""

# e5de9ddd48c14e45b30848d0d72c9565
#: ../../ref/contrib/gis/geos.txt:542
msgid ""
"Prior to 1.3, this method would silently no-op if GDAL was not available. "
"Now, a :class:`~django.contrib.gis.geos.GEOSException` is raised as "
"application code relying on this behavior is in error. In addition, use of "
"this method when the SRID is ``None`` or less than 0 now generates a warning "
"because a :class:`~django.contrib.gis.geos.GEOSException` will be raised "
"instead in version 1.5."
msgstr ""

# da9a7674c20d4a5a8942a4331d71a7ac
#: ../../ref/contrib/gis/geos.txt:551
msgid "``Point``"
msgstr ""

# 7cc31f649a5746509df972ab0b9a667f
#: ../../ref/contrib/gis/geos.txt:555
msgid ""
"``Point`` objects are instantiated using arguments that represent the "
"component coordinates of the point or with a single sequence coordinates.  "
"For example, the following are equivalent::"
msgstr ""

# 5013f5995ae64e6ab8da576e7b30afbe
#: ../../ref/contrib/gis/geos.txt:563
msgid "``LineString``"
msgstr ""

# ee69575bd0ed424da487c6952e698b27
#: ../../ref/contrib/gis/geos.txt:567
msgid ""
"``LineString`` objects are instantiated using arguments that are either a "
"sequence of coordinates or :class:`Point` objects. For example, the "
"following are equivalent::"
msgstr ""

# d5496fd0b8ba44c4ba2912270e282531
#: ../../ref/contrib/gis/geos.txt:574
msgid ""
"In addition, ``LineString`` objects may also be created by passing in a "
"single sequence of coordinate or :class:`Point` objects::"
msgstr ""

# 31cabd1e548043289cf0ae5250950032
#: ../../ref/contrib/gis/geos.txt:581
msgid "``LinearRing``"
msgstr ""

# b2fe5e1c45ed4a18b0cd300ca7a6dce5
#: ../../ref/contrib/gis/geos.txt:585
msgid ""
"``LinearRing`` objects are constructed in the exact same way as :class:"
"`LineString` objects, however the coordinates must be *closed*, in other "
"words, the first coordinates must be the same as the last coordinates.  For "
"example::"
msgstr ""

# 6d2850fb559b4613af224e3219d43b62
#: ../../ref/contrib/gis/geos.txt:592
msgid ""
"Notice that ``(0, 0)`` is the first and last coordinate -- if they were not "
"equal, an error would be raised."
msgstr ""

# b9775051691f4bfa85eaddd8bd68e06f
#: ../../ref/contrib/gis/geos.txt:596
msgid "``Polygon``"
msgstr ""

# 5806412f473f401782523273d59db9ad
#: ../../ref/contrib/gis/geos.txt:600
msgid ""
"``Polygon`` objects may be instantiated by passing in one or more parameters "
"that represent the rings of the polygon.  The parameters must either be :"
"class:`LinearRing` instances, or a sequence that may be used to construct a :"
"class:`LinearRing`::"
msgstr ""

# e1c5b26f8fec4f64856856f48aa2afdc
#: ../../ref/contrib/gis/geos.txt:612
msgid ""
"Returns a polygon object from the given bounding-box, a 4-tuple comprising "
"(xmin, ymin, xmax, ymax)."
msgstr ""

# dd0c2d71c30a44a2986e813fa3648335
#: ../../ref/contrib/gis/geos.txt:617
msgid "Returns the number of interior rings in this geometry."
msgstr ""

# 6615dde5910f4868990643d3b294e0be
#: ../../ref/contrib/gis/geos.txt:620
msgid "Geometry Collections"
msgstr ""

# e071071277694edeb7bcc248ec61749e
#: ../../ref/contrib/gis/geos.txt:623
msgid "``MultiPoint``"
msgstr ""

# fa75fbd0938c4dc99bfe5c7d4fa501fb
#: ../../ref/contrib/gis/geos.txt:627
msgid ""
"``MultiPoint`` objects may be instantiated by passing in one or more :class:"
"`Point` objects as arguments, or a single sequence of :class:`Point` "
"objects::"
msgstr ""

# c88fd8a782ea44c58681ee43489ad728
#: ../../ref/contrib/gis/geos.txt:635
msgid "``MultiLineString``"
msgstr ""

# be71f27022bb4002972d086185f4cd2f
#: ../../ref/contrib/gis/geos.txt:639
msgid ""
"``MultiLineString`` objects may be instantiated by passing in one or more :"
"class:`LineString` objects as arguments, or a single sequence of :class:"
"`LineString` objects::"
msgstr ""

# 8280d87884994315b073509dd3aefac2
#: ../../ref/contrib/gis/geos.txt:650
msgid ""
"Returns a :class:`LineString` representing the line merge of all the "
"components in this ``MultiLineString``."
msgstr ""

# 1b8992d060334dc6a61c9fd482a55f5a
#: ../../ref/contrib/gis/geos.txt:655
msgid "``MultiPolygon``"
msgstr ""

# 88d3d8333ec44b25b85a7c3a11e0a421
#: ../../ref/contrib/gis/geos.txt:659
msgid ""
"``MultiPolygon`` objects may be instantiated by passing one or more :class:"
"`Polygon` objects as arguments, or a single sequence of :class:`Polygon` "
"objects::"
msgstr ""

# f88015b47e69414f827fb2f4426de7c5
#: ../../ref/contrib/gis/geos.txt:670
msgid ""
"Returns a :class:`Polygon` that is the union of all of the component "
"polygons in this collection.  The algorithm employed is significantly more "
"efficient (faster) than trying to union the geometries together "
"individually. [#fncascadedunion]_"
msgstr ""

# 533386c3d6fc4775a186144d043e81a0
#: ../../ref/contrib/gis/geos.txt:677
msgid "GEOS 3.1 is *required* to peform cascaded unions."
msgstr ""

# 77dbf5d66c0149b2abc8886be811fc21
#: ../../ref/contrib/gis/geos.txt:680
msgid "``GeometryCollection``"
msgstr ""

# f2faff29a46b4d718835dec30702d4f4
#: ../../ref/contrib/gis/geos.txt:684
msgid ""
"``GeometryCollection`` objects may be instantiated by passing in one or more "
"other :class:`GEOSGeometry` as arguments, or a single sequence of :class:"
"`GEOSGeometry` objects::"
msgstr ""

# efeeab7d030e443ba64291fb57ab7e5c
#: ../../ref/contrib/gis/geos.txt:695
msgid "Prepared Geometries"
msgstr ""

# 13ceb06b802e4f278384c31459fc7cb8
#: ../../ref/contrib/gis/geos.txt:697
msgid ""
"In order to obtain a prepared geometry, just access the :attr:`GEOSGeometry."
"prepared` property.  Once you have a ``PreparedGeometry`` instance its "
"spatial predicate methods, listed below, may be used with other "
"``GEOSGeometry`` objects.  An operation with a prepared geometry can be "
"orders of magnitude faster -- the more complex the geometry that is "
"prepared, the larger the speedup in the operation.  For more information, "
"please consult the `GEOS wiki page on prepared geometries <http://trac.osgeo."
"org/geos/wiki/PreparedGeometry>`_."
msgstr ""

# 81e62a5b2d3b404f936d99d3f3748bb6
#: ../../ref/contrib/gis/geos.txt:707
msgid "GEOS 3.1 is *required* in order to use prepared geometries."
msgstr ""

# f80ba4ae541e40409b24115611a9ae8e
#: ../../ref/contrib/gis/geos.txt:718
msgid "``PreparedGeometry``"
msgstr ""

# 1b491878268b4236b42479302978c405
#: ../../ref/contrib/gis/geos.txt:722
msgid ""
"All methods on ``PreparedGeometry`` take an ``other`` argument, which must "
"be a :class:`GEOSGeometry` instance."
msgstr ""

# 45c0caca8697465aabe45b46bbe8fd3d
#: ../../ref/contrib/gis/geos.txt:734
msgid "Geometry Factories"
msgstr ""

# feb196ce1c3b45eaa6792efd4b8b5efc
#: ../../ref/contrib/gis/geos.txt:761
msgid "I/O Objects"
msgstr ""

# a77c032f5c3e48a89c94eda7a64fe0ff
#: ../../ref/contrib/gis/geos.txt:764
msgid "Reader Objects"
msgstr ""

# 4222e99ba76e4f0fbfb9fddb38866552
#: ../../ref/contrib/gis/geos.txt:766
msgid ""
"The reader I/O classes simply return a :class:`GEOSGeometry` instance from "
"the WKB and/or WKT input given to their ``read(geom)`` method."
msgstr ""

# 3531c5fbd9574ebc8b027ccb606cb579
#: ../../ref/contrib/gis/geos.txt:788
msgid "Writer Objects"
msgstr ""

# 26025397d078459cbe268edca8a6a881
#: ../../ref/contrib/gis/geos.txt:790
msgid ""
"All writer objects have a ``write(geom)`` method that returns either the WKB "
"or WKT of the given geometry.  In addition, :class:`WKBWriter` objects also "
"have properties that may be used to change the byte order, and or include "
"the SRID and 3D values (in other words, EWKB)."
msgstr ""

# 4241c0760e20433da4794fce3e170fcc
#: ../../ref/contrib/gis/geos.txt:797
msgid ""
"``WKBWriter`` provides the most control over its output.  By default it "
"returns OGC-compliant WKB when it's ``write`` method is called.  However, it "
"has properties that allow for the creation of EWKB, a superset of the WKB "
"standard that includes additional information."
msgstr ""

# f3674a79ea074674bcd31f48f38f7994
#: ../../ref/contrib/gis/geos.txt:804
msgid ""
"Returns the WKB of the given geometry as a Python ``buffer`` object. "
"Example::"
msgstr ""

# e8a81f355131401aa52ce7b0acd8fd0f
#: ../../ref/contrib/gis/geos.txt:815
msgid "Returns WKB of the geometry in hexadecimal.  Example::"
msgstr ""

# 6960790356c84d69b29742f5469dfe8b
#: ../../ref/contrib/gis/geos.txt:825
msgid ""
"This property may be be set to change the byte-order of the geometry "
"representation."
msgstr ""

# e1acbcad02f64177ad4adebac203f0d3
#: ../../ref/contrib/gis/geos.txt:829
msgid "Byteorder Value"
msgstr ""

# 32a10b2e8d6148e2bbf495db1330ceca
#: ../../ref/contrib/gis/geos.txt:831
msgid "Big Endian (e.g., compatible with RISC systems)"
msgstr ""

# cfc158640a8b45b5a6e179a253b3f6e6
#: ../../ref/contrib/gis/geos.txt:832
msgid "Little Endian (e.g., compatible with x86 systems)"
msgstr ""

# 700eb4c8d9f7419f96223630fc29e36a
#: ../../ref/contrib/gis/geos.txt:847
msgid ""
"This property may be set to change the output dimension of the geometry "
"representation.  In other words, if you have a 3D geometry then set to 3 so "
"that the Z value is included in the WKB."
msgstr ""

# e02e25fb33524e95afc6c6a62afba5c7
#: ../../ref/contrib/gis/geos.txt:852
msgid "Outdim Value"
msgstr ""

# e088f523e1844138ae40c36dc5cd0d95
#: ../../ref/contrib/gis/geos.txt:854
msgid "The default, output 2D WKB."
msgstr ""

# 2353335519574093a67319c1ec4deb68
#: ../../ref/contrib/gis/geos.txt:855
msgid "Output 3D EWKB."
msgstr ""

# 2c81974670e14a8e964f66bd9a9badce
#: ../../ref/contrib/gis/geos.txt:873
msgid ""
"Set this property with a boolean to indicate whether the SRID of the "
"geometry should be included with the WKB representation.  Example::"
msgstr ""

# 5d3430b324c64f4883db399fa4b6c965
#: ../../ref/contrib/gis/geos.txt:889
msgid "Returns the WKT of the given geometry. Example::"
msgstr ""

# 1e7bcddad2cc42678d905b463b36761e
#: ../../ref/contrib/gis/geos.txt:899
msgid ""
"*See* `PostGIS EWKB, EWKT and Canonical Forms <http://postgis.refractions."
"net/docs/ch04.html#id2591381>`_, PostGIS documentation at Ch. 4.1.2."
msgstr ""

# ef8624b6da574673a8bacd217c1733cc
#: ../../ref/contrib/gis/geos.txt:900
msgid ""
"For more information, read Paul Ramsey's blog post about `(Much) Faster "
"Unions in PostGIS 1.4 <http://blog.cleverelephant.ca/2009/01/must-faster-"
"unions-in-postgis-14.html>`_ and Martin Davis' blog post on `Fast polygon "
"merging in JTS using Cascaded Union <http://lin-ear-th-inking.blogspot."
"com/2007/11/fast-polygon-merging-in-jts-using.html>`_."
msgstr ""

# 4e7a757cd6ae4864a443108e55cef556
#: ../../ref/contrib/gis/geos.txt:908
msgid "GEOS_LIBRARY_PATH"
msgstr ""

# 682c32e60dd0415bbe3a97d5e8a7da2b
#: ../../ref/contrib/gis/geos.txt:910
msgid ""
"A string specifying the location of the GEOS C library.  Typically, this "
"setting is only used if the GEOS C library is in a non-standard location (e."
"g., ``/home/bob/lib/libgeos_c.so``)."
msgstr ""

# 12fc31bee34a41d0a57e43d18a970fd5
# d543ba1e32e54499b82864e00585ca11
#: ../../ref/contrib/gis/geos.txt:916 ../../ref/contrib/gis/install.txt:191
msgid ""
"The setting must be the *full* path to the **C** shared library; in other "
"words you want to use ``libgeos_c.so``, not ``libgeos.so``."
msgstr ""

# 43bf3acfa0fd45b4820500e4754c99f9
#: ../../ref/contrib/gis/index.txt:5
msgid "GeoDjango"
msgstr ""

# dc6f8b087deb4660b10f9fd9d3f4d59b
#: ../../ref/contrib/gis/index.txt:10
msgid ""
"GeoDjango intends to be a world-class geographic Web framework. Its goal is "
"to make it as easy as possible to build GIS Web applications and harness the "
"power of spatially enabled data."
msgstr ""

# 580eee52c25645679d5d709d0c388818
#: ../../ref/contrib/gis/install.txt:5
msgid "GeoDjango Installation"
msgstr ""

# 086a7d6a36694a0794403ee472327fa4
#: ../../ref/contrib/gis/install.txt:11
msgid "In general, GeoDjango installation requires:"
msgstr ""

# 1e458840ac3643cfbda216aa04a3d45e
#: ../../ref/contrib/gis/install.txt:13
msgid ":ref:`Python and Django <django>`"
msgstr ""

# 9431f5b158db4ac0b2f22b252b7ee0c2
#: ../../ref/contrib/gis/install.txt:14
msgid ":ref:`spatial_database`"
msgstr ""

# 865356a7bc384692a3be5c5794d84b5e
#: ../../ref/contrib/gis/install.txt:15
msgid ":ref:`geospatial_libs`"
msgstr ""

# ed7fb090f332449f868810778f63f5a7
#: ../../ref/contrib/gis/install.txt:17
msgid ""
"Details for each of the requirements and installation instructions are "
"provided in the sections below.   In addition, platform-specific "
"instructions are available for:"
msgstr ""

# e298df8a3b8a4b09b5dea2ba02e35724
#: ../../ref/contrib/gis/install.txt:21
msgid ":ref:`macosx`"
msgstr ""

# e3d7c0b97977479fb68fcd93acc2a462
#: ../../ref/contrib/gis/install.txt:22
msgid ":ref:`ubuntudebian`"
msgstr ""

# 58cc37f957a64f82a6104f0558c6b10a
#: ../../ref/contrib/gis/install.txt:23
msgid ":ref:`windows`"
msgstr ""

# ed5eb5b7e2a34945aa7a7b3d72ec68f1
#: ../../ref/contrib/gis/install.txt:27
msgid ""
"Because GeoDjango takes advantage of the latest in the open source "
"geospatial software technology, recent versions of the libraries are "
"necessary. If binary packages aren't available for your platform, :ref:"
"`installation from source <build_from_source>` may be required. When "
"compiling the libraries from source, please follow the directions closely, "
"especially if you're a beginner."
msgstr ""

# 453cd99147a44652a42079e3c8ce8e74
#: ../../ref/contrib/gis/install.txt:35
msgid "Requirements"
msgstr ""

# e9b33c30d1af4650b1a702e563e68c8c
#: ../../ref/contrib/gis/install.txt:40
msgid "Python and Django"
msgstr ""

# bf3e7890b2fe46c08853aa323c2dc296
#: ../../ref/contrib/gis/install.txt:42
msgid ""
"Because GeoDjango is included with Django, please refer to Django's :ref:"
"`installation instructions <installing-official-release>` for details on how "
"to install."
msgstr ""

# b684c5d5f3d4409b876211c918465870
#: ../../ref/contrib/gis/install.txt:50
msgid "Spatial database"
msgstr ""

# c58df55fd11944e9bdc59276f662f4af
#: ../../ref/contrib/gis/install.txt:51
msgid ""
"PostgreSQL (with PostGIS), MySQL, Oracle, and SQLite (with SpatiaLite) are "
"the spatial databases currently supported."
msgstr ""

# 3ca1bb9245e84473956e18aedaea8ca8
#: ../../ref/contrib/gis/install.txt:56
msgid ""
"PostGIS is recommended, because it is the most mature and feature-rich open "
"source spatial database."
msgstr ""

# 89af8758f0a64ac5955d6df6ebc62881
#: ../../ref/contrib/gis/install.txt:59
msgid ""
"The geospatial libraries required for a GeoDjango installation depends on "
"the spatial database used.  The following lists the library requirements, "
"supported versions, and any notes for each of the supported database "
"backends:"
msgstr ""

# 28edd9646b624b2e9c8ecdd48791dd5e
#: ../../ref/contrib/gis/install.txt:64
msgid "Database"
msgstr ""

# af994de98cb1450193e7815104f07fd5
#: ../../ref/contrib/gis/install.txt:64
msgid "Library Requirements"
msgstr ""

# 6bdda15f53154913a7ade6df9a2a87a6
# a6d98f5cc0274715a763898de55f31de
#: ../../ref/contrib/gis/install.txt:64 ../../ref/contrib/gis/install.txt:80
msgid "Supported Versions"
msgstr ""

# 32227f1360074702ac939bbc72f4e7e0
#: ../../ref/contrib/gis/install.txt:64
msgid "Notes"
msgstr ""

# e2b0333a898f4592bd65cbc9166c829d
# 7209bc64c53b4c17a534b2fb6099c136
#: ../../ref/contrib/gis/install.txt:66 ../../ref/contrib/gis/install.txt:1145
msgid "PostgreSQL"
msgstr ""

# 8c75da9a7f6e4a74b7886a8dc1e255e4
#: ../../ref/contrib/gis/install.txt:66
msgid "GEOS, PROJ.4, PostGIS"
msgstr ""

# 982a868ae6ed475b840f2cf330d41ed9
#: ../../ref/contrib/gis/install.txt:66
msgid "8.1+"
msgstr ""

# a87dfa1498f94774bdbd2244bc8447b1
#: ../../ref/contrib/gis/install.txt:66
msgid "Requires PostGIS."
msgstr ""

# c49a21b87d614d6da5bd3226559ff4a0
# a40982dc186747ff91b4f5668859c094
# d9813f26ad9542ae921fc2e803d6edef
# 01afabd1114d4bcd90aad97c813d92d1
#: ../../ref/contrib/gis/install.txt:67 ../../ref/contrib/gis/install.txt:68
#: ../../ref/contrib/gis/install.txt:136 ../../ref/contrib/gis/install.txt:802
msgid "GEOS"
msgstr ""

# 43e87cda8bb84ca28ac5af6a4c01fad5
#: ../../ref/contrib/gis/install.txt:67
msgid "5.x"
msgstr ""

# 715466fcc65c46928fdc99c49fa328fb
#: ../../ref/contrib/gis/install.txt:67
msgid "Not OGC-compliant; limited functionality."
msgstr ""

# b42d4699a5f64ef3a52457fa829787ed
#: ../../ref/contrib/gis/install.txt:68
msgid "10.2, 11"
msgstr ""

# eb0731dde487430b9e0a33da386be534
#: ../../ref/contrib/gis/install.txt:68
msgid "XE not supported; not tested with 9."
msgstr ""

# ed976e9c3e3546ad9e14ff0948a85082
# 8b0f599fad3d4fed91dc3d5567fc7f00
#: ../../ref/contrib/gis/install.txt:69 ../../ref/contrib/gis/install.txt:384
msgid "SQLite"
msgstr ""

# 5eaf839e2fe14353807b7c7152101516
#: ../../ref/contrib/gis/install.txt:69
msgid "GEOS, GDAL, PROJ.4, SpatiaLite"
msgstr ""

# 910048c40de14367bfb8ba8e05d1307c
#: ../../ref/contrib/gis/install.txt:69
msgid "3.6.+"
msgstr ""

# 81d57bad2d554f96b3d7987a17f215e9
#: ../../ref/contrib/gis/install.txt:69
msgid "Requires SpatiaLite 2.3+, pysqlite2 2.5+, and Django 1.1."
msgstr ""

# 9efea37f19ff48798c1537dfc77b083c
#: ../../ref/contrib/gis/install.txt:75
msgid "Geospatial libraries"
msgstr ""

# 964ab454a2454615a2969509bc0ed2d7
#: ../../ref/contrib/gis/install.txt:76
msgid ""
"GeoDjango uses and/or provides interfaces for the following open source "
"geospatial libraries:"
msgstr ""

# 8c9f2a706f9a4cb49d464abde4b31ef3
#: ../../ref/contrib/gis/install.txt:80
msgid "Program"
msgstr ""

# de5e6135c7d34a728a4d3784edb5691b
#: ../../ref/contrib/gis/install.txt:80
msgid "Required"
msgstr ""

# 800e97beac554c0e9e536611d0840f4d
#: ../../ref/contrib/gis/install.txt:82
msgid ":ref:`GEOS <ref-geos>`"
msgstr ""

# 5c4e98ad76694844858a415bee69ba25
#: ../../ref/contrib/gis/install.txt:82
msgid "Geometry Engine Open Source"
msgstr ""

# cdeac3e3f1834998bb704bfbf2ebabca
#: ../../ref/contrib/gis/install.txt:82
msgid "Yes"
msgstr ""

# 0a7409d366a84589a14b07375307c6ae
#: ../../ref/contrib/gis/install.txt:82
msgid "3.3, 3.2, 3.1, 3.0"
msgstr ""

# ed47d388be784306984fe5cde39b7488
#: ../../ref/contrib/gis/install.txt:83
msgid "`PROJ.4`_"
msgstr ""

# 2ef481253a0f4087a51adbe8258fe1ab
#: ../../ref/contrib/gis/install.txt:83
msgid "Cartographic Projections library"
msgstr ""

# 639109a3205d480f9ff2abab939101f6
#: ../../ref/contrib/gis/install.txt:83
msgid "Yes (PostgreSQL and SQLite only)"
msgstr ""

# cb9dc95434d94781b9d745b7a0af26ca
#: ../../ref/contrib/gis/install.txt:83
msgid "4.7, 4.6, 4.5, 4.4"
msgstr ""

# 14f62f6904e346969a4593b5d2ba2d75
#: ../../ref/contrib/gis/install.txt:84
msgid ":ref:`GDAL <ref-gdal>`"
msgstr ""

# 5717a8fa6e654beaaee1ce0a7e419da5
#: ../../ref/contrib/gis/install.txt:84
msgid "Geospatial Data Abstraction Library"
msgstr ""

# 27c19fa030444e3888bccc3ce043598f
#: ../../ref/contrib/gis/install.txt:84
msgid "No (but, required for SQLite)"
msgstr ""

# 6fd90e17a56c48e0b861d139413863d2
#: ../../ref/contrib/gis/install.txt:84
msgid "1.8, 1.7, 1.6, 1.5, 1.4"
msgstr ""

# 3c6e7f5c1da248248a2d5d08f918a5bb
#: ../../ref/contrib/gis/install.txt:85
msgid ":ref:`GeoIP <ref-geoip>`"
msgstr ""

# 75e5c3ab71cd46079279424a147a4a2a
#: ../../ref/contrib/gis/install.txt:85
msgid "IP-based geolocation library"
msgstr ""

# 771b53779c5348828d72e1e3b3ca483c
#: ../../ref/contrib/gis/install.txt:85
msgid "No"
msgstr ""

# a90ee31eeceb476b82ef643b08cca820
# 36d2fd17fd8d4707ba287daa955dd054
#: ../../ref/contrib/gis/install.txt:85 ../../ref/contrib/gis/install.txt:557
msgid "1.4"
msgstr ""

# cfa520e586214d02887f856adbfbe84c
#: ../../ref/contrib/gis/install.txt:86
msgid "`PostGIS`__"
msgstr ""

# 513fc1bb01ce49bbb7f8b8b2ea984f3b
#: ../../ref/contrib/gis/install.txt:86
msgid "Spatial extensions for PostgreSQL"
msgstr ""

# c7b4933f27644e14a65f11052eb89dfa
#: ../../ref/contrib/gis/install.txt:86
msgid "Yes (PostgreSQL only)"
msgstr ""

# 37f9ea1695cf4a658fb05271e0a6a6f6
#: ../../ref/contrib/gis/install.txt:86
msgid "1.5, 1.4, 1.3"
msgstr ""

# c61de66b36f346fabd89b505202db351
#: ../../ref/contrib/gis/install.txt:87
msgid "`SpatiaLite`__"
msgstr ""

# 8296ea51ee0d4af4b55569ddf22d33e0
#: ../../ref/contrib/gis/install.txt:87
msgid "Spatial extensions for SQLite"
msgstr ""

# 11de5b1ca7d04d2bbd3c649fb0b0f799
#: ../../ref/contrib/gis/install.txt:87
msgid "Yes (SQLite only)"
msgstr ""

# 7c586f9207294d1f9d0ad7d6fae88857
#: ../../ref/contrib/gis/install.txt:87
msgid "3.0, 2.4, 2.3"
msgstr ""

# 1421969183264c97bc1aed639cfdbd48
#: ../../ref/contrib/gis/install.txt:92
msgid ""
"While :ref:`gdalbuild` is technically not required, it is *recommended*. "
"Important features of GeoDjango (including the :ref:`ref-layermapping`, "
"geometry reprojection, and the geographic admin) depend on its functionality."
msgstr ""

# 71419145e60d460ca1fa1173f19b0ebd
#: ../../ref/contrib/gis/install.txt:99
msgid ""
"The GeoDjango interfaces to GEOS, GDAL, and GeoIP may be used independently "
"of Django.  In other words, no database or settings file required -- just "
"import them as normal from :mod:`django.contrib.gis`."
msgstr ""

# 79d14f7bca5c4affad271545e6fb8d83
#: ../../ref/contrib/gis/install.txt:110
msgid "Building from source"
msgstr ""

# a4ea451f2bfa4857ba2dda331268626d
#: ../../ref/contrib/gis/install.txt:112
msgid ""
"When installing from source on UNIX and GNU/Linux systems, please follow the "
"installation instructions carefully, and install the libraries in the given "
"order.  If using MySQL or Oracle as the spatial database, only GEOS is "
"required."
msgstr ""

# fc2aa2c62cdd429cb394f68ab5b65f20
#: ../../ref/contrib/gis/install.txt:119
msgid ""
"On Linux platforms, it may be necessary to run the ``ldconfig`` command "
"after installing each library.  For example::"
msgstr ""

# 423dfee8084e4275a2679b99f42a17b9
#: ../../ref/contrib/gis/install.txt:127
msgid ""
"OS X users are required to install `Apple Developer Tools`_ in order to "
"compile software from source.  This is typically included on your OS X "
"installation DVDs."
msgstr ""

# 0655cfc8c4094add8156d0d647f6f01e
#: ../../ref/contrib/gis/install.txt:138
msgid ""
"GEOS is a C++ library for performing geometric operations, and is the "
"default internal geometry representation used by GeoDjango (it's behind the "
"\"lazy\" geometries).  Specifically, the C API library is called (e.g., "
"``libgeos_c.so``) directly from Python using ctypes."
msgstr ""

# 46b0d79e9ce845a8880d00586b191ba9
#: ../../ref/contrib/gis/install.txt:143
msgid ""
"First, download GEOS 3.2 from the refractions Web site and untar the source "
"archive::"
msgstr ""

# e02fd94c9f004b9da742fc279c3945bc
#: ../../ref/contrib/gis/install.txt:149
msgid ""
"Next, change into the directory where GEOS was unpacked, run the configure "
"script, compile, and install::"
msgstr ""

# 267775b1bfd94299a1ce4f5076fdd1a7
# 1bc662b18077411a93ec3a75d0a6be38
# e27ece8bca82447bb6328589d7361fda
# 10fc8c2b3aeb4ea9bad9a86c274e5203
#: ../../ref/contrib/gis/install.txt:159 ../../ref/contrib/gis/install.txt:300
#: ../../ref/contrib/gis/install.txt:655
#: ../../ref/contrib/gis/layermapping.txt:199
msgid "Troubleshooting"
msgstr ""

# 39513e479a564edcaf430b90bc1bb8a1
#: ../../ref/contrib/gis/install.txt:162
msgid "Can't find GEOS library"
msgstr ""

# 3975df5c3be3480aab3b543e5d2c9984
#: ../../ref/contrib/gis/install.txt:164
msgid "When GeoDjango can't find GEOS, this error is raised:"
msgstr ""

# 73a71f81098747ebb0435d522c1b6438
#: ../../ref/contrib/gis/install.txt:170
msgid ""
"The most common solution is to properly configure your :ref:`libsettings` "
"*or* set :ref:`geoslibrarypath` in your settings."
msgstr ""

# 42f6f4d908c4493fbb3c860ef43635b3
#: ../../ref/contrib/gis/install.txt:173
msgid ""
"If using a binary package of GEOS (e.g., on Ubuntu), you may need to :ref:"
"`binutils`."
msgstr ""

# bcd707cd496d48a3a505938a5db9aadf
#: ../../ref/contrib/gis/install.txt:178
msgid "``GEOS_LIBRARY_PATH``"
msgstr ""

# c74846934c0e4edf855114546366e099
#: ../../ref/contrib/gis/install.txt:180
msgid ""
"If your GEOS library is in a non-standard location, or you don't want to "
"modify the system's library path then the :setting:`GEOS_LIBRARY_PATH` "
"setting may be added to your Django settings file with the full path to the "
"GEOS C library.  For example:"
msgstr ""

# 8ec95b552e144272b52e40731a69ae6b
#: ../../ref/contrib/gis/install.txt:197
msgid "PROJ.4"
msgstr ""

# e22ddb34d02c4fe99758c2661ec37e23
#: ../../ref/contrib/gis/install.txt:199
msgid ""
"`PROJ.4`_ is a library for converting geospatial data to different "
"coordinate reference systems."
msgstr ""

# ad8c70df26e9483889dc29dc0596358d
#: ../../ref/contrib/gis/install.txt:202
msgid "First, download the PROJ.4 source code and datum shifting files [#]_::"
msgstr ""

# bf24333b8a3244489352e39f7efd0ac3
#: ../../ref/contrib/gis/install.txt:207
msgid ""
"Next, untar the source code archive, and extract the datum shifting files in "
"the ``nad`` subdirectory.  This must be done *prior* to configuration::"
msgstr ""

# 76164ebc13b04114bc8a136a9f557df9
#: ../../ref/contrib/gis/install.txt:215
msgid "Finally, configure, make and install PROJ.4::"
msgstr ""

# e1a8ba88773d46e2877e59caa60fad17
#: ../../ref/contrib/gis/install.txt:227
msgid ""
"`PostGIS`__ adds geographic object support to PostgreSQL, turning it into a "
"spatial database. :ref:`geosbuild` and :ref:`proj4` should be installed "
"prior to building PostGIS."
msgstr ""

# a75f104302dc409cac99e7f3b8e01e53
#: ../../ref/contrib/gis/install.txt:233
msgid ""
"The `psycopg2`_ module is required for use as the database adaptor when "
"using GeoDjango with PostGIS."
msgstr ""

# 2a1709892e50481489853ad9b516ca3d
#: ../../ref/contrib/gis/install.txt:238
msgid "First download the source archive, and extract::"
msgstr ""

# 7e576fa6fbb349099d7e791490bc02a0
#: ../../ref/contrib/gis/install.txt:244
msgid "Next, configure, make and install PostGIS::"
msgstr ""

# 34a3e1e874144264adc1a71b3dfad3bb
#: ../../ref/contrib/gis/install.txt:248
msgid "Finally, make and install::"
msgstr ""

# 282ac6a6521248e798c6efca97dbabb3
#: ../../ref/contrib/gis/install.txt:256
msgid ""
"GeoDjango does not automatically create a spatial database.  Please consult "
"the section on :ref:`spatialdb_template` for more information."
msgstr ""

# f8af3fd8f60d456e8d8e01089ceb5b4c
# ebef024abc564d1cbd79b5de483c2ec2
#: ../../ref/contrib/gis/install.txt:264 ../../ref/contrib/gis/install.txt:804
msgid "GDAL"
msgstr ""

# 94647de9dd4e4b44a1dbcc371459263d
#: ../../ref/contrib/gis/install.txt:266
msgid ""
"`GDAL`__ is an excellent open source geospatial library that has support for "
"reading most vector and raster spatial data formats.  Currently, GeoDjango "
"only supports :ref:`GDAL's vector data <ref-gdal>` capabilities [#]_. :ref:"
"`geosbuild` and :ref:`proj4` should be installed prior to building GDAL."
msgstr ""

# d9f9d87620b04b40b0ad69899b5bc05d
#: ../../ref/contrib/gis/install.txt:271
msgid "First download the latest GDAL release version and untar the archive::"
msgstr ""

# ca5ac25309a14c1fa962edbb30021368
#: ../../ref/contrib/gis/install.txt:277
msgid "Configure, make and install::"
msgstr ""

# f22c7e81763b43819ca4e723ee6ff378
#: ../../ref/contrib/gis/install.txt:286
msgid ""
"Because GeoDjango has it's own Python interface, the preceding instructions "
"do not build GDAL's own Python bindings.  The bindings may be built by "
"adding the ``--with-python`` flag when running ``configure``.  See `GDAL/OGR "
"In Python`__ for more information on GDAL's bindings."
msgstr ""

# b8896513d5e644c6b6c02b9bc86140bb
#: ../../ref/contrib/gis/install.txt:291
msgid ""
"If you have any problems, please see the troubleshooting section below for "
"suggestions and solutions."
msgstr ""

# 01c8b85b4aef443ba9dad715ef5109b2
#: ../../ref/contrib/gis/install.txt:303
msgid "Can't find GDAL library"
msgstr ""

# 6b193264a54047d2b656d1cf90642bc8
#: ../../ref/contrib/gis/install.txt:305
msgid ""
"When GeoDjango can't find the GDAL library, the ``HAS_GDAL`` flag will be "
"false:"
msgstr ""

# bab3b5bb2dc241a3a533e3564ffa1675
#: ../../ref/contrib/gis/install.txt:314
msgid ""
"The solution is to properly configure your :ref:`libsettings` *or* set :ref:"
"`gdallibrarypath` in your settings."
msgstr ""

# 4318928fbe8c4b7dac674303b593ada5
#: ../../ref/contrib/gis/install.txt:320
msgid "``GDAL_LIBRARY_PATH``"
msgstr ""

# 08912dc831db413f944e37693746edf0
#: ../../ref/contrib/gis/install.txt:322
msgid ""
"If your GDAL library is in a non-standard location, or you don't want to "
"modify the system's library path then the :setting:`GDAL_LIBRARY_PATH` "
"setting may be added to your Django settings file with the full path to the "
"GDAL library.  For example:"
msgstr ""

# cf1a6e9218674f09aa5ae0e9b5d80c28
#: ../../ref/contrib/gis/install.txt:334
msgid "Can't find GDAL data files (``GDAL_DATA``)"
msgstr ""

# 50b3a5fb4c2148e596d24b1a85bb976e
#: ../../ref/contrib/gis/install.txt:336
msgid ""
"When installed from source, GDAL versions 1.5.1 and below have an autoconf "
"bug that places data in the wrong location. [#]_   This can lead to error "
"messages like this:"
msgstr ""

# 1d2354d3b71849cca6a44a2b1d082856
#: ../../ref/contrib/gis/install.txt:346
msgid ""
"The solution is to set the ``GDAL_DATA`` environment variable to the "
"location of the GDAL data files before invoking Python  (typically ``/usr/"
"local/share``; use ``gdal-config --datadir`` to find out). For example::"
msgstr ""

# 9aecf958de0d4b969b9a39393523e264
#: ../../ref/contrib/gis/install.txt:353
msgid ""
"If using Apache, you may need to add this environment variable to your "
"configuration file:"
msgstr ""

# 05725c056537422285f10e8d13bc7dec
#: ../../ref/contrib/gis/install.txt:367
msgid ""
"Mac OS X users should follow the instructions in the :ref:`kyngchaos` "
"section, as it is much easier than building from source."
msgstr ""

# dfc9dd06b3014b1badd5b8ef71844687
#: ../../ref/contrib/gis/install.txt:370
msgid ""
"`SpatiaLite`__ adds spatial support to SQLite, turning it into a full-"
"featured spatial database.  Because SpatiaLite has special requirements, it "
"typically requires SQLite and pysqlite2 (the Python SQLite DB-API adaptor) "
"to be built from source.  :ref:`geosbuild` and :ref:`proj4` should be "
"installed prior to building SpatiaLite."
msgstr ""

# 8a7e384f930740618aebeda4f2a980ff
#: ../../ref/contrib/gis/install.txt:376
msgid ""
"After installation is complete, don't forget to read the post-installation "
"docs on :ref:`create_spatialite_db`."
msgstr ""

# 4e3c9e730f454f7b8e4e82e606440339
#: ../../ref/contrib/gis/install.txt:386
msgid ""
"Typically, SQLite packages are not compiled to include the `R*Tree module`__ "
"-- thus it must be compiled from source.  First download the latest "
"amalgamation source archive from the `SQLite download page`__, and extract::"
msgstr ""

# 230d6686b32f4c5ea79f16edbd5132e4
#: ../../ref/contrib/gis/install.txt:394
msgid ""
"Next, run the ``configure`` script -- however the ``CFLAGS`` environment "
"variable needs to be customized so that SQLite knows to build the R*Tree "
"module::"
msgstr ""

# e181a7c57a6b421fae2ff7f43343d98d
#: ../../ref/contrib/gis/install.txt:404
msgid ""
"If using Ubuntu, installing a newer SQLite from source can be very difficult "
"because it links to the existing ``libsqlite3.so`` in ``/usr/lib`` which "
"many other packages depend on.  Unfortunately, the best solution at this "
"time is to overwrite the existing library by adding ``--prefix=/usr`` to the "
"``configure`` command."
msgstr ""

# 3f00cbad1daf4a30b29f431216890283
#: ../../ref/contrib/gis/install.txt:416
msgid "SpatiaLite library (``libspatialite``) and tools (``spatialite``)"
msgstr ""

# bbae799e6f794d0ba571a441a8eb9bdd
#: ../../ref/contrib/gis/install.txt:418
msgid ""
"After SQLite has been built with the R*Tree module enabled, get the latest "
"SpatiaLite library source and tools bundle from the `download page`__::"
msgstr ""

# bfcb0010d01e4e61afa4d0dbdd4cef9a
#: ../../ref/contrib/gis/install.txt:426
msgid ""
"Prior to attempting to build, please read the important notes below to see "
"if customization of the ``configure`` command is necessary.  If not, then "
"run the ``configure`` script, make, and install for the SpatiaLite library::"
msgstr ""

# 8db471f4dc82487ab6cd9518afb10afe
#: ../../ref/contrib/gis/install.txt:436
msgid "Finally, do the same for the SpatiaLite tools::"
msgstr ""

# 83b1e0e6824f46118a10f04f57befdf5
#: ../../ref/contrib/gis/install.txt:446
msgid ""
"If you've installed GEOS and PROJ.4 from binary packages, you will have to "
"specify their paths when running the ``configure`` scripts for *both* the "
"library and the tools (the configure scripts look, by default, in ``/usr/"
"local``).  For example, on Debian/Ubuntu distributions that have GEOS and "
"PROJ.4 packages, the command would be::"
msgstr ""

# 4ef7fea8b5de4b86b00bd6b206d80e7a
#: ../../ref/contrib/gis/install.txt:455
msgid ""
"For Mac OS X users building from source, the SpatiaLite library *and* tools "
"need to have their ``target`` configured::"
msgstr ""

# 69567d9831df43f9ae6193881ba02999
# f3f611a352194fdc9e83f127fb3cbeea
#: ../../ref/contrib/gis/install.txt:465 ../../ref/contrib/gis/install.txt:852
msgid "pysqlite2"
msgstr ""

# 76ab6b4549114a6a80fdc2e89dc6a876
#: ../../ref/contrib/gis/install.txt:467
msgid ""
"Because SpatiaLite must be loaded as an external extension, it requires the "
"``enable_load_extension`` method, which is only available in versions 2.5+. "
"Thus, download pysqlite2 2.6, and untar::"
msgstr ""

# 59ec40aeff54425d9ea583c1c20768dd
#: ../../ref/contrib/gis/install.txt:475
msgid ""
"Next, use a text editor (e.g., ``emacs`` or ``vi``) to edit the ``setup."
"cfg`` file to look like the following:"
msgstr ""

# 59d3a5c9f86648d38cfb0c3bf9159b63
#: ../../ref/contrib/gis/install.txt:489
msgid ""
"The important thing here is to make sure you comment out the "
"``define=SQLITE_OMIT_LOAD_EXTENSION`` flag and that the ``include_dirs`` and "
"``library_dirs`` settings are uncommented and set to the appropriate path if "
"the SQLite header files and libraries are not in ``/usr/include`` and ``/usr/"
"lib``, respectively."
msgstr ""

# 82c9382b43254698ad7ef4bddd223cbf
#: ../../ref/contrib/gis/install.txt:495
msgid ""
"After modifying ``setup.cfg`` appropriately, then run the ``setup.py`` "
"script to build and install::"
msgstr ""

# de840ec9a0ae49e186c2afcb99ac3c37
#: ../../ref/contrib/gis/install.txt:501
msgid "Post-installation"
msgstr ""

# d28144a3d0454a64baff9ff155f0cbeb
#: ../../ref/contrib/gis/install.txt:506
msgid "Creating a spatial database template for PostGIS"
msgstr ""

# 729fb01ad0784baea118c1315fbe671b
#: ../../ref/contrib/gis/install.txt:508
msgid ""
"Creating a spatial database with PostGIS is different than normal because "
"additional SQL must be loaded to enable spatial functionality.  Because of "
"the steps in this process, it's better to create a database template that "
"can be reused later."
msgstr ""

# 14f736dd00dc4d6090eba4c4c5e9833d
#: ../../ref/contrib/gis/install.txt:513
msgid ""
"First, you need to be able to execute the commands as a privileged database "
"user.  For example, you can use the following to become the ``postgres`` "
"user::"
msgstr ""

# b6f66ef370034ab096d0135c1f41b57b
#: ../../ref/contrib/gis/install.txt:520
msgid ""
"The location *and* name of the PostGIS SQL files (e.g., from "
"``POSTGIS_SQL_PATH`` below) depends on the version of PostGIS. PostGIS "
"versions 1.3 and below use ``<pg_sharedir>/contrib/lwpostgis.sql``; whereas "
"version 1.4 uses ``<sharedir>/contrib/postgis.sql`` and version 1.5 uses "
"``<sharedir>/contrib/postgis-1.5/postgis.sql``."
msgstr ""

# f4ce5f305b7c4c9cb9c79687a8eba7d0
#: ../../ref/contrib/gis/install.txt:526
msgid ""
"To complicate matters, :ref:`ubuntudebian` distributions have their own "
"separate directory naming system that changes each release."
msgstr ""

# fa959904e43241dcbeb287ffd370c5d0
#: ../../ref/contrib/gis/install.txt:529
msgid ""
"The example below assumes PostGIS 1.5, thus you may need to modify "
"``POSTGIS_SQL_PATH`` and the name of the SQL file for the specific version "
"of PostGIS you are using."
msgstr ""

# 47e7784c05ab430faaf5c34bb2f52873
#: ../../ref/contrib/gis/install.txt:533
msgid ""
"Once you're a database super user, then you may execute the following "
"commands to create a PostGIS spatial database template::"
msgstr ""

# 3eba680fb7a74fb1838b26bd942ca535
#: ../../ref/contrib/gis/install.txt:550
msgid ""
"These commands may be placed in a shell script for later use; for "
"convenience the following scripts are available:"
msgstr ""

# acd6b281dc13422ea5f49da7909a3b72
#: ../../ref/contrib/gis/install.txt:554
msgid "PostGIS version"
msgstr ""

# cb46201325124c9aaaa0c4539302bf9f
#: ../../ref/contrib/gis/install.txt:554
msgid "Bash shell script"
msgstr ""

# cf270488710942bea53eb81854fc05d9
#: ../../ref/contrib/gis/install.txt:556
msgid "1.3"
msgstr ""

# be71e5629ea545b4a47fd4a3b8b0eb62
#: ../../ref/contrib/gis/install.txt:556
msgid ":download:`create_template_postgis-1.3.sh`"
msgstr ""

# cf66100c913d48e78e619edb5e0e52e7
#: ../../ref/contrib/gis/install.txt:557
msgid ":download:`create_template_postgis-1.4.sh`"
msgstr ""

# 7aaf5a41e67a4d0d9c8481239902f76b
#: ../../ref/contrib/gis/install.txt:558
msgid "1.5"
msgstr ""

# 554d6dc62b444fcbbec3a71c6ee2f434
#: ../../ref/contrib/gis/install.txt:558
msgid ":download:`create_template_postgis-1.5.sh`"
msgstr ""

# 50a8bbd92a2e4ec3bc61e3853d616349
#: ../../ref/contrib/gis/install.txt:559
msgid "Debian/Ubuntu"
msgstr ""

# de9b835f1d19400a88fc5d2da0734207
#: ../../ref/contrib/gis/install.txt:559
msgid ":download:`create_template_postgis-debian.sh`"
msgstr ""

# 30ea86ab3beb49bdb3f8290aeb2fa865
#: ../../ref/contrib/gis/install.txt:562
msgid ""
"Afterwards, you may create a spatial database by simply specifying "
"``template_postgis`` as the template to use (via the ``-T`` option)::"
msgstr ""

# 57b62b6733024a0eb2266c40c81b5024
#: ../../ref/contrib/gis/install.txt:569
msgid ""
"While the ``createdb`` command does not require database super-user "
"privileges, it must be executed by a database user that has permissions to "
"create databases. You can create such a user with the following command::"
msgstr ""

# 093f6c97a6544fa89a5fab5f5db7e0cc
#: ../../ref/contrib/gis/install.txt:578
msgid "Creating a spatial database for SpatiaLite"
msgstr ""

# 008f50a76f6e4d8691fd613838eb686b
#: ../../ref/contrib/gis/install.txt:580
msgid ""
"After you've installed SpatiaLite, you'll need to create a number of spatial "
"metadata tables in your database in order to perform spatial queries."
msgstr ""

# 9d03fcc6ff8f469f8dfdc352a7c8bb61
#: ../../ref/contrib/gis/install.txt:583
msgid ""
"If you're using SpatiaLite 3.0 or newer, use the ``spatialite`` utility to "
"call the ``InitSpatiaMetaData()`` function, like this::"
msgstr ""

# efa2f5aa05834509b124f1daabcfab20
#: ../../ref/contrib/gis/install.txt:591
msgid ""
"You can safely ignore the error messages shown. When you've done this, you "
"can skip the rest of this section."
msgstr ""

# b644555e169d4318960441e1cbc88fb3
#: ../../ref/contrib/gis/install.txt:594
msgid ""
"If you're using a version of SpatiaLite older than 3.0, you'll need to "
"download a database-initialization file and execute its SQL queries in your "
"database."
msgstr ""

# 20e57b9942764b72a71dc9604f1dc7f4
#: ../../ref/contrib/gis/install.txt:597
msgid ""
"First, get it from the appropriate SpatiaLite Resources page ( http://www."
"gaia-gis.it/spatialite-2.3.1/resources.html for 2.3 or http://www.gaia-gis."
"it/spatialite-2.4.0/ for 2.4)::"
msgstr ""

# ce493edd8e034ddab74aa15b09bde5c3
#: ../../ref/contrib/gis/install.txt:604
msgid "Then, use the ``spatialite`` command to initialize a spatial database::"
msgstr ""

# 4e206ae4f5ad4a9faafc17efdf5df90e
#: ../../ref/contrib/gis/install.txt:610
msgid ""
"The parameter ``geodjango.db`` is the *filename* of the SQLite database you "
"want to use.  Use the same in the :setting:`DATABASES` ``\"name\"`` key "
"inside your ``settings.py``."
msgstr ""

# 9bbd84bf820f4e59ae332c5b36b326df
#: ../../ref/contrib/gis/install.txt:615
msgid "Add ``django.contrib.gis`` to :setting:`INSTALLED_APPS`"
msgstr ""

# 2d998e6f16fe41e7a554b309b255fa74
#: ../../ref/contrib/gis/install.txt:617
msgid ""
"Like other Django contrib applications, you will *only* need to add :mod:"
"`django.contrib.gis` to :setting:`INSTALLED_APPS` in your settings. This is "
"the so that ``gis`` templates can be located -- if not done, then features "
"such as the geographic admin or KML sitemaps will not function properly."
msgstr ""

# e9fb7e7098d441e295ecbe5c28016ed4
#: ../../ref/contrib/gis/install.txt:625
msgid "Add Google projection to ``spatial_ref_sys`` table"
msgstr ""

# 47ce2563d63a40b98fed2267b7d53c0c
#: ../../ref/contrib/gis/install.txt:631
msgid ""
"If you're running PostGIS 1.4 or above, you can skip this step. The entry is "
"already included in the default ``spatial_ref_sys`` table."
msgstr ""

# 2b55a26a5cc9402da6e548f04626f821
#: ../../ref/contrib/gis/install.txt:634
msgid ""
"In order to conduct database transformations to the so-called \"Google\" "
"projection (a spherical mercator projection used by Google Maps), an entry "
"must be added to your spatial database's ``spatial_ref_sys`` table. Invoke "
"the Django shell from your project and execute the ``add_srs_entry`` "
"function:"
msgstr ""

# 4398d28c0ae0490688db5527cdb39e6a
#: ../../ref/contrib/gis/install.txt:648
msgid "In Django 1.1 the name of this function is ``add_postgis_srs``."
msgstr ""

# 05d4ef2d42414bbe89dfc541e4a86d14
#: ../../ref/contrib/gis/install.txt:650
msgid ""
"This adds an entry for the 900913 SRID to the ``spatial_ref_sys`` (or "
"equivalent) table, making it possible for the spatial database to transform "
"coordinates in this projection.  You only need to execute this command "
"*once* per spatial database."
msgstr ""

# 7664293ac19b4f949cb8b90a7c6757c2
#: ../../ref/contrib/gis/install.txt:657
msgid ""
"If you can't find the solution to your problem here then participate in the "
"community!  You can:"
msgstr ""

# 69b6ff209aae47bcba95657503f065a9
#: ../../ref/contrib/gis/install.txt:660
msgid ""
"Join the ``#geodjango`` IRC channel on FreeNode. Please be patient and "
"polite -- while you may not get an immediate response, someone will attempt "
"to answer your question as soon as they see it."
msgstr ""

# 1d69bd0074534e4fbea4bd4cd1737c99
#: ../../ref/contrib/gis/install.txt:663
msgid "Ask your question on the `GeoDjango`__ mailing list."
msgstr ""

# 65c62cb16e9046dd9cff6a10dd67bad0
#: ../../ref/contrib/gis/install.txt:664
msgid ""
"File a ticket on the `Django trac`__ if you think there's a bug.  Make sure "
"to provide a complete description of the problem, versions used, and specify "
"the component as \"GIS\"."
msgstr ""

# 015d31d219e543deac925f6039d07329
#: ../../ref/contrib/gis/install.txt:674
msgid "Library environment settings"
msgstr ""

# e8358b41691d411482d3a9e566fc94a0
#: ../../ref/contrib/gis/install.txt:676
msgid ""
"By far, the most common problem when installing GeoDjango is that the "
"external shared libraries (e.g., for GEOS and GDAL) cannot be located. [#]_ "
"Typically, the cause of this problem is that the operating system isn't "
"aware of the directory where the libraries built from source were installed."
msgstr ""

# dedf311902f0463ca953076fce38bc05
#: ../../ref/contrib/gis/install.txt:681
msgid ""
"In general, the library path may be set on a per-user basis by setting an "
"environment variable, or by configuring the library path for the entire "
"system."
msgstr ""

# 9a02b46134c942c48edc190689852048
#: ../../ref/contrib/gis/install.txt:686
msgid "``LD_LIBRARY_PATH`` environment variable"
msgstr ""

# 8ecd0e4abc3149ffa7d0c514f280fbe4
#: ../../ref/contrib/gis/install.txt:688
msgid ""
"A user may set this environment variable to customize the library paths they "
"want to use.  The typical library directory for software built from source "
"is ``/usr/local/lib``.  Thus, ``/usr/local/lib`` needs to be included in the "
"``LD_LIBRARY_PATH`` variable.  For example, the user could place the "
"following in their bash profile::"
msgstr ""

# 0febfcb19a084683a3cee296ef227d3c
#: ../../ref/contrib/gis/install.txt:697
msgid "Setting system library path"
msgstr ""

# da512cf0f635459d9efa374c76545d30
#: ../../ref/contrib/gis/install.txt:699
msgid ""
"On GNU/Linux systems, there is typically a file in ``/etc/ld.so.conf``, "
"which may include additional paths from files in another directory, such as "
"``/etc/ld.so.conf.d``. As the root user, add the custom library path (like "
"``/usr/local/lib``) on a new line in ``ld.so.conf``.  This is *one* example "
"of how to do so::"
msgstr ""

# 35ae8e62520b4f008da479e9d59a955a
#: ../../ref/contrib/gis/install.txt:707
msgid ""
"For OpenSolaris users, the system library path may be modified using the "
"``crle`` utility.  Run ``crle`` with no options to see the current "
"configuration and use ``crle -l`` to set with the new library path.  Be "
"*very* careful when modifying the system library path::"
msgstr ""

# 5c691563d7bc4eca9a6c44e2b6067e41
#: ../../ref/contrib/gis/install.txt:717
msgid "Install ``binutils``"
msgstr ""

# 465d724e21ea4a1d92e43c3da1b255e1
#: ../../ref/contrib/gis/install.txt:719
msgid ""
"GeoDjango uses the ``find_library`` function (from the ``ctypes.util`` "
"Python module) to discover libraries.  The ``find_library`` routine uses a "
"program called ``objdump`` (part of the ``binutils`` package) to verify a "
"shared library on GNU/Linux systems.  Thus, if ``binutils`` is not installed "
"on your Linux system then Python's ctypes may not be able to find your "
"library even if your library path is set correctly and geospatial libraries "
"were built perfectly."
msgstr ""

# 99412d34ec9e4b458aff203787148826
#: ../../ref/contrib/gis/install.txt:726
msgid ""
"The ``binutils`` package may be installed on Debian and Ubuntu systems using "
"the following command::"
msgstr ""

# f0db57608b644991bd8ec1ec42f38b1a
#: ../../ref/contrib/gis/install.txt:731
msgid "Similarly, on Red Hat and CentOS systems::"
msgstr ""

# 933a45e7c2ee4c7481b60647b69b7356
#: ../../ref/contrib/gis/install.txt:736
msgid "Platform-specific instructions"
msgstr ""

# 4b6224fe2b3f4838b7dc46dd05ba7f3c
#: ../../ref/contrib/gis/install.txt:741
msgid "Mac OS X"
msgstr ""

# 395284e36a1542a88ba34bb88cfc95a5
#: ../../ref/contrib/gis/install.txt:743
msgid ""
"Because of the variety of packaging systems available for OS X, users have "
"several different options for installing GeoDjango. These options are:"
msgstr ""

# 4a27bc9f7dd0447bae70303f2d09e88b
#: ../../ref/contrib/gis/install.txt:746
msgid ":ref:`kyngchaos`"
msgstr ""

# bcc56ad896cc487b80fe8b92feb048ea
#: ../../ref/contrib/gis/install.txt:747
msgid ":ref:`fink`"
msgstr ""

# c94e9d7426dd45ad98bddd0e0b1bfe8b
#: ../../ref/contrib/gis/install.txt:748
msgid ":ref:`macports`"
msgstr ""

# 0d13b1be175641e4999e930366409679
#: ../../ref/contrib/gis/install.txt:749
msgid ":ref:`build_from_source`"
msgstr ""

# a7f45e0b45e2472e82ab4d76c989642e
#: ../../ref/contrib/gis/install.txt:753
msgid ""
"Currently, the easiest and recommended approach for installing GeoDjango on "
"OS X is to use the KyngChaos packages."
msgstr ""

# ebbb8a12f0494575b6a332953b76bb31
#: ../../ref/contrib/gis/install.txt:756
msgid ""
"This section also includes instructions for installing an upgraded version "
"of :ref:`macosx_python` from packages provided by the Python Software "
"Foundation, however, this is not required."
msgstr ""

# 8343363037c040ac8a9bce6eabb3145e
# 83c0ea4364c14a098bb30573eacb8da9
#: ../../ref/contrib/gis/install.txt:763
#: ../../ref/contrib/gis/install.txt:1129
msgid "Python"
msgstr ""

# 6748e7349a104838ab85a93859e13858
#: ../../ref/contrib/gis/install.txt:765
msgid ""
"Although OS X comes with Python installed, users can use framework "
"installers (`2.5`__ and `2.6`__ are available) provided by the Python "
"Software Foundation.  An advantage to using the installer is that OS X's "
"Python will remain \"pristine\" for internal operating system use."
msgstr ""

# 98c6a029a0604a30b653710073338e99
#: ../../ref/contrib/gis/install.txt:776
msgid ""
"You will need to modify the ``PATH`` environment variable in your ``."
"profile`` file so that the new version of Python is used when ``python`` is "
"entered at the command-line::"
msgstr ""

# 309123619918417a8eb2eef50a9e1b79
#: ../../ref/contrib/gis/install.txt:785
msgid "KyngChaos packages"
msgstr ""

# 495bdcac9b724b5580627f8d77e4e94b
#: ../../ref/contrib/gis/install.txt:787
msgid ""
"William Kyngesburye provides a number of `geospatial library binary "
"packages`__ that make it simple to get GeoDjango installed on OS X without "
"compiling them from source.  However, the `Apple Developer Tools`_ are still "
"necessary for compiling the Python database adapters :ref:"
"`psycopg2_kyngchaos` (for PostGIS) and :ref:`pysqlite2_kyngchaos` (for "
"SpatiaLite)."
msgstr ""

# 5b980a1545d24aa49cf21b9432932c05
#: ../../ref/contrib/gis/install.txt:795
msgid ""
"SpatiaLite users should consult the :ref:`spatialite_kyngchaos` section "
"after installing the packages for additional instructions."
msgstr ""

# db058d98dcfe4c7d810a1beb37da1500
#: ../../ref/contrib/gis/install.txt:798
msgid "Download the framework packages for:"
msgstr ""

# 9016baf2a0f840aba338dad3a22c3a6e
#: ../../ref/contrib/gis/install.txt:800
msgid "UnixImageIO"
msgstr ""

# 5d627fd87d2c464c9355cf78d36c3e83
#: ../../ref/contrib/gis/install.txt:801
msgid "PROJ"
msgstr ""

# fd5bbe46b2754bb1855c179b02fc4bb1
#: ../../ref/contrib/gis/install.txt:803
msgid "SQLite3 (includes the SpatiaLite library)"
msgstr ""

# 64c59558cdc44d12987e2d2e4fa8ad61
#: ../../ref/contrib/gis/install.txt:806
msgid ""
"Install the packages in the order they are listed above, as the GDAL and "
"SQLite packages require the packages listed before them.  Afterwards, you "
"can also install the KyngChaos binary packages for `PostgreSQL and "
"PostGIS`__."
msgstr ""

# f71425854b7b4a3e9d0129d341b250b2
#: ../../ref/contrib/gis/install.txt:810
msgid ""
"After installing the binary packages, you'll want to add the following to "
"your ``.profile`` to be able to run the package programs from the command-"
"line::"
msgstr ""

# 9aa8b6181bcc45da907ffd15486a6b21
#: ../../ref/contrib/gis/install.txt:825
msgid ""
"Use of these binaries requires Django 1.0.3 and above.  If you are using a "
"previous version of Django (like 1.0.2), then you will have to add the "
"following in your settings:"
msgstr ""

# bae727754492402c94b30a39649de594
# 5d789813b67a44e59907bfb7a0471050
#: ../../ref/contrib/gis/install.txt:837
#: ../../ref/contrib/gis/install.txt:1196
msgid "psycopg2"
msgstr ""

# b4ab6ccc37124ef9b4c7614e58cf3591
#: ../../ref/contrib/gis/install.txt:839
msgid ""
"After you've installed the KyngChaos binaries and modified your ``PATH``, as "
"described above, ``psycopg2`` may be installed using the following command::"
msgstr ""

# 05398fa2faf74df8be529251bb39bd8f
#: ../../ref/contrib/gis/install.txt:846
msgid ""
"If you don't have ``pip``, follow the the :ref:`installation instructions "
"<installing-official-release>` to install it."
msgstr ""

# 9ce524e403c642ab9406218c7b637e62
#: ../../ref/contrib/gis/install.txt:854
msgid ""
"Follow the :ref:`pysqlite2` source install instructions, however, when "
"editing the ``setup.cfg`` use the following instead:"
msgstr ""

# e94db5aacc1d42fba8efe8808564a755
#: ../../ref/contrib/gis/install.txt:871
msgid ""
"When :ref:`create_spatialite_db`, the ``spatialite`` program is required. "
"However, instead of attempting to compile the SpatiaLite tools from source, "
"download the `SpatiaLite Binaries`__ for OS X, and install ``spatialite`` in "
"a location available in your ``PATH``.  For example::"
msgstr ""

# 93b463a79c6f43cf921c3770df0c6484
#: ../../ref/contrib/gis/install.txt:881
msgid ""
"Finally, for GeoDjango to be able to find the KyngChaos SpatiaLite library, "
"add the following to your ``settings.py``:"
msgstr ""

# 6b294819262645b485000e50643b872b
#: ../../ref/contrib/gis/install.txt:893
msgid "Fink"
msgstr ""

# afe2279b0f8e4836935b42e0ecac7443
#: ../../ref/contrib/gis/install.txt:895
msgid ""
"`Kurt Schwehr`__ has been gracious enough to create GeoDjango packages for "
"users of the `Fink`__ package system.  The following packages are available, "
"depending on which version of Python you want to use:"
msgstr ""

# 5f0a3e527ee3484984a6c7857948b968
#: ../../ref/contrib/gis/install.txt:899
msgid "``django-gis-py26``"
msgstr ""

# e061ba0fa35e46e9a0b1edbd7eccd10c
#: ../../ref/contrib/gis/install.txt:900
msgid "``django-gis-py25``"
msgstr ""

# c1d971d34c224f1ab932a442e496bbd9
#: ../../ref/contrib/gis/install.txt:901
msgid "``django-gis-py24``"
msgstr ""

# 7b4a208180194f0bbe4e20056a879330
#: ../../ref/contrib/gis/install.txt:909
msgid "MacPorts"
msgstr ""

# 10e449da164c44a4bfcdd19a4832f4a9
#: ../../ref/contrib/gis/install.txt:911
msgid ""
"`MacPorts`__ may be used to install GeoDjango prerequisites on Macintosh "
"computers running OS X.  Because MacPorts still builds the software from "
"source, the `Apple Developer Tools`_ are required."
msgstr ""

# a59a2ce722174920af8edcd00da9c50a
#: ../../ref/contrib/gis/install.txt:915
msgid "Summary::"
msgstr ""

# b92564a653174fcaa2a963741ccef920
#: ../../ref/contrib/gis/install.txt:926
msgid ""
"You will also have to modify the ``PATH`` in your ``.profile`` so that the "
"MacPorts programs are accessible from the command-line::"
msgstr ""

# e2f520a9315f416e882c7c9633f449ea
#: ../../ref/contrib/gis/install.txt:931
msgid ""
"In addition, add the ``DYLD_FALLBACK_LIBRARY_PATH`` setting so that the "
"libraries can be found by Python::"
msgstr ""

# 21b3ca3f49ac4fd0a96ee2bc7ba0940f
#: ../../ref/contrib/gis/install.txt:941
msgid "Ubuntu & Debian GNU/Linux"
msgstr ""

# cf1b9190d59347a8a2fb0b4ff609ffb0
#: ../../ref/contrib/gis/install.txt:945
msgid ""
"The PostGIS SQL files are not placed in the PostgreSQL share directory in "
"the Debian and Ubuntu packages. Instead, they're located in a special "
"directory depending on the release. In this case, use the :download:"
"`create_template_postgis-debian.sh` script"
msgstr ""

# d46f2d887c66410295d5926e243dc082
#: ../../ref/contrib/gis/install.txt:953
msgid "Ubuntu"
msgstr ""

# 6e868adac8e445c5b44ad1b6165f686d
#: ../../ref/contrib/gis/install.txt:958
msgid "10.04 and 10.10"
msgstr ""

# 2cd27d09f9334933b3a700bf616ab768
#: ../../ref/contrib/gis/install.txt:960
msgid ""
"In Ubuntu 10 PostgreSQL was upgraded to 8.4 and GDAL was upgraded to 1.6. "
"Ubuntu 10.04 uses PostGIS 1.4, while Ubuntu 10.10 uses PostGIS 1.5 (with "
"geography support).  The installation commands are::"
msgstr ""

# 31712a605dc14457b934ec0c2dff30ae
#: ../../ref/contrib/gis/install.txt:970
msgid "8.10"
msgstr ""

# 6d90baffa585484ab12d6aec76b56e3c
#: ../../ref/contrib/gis/install.txt:972
msgid "Use the synaptic package manager to install the following packages::"
msgstr ""

# 38b19c24cf704d71b6d42b4b5c4be7b1
#: ../../ref/contrib/gis/install.txt:977
msgid ""
"That's it!  For the curious, the required binary prerequisites packages are:"
msgstr ""

# 5fdb5151430742b69d1a4d9e29b1b3b3
# 5546982e1be04038a4ff334cfe3be122
#: ../../ref/contrib/gis/install.txt:979
#: ../../ref/contrib/gis/install.txt:1049
msgid "``binutils``: for ctypes to find libraries"
msgstr ""

# a9929e660aa24195991822838ed56c8f
#: ../../ref/contrib/gis/install.txt:980
msgid "``postgresql-8.3``"
msgstr ""

# e79dcf7ab0b64ad8a78d2ace028af82e
#: ../../ref/contrib/gis/install.txt:981
msgid "``postgresql-server-dev-8.3``: for ``pg_config``"
msgstr ""

# 0e9f1e6201a940f59f9fb784635fa510
#: ../../ref/contrib/gis/install.txt:982
msgid "``postgresql-8.3-postgis``: for PostGIS 1.3.3"
msgstr ""

# dbef63b9e58a447e9b8b5cc7842f2977
#: ../../ref/contrib/gis/install.txt:983
msgid "``libgeos-3.0.0``, and ``libgeos-c1``: for GEOS 3.0.0"
msgstr ""

# b728bcfd1b814eb694a6cce3003d24f1
#: ../../ref/contrib/gis/install.txt:984
msgid "``libgdal1-1.5.0``: for GDAL 1.5.0 library"
msgstr ""

# 002cb508d3d143f5b885c0f765cd8abf
#: ../../ref/contrib/gis/install.txt:985
msgid "``proj``: for PROJ 4.6.0 -- but no datum shifting files, see note below"
msgstr ""

# dbebf6ebad264e82a2c87bb517c9df26
# 1cc6543e4dee40c69d3bb76d1178f90e
#: ../../ref/contrib/gis/install.txt:986
#: ../../ref/contrib/gis/install.txt:1055
msgid "``python-psycopg2``"
msgstr ""

# ebbd7c3a3254436e8a7987eb385bdd8c
#: ../../ref/contrib/gis/install.txt:988
msgid "Optional packages to consider:"
msgstr ""

# 6dfb20586c7f44bab8186f951c02420f
#: ../../ref/contrib/gis/install.txt:990
msgid "``libgeoip1``: for :ref:`GeoIP <ref-geoip>` support"
msgstr ""

# da99be8903ba49f8a29e02730a10e3a0
#: ../../ref/contrib/gis/install.txt:991
msgid "``gdal-bin``: for GDAL command line programs like ``ogr2ogr``"
msgstr ""

# 5f2b1677863143ccab48d717f4e60793
#: ../../ref/contrib/gis/install.txt:992
msgid ""
"``python-gdal`` for GDAL's own Python bindings -- includes interfaces for "
"raster manipulation"
msgstr ""

# b69b36022e4c4dffb3189ec028cb1a1d
#: ../../ref/contrib/gis/install.txt:996
msgid ""
"On this version of Ubuntu the ``proj`` package does not come with the datum "
"shifting files installed, which will cause problems with the geographic "
"admin because the ``null`` datum grid is not available for transforming "
"geometries to the spherical mercator projection. A solution is to download "
"the datum-shifting files, create the grid file, and install it yourself::"
msgstr ""

# 4b3b2aa7e39e46fca62d9bc9702ec713
#: ../../ref/contrib/gis/install.txt:1010
msgid ""
"Otherwise, the Ubuntu ``proj`` package is fine for general use as long as "
"you do not plan on doing any database transformation of geometries to the "
"Google projection (900913)."
msgstr ""

# eeadff64bfb0472596330b3b2e868e51
#: ../../ref/contrib/gis/install.txt:1017
msgid "8.04 and lower"
msgstr ""

# 1a28e7ad963c42dab2984f6029b9dc10
#: ../../ref/contrib/gis/install.txt:1019
msgid ""
"The 8.04 (and lower) versions of Ubuntu use GEOS v2.2.3 in their binary "
"packages, which is incompatible with GeoDjango.  Thus, do *not* use the "
"binary packages for GEOS or PostGIS and build some prerequisites from "
"source, per the instructions in this document; however, it is okay to use "
"the PostgreSQL binary packages."
msgstr ""

# 124d6905391a4ee5857077ded0be53f3
#: ../../ref/contrib/gis/install.txt:1024
msgid ""
"For more details, please see the Debian instructions for :ref:`etch` below."
msgstr ""

# 69386cdcb72d4dfb8bc2a29e31285231
#: ../../ref/contrib/gis/install.txt:1029
msgid "Debian"
msgstr ""

# 55baf155f462454d9b7a8bfc4763c7b1
#: ../../ref/contrib/gis/install.txt:1034
msgid "4.0 (Etch)"
msgstr ""

# 92f66675aaad4c3290ef2097eff0208b
#: ../../ref/contrib/gis/install.txt:1036
msgid ""
"The situation here is the same as that of Ubuntu :ref:`heron` -- in other "
"words, some packages must be built from source to work properly with "
"GeoDjango."
msgstr ""

# 0e36ba6fc809497a9b08f1170ec7fef7
#: ../../ref/contrib/gis/install.txt:1040
msgid "Binary packages"
msgstr ""

# 01a6dddbd2574de2b3b9a99a1a663d0c
#: ../../ref/contrib/gis/install.txt:1041
msgid ""
"The following command will install acceptable binary packages, as well as "
"the development tools necessary to build the rest of the requirements::"
msgstr ""

# 3ea37534ee924292ad732cfcb8c5bf3d
#: ../../ref/contrib/gis/install.txt:1047
msgid "Required package information:"
msgstr ""

# e6392b930fb241b996fa2b850b0c12b7
#: ../../ref/contrib/gis/install.txt:1050
msgid "``bzip2``: for decompressing the source packages"
msgstr ""

# 9cd5faaec3ee4ca68f94770f1ed6eac3
#: ../../ref/contrib/gis/install.txt:1051
msgid ""
"``gcc``, ``g++``, ``make``: GNU developer tools used to compile the libraries"
msgstr ""

# 8c5ecba2dcee4ac5beb9ec6ca7c14025
#: ../../ref/contrib/gis/install.txt:1052
msgid "``flex``: required to build PostGIS"
msgstr ""

# 983ae16cb3f8491ab3de7d50539d6abb
#: ../../ref/contrib/gis/install.txt:1053
msgid "``postgresql-8.1``"
msgstr ""

# 302766bb3fed4a77ad02d5afb37c6132
#: ../../ref/contrib/gis/install.txt:1054
msgid "``postgresql-server-dev-8.1``: for ``pg_config``"
msgstr ""

# 683a62efc55a4327bd07095219190438
#: ../../ref/contrib/gis/install.txt:1057
msgid "Optional packages:"
msgstr ""

# 0f5236fbd69e41c1a769b1740bdd42cd
#: ../../ref/contrib/gis/install.txt:1059
msgid "``libgeoip``: for :ref:`GeoIP <ref-geoip>` support"
msgstr ""

# 8686d238b8574f39ad660ff3e016ca27
#: ../../ref/contrib/gis/install.txt:1062
msgid "Source packages"
msgstr ""

# f047210edb864f1cb3b0b62482198f8e
#: ../../ref/contrib/gis/install.txt:1063
msgid ""
"You will still have to install :ref:`geosbuild`, :ref:`proj4`, :ref:"
"`postgis`, and :ref:`gdalbuild` from source.  Please follow the directions "
"carefully."
msgstr ""

# 7e68070a51ef46e4a98dd88087c68767
#: ../../ref/contrib/gis/install.txt:1070
msgid "5.0 (Lenny)"
msgstr ""

# 95df488657aa484ca894fb35d157b6df
#: ../../ref/contrib/gis/install.txt:1072
msgid ""
"This version is comparable to Ubuntu :ref:`ibex`, so the command is very "
"similar::"
msgstr ""

# e98ddd4b865443a78ff9518fd47e74ee
#: ../../ref/contrib/gis/install.txt:1079
msgid ""
"This assumes that you are using PostgreSQL version 8.3. Else, replace "
"``8.3`` in the above command with the appropriate PostgreSQL version."
msgstr ""

# 65054036a93e401eb11d04b68d2b602f
#: ../../ref/contrib/gis/install.txt:1084
msgid ""
"Please read the note in the Ubuntu :ref:`ibex` install documentation about "
"the ``proj`` package -- it also applies here because the package does not "
"include the datum shifting files."
msgstr ""

# d0d87b8fc044493b827829a897c3c277
#: ../../ref/contrib/gis/install.txt:1091
msgid "Post-installation notes"
msgstr ""

# 157e8a2bc97a46a68f22a64118eb7214
#: ../../ref/contrib/gis/install.txt:1093
msgid ""
"If the PostgreSQL database cluster was not initiated after installing, then "
"it can be created (and started) with the following command::"
msgstr ""

# 7c8ef8fe80b146d19303139ca1f082e5
#: ../../ref/contrib/gis/install.txt:1098
msgid ""
"Afterwards, the ``/etc/init.d/postgresql-8.3`` script should be used to "
"manage the starting and stopping of PostgreSQL."
msgstr ""

# 930f306b3742445d88012c440dcee377
#: ../../ref/contrib/gis/install.txt:1101
msgid ""
"In addition, the SQL files for PostGIS are placed in a different location on "
"Debian 5.0 . Thus when :ref:`spatialdb_template` either:"
msgstr ""

# 6e8fd262d7c84d2eb6f3be494f3045c8
#: ../../ref/contrib/gis/install.txt:1104
msgid "Create a symbolic link to these files::"
msgstr ""

# 127933bd932646b3adf70b33515314a8
#: ../../ref/contrib/gis/install.txt:1109
msgid ""
"If not running PostgreSQL 8.3, then  replace ``8.3`` in the command above "
"with the correct version."
msgstr ""

# 4bb8677fd5b14ce99c693b34283c0150
#: ../../ref/contrib/gis/install.txt:1111
msgid ""
"Or use the :download:`create_template_postgis-debian.sh` to create the "
"spatial database."
msgstr ""

# 89d9794f6eb94ae8841101cb73305335
# 25274cd275844b3fafecff64c678f0f5
#: ../../ref/contrib/gis/install.txt:1116
#: ../../ref/contrib/gis/testing.txt:104
msgid "Windows"
msgstr ""

# 254389c921ac4da6bac2d44713b0d5a2
#: ../../ref/contrib/gis/install.txt:1118
msgid ""
"Proceed through the following sections sequentially in order to install "
"GeoDjango on Windows."
msgstr ""

# dfabbf1e46454be58e7a00bc3b040d49
#: ../../ref/contrib/gis/install.txt:1123
msgid ""
"These instructions assume that you are using 32-bit versions of all "
"programs.  While 64-bit versions of Python and PostgreSQL 9.0 are available, "
"64-bit versions of spatial libraries, like GEOS and GDAL, are not yet "
"provided by the :ref:`OSGeo4W` installer."
msgstr ""

# 9f051135f1cf4ac7b5172ca54dae7d8c
#: ../../ref/contrib/gis/install.txt:1131
msgid ""
"First, download the latest `Python 2.7 installer`__ from the Python Web "
"site. Next, run the installer and keep the defaults -- for example, keep "
"'Install for all users' checked and the installation path set as ``C:"
"\\Python27``."
msgstr ""

# cc0a408a81bb4dd78bf316060b177b45
#: ../../ref/contrib/gis/install.txt:1138
msgid ""
"You may already have a version of Python installed in ``C:\\python`` as ESRI "
"products sometimes install a copy there.  *You should still install a fresh "
"version of Python 2.7.*"
msgstr ""

# dd35ce48ca25465d9a60dc61dab392db
#: ../../ref/contrib/gis/install.txt:1147
msgid ""
"First, download the latest `PostgreSQL 9.0 installer`__ from the "
"`EnterpriseDB`__ Web site.  After downloading, simply run the installer, "
"follow the on-screen directions, and keep the default options unless you "
"know the consequences of changing them."
msgstr ""

# 22d0953247e64455a554826f7645cabd
#: ../../ref/contrib/gis/install.txt:1154
msgid ""
"The PostgreSQL installer creates both a new Windows user to be the 'postgres "
"service account' and a ``postgres`` database superuser You will be prompted "
"once to set the password for both accounts -- make sure to remember it!"
msgstr ""

# c06a0f2abd834644a37ff9ecfca354b2
#: ../../ref/contrib/gis/install.txt:1159
msgid ""
"When the installer completes, it will ask to launch the Application Stack "
"Builder (ASB) on exit -- keep this checked, as it is necessary to install :"
"ref:`postgisasb`."
msgstr ""

# aa1d4312f86d4f859ec27b7164ffae1c
#: ../../ref/contrib/gis/install.txt:1165
msgid ""
"If installed successfully, the PostgreSQL server will run in the background "
"each time the system as started as a Windows service. A :menuselection:"
"`PostgreSQL 9.0` start menu group will created and contains shortcuts for "
"the ASB as well as the 'SQL Shell', which will launch a ``psql`` command "
"window."
msgstr ""

# af11e33cc4494c258c4177e5d6185525
#: ../../ref/contrib/gis/install.txt:1179
msgid ""
"From within the Application Stack Builder (to run outside of the installer, :"
"menuselection:`Start --> Programs --> PostgreSQL 9.0`), select :"
"menuselection:`PostgreSQL Database Server 9.0 on port 5432` from the drop "
"down menu.  Next, expand the :menuselection:`Categories --> Spatial "
"Extensions` menu tree and select :menuselection:`PostGIS 1.5 for PostgreSQL "
"9.0`."
msgstr ""

# 0bc129a7371140ef84ead02cbee1cf26
#: ../../ref/contrib/gis/install.txt:1185
msgid ""
"After clicking next, you will be prompted to select your mirror, PostGIS "
"will be downloaded, and the PostGIS installer will begin.  Select only the "
"default options during install (e.g., do not uncheck the option to create a "
"default PostGIS database)."
msgstr ""

# 0d22e41e24a84f26a9c0e03343b246f9
#: ../../ref/contrib/gis/install.txt:1192
msgid ""
"You will be prompted to enter your ``postgres`` database superuser password "
"in the 'Database Connection Information' dialog."
msgstr ""

# 79a04e0d745d455286f79ecaf99219a8
#: ../../ref/contrib/gis/install.txt:1198
msgid ""
"The ``psycopg2`` Python module provides the interface between Python and the "
"PostgreSQL database.  Download the latest `Windows installer`__ for your "
"version of Python and PostgreSQL and run using the default settings. [#]_"
msgstr ""

# b827496584be41c8a1716ca6ddbaccf8
#: ../../ref/contrib/gis/install.txt:1207
msgid "OSGeo4W"
msgstr ""

# c3db029cb23c4afa89ab40b6c166363d
#: ../../ref/contrib/gis/install.txt:1209
msgid ""
"The `OSGeo4W installer`_ makes it simple to install the PROJ.4, GDAL, and "
"GEOS libraries required by GeoDjango.  First, download the `OSGeo4W "
"installer`_, and run it.  Select :menuselection:`Express Web-GIS Install` "
"and click next. In the 'Select Packages' list, ensure that GDAL is selected; "
"MapServer and Apache are also enabled by default, but are not required by "
"GeoDjango and may be unchecked safely.  After clicking next, the packages "
"will be automatically downloaded and installed, after which you may exit the "
"installer."
msgstr ""

# 1468a572cc22410d8e6e8a586b1107b8
#: ../../ref/contrib/gis/install.txt:1221
msgid "Modify Windows environment"
msgstr ""

# 7d7ca8a3f92342c180d767d1e043a602
#: ../../ref/contrib/gis/install.txt:1223
msgid ""
"In order to use GeoDjango, you will need to add your Python and OSGeo4W "
"directories to your Windows system ``Path``, as well as create ``GDAL_DATA`` "
"and ``PROJ_LIB`` environment variables.  The following set of commands, "
"executable with ``cmd.exe``, will set this up:"
msgstr ""

# a28c4e6f9bf24d808b14ac54ab5df526
#: ../../ref/contrib/gis/install.txt:1239
msgid ""
"For your convenience, these commands are available in the executable batch "
"script, :download:`geodjango_setup.bat`."
msgstr ""

# a35dfa2c91214cf9b571ce8ff2d304a4
#: ../../ref/contrib/gis/install.txt:1244
msgid ""
"Administrator privileges are required to execute these commands. To do this, "
"right-click on :download:`geodjango_setup.bat` and select :menuselection:"
"`Run as administrator`. You need to log out and log back in again for the "
"settings to take effect."
msgstr ""

# f5ada7cfc3d047cbbe94b9614e4af598
#: ../../ref/contrib/gis/install.txt:1251
msgid ""
"If you customized the Python or OSGeo4W installation directories, then you "
"will need to modify the ``OSGEO4W_ROOT`` and/or ``PYTHON_ROOT`` variables "
"accordingly."
msgstr ""

# c202a91fdf8345ff89a85df7e4b681dd
#: ../../ref/contrib/gis/install.txt:1256
msgid "Install Django and set up database"
msgstr ""

# ee21219687714f29bbd06cd56efc9ef7
#: ../../ref/contrib/gis/install.txt:1258
msgid ""
"Finally, :ref:`install Django <installing-official-release>` on your system. "
"You do not need to create a spatial database template, as one named "
"``template_postgis`` is created for you when installing PostGIS."
msgstr ""

# ab349c724f56485fbd8ceb4ccfcbc773
#: ../../ref/contrib/gis/install.txt:1262
msgid ""
"To administer the database, you can either use the pgAdmin III program (:"
"menuselection:`Start --> PostgreSQL 9.0 --> pgAdmin III`) or the SQL Shell (:"
"menuselection:`Start --> PostgreSQL 9.0 --> SQL Shell`). For example, to "
"create a ``geodjango`` spatial database and user, the following may be "
"executed from the SQL Shell as the ``postgres`` user::"
msgstr ""

# 03461d7af5f84122bffac1b1990498c6
#: ../../ref/contrib/gis/install.txt:1272
msgid ""
"The datum shifting files are needed for converting data to and from certain "
"projections. For example, the PROJ.4 string for the `Google projection "
"(900913) <http://spatialreference.org/ref/epsg/900913/proj4>`_ requires the "
"``null`` grid file only included in the extra datum shifting files. It is "
"easier to install the shifting files now, then to have debug a problem "
"caused by their absence later."
msgstr ""

# 27f5bd7d8289464bb9a3c9723ec57fb6
#: ../../ref/contrib/gis/install.txt:1279
msgid ""
"Specifically, GeoDjango provides support for the `OGR <http://gdal.org/"
"ogr>`_ library, a component of GDAL."
msgstr ""

# 997750221bfe4323ab37ecba5cdf7a68
#: ../../ref/contrib/gis/install.txt:1281
msgid "See `GDAL ticket #2382 <http://trac.osgeo.org/gdal/ticket/2382>`_."
msgstr ""

# 1ea95a4c984a4fd4836049565d28bc85
#: ../../ref/contrib/gis/install.txt:1282
msgid ""
"GeoDjango uses the :func:`~ctypes.util.find_library` routine from :mod:"
"`ctypes.util` to locate shared libraries."
msgstr ""

# b196f195604440e2a55f216c639decf0
#: ../../ref/contrib/gis/install.txt:1284
msgid ""
"The ``psycopg2`` Windows installers are packaged and maintained by `Jason "
"Erickson <http://www.stickpeople.com/projects/python/win-psycopg/>`_."
msgstr ""

# f30349bb69014a66980c717ef3d7c9a5
#: ../../ref/contrib/gis/layermapping.txt:5
msgid "``LayerMapping`` data import utility"
msgstr ""

# a303bdcdf5cf46ddbf4c5312f8fbc94f
#: ../../ref/contrib/gis/layermapping.txt:12
msgid ""
"The :class:`LayerMapping` class provides a way to map the contents of vector "
"spatial data files (e.g. shapefiles) into GeoDjango models."
msgstr ""

# 996a417f5a774e989518ddfd53a36692
#: ../../ref/contrib/gis/layermapping.txt:15
msgid ""
"This utility grew out of the author's personal needs to eliminate the code "
"repetition that went into pulling geometries and fields out of a vector "
"layer, converting to another coordinate system (e.g. WGS84), and then "
"inserting into a GeoDjango model."
msgstr ""

# e2f841011684403292a8cc865de3d6bc
#: ../../ref/contrib/gis/layermapping.txt:22
msgid "Use of :class:`LayerMapping` requires GDAL."
msgstr ""

# 07beeba4630d4b55a10b75ff8e12ad7f
#: ../../ref/contrib/gis/layermapping.txt:26
msgid ""
"GIS data sources, like shapefiles, may be very large.  If you find that :"
"class:`LayerMapping` is using too much memory, set :setting:`DEBUG` to "
"``False`` in your settings.  When :setting:`DEBUG` is set to ``True``, "
"Django :ref:`automatically logs <faq-see-raw-sql-queries>` *every* SQL query "
"-- thus, when SQL statements contain geometries, it is easy to consume more "
"memory than is typical."
msgstr ""

# 9abe1597a5964120ba8dd8dd141986eb
#: ../../ref/contrib/gis/layermapping.txt:36
msgid ""
"You need a GDAL-supported data source, like a shapefile (here we're using a "
"simple polygon shapefile, ``test_poly.shp``, with three features)::"
msgstr ""

# 0d88fef35beb4de1b2d734a6c1a79017
#: ../../ref/contrib/gis/layermapping.txt:55
msgid ""
"Now we define our corresponding Django model (make sure to use ``syncdb``)::"
msgstr ""

# 354042d7ea38440c86a5b5ff9d4b7486
#: ../../ref/contrib/gis/layermapping.txt:66
msgid ""
"Use :class:`LayerMapping` to extract all the features and place them in the "
"database::"
msgstr ""

# 3fd04caff6e24a78a9ae4a0177257528
#: ../../ref/contrib/gis/layermapping.txt:80
msgid ""
"Here, :class:`LayerMapping` just transformed the three geometries from the "
"shapefile in their original spatial reference system (WGS84) to the spatial "
"reference system of the GeoDjango model (NAD83).  If no spatial reference "
"system is defined for the layer, use the ``source_srs`` keyword with a :"
"class:`~django.contrib.gis.gdal.SpatialReference` object to specify one."
msgstr ""

# a4041330b8fb4256ae7ea7d2a0a0100c
#: ../../ref/contrib/gis/layermapping.txt:87
msgid "``LayerMapping`` API"
msgstr ""

# 248e332edd784036af4b0bd1f04c22bc
#: ../../ref/contrib/gis/layermapping.txt:91
msgid ""
"The following are the arguments and keywords that may be used during "
"instantiation of ``LayerMapping`` objects."
msgstr ""

# edd6f09df22f4a09a36a1f4418eaecd3
# 4d9b5e403305488b85237a7330b8944f
# cd6ea7b1f35f4bd5bee364f3869d92a2
# 1d379934df6d496d919f985b36cbf94a
# a250249cf92941a29d0eebdf4a71f595
# 18aadd47c8254c9ba43a439f792fd882
# 1154869044fd42f9b04b46d618ec2e33
# 0bb7972e243b4a96b1817fe0ee485da0
#: ../../ref/contrib/gis/layermapping.txt:95
#: ../../ref/contrib/webdesign.txt:40 ../../ref/models/fields.txt:514
#: ../../ref/signals.txt:72 ../../ref/signals.txt:289
#: ../../ref/signals.txt:315 ../../ref/templates/builtins.txt:994
#: ../../ref/templates/builtins.txt:2343
msgid "Argument"
msgstr ""

# e981fdca17344474a8a67f49000d5549
# 0b1aee5963444d23aeb8b81e83179c77
# eff59c50fe7a48e783dab9e6dbbf0dd0
#: ../../ref/contrib/gis/layermapping.txt:97 ../../ref/signals.txt:300
#: ../../ref/signals.txt:326
msgid "``model``"
msgstr ""

# 54abb8664b8441bf9f8cbaa6c59a3258
#: ../../ref/contrib/gis/layermapping.txt:97
msgid "The geographic model, *not* an instance."
msgstr ""

# fa2faaebe0ee433f855dd66198ed34a0
#: ../../ref/contrib/gis/layermapping.txt:99
msgid "``data_source``"
msgstr ""

# 54c11d8b3f284dd9b9e4dea48b8ec6f3
#: ../../ref/contrib/gis/layermapping.txt:99
msgid ""
"The path to the OGR-supported data source file (e.g., a shapefile).  Also "
"accepts :class:`django.contrib.gis.gdal.DataSource` instances."
msgstr ""

# 16c007f4fe8c41798e44e41f34a87b6c
# 182ecc23395d436f9af0ba8d749258e0
#: ../../ref/contrib/gis/layermapping.txt:103
#: ../../ref/contrib/gis/ogrinspect.txt:19
msgid "``mapping``"
msgstr ""

# 5f1759680aa441ddb357948640519dd2
#: ../../ref/contrib/gis/layermapping.txt:103
msgid ""
"A dictionary: keys are strings corresponding to the model field, and values "
"correspond to string field names for the OGR feature, or if the model field "
"is a geographic then it should correspond to the OGR geometry type, e.g., "
"``'POINT'``, ``'LINESTRING'``, ``'POLYGON'``."
msgstr ""

# 73458ee71fab49c39e27666090697ac3
#: ../../ref/contrib/gis/layermapping.txt:114
msgid "``layer``"
msgstr ""

# cfbe086f9b3f45d49777e3c6425eada6
#: ../../ref/contrib/gis/layermapping.txt:114
msgid "The index of the layer to use from the Data Source (defaults to 0)"
msgstr ""

# cb3618dba10a40319082eac463d7eb5f
#: ../../ref/contrib/gis/layermapping.txt:117
msgid "``source_srs``"
msgstr ""

# 88d86633672a4560ab6d0947cbb70c7e
#: ../../ref/contrib/gis/layermapping.txt:117
msgid ""
"Use this to specify the source SRS manually (for example, some shapefiles "
"don't come with a '.prj' file).  An integer SRID, WKT or PROJ.4 strings, "
"and :class:`django.contrib.gis.gdal.SpatialReference` objects are accepted."
msgstr ""

# 5392e902e23e4e6dbfd71b63f9d34ae4
#: ../../ref/contrib/gis/layermapping.txt:123
msgid "``encoding``"
msgstr ""

# 808d0d5ca62345e4b3deb9664fe52dc9
#: ../../ref/contrib/gis/layermapping.txt:123
msgid ""
"Specifies the character set encoding of the strings in the OGR data source.  "
"For example, ``'latin-1'``, ``'utf-8'``, and ``'cp437'`` are all valid "
"encoding parameters."
msgstr ""

# 78727055cd304900acfedb8d6dc2f6b9
#: ../../ref/contrib/gis/layermapping.txt:128
msgid "``transaction_mode``"
msgstr ""

# 10a049de91824cfb877e72f9c32eea12
#: ../../ref/contrib/gis/layermapping.txt:128
msgid "May be ``'commit_on_success'`` (default) or ``'autocommit'``."
msgstr ""

# 8abb37f0d6464bbcbdcb0bfd6217e7ac
#: ../../ref/contrib/gis/layermapping.txt:131
msgid ""
"Setting this to False will disable coordinate transformations.  In other "
"words, geometries will be inserted into the database unmodified from their "
"original state in the data source."
msgstr ""

# 501fde28e2f546cea0aad9939f339651
# 776eba72f478491c96c6d922c5af3d2b
#: ../../ref/contrib/gis/layermapping.txt:136 ../../ref/models/fields.txt:252
msgid "``unique``"
msgstr ""

# 42d3059fa9914d6d9521724a8b5875e4
#: ../../ref/contrib/gis/layermapping.txt:136
msgid ""
"Setting this to the name, or a tuple of names, from the given  model will "
"create models unique only to the given name(s). Geometries will from each "
"feature will be added into the collection associated with the unique model.  "
"Forces the transaction mode to be ``'autocommit'``."
msgstr ""

# 621527573dd346e9938e8e5d591fb952
# f6a16555100142fc8bccf1ac96d16af6
# 099807dab8604736b42904bc226d95e8
#: ../../ref/contrib/gis/layermapping.txt:143 ../../ref/signals.txt:305
#: ../../ref/signals.txt:332
msgid "``using``"
msgstr ""

# 707626cb94ac4aef82d49d0d79b77300
#: ../../ref/contrib/gis/layermapping.txt:143
msgid ""
"New in version 1.2.  Sets the database to use when importing spatial data.  "
"Default is ``'default'``"
msgstr ""

# d21aaff53e5349359cd9dc67077643a6
#: ../../ref/contrib/gis/layermapping.txt:148
msgid "``save()`` Keyword Arguments"
msgstr ""

# 14cbb88ecfa7473b802f502d7eeb0fb7
#: ../../ref/contrib/gis/layermapping.txt:152
msgid ""
"The ``save()`` method also accepts keywords.  These keywords are used for "
"controlling output logging, error handling, and for importing specific "
"feature ranges."
msgstr ""

# 7acfcad9c75f4a319c1b8d25790b8695
#: ../../ref/contrib/gis/layermapping.txt:157
msgid "Save Keyword Arguments"
msgstr ""

# fba77317d1184e98a2980b40a3e9a7b0
#: ../../ref/contrib/gis/layermapping.txt:159
msgid "``fid_range``"
msgstr ""

# 1806e91fa445437890dfb5214f53eccb
#: ../../ref/contrib/gis/layermapping.txt:159
msgid ""
"May be set with a slice or tuple of (begin, end) feature ID's to map from "
"the data source.  In other words, this keyword enables the user to "
"selectively import a subset range of features in the geographic data source."
msgstr ""

# 5ad240dfa2bf47779f7c87f2a8b9e822
#: ../../ref/contrib/gis/layermapping.txt:166
msgid "``progress``"
msgstr ""

# 29dd1b4f1b1c413e986e6452db76b752
#: ../../ref/contrib/gis/layermapping.txt:166
msgid ""
"When this keyword is set, status information will be printed giving the "
"number of features processed and successfully saved.  By default, progress "
"information will be printed every 1000 features processed, however, this "
"default may be overridden by setting this keyword with an integer for the "
"desired interval."
msgstr ""

# 991362a87ae14bb283e0177420399e2f
#: ../../ref/contrib/gis/layermapping.txt:174
msgid "``silent``"
msgstr ""

# cca7f42d560c432c9c0b331f663f2310
#: ../../ref/contrib/gis/layermapping.txt:174
msgid ""
"By default, non-fatal error notifications are printed to ``sys.stdout``, but "
"this keyword may be set to disable these notifications."
msgstr ""

# 528d3059e19b4492b6b2280084f77c1d
#: ../../ref/contrib/gis/layermapping.txt:178
msgid "``step``"
msgstr ""

# e5739b67cabe49e2875e0939abe4d937
#: ../../ref/contrib/gis/layermapping.txt:178
msgid ""
"If set with an integer, transactions will occur at every step interval. For "
"example, if ``step=1000``, a commit would occur after the 1,000th feature, "
"the 2,000th feature etc."
msgstr ""

# 1ae157807b1742648dbd2beec2a0fd2a
#: ../../ref/contrib/gis/layermapping.txt:184
msgid "``stream``"
msgstr ""

# 324f150968f14336a5d1b7fe1ca85183
#: ../../ref/contrib/gis/layermapping.txt:184
msgid ""
"Status information will be written to this file handle.  Defaults to using "
"``sys.stdout``, but any object with a ``write`` method is supported."
msgstr ""

# f0614dfb552b4e7e8edffd0303e7e90c
#: ../../ref/contrib/gis/layermapping.txt:188
msgid "``strict``"
msgstr ""

# f0bca28125e6402bbe77ff235cbc84df
#: ../../ref/contrib/gis/layermapping.txt:188
msgid ""
"Execution of the model mapping will cease upon the first error encountered.  "
"The default value (``False``) behavior is to attempt to continue."
msgstr ""

# a1008aa446d24d37883d2a79baa6ca55
#: ../../ref/contrib/gis/layermapping.txt:193
msgid "``verbose``"
msgstr ""

# fe1d8b6d3f30469d8ba05e0606fcfae2
#: ../../ref/contrib/gis/layermapping.txt:193
msgid ""
"If set, information will be printed subsequent to each model save executed "
"on the database."
msgstr ""

# bfd67c6da47e4c3da56ad3a782f77c58
#: ../../ref/contrib/gis/layermapping.txt:202
msgid "Running out of memory"
msgstr ""

# 0b2d6049a22d4792b405a42eb6f1ae46
#: ../../ref/contrib/gis/layermapping.txt:204
msgid ""
"As noted in the warning at the top of this section, Django stores all SQL "
"queries when ``DEBUG=True``.  Set ``DEBUG=False`` in your settings, and this "
"should stop excessive memory use when running ``LayerMapping`` scripts."
msgstr ""

# ecc34d588c20469dadd9f2b26660e68f
#: ../../ref/contrib/gis/layermapping.txt:209
msgid "MySQL: ``max_allowed_packet`` error"
msgstr ""

# 8001a6787d2443809e7b71935960fc78
#: ../../ref/contrib/gis/layermapping.txt:211
msgid ""
"If you encounter the following error when using ``LayerMapping`` and MySQL::"
msgstr ""

# 46aee31a740848279e8ed6f66a541931
#: ../../ref/contrib/gis/layermapping.txt:215
msgid ""
"Then the solution is to increase the value of the ``max_allowed_packet`` "
"setting in your MySQL configuration.  For example, the default value may be "
"something low like one megabyte -- the setting may be modified in MySQL's "
"configuration file (``my.cnf``) in the ``[mysqld]`` section::"
msgstr ""

# 58982d7b88c64aceb864beaabc904f27
#: ../../ref/contrib/gis/measure.txt:5
msgid "Measurement Objects"
msgstr ""

# e1ee03f05b3c4e2fbb259910a2020136
#: ../../ref/contrib/gis/measure.txt:10
msgid ""
"The :mod:`django.contrib.gis.measure` module contains objects that allow for "
"convenient representation of distance and area units of measure. [#]_ "
"Specifically, it implements two objects, :class:`Distance` and :class:`Area` "
"-- both of which may be accessed via the :class:`D` and :class:`A` "
"convenience aliases, respectively."
msgstr ""

# dc107e09a81b48418d39b34bad9ad3dc
#: ../../ref/contrib/gis/measure.txt:19
msgid ""
":class:`Distance` objects may be instantiated using a keyword argument "
"indicating the context of the units.  In the example below, two different "
"distance objects are instantiated in units of kilometers (``km``) and miles "
"(``mi``)::"
msgstr ""

# 35d40984f87d486eb8c5a5b0aff1e15d
#: ../../ref/contrib/gis/measure.txt:31
msgid ""
"Conversions are easy, just access the preferred unit attribute to get a "
"converted distance quantity::"
msgstr ""

# 161b50eb377541118c8a2980ab41f148
#: ../../ref/contrib/gis/measure.txt:39
msgid ""
"Moreover, arithmetic operations may be performed between the distance "
"objects::"
msgstr ""

# ed862b61c56a45eaa021406981189621
#: ../../ref/contrib/gis/measure.txt:47
msgid ""
"Two :class:`Distance` objects multiplied together will yield an :class:"
"`Area` object, which uses squared units of measure::"
msgstr ""

# ea9fd6b08cd24792b4d48182c67b8318
#: ../../ref/contrib/gis/measure.txt:54
msgid ""
"To determine what the attribute abbreviation of a unit is, the "
"``unit_attname`` class method may be used::"
msgstr ""

# a78c2ea99c544fad99cfe0d56ae3b6bd
#: ../../ref/contrib/gis/measure.txt:65
msgid "Supported units"
msgstr ""

# 039a482f834c4aed834f1967ce30d0ed
#: ../../ref/contrib/gis/measure.txt:68
msgid "Unit Attribute"
msgstr ""

# 46c306cf66b34e4d8acbbad067b7e18c
#: ../../ref/contrib/gis/measure.txt:68
msgid "Full name or alias(es)"
msgstr ""

# 8f9336010672436c83a425df8abac1ae
#: ../../ref/contrib/gis/measure.txt:70
msgid "``km``"
msgstr ""

# 87993debbc8b4761ad8aca124903b1f7
#: ../../ref/contrib/gis/measure.txt:70
msgid "Kilometre, Kilometer"
msgstr ""

# 095fdd47c51b4689ac51c990a3994561
#: ../../ref/contrib/gis/measure.txt:71
msgid "``mi``"
msgstr ""

# d8a5644ee4964709ad0368d6a849c5b0
#: ../../ref/contrib/gis/measure.txt:71
msgid "Mile"
msgstr ""

# f844a974de184b38ba814207c72cdaa5
#: ../../ref/contrib/gis/measure.txt:72
msgid "``m``"
msgstr ""

# f03097449b0740e08f0804b7943b4d96
#: ../../ref/contrib/gis/measure.txt:72
msgid "Meter, Metre"
msgstr ""

# fda751e5ac564d36b556f948b21542eb
#: ../../ref/contrib/gis/measure.txt:73
msgid "``yd``"
msgstr ""

# 6ac8523f64fc4648b430d77374b2149a
#: ../../ref/contrib/gis/measure.txt:73
msgid "Yard"
msgstr ""

# dc92870f754b4c5e9c3ba245493f4103
#: ../../ref/contrib/gis/measure.txt:74
msgid "``ft``"
msgstr ""

# 4d024da77ce9464ba6d78e50d34f9e60
#: ../../ref/contrib/gis/measure.txt:74
msgid "Foot, Foot (International)"
msgstr ""

# 91efe358bec74f009973b87c0540c56e
#: ../../ref/contrib/gis/measure.txt:75
msgid "``survey_ft``"
msgstr ""

# be5988a3b75548b98cd185fed0d44d59
#: ../../ref/contrib/gis/measure.txt:75
msgid "U.S. Foot, US survey foot"
msgstr ""

# f44657b3f14444c7b683ed4acec65491
#: ../../ref/contrib/gis/measure.txt:76
msgid "``inch``"
msgstr ""

# 256088cd827f4c97b80d3d11074988a2
#: ../../ref/contrib/gis/measure.txt:76
msgid "Inches"
msgstr ""

# 5e263ac20bbc492f81d6417dd84e38d3
#: ../../ref/contrib/gis/measure.txt:77
msgid "``cm``"
msgstr ""

# 122b2e65142f40269d007f637259d16b
#: ../../ref/contrib/gis/measure.txt:77
msgid "Centimeter"
msgstr ""

# f93df96e8cf74ed49535ee816ea6d87e
#: ../../ref/contrib/gis/measure.txt:78
msgid "``mm``"
msgstr ""

# 34eb53c30062420bb44a569843aa2fd0
#: ../../ref/contrib/gis/measure.txt:78
msgid "Millimetre, Millimeter"
msgstr ""

# 5f7f899221414c59a16731bc3bcc7916
#: ../../ref/contrib/gis/measure.txt:79
msgid "``um``"
msgstr ""

# b7805e1105ce486f870e01d0d62057f2
#: ../../ref/contrib/gis/measure.txt:79
msgid "Micrometer, Micrometre"
msgstr ""

# 81a96e6606a24a72ae717b34a83a8e35
#: ../../ref/contrib/gis/measure.txt:80
msgid "``british_ft``"
msgstr ""

# 252c859d50a144239e6531a7b76cb230
#: ../../ref/contrib/gis/measure.txt:80
msgid "British foot (Sears 1922)"
msgstr ""

# a9b8f589df3844aa9d19886b2a7edbc2
#: ../../ref/contrib/gis/measure.txt:81
msgid "``british_yd``"
msgstr ""

# 920861e1fd9f4c27992073d65692b556
#: ../../ref/contrib/gis/measure.txt:81
msgid "British yard (Sears 1922)"
msgstr ""

# 19adfeed1ea24c2796785dc9b5d856c8
#: ../../ref/contrib/gis/measure.txt:82
msgid "``british_chain_sears``"
msgstr ""

# c95519897c2a4df4b64dd456734284b7
#: ../../ref/contrib/gis/measure.txt:82
msgid "British chain (Sears 1922)"
msgstr ""

# a583c9d79cdf41f28a11bb7ce965f325
#: ../../ref/contrib/gis/measure.txt:83
msgid "``indian_yd``"
msgstr ""

# 6ea6dd0ce9854d12959756216400424d
#: ../../ref/contrib/gis/measure.txt:83
msgid "Indian yard, Yard (Indian)"
msgstr ""

# 1de307ac8ec9425eb90408868897e1a0
#: ../../ref/contrib/gis/measure.txt:84
msgid "``sears_yd``"
msgstr ""

# 5de10698dc8343f5b39e23492c504495
#: ../../ref/contrib/gis/measure.txt:84
msgid "Yard (Sears)"
msgstr ""

# 06f0ab64d11d43a5a7e72ac72b9e1c50
#: ../../ref/contrib/gis/measure.txt:85
msgid "``clarke_ft``"
msgstr ""

# 9f2b01f2118a4efeb48d111bffe4f4f5
#: ../../ref/contrib/gis/measure.txt:85
msgid "Clarke's Foot"
msgstr ""

# 6018a75979a84f23a46f328a05aa81b9
#: ../../ref/contrib/gis/measure.txt:86
msgid "``chain``"
msgstr ""

# 89ae1fbdc4d84e40b70a6ed24a32f1af
#: ../../ref/contrib/gis/measure.txt:86
msgid "Chain"
msgstr ""

# 0c4d8fd7e08b4b5caab1434ce5dc55c6
#: ../../ref/contrib/gis/measure.txt:87
msgid "``chain_benoit``"
msgstr ""

# e253a54d0ed3465cbbe4d6e089d0f436
#: ../../ref/contrib/gis/measure.txt:87
msgid "Chain (Benoit)"
msgstr ""

# b26b66d126a8499b9b73dd8bd80f772f
#: ../../ref/contrib/gis/measure.txt:88
msgid "``chain_sears``"
msgstr ""

# 3b3ba3e995ba452ab4af506e4fc34194
#: ../../ref/contrib/gis/measure.txt:88
msgid "Chain (Sears)"
msgstr ""

# f09f3bb5f77640f396da3453b89755e5
#: ../../ref/contrib/gis/measure.txt:89
msgid "``british_chain_benoit``"
msgstr ""

# c28eaa7d7b7148febc631fc71a8401a7
#: ../../ref/contrib/gis/measure.txt:89
msgid "British chain (Benoit 1895 B)"
msgstr ""

# 9fe8ea9e3ea047cd9853da9f469abd98
#: ../../ref/contrib/gis/measure.txt:90
msgid "``british_chain_sears_truncated``"
msgstr ""

# 7a27f8b120c342ea9bc2525ca17eb071
#: ../../ref/contrib/gis/measure.txt:90
msgid "British chain (Sears 1922 truncated)"
msgstr ""

# 48ccb9dcb023410fb2ee8deff5bf3669
#: ../../ref/contrib/gis/measure.txt:91
msgid "``gold_coast_ft``"
msgstr ""

# 7b6b0e666bc64328830293831f3edc05
#: ../../ref/contrib/gis/measure.txt:91
msgid "Gold Coast foot"
msgstr ""

# bf2305980f344a02ac18c6c01477db98
# e56949f5033f4b0e8091c889b68f64f3
# 76921c9376ad47aeb769f5e64016d685
#: ../../ref/contrib/gis/measure.txt:92 ../../ref/contrib/syndication.txt:824
#: ../../ref/contrib/syndication.txt:852
msgid "``link``"
msgstr ""

# 1ec909b055af4f21ad571a27192618f6
#: ../../ref/contrib/gis/measure.txt:92
msgid "Link"
msgstr ""

# a118b907893a4a8ebb21126a51e7d869
#: ../../ref/contrib/gis/measure.txt:93
msgid "``link_benoit``"
msgstr ""

# 970ef01a3a8c4c489f40e61a42c871c0
#: ../../ref/contrib/gis/measure.txt:93
msgid "Link (Benoit)"
msgstr ""

# dd92198a792d4592b9d7c12fa1747c55
#: ../../ref/contrib/gis/measure.txt:94
msgid "``link_sears``"
msgstr ""

# 8aeb72bf3d39470aa1d431c974eaed7c
#: ../../ref/contrib/gis/measure.txt:94
msgid "Link (Sears)"
msgstr ""

# 1edead034c4e46c8a1a08397cfb4a706
#: ../../ref/contrib/gis/measure.txt:95
msgid "``clarke_link``"
msgstr ""

# 1e376646f3d74d929d25fd7cfc462c53
#: ../../ref/contrib/gis/measure.txt:95
msgid "Clarke's link"
msgstr ""

# d083f53fa76e4288a6ecabfc9042f0b7
#: ../../ref/contrib/gis/measure.txt:96
msgid "``fathom``"
msgstr ""

# 5a91c9abefdf45beaf8cbdf92a16f5bf
#: ../../ref/contrib/gis/measure.txt:96
msgid "Fathom"
msgstr ""

# c99598b540424dc697ffa4167b1b3059
#: ../../ref/contrib/gis/measure.txt:97
msgid "``rod``"
msgstr ""

# b5ead3c0a3bf42489c746fd476b21aca
#: ../../ref/contrib/gis/measure.txt:97
msgid "Rod"
msgstr ""

# 58a4666cdf174ace866166eb53438883
#: ../../ref/contrib/gis/measure.txt:98
msgid "``nm``"
msgstr ""

# dd8542f57238470da97eb4757dc18db7
#: ../../ref/contrib/gis/measure.txt:98
msgid "Nautical Mile"
msgstr ""

# 88121de8537d40958795c6ec7db1cf28
#: ../../ref/contrib/gis/measure.txt:99
msgid "``nm_uk``"
msgstr ""

# a90d129eecff4916a01ca0d63d147595
#: ../../ref/contrib/gis/measure.txt:99
msgid "Nautical Mile (UK)"
msgstr ""

# ebf96e32d23b4b34ae1967fb7a55f104
#: ../../ref/contrib/gis/measure.txt:100
msgid "``german_m``"
msgstr ""

# 1ac68bc124724923a6274465170bab42
#: ../../ref/contrib/gis/measure.txt:100
msgid "German legal metre"
msgstr ""

# dadd0f3224ce41c8bef0e70ef08b4a0a
#: ../../ref/contrib/gis/measure.txt:105
msgid ""
":class:`Area` attributes are the same as :class:`Distance` attributes, "
"except they are prefixed with ``sq_`` (area units are square in nature). For "
"example, ``Area(sq_m=2)`` creates an :class:`Area` object representing two "
"square meters."
msgstr ""

# 4e844c30df6a4297aaca2a9353c10db4
#: ../../ref/contrib/gis/measure.txt:111
msgid "Measurement API"
msgstr ""

# 3dfdf02dc2934b21883645a5a6d64869
#: ../../ref/contrib/gis/measure.txt:114
msgid "``Distance``"
msgstr ""

# 643f56efdb0a4fc8815a1538781a45f0
#: ../../ref/contrib/gis/measure.txt:118
msgid ""
"To initialize a distance object, pass in a keyword corresponding to the "
"desired :ref:`unit attribute name <supported_units>` set with desired "
"value.  For example, the following creates a distance object representing 5 "
"miles::"
msgstr ""

# 714eb7c058d5484c867af17e0bf39c9e
#: ../../ref/contrib/gis/measure.txt:127
msgid ""
"Returns the distance value in units corresponding to the given unit "
"attribute.  For example::"
msgstr ""

# 795bfc98e5a64727809d1d86e96227c9
#: ../../ref/contrib/gis/measure.txt:135
msgid ""
"Returns the distance unit attribute name for the given full unit name. For "
"example::"
msgstr ""

# 5e60fd4ee1a8490dad394baea3e150ae
#: ../../ref/contrib/gis/measure.txt:143
msgid "Alias for :class:`Distance` class."
msgstr ""

# efaa186b1d754b70855327107111b57c
#: ../../ref/contrib/gis/measure.txt:146
msgid "``Area``"
msgstr ""

# 3a2a23ba6f9349669c83b21f05702db9
#: ../../ref/contrib/gis/measure.txt:150
msgid ""
"To initialize a distance object, pass in a keyword corresponding to the "
"desired :ref:`unit attribute name <supported_units>` set with desired "
"value.  For example, the following creates a distance object representing 5 "
"square miles::"
msgstr ""

# aefaa9fa75be4f049013eae76e93f669
#: ../../ref/contrib/gis/measure.txt:159
msgid ""
"Returns the area value in units corresponding to the given unit attribute.  "
"For example::"
msgstr ""

# 65dd04e7d1c541fb9b7ed2ff4619a11a
#: ../../ref/contrib/gis/measure.txt:167
msgid ""
"Returns the area unit attribute name for the given full unit name. For "
"example::"
msgstr ""

# 384641f8c4d8447094be0ebd7e332c9a
#: ../../ref/contrib/gis/measure.txt:175
msgid "Alias for :class:`Area` class."
msgstr ""

# f4c4dd5fa447486d83b3ca4d843f78c1
#: ../../ref/contrib/gis/measure.txt:178
msgid ""
"`Robert Coup <http://koordinates.com/>`_ is the initial author of the "
"measure objects, and was inspired by Brian Beck's work in `geopy <http://"
"code.google.com/p/geopy/>`_ and Geoff Biggs' PhD work on dimensioned units "
"for robotics."
msgstr ""

# d8b51463f1934147b1e366c4fd52e57b
#: ../../ref/contrib/gis/model-api.txt:5
msgid "GeoDjango Model API"
msgstr ""

# 090ea645203f4b59b699d6312c80494f
#: ../../ref/contrib/gis/model-api.txt:10
msgid ""
"This document explores the details of the GeoDjango Model API.  Throughout "
"this section, we'll be using the following geographic model of a `ZIP "
"code`__ as our example::"
msgstr ""

# 0ac277dd20604ac58dbeca39cfabd945
#: ../../ref/contrib/gis/model-api.txt:24
msgid "Geometry Field Types"
msgstr ""

# 5528e6fd36f84f8f8def63af3726fa59
#: ../../ref/contrib/gis/model-api.txt:26
msgid ""
"Each of the following geometry field types correspond with the OpenGIS "
"Simple Features specification [#fnogc]_."
msgstr ""

# ae1a43ccb4ca45c58de5e1086a4c2e6e
#: ../../ref/contrib/gis/model-api.txt:30
msgid "``GeometryField``"
msgstr ""

# c7de79dee2cb4a739578dc603038bad0
#: ../../ref/contrib/gis/model-api.txt:35
msgid "``PointField``"
msgstr ""

# 9227ad3b32cb4c259d24d0108ab6e12c
#: ../../ref/contrib/gis/model-api.txt:40
msgid "``LineStringField``"
msgstr ""

# 70c87486a08547f7b9beedbfd9311a11
#: ../../ref/contrib/gis/model-api.txt:45
msgid "``PolygonField``"
msgstr ""

# 845f3ab89489430593111f67315ae501
#: ../../ref/contrib/gis/model-api.txt:50
msgid "``MultiPointField``"
msgstr ""

# 4bcf3293df7e4420ad89bba7a059d6c1
#: ../../ref/contrib/gis/model-api.txt:55
msgid "``MultiLineStringField``"
msgstr ""

# 6f855ec3b86344458e62870145cb99a4
#: ../../ref/contrib/gis/model-api.txt:60
msgid "``MultiPolygonField``"
msgstr ""

# be1df1cc655c47949e3496b2df409db3
#: ../../ref/contrib/gis/model-api.txt:65
msgid "``GeometryCollectionField``"
msgstr ""

# 42150869573e40378b28275e2ab34e8d
#: ../../ref/contrib/gis/model-api.txt:72
msgid "Geometry Field Options"
msgstr ""

# fc09862e0e0f4ec4a3385020a1b73c52
#: ../../ref/contrib/gis/model-api.txt:74
msgid ""
"In addition to the regular :ref:`common-model-field-options` available for "
"Django model fields, geometry fields have the following additional options. "
"All are optional."
msgstr ""

# 13fc67aeb2c44df690aa3a4e5810d9fb
#: ../../ref/contrib/gis/model-api.txt:79
msgid "``srid``"
msgstr ""

# 32c14a1e423b43b28815c48fb991803d
#: ../../ref/contrib/gis/model-api.txt:83
msgid ""
"Sets the SRID [#fnogcsrid]_ (Spatial Reference System Identity) of the "
"geometry field to the given value. Defaults to 4326 (also known as "
"`WGS84`__, units are in degrees of longitude and latitude)."
msgstr ""

# 7359f61a826b4a7483262f8bd9351fdf
#: ../../ref/contrib/gis/model-api.txt:92
msgid "Selecting an SRID"
msgstr ""

# 83ec9357bd524f3588bdac4aba6706c3
#: ../../ref/contrib/gis/model-api.txt:94
msgid ""
"Choosing an appropriate SRID for your model is an important decision that "
"the developer should consider carefully.  The SRID is an integer specifier "
"that corresponds to the projection system that will be used to interpret the "
"data in the spatial database. [#fnsrid]_  Projection systems give the "
"context to the coordinates that specify a location.  Although the details of "
"`geodesy`__ are beyond the scope of this documentation, the general problem "
"is that the earth is spherical and representations of the earth (e.g., paper "
"maps, Web maps) are not."
msgstr ""

# 8479b95c61d64949b0df976906029de5
#: ../../ref/contrib/gis/model-api.txt:103
msgid ""
"Most people are familiar with using latitude and longitude to reference a "
"location on the earth's surface.  However, latitude and longitude are "
"angles, not distances. [#fnharvard]_  In other words, while the shortest "
"path between two points on a flat surface is a straight line, the shortest "
"path between two points on a curved surface (such as the earth) is an *arc* "
"of a `great circle`__. [#fnthematic]_  Thus, additional computation is "
"required to obtain distances in planar units (e.g., kilometers and miles).  "
"Using a geographic coordinate system may introduce complications for the "
"developer later on.  For example, PostGIS versions 1.4 and below do not have "
"the capability to perform distance calculations between non-point geometries "
"using geographic coordinate systems, e.g., constructing a query to  find all "
"points within 5 miles of a county boundary stored as WGS84. [#fndist]_"
msgstr ""

# 780c4e74e9a1498ba17c7d386d758dd0
#: ../../ref/contrib/gis/model-api.txt:116
msgid ""
"Portions of the earth's surface may projected onto a two-dimensional, or "
"Cartesian, plane.  Projected coordinate systems are especially convenient "
"for region-specific applications, e.g., if you know that your database will "
"only cover geometries in `North Kansas`__, then you may consider using "
"projection system specific to that region.  Moreover, projected coordinate "
"systems are defined in Cartesian units (such as meters or feet), easing "
"distance calculations."
msgstr ""

# b352d5c88337472291d256f2ec5178c6
#: ../../ref/contrib/gis/model-api.txt:126
msgid ""
"If you wish to peform arbitrary distance queries using non-point geometries "
"in WGS84, consider upgrading to PostGIS 1.5. For better performance, enable "
"the :attr:`GeometryField.geography` keyword so that :ref:`geography database "
"type <geography-type>` is used instead."
msgstr ""

# cd42d208ee834ab48b810714380debf6
#: ../../ref/contrib/gis/model-api.txt:132
msgid "Additional Resources:"
msgstr ""

# 7cd4274d85f443eca56e7d7543c53b12
#: ../../ref/contrib/gis/model-api.txt:134
msgid ""
"`spatialreference.org`__: A Django-powered database of spatial reference "
"systems."
msgstr ""

# 4d8c3db0f4a2448c96791c32d54aba80
#: ../../ref/contrib/gis/model-api.txt:136
msgid ""
"`The State Plane Coordinate System`__: A Web site covering the various "
"projection systems used in the United States.  Much of the U.S. spatial data "
"encountered will be in one of these coordinate systems rather than in a "
"geographic coordinate system such as WGS84."
msgstr ""

# 8989614b02d545abac80af51d4ddd29e
#: ../../ref/contrib/gis/model-api.txt:148
msgid "``spatial_index``"
msgstr ""

# 050287f02ace4243aa15baddd6260a26
#: ../../ref/contrib/gis/model-api.txt:152
msgid ""
"Defaults to ``True``.  Creates a spatial index for the given geometry field."
msgstr ""

# 9669bf1b538d40d091a443100314a548
#: ../../ref/contrib/gis/model-api.txt:157
msgid ""
"This is different from the ``db_index`` field option because spatial indexes "
"are created in a different manner than regular database indexes.  "
"Specifically, spatial indexes are typically created using a variant of the R-"
"Tree, while regular database indexes typically use B-Trees."
msgstr ""

# e812dff097924f78baa8efc2aff440a8
#: ../../ref/contrib/gis/model-api.txt:164
msgid "``dim``"
msgstr ""

# be65c5ba636b4fa6a35974cc89c5aa6e
#: ../../ref/contrib/gis/model-api.txt:170
msgid ""
"This option may be used for customizing the coordinate dimension of the "
"geometry field.  By default, it is set to 2, for representing two-"
"dimensional geometries.  For spatial backends that support it, it may be set "
"to 3 for three-dimensonal support."
msgstr ""

# 7c12cfd2f75949d0b77f08afcba76d5f
#: ../../ref/contrib/gis/model-api.txt:177
msgid ""
"At this time 3D support requires that GEOS 3.1 be installed, and is limited "
"only to the PostGIS spatial backend."
msgstr ""

# 0d7878bff66a4668a14fa645c2ec1df0
#: ../../ref/contrib/gis/model-api.txt:181
msgid "``geography``"
msgstr ""

# 4e6eec3164004af9b35512e3af24f1bf
#: ../../ref/contrib/gis/model-api.txt:187
msgid ""
"If set to ``True``, this option will create a database column of type "
"geography, rather than geometry.  Please refer to the :ref:`geography type "
"<geography-type>` section below for more details."
msgstr ""

# 62def450193e4753b5820ee225cc9e97
#: ../../ref/contrib/gis/model-api.txt:194
msgid ""
"Geography support is limited only to PostGIS 1.5+, and will force the SRID "
"to be 4326."
msgstr ""

# 915d00cd68c446c78f6b78b92d6bf3e8
#: ../../ref/contrib/gis/model-api.txt:200
msgid "Geography Type"
msgstr ""

# 259e383c1abe4cae8ff0fbcbef86ff4e
#: ../../ref/contrib/gis/model-api.txt:202
msgid ""
"In PostGIS 1.5, the geography type was introduced -- it provides native "
"support for spatial features represented with geographic coordinates (e.g., "
"WGS84 longitude/latitude). [#fngeography]_ Unlike the plane used by a "
"geometry type, the geography type uses a spherical representation of its "
"data.  Distance and measurement operations performed on a geography column "
"automatically employ great circle arc calculations and return linear units.  "
"In other words, when ``ST_Distance`` is called on two geographies, a value "
"in meters is returned (as opposed to degrees if called on a geometry column "
"in WGS84)."
msgstr ""

# 42e7a6f615aa4b5b909fba32ed27cd51
#: ../../ref/contrib/gis/model-api.txt:212
msgid ""
"Because geography calculations involve more mathematics, only a subset of "
"the PostGIS spatial lookups are available for the geography type. "
"Practically, this means that in addition to the :ref:`distance lookups "
"<distance-lookups>` only the following additional :ref:`spatial lookups "
"<spatial-lookups>` are available for geography columns:"
msgstr ""

# 4d8ed47462844cbe8c2c73bddcb93256
#: ../../ref/contrib/gis/model-api.txt:223
msgid ""
"For more information, the PostGIS documentation contains a helpful section "
"on determining `when to use geography data type over geometry data type "
"<http://postgis.refractions.net/documentation/manual-1.5/ch04."
"html#PostGIS_GeographyVSGeometry>`_."
msgstr ""

# ba92dc0d4261438583df4b20ba502f83
#: ../../ref/contrib/gis/model-api.txt:228
msgid "``GeoManager``"
msgstr ""

# 0565538d8a6045508666be44ccef9a50
#: ../../ref/contrib/gis/model-api.txt:233
msgid ""
"In order to conduct geographic queries, each geographic model requires a "
"``GeoManager`` model manager.  This manager allows for the proper SQL "
"construction for geographic queries; thus, without it, all geographic "
"filters will fail.  It should also be noted that ``GeoManager`` is required "
"even if the model does not have a geographic field itself, e.g., in the case "
"of a ``ForeignKey`` relation to a model with a geographic field.  For "
"example, if we had an ``Address`` model with a ``ForeignKey`` to our "
"``Zipcode`` model::"
msgstr ""

# 106ed341035f4396b05924ad260e5043
#: ../../ref/contrib/gis/model-api.txt:253
msgid ""
"The geographic manager is needed to do spatial queries on related "
"``Zipcode`` objects, for example::"
msgstr ""

# 1ff3e7e9696e4007b019b60df200199c
#: ../../ref/contrib/gis/model-api.txt:259
msgid ""
"OpenGIS Consortium, Inc., `Simple Feature Specification For SQL <http://www."
"opengis.org/docs/99-049.pdf>`_, Document 99-049 (May 5, 1999)."
msgstr ""

# 1086f232b4914eaf8517ab915d0eb869
#: ../../ref/contrib/gis/model-api.txt:260
msgid ""
"*See id.* at Ch. 2.3.8, p. 39 (Geometry Values and Spatial Reference "
"Systems)."
msgstr ""

# 79f803f3f22a4771b12217dadd7ae764
#: ../../ref/contrib/gis/model-api.txt:261
msgid ""
"Typically, SRID integer corresponds to an EPSG (`European Petroleum Survey "
"Group <http://www.epsg.org>`_) identifier.  However, it may also be "
"associated with custom projections defined in spatial database's spatial "
"reference systems table."
msgstr ""

# 57f6f933b2fc4b6788a06f7be3aa22eb
#: ../../ref/contrib/gis/model-api.txt:262
msgid ""
"Harvard Graduate School of Design, `An Overview of Geodesy and Geographic "
"Referencing Systems <http://www.gsd.harvard.edu/gis/manual/projections/"
"fundamentals/>`_.  This is an excellent resource for an overview of "
"principles relating to geographic and Cartesian coordinate systems."
msgstr ""

# f7c58b94b32a4d06a6bfb518a60d939e
#: ../../ref/contrib/gis/model-api.txt:263
msgid ""
"Terry A. Slocum, Robert B. McMaster, Fritz C. Kessler, & Hugh H. Howard, "
"*Thematic Cartography and Geographic Visualization* (Prentice Hall, 2nd "
"edition), at Ch. 7.1.3."
msgstr ""

# d78a0180e52d4c9c8a17fc2c2ce81162
#: ../../ref/contrib/gis/model-api.txt:264
msgid ""
"This limitation does not apply to PostGIS 1.5.  It should be noted that even "
"in previous versions of PostGIS, this isn't impossible using GeoDjango; you "
"could for example, take a known point in a projected coordinate system, "
"buffer it to the appropriate radius, and then perform an intersection "
"operation with the buffer transformed to the geographic coordinate system."
msgstr ""

# 29a2a3dbc25544ba9045deee71199834
#: ../../ref/contrib/gis/model-api.txt:265
msgid ""
"Please refer to the `PostGIS Geography Type <http://postgis.refractions.net/"
"documentation/manual-1.5/ch04.html#PostGIS_Geography>`_ documentation for "
"more details."
msgstr ""

# 164a8846816a46ea8bdaebb74dc9cfa3
#: ../../ref/contrib/gis/ogrinspect.txt:5
msgid "OGR Inspection"
msgstr ""

# e4d1856484014db99d9ea09edffc1b99
#: ../../ref/contrib/gis/ogrinspect.txt:13
msgid "``ogrinspect``"
msgstr ""

# 745e3bb2dca24f87a8585b22ed118d8f
#: ../../ref/contrib/gis/sitemaps.txt:3
msgid "Geographic Sitemaps"
msgstr ""

# b634b9253f5e4e6b9482ff4b93e12a4a
#: ../../ref/contrib/gis/sitemaps.txt:5
msgid ""
"Google's sitemap protocol has been recently extended to support geospatial "
"content. [#]_   This includes the addition of the ``<url>`` child element "
"``<geo:geo>``, which tells Google that the content located at the URL is "
"geographic in nature. [#]_"
msgstr ""

# f20273a4ebc54fec9d3b0b4de9bf7732
#: ../../ref/contrib/gis/sitemaps.txt:14
msgid "Reference"
msgstr ""

# 444ffec4fdbc41048c883365470d0d61
#: ../../ref/contrib/gis/sitemaps.txt:17
msgid "``KMLSitemap``"
msgstr ""

# 1090b88b61724deaa6d9b32824c4e198
#: ../../ref/contrib/gis/sitemaps.txt:20
msgid "``KMZSitemap``"
msgstr ""

# 1710ee5d990d4415967637f0e2137ad7
#: ../../ref/contrib/gis/sitemaps.txt:23
msgid "``GeoRSSSitemap``"
msgstr ""

# 0b5f704375f440999cf60f10f8c9ad5a
#: ../../ref/contrib/gis/sitemaps.txt:26
msgid ""
"Google, Inc., `What is a Geo Sitemap? <http://www.google.com/support/"
"webmasters/bin/answer.py?answer=94554>`_."
msgstr ""

# cfb53cac24dd429c8fb432f607389ae0
#: ../../ref/contrib/gis/sitemaps.txt:27
msgid ""
"Google, Inc., `Submit Your Geo Content to Google <http://code.google.com/"
"apis/kml/documentation/kmlSearch.html>`_."
msgstr ""

# 3338e9e443c1494ab0b3ab547432820d
#: ../../ref/contrib/gis/testing.txt:3
msgid "Testing GeoDjango apps"
msgstr ""

# f50659b5ef3742c09ce1a2513d53a983
#: ../../ref/contrib/gis/testing.txt:7
msgid ""
"In Django 1.2, the addition of :ref:`spatial-backends` simplified the "
"process of testing GeoDjango applications. The process is now the same as :"
"doc:`/topics/testing`."
msgstr ""

# 5f766a4711b34aa5aee960b74e202efb
#: ../../ref/contrib/gis/testing.txt:11
msgid ""
"Included in this documentation are some additional notes and settings for :"
"ref:`testing-postgis` and :ref:`testing-spatialite` users."
msgstr ""

# 9e369d580de842eabdf07e55ace7f3f8
#: ../../ref/contrib/gis/testing.txt:24
msgid ""
"The settings below have sensible defaults, and shouldn't require manual "
"setting."
msgstr ""

# 468b9535b6a34041976484d800c951af
#: ../../ref/contrib/gis/testing.txt:29
msgid "``POSTGIS_TEMPLATE``"
msgstr ""

# b397e164de104dca985d2377f6fe457f
#: ../../ref/contrib/gis/testing.txt:33
msgid ""
"This setting may be used to customize the name of the PostGIS template "
"database to use. In Django versions 1.2 and above, it automatically defaults "
"to ``'template_postgis'`` (the same name used in the :ref:`installation "
"documentation <spatialdb_template>`)."
msgstr ""

# 0774360027b04a87af6c079d37dac61f
#: ../../ref/contrib/gis/testing.txt:41
msgid "``POSTGIS_VERSION``"
msgstr ""

# 351257abf70a45c49c36aeb7b1b163a9
#: ../../ref/contrib/gis/testing.txt:43
msgid ""
"When GeoDjango's spatial backend initializes on PostGIS, it has to perform a "
"SQL query to determine the version in order to figure out what features are "
"available. Advanced users wishing to prevent this additional query may set "
"the version manually using a 3-tuple of integers specifying the major, "
"minor, and subminor version numbers for PostGIS. For example, to configure "
"for PostGIS 1.5.2 you would use::"
msgstr ""

# d4199d90c3e54caf94d3240f1dec0221
#: ../../ref/contrib/gis/testing.txt:53
msgid "Obtaining sufficient privileges"
msgstr ""

# 4d60215e21dd459386dea83a7af2feec
#: ../../ref/contrib/gis/testing.txt:55
msgid ""
"Depending on your configuration, this section describes several methods to "
"configure a database user with sufficient privileges to run tests for "
"GeoDjango applications on PostgreSQL. If your :ref:`spatial database "
"template <spatialdb_template>` was created like in the instructions, then "
"your testing database user only needs to have the ability to create "
"databases. In other configurations, you may be required to use a database "
"superuser."
msgstr ""

# a4c649b878714bd08db9304159c7480d
#: ../../ref/contrib/gis/testing.txt:64
msgid "Create database user"
msgstr ""

# ac38396ee8754892a5511dbd4a3387de
#: ../../ref/contrib/gis/testing.txt:66
msgid ""
"To make a database user with the ability to create databases, use the "
"following command::"
msgstr ""

# fdddaba0083b4797b78df407f05e6e11
#: ../../ref/contrib/gis/testing.txt:71
msgid ""
"The ``-R -S`` flags indicate that we do not want the user to have the "
"ability to create additional users (roles) or to be a superuser, "
"respectively."
msgstr ""

# c2239750e9184dd6bd0d2a0e499787ae
#: ../../ref/contrib/gis/testing.txt:74
msgid ""
"Alternatively, you may alter an existing user's role from the SQL shell "
"(assuming this is done from an existing superuser account)::"
msgstr ""

# fed1edabc533404691171bd75533607e
#: ../../ref/contrib/gis/testing.txt:80
msgid "Create database superuser"
msgstr ""

# f565be605c75485eb18d1da868c0cea2
#: ../../ref/contrib/gis/testing.txt:82
msgid "This may be done at the time the user is created, for example::"
msgstr ""

# 186c2373734d4ef39251406b7b1424a2
#: ../../ref/contrib/gis/testing.txt:86
msgid ""
"Or you may alter the user's role from the SQL shell (assuming this is done "
"from an existing superuser account)::"
msgstr ""

# 9031ed23dc59413682e848ce2828af59
#: ../../ref/contrib/gis/testing.txt:93
msgid "Create local PostgreSQL database"
msgstr ""

# 7a44194738c1475892d5c9fd23b37433
#: ../../ref/contrib/gis/testing.txt:95
msgid "Initialize database: ``initdb -D /path/to/user/db``"
msgstr ""

# 4fdbaaf5ec254b4a8dd5de7cee7d1d28
#: ../../ref/contrib/gis/testing.txt:97
msgid ""
"If there's already a Postgres instance on the machine, it will need to use a "
"different TCP port than 5432. Edit ``postgresql.conf`` (in ``/path/to/user/"
"db``) to change the database port (e.g. ``port = 5433``)."
msgstr ""

# 2e2cb06789804eb6a49faa5cfc51f7f7
#: ../../ref/contrib/gis/testing.txt:101
msgid "Start this database ``pg_ctl -D /path/to/user/db start``"
msgstr ""

# c32198edfacc498da0afecb76481ec52
#: ../../ref/contrib/gis/testing.txt:106
msgid ""
"On Windows platforms the pgAdmin III utility may also be used as a simple "
"way to add superuser privileges to your database user."
msgstr ""

# 6d3d92077b96444cab19a5e56ee2e9b5
#: ../../ref/contrib/gis/testing.txt:109
msgid ""
"By default, the PostGIS installer on Windows includes a template spatial "
"database entitled ``template_postgis``."
msgstr ""

# 0b0af637f5d34dcea60f65768f088d31
#: ../../ref/contrib/gis/testing.txt:117
msgid ""
"Make sure the necessary spatial tables are created in your test spatial "
"database, as described in :ref:`create_spatialite_db`. Then just do this::"
msgstr ""

# 4880edb8488b45f2ae49259fdc18b2c6
#: ../../ref/contrib/gis/testing.txt:128
msgid "``SPATIALITE_SQL``"
msgstr ""

# 3ae7296940b04de7bb0a87fa40f7b5fd
#: ../../ref/contrib/gis/testing.txt:130
msgid "Only relevant when using a SpatiaLite version older than 3.0."
msgstr ""

# 041f475fe2b34befa5573729dddb6d1e
#: ../../ref/contrib/gis/testing.txt:132
msgid ""
"By default, the GeoDjango test runner looks for the SpatiaLite SQL in the "
"same directory where it was invoked (by default the same directory where "
"``manage.py`` is located). To use a different location, add the following to "
"your settings::"
msgstr ""

# 5eb8df220fba4878ba827e1eba917594
#: ../../ref/contrib/gis/testing.txt:142
msgid "GeoDjango tests"
msgstr ""

# 7d10e43041d64a55b2507fdcefe9372e
#: ../../ref/contrib/gis/testing.txt:146
msgid ""
"GeoDjango's test suite may be run in one of two ways, either by itself or "
"with the rest of :ref:`Django's unit tests <running-unit-tests>`."
msgstr ""

# 77b62593bdf549f79e8692915f73af4d
#: ../../ref/contrib/gis/testing.txt:150
msgid "Run only GeoDjango tests"
msgstr ""

# d6ace21240db4a9a898ae2e24f35baca
#: ../../ref/contrib/gis/testing.txt:152
msgid ""
"To run *only* the tests for GeoDjango, the :setting:`TEST_RUNNER` setting "
"must be changed to use the :class:`~django.contrib.gis.tests."
"GeoDjangoTestSuiteRunner`::"
msgstr ""

# 46e585c370cc4d03b50cfab27cf564aa
#: ../../ref/contrib/gis/testing.txt:161
msgid ""
"First, you'll need a bare-bones settings file, like below, that is "
"customized with your spatial database name and user::"
msgstr ""

# a64b5ba1e7f7407d81982c95e48b9d87
#: ../../ref/contrib/gis/testing.txt:174
msgid ""
"Assuming the above is in a file called ``postgis.py`` that is in the the "
"same directory as ``manage.py`` of your Django project, then you may run the "
"tests with the following command::"
msgstr ""

# 96c96d16e8864f849a44b8f70f4d0d72
#: ../../ref/contrib/gis/testing.txt:181
msgid "Run with ``runtests.py``"
msgstr ""

# ea769f87d12b478ba5c6dbb42f17d3d0
#: ../../ref/contrib/gis/testing.txt:183
msgid ""
"To have the GeoDjango tests executed when :ref:`running the Django test "
"suite <running-unit-tests>` with ``runtests.py`` all of the databases in the "
"settings file must be using one of the :ref:`spatial database backends "
"<spatial-backends>`."
msgstr ""

# 8f0884f5961f4d1d9c6eeabcf061345d
#: ../../ref/contrib/gis/testing.txt:190
msgid ""
"Do not change the :setting:`TEST_RUNNER` setting when running the GeoDjango "
"tests with ``runtests.py``."
msgstr ""

# 9e4151ec26a7442d8618f3ccf1672b84
#: ../../ref/contrib/gis/testing.txt:196
msgid ""
"The following is an example bare-bones settings file with spatial backends "
"that can be used to run the entire Django test suite, including those in :"
"mod:`django.contrib.gis`::"
msgstr ""

# dbab5ee720a94ce7907e2a6e0260bf1d
#: ../../ref/contrib/gis/testing.txt:213
msgid ""
"Assuming the settings above were in a ``postgis.py`` file in the same "
"directory as ``runtests.py``, then all Django and GeoDjango tests would be "
"performed when executing the command::"
msgstr ""

# 2fd3117709ec4fb6a3ae10a3d324627e
#: ../../ref/contrib/gis/tutorial.txt:3
msgid "GeoDjango Tutorial"
msgstr ""

# 54d3cb66c1714b768dcfc65e80934e2b
#: ../../ref/contrib/gis/tutorial.txt:8
msgid ""
"GeoDjango is an add-on for Django that turns it into a world-class "
"geographic Web framework.  GeoDjango strives to make it as simple as "
"possible to create geographic Web applications, like location-based "
"services.  Some features include:"
msgstr ""

# ba29d09f448040cea3c2b49e3134146f
#: ../../ref/contrib/gis/tutorial.txt:13
msgid "Django model fields for `OGC`_ geometries."
msgstr ""

# 0c0e745ac8244c3f8690e6cbedabc924
#: ../../ref/contrib/gis/tutorial.txt:14
msgid ""
"Extensions to Django's ORM for the querying and manipulation of spatial data."
msgstr ""

# 6264f2f1c2a34e6bb494d2dba4e9173b
#: ../../ref/contrib/gis/tutorial.txt:15
msgid ""
"Loosely-coupled, high-level Python interfaces for GIS geometry operations "
"and data formats."
msgstr ""

# f3f6c73062bf43198847c54cffe9ede9
#: ../../ref/contrib/gis/tutorial.txt:17
msgid "Editing of geometry fields inside the admin."
msgstr ""

# c69fe2891cc941dd96490d9609f2b81c
#: ../../ref/contrib/gis/tutorial.txt:19
msgid ""
"This tutorial assumes a familiarity with Django; thus, if you're brand new "
"to Django please read through the :doc:`regular tutorial </intro/"
"tutorial01>` to introduce yourself with basic Django concepts."
msgstr ""

# c066d239c89e4608b526221f70e1cabe
#: ../../ref/contrib/gis/tutorial.txt:25
msgid ""
"GeoDjango has special prerequisites overwhat is required by Django -- please "
"consult the :ref:`installation documentation <ref-gis-install>` for more "
"details."
msgstr ""

# 817afe8992df41bc919c1e2e1954c4ae
#: ../../ref/contrib/gis/tutorial.txt:29
msgid ""
"This tutorial will guide you through the creation of a geographic Web "
"application for viewing the `world borders`_. [#]_ Some of the code used in "
"this tutorial is taken from and/or inspired by the `GeoDjango basic apps`_ "
"project. [#]_"
msgstr ""

# 6a8c3c96f8184c3795fc0c7e46488559
#: ../../ref/contrib/gis/tutorial.txt:36
msgid ""
"Proceed through the tutorial sections sequentially for step-by-step "
"instructions."
msgstr ""

# f2e59388fcee447baf6c2ff5f459c04d
#: ../../ref/contrib/gis/tutorial.txt:44
msgid "Setting Up"
msgstr ""

# 72519dae46dd48c78a5344daad3fb910
#: ../../ref/contrib/gis/tutorial.txt:47
msgid "Create a Spatial Database"
msgstr ""

# 7de714592bc848d9a578417db4ff9933
#: ../../ref/contrib/gis/tutorial.txt:51
msgid ""
"MySQL and Oracle users can skip this section because spatial types are "
"already built into the database."
msgstr ""

# 74f564a47c254bcea5c47ce1ae3a327e
#: ../../ref/contrib/gis/tutorial.txt:54
msgid ""
"First, a spatial database needs to be created for our project.  If using "
"PostgreSQL and PostGIS, then the following commands will create the database "
"from a :ref:`spatial database template <spatialdb_template>`:"
msgstr ""

# 4b43ff745c1c4acea8abc821dc3c03fa
#: ../../ref/contrib/gis/tutorial.txt:65
msgid ""
"This command must be issued by a database user that has permissions to "
"create a database.  Here is an example set of commands to create such a user:"
msgstr ""

# 97497ded60414a349e93d5f947eb04b6
#: ../../ref/contrib/gis/tutorial.txt:75
msgid ""
"Replace ``geo`` with the system login user name that will be connecting to "
"the database.  For example, ``johndoe`` if that is the system user that will "
"be running GeoDjango."
msgstr ""

# 2055a48223774f4183ea0df64772bdd7
#: ../../ref/contrib/gis/tutorial.txt:79
msgid ""
"Users of SQLite and SpatiaLite should consult the instructions on how to "
"create a :ref:`SpatiaLite database <create_spatialite_db>`."
msgstr ""

# dd7fc83028a44a94b2b4f89924e2dca9
#: ../../ref/contrib/gis/tutorial.txt:83
msgid "Create GeoDjango Project"
msgstr ""

# d62c4220cca44d67932fe6a47a4762f2
#: ../../ref/contrib/gis/tutorial.txt:85
msgid ""
"Use the ``django-admin.py`` script like normal to create a ``geodjango`` "
"project:"
msgstr ""

# db802d1275694b33a83ee5fa9fa149e6
#: ../../ref/contrib/gis/tutorial.txt:92
msgid ""
"With the project initialized, now create a ``world`` Django application "
"within the ``geodjango`` project:"
msgstr ""

# 6afccded56084ce2b6a2e56872c2dbd7
#: ../../ref/contrib/gis/tutorial.txt:101
msgid "Configure ``settings.py``"
msgstr ""

# f1f43150a24a43ec878121f5c05f1832
#: ../../ref/contrib/gis/tutorial.txt:103
msgid ""
"The ``geodjango`` project settings are stored in the ``settings.py`` file. "
"Edit the database connection settings appropriately::"
msgstr ""

# 35eb39e1a72243068e5e26d54f687ba6
#: ../../ref/contrib/gis/tutorial.txt:116
msgid "These database settings are for Django 1.2 and above."
msgstr ""

# 0c3d54fe48d54141b4a5688b280fe60f
#: ../../ref/contrib/gis/tutorial.txt:118
msgid ""
"In addition, modify the :setting:`INSTALLED_APPS` setting to include :mod:"
"`django.contrib.admin`, :mod:`django.contrib.gis`, and ``world`` (our newly "
"created application)::"
msgstr ""

# 51636326b49f4d92980ec612e884f19a
#: ../../ref/contrib/gis/tutorial.txt:133
msgid "Geographic Data"
msgstr ""

# 7c1b8079c1e04f47abf6ba01abb24334
#: ../../ref/contrib/gis/tutorial.txt:138
msgid "World Borders"
msgstr ""

# 5e84164a4e1b44b7b2933f668b27c235
#: ../../ref/contrib/gis/tutorial.txt:140
msgid ""
"The world borders data is available in this `zip file`__.  Create a data "
"directory in the ``world`` application, download the world borders data, and "
"unzip. On GNU/Linux platforms the following commands should do it:"
msgstr ""

# 21abbee7c7c04cf0842e0ed45529d7c3
#: ../../ref/contrib/gis/tutorial.txt:152
msgid ""
"The world borders ZIP file contains a set of data files collectively known "
"as an `ESRI Shapefile`__, one of the most popular geospatial data formats.  "
"When unzipped the world borders data set includes files with the following "
"extensions:"
msgstr ""

# 7f6836834d624af4b94e57d74f34cbc1
#: ../../ref/contrib/gis/tutorial.txt:157
msgid "``.shp``: Holds the vector data for the world borders geometries."
msgstr ""

# fe246c809e8b4eacaff342d1b7abcf52
#: ../../ref/contrib/gis/tutorial.txt:158
msgid "``.shx``: Spatial index file for geometries stored in the ``.shp``."
msgstr ""

# d0fe5c562edb4b94999d721a2b8580f9
#: ../../ref/contrib/gis/tutorial.txt:159
msgid ""
"``.dbf``: Database file for holding non-geometric attribute data (e.g., "
"integer and character fields)."
msgstr ""

# 10a9f37a774f4f318778b22e79e74cf9
#: ../../ref/contrib/gis/tutorial.txt:161
msgid ""
"``.prj``: Contains the spatial reference information for the geographic data "
"stored in the shapefile."
msgstr ""

# 63e74546c6dd476ab2ea5e319f54b10a
#: ../../ref/contrib/gis/tutorial.txt:168
msgid "Use ``ogrinfo`` to examine spatial data"
msgstr ""

# 103454a60e0248f4bad269d77ef0dc13
#: ../../ref/contrib/gis/tutorial.txt:170
msgid ""
"The GDAL ``ogrinfo`` utility is excellent for examining metadata about "
"shapefiles (or other vector data sources):"
msgstr ""

# 5c4d70dc2f7c4dbc918847257406847b
#: ../../ref/contrib/gis/tutorial.txt:180
msgid ""
"Here ``ogrinfo`` is telling us that the shapefile has one layer, and that "
"such layer contains polygon data.  To find out more we'll specify the layer "
"name and use the ``-so`` option to get only important summary information:"
msgstr ""

# bd49bb8cf77448eeb6e2df9412e3d8c8
#: ../../ref/contrib/gis/tutorial.txt:212
msgid ""
"This detailed summary information tells us the number of features in the "
"layer (246), the geographical extent, the spatial reference system (\"SRS WKT"
"\"), as well as detailed information for each attribute field.  For example, "
"``FIPS: String (2.0)`` indicates that there's a ``FIPS`` character field "
"with a maximum length of 2; similarly, ``LON: Real (8.3)`` is a floating-"
"point field that holds a maximum of 8 digits up to three decimal places.  "
"Although this information may be found right on the `world borders`_ Web "
"site, this shows you how to determine this information yourself when such "
"metadata is not provided."
msgstr ""

# 236244cac7bc4f1da9b149ae330f9dc3
#: ../../ref/contrib/gis/tutorial.txt:223
msgid "Geographic Models"
msgstr ""

# a2d3e215b54145acbfc801423aced635
#: ../../ref/contrib/gis/tutorial.txt:226
msgid "Defining a Geographic Model"
msgstr ""

# 6ca88b54498b4b13b70ae50498529e0d
#: ../../ref/contrib/gis/tutorial.txt:228
msgid ""
"Now that we've examined our world borders data set using ``ogrinfo``, we can "
"create a GeoDjango model to represent this data::"
msgstr ""

# ef0213d1424344608b6f0295e4017548
#: ../../ref/contrib/gis/tutorial.txt:257
msgid "Two important things to note:"
msgstr ""

# 9e6f71d815b94c279e8ad914b1e56338
#: ../../ref/contrib/gis/tutorial.txt:259
msgid "The ``models`` module is imported from :mod:`django.contrib.gis.db`."
msgstr ""

# 867a14e4b08a470f8cf454029f9c4309
#: ../../ref/contrib/gis/tutorial.txt:260
msgid ""
"The model overrides its default manager with :class:`~django.contrib.gis.db."
"models.GeoManager`; this is *required* to perform spatial queries."
msgstr ""

# e4db7d84aa3f4b34a43ca6dfefad6dee
#: ../../ref/contrib/gis/tutorial.txt:264
msgid ""
"When declaring a geometry field on your model the default spatial reference "
"system is WGS84 (meaning the `SRID`__ is 4326) -- in other words, the field "
"coordinates are in longitude/latitude pairs in units of degrees.  If you "
"want the coordinate system to be different, then SRID of the geometry field "
"may be customized by setting the ``srid`` with an integer corresponding to "
"the coordinate system of your choice."
msgstr ""

# 1ae32f8a6cc343229813a0aeac005b71
#: ../../ref/contrib/gis/tutorial.txt:274
msgid "Run ``syncdb``"
msgstr ""

# e226179be0664cf89549aaffd3e5301e
#: ../../ref/contrib/gis/tutorial.txt:276
msgid ""
"After you've defined your model, it needs to be synced with the spatial "
"database. First, let's look at the SQL that will generate the table for the "
"``WorldBorder`` model::"
msgstr ""

# eb4040583c83433bbdca064343c138ea
#: ../../ref/contrib/gis/tutorial.txt:282
msgid "This management command should produce the following output:"
msgstr ""

# c2811eac4565413ea7ba62c4b2e4939b
#: ../../ref/contrib/gis/tutorial.txt:307
msgid ""
"If satisfied, you may then create this table in the database by running the "
"``syncdb`` management command::"
msgstr ""

# 9dfeb01b70e643288027f478adeb7d7e
#: ../../ref/contrib/gis/tutorial.txt:314
msgid ""
"The ``syncdb`` command may also prompt you to create an admin user; go ahead "
"and do so (not required now, may be done at any point in the future using "
"the ``createsuperuser`` management command)."
msgstr ""

# ce21ecb193bd47caa8f2bece04d14fab
#: ../../ref/contrib/gis/tutorial.txt:319
msgid "Importing Spatial Data"
msgstr ""

# ed7b4bd981e242f882f5053fd1785931
#: ../../ref/contrib/gis/tutorial.txt:321
msgid ""
"This section will show you how to take the data from the world borders "
"shapefile and import it into GeoDjango models using the :ref:`ref-"
"layermapping`. There are many different ways to import data in to a spatial "
"database -- besides the tools included within GeoDjango, you may also use "
"the following to populate your spatial database:"
msgstr ""

# fa422c6fc11b42d3830599b078d397c4
#: ../../ref/contrib/gis/tutorial.txt:328
msgid ""
"`ogr2ogr`_: Command-line utility, included with GDAL, that supports loading "
"a multitude of vector data formats into the PostGIS, MySQL, and Oracle "
"spatial databases."
msgstr ""

# 6dad2545c4a1469ba6ecf0ea117bba6c
#: ../../ref/contrib/gis/tutorial.txt:331
msgid ""
"`shp2pgsql`_: This utility is included with PostGIS and only supports ESRI "
"shapefiles."
msgstr ""

# 57bd610d09934952aae0a533693a796e
#: ../../ref/contrib/gis/tutorial.txt:340
msgid "GDAL Interface"
msgstr ""

# ad26927171354a479ce48331df1ff5d5
#: ../../ref/contrib/gis/tutorial.txt:342
msgid ""
"Earlier we used the ``ogrinfo`` to explore the contents of the world borders "
"shapefile.  Included within GeoDjango is an interface to GDAL's powerful OGR "
"library -- in other words, you'll be able explore all the vector data "
"sources that OGR supports via a Pythonic API."
msgstr ""

# 355396c4eb1a4c8b983b1b948f9661bb
#: ../../ref/contrib/gis/tutorial.txt:347
msgid "First, invoke the Django shell:"
msgstr ""

# 59efa5e777ce4c1bb739da0eecd45216
#: ../../ref/contrib/gis/tutorial.txt:353
msgid ""
"If the :ref:`worldborders` data was downloaded like earlier in the tutorial, "
"then we can determine the path using Python's built-in ``os`` module::"
msgstr ""

# 9b277cd8a9eb4fbe993dcb1778dfbd80
#: ../../ref/contrib/gis/tutorial.txt:362
msgid ""
"Now, the world borders shapefile may be opened using GeoDjango's :class:"
"`~django.contrib.gis.gdal.DataSource` interface::"
msgstr ""

# 4f6e2afac32441d8b1f409daebbfb423
#: ../../ref/contrib/gis/tutorial.txt:370
msgid ""
"Data source objects can have different layers of geospatial features; "
"however, shapefiles are only allowed to have one layer::"
msgstr ""

# f840eb93e804483b8315742cd569576d
#: ../../ref/contrib/gis/tutorial.txt:379
msgid ""
"You can see what the geometry type of the layer is and how many features it "
"contains::"
msgstr ""

# ac3f212384034dd993c050a8e392806e
#: ../../ref/contrib/gis/tutorial.txt:389
msgid ""
"Unfortunately the shapefile data format does not allow for greater "
"specificity with regards to geometry types.  This shapefile, like many "
"others, actually includes ``MultiPolygon`` geometries in its features.  You "
"need to watch out for this when creating your models as a GeoDjango "
"``PolygonField`` will not accept a ``MultiPolygon`` type geometry -- thus a "
"``MultiPolygonField`` is used in our model's definition instead."
msgstr ""

# 70b7d7fa7cad48fab07f8f602edcf855
#: ../../ref/contrib/gis/tutorial.txt:397
msgid ""
"The :class:`~django.contrib.gis.gdal.Layer` may also have a spatial "
"reference system associated with it -- if it does, the ``srs`` attribute "
"will return a :class:`~django.contrib.gis.gdal.SpatialReference` object::"
msgstr ""

# 895a96bcc19a4577b044f0f1dea071ee
#: ../../ref/contrib/gis/tutorial.txt:411
msgid ""
"Here we've noticed that the shapefile is in the popular WGS84 spatial "
"reference system -- in other words, the data uses units of degrees longitude "
"and latitude."
msgstr ""

# 100a5eb428ae4623b6dbff9e3fb0d6cf
#: ../../ref/contrib/gis/tutorial.txt:415
msgid ""
"In addition, shapefiles also support attribute fields that may contain "
"additional data.  Here are the fields on the World Borders layer:"
msgstr ""

# 8cfdf2edd5d740c2b2d45ac1234725a7
#: ../../ref/contrib/gis/tutorial.txt:421
msgid ""
"Here we are examining the OGR types (e.g., whether a field is an integer or "
"a string) associated with each of the fields:"
msgstr ""

# fd64073719f14bb98f62124d4cc00247
#: ../../ref/contrib/gis/tutorial.txt:427
msgid ""
"You can iterate over each feature in the layer and extract information from "
"both the feature's geometry (accessed via the ``geom`` attribute) as well as "
"the feature's attribute fields (whose **values** are accessed via ``get()`` "
"method)::"
msgstr ""

# 193bd6c417a9431e9605d48abe343069
#: ../../ref/contrib/gis/tutorial.txt:440
msgid ":class:`~django.contrib.gis.gdal.Layer` objects may be sliced::"
msgstr ""

# 72a79c1fcbe9431ba0f1f751d1eaa5e9
#: ../../ref/contrib/gis/tutorial.txt:445
msgid "And individual features may be retrieved by their feature ID::"
msgstr ""

# 9a9567e303794fe1965aebb982dc61a7
#: ../../ref/contrib/gis/tutorial.txt:451
msgid ""
"Here the boundary geometry for San Marino is extracted and looking exported "
"to WKT and GeoJSON::"
msgstr ""

# ecc2948e97cf4d40be77ea7831476f24
#: ../../ref/contrib/gis/tutorial.txt:462
msgid "``LayerMapping``"
msgstr ""

# 7cfabdafa0e045729dc8de067741d3e4
#: ../../ref/contrib/gis/tutorial.txt:464
msgid ""
"We're going to dive right in -- create a file called ``load.py`` inside the "
"``world`` application, and insert the following::"
msgstr ""

# f3783f947f0540d18759629ff1cde4fc
#: ../../ref/contrib/gis/tutorial.txt:494
msgid "A few notes about what's going on:"
msgstr ""

# 6fbbed0123ad41c0941a908647972aac
#: ../../ref/contrib/gis/tutorial.txt:496
msgid ""
"Each key in the ``world_mapping`` dictionary corresponds to a field in the "
"``WorldBorder`` model, and the value is the name of the shapefile field that "
"data will be loaded from."
msgstr ""

# 791cff2bde904c089f4375d4dd5b1dc7
#: ../../ref/contrib/gis/tutorial.txt:499
msgid ""
"The key ``mpoly`` for the geometry field is ``MULTIPOLYGON``, the geometry "
"type we wish to import as.  Even if simple polygons are encountered in the "
"shapefile they will automatically be converted into collections prior to "
"insertion into the database."
msgstr ""

# 165a5f6554e54772867b13852a5d68ea
#: ../../ref/contrib/gis/tutorial.txt:503
msgid ""
"The path to the shapefile is not absolute -- in other words, if you move the "
"``world`` application (with ``data`` subdirectory) to a different location, "
"then the script will still work."
msgstr ""

# 606ff0b66ddc4f15b9bdc2dc90efe066
#: ../../ref/contrib/gis/tutorial.txt:506
msgid ""
"The ``transform`` keyword is set to ``False`` because the data in the "
"shapefile does not need to be converted -- it's already in WGS84 (SRID=4326)."
msgstr ""

# 6264358ee1d04fb5b2804a12a5b41de6
#: ../../ref/contrib/gis/tutorial.txt:508
msgid ""
"The ``encoding`` keyword is set to the character encoding of string values "
"in the shapefile. This ensures that string values are read and saved "
"correctly from their original encoding system."
msgstr ""

# 36375d3a8cdd42f6bdd9bd24d544364b
#: ../../ref/contrib/gis/tutorial.txt:512
msgid ""
"Afterwards, invoke the Django shell from the ``geodjango`` project directory:"
msgstr ""

# 4a5d3b08dab74da2a01c0cdb240340d5
#: ../../ref/contrib/gis/tutorial.txt:518
msgid ""
"Next, import the ``load`` module, call the ``run`` routine, and watch "
"``LayerMapping`` do the work::"
msgstr ""

# 1f01536cb5d440dfae8ed92540f8fb25
#: ../../ref/contrib/gis/tutorial.txt:528
msgid "Try ``ogrinspect``"
msgstr ""

# df2a00a58eae4d8d95f642989b714c85
#: ../../ref/contrib/gis/tutorial.txt:529
msgid ""
"Now that you've seen how to define geographic models and import data with "
"the :ref:`ref-layermapping`, it's possible to further automate this process "
"with use of the :djadmin:`ogrinspect` management command.  The :djadmin:"
"`ogrinspect` command  introspects a GDAL-supported vector data source (e.g., "
"a shapefile) and generates a model definition and ``LayerMapping`` "
"dictionary automatically."
msgstr ""

# d5c56643a290459997cad25bdf140d4b
#: ../../ref/contrib/gis/tutorial.txt:535
msgid "The general usage of the command goes as follows:"
msgstr ""

# 3624205659f04c80a1e2bad58579adfe
#: ../../ref/contrib/gis/tutorial.txt:541
msgid ""
"Where ``data_source`` is the path to the GDAL-supported data source and "
"``model_name`` is the name to use for the model.  Command-line options may "
"be used to further define how the model is generated."
msgstr ""

# 9392394fbacc43739be618022b4acbad
#: ../../ref/contrib/gis/tutorial.txt:545
msgid ""
"For example, the following command nearly reproduces the ``WorldBorder`` "
"model and mapping dictionary created above, automatically:"
msgstr ""

# d7887091d0304636a187d4b4456b99ab
#: ../../ref/contrib/gis/tutorial.txt:553
msgid "A few notes about the command-line options given above:"
msgstr ""

# 73b1d54188f84fe0839954618be09d4d
#: ../../ref/contrib/gis/tutorial.txt:555
msgid "The ``--srid=4326`` option sets the SRID for the geographic field."
msgstr ""

# 8170d3ab1b80466eb801101c9eb37875
#: ../../ref/contrib/gis/tutorial.txt:556
msgid ""
"The ``--mapping`` option tells ``ogrinspect`` to also generate a mapping "
"dictionary for use with :class:`~django.contrib.gis.utils.LayerMapping`."
msgstr ""

# 0194c804480340f39c4f81f9de124e2f
#: ../../ref/contrib/gis/tutorial.txt:559
msgid ""
"The ``--multi`` option is specified so that the geographic field is a :class:"
"`~django.contrib.gis.db.models.MultiPolygonField` instead of just a :class:"
"`~django.contrib.gis.db.models.PolygonField`."
msgstr ""

# 800f3ea8c2454c26bde8a0f21fc74e99
#: ../../ref/contrib/gis/tutorial.txt:563
msgid ""
"The command produces the following output, which may be copied directly into "
"the ``models.py`` of a GeoDjango application::"
msgstr ""

# 204a3e0830354da4947fb488f117eb6b
#: ../../ref/contrib/gis/tutorial.txt:601
msgid "Spatial Queries"
msgstr ""

# e016af38126545e4beb9f338e4389816
#: ../../ref/contrib/gis/tutorial.txt:605
msgid ""
"GeoDjango extends the Django ORM and allows the use of spatial lookups. "
"Let's do an example where we find the ``WorldBorder`` model that contains a "
"point.  First, fire up the management shell:"
msgstr ""

# 0d5b5eeb3bb54401917e0b26da3341d5
#: ../../ref/contrib/gis/tutorial.txt:613
msgid "Now, define a point of interest [#]_::"
msgstr ""

# 4611590e7e6844f4a146e1f23171086e
#: ../../ref/contrib/gis/tutorial.txt:617
msgid ""
"The ``pnt_wkt`` string represents the point at -95.3385 degrees longitude, "
"and 29.7245 degrees latitude.  The geometry is in a format known as Well "
"Known Text (WKT), an open standard issued by the Open Geospatial Consortium "
"(OGC). [#]_  Import the ``WorldBorder`` model, and perform a ``contains`` "
"lookup using the ``pnt_wkt`` as the parameter::"
msgstr ""

# dbae3928b6fe48c69e02fdafdd29ccc2
#: ../../ref/contrib/gis/tutorial.txt:628
msgid ""
"Here we retrieved a ``GeoQuerySet`` that has only one model: the one for the "
"United States (which is what we would expect).  Similarly, a :ref:`GEOS "
"geometry object <ref-geos>` may also be used -- here the ``intersects`` "
"spatial lookup is combined with the ``get`` method to retrieve only the "
"``WorldBorder`` instance for San Marino instead of a queryset::"
msgstr ""

# 7b7042e0f8134c7597fef15ed6baa28b
#: ../../ref/contrib/gis/tutorial.txt:640
msgid ""
"The ``contains`` and ``intersects`` lookups are just a subset of what's "
"available -- the :ref:`ref-gis-db-api` documentation has more."
msgstr ""

# dd0ee9ced78046f99970ddd54a54c974
#: ../../ref/contrib/gis/tutorial.txt:644
msgid "Automatic Spatial Transformations"
msgstr ""

# f00aa779f8f34c7f8ced51f4aab5c28c
#: ../../ref/contrib/gis/tutorial.txt:645
msgid ""
"When querying the spatial database GeoDjango automatically transforms "
"geometries if they're in a different coordinate system.  In the following "
"example, the coordinate will be expressed in terms of `EPSG SRID 32140`__, a "
"coordinate system specific to south Texas **only** and in units of "
"**meters** and not degrees::"
msgstr ""

# 6548c6dce42f4b7e9524fa1d433ed344
#: ../../ref/contrib/gis/tutorial.txt:654
msgid ""
"Note that ``pnt`` may also be constructed with EWKT, an \"extended\" form of "
"WKT that includes the SRID::"
msgstr ""

# db495827b9ce439fa3120c6b7f653636
#: ../../ref/contrib/gis/tutorial.txt:659
msgid ""
"When using GeoDjango's ORM, it will automatically wrap geometry values in "
"transformation SQL, allowing the developer to work at a higher level of "
"abstraction::"
msgstr ""

# bb0e39fdf71e4b32b7b53450babb888a
#: ../../ref/contrib/gis/tutorial.txt:677
msgid "Lazy Geometries"
msgstr ""

# 722ba62999bd47bbba2ff08eb04cf2e4
#: ../../ref/contrib/gis/tutorial.txt:678
msgid ""
"Geometries come to GeoDjango in a standardized textual representation.  Upon "
"access of the geometry field, GeoDjango creates a `GEOS geometry object <ref-"
"geos>`, exposing powerful functionality, such as serialization properties "
"for popular geospatial formats::"
msgstr ""

# fea23aa6abe141ff841dc33374d9eb98
#: ../../ref/contrib/gis/tutorial.txt:693
msgid ""
"This includes access to all of the advanced geometric operations provided by "
"the GEOS library::"
msgstr ""

# 35cffc8b3da24cc6a75dad7f1e46bba7
#: ../../ref/contrib/gis/tutorial.txt:707
msgid "Putting your data on the map"
msgstr ""

# faab96bf9eed4b34bf79570e7148c5cc
#: ../../ref/contrib/gis/tutorial.txt:710
msgid "Google"
msgstr ""

# 566fb3100d714aab87a79d99d5cc6b31
#: ../../ref/contrib/gis/tutorial.txt:713
msgid "Geographic Admin"
msgstr ""

# 337472559cfd42d98c5938c8d2a2c913
#: ../../ref/contrib/gis/tutorial.txt:715
msgid ""
"GeoDjango extends :doc:`Django's admin application </ref/contrib/admin/"
"index>` to enable support for editing geometry fields."
msgstr ""

# 828de21f737841f1ad56931bdd1f97a0
# 3be7bff1cc14492f80c5f4fec0ca0f8a
#: ../../ref/contrib/gis/tutorial.txt:719 ../../ref/templates/api.txt:16
msgid "Basics"
msgstr ""

# e75841fb873a4dee9c024510d9853474
#: ../../ref/contrib/gis/tutorial.txt:721
msgid ""
"GeoDjango also supplements the Django admin by allowing users to create and "
"modify geometries on a JavaScript slippy map (powered by `OpenLayers`_)."
msgstr ""

# a1beec443e1541bd9f532d07f078a065
#: ../../ref/contrib/gis/tutorial.txt:724
msgid ""
"Let's dive in again -- create a file called ``admin.py`` inside the "
"``world`` application, and insert the following::"
msgstr ""

# 7d2fce84789b4a238f71776625beb909
#: ../../ref/contrib/gis/tutorial.txt:732
msgid ""
"Next, edit your ``urls.py`` in the ``geodjango`` project folder to look as "
"follows::"
msgstr ""

# 550f88749a8d46c6b794142a6ec35cb8
#: ../../ref/contrib/gis/tutorial.txt:744
msgid "Start up the Django development server:"
msgstr ""

# d9a968f7fbe944779e23528d7c40f507
#: ../../ref/contrib/gis/tutorial.txt:750
msgid ""
"Finally, browse to ``http://localhost:8000/admin/``, and log in with the "
"admin user created after running ``syncdb``.  Browse to any of the "
"``WorldBorder`` entries -- the borders may be edited by clicking on a "
"polygon and dragging the vertexes to the desired position."
msgstr ""

# c524a799b6a44c358279d2553328e6ac
#: ../../ref/contrib/gis/tutorial.txt:765
msgid ""
"With the :class:`~django.contrib.gis.admin.OSMGeoAdmin`, GeoDjango uses a "
"`Open Street Map`_ layer in the admin. This provides more context (including "
"street and thoroughfare details) than available with the :class:`~django."
"contrib.gis.admin.GeoModelAdmin` (which uses the `Vector Map Level 0`_ WMS "
"data set hosted at `Metacarta`_)."
msgstr ""

# 27397ecb24f84d709c6fdf2e548de2b3
#: ../../ref/contrib/gis/tutorial.txt:771
msgid "First, there are some important requirements and limitations:"
msgstr ""

# ee68cffc8c814debb6aa851bb745e5c1
#: ../../ref/contrib/gis/tutorial.txt:773
msgid ""
":class:`~django.contrib.gis.admin.OSMGeoAdmin` requires that the :ref:"
"`spherical mercator projection be added <addgoogleprojection>` to the "
"``spatial_ref_sys`` table (PostGIS 1.3 and below, only)."
msgstr ""

# 57d94f1a0f8343f6a9eb07fd3a080b93
#: ../../ref/contrib/gis/tutorial.txt:776
msgid ""
"The PROJ.4 datum shifting files must be installed (see the :ref:`PROJ.4 "
"installation instructions <proj4>` for more details)."
msgstr ""

# 4f97fed914414f36a929691bc48c805a
#: ../../ref/contrib/gis/tutorial.txt:779
msgid ""
"If you meet these requirements, then just substitute in the ``OSMGeoAdmin`` "
"option class in your ``admin.py`` file::"
msgstr ""

# de4edf8e25a0416abd752cc6a1513dd1
#: ../../ref/contrib/gis/tutorial.txt:786
msgid ""
"Special thanks to Bjørn Sandvik of `thematicmapping.org <http://"
"thematicmapping.org>`_ for providing and maintaining this data set."
msgstr ""

# 4e6d164316554d2c84f8bb44d49450ab
#: ../../ref/contrib/gis/tutorial.txt:787
msgid ""
"GeoDjango basic apps was written by Dane Springmeyer, Josh Livni, and "
"Christopher Schmidt."
msgstr ""

# a295907b4c2f4239b8866fec7fc34198
#: ../../ref/contrib/gis/tutorial.txt:788
msgid ""
"Here the point is for the `University of Houston Law Center <http://www.law."
"uh.edu/>`_."
msgstr ""

# eb11cdeb0d264fdf8a564d11cba0bb4e
#: ../../ref/contrib/gis/tutorial.txt:789
msgid ""
"Open Geospatial Consortium, Inc., `OpenGIS Simple Feature Specification For "
"SQL <http://www.opengis.org/docs/99-049.pdf>`_, Document 99-049."
msgstr ""

# e135c129367446db8c1de46689df4b3f
#: ../../ref/contrib/gis/utils.txt:5
msgid "GeoDjango Utilities"
msgstr ""

# 4f2b376b21aa493c92d6410714dac623
#: ../../ref/contrib/gis/utils.txt:10
msgid ""
"The :mod:`django.contrib.gis.utils` module contains various utilities that "
"are useful in creating geospatial Web applications."
msgstr ""

# 7f899fabe57f4daabd8c9f9018a529f8
# 11bb716b01234a2699145114cab3cd8d
#: ../../ref/contrib/humanize.txt:3 ../../ref/templates/builtins.txt:2398
msgid "django.contrib.humanize"
msgstr ""

# 5855d2390d8343f59536e2ee3e8d6758
# 1344dd628e07440ea5f19118dc7cdc6b
#: ../../ref/contrib/humanize.txt:9 ../../ref/contrib/index.txt:122
msgid ""
"A set of Django template filters useful for adding a \"human touch\" to data."
msgstr ""

# 12826b709c784fc980acebd9dfb50a5b
#: ../../ref/contrib/humanize.txt:11
msgid ""
"To activate these filters, add ``'django.contrib.humanize'`` to your :"
"setting:`INSTALLED_APPS` setting. Once you've done that, use ``{% load "
"humanize %}`` in a template, and you'll have access to the following filters."
msgstr ""

# 7c616ffda3e84c9fafc70a0e5c9ae7d1
#: ../../ref/contrib/humanize.txt:19
msgid "apnumber"
msgstr ""

# 02c243b56a74463ca641a1f0f4bc4561
#: ../../ref/contrib/humanize.txt:21
msgid ""
"For numbers 1-9, returns the number spelled out. Otherwise, returns the "
"number. This follows Associated Press style."
msgstr ""

# 220e6f2984444b358d016089184ebc3e
# adb5e8e0b2c34521b49401b00b9ae4b9
# adc673fe3b39434895ea768c027ac027
# a0f35a1ace5d491983d6beebb59399a9
# 09b4dd6f20bd4d9a9b129cf43da4ed20
# 185c7173611948a18239d0867874e377
#: ../../ref/contrib/humanize.txt:24 ../../ref/contrib/humanize.txt:39
#: ../../ref/contrib/humanize.txt:62 ../../ref/contrib/humanize.txt:133
#: ../../ref/contrib/webdesign.txt:51 ../../ref/django-admin.txt:1146
msgid "Examples:"
msgstr ""

# 5712a960465440ca9f4537d5c40d88c9
#: ../../ref/contrib/humanize.txt:26
msgid "``1`` becomes ``one``."
msgstr ""

# 5c46f46eb5ea4cf8bce99354ff2bbc37
#: ../../ref/contrib/humanize.txt:27
msgid "``2`` becomes ``two``."
msgstr ""

# 72d1f02b20964aceae30013187089808
#: ../../ref/contrib/humanize.txt:28
msgid "``10`` becomes ``10``."
msgstr ""

# abc60c00f95e46329467eee0bab39e9f
# fccb5774d97a450ba419668ee34cc24b
# 093e4d2ae29d4f8e9de586ab0b1c85dc
# aac439bdb23b4fa19311962c5564dd10
#: ../../ref/contrib/humanize.txt:30 ../../ref/contrib/humanize.txt:52
#: ../../ref/contrib/humanize.txt:77 ../../ref/contrib/humanize.txt:139
msgid ""
"You can pass in either an integer or a string representation of an integer."
msgstr ""

# fc94144c482043cf91197e85996242de
#: ../../ref/contrib/humanize.txt:35
msgid "intcomma"
msgstr ""

# 5eab72cb0da24bd2a01c61fcb933edf9
#: ../../ref/contrib/humanize.txt:37
msgid "Converts an integer to a string containing commas every three digits."
msgstr ""

# f67bf81863c64c73bb0a1e7237a69d0a
#: ../../ref/contrib/humanize.txt:41
msgid "``4500`` becomes ``4,500``."
msgstr ""

# 8d09d69d07814ada8960aeedef668320
#: ../../ref/contrib/humanize.txt:42
msgid "``45000`` becomes ``45,000``."
msgstr ""

# 99f6ef792cd941d0a45d90d024cf2120
#: ../../ref/contrib/humanize.txt:43
msgid "``450000`` becomes ``450,000``."
msgstr ""

# 75ef6c2c7446429ca3290730ee35d6a1
#: ../../ref/contrib/humanize.txt:44
msgid "``4500000`` becomes ``4,500,000``."
msgstr ""

# 1ca78b89c52d4099bd6257c47008fac1
# fb1188fa764e494ea16a76e1f81723c6
#: ../../ref/contrib/humanize.txt:46 ../../ref/contrib/humanize.txt:70
msgid ""
":ref:`Format localization <format-localization>` will be respected if "
"enabled, e.g. with the ``'de'`` language:"
msgstr ""

# c3ae866cd9d44424a797b617ff5ff759
#: ../../ref/contrib/humanize.txt:49
msgid "``45000`` becomes ``'45.000'``."
msgstr ""

# 35fb07af44ca490e828f425e4222f7f0
#: ../../ref/contrib/humanize.txt:50
msgid "``450000`` becomes ``'450.000'``."
msgstr ""

# 771f04d4c8bd4245b452cfe4f236ddff
#: ../../ref/contrib/humanize.txt:57
msgid "intword"
msgstr ""

# bd898ee995db4db7a5470cbaa532db67
#: ../../ref/contrib/humanize.txt:59
msgid ""
"Converts a large integer to a friendly text representation. Works best for "
"numbers over 1 million."
msgstr ""

# 6a8e9a238ade44ceb3cfd799ce25ff57
#: ../../ref/contrib/humanize.txt:64
msgid "``1000000`` becomes ``1.0 million``."
msgstr ""

# 95ac964e250745978d646184de331d14
#: ../../ref/contrib/humanize.txt:65
msgid "``1200000`` becomes ``1.2 million``."
msgstr ""

# 29cdf7429a234d4bacffa305a9b2afc1
#: ../../ref/contrib/humanize.txt:66
msgid "``1200000000`` becomes ``1.2 billion``."
msgstr ""

# 8272eb82edeb49a088b59dc5f35da0ed
#: ../../ref/contrib/humanize.txt:68
msgid "Values up to 10^100 (Googol) are supported."
msgstr ""

# 237631a71277492ea753b2f864e44d74
#: ../../ref/contrib/humanize.txt:73
msgid "``1000000`` becomes ``'1,0 Million'``."
msgstr ""

# d90161f066e2494baf6e105e1863f524
#: ../../ref/contrib/humanize.txt:74
msgid "``1200000`` becomes ``'1,2 Million'``."
msgstr ""

# da27c58d0b0247f2a9013102a32066df
#: ../../ref/contrib/humanize.txt:75
msgid "``1200000000`` becomes ``'1,2 Milliarden'``."
msgstr ""

# 11df6b94645845e1a0ad0de39a2f93b8
#: ../../ref/contrib/humanize.txt:82
msgid "naturalday"
msgstr ""

# ee3bdd318a344d3fa1c6fe0289527ea0
#: ../../ref/contrib/humanize.txt:84
msgid ""
"For dates that are the current day or within one day, return \"today\", "
"\"tomorrow\" or \"yesterday\", as appropriate. Otherwise, format the date "
"using the passed in format string."
msgstr ""

# 241894ad86574c009f50121047000976
#: ../../ref/contrib/humanize.txt:88
msgid ""
"**Argument:** Date formatting string as described in the :tfilter:`date` tag."
msgstr ""

# c250d027cfc244b7810e57c3fcc94a7d
#: ../../ref/contrib/humanize.txt:90
msgid "Examples (when 'today' is 17 Feb 2007):"
msgstr ""

# a329dbb4c9534258a88c5e206ac5f79c
#: ../../ref/contrib/humanize.txt:92
msgid "``16 Feb 2007`` becomes ``yesterday``."
msgstr ""

# 44face78ee274cf28852c1001708e2f1
#: ../../ref/contrib/humanize.txt:93
msgid "``17 Feb 2007`` becomes ``today``."
msgstr ""

# 9f5ddbd6e1044e8690f71d716c8ca202
#: ../../ref/contrib/humanize.txt:94
msgid "``18 Feb 2007`` becomes ``tomorrow``."
msgstr ""

# e1ee33186ab24796a96a287f748a6a35
#: ../../ref/contrib/humanize.txt:95
msgid ""
"Any other day is formatted according to given argument or the :setting:"
"`DATE_FORMAT` setting if no argument is given."
msgstr ""

# 621008b570574684b410412f7e127183
#: ../../ref/contrib/humanize.txt:101
msgid "naturaltime"
msgstr ""

# 06d50c128f314bf688fc25c193b72e97
#: ../../ref/contrib/humanize.txt:105
msgid ""
"For datetime values, returns a string representing how many seconds, minutes "
"or hours ago it was -- falling back to a longer date format if the value is "
"more than a day old. In case the datetime value is in the future the return "
"value will automatically use an appropriate phrase."
msgstr ""

# 5906c0bb8bfb4736b0632c3803e48aee
#: ../../ref/contrib/humanize.txt:110
msgid "Examples (when 'now' is 17 Feb 2007 16:30:00):"
msgstr ""

# 0e36012fcefb4920b5c632e95b18c617
#: ../../ref/contrib/humanize.txt:112
msgid "``17 Feb 2007 16:30:00`` becomes ``now``."
msgstr ""

# e17dbb68d76a436ca3a90ebf891e1fc4
#: ../../ref/contrib/humanize.txt:113
msgid "``17 Feb 2007 16:29:31`` becomes ``29 seconds ago``."
msgstr ""

# 2a023f15057c48888109965de82fc7a5
#: ../../ref/contrib/humanize.txt:114
msgid "``17 Feb 2007 16:29:00`` becomes ``a minute ago``."
msgstr ""

# b124ac1d919b49be8d8ee4f441ba098e
#: ../../ref/contrib/humanize.txt:115
msgid "``17 Feb 2007 16:25:35`` becomes ``4 minutes ago``."
msgstr ""

# 7a626d0c05e84c24b534552e4b20549f
#: ../../ref/contrib/humanize.txt:116
msgid "``17 Feb 2007 15:30:29`` becomes ``an hour ago``."
msgstr ""

# d42442dde01545258bd452d92503448c
#: ../../ref/contrib/humanize.txt:117
msgid "``17 Feb 2007 13:31:29`` becomes ``2 hours ago``."
msgstr ""

# 31e1c51fa7bc4ed7b458d421d4900eef
#: ../../ref/contrib/humanize.txt:118
msgid "``16 Feb 2007 13:31:29`` becomes ``1 day ago``."
msgstr ""

# b0103d0f24594f70ad06c1492ea60971
#: ../../ref/contrib/humanize.txt:119
msgid "``17 Feb 2007 16:30:30`` becomes ``29 seconds from now``."
msgstr ""

# 7a7966813e2f4c7c91940e0bf8eb9949
#: ../../ref/contrib/humanize.txt:120
msgid "``17 Feb 2007 16:31:00`` becomes ``a minute from now``."
msgstr ""

# 03eb7339f3f84e168ced433be67a48ac
#: ../../ref/contrib/humanize.txt:121
msgid "``17 Feb 2007 16:34:35`` becomes ``4 minutes from now``."
msgstr ""

# ed3fe841f57c46d9bc10993596469852
#: ../../ref/contrib/humanize.txt:122
msgid "``17 Feb 2007 16:30:29`` becomes ``an hour from now``."
msgstr ""

# 8268264e5633411899d38bb9739f0b20
#: ../../ref/contrib/humanize.txt:123
msgid "``17 Feb 2007 18:31:29`` becomes ``2 hours from now``."
msgstr ""

# af3a1ae3a55546d0a5844c2ff8732eed
#: ../../ref/contrib/humanize.txt:124
msgid "``18 Feb 2007 16:31:29`` becomes ``1 day from now``."
msgstr ""

# b976a67e71ab48019dd1361aa5b315a5
#: ../../ref/contrib/humanize.txt:129
msgid "ordinal"
msgstr ""

# 320955e21c7344318d885a588763f77d
#: ../../ref/contrib/humanize.txt:131
msgid "Converts an integer to its ordinal as a string."
msgstr ""

# 5cb8f2f09d3c46078df9052eee03cb8c
#: ../../ref/contrib/humanize.txt:135
msgid "``1`` becomes ``1st``."
msgstr ""

# 421ba3912cef499fa89a9cbd425ee0ec
#: ../../ref/contrib/humanize.txt:136
msgid "``2`` becomes ``2nd``."
msgstr ""

# ddfcd9ca92964b48a917c4a73cd7e402
#: ../../ref/contrib/humanize.txt:137
msgid "``3`` becomes ``3rd``."
msgstr ""

# 818061bf4aa94cccb0b8c54350be4c88
#: ../../ref/contrib/index.txt:3
msgid "``contrib`` packages"
msgstr ""

# 6c37f18d86a246978798a1e30d586681
#: ../../ref/contrib/index.txt:5
msgid ""
"Django aims to follow Python's `\"batteries included\" philosophy`_. It "
"ships with a variety of extra, optional tools that solve common Web-"
"development problems."
msgstr ""

# bb3ccdc014794816be56bf7cddaaec5a
#: ../../ref/contrib/index.txt:9
msgid ""
"This code lives in ``django/contrib`` in the Django distribution. This "
"document gives a rundown of the packages in ``contrib``, along with any "
"dependencies those packages have."
msgstr ""

# 8275414533fa4cb7a707a760a65dfdda
#: ../../ref/contrib/index.txt:15
msgid ""
"For most of these add-ons -- specifically, the add-ons that include either "
"models or template tags -- you'll need to add the package name (e.g., "
"``'django.contrib.admin'``) to your :setting:`INSTALLED_APPS` setting and re-"
"run ``manage.py syncdb``."
msgstr ""

# ac67215cc50347af8b99f1c8e1a4f36a
#: ../../ref/contrib/index.txt:46
msgid "admin"
msgstr ""

# b4f7bd18693e4e44961a77e6b85572bc
#: ../../ref/contrib/index.txt:48
msgid ""
"The automatic Django administrative interface. For more information, see :"
"doc:`Tutorial 2 </intro/tutorial02>` and the :doc:`admin documentation </ref/"
"contrib/admin/index>`."
msgstr ""

# 97c4f9ce454e4b83a9af8e92c0f8b662
#: ../../ref/contrib/index.txt:52
msgid "Requires the auth_ and contenttypes_ contrib packages to be installed."
msgstr ""

# 29aeb9f9cc7c487d93c15806a76e46ed
#: ../../ref/contrib/index.txt:55
msgid "auth"
msgstr ""

# 7bcfc011efa24fca8ab77ba9bedccc31
#: ../../ref/contrib/index.txt:57
msgid "Django's authentication framework."
msgstr ""

# 27cd3141b50f41269e8024e8efd38794
#: ../../ref/contrib/index.txt:62
msgid "comments"
msgstr ""

# 98c88f7813954bf0a64b16e57362c542
#: ../../ref/contrib/index.txt:64
msgid ""
"A simple yet flexible comments system. See :doc:`/ref/contrib/comments/"
"index`."
msgstr ""

# 3f585943b4ab4f5f9ce2bf71a5ee6e94
#: ../../ref/contrib/index.txt:67
msgid "contenttypes"
msgstr ""

# 61ffd370286e4311b046dd4234f576f4
#: ../../ref/contrib/index.txt:69
msgid ""
"A light framework for hooking into \"types\" of content, where each "
"installed Django model is a separate content type."
msgstr ""

# 738f99df8f9c42879d748f4cf8408d41
#: ../../ref/contrib/index.txt:72
msgid "See the :doc:`contenttypes documentation </ref/contrib/contenttypes>`."
msgstr ""

# a20b802c8a064335bf57d7a58efd28e5
#: ../../ref/contrib/index.txt:75
msgid "csrf"
msgstr ""

# 3f07536370ef49a49355d4ed166d51b5
#: ../../ref/contrib/index.txt:77
msgid "A middleware for preventing Cross Site Request Forgeries"
msgstr ""

# 48c1a7483ebd4b45b6b597c3c06091c9
#: ../../ref/contrib/index.txt:79
msgid "See the :doc:`csrf documentation </ref/contrib/csrf>`."
msgstr ""

# 08702bfed5a34cffb71366ba75c246ba
#: ../../ref/contrib/index.txt:82
msgid "flatpages"
msgstr ""

# c75c3de1cb214b8caab6942e49d305f7
#: ../../ref/contrib/index.txt:84
msgid "A framework for managing simple \"flat\" HTML content in a database."
msgstr ""

# bd83b92b606c4041935778bff4274adb
#: ../../ref/contrib/index.txt:86
msgid "See the :doc:`flatpages documentation </ref/contrib/flatpages>`."
msgstr ""

# 7dafb85d09b5455ebfd900fbb06dec34
#: ../../ref/contrib/index.txt:88
msgid "Requires the sites_ contrib package to be installed as well."
msgstr ""

# f17c84352361443ab3016a2a9be270ae
#: ../../ref/contrib/index.txt:91
msgid "formtools"
msgstr ""

# 2fbfdd04b582449b98c832542716064a
#: ../../ref/contrib/index.txt:93
msgid "A set of high-level abstractions for Django forms (django.forms)."
msgstr ""

# a7ff0eb11b114eab8fb91a9bca18017b
#: ../../ref/contrib/index.txt:96
msgid "django.contrib.formtools.preview"
msgstr ""

# 32eb6a3b9bb5444bab1248b0911fe065
#: ../../ref/contrib/index.txt:98
msgid "An abstraction of the following workflow:"
msgstr ""

# c9caee730a5c4ecb816ae4e48623da89
#: ../../ref/contrib/index.txt:102
msgid ""
"See the :doc:`form preview documentation </ref/contrib/formtools/form-"
"preview>`."
msgstr ""

# af805bdcc6694b238e00a3a921fc038f
#: ../../ref/contrib/index.txt:105
msgid "django.contrib.formtools.wizard"
msgstr ""

# 359524ab923b466b9c3caa23156b2d66
#: ../../ref/contrib/index.txt:107
msgid "Splits forms across multiple Web pages."
msgstr ""

# c997c018485d4a61af014e68b3ebcf7b
#: ../../ref/contrib/index.txt:109
msgid ""
"See the :doc:`form wizard documentation </ref/contrib/formtools/form-"
"wizard>`."
msgstr ""

# bfcd551593894cffa5d0d1c54de11369
#: ../../ref/contrib/index.txt:112
msgid "gis"
msgstr ""

# 61c6bcf3075745ae824ad94fedab8033
#: ../../ref/contrib/index.txt:114
msgid ""
"A world-class geospatial framework built on top of Django, that enables "
"storage, manipulation and display of spatial data."
msgstr ""

# fa05d167eb3b44988cf1eb4e13f1d0ec
#: ../../ref/contrib/index.txt:117
msgid "See the :doc:`/ref/contrib/gis/index` documentation for more."
msgstr ""

# 24f7a54807f845e0ad8472a90dcad4b1
#: ../../ref/contrib/index.txt:120
msgid "humanize"
msgstr ""

# fe0652546517429ea56b05015bd9eb54
#: ../../ref/contrib/index.txt:124
msgid "See the :doc:`humanize documentation </ref/contrib/humanize>`."
msgstr ""

# f45ea8c8a93c4cd49f50824d12b22648
#: ../../ref/contrib/index.txt:127
msgid "localflavor"
msgstr ""

# 718c7ca45f404e2e8b3cde959b6ff94f
#: ../../ref/contrib/index.txt:129
msgid ""
"A collection of various Django snippets that are useful only for a "
"particular country or culture. For example, ``django.contrib.localflavor.us."
"forms`` contains a ``USZipCodeField`` that you can use to validate U.S. zip "
"codes."
msgstr ""

# ffc7d5971a6347bea09826aae46f5e2d
#: ../../ref/contrib/index.txt:133
msgid "See the :doc:`localflavor documentation </ref/contrib/localflavor>`."
msgstr ""

# 224b6bee453e4e9daebbbf1aca6a8ab2
#: ../../ref/contrib/index.txt:136
msgid "markup"
msgstr ""

# 489595e1216848e0aa5bede7947f9317
#: ../../ref/contrib/index.txt:138
msgid "A collection of template filters that implement common markup languages"
msgstr ""

# 5938be6d1f1844d0bb1a3b9cf93e4de0
# a01cb356d0d14460b96aa3dbc35ac66d
#: ../../ref/contrib/index.txt:140 ../../ref/templates/builtins.txt:2412
msgid "See the :doc:`markup documentation </ref/contrib/markup>`."
msgstr ""

# a99fc0cbeb694cd0a80007f955f3e985
#: ../../ref/contrib/index.txt:143
msgid "messages"
msgstr ""

# 13dde2a250c544e693cc389bc5100fb0
#: ../../ref/contrib/index.txt:148
msgid ""
"A framework for storing and retrieving temporary cookie- or session-based "
"messages"
msgstr ""

# e858c19d7cf540dea125ec6c24fd2b53
#: ../../ref/contrib/index.txt:151
msgid "See the :doc:`messages documentation </ref/contrib/messages>`."
msgstr ""

# db2b8cb8b26d46939a1e39885db960e8
#: ../../ref/contrib/index.txt:154
msgid "redirects"
msgstr ""

# f9828f0b14e146439fdd4ea48975bc12
#: ../../ref/contrib/index.txt:156
msgid "A framework for managing redirects."
msgstr ""

# 596e0b9cc0334916bb8436ed61753e86
#: ../../ref/contrib/index.txt:158
msgid "See the :doc:`redirects documentation </ref/contrib/redirects>`."
msgstr ""

# 2562418a301c4e5d81aa876a771df382
#: ../../ref/contrib/index.txt:161
msgid "sessions"
msgstr ""

# f4e6234c181046549a3bb905fe90c651
#: ../../ref/contrib/index.txt:163
msgid "A framework for storing data in anonymous sessions."
msgstr ""

# 7dcc7c2086174356a2f0ac4b0c09b81c
#: ../../ref/contrib/index.txt:165
msgid "See the :doc:`sessions documentation </topics/http/sessions>`."
msgstr ""

# a5944537ff0a459f95c431b2c2045988
#: ../../ref/contrib/index.txt:168
msgid "sites"
msgstr ""

# b5d002326c63470490f493a864c94f82
#: ../../ref/contrib/index.txt:170
msgid ""
"A light framework that lets you operate multiple Web sites off of the same "
"database and Django installation. It gives you hooks for associating objects "
"to one or more sites."
msgstr ""

# c0f8b340239d4e13aa5e676dbb0422c0
#: ../../ref/contrib/index.txt:174
msgid "See the :doc:`sites documentation </ref/contrib/sites>`."
msgstr ""

# 29439eb236dc453bbdf2db7eb33858df
#: ../../ref/contrib/index.txt:177
msgid "sitemaps"
msgstr ""

# e60dc1b2d12e4a74b22e72404083aa9b
#: ../../ref/contrib/index.txt:179
msgid "A framework for generating Google sitemap XML files."
msgstr ""

# 68ce2e168b6f4351b596c22be2d8bb80
#: ../../ref/contrib/index.txt:181
msgid "See the :doc:`sitemaps documentation </ref/contrib/sitemaps>`."
msgstr ""

# 84808447aa3a4faabecb776cd61e6016
#: ../../ref/contrib/index.txt:184
msgid "syndication"
msgstr ""

# 50ef3ecd9a0e48af90ec37f97013f3ce
#: ../../ref/contrib/index.txt:186
msgid ""
"A framework for generating syndication feeds, in RSS and Atom, quite easily."
msgstr ""

# 19c55eea7a09428a81f1c221ebc8127e
#: ../../ref/contrib/index.txt:188
msgid "See the :doc:`syndication documentation </ref/contrib/syndication>`."
msgstr ""

# 27bf854dcaa34e588ac238aeb6645e7a
#: ../../ref/contrib/index.txt:191
msgid "webdesign"
msgstr ""

# d25c8117c822418db12a93ce9c2fc289
#: ../../ref/contrib/index.txt:193
msgid ""
"Helpers and utilities targeted primarily at Web *designers* rather than Web "
"*developers*."
msgstr ""

# 3782dc85c883453fb0585b75b4f52e35
#: ../../ref/contrib/index.txt:196
msgid ""
"See the :doc:`Web design helpers documentation </ref/contrib/webdesign>`."
msgstr ""

# bc13519f955b46e5aded680854362081
#: ../../ref/contrib/index.txt:199
msgid "Other add-ons"
msgstr ""

# 804e9195837242aaa1b69220e9730ac8
#: ../../ref/contrib/index.txt:201
msgid ""
"If you have an idea for functionality to include in ``contrib``, let us "
"know! Code it up, and post it to the `django-users mailing list`_."
msgstr ""

# 772813b42bb54e6db30a717e5a5b63c1
#: ../../ref/contrib/localflavor.txt:3
msgid "The \"local flavor\" add-ons"
msgstr ""

# e9775afff6d34b3c8e1df253a0814ed8
#: ../../ref/contrib/localflavor.txt:9
msgid ""
"Following its \"batteries included\" philosophy, Django comes with assorted "
"pieces of code that are useful for particular countries or cultures. These "
"are called the \"local flavor\" add-ons and live in the :mod:`django.contrib."
"localflavor` package."
msgstr ""

# 98049f20bfc54faab5856bcaf4647732
#: ../../ref/contrib/localflavor.txt:14
msgid ""
"Inside that package, country- or culture-specific code is organized into "
"subpackages, named using `ISO 3166 country codes`_."
msgstr ""

# 983d52f03a4543f0b91745fddefbafe4
#: ../../ref/contrib/localflavor.txt:17
msgid ""
"Most of the ``localflavor`` add-ons are localized form components deriving "
"from the :doc:`forms </topics/forms/index>` framework -- for example, a :"
"class:`~django.contrib.localflavor.us.forms.USStateField` that knows how to "
"validate U.S. state abbreviations, and a :class:`~django.contrib.localflavor."
"fi.forms.FISocialSecurityNumber` that knows how to validate Finnish social "
"security numbers."
msgstr ""

# 599576e5c7e14485bb72bf51701bad0a
#: ../../ref/contrib/localflavor.txt:24
msgid ""
"To use one of these localized components, just import the relevant "
"subpackage. For example, here's how you can create a form with a field "
"representing a French telephone number::"
msgstr ""

# 14971b3a23434c9b9976fe221feb8f25
#: ../../ref/contrib/localflavor.txt:35
msgid "Supported countries"
msgstr ""

# 4254469fb3744afaad60d83ee29a9ce9
#: ../../ref/contrib/localflavor.txt:37
msgid ""
"Countries currently supported by :mod:`~django.contrib.localflavor` are:"
msgstr ""

# fbc2fa046d5c4306b720e822a876c15a
#: ../../ref/contrib/localflavor.txt:39
msgid "Argentina_"
msgstr ""

# d732a80b023a44ab83fa12c2e6ee5acd
#: ../../ref/contrib/localflavor.txt:40
msgid "Australia_"
msgstr ""

# ddb3767eedc44a2d8ffb826f6696ea85
#: ../../ref/contrib/localflavor.txt:41
msgid "Austria_"
msgstr ""

# d7d8c60ecc884942afb11994a4b37f59
#: ../../ref/contrib/localflavor.txt:42
msgid "Belgium_"
msgstr ""

# cc78f310b073465dac5901dab9ce7413
#: ../../ref/contrib/localflavor.txt:43
msgid "Brazil_"
msgstr ""

# 5db1b68c26244d5eb6de209baf149c3a
#: ../../ref/contrib/localflavor.txt:44
msgid "Canada_"
msgstr ""

# 0368d5395cb74a01ba8b4c9625560edc
#: ../../ref/contrib/localflavor.txt:45
msgid "Chile_"
msgstr ""

# 76987cd66f9e4c7e96b7469fbe557ac6
#: ../../ref/contrib/localflavor.txt:46
msgid "China_"
msgstr ""

# c08a8b3d56604a8b861a5b648ed6aa39
#: ../../ref/contrib/localflavor.txt:47
msgid "Colombia_"
msgstr ""

# 73ceca027a2e4192b5d916e168c37c85
#: ../../ref/contrib/localflavor.txt:48
msgid "Croatia_"
msgstr ""

# 25493be5769949d1b803733f15b24b1d
#: ../../ref/contrib/localflavor.txt:49
msgid "Czech_"
msgstr ""

# 375b2dd19a9f46f992668cd4f78fc49c
#: ../../ref/contrib/localflavor.txt:50
msgid "Ecuador_"
msgstr ""

# e3c5b3e5fe1f468f8adbbb95b40a6cd7
#: ../../ref/contrib/localflavor.txt:51
msgid "Finland_"
msgstr ""

# 7506ade0f0754c0e80ff4504cc227107
#: ../../ref/contrib/localflavor.txt:52
msgid "France_"
msgstr ""

# ca6094d6d3a64be08ad59de541c725e8
#: ../../ref/contrib/localflavor.txt:53
msgid "Germany_"
msgstr ""

# ae3bef8641da4506ac44322135d203fa
#: ../../ref/contrib/localflavor.txt:54
msgid "Iceland_"
msgstr ""

# e4a61c8f973242c3b88c7b9aed470c81
#: ../../ref/contrib/localflavor.txt:55
msgid "India_"
msgstr ""

# 75e7f7b163a2453d90017b73d6db129c
#: ../../ref/contrib/localflavor.txt:56
msgid "Indonesia_"
msgstr ""

# b5328eb279a8438a9ca768d605f0f431
#: ../../ref/contrib/localflavor.txt:57
msgid "Ireland_"
msgstr ""

# e114a4ee37c5495680478a0cf0f3ed56
#: ../../ref/contrib/localflavor.txt:58
msgid "Israel_"
msgstr ""

# 62a2bca012cc4c52991dcaaaf928f00c
#: ../../ref/contrib/localflavor.txt:59
msgid "Italy_"
msgstr ""

# 96ca791a74d04c1698e737372e59bc32
#: ../../ref/contrib/localflavor.txt:60
msgid "Japan_"
msgstr ""

# 87a6c861d3e54f8c98923df54b83600a
#: ../../ref/contrib/localflavor.txt:61
msgid "Kuwait_"
msgstr ""

# d72d2f7e7f13420eae370f2ebdec144b
#: ../../ref/contrib/localflavor.txt:62
msgid "Macedonia_"
msgstr ""

# f3264a4f63a6474e8465d84de64f8eab
#: ../../ref/contrib/localflavor.txt:63
msgid "Mexico_"
msgstr ""

# 706273e9960e4e839512685b810ba8b9
#: ../../ref/contrib/localflavor.txt:64
msgid "`The Netherlands`_"
msgstr ""

# dfef471eb9034d1b92e8b36c1af19471
#: ../../ref/contrib/localflavor.txt:65
msgid "Norway_"
msgstr ""

# 7f2aaf8908f1456ab3c8530dd7cec991
#: ../../ref/contrib/localflavor.txt:66
msgid "Peru_"
msgstr ""

# 79b6923d0e4941dcb470fcf15b2d26d2
#: ../../ref/contrib/localflavor.txt:67
msgid "Poland_"
msgstr ""

# d24c3233f8ae4313bfde7ddab90198a2
#: ../../ref/contrib/localflavor.txt:68
msgid "Portugal_"
msgstr ""

# 691ece1504ee40f99cf6fb30ed5eed8d
#: ../../ref/contrib/localflavor.txt:69
msgid "Paraguay_"
msgstr ""

# 1eefe5b27e5e4589b111292f91afcec7
#: ../../ref/contrib/localflavor.txt:70
msgid "Romania_"
msgstr ""

# 1055b34cca9d4ecdae11c3dcc26fd27a
#: ../../ref/contrib/localflavor.txt:71
msgid "Russia_"
msgstr ""

# c3c6dc64c0604f8a89dad1eefeb7913d
#: ../../ref/contrib/localflavor.txt:72
msgid "Slovakia_"
msgstr ""

# df659a6a6aeb474886e5102c0fd01c07
#: ../../ref/contrib/localflavor.txt:73
msgid "Slovenia_"
msgstr ""

# 7b985564f1334402994af2ab8e14e1d2
#: ../../ref/contrib/localflavor.txt:74
msgid "`South Africa`_"
msgstr ""

# 14676286de7e4a5b8c9a618ceb90c71b
#: ../../ref/contrib/localflavor.txt:75
msgid "Spain_"
msgstr ""

# 7ee8400ef59c4bfaa3d8c1637109ee36
#: ../../ref/contrib/localflavor.txt:76
msgid "Sweden_"
msgstr ""

# 1c62a51ead5d40cba8dc93e826edfd37
#: ../../ref/contrib/localflavor.txt:77
msgid "Switzerland_"
msgstr ""

# 621bfe6ca3424ca88f7a3c5eaad8a127
#: ../../ref/contrib/localflavor.txt:78
msgid "Turkey_"
msgstr ""

# 2c3bcce3f2b1409494adeebd4bdfa335
#: ../../ref/contrib/localflavor.txt:79
msgid "`United Kingdom`_"
msgstr ""

# 8a48a60df5484369bc4dbc48711372ef
#: ../../ref/contrib/localflavor.txt:80
msgid "`United States of America`_"
msgstr ""

# f911608867c74b98bdccbc1316747019
#: ../../ref/contrib/localflavor.txt:81
msgid "Uruguay_"
msgstr ""

# e6109b5a868f4f27a34daf6d458905b1
#: ../../ref/contrib/localflavor.txt:83
msgid ""
"The ``django.contrib.localflavor`` package also includes a ``generic`` "
"subpackage, containing useful code that is not specific to one particular "
"country or culture. Currently, it defines date, datetime and split datetime "
"input fields based on those from :doc:`forms </topics/forms/index>`, but "
"with non-US default formats. Here's an example of how to use them::"
msgstr ""

# 0a673630a060418ba1b845638ea53412
#: ../../ref/contrib/localflavor.txt:141
msgid "Internationalization of localflavor"
msgstr ""

# 8b9ca1d2daaa4a1eae729ecc515a7c43
#: ../../ref/contrib/localflavor.txt:143
msgid ""
"Localflavor has its own catalog of translations, in the directory ``django/"
"contrib/localflavor/locale``, and it's not loaded automatically like "
"Django's general catalog in ``django/conf/locale``. If you want "
"localflavor's texts to be translated, like form fields error messages, you "
"must include :mod:`django.contrib.localflavor` in the :setting:"
"`INSTALLED_APPS` setting, so the internationalization system can find the "
"catalog, as explained in :ref:`how-django-discovers-translations`."
msgstr ""

# 32af6f37daed4606baeb22db0041fbdf
#: ../../ref/contrib/localflavor.txt:152
msgid "Adding flavors"
msgstr ""

# 3dc6235ba9f6419da902de55915dd4cd
#: ../../ref/contrib/localflavor.txt:154
msgid ""
"We'd love to add more of these to Django, so please `create a ticket`_ with "
"any code you'd like to contribute. One thing we ask is that you please use "
"Unicode objects (``u'mystring'``) for strings, rather than setting the "
"encoding in the file. See any of the existing flavors for examples."
msgstr ""

# 8162ff1285a74587932c2bc6217827b9
#: ../../ref/contrib/localflavor.txt:162
msgid "Localflavor and backwards compatibility"
msgstr ""

# 36be96eccf524d66a7d81cdbd4b3ea3b
#: ../../ref/contrib/localflavor.txt:164
msgid ""
"As documented in our :ref:`API stability <misc-api-stability-localflavor>` "
"policy, Django will always attempt to make :mod:`django.contrib.localflavor` "
"reflect the officially gazetted policies of the appropriate local government "
"authority. For example, if a government body makes a change to add, alter, "
"or remove a province (or state, or county), that change will be reflected in "
"Django's localflavor in the next stable Django release."
msgstr ""

# 2155321e20e7432d8de7c35f31a0ae7a
#: ../../ref/contrib/localflavor.txt:172
msgid ""
"When a backwards-incompatible change is made (for example, the removal or "
"renaming of a province) the localflavor in question will raise a warning "
"when that localflavor is imported. This provides a runtime indication that "
"something may require attention."
msgstr ""

# 279e7a4e8d4e4a1abecc7ae6624d9e55
#: ../../ref/contrib/localflavor.txt:177
msgid ""
"However, once you have addressed the backwards compatibility (for example, "
"auditing your code to see if any data migration is required), the warning "
"serves no purpose. The warning can then be supressed. For example, to "
"suppress the warnings raised by the Indonesian localflavor you would use the "
"following code::"
msgstr ""

# 917fc509ca8b4684adf5934276d960f9
#: ../../ref/contrib/localflavor.txt:191
msgid "Argentina (``ar``)"
msgstr ""

# 967ab87e9fb147fab1ecafb2cfaed5ac
#: ../../ref/contrib/localflavor.txt:195
msgid ""
"A form field that validates input as either a classic four-digit Argentinian "
"postal code or a CPA_."
msgstr ""

# 5f4852391b8e4ca5b638ce65d8125dc0
#: ../../ref/contrib/localflavor.txt:202
msgid ""
"A form field that validates input as a Documento Nacional de Identidad (DNI) "
"number."
msgstr ""

# e4d23975b20440e7b73747f107ba7253
#: ../../ref/contrib/localflavor.txt:207
msgid ""
"A form field that validates input as a Codigo Unico de Identificacion "
"Tributaria (CUIT) number."
msgstr ""

# 04853e1b85e44ab0823e651006e785d9
#: ../../ref/contrib/localflavor.txt:212
msgid ""
"A ``Select`` widget that uses a list of Argentina's provinces and autonomous "
"cities as its choices."
msgstr ""

# 409ec2e6b25b4133b17ea4d15436e411
#: ../../ref/contrib/localflavor.txt:216
msgid "Australia (``au``)"
msgstr ""

# 67ebabefd01e4917a0c87a1d4a21bc24
#: ../../ref/contrib/localflavor.txt:222
msgid "A form field that validates input as an Australian postcode."
msgstr ""

# 04b24d3e3d9347339a5ac5d213572eb1
#: ../../ref/contrib/localflavor.txt:226
msgid ""
"A form field that validates input as an Australian phone number. Valid "
"numbers have ten digits."
msgstr ""

# 5beac12e4bd54ec2b0f7df3f697e8d43
#: ../../ref/contrib/localflavor.txt:231
msgid ""
"A ``Select`` widget that uses a list of Australian states/territories as its "
"choices."
msgstr ""

# 4100da37a7874476a152bc0815bfc65f
#: ../../ref/contrib/localflavor.txt:236
msgid ""
"A model field that checks that the value is a valid Australian phone number "
"(ten digits)."
msgstr ""

# dac59c71f9dc4802bbb7aa87ec493622
#: ../../ref/contrib/localflavor.txt:241
msgid ""
"A model field that forms represent as a ``forms.AUStateField`` field and "
"stores the three-letter Australian state abbreviation in the database."
msgstr ""

# 146eba3065394f63a495e9a5fa7a4073
#: ../../ref/contrib/localflavor.txt:246
msgid ""
"A model field that forms represent as a ``forms.AUPostCodeField`` field and "
"stores the four-digit Australian postcode in the database."
msgstr ""

# 0f6545e5c5a24c51bbc5b124155c3308
#: ../../ref/contrib/localflavor.txt:250
msgid "Austria (``at``)"
msgstr ""

# 545259ebedd84e21822aa7a45ab37af5
#: ../../ref/contrib/localflavor.txt:254
msgid ""
"A form field that validates its input as an Austrian zip code, with the "
"format XXXX (first digit must be greater than 0)."
msgstr ""

# 3a523f904f1a4d0ea3f1c9e42a48c138
#: ../../ref/contrib/localflavor.txt:259
msgid "A ``Select`` widget that uses a list of Austrian states as its choices."
msgstr ""

# 3cca90864d5d4c1389c80b02d3a2712e
#: ../../ref/contrib/localflavor.txt:263
msgid ""
"A form field that validates its input as an Austrian social security number."
msgstr ""

# 8acded9b7d0141c38280b86af7c9ee06
#: ../../ref/contrib/localflavor.txt:266
msgid "Belgium (``be``)"
msgstr ""

# cf3facd6e01d493ea05ad0b0a39fe368
#: ../../ref/contrib/localflavor.txt:272
msgid ""
"A form field that validates input as a Belgium phone number, with one of the "
"formats 0x xxx xx xx, 0xx xx xx xx, 04xx xx xx xx, 0x/xxx.xx.xx, 0xx/xx.xx."
"xx, 04xx/xx.xx.xx, 0x.xxx.xx.xx, 0xx.xx.xx.xx, 04xx.xx.xx.xx, 0xxxxxxxx or "
"04xxxxxxxx."
msgstr ""

# 8561f6922d6f4bbdb7b406950360568a
#: ../../ref/contrib/localflavor.txt:279
msgid ""
"A form field that validates input as a Belgium postal code, in the range and "
"format 1XXX-9XXX."
msgstr ""

# c0ec98c0d2a54d2498254860dfddbb15
#: ../../ref/contrib/localflavor.txt:284
msgid ""
"A ``Select`` widget that uses a list of Belgium provinces as its choices."
msgstr ""

# 31229291ceb24c3198d531570cc1b5e6
#: ../../ref/contrib/localflavor.txt:289
msgid "A ``Select`` widget that uses a list of Belgium regions as its choices."
msgstr ""

# fe6a92f3a2a947d79cd2946c4596b284
#: ../../ref/contrib/localflavor.txt:293
msgid "Brazil (``br``)"
msgstr ""

# 618642a503244baaa506b9fc6d1f7e9c
#: ../../ref/contrib/localflavor.txt:297
msgid ""
"A form field that validates input as a Brazilian phone number, with the "
"format XX-XXXX-XXXX."
msgstr ""

# ba25896ac23547daab552c0d118ed8c4
#: ../../ref/contrib/localflavor.txt:302
msgid ""
"A form field that validates input as a Brazilian zip code, with the format "
"XXXXX-XXX."
msgstr ""

# 38e2121abb324b038c1008fc79956777
#: ../../ref/contrib/localflavor.txt:307
msgid ""
"A ``Select`` widget that uses a list of Brazilian states/territories as its "
"choices."
msgstr ""

# ec9cb177944c410cb0585a7fb3a02065
#: ../../ref/contrib/localflavor.txt:312
msgid "A form field that validates input as `Brazilian CPF`_."
msgstr ""

# a49ace8d1b914469a7744276ca60c3cd
#: ../../ref/contrib/localflavor.txt:314
msgid ""
"Input can either be of the format XXX.XXX.XXX-VD or be a group of 11 digits."
msgstr ""

# 0ec5640738f54cf987652e6def6b532c
#: ../../ref/contrib/localflavor.txt:320
msgid "A form field that validates input as `Brazilian CNPJ`_."
msgstr ""

# f69ebd99b3e14bef9c6548d1f46c3741
#: ../../ref/contrib/localflavor.txt:322
msgid ""
"Input can either be of the format XX.XXX.XXX/XXXX-XX or be a group of 14 "
"digits."
msgstr ""

# 0bdf3e26219146b3b87ad863b90097c0
#: ../../ref/contrib/localflavor.txt:328
msgid "Canada (``ca``)"
msgstr ""

# 9c63ecf31d654664ba448ce89cd12726
#: ../../ref/contrib/localflavor.txt:332
msgid ""
"A form field that validates input as a Canadian phone number, with the "
"format XXX-XXX-XXXX."
msgstr ""

# 5e2a1435376949ef8fc964470a4a6aa4
#: ../../ref/contrib/localflavor.txt:337
msgid ""
"A form field that validates input as a Canadian postal code, with the format "
"XXX XXX."
msgstr ""

# 7358744eb08f457e92eb12ca67ab0537
#: ../../ref/contrib/localflavor.txt:342
msgid ""
"A form field that validates input as a Canadian province name or "
"abbreviation."
msgstr ""

# 71ddc853fb6d48d9a119d101d91f0baf
#: ../../ref/contrib/localflavor.txt:346
msgid ""
"A form field that validates input as a Canadian Social Insurance Number "
"(SIN). A valid number must have the format XXX-XXX-XXX and pass a `Luhn "
"mod-10 checksum`_."
msgstr ""

# a29068e820e24cd19101f89cd6b77445
#: ../../ref/contrib/localflavor.txt:354
msgid ""
"A ``Select`` widget that uses a list of Canadian provinces and territories "
"as its choices."
msgstr ""

# 2605b7c6fc94450281dfed6440dc1dee
#: ../../ref/contrib/localflavor.txt:358
msgid "Chile (``cl``)"
msgstr ""

# 2aeedf2a6cf245239272df5752adc3bd
#: ../../ref/contrib/localflavor.txt:362
msgid ""
"A form field that validates input as a Chilean national identification "
"number ('Rol Unico Tributario' or RUT). The valid format is XX.XXX.XXX-X."
msgstr ""

# b5db23efb3fa457a91aec6bda72a182d
#: ../../ref/contrib/localflavor.txt:367
msgid ""
"A ``Select`` widget that uses a list of Chilean regions (Regiones) as its "
"choices."
msgstr ""

# d00912501cad45c1be72d1b39889255a
#: ../../ref/contrib/localflavor.txt:371
msgid "China (``cn``)"
msgstr ""

# f04f5ee508194845bea0de00c8a3d7b1
#: ../../ref/contrib/localflavor.txt:377
msgid "A ``Select`` widget that uses a list of Chinese regions as its choices."
msgstr ""

# 5a056b5ad8c1418b9b5e6a0e668e591f
#: ../../ref/contrib/localflavor.txt:381
msgid ""
"A form field that validates input as a Chinese post code. Valid formats are "
"XXXXXX where X is digit."
msgstr ""

# d2a5037a1b184aa3ad43f1737759d12b
#: ../../ref/contrib/localflavor.txt:386
msgid ""
"A form field that validates input as a Chinese Identification Card Number. "
"Both 1st and 2nd generation ID Card Number are validated."
msgstr ""

# e936b2cc6d6b40e2aa33ade3605f2502
#: ../../ref/contrib/localflavor.txt:391
msgid ""
"A form field that validates input as a Chinese phone number. Valid formats "
"are 0XX-XXXXXXXX, composed of 3 or 4 digits of region code and 7 or 8 digits "
"of phone number."
msgstr ""

# e70b0830c8bb43f5b17b8470b61ab689
#: ../../ref/contrib/localflavor.txt:397
msgid ""
"A form field that validates input as a Chinese mobile phone number. Valid "
"formats are like 1XXXXXXXXXX, where X is digit. The second digit could only "
"be 3, 5 and 8."
msgstr ""

# ea111b2fccf64eacb4304170d29823d2
#: ../../ref/contrib/localflavor.txt:402
msgid "Colombia (``co``)"
msgstr ""

# 819e7cbab4f241f19ca9cf641d639a10
#: ../../ref/contrib/localflavor.txt:408
msgid ""
"A ``Select`` widget that uses a list of Colombian departments as its choices."
msgstr ""

# 6c874299bace4c70815c592343c0cffa
#: ../../ref/contrib/localflavor.txt:412
msgid "Croatia (``hr``)"
msgstr ""

# 220ae139269740f3877784cc69f9fa65
#: ../../ref/contrib/localflavor.txt:418
msgid ""
"A ``Select`` widget that uses a list of counties of Croatia as its choices."
msgstr ""

# 87fdc94340784c00abb62521c8985988
#: ../../ref/contrib/localflavor.txt:422
msgid ""
"A ``Select`` widget that uses a list of phone number prefixes of Croatia as "
"its choices."
msgstr ""

# 8ce32c88ca8e47b0b81c74bc5a943582
#: ../../ref/contrib/localflavor.txt:427
msgid ""
"A ``Select`` widget that uses a list of vehicle license plate prefixes of "
"Croatia as its choices."
msgstr ""

# 629caa41d84747d89153df36d8cd5597
#: ../../ref/contrib/localflavor.txt:432
msgid ""
"A form field that validates input as a phone number of Croatia. A valid "
"format is a country code or a leading zero, area code prefix, 6 or 7 digit "
"number; e.g. +385XXXXXXXX or 0XXXXXXXX Validates fixed, mobile and FGSM "
"numbers. Normalizes to a full number with country code (+385 prefix)."
msgstr ""

# 669d55960c964e02bb36fbfc216e2d00
#: ../../ref/contrib/localflavor.txt:440
msgid ""
"A form field that validates input as a vehicle license plate of Croatia. "
"Normalizes to the specific format XX YYYY-XX where X is a letter and Y a "
"digit. There can be three or four digits. Suffix is constructed from the "
"shared letters of the Croatian and English alphabets. It is used for "
"standardized license plates only. Special cases like license plates for "
"oldtimers, temporary license plates, government institution license plates "
"and customized license plates are not covered by this field."
msgstr ""

# cc6673f974a344b286161f1c4ef22252
#: ../../ref/contrib/localflavor.txt:451
msgid ""
"A form field that validates input as a postal code of Croatia. It consists "
"of exactly five digits ranging from 10000 to 59999 inclusive."
msgstr ""

# 82837d70cb6a4ca98df579fe68b51739
#: ../../ref/contrib/localflavor.txt:456
msgid ""
"A form field that validates input as a Personal Identification Number (OIB) "
"of Croatia. It consists of exactly eleven digits."
msgstr ""

# 1c73dd509c4c4995ad5479d454dff8a1
#: ../../ref/contrib/localflavor.txt:462
msgid ""
"A form field that validates input as a Unique Master Citizen Number (JMBG). "
"The number is still in use in Croatia, but it is being replaced by OIB. This "
"field works for other ex-Yugoslavia countries as well where the JMBG is "
"still in use. The area segment of the JMBG is not validated because the "
"citizens might have emigrated to another ex-Yugoslavia country. The number "
"consists of exactly thirteen digits."
msgstr ""

# c8378cf4ab6c4a1b9691b4a1d05c1eb3
#: ../../ref/contrib/localflavor.txt:472
msgid ""
"A form field that validates input as a Unique Master Academic Citizen Number "
"(JMBAG) of Croatia. This number is used by college students and professors "
"in Croatia. The number consists of exactly nineteen digits."
msgstr ""

# c4bf357f9d684230a243c76eeaedc566
#: ../../ref/contrib/localflavor.txt:478
msgid "Czech (``cz``)"
msgstr ""

# aec2ddd3d05f44479703cb0abe4e3ec1
#: ../../ref/contrib/localflavor.txt:482
msgid ""
"A form field that validates input as a Czech postal code. Valid formats are "
"XXXXX or XXX XX, where X is a digit."
msgstr ""

# 1bf53892801f4e4da5fa8d7ed3856661
#: ../../ref/contrib/localflavor.txt:487
msgid ""
"A form field that validates input as a Czech Birth Number. A valid number "
"must be in format XXXXXX/XXXX (slash is optional)."
msgstr ""

# bfecae65fae14a14bb8e34117b80ade2
#: ../../ref/contrib/localflavor.txt:492
msgid "A form field that validates input as a Czech IC number field."
msgstr ""

# 8986064c47eb46cbb90f24b78df04a9a
#: ../../ref/contrib/localflavor.txt:496
msgid "A ``Select`` widget that uses a list of Czech regions as its choices."
msgstr ""

# c70141f574a5400286fd100532e63a5f
#: ../../ref/contrib/localflavor.txt:499
msgid "Ecuador (``ec``)"
msgstr ""

# 237a94451dcf46d08de1478cc532223a
#: ../../ref/contrib/localflavor.txt:505
msgid ""
"A ``Select`` widget that uses a list of Ecuatorian provinces as its choices."
msgstr ""

# afe7d485ea3f4a3bbe3ed48c37b89116
#: ../../ref/contrib/localflavor.txt:509
msgid "Finland (``fi``)"
msgstr ""

# 28877d20517e4db89859048fa1749bf8
#: ../../ref/contrib/localflavor.txt:513
msgid "A form field that validates input as a Finnish social security number."
msgstr ""

# e0b5377f304349dca3b1320f8f849fa2
#: ../../ref/contrib/localflavor.txt:517
msgid ""
"A form field that validates input as a Finnish zip code. Valid codes consist "
"of five digits."
msgstr ""

# cd9f8710f2024669b50526cb6498f555
#: ../../ref/contrib/localflavor.txt:522
msgid ""
"A ``Select`` widget that uses a list of Finnish municipalities as its "
"choices."
msgstr ""

# 42ae1dc6b4f1475985c50198a44a6f15
#: ../../ref/contrib/localflavor.txt:526
msgid "France (``fr``)"
msgstr ""

# 89e5d11167814e1086696b473e066be5
#: ../../ref/contrib/localflavor.txt:530
msgid ""
"A form field that validates input as a French local phone number. The "
"correct format is 0X XX XX XX XX. 0X.XX.XX.XX.XX and 0XXXXXXXXX validate but "
"are corrected to 0X XX XX XX XX."
msgstr ""

# 647f6dadf4e14f4694e8902eaa4cf633
#: ../../ref/contrib/localflavor.txt:536
msgid ""
"A form field that validates input as a French zip code. Valid codes consist "
"of five digits."
msgstr ""

# 5a43188df04b4ed6b5b64fd7e63831e9
#: ../../ref/contrib/localflavor.txt:541
msgid ""
"A ``Select`` widget that uses a list of French departments as its choices."
msgstr ""

# 47961c62e55a4f818f271a6f464596ed
#: ../../ref/contrib/localflavor.txt:544
msgid "Germany (``de``)"
msgstr ""

# 3087ef158bc2485299ae6880369e0662
#: ../../ref/contrib/localflavor.txt:548
msgid ""
"A form field that validates input as a German identity card number "
"(Personalausweis_). Valid numbers have the format XXXXXXXXXXX-XXXXXXX-"
"XXXXXXX-X, with no group consisting entirely of zeroes."
msgstr ""

# 66a43ccca72a4b5592fdcf82bb3401b8
#: ../../ref/contrib/localflavor.txt:556
msgid ""
"A form field that validates input as a German zip code. Valid codes consist "
"of five digits."
msgstr ""

# 75abdaaa7a7849e3b655e9956a227328
#: ../../ref/contrib/localflavor.txt:561
msgid "A ``Select`` widget that uses a list of German states as its choices."
msgstr ""

# 1fc6d6fd766b4897b11a5c5064dc4cb3
#: ../../ref/contrib/localflavor.txt:564
msgid "The Netherlands (``nl``)"
msgstr ""

# 647c4e10cb1c450b8d2883905a4b3fb0
#: ../../ref/contrib/localflavor.txt:568
msgid "A form field that validates input as a Dutch telephone number."
msgstr ""

# ca87126fdc514ce086ac1a01b8017495
#: ../../ref/contrib/localflavor.txt:572
msgid ""
"A form field that validates input as a Dutch social security number (SoFI/"
"BSN)."
msgstr ""

# 99c6dc9ce8b64044bcf7dbac913b3b87
#: ../../ref/contrib/localflavor.txt:577
msgid "A form field that validates input as a Dutch zip code."
msgstr ""

# 3610026348434f5eb51bba9b7fcf06fa
#: ../../ref/contrib/localflavor.txt:581
msgid ""
"A ``Select`` widget that uses a list of Dutch provinces as its list of "
"choices."
msgstr ""

# a716f7a8817d4da480d7f3992d92ece1
#: ../../ref/contrib/localflavor.txt:585
msgid "Iceland (``is_``)"
msgstr ""

# 16b19f7c1b7f40f3a239913a3fad7877
#: ../../ref/contrib/localflavor.txt:589
msgid ""
"A form field that validates input as an Icelandic identification number "
"(kennitala). The format is XXXXXX-XXXX."
msgstr ""

# d70c44208aef4c3eb3992b2b00be1717
#: ../../ref/contrib/localflavor.txt:594
msgid ""
"A form field that validates input as an Icelandtic phone number (seven "
"digits with an optional hyphen or space after the first three digits)."
msgstr ""

# 9559f7e5117b456a9b1fc7a0efff096b
#: ../../ref/contrib/localflavor.txt:599
msgid ""
"A ``Select`` widget that uses a list of Icelandic postal codes as its "
"choices."
msgstr ""

# 6e92e662951f49de81e26a134dbc9abf
#: ../../ref/contrib/localflavor.txt:603
msgid "India (``in_``)"
msgstr ""

# 4339a4560c3e4143ae4382e325429732
#: ../../ref/contrib/localflavor.txt:607
msgid ""
"A form field that validates input as an Indian state/territory name or "
"abbreviation. Input is normalized to the standard two-letter vehicle "
"registration abbreviation for the given state or territory."
msgstr ""

# ec790c2c68864cab8173168c510ed21d
#: ../../ref/contrib/localflavor.txt:613
msgid ""
"A form field that validates input as an Indian zip code, with the format "
"XXXXXXX."
msgstr ""

# 752b1f6d75244ad086082548aebe4c14
#: ../../ref/contrib/localflavor.txt:618
msgid ""
"A ``Select`` widget that uses a list of Indian states/territories as its "
"choices."
msgstr ""

# 0404a6987d3b4cff883b09834187250b
#: ../../ref/contrib/localflavor.txt:625
msgid ""
"A form field that validates that the data is a valid Indian phone number, "
"including the STD code. It's normalised to 0XXX-XXXXXXX or 0XXX XXXXXXX "
"format. The first string is the STD code which is a '0' followed by 2-4 "
"digits. The second string is 8 digits if the STD code is 3 digits, 7 digits "
"if the STD code is 4 digits and 6 digits if the STD code is 5 digits. The "
"second string will start with numbers between 1 and 6. The separator is "
"either a space or a hyphen."
msgstr ""

# 0f003d01521d4ff29332814f4e886b1b
#: ../../ref/contrib/localflavor.txt:634
msgid "Ireland (``ie``)"
msgstr ""

# 47cb48f58ee948a49d7a442fdf3e80bd
#: ../../ref/contrib/localflavor.txt:638
msgid "A ``Select`` widget that uses a list of Irish Counties as its choices."
msgstr ""

# e17f0a6eef7a421eb621c735f465bb3c
#: ../../ref/contrib/localflavor.txt:641
msgid "Indonesia (``id``)"
msgstr ""

# a9386db651b54fe9a5b668d949f2e3c9
#: ../../ref/contrib/localflavor.txt:645
msgid "A form field that validates input as an Indonesian post code field."
msgstr ""

# 6e367595960a48f59aa2d9245537b414
#: ../../ref/contrib/localflavor.txt:649
msgid ""
"A ``Select`` widget that uses a list of Indonesian provinces as its choices."
msgstr ""

# 9b96caddf3d947e887356485cf7a85c6
#: ../../ref/contrib/localflavor.txt:658
msgid "A form field that validates input as an Indonesian telephone number."
msgstr ""

# 486365f24ca54ca8b995487b5e7bd48c
#: ../../ref/contrib/localflavor.txt:662
msgid ""
"A ``Select`` widget that uses a list of Indonesian license plate prefix code "
"as its choices."
msgstr ""

# b95f4b82473c424c8c3ab97c45daad08
#: ../../ref/contrib/localflavor.txt:667
msgid ""
"A form field that validates input as an Indonesian vehicle license plate."
msgstr ""

# 649b32c7f3724b8aa1e0e213a40a6929
#: ../../ref/contrib/localflavor.txt:671
msgid ""
"A form field that validates input as an Indonesian national identity number "
"(`NIK`_/KTP). The output will be in the format of 'XX.XXXX.DDMMYY.XXXX'. "
"Dots or spaces can be used in the input to break down the numbers."
msgstr ""

# cf10c2fd8e1547208f1792c4374ec7df
#: ../../ref/contrib/localflavor.txt:679
msgid "Israel (``il``)"
msgstr ""

# b38d6121969143788efd28ce9924de1c
#: ../../ref/contrib/localflavor.txt:683
msgid ""
"A form field that validates its input as an Israeli five-digit postal code."
msgstr ""

# 97ca34979efc487782a863810e45ac9f
#: ../../ref/contrib/localflavor.txt:687
msgid ""
"A form field that validates its input as an `Israeli identification "
"number`_. The output will be in the format of a 2-9 digit number, consisting "
"of a 1-8 digit ID number followed by a single checksum digit, calculated "
"using the `Luhn algorithm`_."
msgstr ""

# 8b8c57c902824a4aa1c5073acfa8d126
#: ../../ref/contrib/localflavor.txt:692
msgid ""
"Input may contain an optional hyphen separating the ID number from the "
"checksum digit."
msgstr ""

# e003e61c90a44c87b3638b4cec2abc6d
#: ../../ref/contrib/localflavor.txt:699
msgid "Italy (``it``)"
msgstr ""

# ce42f4158a2c4a89819b473c55aabb59
#: ../../ref/contrib/localflavor.txt:703
msgid ""
"A form field that validates input as an Italian social security number "
"(`codice fiscale`_)."
msgstr ""

# 40c4e40d8b0d47068c29d99a7f8e139a
#: ../../ref/contrib/localflavor.txt:710
msgid "A form field that validates Italian VAT numbers (partita IVA)."
msgstr ""

# 175ef0f1322e4c90b2127c4a28f29f31
#: ../../ref/contrib/localflavor.txt:714
msgid ""
"A form field that validates input as an Italian zip code. Valid codes must "
"have five digits."
msgstr ""

# f99654f7d57b4c979e414dba5e3de4cd
#: ../../ref/contrib/localflavor.txt:719
msgid ""
"A ``Select`` widget that uses a list of Italian provinces as its choices."
msgstr ""

# ae72c6ba20284261858e3bd72c23fb5c
#: ../../ref/contrib/localflavor.txt:723
msgid "A ``Select`` widget that uses a list of Italian regions as its choices."
msgstr ""

# f6d5c1b3d60349f2ad2b3a591e2b6d14
#: ../../ref/contrib/localflavor.txt:726
msgid "Japan (``jp``)"
msgstr ""

# 6fcfeab557b647a799e2aafc179e9734
#: ../../ref/contrib/localflavor.txt:730
msgid ""
"A form field that validates input as a Japanese postcode. It accepts seven "
"digits, with or without a hyphen."
msgstr ""

# 0769dd0b50f8494cb64cf1872d57bd6d
#: ../../ref/contrib/localflavor.txt:735
msgid ""
"A ``Select`` widget that uses a list of Japanese prefectures as its choices."
msgstr ""

# 7ed36c6bcb1a44e7999c4c717a6edf59
#: ../../ref/contrib/localflavor.txt:738
msgid "Kuwait (``kw``)"
msgstr ""

# b2e8bfa2d45749ceb52a013c051d1fc5
#: ../../ref/contrib/localflavor.txt:742
msgid ""
"A form field that validates input as a Kuwaiti Civil ID number. A valid "
"Civil ID number must obey the following rules:"
msgstr ""

# ece1ad446d82445eb90237131479f86e
#: ../../ref/contrib/localflavor.txt:745
msgid "The number consist of 12 digits."
msgstr ""

# 286fc2cda07b4fa1a66bb0609ad4b8f1
#: ../../ref/contrib/localflavor.txt:746
msgid "The birthdate of the person is a valid date."
msgstr ""

# ac82c68776954659b0437cd1b8389d6d
#: ../../ref/contrib/localflavor.txt:747
msgid "The calculated checksum equals to the last digit of the Civil ID."
msgstr ""

# 48480c8fa5c34fbf97a727bce307cd2f
#: ../../ref/contrib/localflavor.txt:750
msgid "Macedonia (``mk``)"
msgstr ""

# b697221a51ed4fab8af41cf79a621c03
#: ../../ref/contrib/localflavor.txt:756
msgid ""
"A form field that validates input as a Macedonian identity card number. Both "
"old and new identity card numbers are supported."
msgstr ""

# d2526c11591b43588ca8ce4dac579910
#: ../../ref/contrib/localflavor.txt:762
msgid ""
"A form ``Select`` widget that uses a list of Macedonian municipalities as "
"choices."
msgstr ""

# 79a5471aa461482e9798f23ceb8dd3aa
#: ../../ref/contrib/localflavor.txt:768
msgid "A form field that validates input as a unique master citizen number."
msgstr ""

# 2ee4558da1aa4464ba6741cbe894cf09
#: ../../ref/contrib/localflavor.txt:771
msgid ""
"The format of the unique master citizen number is not unique to Macedonia. "
"For more information see: https://secure.wikimedia.org/wikipedia/en/wiki/"
"Unique_Master_Citizen_Number"
msgstr ""

# 949c98cee91449d6b7fce05577bee227
#: ../../ref/contrib/localflavor.txt:775
msgid "A value will pass validation if it complies to the following rules:"
msgstr ""

# 57d2a9603ba94c9db72623df19b3090e
#: ../../ref/contrib/localflavor.txt:777
msgid "Consists of exactly 13 digits"
msgstr ""

# d1f2df95aa0f459799ed098f7e73c324
#: ../../ref/contrib/localflavor.txt:778
msgid "The first 7 digits represent a valid past date in the format DDMMYYY"
msgstr ""

# 8f30df233cc04405b6eeac0a415c31f8
#: ../../ref/contrib/localflavor.txt:779
msgid "The last digit of the UMCN passes a checksum test"
msgstr ""

# c63ff87c426a477195a94047738f9b12
#: ../../ref/contrib/localflavor.txt:784
msgid ""
"A model field that forms represent as a ``forms.MKIdentityCardNumberField`` "
"field."
msgstr ""

# bdac084e3100410a8dbfce2bf9e3e0b5
#: ../../ref/contrib/localflavor.txt:790
msgid ""
"A model field that forms represent as a ``forms.MKMunicipalitySelect`` and "
"stores the 2 character code of the municipality in the database."
msgstr ""

# bbf4073938164ec786b639781ff38bae
#: ../../ref/contrib/localflavor.txt:797
msgid "A model field that forms represent as a ``forms.UMCNField`` field."
msgstr ""

# 809e21837d3543a0b9aa0279e6d30640
#: ../../ref/contrib/localflavor.txt:801
msgid "Mexico (``mx``)"
msgstr ""

# 23a1ba15698d4ce59ea55267d67fb34b
#: ../../ref/contrib/localflavor.txt:807
msgid "A form field that accepts a Mexican Zip Code."
msgstr ""

# d9be1034f1f5479cbd55b40d469ae611
#: ../../ref/contrib/localflavor.txt:809
msgid "More info about this: List of postal codes in Mexico (zipcodes_)"
msgstr ""

# 830115a3238a401386d2aa79c166aa6b
#: ../../ref/contrib/localflavor.txt:817
msgid ""
"A form field that validates a Mexican *Registro Federal de Contribuyentes* "
"for either **Persona física** or **Persona moral**. This field accepts RFC "
"strings whether or not it contains a *homoclave*."
msgstr ""

# b9ebe77ce8cc403296d6044a0a86a3c3
#: ../../ref/contrib/localflavor.txt:821
msgid "More info about this: Registro Federal de Contribuyentes (rfc_)"
msgstr ""

# 38180858b83b4116b242d66a0f8c8add
#: ../../ref/contrib/localflavor.txt:829
msgid ""
"A field that validates a Mexican *Clave Única de Registro de Población*."
msgstr ""

# ce868dc07be54a4889581533ba0640fc
#: ../../ref/contrib/localflavor.txt:831
msgid "More info about this: Clave Unica de Registro de Poblacion (curp_)"
msgstr ""

# 97bbab1328fe46dea1d56cc20f6bfe9d
#: ../../ref/contrib/localflavor.txt:837
msgid "A ``Select`` widget that uses a list of Mexican states as its choices."
msgstr ""

# 9274cba697b44a9480f44e76a1d31184
#: ../../ref/contrib/localflavor.txt:843
msgid ""
"A model field that stores the three-letter Mexican state abbreviation in the "
"database."
msgstr ""

# 328045835de1478faf4d472685a1b7a5
#: ../../ref/contrib/localflavor.txt:850
msgid ""
"A model field that forms represent as a ``forms.MXZipCodeField`` field and "
"stores the five-digit Mexican zip code."
msgstr ""

# a3de117a0c0d4e5d8ef219cd9b489487
#: ../../ref/contrib/localflavor.txt:857
msgid ""
"A model field that forms represent as a ``forms.MXRFCField`` field and "
"stores the value of a valid Mexican RFC."
msgstr ""

# cb84698b1e9b4f14b03d2a95c43cfb3e
#: ../../ref/contrib/localflavor.txt:864
msgid ""
"A model field that forms represent as a ``forms.MXCURPField`` field and "
"stores the value of a valid Mexican CURP."
msgstr ""

# 5e61cea0d95b4371b2d0fad2e721cfce
#: ../../ref/contrib/localflavor.txt:867
msgid ""
"Additionally, a choice tuple is provided in ``django.contrib.localflavor.mx."
"mx_states``, allowing customized model and form fields, and form "
"presentations, for subsets of Mexican states abbreviations:"
msgstr ""

# e49e8bf23e334546a537f711b9b8ac93
#: ../../ref/contrib/localflavor.txt:873
msgid ""
"A tuple of choices of the states abbreviations for all 31 Mexican states, "
"plus the `Distrito Federal`."
msgstr ""

# 19f11cda9f7b4f4da114c03ed4f1cc47
#: ../../ref/contrib/localflavor.txt:877
msgid "Norway (``no``)"
msgstr ""

# a5cfcbee04bb45d38547338a6748b3b5
#: ../../ref/contrib/localflavor.txt:881
msgid ""
"A form field that validates input as a Norwegian social security number "
"(personnummer_)."
msgstr ""

# bb3e5b9e882645749acf91a014f7f201
#: ../../ref/contrib/localflavor.txt:888
msgid ""
"A form field that validates input as a Norwegian zip code. Valid codes have "
"four digits."
msgstr ""

# 5642bd0aaf8047739707cf88fda04d20
#: ../../ref/contrib/localflavor.txt:893
msgid ""
"A ``Select`` widget that uses a list of Norwegian municipalities (fylker) as "
"its choices."
msgstr ""

# f819c62eff4048cdbbad7bae53edf0e7
#: ../../ref/contrib/localflavor.txt:897
msgid "Paraguay (``py``)"
msgstr ""

# 4e9e5aa239df459991f3843ebe1b3191
#: ../../ref/contrib/localflavor.txt:903
msgid "A ``Select`` widget with a list of Paraguayan departments as choices."
msgstr ""

# 1b99c241b49c47cbad0b3116b14a59fe
#: ../../ref/contrib/localflavor.txt:907
msgid ""
"A ``Select`` widget with a roman numbered list of Paraguayan departments as "
"choices."
msgstr ""

# 470e6ba2b4f140b1ad14f23b22fb8003
#: ../../ref/contrib/localflavor.txt:910
msgid "Peru (``pe``)"
msgstr ""

# db656cceb65149ae9027424c18f3c65b
#: ../../ref/contrib/localflavor.txt:914
msgid ""
"A form field that validates input as a DNI (Peruvian national identity) "
"number."
msgstr ""

# 95736d8bef244a22afd1a5325dce8951
#: ../../ref/contrib/localflavor.txt:919
msgid ""
"A form field that validates input as an RUC (Registro Unico de "
"Contribuyentes) number. Valid RUC numbers have 11 digits."
msgstr ""

# 14ff647bca3c4a7da79c6883a00490d7
#: ../../ref/contrib/localflavor.txt:924
msgid ""
"A ``Select`` widget that uses a list of Peruvian Departments as its choices."
msgstr ""

# 8d0c3c6e7b814b1dbc6e51fa7f196b51
#: ../../ref/contrib/localflavor.txt:927
msgid "Poland (``pl``)"
msgstr ""

# 040f44adba1b424ba53a4c698b2f08a6
#: ../../ref/contrib/localflavor.txt:931
msgid ""
"A form field that validates input as a Polish national identification number "
"(PESEL_)."
msgstr ""

# 98185a7545ff4d5f9059c46c2c671e0b
#: ../../ref/contrib/localflavor.txt:940
msgid ""
"A form field that validates input as a Polish National ID Card number. The "
"valid format is AAAXXXXXX, where A is letter (A-Z), X is digit and left-most "
"digit is checksum digit. More information about checksum calculation "
"algorithm see `Polish identity card`_."
msgstr ""

# 3010b780ef8a4ba9ab119b4af587d190
#: ../../ref/contrib/localflavor.txt:949
msgid ""
"A form field that validates input as a Polish National Official Business "
"Register Number (REGON_), having either seven or nine digits. The checksum "
"algorithm used for REGONs is documented at http://wipos.p.lodz.pl/zylla/ut/"
"nip-rego.html."
msgstr ""

# 30f9e5a5b23d42258ff3a757d5eba9b8
#: ../../ref/contrib/localflavor.txt:958
msgid ""
"A form field that validates input as a Polish postal code. The valid format "
"is XX-XXX, where X is a digit."
msgstr ""

# be3bd09a00db4348ac130f124a9ecc71
#: ../../ref/contrib/localflavor.txt:963
msgid ""
"A form field that validates input as a Polish Tax Number (NIP). Valid "
"formats are XXX-XXX-XX-XX, XXX-XX-XX-XXX or XXXXXXXXXX. The checksum "
"algorithm used for NIPs is documented at http://wipos.p.lodz.pl/zylla/ut/nip-"
"rego.html."
msgstr ""

# 4041b10fa6dd49f48bd19de95095ca97
#: ../../ref/contrib/localflavor.txt:969
msgid ""
"A ``Select`` widget that uses a list of Polish administrative units as its "
"choices."
msgstr ""

# e28b762372614ba2ab89f792d57bff67
#: ../../ref/contrib/localflavor.txt:974
msgid ""
"A ``Select`` widget that uses a list of Polish voivodeships (administrative "
"provinces) as its choices."
msgstr ""

# 901548f2e20746429f05b69402178935
#: ../../ref/contrib/localflavor.txt:978
msgid "Portugal (``pt``)"
msgstr ""

# 63f7dd337f1f47cfa643014ffc6ee3b3
#: ../../ref/contrib/localflavor.txt:982
msgid "A form field that validates input as a Portuguese zip code."
msgstr ""

# d75b07b6909d496aa8107f09c1fa65ef
#: ../../ref/contrib/localflavor.txt:986
msgid ""
"A form field that validates input as a Portuguese phone number. Valid "
"numbers have 9 digits (may include spaces) or start by 00 or + "
"(international)."
msgstr ""

# ecba104de7134e3f9b5d490b3fe76acf
#: ../../ref/contrib/localflavor.txt:991
msgid "Romania (``ro``)"
msgstr ""

# 026196c937d24296ae6a48fdd671ec00
#: ../../ref/contrib/localflavor.txt:995
msgid ""
"A form field that validates Romanian fiscal identification codes (CIF). The "
"return value strips the leading RO, if given."
msgstr ""

# b692a191b1b849ffa7ca0daad01de464
#: ../../ref/contrib/localflavor.txt:1000
msgid "A form field that validates Romanian personal numeric codes (CNP)."
msgstr ""

# ba8d9a52da5a4181b4348f795054e7e8
#: ../../ref/contrib/localflavor.txt:1004
msgid ""
"A form field that validates its input as a Romanian county (judet) name or "
"abbreviation. It normalizes the input to the standard vehicle registration "
"abbreviation for the given county. This field will only accept names written "
"with diacritics; consider using ROCountySelect as an alternative."
msgstr ""

# a10c44487512456da68dfabd735e73c2
#: ../../ref/contrib/localflavor.txt:1011
msgid ""
"A ``Select`` widget that uses a list of Romanian counties (judete) as its "
"choices."
msgstr ""

# 02232746e5614328ae86faf41e46bbac
#: ../../ref/contrib/localflavor.txt:1016
msgid ""
"A form field that validates its input as a Romanian International Bank "
"Account Number (IBAN). The valid format is ROXX-XXXX-XXXX-XXXX-XXXX-XXXX, "
"with or without hyphens."
msgstr ""

# 09ea8d5a94fa49d687afb741c4a50d7c
#: ../../ref/contrib/localflavor.txt:1022
msgid ""
"A form field that validates Romanian phone numbers, short special numbers "
"excluded."
msgstr ""

# bd93874994aa45a1b8932464f14156e1
#: ../../ref/contrib/localflavor.txt:1027
msgid "A form field that validates Romanian postal codes."
msgstr ""

# dfa55cc72d2f4842a4a0fe36aec31d20
#: ../../ref/contrib/localflavor.txt:1030
msgid "Russia (``ru``)"
msgstr ""

# 6505d82f38484deca3fa90ea29f52d2c
#: ../../ref/contrib/localflavor.txt:1036
msgid ""
"Russian Postal code field. The valid format is XXXXXX, where X is any digit "
"and the first digit is not zero."
msgstr ""

# 61521d69ff63436fbc205ca8cc7d3a05
#: ../../ref/contrib/localflavor.txt:1041
msgid ""
"A ``Select`` widget that uses a list of Russian Counties as its choices."
msgstr ""

# 27a336c6106b418e9aed044533b42f31
#: ../../ref/contrib/localflavor.txt:1045
msgid "A ``Select`` widget that uses a list of Russian Regions as its choices."
msgstr ""

# f4a1a151d4eb4d9eaa89b814f08e7c1b
#: ../../ref/contrib/localflavor.txt:1049
msgid ""
"Russian internal passport number. The valid format is XXXX XXXXXX, where X "
"is any digit."
msgstr ""

# 1a57e2d6808241dcb6a5914641ba7f40
#: ../../ref/contrib/localflavor.txt:1054
msgid ""
"Russian alien's passport number. The valid format is XX XXXXXXX, where X is "
"any digit."
msgstr ""

# 376cca384ea8413187b31738fafade5e
#: ../../ref/contrib/localflavor.txt:1058
msgid "Slovakia (``sk``)"
msgstr ""

# 478588fe60c74720b0e860781c9cc3c0
#: ../../ref/contrib/localflavor.txt:1062
msgid ""
"A form field that validates input as a Slovak postal code. Valid formats are "
"XXXXX or XXX XX, where X is a digit."
msgstr ""

# e0c875f8984a4bb6b813275e7eebee0a
#: ../../ref/contrib/localflavor.txt:1067
msgid ""
"A ``Select`` widget that uses a list of Slovak districts as its choices."
msgstr ""

# 7591f92e6d014b79a2bc1ead0fa159d4
#: ../../ref/contrib/localflavor.txt:1071
msgid "A ``Select`` widget that uses a list of Slovak regions as its choices."
msgstr ""

# 5a2c65b7f41e4abd9a4644b2c57bc3ac
#: ../../ref/contrib/localflavor.txt:1074
msgid "Slovenia (``si``)"
msgstr ""

# 1ca21d25e1a44752b78a4d2392336ea5
#: ../../ref/contrib/localflavor.txt:1078
msgid ""
"A form field that validates input as Slovenian personal identification "
"number and stores gender and birthday to self.info dictionary."
msgstr ""

# ab65c264d1294bd1b48ec414d0ee4f7b
#: ../../ref/contrib/localflavor.txt:1083
msgid ""
"A form field that validates input as a Slovenian tax number. Valid input is "
"SIXXXXXXXX or XXXXXXXX."
msgstr ""

# 7467062b3bdc407f91a175a3dd97f72e
#: ../../ref/contrib/localflavor.txt:1088
msgid ""
"A form field that validates input as a Slovenian phone number. Phone number "
"must contain at least local area code with optional country code."
msgstr ""

# 6b6d38ecbd33407e992f4967ee09717a
#: ../../ref/contrib/localflavor.txt:1093
msgid ""
"A form field that provides a choice field of major Slovenian postal codes."
msgstr ""

# 194e786202d44ec39768e33fb0903ee1
#: ../../ref/contrib/localflavor.txt:1098
msgid ""
"A ``Select`` widget that uses a list of major Slovenian postal codes as its "
"choices."
msgstr ""

# cd26748caf734a2d9f46dedd8d05c9a4
#: ../../ref/contrib/localflavor.txt:1103
msgid "South Africa (``za``)"
msgstr ""

# 51c477a922364e509ab97d89c761c3b5
#: ../../ref/contrib/localflavor.txt:1107
msgid ""
"A form field that validates input as a South African ID number. Validation "
"uses the Luhn checksum and a simplistic (i.e., not entirely accurate) check "
"for birth date."
msgstr ""

# 37461ced77054628958ad9cf43f22316
#: ../../ref/contrib/localflavor.txt:1113
msgid ""
"A form field that validates input as a South African postcode. Valid "
"postcodes must have four digits."
msgstr ""

# 8c535246808f46d29a677c04447f0427
#: ../../ref/contrib/localflavor.txt:1117
msgid "Spain (``es``)"
msgstr ""

# 46c9742c577c4e7bbbdbadd696049815
#: ../../ref/contrib/localflavor.txt:1121
msgid ""
"A form field that validates input as a Spanish NIF/NIE/CIF (Fiscal "
"Identification Number) code."
msgstr ""

# 863ecdf0636d438a880240bea3d4d959
#: ../../ref/contrib/localflavor.txt:1126
msgid ""
"A form field that validates input as a Spanish bank account number (Codigo "
"Cuenta Cliente or CCC). A valid CCC number has the format EEEE-OOOO-CC-"
"AAAAAAAAAA, where the E, O, C and A digits denote the entity, office, "
"checksum and account, respectively. The first checksum digit validates the "
"entity and office. The second checksum digit validates the account. It is "
"also valid to use a space as a delimiter, or to use no delimiter."
msgstr ""

# 9d7ebe15267f4e7abe301c8f315f0aec
#: ../../ref/contrib/localflavor.txt:1136
msgid ""
"A form field that validates input as a Spanish phone number. Valid numbers "
"have nine digits, the first of which is 6, 8 or 9."
msgstr ""

# b23aa84bcb284eecbafc194beb8be580
#: ../../ref/contrib/localflavor.txt:1141
msgid ""
"A form field that validates input as a Spanish postal code. Valid codes have "
"five digits, the first two being in the range 01 to 52, representing the "
"province."
msgstr ""

# 63e4d1f34b264e4ab9ca8341f648b369
#: ../../ref/contrib/localflavor.txt:1147
msgid ""
"A ``Select`` widget that uses a list of Spanish provinces as its choices."
msgstr ""

# 79bccafb4bd641518bb1baf86fc155b3
#: ../../ref/contrib/localflavor.txt:1151
msgid "A ``Select`` widget that uses a list of Spanish regions as its choices."
msgstr ""

# 4005b0f56c89422892f6e86216404348
#: ../../ref/contrib/localflavor.txt:1154
msgid "Sweden (``se``)"
msgstr ""

# 399e67107d3e4f9a80b753bd1095a832
#: ../../ref/contrib/localflavor.txt:1158
msgid ""
"A Select form widget that uses a list of the Swedish counties (län) as its "
"choices."
msgstr ""

# 520e44d29b224a9cae82887895868156
#: ../../ref/contrib/localflavor.txt:1161
msgid ""
"The cleaned value is the official county code -- see http://en.wikipedia.org/"
"wiki/Counties_of_Sweden for a list."
msgstr ""

# 266fd015443f4f97bb33f284ccf55647
#: ../../ref/contrib/localflavor.txt:1166
msgid ""
"A form field that validates input as a Swedish organisation number "
"(organisationsnummer)."
msgstr ""

# 9675ea01075f4751ba1e2733adc126aa
#: ../../ref/contrib/localflavor.txt:1169
msgid ""
"It accepts the same input as SEPersonalIdentityField (for sole "
"proprietorships (enskild firma). However, co-ordination numbers are not "
"accepted."
msgstr ""

# 81fbe872f9654a6e93d6d0ae027166b0
#: ../../ref/contrib/localflavor.txt:1173
msgid ""
"It also accepts ordinary Swedish organisation numbers with the format "
"NNNNNNNNNN."
msgstr ""

# dbda837d54f649e69ab1c35467566e4a
#: ../../ref/contrib/localflavor.txt:1176
msgid ""
"The return value will be YYYYMMDDXXXX for sole proprietors, and NNNNNNNNNN "
"for other organisations."
msgstr ""

# dc0af96261bd4e2ea8a6d0aa409d7d43
#: ../../ref/contrib/localflavor.txt:1181
msgid ""
"A form field that validates input as a Swedish personal identity number "
"(personnummer)."
msgstr ""

# b0d8101c4e604912929afdc16002c8f2
#: ../../ref/contrib/localflavor.txt:1184
msgid ""
"The correct formats are YYYYMMDD-XXXX, YYYYMMDDXXXX, YYMMDD-XXXX, YYMMDDXXXX "
"and YYMMDD+XXXX."
msgstr ""

# 1360af178d9144d79ce6ccd0fa39a86f
#: ../../ref/contrib/localflavor.txt:1187
msgid ""
"A \\+ indicates that the person is older than 100 years, which will be taken "
"into consideration when the date is validated."
msgstr ""

# 0df666d78a584a48bd5a64027b21d128
#: ../../ref/contrib/localflavor.txt:1190
msgid ""
"The checksum will be calculated and checked. The birth date is checked to be "
"a valid date."
msgstr ""

# 3cd0876b7534464b98ba7e50a637ef53
#: ../../ref/contrib/localflavor.txt:1193
msgid ""
"By default, co-ordination numbers (samordningsnummer) will be accepted. To "
"only allow real personal identity numbers, pass the keyword argument "
"coordination_number=False to the constructor."
msgstr ""

# 090a0da0c83546a8a921944a612f4870
#: ../../ref/contrib/localflavor.txt:1197
msgid "The cleaned value will always have the format YYYYMMDDXXXX."
msgstr ""

# c0d542ab2d1e40028b42ee4fd3d973ba
#: ../../ref/contrib/localflavor.txt:1201
msgid ""
"A form field that validates input as a Swedish postal code (postnummer). "
"Valid codes consist of five digits (XXXXX). The number can optionally be "
"formatted with a space after the third digit (XXX XX)."
msgstr ""

# dccaa5ac3e9e48f0a1f2770681c17e8b
#: ../../ref/contrib/localflavor.txt:1205
msgid "The cleaned value will never contain the space."
msgstr ""

# bc086f58edca4bd6bdc5ee85cd5014cd
#: ../../ref/contrib/localflavor.txt:1208
msgid "Switzerland (``ch``)"
msgstr ""

# 4e037a956eca4d799971d7584be56f7b
#: ../../ref/contrib/localflavor.txt:1212
msgid ""
"A form field that validates input as a Swiss identity card number. A valid "
"number must confirm to the X1234567<0 or 1234567890 format and have the "
"correct checksums."
msgstr ""

# f868ad1442e04bf2969b5259ce77ae05
#: ../../ref/contrib/localflavor.txt:1218
msgid ""
"A form field that validates input as a Swiss phone number. The correct "
"format is 0XX XXX XX XX. 0XX.XXX.XX.XX and 0XXXXXXXXX validate but are "
"corrected to 0XX XXX XX XX."
msgstr ""

# c9d8653b77364c78b53dbd4494476ba2
#: ../../ref/contrib/localflavor.txt:1224
msgid ""
"A form field that validates input as a Swiss zip code. Valid codes consist "
"of four digits."
msgstr ""

# c9e9207020c74cddbd0beb64d52b4222
#: ../../ref/contrib/localflavor.txt:1229
msgid "A ``Select`` widget that uses a list of Swiss states as its choices."
msgstr ""

# 6981be669e5745f09f3a3d78f0105f2f
#: ../../ref/contrib/localflavor.txt:1232
msgid "Turkey (``tr``)"
msgstr ""

# fc0dbec084fb4c37bb699e4933d5a525
#: ../../ref/contrib/localflavor.txt:1236
msgid ""
"A form field that validates input as a Turkish zip code. Valid codes consist "
"of five digits."
msgstr ""

# 4de987633066491f8b2a94db772e48e0
#: ../../ref/contrib/localflavor.txt:1241
msgid ""
"A form field that validates input as a Turkish phone number. The correct "
"format is 0xxx xxx xxxx. +90xxx xxx xxxx and inputs without spaces also "
"validates. The result is normalized to xxx xxx xxxx format."
msgstr ""

# 7e7d27212d49466387ba67bffb1c3749
#: ../../ref/contrib/localflavor.txt:1247
msgid ""
"A form field that validates input as a TR identification number. A valid "
"number must satisfy the following:"
msgstr ""

# 4638b6f0a888426898431a166769f9d0
#: ../../ref/contrib/localflavor.txt:1250
msgid "The number consist of 11 digits."
msgstr ""

# a49b6f4b54124074a10dd703a639e715
#: ../../ref/contrib/localflavor.txt:1251
msgid "The first digit cannot be 0."
msgstr ""

# 2b5371cda084481d9d2ca8085e32ed6a
#: ../../ref/contrib/localflavor.txt:1252
msgid ""
"(sum(1st, 3rd, 5th, 7th, 9th)*7 - sum(2nd,4th,6th,8th)) % 10) must be equal "
"to the 10th digit."
msgstr ""

# 81b38df2353e4bad9860f00271abea5b
#: ../../ref/contrib/localflavor.txt:1254
msgid "(sum(1st to 10th) % 10) must be equal to the 11th digit."
msgstr ""

# 1fc8476304934740af68861023561d96
#: ../../ref/contrib/localflavor.txt:1258
msgid ""
"A ``select`` widget that uses a list of Turkish provinces as its choices."
msgstr ""

# 5cfa60a5fe5d4201b8b4ac95e1d602b9
#: ../../ref/contrib/localflavor.txt:1261
msgid "United Kingdom (``gb``)"
msgstr ""

# 015b194e0b97465e9bb82559be1b543c
#: ../../ref/contrib/localflavor.txt:1265
msgid ""
"A form field that validates input as a UK postcode. The regular expression "
"used is sourced from the schema for British Standard BS7666 address types at "
"http://www.cabinetoffice.gov.uk/media/291293/bs7666-v2-0.xml."
msgstr ""

# 27f6b49d4c2b4c149623e19e7c446784
#: ../../ref/contrib/localflavor.txt:1271
msgid ""
"A ``Select`` widget that uses a list of UK counties/regions as its choices."
msgstr ""

# 5c42ced2c3ef4a76a56d737936504323
#: ../../ref/contrib/localflavor.txt:1275
msgid "A ``Select`` widget that uses a list of UK nations as its choices."
msgstr ""

# a325a3039ec7470c84de9acacb9ec2a3
#: ../../ref/contrib/localflavor.txt:1278
msgid "United States of America (``us``)"
msgstr ""

# 3114326ae2f34b3888028e541abdd598
#: ../../ref/contrib/localflavor.txt:1282
msgid "A form field that validates input as a U.S. phone number."
msgstr ""

# 15343d5bec724664b9576c232bdb1ecd
#: ../../ref/contrib/localflavor.txt:1286
msgid ""
"A form field that validates input as a U.S. Social Security Number (SSN). A "
"valid SSN must obey the following rules:"
msgstr ""

# bbec16ab84e14f6da1690980c6ffe21a
#: ../../ref/contrib/localflavor.txt:1289
msgid "Format of XXX-XX-XXXX"
msgstr ""

# 6138a532eeda4bb5883ec97a7d4412f8
#: ../../ref/contrib/localflavor.txt:1290
msgid "No group of digits consisting entirely of zeroes"
msgstr ""

# 98399d8cff854377b15bd06030a1b0f3
#: ../../ref/contrib/localflavor.txt:1291
msgid "Leading group of digits cannot be 666"
msgstr ""

# d98aadece5b6431cb772dfc60f83235f
#: ../../ref/contrib/localflavor.txt:1292
msgid "Number not in promotional block 987-65-4320 through 987-65-4329"
msgstr ""

# a665947d488c49da944e3cf38d05e384
#: ../../ref/contrib/localflavor.txt:1293
msgid ""
"Number not one known to be invalid due to widespread promotional use or "
"distribution (e.g., the Woolworth's number or the 1962 promotional number)"
msgstr ""

# 0cc2f648b2874c7d8b6985deb30533b9
#: ../../ref/contrib/localflavor.txt:1299
msgid ""
"A form field that validates input as a U.S. state name or abbreviation. It "
"normalizes the input to the standard two-letter postal service abbreviation "
"for the given state."
msgstr ""

# fea0256b868c4d0d9e4792c2d8046291
#: ../../ref/contrib/localflavor.txt:1305
msgid ""
"A form field that validates input as a U.S. ZIP code. Valid formats are "
"XXXXX or XXXXX-XXXX."
msgstr ""

# 45bb0577b7144eb29f25aa2c34e9b8e8
#: ../../ref/contrib/localflavor.txt:1310
msgid ""
"A form ``Select`` widget that uses a list of U.S. states/territories as its "
"choices."
msgstr ""

# 4af577974a6b45739132208007452eb7
#: ../../ref/contrib/localflavor.txt:1315
msgid ""
"A form ``Select`` widget that uses a list of U.S Postal Service state, "
"territory and country abbreviations as its choices."
msgstr ""

# c183613594f440d18c16c55b46138229
#: ../../ref/contrib/localflavor.txt:1320
msgid ""
"A :class:`CharField` that checks that the value is a valid U.S.A.-style "
"phone number (in the format ``XXX-XXX-XXXX``)."
msgstr ""

# 9c3b6bd5c723419da46a99d9b9aaba10
#: ../../ref/contrib/localflavor.txt:1325
msgid ""
"A model field that forms represent as a ``forms.USStateField`` field and "
"stores the two-letter U.S. state abbreviation in the database."
msgstr ""

# 3436f7d83c3945c087e02a5ae53d5263
#: ../../ref/contrib/localflavor.txt:1330
msgid ""
"A model field that forms represent as a ``forms.USPSSelect`` field and "
"stores the two-letter U.S Postal Service abbreviation in the database."
msgstr ""

# d917f3c26d694b0bb249574a9b332a48
#: ../../ref/contrib/localflavor.txt:1334
msgid ""
"Additionally, a variety of choice tuples are provided in ``django.contrib."
"localflavor.us.us_states``, allowing customized model and form fields, and "
"form presentations, for subsets of U.S states, territories and U.S Postal "
"Service abbreviations:"
msgstr ""

# 06a1ebc4c8bb4a95b0e419f5a1b6dc00
#: ../../ref/contrib/localflavor.txt:1341
msgid ""
"A tuple of choices of the postal abbreviations for the contiguous or \"lower "
"48\" states (i.e., all except Alaska and Hawaii), plus the District of "
"Columbia."
msgstr ""

# 6bbbefc3b289484f813edecdd60bb9c6
#: ../../ref/contrib/localflavor.txt:1347
msgid ""
"A tuple of choices of the postal abbreviations for all 50 U.S. states, plus "
"the District of Columbia."
msgstr ""

# 91d2d9a407bd4592bef60fdfcfa3fcbb
#: ../../ref/contrib/localflavor.txt:1352
msgid ""
"A tuple of choices of the postal abbreviations for U.S territories: American "
"Samoa, Guam, the Northern Mariana Islands, Puerto Rico and the U.S. Virgin "
"Islands."
msgstr ""

# ecf07d08f17644a89d6a539ffbba5952
#: ../../ref/contrib/localflavor.txt:1358
msgid ""
"A tuple of choices of the postal abbreviations of the three U.S military "
"postal \"states\": Armed Forces Americas, Armed Forces Europe and Armed "
"Forces Pacific."
msgstr ""

# a6e5721450784a74bd4d12459caa6f65
#: ../../ref/contrib/localflavor.txt:1364
msgid ""
"A tuple of choices of the postal abbreviations of the three independent "
"nations which, under the Compact of Free Association, are served by the U.S. "
"Postal Service: the Federated States of Micronesia, the Marshall Islands and "
"Palau."
msgstr ""

# 11df5fb88927429fbf1f5103ba721944
#: ../../ref/contrib/localflavor.txt:1371
msgid ""
"A tuple of choices of obsolete U.S Postal Service state abbreviations: the "
"former abbreviation for the Northern Mariana Islands, plus the Panama Canal "
"Zone, the Philippines and the former Pacific trust territories."
msgstr ""

# f1e63b74e54745c9b06059e36001193d
#: ../../ref/contrib/localflavor.txt:1378
msgid ""
"A tuple of choices of all postal abbreviations corresponding to U.S states "
"or territories, and the District of Columbia.."
msgstr ""

# f76fe7962321488ebc34dfbf8025ca04
#: ../../ref/contrib/localflavor.txt:1383
msgid ""
"A tuple of choices of all postal abbreviations recognized by the U.S Postal "
"Service (including all states and territories, the District of Columbia, "
"armed forces \"states\" and independent nations serviced by USPS)."
msgstr ""

# bc187f6b9c674921bd48aa09e236e63d
#: ../../ref/contrib/localflavor.txt:1389
msgid "Uruguay (``uy``)"
msgstr ""

# f114737237674a61b246ced620e57e9e
#: ../../ref/contrib/localflavor.txt:1393
msgid "A field that validates Uruguayan 'Cedula de identidad' (CI) numbers."
msgstr ""

# 3391490f9d6f4a08b7caa20e06e69fa3
#: ../../ref/contrib/localflavor.txt:1397
msgid ""
"A ``Select`` widget that uses a list of  Uruguayan departments as its "
"choices."
msgstr ""

# 3de99d3c4e4f4752a2e502de5aef0a18
# 441199f827b54c528727ae79926214c3
#: ../../ref/contrib/markup.txt:3 ../../ref/templates/builtins.txt:2404
msgid "django.contrib.markup"
msgstr ""

# 3837000848d94e68afce7473c9e182df
#: ../../ref/contrib/markup.txt:8
msgid ""
"Django provides template filters that implement the following markup "
"languages:"
msgstr ""

# b0c08ce467b24c6f8250fee20c1eb041
#: ../../ref/contrib/markup.txt:11
msgid "``textile`` -- implements `Textile`_ -- requires `PyTextile`_"
msgstr ""

# a029d6044abc4778bda28849b44016ae
#: ../../ref/contrib/markup.txt:12
msgid "``markdown`` -- implements `Markdown`_ -- requires `Python-markdown`_"
msgstr ""

# 6f31b3d1ab75452290469048e3bd71b8
#: ../../ref/contrib/markup.txt:13
msgid ""
"``restructuredtext`` -- implements `reST (reStructured Text)`_ -- requires "
"`doc-utils`_"
msgstr ""

# 177ddf6d19e14f06bd3fa57341f8302e
#: ../../ref/contrib/markup.txt:16
msgid ""
"In each case, the filter expects formatted markup as a string and returns a "
"string representing the marked-up text. For example, the ``textile`` filter "
"converts text that is marked-up in Textile format to HTML."
msgstr ""

# 36ce774e21df447684519c0f48bb4b88
#: ../../ref/contrib/markup.txt:21
msgid ""
"To activate these filters, add ``'django.contrib.markup'`` to your :setting:"
"`INSTALLED_APPS` setting. Once you've done that, use ``{% load markup %}`` "
"in a template, and you'll have access to these filters. For more "
"documentation, read the source code in :file:`django/contrib/markup/"
"templatetags/markup.py`."
msgstr ""

# fa63f610654246d39996778902435464
#: ../../ref/contrib/markup.txt:29
msgid ""
"The output of markup filters is marked \"safe\" and will not be escaped when "
"rendered in a template. Always be careful to sanitize your inputs and make "
"sure you are not leaving yourself vulnerable to cross-site scripting or "
"other types of attacks."
msgstr ""

# 58120e90df404e0e8d6fa14b82d841cd
#: ../../ref/contrib/markup.txt:42
msgid "reStructured Text"
msgstr ""

# 8d785a0697b24a8488f631fe6b95d3d5
#: ../../ref/contrib/markup.txt:44
msgid ""
"When using the ``restructuredtext`` markup filter you can define a :setting:"
"`RESTRUCTUREDTEXT_FILTER_SETTINGS` in your django settings to override the "
"default writer settings. See the `restructuredtext writer settings`_ for "
"details on what these settings are."
msgstr ""

# b573b88c6ab2411aa258f7a450be28f9
#: ../../ref/contrib/messages.txt:3
msgid "The messages framework"
msgstr ""

# b770e504421141e9818b16c8af75987b
#: ../../ref/contrib/messages.txt:8
msgid ""
"Django provides full support for cookie- and session-based messaging, for "
"both anonymous and authenticated clients. The messages framework allows you "
"to temporarily store messages in one request and retrieve them for display "
"in a subsequent request (usually the next one). Every message is tagged with "
"a specific ``level`` that determines its priority (e.g., ``info``, "
"``warning``, or ``error``)."
msgstr ""

# eea2ad75c78447a78896d065102aed55
#: ../../ref/contrib/messages.txt:19
msgid "Enabling messages"
msgstr ""

# 51ab81936d1f454792a280bac413e5f9
#: ../../ref/contrib/messages.txt:21
msgid ""
"Messages are implemented through a :doc:`middleware </ref/middleware>` class "
"and corresponding :doc:`context processor </ref/templates/api>`."
msgstr ""

# 0679bc65ad634062a013238c28653573
#: ../../ref/contrib/messages.txt:24
msgid "To enable message functionality, do the following:"
msgstr ""

# 5388027d8ee8449c95ac14c4381a9b06
#: ../../ref/contrib/messages.txt:26
msgid ""
"Edit the :setting:`MIDDLEWARE_CLASSES` setting and make sure it contains "
"``'django.contrib.messages.middleware.MessageMiddleware'``."
msgstr ""

# d5876ed68787422996aca7690edaed59
#: ../../ref/contrib/messages.txt:29
msgid ""
"If you are using a :ref:`storage backend <message-storage-backends>` that "
"relies on :doc:`sessions </topics/http/sessions>` (the default), ``'django."
"contrib.sessions.middleware.SessionMiddleware'`` must be enabled and appear "
"before ``MessageMiddleware`` in your :setting:`MIDDLEWARE_CLASSES`."
msgstr ""

# 0cc5563ed3fc4f6587f7e9090f54c256
#: ../../ref/contrib/messages.txt:35
msgid ""
"Edit the :setting:`TEMPLATE_CONTEXT_PROCESSORS` setting and make sure it "
"contains ``'django.contrib.messages.context_processors.messages'``."
msgstr ""

# 2ab37fe907c640b2ab5cf6b03722cb2c
#: ../../ref/contrib/messages.txt:38
msgid ""
"Add ``'django.contrib.messages'`` to your :setting:`INSTALLED_APPS` setting"
msgstr ""

# 1f2cbbdfbaa0411a97d0c7357135a24c
#: ../../ref/contrib/messages.txt:41
msgid ""
"The default ``settings.py`` created by ``django-admin.py startproject`` has "
"``MessageMiddleware`` activated and the ``django.contrib.messages`` app "
"installed. Also, the default value for :setting:"
"`TEMPLATE_CONTEXT_PROCESSORS` contains ``'django.contrib.messages."
"context_processors.messages'``."
msgstr ""

# 055b8b6e99084eefbb057e44abcfb46b
#: ../../ref/contrib/messages.txt:46
msgid ""
"If you don't want to use messages, you can remove the ``MessageMiddleware`` "
"line from :setting:`MIDDLEWARE_CLASSES`, the ``messages`` context processor "
"from :setting:`TEMPLATE_CONTEXT_PROCESSORS` and ``'django.contrib."
"messages'`` from your :setting:`INSTALLED_APPS`."
msgstr ""

# 7b53b390da8b41fabe8ac464989e8f5f
#: ../../ref/contrib/messages.txt:52
msgid "Configuring the message engine"
msgstr ""

# d68897aae1f9439191d79dbc794d0a53
#: ../../ref/contrib/messages.txt:57
msgid "Storage backends"
msgstr ""

# 96cb928007a2426d9cb9afd211d68dbc
#: ../../ref/contrib/messages.txt:59
msgid ""
"The messages framework can use different backends to store temporary "
"messages. To change which backend is being used, add a `MESSAGE_STORAGE`_ to "
"your settings, referencing the module and class of the storage class. For "
"example::"
msgstr ""

# 8bef756b037c4c7bbef5df3f3ce675b2
#: ../../ref/contrib/messages.txt:66
msgid "The value should be the full path of the desired storage class."
msgstr ""

# af13564e0d9043889c011d671fd0b2ac
#: ../../ref/contrib/messages.txt:68
msgid "Four storage classes are included:"
msgstr ""

# 6d6b324f26b54934a29c7c5cdf02d076
#: ../../ref/contrib/messages.txt:71
msgid ""
"This class stores all messages inside of the request's session. It requires "
"Django's ``contrib.sessions`` application."
msgstr ""

# 5e662bb85a294baabeb671e2220d4fbe
#: ../../ref/contrib/messages.txt:75
msgid ""
"This class stores the message data in a cookie (signed with a secret hash to "
"prevent manipulation) to persist notifications across requests. Old messages "
"are dropped if the cookie data size would exceed 4096 bytes."
msgstr ""

# b0a27fbc8d294712acf8eed81ecd9c97
#: ../../ref/contrib/messages.txt:80
msgid ""
"This class first uses CookieStorage for all messages, falling back to using "
"SessionStorage for the messages that could not fit in a single cookie."
msgstr ""

# e4bf54b116a74f9594ab17c22ec4bd38
#: ../../ref/contrib/messages.txt:83
msgid ""
"Since it is uses SessionStorage, it also requires Django's ``contrib."
"sessions`` application."
msgstr ""

# 949702e2b272425fb39210269c980ffc
#: ../../ref/contrib/messages.txt:86
msgid ""
"To write your own storage class, subclass the ``BaseStorage`` class in "
"``django.contrib.messages.storage.base`` and implement the ``_get`` and "
"``_store`` methods."
msgstr ""

# 9dcef9760d7c4a0e9a54ad8c424244cb
#: ../../ref/contrib/messages.txt:91
msgid "Message levels"
msgstr ""

# f566cf9fbda54bb6a47bc76b6e6be709
#: ../../ref/contrib/messages.txt:93
msgid ""
"The messages framework is based on a configurable level architecture similar "
"to that of the Python logging module. Message levels allow you to group "
"messages by type so they can be filtered or displayed differently in views "
"and templates."
msgstr ""

# aedf04e75d6d4f34a56cd41a99a8511b
#: ../../ref/contrib/messages.txt:98
msgid ""
"The built-in levels (which can be imported from ``django.contrib.messages`` "
"directly) are:"
msgstr ""

# 696290c1cd3d432a8f5641444d2a404f
#: ../../ref/contrib/messages.txt:102
msgid "Constant"
msgstr ""

# f831150cbe204f5abee847938da7ebb4
#: ../../ref/contrib/messages.txt:102
msgid "Purpose"
msgstr ""

# 3fffef8dbb94489aab1ec1f7af30e782
# 35fd63604f1042728fffe7bd75d2a460
# 71a7c4ca2ece4f799cf05e698398611b
#: ../../ref/contrib/messages.txt:104 ../../ref/contrib/messages.txt:131
#: ../../ref/contrib/messages.txt:209
msgid "``DEBUG``"
msgstr ""

# 0db3bef4c0fd4da79eaa51b136786f94
#: ../../ref/contrib/messages.txt:104
msgid ""
"Development-related messages that will be ignored (or removed) in a "
"production deployment"
msgstr ""

# e8718bf6f1464837a3907a64488c6768
# 69f272592a604fff9d176e5206a94beb
# 87d519b45084488fa27ae872c0621c77
#: ../../ref/contrib/messages.txt:105 ../../ref/contrib/messages.txt:132
#: ../../ref/contrib/messages.txt:210
msgid "``INFO``"
msgstr ""

# 1b3fde5831d6479fb6b608a8cb9af9a0
#: ../../ref/contrib/messages.txt:105
msgid "Informational messages for the user"
msgstr ""

# b2271eb51dd243f98210445ce1a76f27
# 99ea81817adb425385467bbc809c19c4
# bf408ca64b4645dba45fda7be5d3039e
#: ../../ref/contrib/messages.txt:106 ../../ref/contrib/messages.txt:133
#: ../../ref/contrib/messages.txt:211
msgid "``SUCCESS``"
msgstr ""

# 52ebb75b5e1c43418fa2642e6b31d11a
#: ../../ref/contrib/messages.txt:106
msgid ""
"An action was successful, e.g. \"Your profile was updated successfully\""
msgstr ""

# d57ff67496084e5da8fb0251f40ba33f
# 1bf45de1379e4a0a9f2c27759b155c8d
# 3cf2788c2e8741c0b94b8c5c6e3ddbc8
#: ../../ref/contrib/messages.txt:107 ../../ref/contrib/messages.txt:134
#: ../../ref/contrib/messages.txt:212
msgid "``WARNING``"
msgstr ""

# ad6b9a9000d84634b978a2d072afc0c6
#: ../../ref/contrib/messages.txt:107
msgid "A failure did not occur but may be imminent"
msgstr ""

# adf674ed728c4c998f7a84b196b1dce5
# 3a34c4535bde419db5c9a53abf7b6f18
# 30ca90da36cb47fcb0ced9a9989490ff
#: ../../ref/contrib/messages.txt:108 ../../ref/contrib/messages.txt:135
#: ../../ref/contrib/messages.txt:213
msgid "``ERROR``"
msgstr ""

# 6b7225c1dc8240c686810dce12c16df7
#: ../../ref/contrib/messages.txt:108
msgid "An action was **not** successful or some other failure occurred"
msgstr ""

# c21fd0df0fd3441b83ec9bdd14db0ed2
#: ../../ref/contrib/messages.txt:111
msgid ""
"The `MESSAGE_LEVEL`_ setting can be used to change the minimum recorded "
"level (or it can be `changed per request`_). Attempts to add messages of a "
"level less than this will be ignored."
msgstr ""

# 323da50f5d354198af3cc7c43729687a
#: ../../ref/contrib/messages.txt:118
msgid "Message tags"
msgstr ""

# 7949fc6300aa4d14b542e643fefa1391
#: ../../ref/contrib/messages.txt:120
msgid ""
"Message tags are a string representation of the message level plus any extra "
"tags that were added directly in the view (see `Adding extra message tags`_ "
"below for more details). Tags are stored in a string and are separated by "
"spaces. Typically, message tags are used as CSS classes to customize message "
"style based on message type. By default, each level has a single tag that's "
"a lowercase version of its own constant:"
msgstr ""

# c364128ac54c4a44961bf159e7801c8d
# 6eb62ec4526d417ead2828a1099e71d0
#: ../../ref/contrib/messages.txt:129 ../../ref/contrib/messages.txt:207
msgid "Level Constant"
msgstr ""

# d837264e579f47118c0f6f013ec38999
#: ../../ref/contrib/messages.txt:129
msgid "Tag"
msgstr ""

# 9fc78a93cd82422a90ceeee8254e8b41
#: ../../ref/contrib/messages.txt:131
msgid "``debug``"
msgstr ""

# f296b1fa2b3a4d168c8edaa2ddc4b560
#: ../../ref/contrib/messages.txt:132
msgid "``info``"
msgstr ""

# b448d8dbaa1948d6b199887f330a90b8
#: ../../ref/contrib/messages.txt:133
msgid "``success``"
msgstr ""

# 5a8bf823ac2e4d78981b7b4ad0cd5742
#: ../../ref/contrib/messages.txt:134
msgid "``warning``"
msgstr ""

# cff52c6b988f47ebb9598d51a295367f
#: ../../ref/contrib/messages.txt:135
msgid "``error``"
msgstr ""

# 6aa6dbd497f04203b7a2f899f4775c18
#: ../../ref/contrib/messages.txt:138
msgid ""
"To change the default tags for a message level (either built-in or custom), "
"set the `MESSAGE_TAGS`_ setting to a dictionary containing the levels you "
"wish to change. As this extends the default tags, you only need to provide "
"tags for the levels you wish to override::"
msgstr ""

# 0f29d9e4c46a48a1b131559319386fcd
#: ../../ref/contrib/messages.txt:150
msgid "Using messages in views and templates"
msgstr ""

# 4323c5b583ad467ca325f5493c917989
#: ../../ref/contrib/messages.txt:153
msgid "Adding a message"
msgstr ""

# 8323c6dac1684c39bc601d80a8efd36f
#: ../../ref/contrib/messages.txt:155
msgid "To add a message, call::"
msgstr ""

# 251ecf6509db4cc093b60afe1d554648
#: ../../ref/contrib/messages.txt:160
msgid ""
"Some shortcut methods provide a standard way to add messages with commonly "
"used tags (which are usually represented as HTML classes for the message)::"
msgstr ""

# 6f7bdffb97e543e8b18eb44936a3a646
#: ../../ref/contrib/messages.txt:170
msgid "Displaying messages"
msgstr ""

# 2e1036c3ba214f0aaa790ce9c6d4fa6a
#: ../../ref/contrib/messages.txt:172
msgid "In your template, use something like::"
msgstr ""

# 9583b7a57519450aa1053d3ac598c562
#: ../../ref/contrib/messages.txt:182
msgid ""
"If you're using the context processor, your template should be rendered with "
"a ``RequestContext``. Otherwise, ensure ``messages`` is available to the "
"template context."
msgstr ""

# b30b3efca3cf458ab49884e6509cc070
#: ../../ref/contrib/messages.txt:186
msgid ""
"Even if you know there is only just one message, you should still iterate "
"over the ``messages`` sequence, because otherwise the message storage will "
"not be cleared for the next request."
msgstr ""

# 86e2cb79140a41cbb95c1e5ccd4fa74d
#: ../../ref/contrib/messages.txt:191
msgid "Creating custom message levels"
msgstr ""

# 4d771521cae343aeba658507a1a27433
#: ../../ref/contrib/messages.txt:193
msgid ""
"Messages levels are nothing more than integers, so you can define your own "
"level constants and use them to create more customized user feedback, e.g.::"
msgstr ""

# 622b83eecd4248fb877edcbccf4ae80a
#: ../../ref/contrib/messages.txt:201
msgid ""
"When creating custom message levels you should be careful to avoid "
"overloading existing levels. The values for the built-in levels are:"
msgstr ""

# 4f25c83c6f1a449494aa2a996d6e6609
# 9ffb6c0eb05a41be9d19de6a1708343e
# 0cc8cce51765433293fa13651b1bde98
# bf0b62e54e644699ae8885a6d6fbf215
# 098413b5607546c3939492da0f5b3e91
#: ../../ref/contrib/messages.txt:207 ../../ref/signals.txt:72
#: ../../ref/signals.txt:289 ../../ref/signals.txt:315
#: ../../ref/templates/builtins.txt:2343
msgid "Value"
msgstr ""

# d1443ace7cea4764af8e8016ba996998
#: ../../ref/contrib/messages.txt:209
msgid "10"
msgstr ""

# 67b35d540cb74b87a60d24f490ef82a3
#: ../../ref/contrib/messages.txt:210
msgid "20"
msgstr ""

# 3548a9b9270a4c06a9e3ef79aae6a26b
#: ../../ref/contrib/messages.txt:211
msgid "25"
msgstr ""

# 1a2ebd4c2f1640d6a7e2499476dbfc09
#: ../../ref/contrib/messages.txt:212
msgid "30"
msgstr ""

# c05e45fc48e648ac8f1079ae4c15044c
#: ../../ref/contrib/messages.txt:213
msgid "40"
msgstr ""

# 67a97e517ccb42c4926ae802553ee702
#: ../../ref/contrib/messages.txt:216
msgid ""
"If you need to identify the custom levels in your HTML or CSS, you need to "
"provide a mapping via the `MESSAGE_TAGS`_ setting."
msgstr ""

# 77b83fc68f304e2f84ad2a5331983f6c
#: ../../ref/contrib/messages.txt:220
msgid ""
"If you are creating a reusable application, it is recommended to use only "
"the built-in `message levels`_ and not rely on any custom levels."
msgstr ""

# cb81eaa278754e818f7ef27c34889e62
#: ../../ref/contrib/messages.txt:224
msgid "Changing the minimum recorded level per-request"
msgstr ""

# 375717464ce84a2991d403ed2ca9b1fa
#: ../../ref/contrib/messages.txt:226
msgid ""
"The minimum recorded level can be set per request via the ``set_level`` "
"method::"
msgstr ""

# 50d1654b7d8240c8a5c25fce66c69fe1
#: ../../ref/contrib/messages.txt:243
msgid ""
"Similarly, the current effective level can be retrieved with ``get_level``::"
msgstr ""

# eb5fca3cbbcd4a538971f98d0882cb9a
#: ../../ref/contrib/messages.txt:248
msgid ""
"For more information on how the minimum recorded level functions, see "
"`Message levels`_ above."
msgstr ""

# 811e63b4116847a5a98b23124e8b6ec4
#: ../../ref/contrib/messages.txt:252
msgid "Adding extra message tags"
msgstr ""

# 283855bbe28b485ab426fbea6bdcb8e3
#: ../../ref/contrib/messages.txt:254
msgid ""
"For more direct control over message tags, you can optionally provide a "
"string containing extra tags to any of the add methods::"
msgstr ""

# ae9e399136514ce88dde1ab7444708bf
#: ../../ref/contrib/messages.txt:261
msgid ""
"Extra tags are added before the default tag for that level and are space "
"separated."
msgstr ""

# b2a761d28203485b80fd9fef8126d69c
#: ../../ref/contrib/messages.txt:265
msgid "Failing silently when the message framework is disabled"
msgstr ""

# 3c3767ed93cc484b97301caf9ca158d6
#: ../../ref/contrib/messages.txt:267
msgid ""
"If you're writing a reusable app (or other piece of code) and want to "
"include messaging functionality, but don't want to require your users to "
"enable it if they don't want to, you may pass an additional keyword argument "
"``fail_silently=True`` to any of the ``add_message`` family of methods. For "
"example::"
msgstr ""

# 1c6a68dcc95647509b8b71167f6f8d96
#: ../../ref/contrib/messages.txt:277
msgid ""
"Internally, Django uses this functionality in the create, update, and "
"delete :doc:`generic views </topics/http/generic-views>` so that they work "
"even if the message framework is disabled."
msgstr ""

# 1cc37334b60d477d8d46b4dc17762e2d
#: ../../ref/contrib/messages.txt:282
msgid ""
"Setting ``fail_silently=True`` only hides the ``MessageFailure`` that would "
"otherwise occur when the messages framework disabled and one attempts to use "
"one of the ``add_message`` family of methods. It does not hide failures that "
"may occur for other reasons."
msgstr ""

# d9403791fd044eee8efe6101ddbd7b74
#: ../../ref/contrib/messages.txt:288
msgid "Expiration of messages"
msgstr ""

# 52f6f6c1eb1a489a90574adf7e481de1
#: ../../ref/contrib/messages.txt:290
msgid ""
"The messages are marked to be cleared when the storage instance is iterated "
"(and cleared when the response is processed)."
msgstr ""

# 2b5cb73bd32e4353b5ccd821523bf4e0
#: ../../ref/contrib/messages.txt:293
msgid ""
"To avoid the messages being cleared, you can set the messages storage to "
"``False`` after iterating::"
msgstr ""

# af8256391d0642f28b1def5d160f7f8d
#: ../../ref/contrib/messages.txt:302
msgid "Behavior of parallel requests"
msgstr ""

# cdcbaa776bb44e0abec160cd54767861
#: ../../ref/contrib/messages.txt:304
msgid ""
"Due to the way cookies (and hence sessions) work, **the behavior of any "
"backends that make use of cookies or sessions is undefined when the same "
"client makes multiple requests that set or get messages in parallel**. For "
"example, if a client initiates a request that creates a message in one "
"window (or tab) and then another that fetches any uniterated messages in "
"another window, before the first window redirects, the message may appear in "
"the second window instead of the first window where it may be expected."
msgstr ""

# 951f0e3fea1647a99515da803272d0dc
#: ../../ref/contrib/messages.txt:312
msgid ""
"In short, when multiple simultaneous requests from the same client are "
"involved, messages are not guaranteed to be delivered to the same window "
"that created them nor, in some cases, at all. Note that this is typically "
"not a problem in most applications and will become a non-issue in HTML5, "
"where each window/tab will have its own browsing context."
msgstr ""

# ebd14ea08d4e4ac3aeb2ae7ae14180da
#: ../../ref/contrib/messages.txt:321
msgid ""
"A few :doc:`Django settings </ref/settings>` give you control over message "
"behavior:"
msgstr ""

# 01dfa0fd929d45a9a02b934332652ff5
# 6abb41ff064e4fe2ad14917c8ed1746c
#: ../../ref/contrib/messages.txt:325 ../../ref/settings.txt:1427
msgid "MESSAGE_LEVEL"
msgstr ""

# fb1c8f8a89254c72ace39f5f285602d3
#: ../../ref/contrib/messages.txt:327
msgid "Default: ``messages.INFO``"
msgstr ""

# 21f527fdb19e47e0941f35631b219055
#: ../../ref/contrib/messages.txt:329
msgid ""
"This sets the minimum message that will be saved in the message storage. See "
"`Message levels`_ above for more details."
msgstr ""

# 826f54c2795a410192b667f7909b0518
#: ../../ref/contrib/messages.txt:334
msgid ""
"If you override ``MESSAGE_LEVEL`` in your settings file and rely on any of "
"the built-in constants, you must import the constants module directly to "
"avoid the potential for circular imports, e.g.::"
msgstr ""

# 954b1f28462c446d923f36243ae16071
# ae89ddf8821346d091793dd5352d0eea
#: ../../ref/contrib/messages.txt:341 ../../ref/contrib/messages.txt:383
msgid ""
"If desired, you may specify the numeric values for the constants directly "
"according to the values in the above :ref:`constants table <message-level-"
"constants>`."
msgstr ""

# 56b2220650c7418786eda3fc1fd12619
# e792577197bd4a899110a85003223d04
#: ../../ref/contrib/messages.txt:346 ../../ref/settings.txt:1438
msgid "MESSAGE_STORAGE"
msgstr ""

# bf127fbcc19244429011e86945cc9874
#: ../../ref/contrib/messages.txt:348
msgid ""
"Default: ``'django.contrib.messages.storage.user_messages.FallbackStorage'``"
msgstr ""

# 2a751dfeb9af44d28de33d591502779e
#: ../../ref/contrib/messages.txt:350
msgid "Controls where Django stores message data. Valid values are:"
msgstr ""

# f9f8a85b853a424faea2e59093c31c1c
#: ../../ref/contrib/messages.txt:352
msgid "``'django.contrib.messages.storage.fallback.FallbackStorage'``"
msgstr ""

# 70dc6f7313504471bc6f6e965695cb75
#: ../../ref/contrib/messages.txt:353
msgid "``'django.contrib.messages.storage.session.SessionStorage'``"
msgstr ""

# ee5fffc581ef4a49943b9538eeb01dc8
#: ../../ref/contrib/messages.txt:354
msgid "``'django.contrib.messages.storage.cookie.CookieStorage'``"
msgstr ""

# df9ee3c04bba418396373cc0eea7e1e4
#: ../../ref/contrib/messages.txt:356
msgid "See `Storage backends`_ for more details."
msgstr ""

# a824915d611940598fa85ec5725a7886
# 0153e5a9673b4611b8f153ee2e7a5509
#: ../../ref/contrib/messages.txt:359 ../../ref/settings.txt:1448
msgid "MESSAGE_TAGS"
msgstr ""

# ac8a09fe721b425f831e9f77b6374cf7
# dc1b991ff26c41a7a5cc7909accb480d
# 63c4af7168934ea1ab356ee5a634e67e
# 3f3bf4ca6ea544548bb9e7c288e93011
# 3978b7862036481aac33dd7b0b8b6a4f
# 1c74650b1836425797eae3404dc9d78a
# bf13ad42374044a3b26d6806574691d8
# eefeb57d76a84f9a94e0734ee8964f76
# 9f6556cd8b634664bf7ed1215a06b085
# 9d44bfbcd6a04a69ae3dfd4e30cccebd
#: ../../ref/contrib/messages.txt:361 ../../ref/contrib/staticfiles.txt:99
#: ../../ref/settings.txt:130 ../../ref/settings.txt:701
#: ../../ref/settings.txt:743 ../../ref/settings.txt:1028
#: ../../ref/settings.txt:1452 ../../ref/settings.txt:1468
#: ../../ref/settings.txt:1929 ../../ref/settings.txt:1997
msgid "Default::"
msgstr ""

# 2d39be31115d46dfa974d824152a6b62
#: ../../ref/contrib/messages.txt:369
msgid ""
"This sets the mapping of message level to message tag, which is typically "
"rendered as a CSS class in HTML. If you specify a value, it will extend the "
"default. This means you only have to specify those values which you need to "
"override. See `Displaying messages`_ above for more details."
msgstr ""

# 6fbcb9a0fc6e45639fde70b3de29d59d
#: ../../ref/contrib/messages.txt:376
msgid ""
"If you override ``MESSAGE_TAGS`` in your settings file and rely on any of "
"the built-in constants, you must import the ``constants`` module directly to "
"avoid the potential for circular imports, e.g.::"
msgstr ""

# adc11df200d14e14a41e70e00543cb03
# 3e26580b07b84447a7f9856969809d58
#: ../../ref/contrib/messages.txt:388 ../../ref/settings.txt:1701
msgid "SESSION_COOKIE_DOMAIN"
msgstr ""

# 30921d8236fb4567a518424eb34142db
#: ../../ref/contrib/messages.txt:392
msgid ""
"The storage backends that use cookies -- ``CookieStorage`` and "
"``FallbackStorage`` -- use the value of :setting:`SESSION_COOKIE_DOMAIN` in "
"setting their cookies. See the :doc:`settings documentation </ref/settings>` "
"for more information on how this works and why you might need to set it."
msgstr ""

# 809fd30c66f9428690f23a7957d1c65b
#: ../../ref/contrib/redirects.txt:3
msgid "The redirects app"
msgstr ""

# cef02be7cb9440b49523c764ff39e622
#: ../../ref/contrib/redirects.txt:8
msgid ""
"Django comes with an optional redirects application. It lets you store "
"simple redirects in a database and handles the redirecting for you."
msgstr ""

# 9300391691a145b286ff8c1097f35379
#: ../../ref/contrib/redirects.txt:14
msgid "To install the redirects app, follow these steps:"
msgstr ""

# 241b47325e644d6e82d306b1b49595de
#: ../../ref/contrib/redirects.txt:16
msgid ""
"Add ``'django.contrib.redirects'`` to your :setting:`INSTALLED_APPS` setting."
msgstr ""

# 58f8a18712ce4495b8823d3a5fe160d2
#: ../../ref/contrib/redirects.txt:18
msgid ""
"Add ``'django.contrib.redirects.middleware.RedirectFallbackMiddleware'`` to "
"your :setting:`MIDDLEWARE_CLASSES` setting."
msgstr ""

# 15c60f50828642d788faaf51b522e8e2
#: ../../ref/contrib/redirects.txt:25
msgid ""
"``manage.py syncdb`` creates a ``django_redirect`` table in your database. "
"This is a simple lookup table with ``site_id``, ``old_path`` and "
"``new_path`` fields."
msgstr ""

# 332bc82296bf4c0199378bf75ce40af5
#: ../../ref/contrib/redirects.txt:28
msgid ""
"The ``RedirectFallbackMiddleware`` does all of the work. Each time any "
"Django application raises a 404 error, this middleware checks the redirects "
"database for the requested URL as a last resort. Specifically, it checks for "
"a redirect with the given ``old_path`` with a site ID that corresponds to "
"the :setting:`SITE_ID` setting."
msgstr ""

# 1f6bd3563dc546ee9cc79fd89ffc6ade
#: ../../ref/contrib/redirects.txt:34
msgid ""
"If it finds a match, and ``new_path`` is not empty, it redirects to "
"``new_path``."
msgstr ""

# bcec7643abb1496d94edda3a3dda64cb
#: ../../ref/contrib/redirects.txt:36
msgid ""
"If it finds a match, and ``new_path`` is empty, it sends a 410 (\"Gone\") "
"HTTP header and empty (content-less) response."
msgstr ""

# 5b1d0c88cd224e049626a255de89e95f
#: ../../ref/contrib/redirects.txt:44
msgid ""
"Note that the order of :setting:`MIDDLEWARE_CLASSES` matters. Generally, you "
"can put ``RedirectFallbackMiddleware`` at the end of the list, because it's "
"a last resort."
msgstr ""

# 90d2cb9afcdc45b08161d59a0ff78f59
#: ../../ref/contrib/redirects.txt:52
msgid "How to add, change and delete redirects"
msgstr ""

# 3e6a0157c28648a696aae8afcef547a2
#: ../../ref/contrib/redirects.txt:57
msgid ""
"If you've activated the automatic Django admin interface, you should see a "
"\"Redirects\" section on the admin index page. Edit redirects as you edit "
"any other object in the system."
msgstr ""

# 9910276d55524eddb8e669adec97e989
#: ../../ref/contrib/redirects.txt:66
msgid ""
"Redirects are represented by a standard :doc:`Django model </topics/db/"
"models>`, which lives in `django/contrib/redirects/models.py`_. You can "
"access redirect objects via the :doc:`Django database API </topics/db/"
"queries>`."
msgstr ""

# d7850bf45e5a4641848cb8fbfd6236ea
#: ../../ref/contrib/sitemaps.txt:3
msgid "The sitemap framework"
msgstr ""

# 62def12100654c309867b362a164fe82
#: ../../ref/contrib/sitemaps.txt:8
msgid ""
"Django comes with a high-level sitemap-generating framework that makes "
"creating sitemap_ XML files easy."
msgstr ""

# 9d7e916c0a214182869042858ac4f8f3
#: ../../ref/contrib/sitemaps.txt:16
msgid ""
"A sitemap is an XML file on your Web site that tells search-engine indexers "
"how frequently your pages change and how \"important\" certain pages are in "
"relation to other pages on your site. This information helps search engines "
"index your site."
msgstr ""

# 7de70bca478146ec8d8fcb6c6f43293d
#: ../../ref/contrib/sitemaps.txt:21
msgid ""
"The Django sitemap framework automates the creation of this XML file by "
"letting you express this information in Python code."
msgstr ""

# b262121848f942f78e4653d8987f18b5
#: ../../ref/contrib/sitemaps.txt:24
msgid ""
"It works much like Django's :doc:`syndication framework </ref/contrib/"
"syndication>`. To create a sitemap, just write a :class:`~django.contrib."
"sitemaps.Sitemap` class and point to it in your :doc:`URLconf </topics/http/"
"urls>`."
msgstr ""

# 784ddc290c3247769eb78282b4efc745
#: ../../ref/contrib/sitemaps.txt:32
msgid "To install the sitemap app, follow these steps:"
msgstr ""

# 7ebd5a3da69f494d8dff7370bf8bcad4
#: ../../ref/contrib/sitemaps.txt:34
msgid ""
"Add ``'django.contrib.sitemaps'`` to your :setting:`INSTALLED_APPS` setting."
msgstr ""

# e4443486123e47e8a33f2485b41ecd42
#: ../../ref/contrib/sitemaps.txt:37
msgid ""
"Make sure ``'django.template.loaders.app_directories.Loader'`` is in your :"
"setting:`TEMPLATE_LOADERS` setting. It's in there by default, so you'll only "
"need to change this if you've changed that setting."
msgstr ""

# fa642cd6f671485baddf2210f755add4
#: ../../ref/contrib/sitemaps.txt:41
msgid ""
"Make sure you've installed the :mod:`sites framework <django.contrib.sites>`."
msgstr ""

# 176b25ea26f9453c95318325e199d94d
#: ../../ref/contrib/sitemaps.txt:44
msgid ""
"(Note: The sitemap application doesn't install any database tables. The only "
"reason it needs to go into :setting:`INSTALLED_APPS` is so that the :func:"
"`~django.template.loaders.app_directories.Loader` template loader can find "
"the default templates.)"
msgstr ""

# f863da6588024372b30e83b7a90ed471
#: ../../ref/contrib/sitemaps.txt:50
msgid "Initialization"
msgstr ""

# c21a41cc93654cd1b33cb4dad7351f5a
#: ../../ref/contrib/sitemaps.txt:52
msgid ""
"To activate sitemap generation on your Django site, add this line to your :"
"doc:`URLconf </topics/http/urls>`::"
msgstr ""

# 14c0f10db1254f6dbea6ff61c4a2cbd4
#: ../../ref/contrib/sitemaps.txt:57
msgid ""
"This tells Django to build a sitemap when a client accesses :file:`/sitemap."
"xml`."
msgstr ""

# bef3050aa6e640ba8762e147f4d90367
#: ../../ref/contrib/sitemaps.txt:59
msgid ""
"The name of the sitemap file is not important, but the location is. Search "
"engines will only index links in your sitemap for the current URL level and "
"below. For instance, if :file:`sitemap.xml` lives in your root directory, it "
"may reference any URL in your site. However, if your sitemap lives at :file:"
"`/content/sitemap.xml`, it may only reference URLs that begin with :file:`/"
"content/`."
msgstr ""

# 45ef0e7768864796b6c38699a45578bd
#: ../../ref/contrib/sitemaps.txt:66
msgid ""
"The sitemap view takes an extra, required argument: ``{'sitemaps': sitemaps}"
"``. ``sitemaps`` should be a dictionary that maps a short section label (e."
"g., ``blog`` or ``news``) to its :class:`~django.contrib.sitemaps.Sitemap` "
"class (e.g., ``BlogSitemap`` or ``NewsSitemap``). It may also map to an "
"*instance* of a :class:`~django.contrib.sitemaps.Sitemap` class (e.g., "
"``BlogSitemap(some_var)``)."
msgstr ""

# f3d5913ec8c8430fae1437f85e35bf43
#: ../../ref/contrib/sitemaps.txt:74
msgid "Sitemap classes"
msgstr ""

# b415796347954035acfaf256c4159d47
#: ../../ref/contrib/sitemaps.txt:76
msgid ""
"A :class:`~django.contrib.sitemaps.Sitemap` class is a simple Python class "
"that represents a \"section\" of entries in your sitemap. For example, one :"
"class:`~django.contrib.sitemaps.Sitemap` class could represent all the "
"entries of your Weblog, while another could represent all of the events in "
"your events calendar."
msgstr ""

# 6c33bf6e9aa347feb09c6136e6d40a9d
#: ../../ref/contrib/sitemaps.txt:82
msgid ""
"In the simplest case, all these sections get lumped together into one :file:"
"`sitemap.xml`, but it's also possible to use the framework to generate a "
"sitemap index that references individual sitemap files, one per section. "
"(See `Creating a sitemap index`_ below.)"
msgstr ""

# 34ea632105af4175af04e7ce318eecea
#: ../../ref/contrib/sitemaps.txt:87
msgid ""
":class:`~django.contrib.sitemaps.Sitemap` classes must subclass ``django."
"contrib.sitemaps.Sitemap``. They can live anywhere in your codebase."
msgstr ""

# b021700d8ca94c23b0182002635eb31c
# d8d661cc14d24c66bfdc313479e09652
#: ../../ref/contrib/sitemaps.txt:91 ../../ref/contrib/syndication.txt:58
msgid "A simple example"
msgstr ""

# 54d6be011cc243aabc2214f828e14169
#: ../../ref/contrib/sitemaps.txt:93
msgid ""
"Let's assume you have a blog system, with an ``Entry`` model, and you want "
"your sitemap to include all the links to your individual blog entries. "
"Here's how your sitemap class might look::"
msgstr ""

# 2bc6c0906a7c44a8aaabdbb32816ec0a
# 800994876f8a4c6581f2df474ba255f1
#: ../../ref/contrib/sitemaps.txt:110 ../../ref/contrib/syndication.txt:92
msgid "Note:"
msgstr ""

# 61f8fc789fe24b7786545824d78214aa
#: ../../ref/contrib/sitemaps.txt:112
msgid ""
":attr:`~Sitemap.changefreq` and :attr:`~Sitemap.priority` are class "
"attributes corresponding to ``<changefreq>`` and ``<priority>`` elements, "
"respectively. They can be made callable as functions, as :attr:`~Sitemap."
"lastmod` was in the example."
msgstr ""

# ae3f43f427754f61a7ddab2892a25663
#: ../../ref/contrib/sitemaps.txt:116
msgid ""
":attr:`~Sitemap.items()` is simply a method that returns a list of objects. "
"The objects returned will get passed to any callable methods corresponding "
"to a sitemap property (:attr:`~Sitemap.location`, :attr:`~Sitemap.lastmod`, :"
"attr:`~Sitemap.changefreq`, and :attr:`~Sitemap.priority`)."
msgstr ""

# 3011d8a7ee254527aafd0c2b0bad1057
#: ../../ref/contrib/sitemaps.txt:121
msgid ":attr:`~Sitemap.lastmod` should return a Python ``datetime`` object."
msgstr ""

# 0c63373563934c3586e12616da5d4daf
#: ../../ref/contrib/sitemaps.txt:122
msgid ""
"There is no :attr:`~Sitemap.location` method in this example, but you can "
"provide it in order to specify the URL for your object. By default, :attr:"
"`~Sitemap.location()` calls ``get_absolute_url()`` on each object and "
"returns the result."
msgstr ""

# dc01e09ecbbb4371b2a4fc0066f0edf9
#: ../../ref/contrib/sitemaps.txt:128
msgid "Sitemap class reference"
msgstr ""

# 4c14686b5f2d46439fc8461a24ef847a
#: ../../ref/contrib/sitemaps.txt:132
msgid "A ``Sitemap`` class can define the following methods/attributes:"
msgstr ""

# 05cdf5ec0ab147baa3deb6b46119613e
#: ../../ref/contrib/sitemaps.txt:136
msgid ""
"**Required.** A method that returns a list of objects. The framework doesn't "
"care what *type* of objects they are; all that matters is that these objects "
"get passed to the :attr:`~Sitemap.location()`, :attr:`~Sitemap.lastmod()`, :"
"attr:`~Sitemap.changefreq()` and :attr:`~Sitemap.priority()` methods."
msgstr ""

# 114ed5b72834462fb718703175fe2ada
# bb0824cf776946d1b0d76360a435681b
# 9e7df675aec34378958aa6438ed65de9
# ee6e31dafb244bafa20dbcec9cd1406b
#: ../../ref/contrib/sitemaps.txt:144 ../../ref/contrib/sitemaps.txt:169
#: ../../ref/contrib/sitemaps.txt:181 ../../ref/contrib/sitemaps.txt:201
msgid "**Optional.** Either a method or attribute."
msgstr ""

# 3f73c975762e4026abeb160892afd338
#: ../../ref/contrib/sitemaps.txt:146
msgid ""
"If it's a method, it should return the absolute path for a given object as "
"returned by :attr:`~Sitemap.items()`."
msgstr ""

# 5070b1f75149404d88b01b1d549cdf86
#: ../../ref/contrib/sitemaps.txt:149
msgid ""
"If it's an attribute, its value should be a string representing an absolute "
"path to use for *every* object returned by :attr:`~Sitemap.items()`."
msgstr ""

# 4e4594a09dba44898fd5dc9a1a009764
#: ../../ref/contrib/sitemaps.txt:153
msgid ""
"In both cases, \"absolute path\" means a URL that doesn't include the "
"protocol or domain. Examples:"
msgstr ""

# 9a9f692027a34857a188aa93167f45e7
#: ../../ref/contrib/sitemaps.txt:156
msgid "Good: :file:`'/foo/bar/'`"
msgstr ""

# f92865cdf4ed4da2a1385075f8fb9b69
#: ../../ref/contrib/sitemaps.txt:157
msgid "Bad: :file:`'example.com/foo/bar/'`"
msgstr ""

# a68a783101b04ede978e6bdc06f3ef61
#: ../../ref/contrib/sitemaps.txt:158
msgid "Bad: :file:`'http://example.com/foo/bar/'`"
msgstr ""

# 31dd2c43d6944c90b81cf88c9e58d176
#: ../../ref/contrib/sitemaps.txt:160
msgid ""
"If :attr:`~Sitemap.location` isn't provided, the framework will call the "
"``get_absolute_url()`` method on each object as returned by :attr:`~Sitemap."
"items()`."
msgstr ""

# 041d9af7b18b44aca947228f01a883b5
#: ../../ref/contrib/sitemaps.txt:164
msgid ""
"To specify a protocol other than ``'http'``, use :attr:`~Sitemap.protocol`."
msgstr ""

# 690322cb1aa544198989932fa805e1e4
#: ../../ref/contrib/sitemaps.txt:171
msgid ""
"If it's a method, it should take one argument -- an object as returned by :"
"attr:`~Sitemap.items()` -- and return that object's last-modified date/time, "
"as a Python ``datetime.datetime`` object."
msgstr ""

# 991ca5c13df846ba9435f9bd5f0590ae
#: ../../ref/contrib/sitemaps.txt:175
msgid ""
"If it's an attribute, its value should be a Python ``datetime.datetime`` "
"object representing the last-modified date/time for *every* object returned "
"by :attr:`~Sitemap.items()`."
msgstr ""

# 995ee6dbab1c49b1966c8a707c4b5a2a
#: ../../ref/contrib/sitemaps.txt:183
msgid ""
"If it's a method, it should take one argument -- an object as returned by :"
"attr:`~Sitemap.items()` -- and return that object's change frequency, as a "
"Python string."
msgstr ""

# 3cfae83a7cb44e9c9fe23b73ab07179a
#: ../../ref/contrib/sitemaps.txt:186
msgid ""
"If it's an attribute, its value should be a string representing the change "
"frequency of *every* object returned by :attr:`~Sitemap.items()`."
msgstr ""

# 36b05e3d26164f22b9136624cf64a54b
#: ../../ref/contrib/sitemaps.txt:189
msgid ""
"Possible values for :attr:`~Sitemap.changefreq`, whether you use a method or "
"attribute, are:"
msgstr ""

# 1ceb93ce59f24ea2a57d8de9f8827975
#: ../../ref/contrib/sitemaps.txt:191
msgid "``'always'``"
msgstr ""

# bb9de3ab5c594001a3407b9acd5201fd
#: ../../ref/contrib/sitemaps.txt:192
msgid "``'hourly'``"
msgstr ""

# 6f8bb42a830448039b37050658c58845
#: ../../ref/contrib/sitemaps.txt:193
msgid "``'daily'``"
msgstr ""

# 3add1ac69cd043809b6b910e2252ef2c
#: ../../ref/contrib/sitemaps.txt:194
msgid "``'weekly'``"
msgstr ""

# ddfec0a3867840a389400732cd5d4669
#: ../../ref/contrib/sitemaps.txt:195
msgid "``'monthly'``"
msgstr ""

# 6984e2f3d2264c2785901fff21d09c8b
#: ../../ref/contrib/sitemaps.txt:196
msgid "``'yearly'``"
msgstr ""

# 81515966b37b40279a013422c60e175e
#: ../../ref/contrib/sitemaps.txt:197
msgid "``'never'``"
msgstr ""

# d125095d01044207971de86b4b0e60f4
#: ../../ref/contrib/sitemaps.txt:203
msgid ""
"If it's a method, it should take one argument -- an object as returned by :"
"attr:`~Sitemap.items()` -- and return that object's priority, as either a "
"string or float."
msgstr ""

# e78c09f24d1a44b5b5c59f14e01aafc6
#: ../../ref/contrib/sitemaps.txt:206
msgid ""
"If it's an attribute, its value should be either a string or float "
"representing the priority of *every* object returned by :attr:`~Sitemap.items"
"()`."
msgstr ""

# 19e8b30fa58640779b2abbbbcf294c5e
#: ../../ref/contrib/sitemaps.txt:209
msgid ""
"Example values for :attr:`~Sitemap.priority`: ``0.4``, ``1.0``. The default "
"priority of a page is ``0.5``. See the `sitemaps.org documentation`_ for "
"more."
msgstr ""

# 39724e4b5ddc4355909ad50823bfaf98
#: ../../ref/contrib/sitemaps.txt:218
msgid "**Optional.**"
msgstr ""

# 5027339a6f494f70b110751eab8db871
#: ../../ref/contrib/sitemaps.txt:220
msgid ""
"This attribute defines the protocol (``'http'`` or ``'https'``) of the URLs "
"in the sitemap. If it isn't set, the protocol with which the sitemap was "
"requested is used. If the sitemap is built outside the context of a request, "
"the default is ``'http'``."
msgstr ""

# 463611b7cef647ac8bb3cdf4617d9766
#: ../../ref/contrib/sitemaps.txt:227
msgid "Shortcuts"
msgstr ""

# 9e310fc606374695bafd728b8940e12b
#: ../../ref/contrib/sitemaps.txt:229
msgid ""
"The sitemap framework provides a couple convenience classes for common cases:"
msgstr ""

# 8d87780da9324a0e8224713eb5ddbd8b
#: ../../ref/contrib/sitemaps.txt:233
msgid ""
"The :class:`django.contrib.sitemaps.FlatPageSitemap` class looks at all "
"publicly visible :mod:`flatpages <django.contrib.flatpages>` defined for the "
"current :setting:`SITE_ID` (see the :mod:`sites documentation <django."
"contrib.sites>`) and creates an entry in the sitemap. These entries include "
"only the :attr:`~Sitemap.location` attribute -- not :attr:`~Sitemap."
"lastmod`, :attr:`~Sitemap.changefreq` or :attr:`~Sitemap.priority`."
msgstr ""

# 8abadc97c53c46a98913d536a9ee12a2
#: ../../ref/contrib/sitemaps.txt:243
msgid ""
"The :class:`django.contrib.sitemaps.GenericSitemap` class works with any :"
"doc:`generic views </ref/generic-views>` you already have. To use it, create "
"an instance, passing in the same :data:`info_dict` you pass to the generic "
"views. The only requirement is that the dictionary have a :data:`queryset` "
"entry. It may also have a :data:`date_field` entry that specifies a date "
"field for objects retrieved from the :data:`queryset`. This will be used for "
"the :attr:`~Sitemap.lastmod` attribute in the generated sitemap. You may "
"also pass :attr:`~Sitemap.priority` and :attr:`~Sitemap.changefreq` keyword "
"arguments to the :class:`~django.contrib.sitemaps.GenericSitemap` "
"constructor to specify these attributes for all URLs."
msgstr ""

# 044ee5dda27d421a8326dc27ce0e3b02
#: ../../ref/contrib/sitemaps.txt:257
msgid "Here's an example of a :doc:`URLconf </topics/http/urls>` using both::"
msgstr ""

# 825f3f740f4c4f08949d19f6942a90b1
#: ../../ref/contrib/sitemaps.txt:284
msgid "Creating a sitemap index"
msgstr ""

# b2868189090e490dbb110d0c3c5b9e8b
#: ../../ref/contrib/sitemaps.txt:286
msgid ""
"The sitemap framework also has the ability to create a sitemap index that "
"references individual sitemap files, one per each section defined in your :"
"data:`sitemaps` dictionary. The only differences in usage are:"
msgstr ""

# d720d855dfd64811a5f1aa98765a0fb6
#: ../../ref/contrib/sitemaps.txt:290
msgid ""
"You use two views in your URLconf: :func:`django.contrib.sitemaps.views."
"index` and :func:`django.contrib.sitemaps.views.sitemap`."
msgstr ""

# e1bec1436f3f4d16bda2aa407270cb0f
#: ../../ref/contrib/sitemaps.txt:292
msgid ""
"The :func:`django.contrib.sitemaps.views.sitemap` view should take a :data:"
"`section` keyword argument."
msgstr ""

# 14edeb5301654727940277336d0ebee2
#: ../../ref/contrib/sitemaps.txt:295
msgid ""
"Here's what the relevant URLconf lines would look like for the example "
"above::"
msgstr ""

# 1f1713d51c6e43799576a6cbec6c7c4d
#: ../../ref/contrib/sitemaps.txt:302
msgid ""
"This will automatically generate a :file:`sitemap.xml` file that references "
"both :file:`sitemap-flatpages.xml` and :file:`sitemap-blog.xml`. The :class:"
"`~django.contrib.sitemaps.Sitemap` classes and the :data:`sitemaps` dict "
"don't change at all."
msgstr ""

# 4e1f1eabc95a4543a647bf0095356238
#: ../../ref/contrib/sitemaps.txt:307
msgid ""
"You should create an index file if one of your sitemaps has more than 50,000 "
"URLs. In this case, Django will automatically paginate the sitemap, and the "
"index will reflect that."
msgstr ""

# 59270dab67c041b0a57096e2354df80c
#: ../../ref/contrib/sitemaps.txt:313
msgid ""
"If you're not using the vanilla sitemap view -- for example, if it's wrapped "
"with a caching decorator -- you must name your sitemap view and pass "
"``sitemap_url_name`` to the index view::"
msgstr ""

# 0dcc47b0841b4be4baee760a5565dffe
#: ../../ref/contrib/sitemaps.txt:331
msgid "Template customization"
msgstr ""

# fc5b8a56f4a34290a2313fc4aded9c6d
#: ../../ref/contrib/sitemaps.txt:335
msgid ""
"If you wish to use a different template for each sitemap or sitemap index "
"available on your site, you may specify it by passing a ``template_name`` "
"parameter to the ``sitemap`` and ``index`` views via the URLconf::"
msgstr ""

# 2e28ece68d0a49efa399eb136caafb8e
#: ../../ref/contrib/sitemaps.txt:359
msgid "Context variables"
msgstr ""

# b588cb12030342388bc8a8c70c09c36b
#: ../../ref/contrib/sitemaps.txt:361
msgid ""
"When customizing the templates for the :func:`~django.contrib.sitemaps.views."
"index` and :func:`~django.contrib.sitemaps.views.sitemaps` views, you can "
"rely on the following context variables."
msgstr ""

# d02691bdad8f4b018f83e667925bce13
#: ../../ref/contrib/sitemaps.txt:368
msgid ""
"The variable :data:`sitemaps` is a list of absolute URLs to each of the "
"sitemaps."
msgstr ""

# cb29d2d2640e4ef8bae31c36494a02db
#: ../../ref/contrib/sitemaps.txt:371
msgid "Sitemap"
msgstr ""

# 42761c7537124a178dc5c48467909ae6
#: ../../ref/contrib/sitemaps.txt:373
msgid ""
"The variable :data:`urlset` is a list of URLs that should appear in the "
"sitemap. Each URL exposes attributes as defined in the :class:`~django."
"contrib.sitemaps.Sitemap` class:"
msgstr ""

# 17dd027b0e7a47beb32fec9ad0e3e4e5
#: ../../ref/contrib/sitemaps.txt:377
msgid "``changefreq``"
msgstr ""

# f58d346c4739463e8a70e8281b884529
#: ../../ref/contrib/sitemaps.txt:378
msgid "``item``"
msgstr ""

# 7993bcc9dc0c48ad90fefbe379a78a8c
#: ../../ref/contrib/sitemaps.txt:379
msgid "``lastmod``"
msgstr ""

# 946369bc70ad4d0698359c68f075a3b9
#: ../../ref/contrib/sitemaps.txt:380
msgid "``location``"
msgstr ""

# 0d812810c5984179aa281e2fbe438615
#: ../../ref/contrib/sitemaps.txt:381
msgid "``priority``"
msgstr ""

# ebde51ade7214416807ec2138f733551
#: ../../ref/contrib/sitemaps.txt:385
msgid ""
"The ``item`` attribute has been added for each URL to allow more flexible "
"customization of the templates, such as `Google news sitemaps`_. Assuming "
"Sitemap's :attr:`~Sitemap.items()` would return a list of items with "
"``publication_data`` and a ``tags`` field something like this would generate "
"a Google News compatible sitemap:"
msgstr ""

# 6202533c7ad14084ae287c7f9c30013a
#: ../../ref/contrib/sitemaps.txt:416
msgid "Pinging Google"
msgstr ""

# 33284d476a7f41d7aa041fb99fac6667
#: ../../ref/contrib/sitemaps.txt:418
msgid ""
"You may want to \"ping\" Google when your sitemap changes, to let it know to "
"reindex your site. The sitemaps framework provides a function to do just "
"that: :func:`django.contrib.sitemaps.ping_google()`."
msgstr ""

# 893d0942f6b94da987a7582a5a55675d
#: ../../ref/contrib/sitemaps.txt:424
msgid ""
":func:`ping_google` takes an optional argument, :data:`sitemap_url`, which "
"should be the absolute path to your site's sitemap (e.g., :file:`'/sitemap."
"xml'`). If this argument isn't provided, :func:`ping_google` will attempt to "
"figure out your sitemap by performing a reverse looking in your URLconf."
msgstr ""

# 70e4f19b52f447508572f8670579a03b
#: ../../ref/contrib/sitemaps.txt:430
msgid ""
":func:`ping_google` raises the exception :exc:`django.contrib.sitemaps."
"SitemapNotFound` if it cannot determine your sitemap URL."
msgstr ""

# 99baaaf1a4d6469ea075f7688a793c86
#: ../../ref/contrib/sitemaps.txt:436
msgid ""
"The :func:`ping_google` command only works if you have registered your site "
"with `Google Webmaster Tools`_."
msgstr ""

# 2066278434844713902c931f4bd7f5ca
#: ../../ref/contrib/sitemaps.txt:441
msgid ""
"One useful way to call :func:`ping_google` is from a model's ``save()`` "
"method::"
msgstr ""

# 9953008f18154885b7c8e9fd109d5a77
#: ../../ref/contrib/sitemaps.txt:457
msgid ""
"A more efficient solution, however, would be to call :func:`ping_google` "
"from a cron script, or some other scheduled task. The function makes an HTTP "
"request to Google's servers, so you may not want to introduce that network "
"overhead each time you call ``save()``."
msgstr ""

# 36a228dc98dd4efb8df2501a48359f16
#: ../../ref/contrib/sitemaps.txt:463
msgid "Pinging Google via `manage.py`"
msgstr ""

# 4967686e960249db8c0b29b6e21d9a73
#: ../../ref/contrib/sitemaps.txt:467
msgid ""
"Once the sitemaps application is added to your project, you may also ping "
"Google using the ``ping_google`` management command::"
msgstr ""

# 656e96a280f6420ba17533bd02e02df7
#: ../../ref/contrib/sites.txt:3
msgid "The \"sites\" framework"
msgstr ""

# 3978575ca58546e193dd85ffd29fc5ae
#: ../../ref/contrib/sites.txt:11
msgid ""
"Django comes with an optional \"sites\" framework. It's a hook for "
"associating objects and functionality to particular Web sites, and it's a "
"holding place for the domain names and \"verbose\" names of your Django-"
"powered sites."
msgstr ""

# 488a0cd7ba834172a2c38b81387aae98
#: ../../ref/contrib/sites.txt:15
msgid ""
"Use it if your single Django installation powers more than one site and you "
"need to differentiate between those sites in some way."
msgstr ""

# fe0cede0236d4b15ade33f887d959496
#: ../../ref/contrib/sites.txt:18
msgid "The whole sites framework is based on a simple model:"
msgstr ""

# ab2959c97532499381435de2ca2f9cdc
#: ../../ref/contrib/sites.txt:22
msgid ""
"A model for storing the ``domain`` and ``name`` attributes of a Web site. "
"The :setting:`SITE_ID` setting specifies the database ID of the :class:"
"`~django.contrib.sites.models.Site` object associated with that particular "
"settings file."
msgstr ""

# 0e38de5077d144a1bca8cf2aca4eb1fe
#: ../../ref/contrib/sites.txt:29
msgid "The domain name associated with the Web site."
msgstr ""

# 35606524a77e4afdb564f7d418b8459b
#: ../../ref/contrib/sites.txt:33
msgid "A human-readable \"verbose\" name for the Web site."
msgstr ""

# 3daf970b57e243e6918a41112f0c90ff
#: ../../ref/contrib/sites.txt:36
msgid ""
"How you use this is up to you, but Django uses it in a couple of ways "
"automatically via simple conventions."
msgstr ""

# 10c80eae018f4b84b86f5cb6d579d8d9
#: ../../ref/contrib/sites.txt:40
msgid "Example usage"
msgstr ""

# e3fd309e73dc43139370fc31108e9847
#: ../../ref/contrib/sites.txt:42
msgid "Why would you use sites? It's best explained through examples."
msgstr ""

# 198feb4bfbc8490f9fa572537606fc51
#: ../../ref/contrib/sites.txt:45
msgid "Associating content with multiple sites"
msgstr ""

# 7ef619447f6844eb87350182915a7fdd
#: ../../ref/contrib/sites.txt:47
msgid ""
"The Django-powered sites LJWorld.com_ and Lawrence.com_ are operated by the "
"same news organization -- the Lawrence Journal-World newspaper in Lawrence, "
"Kansas. LJWorld.com focuses on news, while Lawrence.com focuses on local "
"entertainment. But sometimes editors want to publish an article on *both* "
"sites."
msgstr ""

# fa236ba0117048a0a15cc1f7331c0ec8
#: ../../ref/contrib/sites.txt:53
msgid ""
"The brain-dead way of solving the problem would be to require site producers "
"to publish the same story twice: once for LJWorld.com and again for Lawrence."
"com. But that's inefficient for site producers, and it's redundant to store "
"multiple copies of the same story in the database."
msgstr ""

# 12f222b35a5345ba86e09a8cd8f0a877
#: ../../ref/contrib/sites.txt:58
msgid ""
"The better solution is simple: Both sites use the same article database, and "
"an article is associated with one or more sites. In Django model "
"terminology, that's represented by a :class:`~django.db.models."
"ManyToManyField` in the ``Article`` model::"
msgstr ""

# c4a323ac633c470cb983f83a536a8b42
#: ../../ref/contrib/sites.txt:71
msgid "This accomplishes several things quite nicely:"
msgstr ""

# 30453ec7c2ba4ae4957ecd920abfc08f
#: ../../ref/contrib/sites.txt:73
msgid ""
"It lets the site producers edit all content -- on both sites -- in a single "
"interface (the Django admin)."
msgstr ""

# 2b8af911fb9140cba5c3320a26fa65a4
#: ../../ref/contrib/sites.txt:76
msgid ""
"It means the same story doesn't have to be published twice in the database; "
"it only has a single record in the database."
msgstr ""

# d7e0593f1173444a9a3b1070b10f6bf2
#: ../../ref/contrib/sites.txt:79
msgid ""
"It lets the site developers use the same Django view code for both sites. "
"The view code that displays a given story just checks to make sure the "
"requested story is on the current site. It looks something like this::"
msgstr ""

# a87f41463d5648b297a9a0b0eb8a7e9c
#: ../../ref/contrib/sites.txt:96
msgid "Associating content with a single site"
msgstr ""

# 27af32d336b142c3a7d7a464edd5d2b7
#: ../../ref/contrib/sites.txt:98
msgid ""
"Similarly, you can associate a model to the :class:`~django.contrib.sites."
"models.Site` model in a many-to-one relationship, using :class:`~django.db."
"models.ForeignKey`."
msgstr ""

# a8f09ad129a8419bb108114e18a9418c
#: ../../ref/contrib/sites.txt:103
msgid ""
"For example, if an article is only allowed on a single site, you'd use a "
"model like this::"
msgstr ""

# 56ce046914904439bec1ebfc6dda46a7
#: ../../ref/contrib/sites.txt:114
msgid "This has the same benefits as described in the last section."
msgstr ""

# 2a151840befb45d5a7499636e6eb28ef
#: ../../ref/contrib/sites.txt:119
msgid "Hooking into the current site from views"
msgstr ""

# ede8a72d16044b07be362a5bb3a654a8
#: ../../ref/contrib/sites.txt:121
msgid ""
"You can use the sites framework in your Django views to do particular things "
"based on the site in which the view is being called. For example::"
msgstr ""

# 4fad4b8699b043fcac56825cdffefd4d
#: ../../ref/contrib/sites.txt:133
msgid ""
"Of course, it's ugly to hard-code the site IDs like that. This sort of hard-"
"coding is best for hackish fixes that you need done quickly. A slightly "
"cleaner way of accomplishing the same thing is to check the current site's "
"domain::"
msgstr ""

# 6961d20f3ea940df96411935d3bd600d
#: ../../ref/contrib/sites.txt:148
msgid ""
"The idiom of retrieving the :class:`~django.contrib.sites.models.Site` "
"object for the value of :setting:`settings.SITE_ID <SITE_ID>` is quite "
"common, so the :class:`~django.contrib.sites.models.Site` model's manager "
"has a ``get_current()`` method. This example is equivalent to the previous "
"one::"
msgstr ""

# 1b03aa6d07144020bb524190e7cb9b09
#: ../../ref/contrib/sites.txt:164
msgid ""
"For code which relies on getting the current domain but cannot be certain "
"that the sites framework will be installed for any given project, there is a "
"utility function :func:`~django.contrib.sites.models.get_current_site` that "
"takes a request object as an argument and returns either a Site instance (if "
"the sites framework is installed) or a RequestSite instance (if it is not). "
"This allows loose coupling with the sites framework and provides a usable "
"fallback for cases where it is not installed."
msgstr ""

# 78ce183771ef4f759fa6b35379c90f07
#: ../../ref/contrib/sites.txt:176
msgid ""
"Checks if contrib.sites is installed and returns either the current :class:"
"`~django.contrib.sites.models.Site` object or a :class:`~django.contrib."
"sites.models.RequestSite` object based on the request."
msgstr ""

# b2b9d777e1564c5c954a197b0a1371fa
#: ../../ref/contrib/sites.txt:182
msgid "Getting the current domain for display"
msgstr ""

# afc8b2c738ab4ae5b065e2b8ffdeccab
#: ../../ref/contrib/sites.txt:184
msgid ""
"LJWorld.com and Lawrence.com both have email alert functionality, which lets "
"readers sign up to get notifications when news happens. It's pretty basic: A "
"reader signs up on a Web form, and he immediately gets an email saying, "
"\"Thanks for your subscription.\""
msgstr ""

# 335490c1234a47128bf21fb8a856b985
#: ../../ref/contrib/sites.txt:189
msgid ""
"It'd be inefficient and redundant to implement this signup-processing code "
"twice, so the sites use the same code behind the scenes. But the \"thank you "
"for signing up\" notice needs to be different for each site. By using :class:"
"`~django.contrib.sites.models.Site` objects, we can abstract the \"thank you"
"\" notice to use the values of the current site's :attr:`~django.contrib."
"sites.models.Site.name` and :attr:`~django.contrib.sites.models.Site.domain`."
msgstr ""

# aa791e82a0244422964005b205fce507
#: ../../ref/contrib/sites.txt:197
msgid "Here's an example of what the form-handling view looks like::"
msgstr ""

# 1dc30a98f03c46c8be5261426c97b547
#: ../../ref/contrib/sites.txt:214
msgid ""
"On Lawrence.com, this email has the subject line \"Thanks for subscribing to "
"lawrence.com alerts.\" On LJWorld.com, the email has the subject \"Thanks "
"for subscribing to LJWorld.com alerts.\" Same goes for the email's message "
"body."
msgstr ""

# c67465426f6c488194a2a8351924b742
#: ../../ref/contrib/sites.txt:218
msgid ""
"Note that an even more flexible (but more heavyweight) way of doing this "
"would be to use Django's template system. Assuming Lawrence.com and LJWorld."
"com have different template directories (:setting:`TEMPLATE_DIRS`), you "
"could simply farm out to the template system like so::"
msgstr ""

# 9212e73d76ef46f5b50c1b08c9be2381
#: ../../ref/contrib/sites.txt:236
msgid ""
"In this case, you'd have to create :file:`subject.txt` and :file:`message."
"txt` template files for both the LJWorld.com and Lawrence.com template "
"directories. That gives you more flexibility, but it's also more complex."
msgstr ""

# 49dfc6780533432db1e160220cf206a2
#: ../../ref/contrib/sites.txt:240
msgid ""
"It's a good idea to exploit the :class:`~django.contrib.sites.models.Site` "
"objects as much as possible, to remove unneeded complexity and redundancy."
msgstr ""

# 9b165a785e8d4d9dacb9093174562fa4
#: ../../ref/contrib/sites.txt:244
msgid "Getting the current domain for full URLs"
msgstr ""

# dd0d539c32d54865ad53b1856771a7e5
#: ../../ref/contrib/sites.txt:246
msgid ""
"Django's ``get_absolute_url()`` convention is nice for getting your objects' "
"URL without the domain name, but in some cases you might want to display the "
"full URL -- with ``http://`` and the domain and everything -- for an object. "
"To do this, you can use the sites framework. A simple example::"
msgstr ""

# a79af042faf045248cf9f998b956a1a6
#: ../../ref/contrib/sites.txt:261
msgid "Caching the current ``Site`` object"
msgstr ""

# 49deeff894b2415586bd8b1219ad1f9d
#: ../../ref/contrib/sites.txt:263
msgid ""
"As the current site is stored in the database, each call to ``Site.objects."
"get_current()`` could result in a database query. But Django is a little "
"cleverer than that: on the first request, the current site is cached, and "
"any subsequent call returns the cached data instead of hitting the database."
msgstr ""

# 804f5fe85e8443b094167fb2d057da55
#: ../../ref/contrib/sites.txt:268
msgid ""
"If for any reason you want to force a database query, you can tell Django to "
"clear the cache using ``Site.objects.clear_cache()``::"
msgstr ""

# f7d1026c07f54cd6bacc5f438ea746cc
#: ../../ref/contrib/sites.txt:286
msgid "The ``CurrentSiteManager``"
msgstr ""

# 6f618a51021142cfa86d542ec62d7d11
#: ../../ref/contrib/sites.txt:290
msgid ""
"If :class:`~django.contrib.sites.models.Site` plays a key role in your "
"application, consider using the helpful :class:`~django.contrib.sites."
"managers.CurrentSiteManager` in your model(s). It's a model :doc:`manager </"
"topics/db/managers>` that automatically filters its queries to include only "
"objects associated with the current :class:`~django.contrib.sites.models."
"Site`."
msgstr ""

# 8297545ab7d340a2a29e1cdec10ec4a9
#: ../../ref/contrib/sites.txt:297
msgid ""
"Use :class:`~django.contrib.sites.managers.CurrentSiteManager` by adding it "
"to your model explicitly. For example::"
msgstr ""

# 226f9827730646d0be0ae739ca161cf2
#: ../../ref/contrib/sites.txt:312
msgid ""
"With this model, ``Photo.objects.all()`` will return all ``Photo`` objects "
"in the database, but ``Photo.on_site.all()`` will return only the ``Photo`` "
"objects associated with the current site, according to the :setting:"
"`SITE_ID` setting."
msgstr ""

# f5b1bf7044684f64ba67122309fd09d8
#: ../../ref/contrib/sites.txt:316
msgid "Put another way, these two statements are equivalent::"
msgstr ""

# 8aa3e76e08f840f08b9f61500f6c404d
#: ../../ref/contrib/sites.txt:321
msgid ""
"How did :class:`~django.contrib.sites.managers.CurrentSiteManager` know "
"which field of ``Photo`` was the :class:`~django.contrib.sites.models.Site`? "
"By default, :class:`~django.contrib.sites.managers.CurrentSiteManager` looks "
"for a either a :class:`~django.db.models.ForeignKey` called ``site`` or a :"
"class:`~django.db.models.ManyToManyField` called ``sites`` to filter on. If "
"you use a field named something other than ``site`` or ``sites`` to identify "
"which :class:`~django.contrib.sites.models.Site` objects your object is "
"related to, then you need to explicitly pass the custom field name as a "
"parameter to :class:`~django.contrib.sites.managers.CurrentSiteManager` on "
"your model. The following model, which has a field called ``publish_on``, "
"demonstrates this::"
msgstr ""

# ff72a9d9c70348188435f83c23d70110
#: ../../ref/contrib/sites.txt:349
msgid ""
"If you attempt to use :class:`~django.contrib.sites.managers."
"CurrentSiteManager` and pass a field name that doesn't exist, Django will "
"raise a ``ValueError``."
msgstr ""

# 7b256abbd868494da52e68d3135a42cc
#: ../../ref/contrib/sites.txt:352
msgid ""
"Finally, note that you'll probably want to keep a normal (non-site-specific) "
"``Manager`` on your model, even if you use :class:`~django.contrib.sites."
"managers.CurrentSiteManager`. As explained in the :doc:`manager "
"documentation </topics/db/managers>`, if you define a manager manually, then "
"Django won't create the automatic ``objects = models.Manager()`` manager for "
"you. Also note that certain parts of Django -- namely, the Django admin site "
"and generic views -- use whichever manager is defined *first* in the model, "
"so if you want your admin site to have access to all objects (not just site-"
"specific ones), put ``objects = models.Manager()`` in your model, before you "
"define :class:`~django.contrib.sites.managers.CurrentSiteManager`."
msgstr ""

# f1bec058dc454d4bb6e790e7956e6fb7
#: ../../ref/contrib/sites.txt:365
msgid "How Django uses the sites framework"
msgstr ""

# 788d56fee7174117b17889ec05cf39d1
#: ../../ref/contrib/sites.txt:367
msgid ""
"Although it's not required that you use the sites framework, it's strongly "
"encouraged, because Django takes advantage of it in a few places. Even if "
"your Django installation is powering only a single site, you should take the "
"two seconds to create the site object with your ``domain`` and ``name``, and "
"point to its ID in your :setting:`SITE_ID` setting."
msgstr ""

# 3b6ce7b67c1f4c73bdfcbff08f801759
#: ../../ref/contrib/sites.txt:373
msgid "Here's how Django uses the sites framework:"
msgstr ""

# 8aa33b61a608435eb563fa341e9ac912
#: ../../ref/contrib/sites.txt:375
msgid ""
"In the :mod:`redirects framework <django.contrib.redirects>`, each redirect "
"object is associated with a particular site. When Django searches for a "
"redirect, it takes into account the current :setting:`SITE_ID`."
msgstr ""

# 0db838084a3447c4b8dd5082e650ece9
#: ../../ref/contrib/sites.txt:379
msgid ""
"In the comments framework, each comment is associated with a particular "
"site. When a comment is posted, its :class:`~django.contrib.sites.models."
"Site` is set to the current :setting:`SITE_ID`, and when comments are listed "
"via the appropriate template tag, only the comments for the current site are "
"displayed."
msgstr ""

# ccc43ed7eeec4801a75159db2de16249
#: ../../ref/contrib/sites.txt:385
msgid ""
"In the :mod:`flatpages framework <django.contrib.flatpages>`, each flatpage "
"is associated with a particular site. When a flatpage is created, you "
"specify its :class:`~django.contrib.sites.models.Site`, and the :class:"
"`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware` checks the "
"current :setting:`SITE_ID` in retrieving flatpages to display."
msgstr ""

# 410c9530d40d45e58a13ea533f476fe2
#: ../../ref/contrib/sites.txt:391
msgid ""
"In the :mod:`syndication framework <django.contrib.syndication>`, the "
"templates for ``title`` and ``description`` automatically have access to a "
"variable ``{{ site }}``, which is the :class:`~django.contrib.sites.models."
"Site` object representing the current site. Also, the hook for providing "
"item URLs will use the ``domain`` from the current :class:`~django.contrib."
"sites.models.Site` object if you don't specify a fully-qualified domain."
msgstr ""

# cdc76522b70b407e9617533b5a1bb7c8
#: ../../ref/contrib/sites.txt:399
msgid ""
"In the :mod:`authentication framework <django.contrib.auth>`, the :func:"
"`django.contrib.auth.views.login` view passes the current :class:`~django."
"contrib.sites.models.Site` name to the template as ``{{ site_name }}``."
msgstr ""

# 14a2be3f85fe488c8eaf50ca5b5615fd
#: ../../ref/contrib/sites.txt:404
msgid ""
"The shortcut view (``django.views.defaults.shortcut``) uses the domain of "
"the current :class:`~django.contrib.sites.models.Site` object when "
"calculating an object's URL."
msgstr ""

# d7c3af7aa0ae4a32838b2298156858bd
#: ../../ref/contrib/sites.txt:408
msgid ""
"In the admin framework, the \"view on site\" link uses the current :class:"
"`~django.contrib.sites.models.Site` to work out the domain for the site that "
"it will redirect to."
msgstr ""

# 467c9c095b054606a4c38601c7e0e2fd
#: ../../ref/contrib/sites.txt:415
msgid "``RequestSite`` objects"
msgstr ""

# 084af4154f234d92aa7044be3fbacece
#: ../../ref/contrib/sites.txt:419
msgid ""
"Some :doc:`django.contrib </ref/contrib/index>` applications take advantage "
"of the sites framework but are architected in a way that doesn't *require* "
"the sites framework to be installed in your database. (Some people don't "
"want to, or just aren't *able* to install the extra database table that the "
"sites framework requires.) For those cases, the framework provides a :class:"
"`~django.contrib.sites.models.RequestSite` class, which can be used as a "
"fallback when the database-backed sites framework is not available."
msgstr ""

# ab44a3dc7cf748a59f5b91d738616aee
#: ../../ref/contrib/sites.txt:429
msgid ""
"A class that shares the primary interface of :class:`~django.contrib.sites."
"models.Site` (i.e., it has ``domain`` and ``name`` attributes) but gets its "
"data from a Django :class:`~django.http.HttpRequest` object rather than from "
"a database."
msgstr ""

# d2ab1bba199b4b7c83e479059fa4e638
#: ../../ref/contrib/sites.txt:434
msgid "The ``save()`` and ``delete()`` methods raise ``NotImplementedError``."
msgstr ""

# 61a0bc3b2f6444e98fb751e965293b34
#: ../../ref/contrib/sites.txt:438
msgid ""
"Sets the ``name`` and ``domain`` attributes to the value of :meth:`~django."
"http.HttpRequest.get_host`."
msgstr ""

# dc3219870a5f4f1894aa197f294c34b4
#: ../../ref/contrib/sites.txt:442
msgid ""
"A :class:`~django.contrib.sites.models.RequestSite` object has a similar "
"interface to a normal :class:`~django.contrib.sites.models.Site` object, "
"except its :meth:`~django.contrib.sites.models.RequestSite.__init__()` "
"method takes an :class:`~django.http.HttpRequest` object. It's able to "
"deduce the ``domain`` and ``name`` by looking at the request's domain. It "
"has ``save()`` and ``delete()`` methods to match the interface of :class:"
"`~django.contrib.sites.models.Site`, but the methods raise "
"``NotImplementedError``."
msgstr ""

# 59bd0bf072294e9386919e5ba2ac44ae
#: ../../ref/contrib/staticfiles.txt:3
msgid "The staticfiles app"
msgstr ""

# 78177dccf70a4eb1ae512b97a997180a
#: ../../ref/contrib/staticfiles.txt:10
msgid ""
"``django.contrib.staticfiles`` collects static files from each of your "
"applications (and any other places you specify) into a single location that "
"can easily be served in production."
msgstr ""

# 33f75b181d074fce86a4630b80443f00
#: ../../ref/contrib/staticfiles.txt:16
msgid ""
"For an introduction to the static files app and some usage examples, see :"
"doc:`/howto/static-files`."
msgstr ""

# 5ee153ef65c94b94939a245f2adae7bc
#: ../../ref/contrib/staticfiles.txt:28
msgid "The following settings control the behavior of the staticfiles app."
msgstr ""

# 449e8795cb904d58b0ff1c5eb850bd3a
#: ../../ref/contrib/staticfiles.txt:33
msgid "STATICFILES_DIRS"
msgstr ""

# 745acbc406a840f6834531c6a8583d11
#: ../../ref/contrib/staticfiles.txt:35
msgid "Default: ``[]``"
msgstr ""

# 9f81475edd264300873e931225fa8827
#: ../../ref/contrib/staticfiles.txt:37
msgid ""
"This setting defines the additional locations the staticfiles app will "
"traverse if the :class:`FileSystemFinder` finder is enabled, e.g. if you use "
"the :djadmin:`collectstatic` or :djadmin:`findstatic` management command or "
"use the static file serving view."
msgstr ""

# 9f6a01ef2c3c4888be9f85b0254e365c
#: ../../ref/contrib/staticfiles.txt:42
msgid ""
"This should be set to a list or tuple of strings that contain full paths to "
"your additional files directory(ies) e.g.::"
msgstr ""

# 3ff993854f37467286960a1f631c3a59
#: ../../ref/contrib/staticfiles.txt:52
msgid "Prefixes (optional)"
msgstr ""

# 2c0432a7f8414d50b0f89e7ac7f76ac9
#: ../../ref/contrib/staticfiles.txt:54
msgid ""
"In case you want to refer to files in one of the locations with an "
"additional namespace, you can **optionally** provide a prefix as ``(prefix, "
"path)`` tuples, e.g.::"
msgstr ""

# c86705deaaac4a40a3f620aa8b198e0a
#: ../../ref/contrib/staticfiles.txt:63
msgid "Example:"
msgstr ""

# 6d21038bb4fe44ad8d92035c8e0e9fef
#: ../../ref/contrib/staticfiles.txt:65
msgid ""
"Assuming you have :setting:`STATIC_URL` set ``'/static/'``, the :djadmin:"
"`collectstatic` management command would collect the \"stats\" files in a "
"``'downloads'`` subdirectory of :setting:`STATIC_ROOT`."
msgstr ""

# fc58d49df40b4e92b10c0fb4e79e2fb9
#: ../../ref/contrib/staticfiles.txt:69
msgid ""
"This would allow you to refer to the local file ``'/opt/webfiles/stats/"
"polls_20101022.tar.gz'`` with ``'/static/downloads/polls_20101022.tar.gz'`` "
"in your templates, e.g.:"
msgstr ""

# 1416650680ee472f84d6c49e06978d77
#: ../../ref/contrib/staticfiles.txt:80
msgid "STATICFILES_STORAGE"
msgstr ""

# 89de540ada3745bdab38e637bbb66194
#: ../../ref/contrib/staticfiles.txt:82
msgid "Default: ``'django.contrib.staticfiles.storage.StaticFilesStorage'``"
msgstr ""

# 046d33bf75104f469bd04104289e5eb0
#: ../../ref/contrib/staticfiles.txt:84
msgid ""
"The file storage engine to use when collecting static files with the :"
"djadmin:`collectstatic` management command."
msgstr ""

# 496a17c03752440c8bc8135d067ace4b
#: ../../ref/contrib/staticfiles.txt:89
msgid ""
"A ready-to-use instance of the storage backend defined in this setting can "
"be found at ``django.contrib.staticfiles.storage.staticfiles_storage``."
msgstr ""

# 129c74a4267a4855b271e7130cc18056
#: ../../ref/contrib/staticfiles.txt:92
msgid "For an example, see :ref:`staticfiles-from-cdn`."
msgstr ""

# 38f96c2356904368b7f3a7ddad898906
#: ../../ref/contrib/staticfiles.txt:97
msgid "STATICFILES_FINDERS"
msgstr ""

# 341d60d9d1544417b0f573e768d1d343
#: ../../ref/contrib/staticfiles.txt:104
msgid ""
"The list of finder backends that know how to find static files in various "
"locations."
msgstr ""

# e6d7f141643743ce9f9ee01db051d1bc
#: ../../ref/contrib/staticfiles.txt:107
msgid ""
"The default will find files stored in the :setting:`STATICFILES_DIRS` "
"setting (using :class:`django.contrib.staticfiles.finders.FileSystemFinder`) "
"and in a ``static`` subdirectory of each app (using :class:`django.contrib."
"staticfiles.finders.AppDirectoriesFinder`)"
msgstr ""

# 2095f9b9daa64e989d716a0839d9bc93
#: ../../ref/contrib/staticfiles.txt:112
msgid ""
"One finder is disabled by default: :class:`django.contrib.staticfiles."
"finders.DefaultStorageFinder`. If added to your :setting:"
"`STATICFILES_FINDERS` setting, it will look for static files in the default "
"file storage as defined by the :setting:`DEFAULT_FILE_STORAGE` setting."
msgstr ""

# 149720300bdc47cc80b4dec3e3586ddf
#: ../../ref/contrib/staticfiles.txt:120
msgid ""
"When using the :class:`AppDirectoriesFinder` finder, make sure your apps can "
"be found by staticfiles. Simply add the app to the :setting:`INSTALLED_APPS` "
"setting of your site."
msgstr ""

# 1ba3c5b397804317b6eb46742dd2e2cd
#: ../../ref/contrib/staticfiles.txt:124
msgid ""
"Static file finders are currently considered a private interface, and this "
"interface is thus undocumented."
msgstr ""

# 776d70a2d5204390b44dc40205afbb54
#: ../../ref/contrib/staticfiles.txt:128
msgid "Management Commands"
msgstr ""

# a2ce78febb8847a7b3d59f5cb4ad6c67
#: ../../ref/contrib/staticfiles.txt:132
msgid "``django.contrib.staticfiles`` exposes three management commands."
msgstr ""

# 1ae5bec8b228411d83da2977f84145b2
# f6d2cf15a4c44283841d58f6a390c5de
#: ../../ref/contrib/staticfiles.txt:135 ../../ref/django-admin.txt:1268
msgid "collectstatic"
msgstr ""

# 365cc0503bfa4931a4efd4b394dad2eb
#: ../../ref/contrib/staticfiles.txt:139
msgid "Collects the static files into :setting:`STATIC_ROOT`."
msgstr ""

# b909f0172e584ad0b54420cb82b2abbf
#: ../../ref/contrib/staticfiles.txt:141
msgid ""
"Duplicate file names are by default resolved in a similar way to how "
"template resolution works: the file that is first found in one of the "
"specified locations will be used. If you're confused, the :djadmin:"
"`findstatic` command can help show you which files are found."
msgstr ""

# 263f24c076f2421b8f5ff48c45d6352c
#: ../../ref/contrib/staticfiles.txt:146
msgid ""
"Files are searched by using the :setting:`enabled finders "
"<STATICFILES_FINDERS>`. The default is to look in all locations defined in :"
"setting:`STATICFILES_DIRS` and in the ``'static'`` directory of apps "
"specified by the :setting:`INSTALLED_APPS` setting."
msgstr ""

# 82f478549f464017acba02b0e6e07c17
#: ../../ref/contrib/staticfiles.txt:153
msgid ""
"The :djadmin:`collectstatic` management command calls the :meth:`~django."
"contrib.staticfiles.storage.StaticFilesStorage.post_process` method of the :"
"setting:`STATICFILES_STORAGE` after each run and passes a list of paths that "
"have been found by the management command. It also receives all command line "
"options of :djadmin:`collectstatic`. This is used by the :class:`~django."
"contrib.staticfiles.storage.CachedStaticFilesStorage` by default."
msgstr ""

# 44372f6da1a6463d8afb5cc74d054fae
#: ../../ref/contrib/staticfiles.txt:161
msgid "Some commonly used options are:"
msgstr ""

# b6eddf31336049ab88f845f2e105f677
#: ../../ref/contrib/staticfiles.txt:165
msgid "Do NOT prompt the user for input of any kind."
msgstr ""

# 6de1911727644af797c9501725bdd19e
#: ../../ref/contrib/staticfiles.txt:170
msgid ""
"Ignore files or directories matching this glob-style pattern. Use multiple "
"times to ignore more."
msgstr ""

# 794262047286451f8b308ac7efe726e0
#: ../../ref/contrib/staticfiles.txt:176
msgid "Do everything except modify the filesystem."
msgstr ""

# 9e1fdfb77c5c4a9f80b47ec4b0eb3393
#: ../../ref/contrib/staticfiles.txt:183
msgid ""
"Clear the existing files before trying to copy or link the original file."
msgstr ""

# 60a32d1f862a4168a259267353ac5a70
#: ../../ref/contrib/staticfiles.txt:188
msgid "Create a symbolic link to each file instead of copying."
msgstr ""

# b56bc2833e2b489591c620fd2e973867
#: ../../ref/contrib/staticfiles.txt:194
msgid ""
"Don't call the :meth:`~django.contrib.staticfiles.storage.StaticFilesStorage."
"post_process` method of the configured :setting:`STATICFILES_STORAGE` "
"storage backend."
msgstr ""

# c972978f0f6b46e3a5af07abfabf64c1
#: ../../ref/contrib/staticfiles.txt:200
msgid ""
"Don't ignore the common private glob-style patterns ``'CVS'``, ``'.*'`` and "
"``'*~'``."
msgstr ""

# a4ab816534494e708ef3195a5dd83e56
#: ../../ref/contrib/staticfiles.txt:203
msgid "For a full list of options, refer to the commands own help by running::"
msgstr ""

# 113a76a69b744b9a8ce08db76bfaaaeb
# b6fbf3b1683f41baaa7493b330f46940
#: ../../ref/contrib/staticfiles.txt:208 ../../ref/django-admin.txt:1277
msgid "findstatic"
msgstr ""

# dde6c14e612f4fdaab3d4010a6a4b838
#: ../../ref/contrib/staticfiles.txt:212
msgid "Searches for one or more relative paths with the enabled finders."
msgstr ""

# 129fd8661b2349f28b554b77a36d344f
#: ../../ref/contrib/staticfiles.txt:221
msgid ""
"By default, all matching locations are found. To only return the first match "
"for each relative path, use the ``--first`` option::"
msgstr ""

# 171cae2800054d7886dd28d9e728b002
#: ../../ref/contrib/staticfiles.txt:227
msgid ""
"This is a debugging aid; it'll show you exactly which static file will be "
"collected for a given path."
msgstr ""

# 6afbe1e5f69447be90d787d395a4bb84
#: ../../ref/contrib/staticfiles.txt:233
msgid "runserver"
msgstr ""

# 8723c5c2f09d401988c2cde5b20a0d41
#: ../../ref/contrib/staticfiles.txt:237
msgid ""
"Overrides the core :djadmin:`runserver` command if the ``staticfiles`` app "
"is :setting:`installed<INSTALLED_APPS>` and adds automatic serving of static "
"files and the following new options."
msgstr ""

# 7e345b549793474c8a4c2bbb451085a6
#: ../../ref/contrib/staticfiles.txt:243
msgid ""
"Use the ``--nostatic`` option to disable serving of static files with the :"
"doc:`staticfiles </ref/contrib/staticfiles>` app entirely. This option is "
"only available if the :doc:`staticfiles </ref/contrib/staticfiles>` app is "
"in your project's :setting:`INSTALLED_APPS` setting."
msgstr ""

# 7842fdcfa2934529a5c507ba35e1e094
# 44ae5d4adcc54e5984b189da00016809
# ec2460db6a3d49258a7c1a4f9491abe5
# 8a769f86f8be45a280876a5a9a44fa9e
# a785db5ceb0c46928b012be4451cb836
# 9c37e1253c384ce39577bb22fa22f761
# 8d5835c1e58c478cb5307b02d469a2e9
# 9f7074b045c948f187ca59d769e4ba00
# a3d84b3a7a754a1c8873518f8e9f81a0
# 15eca278e9fb4b96ace173a3df371a21
# 4d790c730ae74be1add409c0af4c5778
# d5b02bb7e97042e792a752e0361e1bc3
# a39a1b6457aa4146bfca9553a062457a
# 34f27e13409a4518b20dd8fa05d58a90
# 7e592fa539ab42389ba490cdd071d3f0
# 0b8c16b441f540e89d5adc4a81ab54ff
# 373d003db3ed40859f8db57d5ee36f32
# 6dcced0fa26a44588cc3fa8560b09260
#: ../../ref/contrib/staticfiles.txt:248 ../../ref/contrib/staticfiles.txt:262
#: ../../ref/django-admin.txt:110 ../../ref/django-admin.txt:414
#: ../../ref/django-admin.txt:423 ../../ref/django-admin.txt:433
#: ../../ref/django-admin.txt:452 ../../ref/django-admin.txt:463
#: ../../ref/django-admin.txt:624 ../../ref/django-admin.txt:684
#: ../../ref/django-admin.txt:702 ../../ref/django-admin.txt:721
#: ../../ref/django-admin.txt:1205 ../../ref/django-admin.txt:1293
#: ../../ref/django-admin.txt:1308 ../../ref/django-admin.txt:1322
#: ../../ref/django-admin.txt:1332 ../../ref/templates/builtins.txt:912
msgid "Example usage::"
msgstr ""

# e0dc3e4305f04608bbaad07f91716518
#: ../../ref/contrib/staticfiles.txt:254
msgid ""
"Use the ``--insecure`` option to force serving of static files with the :doc:"
"`staticfiles </ref/contrib/staticfiles>` app even if the :setting:`DEBUG` "
"setting is ``False``. By using this you acknowledge the fact that it's "
"**grossly inefficient** and probably **insecure**. This is only intended for "
"local development, should **never be used in production** and is only "
"available if the :doc:`staticfiles </ref/contrib/staticfiles>` app is in "
"your project's :setting:`INSTALLED_APPS` setting."
msgstr ""

# eb7671cbb703481fb702825e04cedc49
#: ../../ref/contrib/staticfiles.txt:267
msgid "Storages"
msgstr ""

# de98fee877424dff8a79440e47d7f31d
#: ../../ref/contrib/staticfiles.txt:270
msgid "StaticFilesStorage"
msgstr ""

# 45091c062a57436593bc993fe083c9b7
#: ../../ref/contrib/staticfiles.txt:274
msgid ""
"A subclass of the :class:`~django.core.files.storage.FileSystemStorage` "
"storage backend that uses the :setting:`STATIC_ROOT` setting as the base "
"file system location and the :setting:`STATIC_URL` setting respectively as "
"the base URL."
msgstr ""

# 8ac54d8ccd074d4090e2df3fc2bd1c88
#: ../../ref/contrib/staticfiles.txt:283
msgid ""
"This method is called by the :djadmin:`collectstatic` management command "
"after each run and gets passed the local storages and paths of found files "
"as a dictionary, as well as the command line options."
msgstr ""

# c98d230943094bacadb5d5f0966ff607
#: ../../ref/contrib/staticfiles.txt:287
msgid ""
"The :class:`~django.contrib.staticfiles.storage.CachedStaticFilesStorage` "
"uses this behind the scenes to replace the paths with their hashed "
"counterparts and update the cache appropriately."
msgstr ""

# b256355a563d4392afe092bae998b688
#: ../../ref/contrib/staticfiles.txt:292
msgid "CachedStaticFilesStorage"
msgstr ""

# de8ace6c84bb402aa7cf747f2025b4a4
#: ../../ref/contrib/staticfiles.txt:298
msgid ""
"A subclass of the :class:`~django.contrib.staticfiles.storage."
"StaticFilesStorage` storage backend which caches the files it saves by "
"appending the MD5 hash of the file's content to the filename. For example, "
"the file ``css/styles.css`` would also be saved as ``css/styles.55e7cbb9ba48."
"css``."
msgstr ""

# 38e884ac99a541e9ac337e6e6cffce78
#: ../../ref/contrib/staticfiles.txt:303
msgid ""
"The purpose of this storage is to keep serving the old files in case some "
"pages still refer to those files, e.g. because they are cached by you or a "
"3rd party proxy server. Additionally, it's very helpful if you want to apply "
"`far future Expires headers`_ to the deployed files to speed up the load "
"time for subsequent page visits."
msgstr ""

# 4bee7bcbff794d7bb2900f4fdf58be7b
#: ../../ref/contrib/staticfiles.txt:309
msgid ""
"The storage backend automatically replaces the paths found in the saved "
"files matching other saved files with the path of the cached copy (using "
"the :meth:`~django.contrib.staticfiles.storage.StaticFilesStorage."
"post_process` method). The regular expressions used to find those paths "
"(``django.contrib.staticfiles.storage.CachedStaticFilesStorage."
"cached_patterns``) by default cover the `@import`_ rule and `url()`_ "
"statement of `Cascading Style Sheets`_. For example, the ``'css/styles."
"css'`` file with the content"
msgstr ""

# 26f81311fc73454bb95326e4c9d87285
#: ../../ref/contrib/staticfiles.txt:322
msgid ""
"would be replaced by calling the :meth:`~django.core.files.storage.Storage."
"url` method of the ``CachedStaticFilesStorage`` storage backend, "
"ultimatively saving a ``'css/styles.55e7cbb9ba48.css'`` file with the "
"following content:"
msgstr ""

# 01b927f41dab43bab8a306992449b94d
#: ../../ref/contrib/staticfiles.txt:332
msgid ""
"To enable the ``CachedStaticFilesStorage`` you have to make sure the "
"following requirements are met:"
msgstr ""

# 89bc4faee7fd4519a8b37db883c05810
#: ../../ref/contrib/staticfiles.txt:335
msgid ""
"the :setting:`STATICFILES_STORAGE` setting is set to ``'django.contrib."
"staticfiles.storage.CachedStaticFilesStorage'``"
msgstr ""

# 0fab7a52beee4204a3e71686dbf31630
#: ../../ref/contrib/staticfiles.txt:337
msgid "the :setting:`DEBUG` setting is set to ``False``"
msgstr ""

# a6bfe52746624c40b4db6994748a3171
#: ../../ref/contrib/staticfiles.txt:338
msgid ""
"you use the ``staticfiles`` :ttag:`static<staticfiles-static>` template tag "
"to refer to your static files in your templates"
msgstr ""

# 6252fcd97cc9429c93aa0cc090990b3d
#: ../../ref/contrib/staticfiles.txt:340
msgid ""
"you've collected all your static files by using the :djadmin:`collectstatic` "
"management command"
msgstr ""

# 47c95095065f413a96083276f37ebe08
#: ../../ref/contrib/staticfiles.txt:343
msgid ""
"Since creating the MD5 hash can be a performance burden to your website "
"during runtime, ``staticfiles`` will automatically try to cache the hashed "
"name for each file path using Django's :doc:`caching framework</topics/"
"cache>`. If you want to override certain options of the cache backend the "
"storage uses, simply specify a custom entry in the :setting:`CACHES` setting "
"named ``'staticfiles'``. It falls back to using the ``'default'`` cache "
"backend."
msgstr ""

# 1018617b7f164b0b9554092355fd1340
# d50f4f563be24699851e98a13b8f6598
# 1f13032d65294cffa660164df762b261
#: ../../ref/contrib/staticfiles.txt:362 ../../ref/templates/builtins.txt:2421
#: ../../ref/templates/builtins.txt:2426
msgid "static"
msgstr ""

# c78a835bf08d45ba80bbd2bdff9138b0
#: ../../ref/contrib/staticfiles.txt:368
msgid ""
"Uses the configured :setting:`STATICFILES_STORAGE` storage to create the "
"full URL for the given relative path, e.g.:"
msgstr ""

# 6e7e5fb282974f14a1f89822bbd1cdb4
#: ../../ref/contrib/staticfiles.txt:376
msgid ""
"The previous example is equal to calling the ``url`` method of an instance "
"of :setting:`STATICFILES_STORAGE` with ``\"css/base.css\"``. This is "
"especially useful when using a non-local storage backend to deploy files as "
"documented in :ref:`staticfiles-from-cdn`."
msgstr ""

# f9db895ec61d47149b08bd4fdac0a344
#: ../../ref/contrib/staticfiles.txt:382
msgid "Other Helpers"
msgstr ""

# 85a07b81cbd9420f8efdb9a716a2319a
#: ../../ref/contrib/staticfiles.txt:384
msgid ""
"There are a few other helpers outside of the :mod:`staticfiles <django."
"contrib.staticfiles>` app to work with static files:"
msgstr ""

# b29adf4d23c1457f9ad4fca45f84c5c9
#: ../../ref/contrib/staticfiles.txt:388
msgid ""
"The :func:`django.core.context_processors.static` context processor which "
"adds :setting:`STATIC_URL` to every template context rendered with :class:"
"`~django.template.RequestContext` contexts."
msgstr ""

# cd6e9264cfbf4f34898e87854e5202ab
#: ../../ref/contrib/staticfiles.txt:392
msgid ""
"The builtin template tag :ttag:`static` which takes a path and urljoins it "
"with the static prefix :setting:`STATIC_URL`."
msgstr ""

# 109085d4915940a3a10b3c2857abe586
#: ../../ref/contrib/staticfiles.txt:395
msgid ""
"The builtin template tag :ttag:`get_static_prefix` which populates a "
"template variable with the static prefix :setting:`STATIC_URL` to be used as "
"a variable or directly."
msgstr ""

# 314b434cedc3438eb25e00b10b0ec300
#: ../../ref/contrib/staticfiles.txt:399
msgid ""
"The similar template tag :ttag:`get_media_prefix` which works like :ttag:"
"`get_static_prefix` but uses :setting:`MEDIA_URL`."
msgstr ""

# 88d3dae2b3484ec6859fa984e61e02f3
#: ../../ref/contrib/staticfiles.txt:405
msgid "Static file development view"
msgstr ""

# 0869934dedd54c2ab8baeaf09682020a
#: ../../ref/contrib/staticfiles.txt:411
msgid "This view function serves static files in development."
msgstr ""

# d51a9cfc74fc43b48bd8b0c8c4e7deab
#: ../../ref/contrib/staticfiles.txt:415
msgid "This view will only work if :setting:`DEBUG` is ``True``."
msgstr ""

# fc2f9a565e3a4cb193f5df9338efdc78
#: ../../ref/contrib/staticfiles.txt:417
msgid ""
"That's because this view is **grossly inefficient** and probably "
"**insecure**. This is only intended for local development, and should "
"**never be used in production**."
msgstr ""

# d3bd28cb359844c5b777753a0ec57209
#: ../../ref/contrib/staticfiles.txt:421
msgid ""
"This view is automatically enabled by :djadmin:`runserver` (with a :setting:"
"`DEBUG` setting set to ``True``). To use the view with a different local "
"development server, add the following snippet to the end of your primary URL "
"configuration::"
msgstr ""

# 07f04b4d1d5c437e955428dfccfcbdee
#: ../../ref/contrib/staticfiles.txt:433
msgid ""
"Note, the beginning of the pattern (``r'^static/'``) should be your :setting:"
"`STATIC_URL` setting."
msgstr ""

# 29906d1157e244c6bd8503e325e26205
#: ../../ref/contrib/staticfiles.txt:436
msgid ""
"Since this is a bit finicky, there's also a helper function that'll do this "
"for you:"
msgstr ""

# 43057a519baf4c76902f6566a973eba1
#: ../../ref/contrib/staticfiles.txt:440
msgid ""
"This will return the proper URL pattern for serving static files to your "
"already defined pattern list. Use it like this::"
msgstr ""

# 7ee368b6e17b4427a27c763dc7f72060
#: ../../ref/contrib/staticfiles.txt:451
msgid ""
"This helper function will only work if :setting:`DEBUG` is ``True`` and "
"your :setting:`STATIC_URL` setting is neither empty nor a full URL such as "
"``http://static.example.com/``."
msgstr ""

# ca2e58e3170749f791cf3f93ff11d58d
#: ../../ref/contrib/syndication.txt:3
msgid "The syndication feed framework"
msgstr ""

# a8724634cc62418fa527cbd39dcf28d6
#: ../../ref/contrib/syndication.txt:9
msgid ""
"Django comes with a high-level syndication-feed-generating framework that "
"makes creating RSS_ and Atom_ feeds easy."
msgstr ""

# 09601dac41bf4275aec7a94bcba2a6aa
#: ../../ref/contrib/syndication.txt:12
msgid ""
"To create any syndication feed, all you have to do is write a short Python "
"class. You can create as many feeds as you want."
msgstr ""

# a98088b8e77d4c82a06a93a8f25366ef
#: ../../ref/contrib/syndication.txt:15
msgid ""
"Django also comes with a lower-level feed-generating API. Use this if you "
"want to generate feeds outside of a Web context, or in some other lower-"
"level way."
msgstr ""

# 1814013b58df40df982c42c9176e8049
#: ../../ref/contrib/syndication.txt:23
msgid "The high-level framework"
msgstr ""

# d613465340d14f7fb46a55a43b699fc6
#: ../../ref/contrib/syndication.txt:36
msgid ""
"The high-level feed-generating framework is supplied by the :class:`~django."
"contrib.syndication.views.Feed` class. To create a feed, write a :class:"
"`~django.contrib.syndication.views.Feed` class and point to an instance of "
"it in your :doc:`URLconf </topics/http/urls>`."
msgstr ""

# ccdf2d8bab794412a04de842eb6c2337
#: ../../ref/contrib/syndication.txt:43
msgid "Feed classes"
msgstr ""

# 6ad5cf31e8e34ec7ade6aea0dffee419
#: ../../ref/contrib/syndication.txt:45
msgid ""
"A :class:`~django.contrib.syndication.views.Feed` class is a Python class "
"that represents a syndication feed. A feed can be simple (e.g., a \"site news"
"\" feed, or a basic feed displaying the latest entries of a blog) or more "
"complex (e.g., a feed displaying all the blog entries in a particular "
"category, where the category is variable)."
msgstr ""

# 47a58a7a8c344faf9078746b3fc758aa
#: ../../ref/contrib/syndication.txt:51
msgid ""
"Feed classes subclass :class:`django.contrib.syndication.views.Feed`. They "
"can live anywhere in your codebase."
msgstr ""

# 815a2572124d4709a7837b57a91d786f
#: ../../ref/contrib/syndication.txt:54
msgid ""
"Instances of :class:`~django.contrib.syndication.views.Feed` classes are "
"views which can be used in your :doc:`URLconf </topics/http/urls>`."
msgstr ""

# 3ae28c2e26ea4f488689da5274b8cb10
#: ../../ref/contrib/syndication.txt:60
msgid ""
"This simple example, taken from `chicagocrime.org`_, describes a feed of the "
"latest five news items::"
msgstr ""

# c92520a695df4d25ad0296112617295a
#: ../../ref/contrib/syndication.txt:80
msgid ""
"To connect a URL to this feed, put an instance of the Feed object in your :"
"doc:`URLconf </topics/http/urls>`. For example::"
msgstr ""

# 37fba492dd8c4157a80056382a1b9522
#: ../../ref/contrib/syndication.txt:94
msgid ""
"The Feed class subclasses :class:`django.contrib.syndication.views.Feed`."
msgstr ""

# 38284472ab774d88af7dd710bc06885e
#: ../../ref/contrib/syndication.txt:96
msgid ""
"``title``, ``link`` and ``description`` correspond to the standard RSS "
"``<title>``, ``<link>`` and ``<description>`` elements, respectively."
msgstr ""

# b4514fc1ddf8482e84a9cdf506d12c89
#: ../../ref/contrib/syndication.txt:100
msgid ""
"``items()`` is, simply, a method that returns a list of objects that should "
"be included in the feed as ``<item>`` elements. Although this example "
"returns ``NewsItem`` objects using Django's :doc:`object-relational mapper </"
"ref/models/querysets>`, ``items()`` doesn't have to return model instances. "
"Although you get a few bits of functionality \"for free\" by using Django "
"models, ``items()`` can return any type of object you want."
msgstr ""

# 21b9eace349b4849823c8bec079e5332
#: ../../ref/contrib/syndication.txt:108
msgid ""
"If you're creating an Atom feed, rather than an RSS feed, set the "
"``subtitle`` attribute instead of the ``description`` attribute. See "
"`Publishing Atom and RSS feeds in tandem`_, later, for an example."
msgstr ""

# 0be7f1310951457fb1b441dbf870a5af
#: ../../ref/contrib/syndication.txt:112
msgid ""
"One thing is left to do. In an RSS feed, each ``<item>`` has a ``<title>``, "
"``<link>`` and ``<description>``. We need to tell the framework what data to "
"put into those elements."
msgstr ""

# afbde747422f4c6f86a89e8a33d1d4e9
#: ../../ref/contrib/syndication.txt:116
msgid ""
"For the contents of ``<title>`` and ``<description>``, Django tries calling "
"the methods ``item_title()`` and ``item_description()`` on the :class:"
"`~django.contrib.syndication.views.Feed` class. They are passed a single "
"parameter, ``item``, which is the object itself. These are optional; by "
"default, the unicode representation of the object is used for both."
msgstr ""

# e5302aa8a21648529ba5e96c3a29d9ce
#: ../../ref/contrib/syndication.txt:123
msgid ""
"If you want to do any special formatting for either the title or "
"description, :doc:`Django templates </topics/templates>` can be used "
"instead. Their paths can be specified with the ``title_template`` and "
"``description_template`` attributes on the :class:`~django.contrib."
"syndication.views.Feed` class. The templates are rendered for each item and "
"are passed two template context variables:"
msgstr ""

# 40695f534c704f06806abab860ae92e2
#: ../../ref/contrib/syndication.txt:130
msgid ""
"``{{ obj }}`` -- The current object (one of whichever objects you returned "
"in ``items()``)."
msgstr ""

# e9a65e4989424a98ae3c59d35319f839
#: ../../ref/contrib/syndication.txt:133
msgid ""
"``{{ site }}`` -- A :class:`django.contrib.sites.models.Site` object "
"representing the current site. This is useful for ``{{ site.domain }}`` or ``"
"{{ site.name }}``. If you do *not* have the Django sites framework "
"installed, this will be set to a :class:`django.contrib.sites.models."
"RequestSite` object. See the :ref:`RequestSite section of the sites "
"framework documentation <requestsite-objects>` for more."
msgstr ""

# bcf80030b0994e96968f176523c9e102
#: ../../ref/contrib/syndication.txt:141
msgid "See `a complex example`_ below that uses a description template."
msgstr ""

# 5f804fdde11e4ed58159be50870a3c15
#: ../../ref/contrib/syndication.txt:143
msgid ""
"To specify the contents of ``<link>``, you have two options. For each item "
"in ``items()``, Django first tries calling the ``item_link()`` method on "
"the :class:`~django.contrib.syndication.views.Feed` class. In a similar way "
"to the title and description, it is passed it a single parameter, ``item``. "
"If that method doesn't exist, Django tries executing a ``get_absolute_url()"
"`` method on that object. Both ``get_absolute_url()`` and ``item_link()`` "
"should return the item's URL as a normal Python string. As with "
"``get_absolute_url()``, the result of ``item_link()`` will be included "
"directly in the URL, so you are responsible for doing all necessary URL "
"quoting and conversion to ASCII inside the method itself."
msgstr ""

# 8c003ca86578466281e4b8a243f1027d
#: ../../ref/contrib/syndication.txt:159
msgid "A complex example"
msgstr ""

# e1d1e5f099c84e698ed06ecfed20991b
#: ../../ref/contrib/syndication.txt:161
msgid "The framework also supports more complex feeds, via arguments."
msgstr ""

# 63763dbc4e5e49b3a142a9242f1f13bb
#: ../../ref/contrib/syndication.txt:163
msgid ""
"For example, `chicagocrime.org`_ offers an RSS feed of recent crimes for "
"every police beat in Chicago. It'd be silly to create a separate :class:"
"`~django.contrib.syndication.views.Feed` class for each police beat; that "
"would violate the :ref:`DRY principle <dry>` and would couple data to "
"programming logic. Instead, the syndication framework lets you access the "
"arguments passed from your :doc:`URLconf </topics/http/urls>` so feeds can "
"output items based on information in the feed's URL."
msgstr ""

# b44f978ff394437e8b48725b35b26805
#: ../../ref/contrib/syndication.txt:171
msgid ""
"On chicagocrime.org, the police-beat feeds are accessible via URLs like this:"
msgstr ""

# d3cba5a8d56a4e66a9988366d9cf4321
#: ../../ref/contrib/syndication.txt:173
msgid ":file:`/beats/613/rss/` -- Returns recent crimes for beat 613."
msgstr ""

# 5da5058c629944edb7651c0b0fef1cd9
#: ../../ref/contrib/syndication.txt:174
msgid ":file:`/beats/1424/rss/` -- Returns recent crimes for beat 1424."
msgstr ""

# f0ccf7af21cc4df79d5e5ec4f41c82d0
#: ../../ref/contrib/syndication.txt:176
msgid ""
"These can be matched with a :doc:`URLconf </topics/http/urls>` line such as::"
msgstr ""

# 4aa44917c88a4144b234af86a8478d8b
#: ../../ref/contrib/syndication.txt:180
msgid ""
"Like a view, the arguments in the URL are passed to the ``get_object()`` "
"method along with the request object."
msgstr ""

# 4ce40f8e84144004a9fb38e4d8ace42b
#: ../../ref/contrib/syndication.txt:186
msgid "Here's the code for these beat-specific feeds::"
msgstr ""

# 3fb91650a84e4ae89fe83fe6fe01b385
#: ../../ref/contrib/syndication.txt:209
msgid ""
"To generate the feed's ``<title>``, ``<link>`` and ``<description>``, Django "
"uses the ``title()``, ``link()`` and ``description()`` methods. In the "
"previous example, they were simple string class attributes, but this example "
"illustrates that they can be either strings *or* methods. For each of "
"``title``, ``link`` and ``description``, Django follows this algorithm:"
msgstr ""

# 02de3642a0a74aa09b6ed6da3354c6eb
#: ../../ref/contrib/syndication.txt:216
msgid ""
"First, it tries to call a method, passing the ``obj`` argument, where "
"``obj`` is the object returned by ``get_object()``."
msgstr ""

# 2252b58c9ffb4c409268e15c9007e56e
#: ../../ref/contrib/syndication.txt:219
msgid "Failing that, it tries to call a method with no arguments."
msgstr ""

# 9a7a3c83d11b44d495f300e5e7d409fa
#: ../../ref/contrib/syndication.txt:221
msgid "Failing that, it uses the class attribute."
msgstr ""

# ecd8dd4d2ab54d35ad60e8081b0055c3
#: ../../ref/contrib/syndication.txt:223
msgid ""
"Also note that ``items()`` also follows the same algorithm -- first, it "
"tries ``items(obj)``, then ``items()``, then finally an ``items`` class "
"attribute (which should be a list)."
msgstr ""

# e96671bcc4e24df7b4a316edf321c662
#: ../../ref/contrib/syndication.txt:227
msgid ""
"We are using a template for the item descriptions. It can be very simple:"
msgstr ""

# 33d4c99e8f344db6ae9619fe665ff54f
#: ../../ref/contrib/syndication.txt:233
msgid "However, you are free to add formatting as desired."
msgstr ""

# e29026d02b8245669496e41680b20870
#: ../../ref/contrib/syndication.txt:235
msgid ""
"The ``ExampleFeed`` class below gives full documentation on methods and "
"attributes of :class:`~django.contrib.syndication.views.Feed` classes."
msgstr ""

# a513cd6204d74188b99f06764e50518d
#: ../../ref/contrib/syndication.txt:239
msgid "Specifying the type of feed"
msgstr ""

# 902d2b4c61584db8bda6a0983f2efe86
#: ../../ref/contrib/syndication.txt:241
msgid "By default, feeds produced in this framework use RSS 2.0."
msgstr ""

# 621d01ea969f428dbf2574cc369542d1
#: ../../ref/contrib/syndication.txt:243
msgid ""
"To change that, add a ``feed_type`` attribute to your :class:`~django."
"contrib.syndication.views.Feed` class, like so::"
msgstr ""

# 2791721cd0184ff8989e652d059c6549
#: ../../ref/contrib/syndication.txt:251
msgid "Note that you set ``feed_type`` to a class object, not an instance."
msgstr ""

# e1f9258b3aa24b279c2ce70a91995e36
#: ../../ref/contrib/syndication.txt:253
msgid "Currently available feed types are:"
msgstr ""

# 71588c01389b4c8385f4c8d571221258
#: ../../ref/contrib/syndication.txt:255
msgid ":class:`django.utils.feedgenerator.Rss201rev2Feed` (RSS 2.01. Default.)"
msgstr ""

# 8754c2261fcf47c9b6ee09c3fa43944c
#: ../../ref/contrib/syndication.txt:256
msgid ":class:`django.utils.feedgenerator.RssUserland091Feed` (RSS 0.91.)"
msgstr ""

# e4cf7a3fe6ca4f3fb477506a53cbc497
#: ../../ref/contrib/syndication.txt:257
msgid ":class:`django.utils.feedgenerator.Atom1Feed` (Atom 1.0.)"
msgstr ""

# 2f8e5e0749f3454a98efa22978a83c50
#: ../../ref/contrib/syndication.txt:260
msgid "Enclosures"
msgstr ""

# 482fc5351377434d919af0d2ca1502c4
#: ../../ref/contrib/syndication.txt:262
msgid ""
"To specify enclosures, such as those used in creating podcast feeds, use the "
"``item_enclosure_url``, ``item_enclosure_length`` and "
"``item_enclosure_mime_type`` hooks. See the ``ExampleFeed`` class below for "
"usage examples."
msgstr ""

# 6887de713c3d4cfcb6d2c20621f276ea
#: ../../ref/contrib/syndication.txt:268
msgid "Language"
msgstr ""

# 27636af35c714adbbcc279a6372b177c
#: ../../ref/contrib/syndication.txt:270
msgid ""
"Feeds created by the syndication framework automatically include the "
"appropriate ``<language>`` tag (RSS 2.0) or ``xml:lang`` attribute (Atom). "
"This comes directly from your :setting:`LANGUAGE_CODE` setting."
msgstr ""

# 2d23a718bc60450eaa203e075fd3208f
#: ../../ref/contrib/syndication.txt:275
msgid "URLs"
msgstr ""

# 61680c31bf504df295d2f912de415468
#: ../../ref/contrib/syndication.txt:277
msgid ""
"The ``link`` method/attribute can return either an absolute path (e.g. :file:"
"`\"/blog/\"`) or a URL with the fully-qualified domain and protocol (e.g. ``"
"\"http://www.example.com/blog/\"``). If ``link`` doesn't return the domain, "
"the syndication framework will insert the domain of the current site, "
"according to your :setting:`SITE_ID setting <SITE_ID>`."
msgstr ""

# 8ce7074638ba4f6bbf458bb710ace6c8
#: ../../ref/contrib/syndication.txt:283
msgid ""
"Atom feeds require a ``<link rel=\"self\">`` that defines the feed's current "
"location. The syndication framework populates this automatically, using the "
"domain of the current site according to the :setting:`SITE_ID` setting."
msgstr ""

# fec5f29c127843b990c5a62c1bcecaa6
#: ../../ref/contrib/syndication.txt:288
msgid "Publishing Atom and RSS feeds in tandem"
msgstr ""

# 90bcda30da09467c9fe92af6467e1ad5
#: ../../ref/contrib/syndication.txt:290
msgid ""
"Some developers like to make available both Atom *and* RSS versions of their "
"feeds. That's easy to do with Django: Just create a subclass of your :class:"
"`~django.contrib.syndication.views.Feed` class and set the ``feed_type`` to "
"something different. Then update your URLconf to add the extra versions."
msgstr ""

# a761b952cc4a4756be50df9ae15000ac
#: ../../ref/contrib/syndication.txt:296
msgid "Here's a full example::"
msgstr ""

# b852d88d14bf4bd0a508301cb3c55bb6
#: ../../ref/contrib/syndication.txt:315
msgid ""
"In this example, the RSS feed uses a ``description`` while the Atom feed "
"uses a ``subtitle``. That's because Atom feeds don't provide for a feed-"
"level \"description,\" but they *do* provide for a \"subtitle.\""
msgstr ""

# e7a80d53c59d401ab1d53e828f521597
#: ../../ref/contrib/syndication.txt:319
msgid ""
"If you provide a ``description`` in your :class:`~django.contrib.syndication."
"views.Feed` class, Django will *not* automatically put that into the "
"``subtitle`` element, because a subtitle and description are not necessarily "
"the same thing. Instead, you should define a ``subtitle`` attribute."
msgstr ""

# b6530049a9274b2a86bd1d449ec15a0f
#: ../../ref/contrib/syndication.txt:325
msgid ""
"In the above example, we simply set the Atom feed's ``subtitle`` to the RSS "
"feed's ``description``, because it's quite short already."
msgstr ""

# 7a2ad712aa6a4657a868ace2e6577e01
#: ../../ref/contrib/syndication.txt:328
msgid "And the accompanying URLconf::"
msgstr ""

# 3be4496070a54c5c867d90ef33be636a
#: ../../ref/contrib/syndication.txt:341
msgid "Feed class reference"
msgstr ""

# df31d68a07524732b299432f79cdb29a
#: ../../ref/contrib/syndication.txt:345
msgid ""
"This example illustrates all possible attributes and methods for a :class:"
"`~django.contrib.syndication.views.Feed` class::"
msgstr ""

# dda9ab4f40894668803708022c5dfc14
#: ../../ref/contrib/syndication.txt:791
msgid "The low-level framework"
msgstr ""

# d2c7cff5b7584cf184f6ba1f4fd3d670
#: ../../ref/contrib/syndication.txt:793
msgid ""
"Behind the scenes, the high-level RSS framework uses a lower-level framework "
"for generating feeds' XML. This framework lives in a single module: `django/"
"utils/feedgenerator.py`_."
msgstr ""

# 95e787b2726442669baeb11cfdc83872
#: ../../ref/contrib/syndication.txt:797
msgid ""
"You use this framework on your own, for lower-level feed generation. You can "
"also create custom feed generator subclasses for use with the ``feed_type`` "
"``Feed`` option."
msgstr ""

# c0590fff1f4d4c92bebc2fa84c00510e
#: ../../ref/contrib/syndication.txt:804
msgid "``SyndicationFeed`` classes"
msgstr ""

# 91e14f578dc54b93bdb884d622f2cee7
#: ../../ref/contrib/syndication.txt:806
msgid "The :mod:`~django.utils.feedgenerator` module contains a base class:"
msgstr ""

# 42e0edbe21c44ce39516eb32f263a199
#: ../../ref/contrib/syndication.txt:808
msgid ":class:`django.utils.feedgenerator.SyndicationFeed`"
msgstr ""

# 6a6a54804b854cc09aec6cf354a2d875
#: ../../ref/contrib/syndication.txt:810
msgid "and several subclasses:"
msgstr ""

# 76dd4cc8f3314ef8a219d40b0704e065
#: ../../ref/contrib/syndication.txt:812
msgid ":class:`django.utils.feedgenerator.RssUserland091Feed`"
msgstr ""

# b40d0ac1ef774aa9a078ae035a6253ab
#: ../../ref/contrib/syndication.txt:813
msgid ":class:`django.utils.feedgenerator.Rss201rev2Feed`"
msgstr ""

# 8f8a1915bca3423ebcce7fa1cacad8a6
#: ../../ref/contrib/syndication.txt:814
msgid ":class:`django.utils.feedgenerator.Atom1Feed`"
msgstr ""

# 2cae8f52d914421eb1269ac3e77ef1e3
#: ../../ref/contrib/syndication.txt:816
msgid ""
"Each of these three classes knows how to render a certain type of feed as "
"XML. They share this interface:"
msgstr ""

# 773a8a7c230c4f56ace3726a016f21ee
#: ../../ref/contrib/syndication.txt:820
msgid ""
"Initialize the feed with the given dictionary of metadata, which applies to "
"the entire feed. Required keyword arguments are:"
msgstr ""

# c9a3669c3f4a464f978ffa244aadde7b
# b9b2945a98ec460d8a0614e96a47e78e
#: ../../ref/contrib/syndication.txt:823 ../../ref/contrib/syndication.txt:851
msgid "``title``"
msgstr ""

# 4ce7990596c5493f9f05a36823150d53
# de4884656fe84e75bcc068eb1272d54a
#: ../../ref/contrib/syndication.txt:825 ../../ref/contrib/syndication.txt:853
msgid "``description``"
msgstr ""

# 5c0390f786ba487a8f4f595affb002e9
#: ../../ref/contrib/syndication.txt:827
msgid "There's also a bunch of other optional keywords:"
msgstr ""

# e4919ee5b1dc4044889bea2132bd8d65
#: ../../ref/contrib/syndication.txt:829
msgid "``language``"
msgstr ""

# 30c0fab1b478474aa27b02b691a2a844
# 88ff470b89c04c92a8b036f1798979a4
#: ../../ref/contrib/syndication.txt:830 ../../ref/contrib/syndication.txt:857
msgid "``author_email``"
msgstr ""

# aa76ecfb33214854a756421b26f318a4
# 05f2ed85d24942b38b59f4f1d3e591ad
#: ../../ref/contrib/syndication.txt:831 ../../ref/contrib/syndication.txt:858
msgid "``author_name``"
msgstr ""

# 3f569c43c203496597791f752dad1c51
# eb988f17b43c40ae9903a6598a3ecb42
#: ../../ref/contrib/syndication.txt:832 ../../ref/contrib/syndication.txt:859
msgid "``author_link``"
msgstr ""

# 69f2721e73f343b59e4a3c76e7e679b5
#: ../../ref/contrib/syndication.txt:833
msgid "``subtitle``"
msgstr ""

# 5aaed9ca94614223bddafcad222f7c73
# f2a37e58764343adb70eeff4d83e3b6f
#: ../../ref/contrib/syndication.txt:834 ../../ref/contrib/syndication.txt:864
msgid "``categories``"
msgstr ""

# 1da981d27d2c46388540370d194ef1db
#: ../../ref/contrib/syndication.txt:835
msgid "``feed_url``"
msgstr ""

# d8485b8f95ad4b0e9b9281e28c7f5472
#: ../../ref/contrib/syndication.txt:836
msgid "``feed_copyright``"
msgstr ""

# 295a379636384c57892a54c5ef855e62
#: ../../ref/contrib/syndication.txt:837
msgid "``feed_guid``"
msgstr ""

# 11eb32cf12c445339b1de53e209ddb71
# 4972c99c1515473c956b61832ff00afb
#: ../../ref/contrib/syndication.txt:838 ../../ref/contrib/syndication.txt:866
msgid "``ttl``"
msgstr ""

# 14a64a4a977a4a3393e174168d003f10
#: ../../ref/contrib/syndication.txt:840
msgid ""
"Any extra keyword arguments you pass to ``__init__`` will be stored in "
"``self.feed`` for use with `custom feed generators`_."
msgstr ""

# f3537a5ddfa84433a6b7e2974663fce0
# 2301baa777c8419fbf66d5cbac179b5a
#: ../../ref/contrib/syndication.txt:843 ../../ref/utils.txt:273
msgid ""
"All parameters should be Unicode objects, except ``categories``, which "
"should be a sequence of Unicode objects."
msgstr ""

# 13ef449abad949209c709ab26b3ff861
#: ../../ref/contrib/syndication.txt:847
msgid "Add an item to the feed with the given parameters."
msgstr ""

# c1e259c7b56445638f7640f7371184f8
#: ../../ref/contrib/syndication.txt:849
msgid "Required keyword arguments are:"
msgstr ""

# 51642544818947658b5659b07cca19bf
#: ../../ref/contrib/syndication.txt:855
msgid "Optional keyword arguments are:"
msgstr ""

# e9d47ddaf673434fa676b09ccd2f0e36
#: ../../ref/contrib/syndication.txt:860
msgid "``pubdate``"
msgstr ""

# d3cdbff1e6554d63beb5394eb993979d
#: ../../ref/contrib/syndication.txt:861
msgid "``comments``"
msgstr ""

# cc9fbc0dc4ac46628eece65ea74c58c2
#: ../../ref/contrib/syndication.txt:862
msgid "``unique_id``"
msgstr ""

# 2875b0ce4ed547289976831fa00f5646
#: ../../ref/contrib/syndication.txt:863
msgid "``enclosure``"
msgstr ""

# 790f7e7fa2b342649a05b82ea52677f2
#: ../../ref/contrib/syndication.txt:865
msgid "``item_copyright``"
msgstr ""

# 002f1790adbc45c2b5441683d95c6664
#: ../../ref/contrib/syndication.txt:868
msgid "Extra keyword arguments will be stored for `custom feed generators`_."
msgstr ""

# 7711810656fb475fb339e22ecda6aaa5
#: ../../ref/contrib/syndication.txt:870
msgid "All parameters, if given, should be Unicode objects, except:"
msgstr ""

# ebae98c4e1f642dfbdb46f3cb7776893
#: ../../ref/contrib/syndication.txt:872
msgid "``pubdate`` should be a Python  :class:`~datetime.datetime` object."
msgstr ""

# 318d5d601bad4aa9b1b33c336cdfd4af
#: ../../ref/contrib/syndication.txt:873
msgid ""
"``enclosure`` should be an instance of :class:`django.utils.feedgenerator."
"Enclosure`."
msgstr ""

# 57fbd1aaecc94a9cb83760990ba41d3e
#: ../../ref/contrib/syndication.txt:875
msgid "``categories`` should be a sequence of Unicode objects."
msgstr ""

# ae2a35be527e45d08fb286abba1b391b
#: ../../ref/contrib/syndication.txt:878
msgid ""
"Outputs the feed in the given encoding to outfile, which is a file-like "
"object."
msgstr ""

# b02cedfb31084bb1a002a915be00745c
#: ../../ref/contrib/syndication.txt:881
msgid "Returns the feed as a string in the given encoding."
msgstr ""

# 26a72586223141c6ad7d68671db211e0
#: ../../ref/contrib/syndication.txt:883
msgid ""
"For example, to create an Atom 1.0 feed and print it to standard output::"
msgstr ""

# d6624cb01ebf40e98ad1c375a4cc888e
#: ../../ref/contrib/syndication.txt:909
msgid "Custom feed generators"
msgstr ""

# 1a8aa193b4bb4a8c8d7bd6549b583323
#: ../../ref/contrib/syndication.txt:911
msgid ""
"If you need to produce a custom feed format, you've got a couple of options."
msgstr ""

# 2b83dd06c0dd4ce7bceadc8433ecb5ee
#: ../../ref/contrib/syndication.txt:913
msgid ""
"If the feed format is totally custom, you'll want to subclass "
"``SyndicationFeed`` and completely replace the ``write()`` and ``writeString"
"()`` methods."
msgstr ""

# d61e85895fdb4de796c84377139b3991
#: ../../ref/contrib/syndication.txt:917
msgid ""
"However, if the feed format is a spin-off of RSS or Atom (i.e. GeoRSS_, "
"Apple's `iTunes podcast format`_, etc.), you've got a better choice. These "
"types of feeds typically add extra elements and/or attributes to the "
"underlying format, and there are a set of methods that ``SyndicationFeed`` "
"calls to get these extra attributes. Thus, you can subclass the appropriate "
"feed generator class (``Atom1Feed`` or ``Rss201rev2Feed``) and extend these "
"callbacks. They are:"
msgstr ""

# 72468838ba814154a8ebe756a5ceb5e5
#: ../../ref/contrib/syndication.txt:928
msgid ""
"Return a ``dict`` of attributes to add to the root feed element (``feed``/"
"``channel``)."
msgstr ""

# 0bf3738383614baf9f665d722d55dcad
#: ../../ref/contrib/syndication.txt:932
msgid ""
"Callback to add elements inside the root feed element (``feed``/"
"``channel``). ``handler`` is an :class:`~xml.sax.saxutils.XMLGenerator` from "
"Python's built-in SAX library; you'll call methods on it to add to the XML "
"document in process."
msgstr ""

# da3067a3112c4b5292668230af1ca365
#: ../../ref/contrib/syndication.txt:938
msgid ""
"Return a ``dict`` of attributes to add to each item (``item``/``entry``) "
"element. The argument, ``item``, is a dictionary of all the data passed to "
"``SyndicationFeed.add_item()``."
msgstr ""

# b35900725355423abaffaf2372ab336c
#: ../../ref/contrib/syndication.txt:943
msgid ""
"Callback to add elements to each item (``item``/``entry``) element. "
"``handler`` and ``item`` are as above."
msgstr ""

# 1cfe79feb71847aea6163396360dc441
#: ../../ref/contrib/syndication.txt:948
msgid ""
"If you override any of these methods, be sure to call the superclass methods "
"since they add the required elements for each feed format."
msgstr ""

# 5f49bf6667184870910281c8a71b4095
#: ../../ref/contrib/syndication.txt:951
msgid ""
"For example, you might start implementing an iTunes RSS feed generator like "
"so::"
msgstr ""

# 25a6c06c2bca45448d196d75462ef1ae
#: ../../ref/contrib/syndication.txt:963
msgid ""
"Obviously there's a lot more work to be done for a complete custom feed "
"class, but the above example should demonstrate the basic idea."
msgstr ""

# e825b21f6525438e81b75bfff1ccb8bd
# 7b7914df94c845c3a2b2652ec4c286e8
#: ../../ref/contrib/webdesign.txt:3 ../../ref/templates/builtins.txt:2415
msgid "django.contrib.webdesign"
msgstr ""

# 39e1891b4ac8479fa62a0078959744ed
#: ../../ref/contrib/webdesign.txt:9
msgid ""
"The ``django.contrib.webdesign`` package, part of the :doc:`\"django.contrib"
"\" add-ons </ref/contrib/index>`, provides various Django helpers that are "
"particularly useful to Web *designers* (as opposed to developers)."
msgstr ""

# b565ffdd7b964c069f4e097301a1b74e
#: ../../ref/contrib/webdesign.txt:14
msgid ""
"At present, the package contains only a single template tag. If you have "
"ideas for Web-designer-friendly functionality in Django, please :doc:"
"`suggest them </internals/contributing/index>`."
msgstr ""

# 03715439af3e4bc790c7bdde878db4ce
#: ../../ref/contrib/webdesign.txt:21
msgid ""
"To use these template tags, add ``'django.contrib.webdesign'`` to your :"
"setting:`INSTALLED_APPS` setting. Once you've done that, use ``{% load "
"webdesign %}`` in a template to give your template access to the tags."
msgstr ""

# b9031a8d73244d0697a4180a46cf57de
#: ../../ref/contrib/webdesign.txt:27
msgid "lorem"
msgstr ""

# 102dda6d113c4d7baaddeef4f102fdea
#: ../../ref/contrib/webdesign.txt:29
msgid ""
"Displays random \"lorem ipsum\" Latin text. This is useful for providing "
"sample data in templates."
msgstr ""

# 5ac3d28df26b41c791260defc4f042f2
#: ../../ref/contrib/webdesign.txt:36
msgid ""
"The ``{% lorem %}`` tag can be used with zero, one, two or three arguments. "
"The arguments are:"
msgstr ""

# 1b7ac69a6242409586a4afbfb86a11d3
#: ../../ref/contrib/webdesign.txt:42
msgid "``count``"
msgstr ""

# 9d7820e8ae3a4992ab702a2754ba0e6c
#: ../../ref/contrib/webdesign.txt:42
msgid ""
"A number (or variable) containing the number of paragraphs or words to "
"generate (default is 1)."
msgstr ""

# a502f58ce9744c4e801179a0b10919e0
#: ../../ref/contrib/webdesign.txt:44
msgid "``method``"
msgstr ""

# b1ef4f08a48e45f79b0bd849eb5bb491
#: ../../ref/contrib/webdesign.txt:44
msgid ""
"Either ``w`` for words, ``p`` for HTML paragraphs or ``b`` for plain-text "
"paragraph blocks (default is ``b``)."
msgstr ""

# 1dd20af11e4e46b780b960ccdce23f89
#: ../../ref/contrib/webdesign.txt:46
msgid "``random``"
msgstr ""

# 9e52b362e63a4a9fb59e5bfe898a95dd
#: ../../ref/contrib/webdesign.txt:46
msgid ""
"The word ``random``, which if given, does not use the common paragraph "
"(\"Lorem ipsum dolor sit amet...\") when generating text."
msgstr ""

# 4e3c93bf799244b4b044d4305a8a0404
#: ../../ref/contrib/webdesign.txt:53
msgid "``{% lorem %}`` will output the common \"lorem ipsum\" paragraph."
msgstr ""

# 542198b61c074aa19945319927b699be
#: ../../ref/contrib/webdesign.txt:54
msgid ""
"``{% lorem 3 p %}`` will output the common \"lorem ipsum\" paragraph and two "
"random paragraphs each wrapped in HTML ``<p>`` tags."
msgstr ""

# 2389841de05841b1857918caff89eb4b
#: ../../ref/contrib/webdesign.txt:56
msgid "``{% lorem 2 w random %}`` will output two random Latin words."
msgstr ""

# 50e616a7387e4e40a8cc023bbe7c2686
#: ../../ref/databases.txt:3
msgid "Databases"
msgstr ""

# 66d4e8cbadf74189b3c82bb33c04411d
#: ../../ref/databases.txt:5
msgid ""
"Django attempts to support as many features as possible on all database "
"backends. However, not all database backends are alike, and we've had to "
"make design decisions on which features to support and which assumptions we "
"can make safely."
msgstr ""

# 2ce1f6b28ca04106b7c9877261489bf2
#: ../../ref/databases.txt:10
msgid ""
"This file describes some of the features that might be relevant to Django "
"usage. Of course, it is not intended as a replacement for server-specific "
"documentation or reference manuals."
msgstr ""

# 3e85ceb98dcc4eb28c8ea425f9ac1a3e
#: ../../ref/databases.txt:17
msgid "PostgreSQL notes"
msgstr ""

# 64052c0bc871456a9a4e171bee3c7663
#: ../../ref/databases.txt:21
msgid "Django supports PostgreSQL 8.2 and higher."
msgstr ""

# e7adf0fbdd604e49bf365614509b713c
#: ../../ref/databases.txt:24
msgid "PostgreSQL 8.2 to 8.2.4"
msgstr ""

# ebe47fa3600745fb9707e597061d52aa
#: ../../ref/databases.txt:26
msgid ""
"The implementation of the population statistics aggregates ``STDDEV_POP`` "
"and ``VAR_POP`` that shipped with PostgreSQL 8.2 to 8.2.4 are `known to be "
"faulty`_. Users of these releases of PostgreSQL are advised to upgrade to "
"`Release 8.2.5`_ or later. Django will raise a ``NotImplementedError`` if "
"you attempt to use the ``StdDev(sample=False)`` or ``Variance(sample=False)"
"`` aggregate with a database backend that falls within the affected release "
"range."
msgstr ""

# cd6ef78f54dd45ceb5cfadf3071206d1
#: ../../ref/databases.txt:37
msgid "Optimizing PostgreSQL's configuration"
msgstr ""

# efcbee65799f4b0d82eb7c80b58b2c51
#: ../../ref/databases.txt:39
msgid "Django needs the following parameters for its database connections:"
msgstr ""

# 5c544f5be7404e41a15c3df7dacc5f70
#: ../../ref/databases.txt:41
msgid "``client_encoding``: ``'UTF8'``,"
msgstr ""

# 4289b5487246457b92f37c9f8191351e
#: ../../ref/databases.txt:42
msgid "``default_transaction_isolation``: ``'read committed'``,"
msgstr ""

# ecab4238038f430287ff1426d8fb01a5
#: ../../ref/databases.txt:43
msgid ""
"``timezone``: ``'UTC'`` when :setting:`USE_TZ` is ``True``, value of :"
"setting:`TIME_ZONE` otherwise."
msgstr ""

# 31b8ed25e0a04b1dadecfa2349f8516c
#: ../../ref/databases.txt:46
msgid ""
"If these parameters already have the correct values, Django won't set them "
"for every new connection, which improves performance slightly. You can "
"configure them directly in :file:`postgresql.conf` or more conveniently per "
"database user with `ALTER ROLE`_."
msgstr ""

# b6a090051acd4a5eb324844a012f8ae9
#: ../../ref/databases.txt:51
msgid ""
"Django will work just fine without this optimization, but each new "
"connection will do some additional queries to set these parameters."
msgstr ""

# d54634a74a714e75becaa8cd61163fd9
#: ../../ref/databases.txt:57
msgid "Transaction handling"
msgstr ""

# 3158233605ad42e69825994a1c782bb0
#: ../../ref/databases.txt:59
msgid ""
":doc:`By default </topics/db/transactions>`, Django starts a transaction "
"when a database connection is first used and commits the result at the end "
"of the request/response handling. The PostgreSQL backends normally operate "
"the same as any other Django backend in this respect."
msgstr ""

# 71bf0ef2746549848fdc789d992f3be9
#: ../../ref/databases.txt:67
msgid "Autocommit mode"
msgstr ""

# 185a3a8dc06e4ba39bf7b38947abc0c7
#: ../../ref/databases.txt:69
msgid ""
"If your application is particularly read-heavy and doesn't make many "
"database writes, the overhead of a constantly open transaction can sometimes "
"be noticeable. For those situations, you can configure Django to use *"
"\"autocommit\"* behavior for the connection, meaning that each database "
"operation will normally be in its own transaction, rather than having the "
"transaction extend over multiple operations. In this case, you can still "
"manually start a transaction if you're doing something that requires "
"consistency across multiple database operations. The autocommit behavior is "
"enabled by setting the ``autocommit`` key in the :setting:`OPTIONS` part of "
"your database configuration in :setting:`DATABASES`::"
msgstr ""

# debd55418fda4587a49a3f586f3e276c
#: ../../ref/databases.txt:85
msgid ""
"In this configuration, Django still ensures that :ref:`delete() <topics-db-"
"queries-delete>` and :ref:`update() <topics-db-queries-update>` queries run "
"inside a single transaction, so that either all the affected objects are "
"changed or none of them are."
msgstr ""

# d4343a8633934a5a894b8d6d97589ece
#: ../../ref/databases.txt:92
msgid ""
"This functionality is not the same as the :ref:`autocommit <topics-db-"
"transactions-autocommit>` decorator. That decorator is a Django-level "
"implementation that commits automatically after data changing operations. "
"The feature enabled using the :setting:`OPTIONS` option provides autocommit "
"behavior at the database adapter level. It commits after *every* operation."
msgstr ""

# dd674b1ef09b45beae52881aa23070b8
#: ../../ref/databases.txt:99
msgid ""
"If you are using this feature and performing an operation akin to delete or "
"updating that requires multiple operations, you are strongly recommended to "
"wrap you operations in manual transaction handling to ensure data "
"consistency. You should also audit your existing code for any instances of "
"this behavior before enabling this feature. It's faster, but it provides "
"less automatic protection for multi-call operations."
msgstr ""

# e7b4440edf714edba066f9332bc0a8af
#: ../../ref/databases.txt:107
msgid "Indexes for ``varchar`` and ``text`` columns"
msgstr ""

# 52906ee40e514ac9b70f50fb9c143610
#: ../../ref/databases.txt:109
msgid ""
"When specifying ``db_index=True`` on your model fields, Django typically "
"outputs a single ``CREATE INDEX`` statement.  However, if the database type "
"for the field is either ``varchar`` or ``text`` (e.g., used by "
"``CharField``, ``FileField``, and ``TextField``), then Django will create an "
"additional index that uses an appropriate `PostgreSQL operator class`_ for "
"the column.  The extra index is necessary to correctly perfrom lookups that "
"use the ``LIKE`` operator in their SQL, as is done with the ``contains`` and "
"``startswith`` lookup types."
msgstr ""

# fe0f620344e640719c6bea6d55676ae4
#: ../../ref/databases.txt:123
msgid "MySQL notes"
msgstr ""

# f98366fd66f74f41bdba9a5a047e25ec
#: ../../ref/databases.txt:125
msgid ""
"Django expects the database to support transactions, referential integrity, "
"and Unicode (UTF-8 encoding). Fortunately, MySQL_ has all these features as "
"available as far back as 3.23. While it may be possible to use 3.23 or 4.0, "
"you'll probably have less trouble if you use 4.1 or 5.0."
msgstr ""

# 2cabf02053af44e8b95b35fc70d8e96f
#: ../../ref/databases.txt:131
msgid "MySQL 4.1"
msgstr ""

# b9c68d3f17034e87b0d9465eef0c8e2e
#: ../../ref/databases.txt:133
msgid ""
"`MySQL 4.1`_ has greatly improved support for character sets. It is possible "
"to set different default character sets on the database, table, and column. "
"Previous versions have only a server-wide character set setting. It's also "
"the first version where the character set can be changed on the fly. 4.1 "
"also has support for views, but Django currently doesn't use views."
msgstr ""

# 0620328f94944d03b2cf323ae0928d69
#: ../../ref/databases.txt:140
msgid "MySQL 5.0"
msgstr ""

# 8c80e7d0ff75404db95b2f4511e252b7
#: ../../ref/databases.txt:142
msgid ""
"`MySQL 5.0`_ adds the ``information_schema`` database, which contains "
"detailed data on all database schema. Django's ``inspectdb`` feature uses "
"this ``information_schema`` if it's available. 5.0 also has support for "
"stored procedures, but Django currently doesn't use stored procedures."
msgstr ""

# ad1ffde45e42439b98324d1ecdcbe4e9
#: ../../ref/databases.txt:152
msgid "Storage engines"
msgstr ""

# 4687955d079e478bae49a91aeacc9ba2
#: ../../ref/databases.txt:154
msgid ""
"MySQL has several `storage engines`_ (previously called table types). You "
"can change the default storage engine in the server configuration."
msgstr ""

# c706702f090546c3aa786a35aff7c3e5
#: ../../ref/databases.txt:157
msgid ""
"Until MySQL 5.5.4, the default engine was MyISAM_ [#]_. The main drawbacks "
"of MyISAM are that it doesn't support transactions or enforce foreign-key "
"constraints. On the plus side, it's currently the only engine that supports "
"full-text indexing and searching."
msgstr ""

# eb9e840b63184716a1aa469b5d1c1757
#: ../../ref/databases.txt:162
msgid ""
"Since MySQL 5.5.5, the default storage engine is InnoDB_. This engine is "
"fully transactional and supports foreign key references. It's probably the "
"best choice at this point."
msgstr ""

# f3516a0524474febaef5f8e5b068e38c
#: ../../ref/databases.txt:168
msgid ""
"In previous versions of Django, fixtures with forward references (i.e. "
"relations to rows that have not yet been inserted into the database) would "
"fail to load when using the InnoDB storage engine. This was due to the fact "
"that InnoDB deviates from the SQL standard by checking foreign key "
"constraints immediately instead of deferring the check until the transaction "
"is committed. This problem has been resolved in Django 1.4. Fixture data is "
"now loaded with foreign key checks turned off; foreign key checks are then "
"re-enabled when the data has finished loading, at which point the entire "
"table is checked for invalid foreign key references and an `IntegrityError` "
"is raised if any are found."
msgstr ""

# 3d1569a47a224b43a7f53741654ec8da
#: ../../ref/databases.txt:182
msgid ""
"Unless this was changed by the packager of your MySQL package. We've had "
"reports that the Windows Community Server installer sets up InnoDB as the "
"default storage engine, for example."
msgstr ""

# a18b6f4de1cc43d4bf333b4e58b534b1
#: ../../ref/databases.txt:187
msgid "MySQLdb"
msgstr ""

# c3fafeb71ca14b73985111496aefab2d
#: ../../ref/databases.txt:189
msgid ""
"`MySQLdb`_ is the Python interface to MySQL. Version 1.2.1p2 or later is "
"required for full MySQL support in Django."
msgstr ""

# 7611f48c96fd4a4e893dd9041be70710
#: ../../ref/databases.txt:193
msgid ""
"If you see ``ImportError: cannot import name ImmutableSet`` when trying to "
"use Django, your MySQLdb installation may contain an outdated ``sets.py`` "
"file that conflicts with the built-in module of the same name from Python "
"2.4 and later. To fix this, verify that you have installed MySQLdb version "
"1.2.1p2 or newer, then delete the ``sets.py`` file in the MySQLdb directory "
"that was left by an earlier version."
msgstr ""

# 0e32d4e73e294ab88006fe830bb4c115
#: ../../ref/databases.txt:203
msgid "Creating your database"
msgstr ""

# c31b716201ee4c039a5fe72d344c8d8d
#: ../../ref/databases.txt:205
msgid ""
"You can `create your database`_ using the command-line tools and this SQL::"
msgstr ""

# 27bb81e082554131a58ee0f93ad0808e
#: ../../ref/databases.txt:209
msgid "This ensures all tables and columns will use UTF-8 by default."
msgstr ""

# d3f1710731ac4b63a3533a2a42f4b6f4
#: ../../ref/databases.txt:216
msgid "Collation settings"
msgstr ""

# 4c4fac568515474885b19ef28c68fe6a
#: ../../ref/databases.txt:218
msgid ""
"The collation setting for a column controls the order in which data is "
"sorted as well as what strings compare as equal. It can be set on a database-"
"wide level and also per-table and per-column. This is `documented "
"thoroughly`_ in the MySQL documentation. In all cases, you set the collation "
"by directly manipulating the database tables; Django doesn't provide a way "
"to set this on the model definition."
msgstr ""

# 59b356aaa0d547d79a8298d610f53628
#: ../../ref/databases.txt:227
msgid ""
"By default, with a UTF-8 database, MySQL will use the "
"``utf8_general_ci_swedish`` collation. This results in all string equality "
"comparisons being done in a *case-insensitive* manner. That is, ``\"Fred\"`` "
"and ``\"freD\"`` are considered equal at the database level. If you have a "
"unique constraint on a field, it would be illegal to try to insert both ``"
"\"aa\"`` and ``\"AA\"`` into the same column, since they compare as equal "
"(and, hence, non-unique) with the default collation."
msgstr ""

# 09b49c6c8370413b9ea7db5b776a37a8
#: ../../ref/databases.txt:235
msgid ""
"In many cases, this default will not be a problem. However, if you really "
"want case-sensitive comparisons on a particular column or table, you would "
"change the column or table to use the ``utf8_bin`` collation. The main thing "
"to be aware of in this case is that if you are using MySQLdb 1.2.2, the "
"database backend in Django will then return bytestrings (instead of unicode "
"strings) for any character fields it receive from the database. This is a "
"strong variation from Django's normal practice of *always* returning unicode "
"strings. It is up to you, the developer, to handle the fact that you will "
"receive bytestrings if you configure your table(s) to use ``utf8_bin`` "
"collation. Django itself should mostly work smoothly with such columns "
"(except for the ``contrib.sessions`` ``Session`` and ``contrib.admin`` "
"``LogEntry`` tables described below), but your code must be prepared to call "
"``django.utils.encoding.smart_unicode()`` at times if it really wants to "
"work with consistent data -- Django will not do this for you (the database "
"backend layer and the model population layer are separated internally so the "
"database layer doesn't know it needs to make this conversion in this one "
"particular case)."
msgstr ""

# 86abf839c622486a9b2a6ae6d9e0fcc4
#: ../../ref/databases.txt:252
msgid ""
"If you're using MySQLdb 1.2.1p2, Django's standard :class:`~django.db.models."
"CharField` class will return unicode strings even with ``utf8_bin`` "
"collation. However, :class:`~django.db.models.TextField` fields will be "
"returned as an ``array.array`` instance (from Python's standard ``array`` "
"module). There isn't a lot Django can do about that, since, again, the "
"information needed to make the necessary conversions isn't available when "
"the data is read in from the database. This problem was `fixed in MySQLdb "
"1.2.2`_, so if you want to use :class:`~django.db.models.TextField` with "
"``utf8_bin`` collation, upgrading to version 1.2.2 and then dealing with the "
"bytestrings (which shouldn't be too difficult) as described above is the "
"recommended solution."
msgstr ""

# e738930380f24546b6720aa6bfe8a9e6
#: ../../ref/databases.txt:264
msgid ""
"Should you decide to use ``utf8_bin`` collation for some of your tables with "
"MySQLdb 1.2.1p2 or 1.2.2, you should still use ``utf8_collation_ci_swedish`` "
"(the default) collation for the :class:`django.contrib.sessions.models."
"Session` table (usually called ``django_session``) and the :class:`django."
"contrib.admin.models.LogEntry` table (usually called ``django_admin_log``). "
"Those are the two standard tables that use :class:`~django.db.models."
"TextField` internally."
msgstr ""

# f4c2f0248418494a8d1ddbfbe5069cb6
# 6b3c6f7975ed40b082671257bf11cd0f
#: ../../ref/databases.txt:275 ../../ref/databases.txt:609
msgid "Connecting to the database"
msgstr ""

# 5e0dd6a09a134450bf51d372f176141c
#: ../../ref/databases.txt:277
msgid "Refer to the :doc:`settings documentation </ref/settings>`."
msgstr ""

# bc0e8aed91554c70acf0f61a84d38c6e
#: ../../ref/databases.txt:279
msgid "Connection settings are used in this order:"
msgstr ""

# 89b99ae1ac3c44f7a0b74d9169469c52
#: ../../ref/databases.txt:281
msgid ":setting:`OPTIONS`."
msgstr ""

# 05c20848c0d24c53853876cf1ce4f033
#: ../../ref/databases.txt:282
msgid ""
":setting:`NAME`, :setting:`USER`, :setting:`PASSWORD`, :setting:`HOST`, :"
"setting:`PORT`"
msgstr ""

# 758839a1c97342aeb063f7235368a679
#: ../../ref/databases.txt:284
msgid "MySQL option files."
msgstr ""

# 44b8338cde62449c955a334fa8589893
#: ../../ref/databases.txt:286
msgid ""
"In other words, if you set the name of the database in :setting:`OPTIONS`, "
"this will take precedence over :setting:`NAME`, which would override "
"anything in a `MySQL option file`_."
msgstr ""

# 0b5c3f24d1ff4885afb77c64167c4530
#: ../../ref/databases.txt:290
msgid "Here's a sample configuration which uses a MySQL option file::"
msgstr ""

# b878bdcd02e54620ae5ed7a1b29b9ec4
#: ../../ref/databases.txt:310
msgid ""
"Several other MySQLdb connection options may be useful, such as ``ssl``, "
"``use_unicode``, ``init_command``, and ``sql_mode``. Consult the `MySQLdb "
"documentation`_ for more details."
msgstr ""

# 3ac7b19ec5334bd392c5bed97775c95b
#: ../../ref/databases.txt:318
msgid "Creating your tables"
msgstr ""

# acf02b0369154ebd86bed81a22b92f8b
#: ../../ref/databases.txt:320
msgid ""
"When Django generates the schema, it doesn't specify a storage engine, so "
"tables will be created with whatever default storage engine your database "
"server is configured for. The easiest solution is to set your database "
"server's default storage engine to the desired engine."
msgstr ""

# b34001b9eb1e4f9cbd33c62e64e4e633
#: ../../ref/databases.txt:325
msgid ""
"If you're using a hosting service and can't change your server's default "
"storage engine, you have a couple of options."
msgstr ""

# b177cc9be01149a1af5cd5c43486646b
#: ../../ref/databases.txt:328
msgid ""
"After the tables are created, execute an ``ALTER TABLE`` statement to "
"convert a table to a new storage engine (such as InnoDB)::"
msgstr ""

# 046e01dc5a8741eab8c78593e12856c4
#: ../../ref/databases.txt:333
msgid "This can be tedious if you have a lot of tables."
msgstr ""

# d48ceab897284264ba8ee4477c555879
#: ../../ref/databases.txt:335
msgid ""
"Another option is to use the ``init_command`` option for MySQLdb prior to "
"creating your tables::"
msgstr ""

# f0dacdc3bd7c48daa097847e5e9b735e
#: ../../ref/databases.txt:342
msgid ""
"This sets the default storage engine upon connecting to the database. After "
"your tables have been created, you should remove this option."
msgstr ""

# 0cea6ee0b09a469bac974f83d2345aee
#: ../../ref/databases.txt:345
msgid ""
"Another method for changing the storage engine is described in "
"AlterModelOnSyncDB_."
msgstr ""

# 2f4d249e3ae34e399d13e109698435b1
# 185080361c304a0490f822effd462dd4
#: ../../ref/databases.txt:351 ../../ref/models/options.txt:45
msgid "Table names"
msgstr ""

# cdfd963a8739415c86826d1ed207fe7b
#: ../../ref/databases.txt:353
msgid ""
"There are `known issues`_ in even the latest versions of MySQL that can "
"cause the case of a table name to be altered when certain SQL statements are "
"executed under certain conditions. It is recommended that you use lowercase "
"table names, if possible, to avoid any problems that might arise from this "
"behavior. Django uses lowercase table names when it auto-generates table "
"names from models, so this is mainly a consideration if you are overriding "
"the table name via the :class:`~django.db.models.Options.db_table` parameter."
msgstr ""

# 1c037c7fc259469aa4ca67c3001e0912
#: ../../ref/databases.txt:364
msgid "Notes on specific fields"
msgstr ""

# 04d60302bc7a454284426fd6effd7be0
#: ../../ref/databases.txt:367
msgid "Boolean fields"
msgstr ""

# f9314cc261be452d8a0bd987a059a243
#: ../../ref/databases.txt:371
msgid ""
"In previous versions of Django when running under MySQL ``BooleanFields`` "
"would return their data as ``ints``, instead of true ``bools``.  See the "
"release notes for a complete description of the change."
msgstr ""

# 18092157a4664e25976c39053f80c521
#: ../../ref/databases.txt:376
msgid "Character fields"
msgstr ""

# 1e12d1465cc740869254070c6a425758
#: ../../ref/databases.txt:378
msgid ""
"Any fields that are stored with ``VARCHAR`` column types have their "
"``max_length`` restricted to 255 characters if you are using ``unique=True`` "
"for the field. This affects :class:`~django.db.models.CharField`, :class:"
"`~django.db.models.SlugField` and :class:`~django.db.models."
"CommaSeparatedIntegerField`."
msgstr ""

# 8c5be74c2bcd4f4e802cd8284432ac3d
#: ../../ref/databases.txt:384
msgid ""
"Furthermore, if you are using a version of MySQL prior to 5.0.3, all of "
"those column types have a maximum length restriction of 255 characters, "
"regardless of whether ``unique=True`` is specified or not."
msgstr ""

# 8a2ec980c57f4e24bd762f918bcf999e
#: ../../ref/databases.txt:389
msgid "DateTime fields"
msgstr ""

# 8f0a6ae914134c1a9ea2e0538ca251fd
#: ../../ref/databases.txt:391
msgid ""
"MySQL does not have a timezone-aware column type. If an attempt is made to "
"store a timezone-aware ``time`` or ``datetime`` to a :class:`~django.db."
"models.TimeField` or :class:`~django.db.models.DateTimeField` respectively, "
"a ``ValueError`` is raised rather than truncating data."
msgstr ""

# 5f1bb9cdfa084b939ee119bbb07cd4a6
#: ../../ref/databases.txt:396
msgid ""
"MySQL does not store fractions of seconds. Fractions of seconds are "
"truncated to zero when the time is stored."
msgstr ""

# 5e2c1bb3087a4287ab79c6d29f16ebb0
#: ../../ref/databases.txt:400
msgid "Row locking with ``QuerySet.select_for_update()``"
msgstr ""

# 9906b0d7ffed45dfa1526ef8ffa1f4d4
#: ../../ref/databases.txt:402
msgid ""
"MySQL does not support the ``NOWAIT`` option to the ``SELECT ... FOR "
"UPDATE`` statement. If ``select_for_update()`` is used with ``nowait=True`` "
"then a ``DatabaseError`` will be raised."
msgstr ""

# 87d36fac679242ae9ff33be55f61ddac
#: ../../ref/databases.txt:409
msgid "SQLite notes"
msgstr ""

# e3b2bc3da16a4bfc92a18880811a903b
#: ../../ref/databases.txt:411
msgid ""
"SQLite_ provides an excellent development alternative for applications that "
"are predominantly read-only or require a smaller installation footprint. As "
"with all database servers, though, there are some differences that are "
"specific to SQLite that you should be aware of."
msgstr ""

# 7c5748fda9e84c59989483179d196b83
#: ../../ref/databases.txt:421
msgid "Substring matching and case sensitivity"
msgstr ""

# f51a6f002f0d4592bdeb0af519f65aab
#: ../../ref/databases.txt:423
msgid ""
"For all SQLite versions, there is some slightly counter-intuitive behavior "
"when attempting to match some types of strings.  These are triggered when "
"using the :lookup:`iexact` or :lookup:`contains` filters in Querysets. The "
"behavior splits into two cases:"
msgstr ""

# f22094285bc54920ac5518a9ba27ca72
#: ../../ref/databases.txt:428
msgid ""
"1. For substring matching, all matches are done case-insensitively. That is "
"a filter such as ``filter(name__contains=\"aa\")`` will match a name of ``"
"\"Aabb\"``."
msgstr ""

# 42fa105373534a9eae144ed188f6b113
#: ../../ref/databases.txt:431
msgid ""
"2. For strings containing characters outside the ASCII range, all exact "
"string matches are performed case-sensitively, even when the case-"
"insensitive options are passed into the query. So the :lookup:`iexact` "
"filter will behave exactly the same as the :lookup:`exact` filter in these "
"cases."
msgstr ""

# 3f466b665ce948268ce523641ea4d69e
#: ../../ref/databases.txt:436
msgid ""
"Some possible workarounds for this are `documented at sqlite.org`_, but they "
"aren't utilised by the default SQLite backend in Django, as incorporating "
"them would be fairly difficult to do robustly. Thus, Django exposes the "
"default SQLite behavior and you should be aware of this when doing case-"
"insensitive or substring filtering."
msgstr ""

# 4692bebad8144915b5a054d61c6ba3f4
#: ../../ref/databases.txt:445
msgid "SQLite 3.3.6 or newer strongly recommended"
msgstr ""

# a272c575c3dc4efc9dd7d917ab42d970
#: ../../ref/databases.txt:447
msgid "Versions of SQLite 3.3.5 and older contains the following bugs:"
msgstr ""

# a7a58f81626f4a768d4757d411727652
#: ../../ref/databases.txt:449
msgid ""
"A bug when `handling`_ ``ORDER BY`` parameters. This can cause problems when "
"you use the ``select`` parameter for the ``extra()`` QuerySet method. The "
"bug can be identified by the error message ``OperationalError: ORDER BY "
"terms must not be non-integer constants``."
msgstr ""

# ea9f0d042bb1434abd98379d32711a80
#: ../../ref/databases.txt:454
msgid ""
"A bug when handling `aggregation`_ together with DateFields and "
"DecimalFields."
msgstr ""

# 3107857cc85b4ece87405239236c1dd9
#: ../../ref/databases.txt:460
msgid ""
"SQLite 3.3.6 was released in April 2006, so most current binary "
"distributions for different platforms include newer version of SQLite usable "
"from Python through either the ``pysqlite2`` or the ``sqlite3`` modules."
msgstr ""

# 07ae3b13950c4869840cde8a82a4e6fb
#: ../../ref/databases.txt:464
msgid ""
"However, some platform/Python version combinations include older versions of "
"SQLite (e.g. the official binary distribution of Python 2.5 for Windows, "
"2.5.4 as of this writing, includes SQLite 3.3.4). There are (as of Django "
"1.1) even some tests in the Django test suite that will fail when run under "
"this setup."
msgstr ""

# 4699bcfe770c45c29d71d4032c7fd561
#: ../../ref/databases.txt:469
msgid ""
"As described :ref:`below<using-newer-versions-of-pysqlite>`, this can be "
"solved by downloading and installing a newer version of ``pysqlite2`` "
"(``pysqlite-2.x.x.win32-py2.5.exe`` in the described case) that includes and "
"uses a newer version of SQLite. Python 2.6 for Windows ships with a version "
"of SQLite that is not affected by these issues."
msgstr ""

# 81ffa205ba7643ce9587f7fac7038885
#: ../../ref/databases.txt:476
msgid "Version 3.5.9"
msgstr ""

# 21b3b3b845754642908a378d1d3a6905
#: ../../ref/databases.txt:478
msgid ""
"The Ubuntu \"Intrepid Ibex\" (8.10) SQLite 3.5.9-3 package contains a bug "
"that causes problems with the evaluation of query expressions. If you are "
"using Ubuntu \"Intrepid Ibex\", you will need to update the package to "
"version 3.5.9-3ubuntu1 or newer (recommended) or find an alternate source "
"for SQLite packages, or install SQLite from source."
msgstr ""

# 467920cf375442fea335d3396fb513a8
#: ../../ref/databases.txt:484
msgid ""
"At one time, Debian Lenny shipped with the same malfunctioning SQLite "
"3.5.9-3 package. However the Debian project has subsequently issued updated "
"versions of the SQLite package that correct these bugs. If you find you are "
"getting unexpected results under Debian, ensure you have updated your SQLite "
"package to 3.5.9-5 or later."
msgstr ""

# 301781eb735440b5bc8c3c84b24f6645
#: ../../ref/databases.txt:490
msgid ""
"The problem does not appear to exist with other versions of SQLite packaged "
"with other operating systems."
msgstr ""

# 8c5f01aaf1c7409ab9a1b96a6f1c924c
#: ../../ref/databases.txt:494
msgid "Version 3.6.2"
msgstr ""

# 103a7480b2014b108c18cccb2fd59ca5
#: ../../ref/databases.txt:496
msgid ""
"SQLite version 3.6.2 (released August 30, 2008) introduced a bug into "
"``SELECT DISTINCT`` handling that is triggered by, amongst other things, "
"Django's ``DateQuerySet`` (returned by the ``dates()`` method on a queryset)."
msgstr ""

# 38a621f7e8b0407ab38228c5d8ad2a82
#: ../../ref/databases.txt:500
msgid ""
"You should avoid using this version of SQLite with Django. Either upgrade to "
"3.6.3 (released September 22, 2008) or later, or downgrade to an earlier "
"version of SQLite."
msgstr ""

# d39a27cd0c054091995c3044320653bc
#: ../../ref/databases.txt:507
msgid "Using newer versions of the SQLite DB-API 2.0 driver"
msgstr ""

# 0a4250e1523f4c01bb9e118e64aeb886
#: ../../ref/databases.txt:509
msgid ""
"For versions of Python 2.5 or newer that include ``sqlite3`` in the standard "
"library Django will now use a ``pysqlite2`` interface in preference to "
"``sqlite3`` if it finds one is available."
msgstr ""

# 0a2c94107bbc4071946a0aab57757546
#: ../../ref/databases.txt:513
msgid ""
"This provides the ability to upgrade both the DB-API 2.0 interface or SQLite "
"3 itself to versions newer than the ones included with your particular "
"Python binary distribution, if needed."
msgstr ""

# 058858ad71e944778e9d422711d8dff9
#: ../../ref/databases.txt:518
msgid "\"Database is locked\" errors"
msgstr ""

# 881ea329048a472d8225cc1757a90b0c
#: ../../ref/databases.txt:520
msgid ""
"SQLite is meant to be a lightweight database, and thus can't support a high "
"level of concurrency. ``OperationalError: database is locked`` errors "
"indicate that your application is experiencing more concurrency than "
"``sqlite`` can handle in default configuration. This error means that one "
"thread or process has an exclusive lock on the database connection and "
"another thread timed out waiting for the lock the be released."
msgstr ""

# de7fbf0bb3594744ae46e689476a8b50
#: ../../ref/databases.txt:527
msgid ""
"Python's SQLite wrapper has a default timeout value that determines how long "
"the second thread is allowed to wait on the lock before it times out and "
"raises the ``OperationalError: database is locked`` error."
msgstr ""

# 85400f7cf8cf4f4d8c69e6a880ad4119
#: ../../ref/databases.txt:532
msgid "If you're getting this error, you can solve it by:"
msgstr ""

# c9835c1f41ca499a9d8e500c739ad57e
#: ../../ref/databases.txt:534
msgid ""
"Switching to another database backend. At a certain point SQLite becomes too "
"\"lite\" for real-world applications, and these sorts of concurrency errors "
"indicate you've reached that point."
msgstr ""

# 3d625b3a2c4d490a8259b76f482c6127
#: ../../ref/databases.txt:538
msgid ""
"Rewriting your code to reduce concurrency and ensure that database "
"transactions are short-lived."
msgstr ""

# 4a24253954e845c1883edd02f4990ca1
#: ../../ref/databases.txt:541
msgid ""
"Increase the default timeout value by setting the ``timeout`` database "
"option option::"
msgstr ""

# 3c08d48a897e4d9b9c5fb6d80f313863
#: ../../ref/databases.txt:550
msgid ""
"This will simply make SQLite wait a bit longer before throwing \"database is "
"locked\" errors; it won't really do anything to solve them."
msgstr ""

# a88e3fbee6284f17b680b4743baa085e
#: ../../ref/databases.txt:554
msgid "``QuerySet.select_for_update()`` not supported"
msgstr ""

# 8672d54dc2ef4b96a8de19acfae714fb
#: ../../ref/databases.txt:556
msgid ""
"SQLite does not support the ``SELECT ... FOR UPDATE`` syntax. Calling it "
"will have no effect."
msgstr ""

# c82d859f04294b78802660c59d7d32ad
#: ../../ref/databases.txt:562
msgid "Parameters not quoted in ``connection.queries``"
msgstr ""

# 8ef7d4aa66b14673935ee19d1c1d6b8c
#: ../../ref/databases.txt:564
msgid ""
"``sqlite3`` does not provide a way to retrieve the SQL after quoting and "
"substituting the parameters. Instead, the SQL in ``connection.queries`` is "
"rebuilt with a simple string interpolation. It may be incorrect. Make sure "
"you add quotes where necessary before copying a query into a SQLite shell."
msgstr ""

# 43634155cf6d4ab3a2a06afb8669ce44
#: ../../ref/databases.txt:572
msgid "Oracle notes"
msgstr ""

# 7c144d01b30a493f91fde9d013186d0d
#: ../../ref/databases.txt:574
msgid ""
"Django supports `Oracle Database Server`_ versions 9i and higher. Oracle "
"version 10g or later is required to use Django's ``regex`` and ``iregex`` "
"query operators. You will also need at least version 4.3.1 of the "
"`cx_Oracle`_ Python driver."
msgstr ""

# 9b42f5d39b20418587bcc5e28bf42da2
#: ../../ref/databases.txt:579
msgid ""
"Note that due to a Unicode-corruption bug in ``cx_Oracle`` 5.0, that version "
"of the driver should **not** be used with Django; ``cx_Oracle`` 5.0.1 "
"resolved this issue, so if you'd like to use a more recent ``cx_Oracle``, "
"use version 5.0.1."
msgstr ""

# 597df9148dec4ecbbd1ea3ab2d059a59
#: ../../ref/databases.txt:584
msgid ""
"``cx_Oracle`` 5.0.1 or greater can optionally be compiled with the "
"``WITH_UNICODE`` environment variable.  This is recommended but not required."
msgstr ""

# 5b7184b59b324cac832d5210001c3ef3
#: ../../ref/databases.txt:591
msgid ""
"In order for the ``python manage.py syncdb`` command to work, your Oracle "
"database user must have privileges to run the following commands:"
msgstr ""

# 86cb68929fc44c1190c9bd4e8d2abdc7
#: ../../ref/databases.txt:594
msgid "CREATE TABLE"
msgstr ""

# f5a64f7ac60f4e4a96112a8dd11a0038
#: ../../ref/databases.txt:595
msgid "CREATE SEQUENCE"
msgstr ""

# cafe8b31aaac4e90a0037626f04a894c
#: ../../ref/databases.txt:596
msgid "CREATE PROCEDURE"
msgstr ""

# ed8e3866745e47258e7eb99b379d6a06
#: ../../ref/databases.txt:597
msgid "CREATE TRIGGER"
msgstr ""

# a67db7e362244295beca339dd39a9130
#: ../../ref/databases.txt:599
msgid ""
"To run Django's test suite, the user needs these *additional* privileges:"
msgstr ""

# ce0e9a7f044e410890265af72d657c1e
#: ../../ref/databases.txt:601
msgid "CREATE USER"
msgstr ""

# 8a5ac90d40a34bd1aae4db5f839ea39f
#: ../../ref/databases.txt:602
msgid "DROP USER"
msgstr ""

# 6088a04bdca34c30902010d08a7b74c6
#: ../../ref/databases.txt:603
msgid "CREATE TABLESPACE"
msgstr ""

# 884cf98935a745189a7dd1df692506c4
#: ../../ref/databases.txt:604
msgid "DROP TABLESPACE"
msgstr ""

# c001853e09cb44ceb78f91ca448fc17b
#: ../../ref/databases.txt:605
msgid "CONNECT WITH ADMIN OPTION"
msgstr ""

# 2a2dca047ffa4197b4d4ef9ff671c3e6
#: ../../ref/databases.txt:606
msgid "RESOURCE WITH ADMIN OPTION"
msgstr ""

# ac9016d9d5eb4d60b310980ad84eb1b2
#: ../../ref/databases.txt:611
msgid ""
"Your Django settings.py file should look something like this for Oracle::"
msgstr ""

# 864404c3a1f7499d915f07bb20147e07
#: ../../ref/databases.txt:625
msgid ""
"If you don't use a ``tnsnames.ora`` file or a similar naming method that "
"recognizes the SID (\"xe\" in this example), then fill in both :setting:"
"`HOST` and :setting:`PORT` like so::"
msgstr ""

# bb90266403f74afb8641e5baba4172a7
#: ../../ref/databases.txt:640
msgid ""
"You should supply both :setting:`HOST` and :setting:`PORT`, or leave both as "
"empty strings."
msgstr ""

# 5ee23563440f4fdbac9d315bde2cc909
#: ../../ref/databases.txt:644
msgid "Threaded option"
msgstr ""

# c92ab6e7415e40e88daea1abccf6bb5a
#: ../../ref/databases.txt:646
msgid ""
"If you plan to run Django in a multithreaded environment (e.g. Apache in "
"Windows using the default MPM module), then you **must** set the "
"``threaded`` option of your Oracle database configuration to True::"
msgstr ""

# 0008cab00eb14589ad911c1df4a63b92
#: ../../ref/databases.txt:654
msgid "Failure to do this may result in crashes and other odd behavior."
msgstr ""

# 849035a2f0b448d99c11abd3e1501a71
#: ../../ref/databases.txt:657
msgid "INSERT ... RETURNING INTO"
msgstr ""

# f78f51ddeaa446e197b24fe27e6e4750
#: ../../ref/databases.txt:659
msgid ""
"By default, the Oracle backend uses a ``RETURNING INTO`` clause to "
"efficiently retrieve the value of an ``AutoField`` when inserting new rows.  "
"This behavior may result in a ``DatabaseError`` in certain unusual setups, "
"such as when inserting into a remote table, or into a view with an ``INSTEAD "
"OF`` trigger. The ``RETURNING INTO`` clause can be disabled by setting the "
"``use_returning_into`` option of the database configuration to False::"
msgstr ""

# eb5336e71b6240bc9a6dcfaff143d785
#: ../../ref/databases.txt:670
msgid ""
"In this case, the Oracle backend will use a separate ``SELECT`` query to "
"retrieve AutoField values."
msgstr ""

# 8a5105eab8404fbfb5d05b113af12565
#: ../../ref/databases.txt:674
msgid "Naming issues"
msgstr ""

# 879946e8340041b494270df5b281bcf0
#: ../../ref/databases.txt:676
msgid ""
"Oracle imposes a name length limit of 30 characters. To accommodate this, "
"the backend truncates database identifiers to fit, replacing the final four "
"characters of the truncated name with a repeatable MD5 hash value."
msgstr ""

# 4f8ae9a7b3a449cb8ecd5aed1784d543
#: ../../ref/databases.txt:680
msgid ""
"When running syncdb, an ``ORA-06552`` error may be encountered if certain "
"Oracle keywords are used as the name of a model field or the value of a "
"``db_column`` option.  Django quotes all identifiers used in queries to "
"prevent most such problems, but this error can still occur when an Oracle "
"datatype is used as a column name.  In particular, take care to avoid using "
"the names ``date``, ``timestamp``, ``number`` or ``float`` as a field name."
msgstr ""

# a701b9b0cc8042cd8194b3aaca5af33d
#: ../../ref/databases.txt:689
msgid "NULL and empty strings"
msgstr ""

# ec92838e592a47d5a4dae02e1dce1f55
#: ../../ref/databases.txt:691
msgid ""
"Django generally prefers to use the empty string ('') rather than NULL, but "
"Oracle treats both identically. To get around this, the Oracle backend "
"coerces the ``null=True`` option on fields that have the empty string as a "
"possible value. When fetching from the database, it is assumed that a NULL "
"value in one of these fields really means the empty string, and the data is "
"silently converted to reflect this assumption."
msgstr ""

# 31c6763157014c78a8d5ef0bb97b821a
#: ../../ref/databases.txt:700
msgid "``TextField`` limitations"
msgstr ""

# 28c96f18635844dc9e91783bb713e42d
#: ../../ref/databases.txt:702
msgid ""
"The Oracle backend stores ``TextFields`` as ``NCLOB`` columns. Oracle "
"imposes some limitations on the usage of such LOB columns in general:"
msgstr ""

# 2df94d333f2b42268ba38ead5d8e5ba2
#: ../../ref/databases.txt:705
msgid "LOB columns may not be used as primary keys."
msgstr ""

# 031f3d4485c94a3d9d45da337d9f66da
#: ../../ref/databases.txt:707
msgid "LOB columns may not be used in indexes."
msgstr ""

# 6c5cd09ce71b4d099ee08e0b1350f81b
#: ../../ref/databases.txt:709
msgid ""
"LOB columns may not be used in a ``SELECT DISTINCT`` list. This means that "
"attempting to use the ``QuerySet.distinct`` method on a model that includes "
"``TextField`` columns will result in an error when run against Oracle. As a "
"workaround, use the ``QuerySet.defer`` method in conjunction with ``distinct"
"()`` to prevent ``TextField`` columns from being included in the ``SELECT "
"DISTINCT`` list."
msgstr ""

# 16578546976b4e13843563677669d725
#: ../../ref/databases.txt:719
msgid "Using a 3rd-party database backend"
msgstr ""

# 44b735015da348fb8983a9c5385b44ea
#: ../../ref/databases.txt:721
msgid ""
"In addition to the officially supported databases, there are backends "
"provided by 3rd parties that allow you to use other databases with Django:"
msgstr ""

# 7202884126fe479a87f53bf2ac5c4f98
#: ../../ref/databases.txt:724
msgid "`Sybase SQL Anywhere`_"
msgstr ""

# 6c5f7ea77bf64f55b1760e8a11c4662d
#: ../../ref/databases.txt:725
msgid "`IBM DB2`_"
msgstr ""

# d68c4a2384594beca71f94320a44ab7a
#: ../../ref/databases.txt:726
msgid "`Microsoft SQL Server 2005`_"
msgstr ""

# 9f97a3dd5b5741b6adccea6b6f517e00
#: ../../ref/databases.txt:727
msgid "Firebird_"
msgstr ""

# 46373d0466cf468c955a5c7d8a38d13a
#: ../../ref/databases.txt:728
msgid "ODBC_"
msgstr ""

# e05cdaf0f37d41069379696d21322c71
#: ../../ref/databases.txt:729
msgid "ADSDB_"
msgstr ""

# 429781fb88024b0b829a76c40a1d046e
#: ../../ref/databases.txt:731
msgid ""
"The Django versions and ORM features supported by these unofficial backends "
"vary considerably. Queries regarding the specific capabilities of these "
"unofficial backends, along with any support queries, should be directed to "
"the support channels provided by each 3rd party project."
msgstr ""

# cb0090f8f864430bab3fbfd97eb7281d
#: ../../ref/django-admin.txt:3
msgid "django-admin.py and manage.py"
msgstr ""

# 87e345af9c8e451a8543779190329bb8
#: ../../ref/django-admin.txt:5
msgid ""
"``django-admin.py`` is Django's command-line utility for administrative "
"tasks. This document outlines all it can do."
msgstr ""

# f5d5f35b317c43298600004905367dde
#: ../../ref/django-admin.txt:8
msgid ""
"In addition, ``manage.py`` is automatically created in each Django project. "
"``manage.py`` is a thin wrapper around ``django-admin.py`` that takes care "
"of two things for you before delegating to ``django-admin.py``:"
msgstr ""

# b13006b198cb4dd4a4eab3ba3b6b47d0
#: ../../ref/django-admin.txt:12
msgid "It puts your project's package on ``sys.path``."
msgstr ""

# e21e0028ae15402d899bd95fd34d336e
#: ../../ref/django-admin.txt:14
msgid ""
"It sets the :envvar:`DJANGO_SETTINGS_MODULE` environment variable so that it "
"points to your project's ``settings.py`` file."
msgstr ""

# b41124dbe0df41fdb113d4a51e746207
#: ../../ref/django-admin.txt:17
msgid ""
"The ``django-admin.py`` script should be on your system path if you "
"installed Django via its ``setup.py`` utility. If it's not on your path, you "
"can find it in ``site-packages/django/bin`` within your Python installation. "
"Consider symlinking it from some place on your path, such as ``/usr/local/"
"bin``."
msgstr ""

# 6f1b5ae13de14190835d844e0f59fd67
#: ../../ref/django-admin.txt:22
msgid ""
"For Windows users, who do not have symlinking functionality available, you "
"can copy ``django-admin.py`` to a location on your existing path or edit the "
"``PATH`` settings (under ``Settings - Control Panel - System - Advanced - "
"Environment...``) to point to its installed location."
msgstr ""

# 84b5339bdd904dda869c3a711f7c37d5
#: ../../ref/django-admin.txt:27
msgid ""
"Generally, when working on a single Django project, it's easier to use "
"``manage.py``. Use ``django-admin.py`` with ``DJANGO_SETTINGS_MODULE``, or "
"the ``--settings`` command line option, if you need to switch between "
"multiple Django settings files."
msgstr ""

# d112548d7e784cf292306039debb1685
#: ../../ref/django-admin.txt:32
msgid ""
"The command-line examples throughout this document use ``django-admin.py`` "
"to be consistent, but any example can use ``manage.py`` just as well."
msgstr ""

# 82c7616cc43542d7af148f0dfd4ffa78
#: ../../ref/django-admin.txt:43
msgid ""
"``command`` should be one of the commands listed in this document. "
"``options``, which is optional, should be zero or more of the options "
"available for the given command."
msgstr ""

# 23990cb4ac7f4e59b3a7de3741b1f81b
#: ../../ref/django-admin.txt:48
msgid "Getting runtime help"
msgstr ""

# 5d9128f7f9614b76b000d722b9818790
#: ../../ref/django-admin.txt:52
msgid ""
"Run ``django-admin.py help`` to display usage information and a list of the "
"commands provided by each application."
msgstr ""

# 0c98f21609bc49978367d9cb38659068
#: ../../ref/django-admin.txt:55
msgid ""
"Run ``django-admin.py help --commands`` to display a list of all available "
"commands."
msgstr ""

# 77bfec2c225a4edaa6ad3afae83f2dd6
#: ../../ref/django-admin.txt:58
msgid ""
"Run ``django-admin.py help <command>`` to display a description of the given "
"command and a list of its available options."
msgstr ""

# c54743f1e96c4cb198528953df6851ea
#: ../../ref/django-admin.txt:62
msgid "App names"
msgstr ""

# f9a4a5397d9b4923b30cc5709bdf8a50
#: ../../ref/django-admin.txt:64
msgid ""
"Many commands take a list of \"app names.\" An \"app name\" is the basename "
"of the package containing your models. For example, if your :setting:"
"`INSTALLED_APPS` contains the string ``'mysite.blog'``, the app name is "
"``blog``."
msgstr ""

# 182ed6e85dd740a7b69c30b9e01e63d2
#: ../../ref/django-admin.txt:69
msgid "Determining the version"
msgstr ""

# 317af978f29d4fe685402deb980b0171
#: ../../ref/django-admin.txt:73
msgid "Run ``django-admin.py version`` to display the current Django version."
msgstr ""

# e477781a2f044ac685a60ce6a0c475f8
#: ../../ref/django-admin.txt:75
msgid "The output follows the schema described in :pep:`386`::"
msgstr ""

# 5496547fe7c14306b5898cd4f135e39c
#: ../../ref/django-admin.txt:82
msgid "Displaying debug output"
msgstr ""

# f24015a11f42403a86d8f19bea1be1e1
#: ../../ref/django-admin.txt:84
msgid ""
"Use :djadminopt:`--verbosity` to specify the amount of notification and "
"debug information that ``django-admin.py`` should print to the console. For "
"more details, see the documentation for the :djadminopt:`--verbosity` option."
msgstr ""

# 5ae2f723248848f0bd687d43f85b506c
#: ../../ref/django-admin.txt:89
msgid "Available commands"
msgstr ""

# 80a67c19277e4eb8ac8ab0344ea16942
#: ../../ref/django-admin.txt:92
msgid "cleanup"
msgstr ""

# b8ee286173a242568d4ae589611157fe
#: ../../ref/django-admin.txt:96
msgid ""
"Can be run as a cronjob or directly to clean out old data from the database "
"(only expired sessions at the moment)."
msgstr ""

# e89524773c5d4b60954db2d1c298c7ee
#: ../../ref/django-admin.txt:100
msgid "compilemessages"
msgstr ""

# 761953ea3c9949cf8a6cde61a1ecb336
#: ../../ref/django-admin.txt:104
msgid ""
"Compiles .po files created with ``makemessages`` to .mo files for use with "
"the builtin gettext support. See :doc:`/topics/i18n/index`."
msgstr ""

# 798204edb5d942b1b5fca7c24152c7b2
#: ../../ref/django-admin.txt:107
msgid ""
"Use the :djadminopt:`--locale` option to specify the locale to process. If "
"not provided, all locales are processed."
msgstr ""

# aefdb3ed349d40c7adedbcca30918e6e
#: ../../ref/django-admin.txt:115
msgid "createcachetable"
msgstr ""

# da3b8d00cf4b4f9fbb50a15b4f94a9ae
#: ../../ref/django-admin.txt:119
msgid ""
"Creates a cache table named ``tablename`` for use with the database cache "
"backend. See :doc:`/topics/cache` for more information."
msgstr ""

# 173328d1312d4d36a6695ac3284f9039
#: ../../ref/django-admin.txt:124
msgid ""
"The :djadminopt:`--database` option can be used to specify the database onto "
"which the cachetable will be installed."
msgstr ""

# cf47105f6c2441fd8b151a774bc0559d
#: ../../ref/django-admin.txt:128
msgid "dbshell"
msgstr ""

# b21edaace431445092e5a4a5d58e6bec
#: ../../ref/django-admin.txt:132
msgid ""
"Runs the command-line client for the database engine specified in your "
"``ENGINE`` setting, with the connection parameters specified in your :"
"setting:`USER`, :setting:`PASSWORD`, etc., settings."
msgstr ""

# c4cc0504016943bcb97b1162e2c16fc4
#: ../../ref/django-admin.txt:136
msgid "For PostgreSQL, this runs the ``psql`` command-line client."
msgstr ""

# 0d1efe67a2e7411faa6c44a66ebe9522
#: ../../ref/django-admin.txt:137
msgid "For MySQL, this runs the ``mysql`` command-line client."
msgstr ""

# dcd8ba67ccdb4852b46c62bd3607e22e
#: ../../ref/django-admin.txt:138
msgid "For SQLite, this runs the ``sqlite3`` command-line client."
msgstr ""

# 2fe7e12848634ea0a2ba356b5a483e9a
#: ../../ref/django-admin.txt:140
msgid ""
"This command assumes the programs are on your ``PATH`` so that a simple call "
"to the program name (``psql``, ``mysql``, ``sqlite3``) will find the program "
"in the right place. There's no way to specify the location of the program "
"manually."
msgstr ""

# c0168aacc1424aeb8cc1ece25fbbf604
#: ../../ref/django-admin.txt:147
msgid ""
"The :djadminopt:`--database` option can be used to specify the database onto "
"which to open a shell."
msgstr ""

# 89652aebe4a547e8b2a747d8d5221804
#: ../../ref/django-admin.txt:151
msgid "diffsettings"
msgstr ""

# 6336f6960b2b4f10a0db68ce42f4b421
#: ../../ref/django-admin.txt:155
msgid ""
"Displays differences between the current settings file and Django's default "
"settings."
msgstr ""

# 965f89190c26432aa31c997f0b3070df
#: ../../ref/django-admin.txt:158
msgid ""
"Settings that don't appear in the defaults are followed by ``\"###\"``. For "
"example, the default settings don't define :setting:`ROOT_URLCONF`, so :"
"setting:`ROOT_URLCONF` is followed by ``\"###\"`` in the output of "
"``diffsettings``."
msgstr ""

# 47e5a3ce2eb14252b93d259bfc76347d
#: ../../ref/django-admin.txt:163
msgid ""
"Note that Django's default settings live in ``django/conf/global_settings."
"py``, if you're ever curious to see the full list of defaults."
msgstr ""

# cb6923aa9f734238835e769f902fd6ed
#: ../../ref/django-admin.txt:167
msgid "dumpdata <appname appname appname.Model ...>"
msgstr ""

# 2dcff00a82cb43249762f6d05570907b
#: ../../ref/django-admin.txt:171
msgid ""
"Outputs to standard output all data in the database associated with the "
"named application(s)."
msgstr ""

# 57a974c6298545a5a36d60121fd67f40
#: ../../ref/django-admin.txt:174
msgid ""
"If no application name is provided, all installed applications will be "
"dumped."
msgstr ""

# 91d325b89ac0402085bb32dd8f3776ac
#: ../../ref/django-admin.txt:176
msgid "The output of ``dumpdata`` can be used as input for ``loaddata``."
msgstr ""

# ea817789d2784d4e94cd5a0dbaca3e72
#: ../../ref/django-admin.txt:178
msgid ""
"Note that ``dumpdata`` uses the default manager on the model for selecting "
"the records to dump. If you're using a :ref:`custom manager <custom-"
"managers>` as the default manager and it filters some of the available "
"records, not all of the objects will be dumped."
msgstr ""

# eb1d7b083fa446d29c90f47d1b050208
#: ../../ref/django-admin.txt:185
msgid ""
"The :djadminopt:`--all` option may be provided to specify that ``dumpdata`` "
"should use Django's base manager, dumping records which might otherwise be "
"filtered or modified by a custom manager."
msgstr ""

# 03a55fe90c32486bbcd84304a602076b
#: ../../ref/django-admin.txt:191
msgid ""
"By default, ``dumpdata`` will format its output in JSON, but you can use the "
"``--format`` option to specify another format. Currently supported formats "
"are listed in :ref:`serialization-formats`."
msgstr ""

# f5835989b5be4c69b5fe7f4a81a0e9eb
#: ../../ref/django-admin.txt:197
msgid ""
"By default, ``dumpdata`` will output all data on a single line. This isn't "
"easy for humans to read, so you can use the ``--indent`` option to pretty-"
"print the output with a number of indentation spaces."
msgstr ""

# e4fbd97591584e41b305f40511c7df1a
#: ../../ref/django-admin.txt:201
msgid ""
"The :djadminopt:`--exclude` option may be provided to prevent specific "
"applications from being dumped."
msgstr ""

# 3fcf6c30881244729f88fea5d6896b73
#: ../../ref/django-admin.txt:206
msgid ""
"The :djadminopt:`--exclude` option may also be provided to prevent specific "
"models (specified as in the form of ``appname.ModelName``) from being dumped."
msgstr ""

# 209e13475b614a469667dce7df3edb33
#: ../../ref/django-admin.txt:209
msgid ""
"In addition to specifying application names, you can provide a list of "
"individual models, in the form of ``appname.Model``. If you specify a model "
"name to ``dumpdata``, the dumped output will be restricted to that model, "
"rather than the entire application. You can also mix application names and "
"model names."
msgstr ""

# 59818f9cbc8d4eb3a063b841e340fdef
# 221e66a81cb9477abacc3b4560214ec0
#: ../../ref/django-admin.txt:217 ../../ref/django-admin.txt:305
msgid ""
"The :djadminopt:`--database` option can be used to specify the database onto "
"which the data will be loaded."
msgstr ""

# 9f8373c066bf4b8fae111105b942bd11
#: ../../ref/django-admin.txt:224
msgid ""
"Use :ref:`natural keys <topics-serialization-natural-keys>` to represent any "
"foreign key and many-to-many relationship with a model that provides a "
"natural key definition. If you are dumping ``contrib.auth`` ``Permission`` "
"objects or ``contrib.contenttypes`` ``ContentType`` objects, you should "
"probably be using this flag."
msgstr ""

# b6aab27d498c4cedbe45eff452847a17
#: ../../ref/django-admin.txt:231
msgid "flush"
msgstr ""

# 93985c13e28847c8a7ced7179a29f643
#: ../../ref/django-admin.txt:235
msgid ""
"Returns the database to the state it was in immediately after syncdb was "
"executed. This means that all data will be removed from the database, any "
"post-synchronization handlers will be re-executed, and the ``initial_data`` "
"fixture will be re-installed."
msgstr ""

# 838668f67ecd4b2388ab11cedd6997d0
# 16817e17e2b147aaa227d713e14e0449
# 02943be42a934b488a8a219f63686f99
# 7228c2137ca049aca802802de3f2e500
#: ../../ref/django-admin.txt:240 ../../ref/django-admin.txt:498
#: ../../ref/django-admin.txt:1066 ../../ref/django-admin.txt:1163
msgid ""
"The :djadminopt:`--noinput` option may be provided to suppress all user "
"prompts."
msgstr ""

# f5307b64913c482c8824b3f54725cb40
#: ../../ref/django-admin.txt:245
msgid ""
"The :djadminopt:`--database` option may be used to specify the database to "
"flush."
msgstr ""

# 292c6df9680949f1be388317ff32a72f
#: ../../ref/django-admin.txt:253
msgid ""
"Introspects the database tables in the database pointed-to by the :setting:"
"`NAME` setting and outputs a Django model module (a ``models.py`` file) to "
"standard output."
msgstr ""

# f49c5a0b20f84680b3b96b1b6b14d7f3
#: ../../ref/django-admin.txt:257
msgid ""
"Use this if you have a legacy database with which you'd like to use Django. "
"The script will inspect the database and create a model for each table "
"within it."
msgstr ""

# 74d9b015f09a4cd18db854d264bdf9c9
#: ../../ref/django-admin.txt:261
msgid ""
"As you might expect, the created models will have an attribute for every "
"field in the table. Note that ``inspectdb`` has a few special cases in its "
"field-name output:"
msgstr ""

# 3a583488968649f8bd1adfa60e07a254
#: ../../ref/django-admin.txt:265
msgid ""
"If ``inspectdb`` cannot map a column's type to a model field type, it'll use "
"``TextField`` and will insert the Python comment ``'This field type is a "
"guess.'`` next to the field in the generated model."
msgstr ""

# 18bebcf2ddc84ce8915d7f94a5f3c361
#: ../../ref/django-admin.txt:270
msgid ""
"If the database column name is a Python reserved word (such as ``'pass'``, "
"``'class'`` or ``'for'``), ``inspectdb`` will append ``'_field'`` to the "
"attribute name. For example, if a table has a column ``'for'``, the "
"generated model will have a field ``'for_field'``, with the ``db_column`` "
"attribute set to ``'for'``. ``inspectdb`` will insert the Python comment "
"``'Field renamed because it was a Python reserved word.'`` next to the field."
msgstr ""

# 8c1b9e1865674b17aea296c26c4d8130
#: ../../ref/django-admin.txt:279
msgid ""
"This feature is meant as a shortcut, not as definitive model generation. "
"After you run it, you'll want to look over the generated models yourself to "
"make customizations. In particular, you'll need to rearrange models' order, "
"so that models that refer to other models are ordered properly."
msgstr ""

# 19879146c7384741ae28fed0a40cadcb
#: ../../ref/django-admin.txt:284
msgid ""
"Primary keys are automatically introspected for PostgreSQL, MySQL and "
"SQLite, in which case Django puts in the ``primary_key=True`` where needed."
msgstr ""

# 37e28fdcbdbd4bc1b9e201a7b136b54f
#: ../../ref/django-admin.txt:288
msgid ""
"``inspectdb`` works with PostgreSQL, MySQL and SQLite. Foreign-key detection "
"only works in PostgreSQL and with certain types of MySQL tables."
msgstr ""

# 2897f44ee8624022b8de999f0954b370
#: ../../ref/django-admin.txt:293
msgid ""
"The :djadminopt:`--database` option may be used to specify the database to "
"introspect."
msgstr ""

# 2e974424c99b45609312adb12115f5c6
#: ../../ref/django-admin.txt:297
msgid "loaddata <fixture fixture ...>"
msgstr ""

# a0021964c0c64892812203b330da6ad9
#: ../../ref/django-admin.txt:301
msgid ""
"Searches for and loads the contents of the named fixture into the database."
msgstr ""

# 2e88bc6311a54c0d8ca8e7867cea98a8
#: ../../ref/django-admin.txt:309
msgid "What's a \"fixture\"?"
msgstr ""

# c75a0bdd28834abb98c90809699f2888
#: ../../ref/django-admin.txt:311
msgid ""
"A *fixture* is a collection of files that contain the serialized contents of "
"the database. Each fixture has a unique name, and the files that comprise "
"the fixture can be distributed over multiple directories, in multiple "
"applications."
msgstr ""

# 55bccf7a18434fbf8dd75b544ec6a874
#: ../../ref/django-admin.txt:315
msgid "Django will search in three locations for fixtures:"
msgstr ""

# 367aca6151f146dd993c3609862f8df9
#: ../../ref/django-admin.txt:317
msgid "In the ``fixtures`` directory of every installed application"
msgstr ""

# dd2e9d54049e4823b99fcf15695bab15
#: ../../ref/django-admin.txt:318
msgid "In any directory named in the :setting:`FIXTURE_DIRS` setting"
msgstr ""

# fccc432835484b53a373d102b93dadb2
#: ../../ref/django-admin.txt:319
msgid "In the literal path named by the fixture"
msgstr ""

# 24d22e482e294f63884add420cc0f2b3
#: ../../ref/django-admin.txt:321
msgid ""
"Django will load any and all fixtures it finds in these locations that match "
"the provided fixture names."
msgstr ""

# 1e9a5ff82c1345a7acf5431aa35da16e
#: ../../ref/django-admin.txt:324
msgid ""
"If the named fixture has a file extension, only fixtures of that type will "
"be loaded. For example::"
msgstr ""

# 5a20bc8379844d23b30f7bce30a7834f
#: ../../ref/django-admin.txt:329
msgid ""
"would only load JSON fixtures called ``mydata``. The fixture extension must "
"correspond to the registered name of a :ref:`serializer <serialization-"
"formats>` (e.g., ``json`` or ``xml``)."
msgstr ""

# 1009dfebc4314f66a1982ef418b03e8f
#: ../../ref/django-admin.txt:333
msgid ""
"If you omit the extensions, Django will search all available fixture types "
"for a matching fixture. For example::"
msgstr ""

# 51cae7fa0f004619b041e50738bc5736
#: ../../ref/django-admin.txt:338
msgid ""
"would look for any fixture of any fixture type called ``mydata``. If a "
"fixture directory contained ``mydata.json``, that fixture would be loaded as "
"a JSON fixture."
msgstr ""

# d685450c154b4770a14ac67ddbe8bf00
#: ../../ref/django-admin.txt:342
msgid ""
"The fixtures that are named can include directory components. These "
"directories will be included in the search path. For example::"
msgstr ""

# d6c3c71404da410fb15179ef624a3059
#: ../../ref/django-admin.txt:347
msgid ""
"would search ``<appname>/fixtures/foo/bar/mydata.json`` for each installed "
"application,  ``<dirname>/foo/bar/mydata.json`` for each directory in :"
"setting:`FIXTURE_DIRS`, and the literal path ``foo/bar/mydata.json``."
msgstr ""

# 50cc8730bfa044be8e367bd3b5b55da0
#: ../../ref/django-admin.txt:351
msgid ""
"When fixture files are processed, the data is saved to the database as is. "
"Model defined ``save`` methods and ``pre_save`` signals are not called."
msgstr ""

# a5643c12a89840408a818857073cf8a5
#: ../../ref/django-admin.txt:354
msgid ""
"Note that the order in which fixture files are processed is undefined. "
"However, all fixture data is installed as a single transaction, so data in "
"one fixture can reference data in another fixture. If the database backend "
"supports row-level constraints, these constraints will be checked at the end "
"of the transaction."
msgstr ""

# bbbf36a24b3143cb8ec7a14ab0a9e85e
#: ../../ref/django-admin.txt:360
msgid ""
"The ``dumpdata`` command can be used to generate input for ``loaddata``."
msgstr ""

# 856fdf267fce40518128443ba60f2a4b
#: ../../ref/django-admin.txt:363
msgid "Compressed fixtures"
msgstr ""

# 74eeea4be0ed4fda82f65ddcaffa57c4
#: ../../ref/django-admin.txt:365
msgid ""
"Fixtures may be compressed in ``zip``, ``gz``, or ``bz2`` format. For "
"example::"
msgstr ""

# 58c01cff57264d2995023f0e7f74b8c9
#: ../../ref/django-admin.txt:369
msgid ""
"would look for any of ``mydata.json``, ``mydata.json.zip``, ``mydata.json."
"gz``, or ``mydata.json.bz2``. The first file contained within a zip-"
"compressed archive is used."
msgstr ""

# ea4bbf62d37849f0a26d3467012525c1
#: ../../ref/django-admin.txt:373
msgid ""
"Note that if two fixtures with the same name but different fixture type are "
"discovered (for example, if ``mydata.json`` and ``mydata.xml.gz`` were found "
"in the same fixture directory), fixture installation will be aborted, and "
"any data installed in the call to ``loaddata`` will be removed from the "
"database."
msgstr ""

# c002a9ee460440aca9d834c30bb333e1
#: ../../ref/django-admin.txt:381
msgid ""
"The MyISAM storage engine of MySQL doesn't support transactions or "
"constraints, so if you use MyISAM, you won't get validation of fixture data, "
"or a rollback if multiple transaction files are found."
msgstr ""

# 7b62bd91d1c14c63a79238830f96d880
#: ../../ref/django-admin.txt:386
msgid "Database-specific fixtures"
msgstr ""

# 9eb76600d4e54e91ade3b5e2c487d6db
#: ../../ref/django-admin.txt:388
msgid ""
"If you're in a multi-database setup, you might have fixture data that you "
"want to load onto one database, but not onto another. In this situation, you "
"can add database identifier into the names of your fixtures."
msgstr ""

# 4bea07ad51f843a6bee034a9315e7541
#: ../../ref/django-admin.txt:392
msgid ""
"For example, if your :setting:`DATABASES` setting has a 'master' database "
"defined, name the fixture ``mydata.master.json`` or ``mydata.master.json."
"gz`` and the fixture will only be loaded when you specify you want to load "
"data into the ``master`` database."
msgstr ""

# 7329fec46f374f9fb903b4b79070fedd
#: ../../ref/django-admin.txt:398
msgid "makemessages"
msgstr ""

# a08a40669e384561813b8d2d0b29647b
#: ../../ref/django-admin.txt:402
msgid ""
"Runs over the entire source tree of the current directory and pulls out all "
"strings marked for translation. It creates (or updates) a message file in "
"the conf/locale (in the django tree) or locale (for project and application) "
"directory. After making changes to the messages files you need to compile "
"them with ``compilemessages`` for use with the builtin gettext support. See "
"the :ref:`i18n documentation <how-to-create-language-files>` for details."
msgstr ""

# b1cc042c25604ef7aa43cb5ae03f3b7d
#: ../../ref/django-admin.txt:411
msgid ""
"Use the ``--all`` or ``-a`` option to update the message files for all "
"available languages."
msgstr ""

# efe0900aeb8c42249f4957f6cb956e55
#: ../../ref/django-admin.txt:420
msgid ""
"Use the ``--extension`` or ``-e`` option to specify a list of file "
"extensions to examine (default: \".html\", \".txt\")."
msgstr ""

# ac9885d9371348f099854fba20011ba2
#: ../../ref/django-admin.txt:427
msgid ""
"Separate multiple extensions with commas or use -e or --extension multiple "
"times::"
msgstr ""

# 8cdd42b4ddab49a4a4f6b297a5196c77
#: ../../ref/django-admin.txt:431
msgid "Use the :djadminopt:`--locale` option to specify the locale to process."
msgstr ""

# 1f42d5d298f841a6901d83c98fbec317
#: ../../ref/django-admin.txt:439
msgid ""
"Use the ``--domain`` or ``-d`` option to change the domain of the messages "
"files. Currently supported:"
msgstr ""

# e7d971c1cd0649cb85006868a78759a3
#: ../../ref/django-admin.txt:442
msgid "``django`` for all ``*.py``, ``*.html`` and ``*.txt`` files (default)"
msgstr ""

# fe131cd039674156a2bcc688802524a1
#: ../../ref/django-admin.txt:443
msgid "``djangojs`` for ``*.js`` files"
msgstr ""

# 30e2961ea1214973938305aa343d2a3c
#: ../../ref/django-admin.txt:449
msgid ""
"Use the ``--symlinks`` or ``-s`` option to follow symlinks to directories "
"when looking for new translation strings."
msgstr ""

# 7686b7d1ab1542fbbf5c4241eae48c16
#: ../../ref/django-admin.txt:458
msgid ""
"Use the ``--ignore`` or ``-i`` option to ignore files or directories "
"matching the given :mod:`glob`-style pattern. Use multiple times to ignore "
"more."
msgstr ""

# 8f3fa79a7ac04da2a46691bfced064a1
#: ../../ref/django-admin.txt:461
msgid "These patterns are used by default: ``'CVS'``, ``'.*'``, ``'*~'``"
msgstr ""

# 2cedbc545b58457f9511440d3349a3dc
#: ../../ref/django-admin.txt:469
msgid ""
"Use the ``--no-default-ignore`` option to disable the default values of :"
"djadminopt:`--ignore`."
msgstr ""

# fd5dbebc40914176a159e24d30c9dd85
#: ../../ref/django-admin.txt:476
msgid ""
"Use the ``--no-wrap`` option to disable breaking long message lines into "
"several lines in language files."
msgstr ""

# 9a4b8f9eadcc4416a3c277a118c5d989
#: ../../ref/django-admin.txt:483
msgid ""
"Use the ``--no-location`` option to not write '``#: filename:line``' comment "
"lines in language files. Note that using this option makes it harder for "
"technically skilled translators to understand each message's context."
msgstr ""

# 51e4fcfd0ef4431bb314454c2caab143
#: ../../ref/django-admin.txt:488
msgid "reset <appname appname ...>"
msgstr ""

# d5de3e48c9bb490bbf84655499bb433a
#: ../../ref/django-admin.txt:496
msgid "Executes the equivalent of ``sqlreset`` for the given app name(s)."
msgstr ""

# a5b3839540d7401a8fb8335ed2680e84
#: ../../ref/django-admin.txt:503
msgid ""
"The :djadminopt:`--database` option can be used to specify the alias of the "
"database to reset."
msgstr ""

# 9c65b47861564f25933f8393efe54993
#: ../../ref/django-admin.txt:507
msgid "runfcgi [options]"
msgstr ""

# b0b004b7906f4b4ca72de7e816119300
#: ../../ref/django-admin.txt:511
msgid ""
"Starts a set of FastCGI processes suitable for use with any Web server that "
"supports the FastCGI protocol. See the :doc:`FastCGI deployment "
"documentation </howto/deployment/fastcgi>` for details. Requires the Python "
"FastCGI module from `flup`_."
msgstr ""

# fe70b247ad90459895c54759824c29e3
#: ../../ref/django-admin.txt:522
msgid ""
"The options accepted by this command are passed to the FastCGI library and "
"don't use the ``'--'`` prefix as is usual for other Django management "
"commands."
msgstr ""

# cd3103401a19485b988b699ad8eaf85c
#: ../../ref/django-admin.txt:527
msgid "``protocol=PROTOCOL``"
msgstr ""

# 0ef85e4f6d374b5f98c942af3485f989
#: ../../ref/django-admin.txt:529
msgid ""
"Protocol to use. *PROTOCOL* can be ``fcgi``, ``scgi``, ``ajp``, etc. "
"(default is ``fcgi``)"
msgstr ""

# 3fe97e8449fb4500b3ac378fb5a5bf1c
#: ../../ref/django-admin.txt:534
msgid "``host=HOSTNAME``"
msgstr ""

# 07928434debc469bb0d802d7f0c65dfd
#: ../../ref/django-admin.txt:536
msgid "Hostname to listen on."
msgstr ""

# f79166512353425eb89e3ee70a5daec7
#: ../../ref/django-admin.txt:540
msgid "``port=PORTNUM``"
msgstr ""

# 8016139e46bb4416acdb6e2e92b91671
#: ../../ref/django-admin.txt:542
msgid "Port to listen on."
msgstr ""

# 3e4f6069cf8f45c69fb301ba20cf5039
#: ../../ref/django-admin.txt:546
msgid "``socket=FILE``"
msgstr ""

# 8964fbc7829544e7a95177371ee4f344
#: ../../ref/django-admin.txt:548
msgid "UNIX socket to listen on."
msgstr ""

# 765fa25654e74ab99db81ab6b3435f6b
#: ../../ref/django-admin.txt:552
msgid "``method=IMPL``"
msgstr ""

# 643821eb54f0489db4d7754e0ac9c7e3
#: ../../ref/django-admin.txt:554
msgid "Possible values: ``prefork`` or ``threaded`` (default ``prefork``)"
msgstr ""

# eb2dddaf34f84addb2503800a73e4645
#: ../../ref/django-admin.txt:558
msgid "``maxrequests=NUMBER``"
msgstr ""

# 90c88d0ce4fa40058a1cc3cef9bf500e
#: ../../ref/django-admin.txt:560
msgid ""
"Number of requests a child handles before it is killed and a new child is "
"forked (0 means no limit)."
msgstr ""

# 87d8cf8c698143be9e4546e363e666f0
#: ../../ref/django-admin.txt:565
msgid "``maxspare=NUMBER``"
msgstr ""

# 1db96bc29b7e4ffdbc85834a6168c1c0
#: ../../ref/django-admin.txt:567
msgid "Max number of spare processes / threads."
msgstr ""

# 9b19fba1092b4505bca9629bf51ff9fc
#: ../../ref/django-admin.txt:571
msgid "``minspare=NUMBER``"
msgstr ""

# 3f87caf0cb12484d958208afbd723679
#: ../../ref/django-admin.txt:573
msgid "Min number of spare processes / threads."
msgstr ""

# 12528e3c82cf4e419256ba2206f41618
#: ../../ref/django-admin.txt:577
msgid "``maxchildren=NUMBER``"
msgstr ""

# 8a688c9c10f947bfa9b6dc0d0877f1ff
#: ../../ref/django-admin.txt:579
msgid "Hard limit number of processes / threads."
msgstr ""

# d02e9da43b144bc2a565c4c15e6380cd
#: ../../ref/django-admin.txt:583
msgid "``daemonize=BOOL``"
msgstr ""

# f71d05893e9c49d6b7dead233f7c5cb3
#: ../../ref/django-admin.txt:585
msgid "Whether to detach from terminal."
msgstr ""

# ccf5bac2ebff49c4917eecc108ce5335
#: ../../ref/django-admin.txt:589
msgid "``pidfile=FILE``"
msgstr ""

# 080fc61517fc4e02b9c62df9e96e11eb
#: ../../ref/django-admin.txt:591
msgid "Write the spawned process-id to file *FILE*."
msgstr ""

# 0c0ced77ab294ef096f1405e9c074d13
#: ../../ref/django-admin.txt:595
msgid "``workdir=DIRECTORY``"
msgstr ""

# b4c79cd0b83044df8418836483a142ce
#: ../../ref/django-admin.txt:597
msgid "Change to directory *DIRECTORY* when daemonizing."
msgstr ""

# b15b59395c284df9904f4fd79aa2cd2e
#: ../../ref/django-admin.txt:601
msgid "``debug=BOOL``"
msgstr ""

# 5f0005dbffc449caa106f095397dcc55
#: ../../ref/django-admin.txt:603
msgid "Set to true to enable flup tracebacks."
msgstr ""

# 780804ee4bd0482ebd8292ba91ecc62b
#: ../../ref/django-admin.txt:607
msgid "``outlog=FILE``"
msgstr ""

# e5cdfc545ec9459da732abf739076edb
#: ../../ref/django-admin.txt:609
msgid "Write stdout to the *FILE* file."
msgstr ""

# 00587b884c6e4379a477f3ab58065257
#: ../../ref/django-admin.txt:613
msgid "``errlog=FILE``"
msgstr ""

# 5c9ef3c6073546b8a8012cdf3a781019
#: ../../ref/django-admin.txt:615
msgid "Write stderr to the *FILE* file."
msgstr ""

# 4a7a4e7beeb945e0be85e0c1500c36b6
#: ../../ref/django-admin.txt:619
msgid "``umask=UMASK``"
msgstr ""

# ea7a1fd1a5a7482493f7edf3f8491de5
#: ../../ref/django-admin.txt:621
msgid ""
"Umask to use when daemonizing. The value is interpeted as an octal number "
"(default value is ``022``)."
msgstr ""

# a34b217da68e43df9036f1ad68774a7a
#: ../../ref/django-admin.txt:629
msgid "Run a FastCGI server as a daemon and write the spawned PID in a file."
msgstr ""

# 5b84250ea40142db898953b45908571a
#: ../../ref/django-admin.txt:632
msgid "runserver [port or address:port]"
msgstr ""

# 407b35becf0845e6bfc3f105fa77876d
#: ../../ref/django-admin.txt:636
msgid ""
"Starts a lightweight development Web server on the local machine. By "
"default, the server runs on port 8000 on the IP address ``127.0.0.1``. You "
"can pass in an IP address and port number explicitly."
msgstr ""

# c3f9a2a59718487c840904824056b455
#: ../../ref/django-admin.txt:640
msgid ""
"If you run this script as a user with normal privileges (recommended), you "
"might not have access to start a port on a low port number. Low port numbers "
"are reserved for the superuser (root)."
msgstr ""

# 1dbd76e1067d4382b785b63015e29241
#: ../../ref/django-admin.txt:648
msgid ""
"DO NOT USE THIS SERVER IN A PRODUCTION SETTING. It has not gone through "
"security audits or performance tests. (And that's how it's gonna stay. We're "
"in the business of making Web frameworks, not Web servers, so improving this "
"server to be able to handle a production environment is outside the scope of "
"Django.)"
msgstr ""

# 590e2939159d4096a616cc83234c86af
#: ../../ref/django-admin.txt:654
msgid ""
"The development server automatically reloads Python code for each request, "
"as needed. You don't need to restart the server for code changes to take "
"effect."
msgstr ""

# c25e1ca13097452695a74f565e2a5eb3
#: ../../ref/django-admin.txt:657
msgid ""
"When you start the server, and each time you change Python code while the "
"server is running, the server will validate all of your installed models. "
"(See the ``validate`` command below.) If the validator finds errors, it will "
"print them to standard output, but it won't stop the server."
msgstr ""

# 56cab36dc91949c78a4c5506a824c9d7
#: ../../ref/django-admin.txt:662
msgid ""
"You can run as many servers as you want, as long as they're on separate "
"ports. Just execute ``django-admin.py runserver`` more than once."
msgstr ""

# d977b127a7c64b89a71a1e18a98f29d0
#: ../../ref/django-admin.txt:665
msgid ""
"Note that the default IP address, ``127.0.0.1``, is not accessible from "
"other machines on your network. To make your development server viewable to "
"other machines on the network, use its own IP address (e.g. ``192.168.2.1``) "
"or ``0.0.0.0`` or ``::`` (with IPv6 enabled)."
msgstr ""

# bc6266e1f9df4e48bddaa69b1c084ca7
#: ../../ref/django-admin.txt:672
msgid ""
"You can provide an IPv6 address surrounded by brackets (e.g. ``"
"[200a::1]:8000``). This will automatically enable IPv6 support."
msgstr ""

# b729b0a09f25499ca73b2de53a03e0bc
#: ../../ref/django-admin.txt:675
msgid "A hostname containing ASCII-only characters can also be used."
msgstr ""

# 29eece7ee0264b1ab7f0a91abefccc69
#: ../../ref/django-admin.txt:679
msgid ""
"Use the ``--adminmedia`` option to tell Django where to find the various CSS "
"and JavaScript files for the Django admin interface. Normally, the "
"development server serves these files out of the Django source tree "
"magically, but you'd want to use this if you made any changes to those files "
"for your own site."
msgstr ""

# 8b80eeb9d86f4ce58ccda483f2abcb33
#: ../../ref/django-admin.txt:690
msgid ""
"If the :doc:`staticfiles</ref/contrib/staticfiles>` contrib app is enabled "
"(default in new projects) the :djadmin:`runserver` command will be overriden "
"with an own :djadmin:`runserver<staticfiles-runserver>` command which "
"doesn't have the :djadminopt:`--adminmedia` option due to deprecation."
msgstr ""

# b30849ad1952497badd501bc39284463
#: ../../ref/django-admin.txt:697
msgid ""
"Use the ``--noreload`` option to disable the use of the auto-reloader. This "
"means any Python code changes you make while the server is running will "
"*not* take effect if the particular Python modules have already been loaded "
"into memory."
msgstr ""

# 9953481a301449ee848df750de15e468
#: ../../ref/django-admin.txt:710
msgid ""
"Use the ``--nothreading`` option to disable the use of threading in the "
"development server."
msgstr ""

# 4da0b437ef8e400b96f3756c2532d82e
#: ../../ref/django-admin.txt:717
msgid ""
"Use the ``--ipv6`` (or shorter ``-6``) option to tell Django to use IPv6 for "
"the development server. This changes the default IP address from "
"``127.0.0.1`` to ``::1``."
msgstr ""

# fb17c51d9daa4c7faca46619282f1cb7
#: ../../ref/django-admin.txt:726
msgid "Examples of using different ports and addresses"
msgstr ""

# 6c54ddbc084545dcb802d833ffdd3f6f
#: ../../ref/django-admin.txt:728
msgid "Port 8000 on IP address ``127.0.0.1``::"
msgstr ""

# a431412eb0f94c86ac9bc2691278a3d8
#: ../../ref/django-admin.txt:732
msgid "Port 8000 on IP address ``1.2.3.4``::"
msgstr ""

# 0ddd75db3f6a4c7c8ac9e54c62fd4280
#: ../../ref/django-admin.txt:736
msgid "Port 7000 on IP address ``127.0.0.1``::"
msgstr ""

# 592c68783302473499ec7c50c87ae7c9
#: ../../ref/django-admin.txt:740
msgid "Port 7000 on IP address ``1.2.3.4``::"
msgstr ""

# 5618fb1b8a6f44559fe58c5662a29bd4
#: ../../ref/django-admin.txt:744
msgid "Port 8000 on IPv6 address ``::1``::"
msgstr ""

# 54fe422656c24fd086b17d19912ceab4
#: ../../ref/django-admin.txt:748
msgid "Port 7000 on IPv6 address ``::1``::"
msgstr ""

# fe8718094ff44a21b71fa559b99dd90f
#: ../../ref/django-admin.txt:752
msgid "Port 7000 on IPv6 address ``2001:0db8:1234:5678::9``::"
msgstr ""

# e6f05b53efa843398c824ccc40e561e0
#: ../../ref/django-admin.txt:756
msgid "Port 8000 on IPv4 address of host ``localhost``::"
msgstr ""

# e2887b4df9764e69a15e66cbb1e79cfe
#: ../../ref/django-admin.txt:760
msgid "Port 8000 on IPv6 address of host ``localhost``::"
msgstr ""

# 922f578a92b548829a92d95960c9be4d
#: ../../ref/django-admin.txt:765
msgid "Serving static files with the development server"
msgstr ""

# fa93304101514df1a5bb5eefaeab6e87
#: ../../ref/django-admin.txt:767
msgid ""
"By default, the development server doesn't serve any static files for your "
"site (such as CSS files, images, things under :setting:`MEDIA_URL` and so "
"forth). If you want to configure Django to serve static media, read :doc:`/"
"howto/static-files`."
msgstr ""

# b8151572021f4e03a40e87e2bca374fb
#: ../../ref/django-admin.txt:772
msgid "shell"
msgstr ""

# ce96a6e7b2a64994a394954906d8a328
#: ../../ref/django-admin.txt:776
msgid "Starts the Python interactive interpreter."
msgstr ""

# fa118c0082f44a8798b64205f994bab3
#: ../../ref/django-admin.txt:778
msgid ""
"Django will use IPython_ or bpython_ if either is installed. If you have a "
"rich shell installed but want to force use of the \"plain\" Python "
"interpreter, use the ``--plain`` option, like so::"
msgstr ""

# 95d3c84cd4244b9aa32bd75b1ca04d61
#: ../../ref/django-admin.txt:788
msgid "sql <appname appname ...>"
msgstr ""

# a4e3c1ce1f9e4ad4981ffc0778830033
#: ../../ref/django-admin.txt:792
msgid "Prints the CREATE TABLE SQL statements for the given app name(s)."
msgstr ""

# efdf8d8fecef4015a66219d79769bf2c
# 01af12470d39407eaf7d90ede8b1306a
# 130cfe2d3fd64262b51666f1f15e5631
# 5b21d3cf457c45ef99f8c0f277060afe
# b0cfa3c49b864356830682e2d1bcacc4
# 71b2beaed1fa455eb3fe5af9068bf074
# fe79c5fa3a31460d967ccdcf8f1f9272
# 5503af6940d04ad3a1a98e055e1ed2f7
#: ../../ref/django-admin.txt:796 ../../ref/django-admin.txt:811
#: ../../ref/django-admin.txt:823 ../../ref/django-admin.txt:849
#: ../../ref/django-admin.txt:862 ../../ref/django-admin.txt:874
#: ../../ref/django-admin.txt:890 ../../ref/django-admin.txt:908
msgid ""
"The :djadminopt:`--database` option can be used to specify the database for "
"which to print the SQL."
msgstr ""

# 61b6d7e3ed2442839564bb1ef3303416
#: ../../ref/django-admin.txt:800
msgid "sqlall <appname appname ...>"
msgstr ""

# 98a3c2d5a3cd4aeda7c95368f1f93716
#: ../../ref/django-admin.txt:804
msgid ""
"Prints the CREATE TABLE and initial-data SQL statements for the given app "
"name(s)."
msgstr ""

# 77480eff49f64c6888a55281e9ea241c
#: ../../ref/django-admin.txt:806
msgid ""
"Refer to the description of ``sqlcustom`` for an explanation of how to "
"specify initial data."
msgstr ""

# 3ed64d2e73724faf959798f0170cb996
#: ../../ref/django-admin.txt:815
msgid "sqlclear <appname appname ...>"
msgstr ""

# 39465c4bff004466ae25f4f5b124d114
#: ../../ref/django-admin.txt:819
msgid "Prints the DROP TABLE SQL statements for the given app name(s)."
msgstr ""

# 8849deb00eba4b87aedd16656ef22515
#: ../../ref/django-admin.txt:827
msgid "sqlcustom <appname appname ...>"
msgstr ""

# a85e60b87b3b4064ae49ad10c84ee5cf
#: ../../ref/django-admin.txt:831
msgid "Prints the custom SQL statements for the given app name(s)."
msgstr ""

# 51388dcacca949e5bd467734a263024b
#: ../../ref/django-admin.txt:833
msgid ""
"For each model in each specified app, this command looks for the file "
"``<appname>/sql/<modelname>.sql``, where ``<appname>`` is the given app name "
"and ``<modelname>`` is the model's name in lowercase. For example, if you "
"have an app ``news`` that includes a ``Story`` model, ``sqlcustom`` will "
"attempt to read a file ``news/sql/story.sql`` and append it to the output of "
"this command."
msgstr ""

# 1bd5ea73d2da4ce9afd7d425c88c16a9
#: ../../ref/django-admin.txt:840
msgid ""
"Each of the SQL files, if given, is expected to contain valid SQL. The SQL "
"files are piped directly into the database after all of the models' table-"
"creation statements have been executed. Use this SQL hook to make any table "
"modifications, or insert any SQL functions into the database."
msgstr ""

# 2428a6bd1fcc495babda6afef2dd1924
#: ../../ref/django-admin.txt:845
msgid "Note that the order in which the SQL files are processed is undefined."
msgstr ""

# dcc4b00260684633a425cdf3d38f61c3
#: ../../ref/django-admin.txt:853
msgid "sqlflush"
msgstr ""

# 29a528c9169c4397bbee9c72516687ec
#: ../../ref/django-admin.txt:857
msgid ""
"Prints the SQL statements that would be executed for the :djadmin:`flush` "
"command."
msgstr ""

# 2ed96ee9131a4e258e9667c43b864930
#: ../../ref/django-admin.txt:866
msgid "sqlindexes <appname appname ...>"
msgstr ""

# bd6fd016b5bd4128a70adf2e5425789b
#: ../../ref/django-admin.txt:870
msgid "Prints the CREATE INDEX SQL statements for the given app name(s)."
msgstr ""

# fd0f325fe4ab465b9f63ec1449b22f61
#: ../../ref/django-admin.txt:878
msgid "sqlreset <appname appname ...>"
msgstr ""

# c0ea29c6fde54946b7f17a3a0b29035d
#: ../../ref/django-admin.txt:886
msgid ""
"Prints the DROP TABLE SQL, then the CREATE TABLE SQL, for the given app name"
"(s)."
msgstr ""

# 415e27e11a42490f846a4c63180c7f15
#: ../../ref/django-admin.txt:894
msgid "sqlsequencereset <appname appname ...>"
msgstr ""

# a780b673518442dcba17a13c227f0f15
#: ../../ref/django-admin.txt:898
msgid ""
"Prints the SQL statements for resetting sequences for the given app name(s)."
msgstr ""

# 74a26b33ceab41d18e3f18bafe3dcd38
#: ../../ref/django-admin.txt:900
msgid ""
"Sequences are indexes used by some database engines to track the next "
"available number for automatically incremented fields."
msgstr ""

# 463d125b20664690b73f08630b6e9c64
#: ../../ref/django-admin.txt:903
msgid ""
"Use this command to generate SQL which will fix cases where a sequence is "
"out of sync with its automatically incremented field data."
msgstr ""

# f579860597b04a0298524ebd841cd33a
#: ../../ref/django-admin.txt:912
msgid "startapp <appname> [destination]"
msgstr ""

# 6727fd72c3c347aea1ce9c0f11ac2fbf
#: ../../ref/django-admin.txt:916
msgid ""
"Creates a Django app directory structure for the given app name in the "
"current directory or the given destination."
msgstr ""

# 8386d13e4d994d17a9168f10e59e6fda
#: ../../ref/django-admin.txt:921
msgid ""
"By default the directory created contains a ``models.py`` file and other app "
"template files. (See the `source`_ for more details.) If only the app name "
"is given, the app directory will be created in the current working directory."
msgstr ""

# f015050e1084481da60129b7559a9bee
#: ../../ref/django-admin.txt:926
msgid ""
"If the optional destination is provided, Django will use that existing "
"directory rather than creating a new one. You can use '.' to denote the "
"current working directory."
msgstr ""

# 0f4e53073f7c455494cf06df6d917a54
#: ../../ref/django-admin.txt:937
msgid ""
"With the ``--template`` option, you can use a custom app template by "
"providing either the path to a directory with the app template file, or a "
"path to a compressed file (``.tar.gz``, ``.tar.bz2``, ``.tgz``, ``.tbz``, ``."
"zip``) containing the app template files."
msgstr ""

# 8bd040e1744748d2a30c6e83b3cbfd59
#: ../../ref/django-admin.txt:942
msgid ""
"Django will also accept URLs (``http``, ``https``, ``ftp``) to compressed "
"archives with the app template files, downloading and extracting them on the "
"fly."
msgstr ""

# d3fe64e46a0a48938a564fcddd607767
#: ../../ref/django-admin.txt:946
msgid ""
"For example, this would look for an app template in the given directory when "
"creating the ``myapp`` app::"
msgstr ""

# 789056778c944529a50cafe9822d63a6
#: ../../ref/django-admin.txt:953
msgid ""
"When Django copies the app template files, it also renders certain files "
"through the template engine: the files whose extensions match the ``--"
"extension`` option (``py`` by default) and the files whose names are passed "
"with the ``--name`` option. The :class:`template context <django.template."
"Context>` used is:"
msgstr ""

# 57c255163a454187a80616e5fe54e89c
#: ../../ref/django-admin.txt:959
msgid "Any option passed to the startapp command"
msgstr ""

# 0c1ff7f859ee41daae9108fc94dc6f4c
#: ../../ref/django-admin.txt:960
msgid "``app_name`` -- the app name as passed to the command"
msgstr ""

# c8f4412b9f514bf585c3bb93e7216eaf
#: ../../ref/django-admin.txt:961
msgid "``app_directory`` -- the full path of the newly created app"
msgstr ""

# 9ec4c3a7dcd14c5bb67f1fc4303018cf
#: ../../ref/django-admin.txt:967
msgid ""
"When the app template files are rendered with the Django template engine (by "
"default all ``*.py`` files), Django will also replace all stray template "
"variables contained. For example, if one of the Python files contains a "
"docstring explaining a particular feature related to template rendering, it "
"might result in an incorrect example."
msgstr ""

# 936df33b81b6454db1c946ed5730d94f
#: ../../ref/django-admin.txt:973
msgid ""
"To work around this problem, you can use the :ttag:`templatetag` templatetag "
"to \"escape\" the various parts of the template syntax."
msgstr ""

# 8ecb6a0dd91541c1a790286d1f8690e9
#: ../../ref/django-admin.txt:979
msgid "startproject <projectname> [destination]"
msgstr ""

# d2c360b04edb4396a3deab4b84d51638
#: ../../ref/django-admin.txt:983
msgid ""
"Creates a Django project directory structure for the given project name in "
"the current directory or the given destination."
msgstr ""

# b2c245d5663e478faabf15c7abefe85a
#: ../../ref/django-admin.txt:988
msgid ""
"By default, the new directory contains ``manage.py`` and a project package "
"(containing a ``settings.py`` and other files). See the `template source`_ "
"for details."
msgstr ""

# 1d2b18d6d6a940b2b66f3ab46a0d886d
#: ../../ref/django-admin.txt:992
msgid ""
"If only the project name is given, both the project directory and project "
"package will be named ``<projectname>`` and the project directory will be "
"created in the current working directory."
msgstr ""

# 2854f28b31d84fc19d0cc43c296aa626
#: ../../ref/django-admin.txt:996
msgid ""
"If the optional destination is provided, Django will use that existing "
"directory as the project directory, and create ``manage.py`` and the project "
"package within it. Use '.' to denote the current working directory."
msgstr ""

# 2a8a163a976a4552820754e7e3037d75
#: ../../ref/django-admin.txt:1006
msgid ""
"As with the :djadmin:`startapp` command, the ``--template`` option lets you "
"specify a directory, file path or URL of a custom project template. See the :"
"djadmin:`startapp` documentation for details of supported project template "
"formats."
msgstr ""

# d7d32007f75842b7991d9c7847084936
#: ../../ref/django-admin.txt:1011
msgid ""
"For example, this would look for a project template in the given directory "
"when creating the ``myproject`` project::"
msgstr ""

# 8d3d2360c1c3497aaeab4de3401a4a33
#: ../../ref/django-admin.txt:1016
msgid ""
"When Django copies the project template files, it also renders certain files "
"through the template engine: the files whose extensions match the ``--"
"extension`` option (``py`` by default) and the files whose names are passed "
"with the ``--name`` option. The :class:`template context <django.template."
"Context>` used is:"
msgstr ""

# 53ced073a0414bb0a30e56771baca33f
#: ../../ref/django-admin.txt:1022
msgid "Any option passed to the startproject command"
msgstr ""

# 28ff836fabef4fdd992f07b1fc81539f
#: ../../ref/django-admin.txt:1023
msgid "``project_name`` -- the project name as passed to the command"
msgstr ""

# 93ecb4225cf14b498ec17800e72dd892
#: ../../ref/django-admin.txt:1024
msgid "``project_directory`` -- the full path of the newly created project"
msgstr ""

# 97b097b149b04899bdc364274dceb2c0
#: ../../ref/django-admin.txt:1025
msgid "``secret_key`` -- a random key for the :setting:`SECRET_KEY` setting"
msgstr ""

# 62d2b54ef28e4031910cc78150bb5f68
#: ../../ref/django-admin.txt:1027
msgid ""
"Please also see the :ref:`rendering warning <render_warning>` as mentioned "
"for :djadmin:`startapp`."
msgstr ""

# d5ccc3dac0d8494da75d606352e7ee04
#: ../../ref/django-admin.txt:1033
msgid "syncdb"
msgstr ""

# b99c65f687694469bc70460435bf2ab1
#: ../../ref/django-admin.txt:1037
msgid ""
"Creates the database tables for all apps in :setting:`INSTALLED_APPS` whose "
"tables have not already been created."
msgstr ""

# b4d6c062e3cc47e593faaa8b4993b3f6
#: ../../ref/django-admin.txt:1040
msgid ""
"Use this command when you've added new applications to your project and want "
"to install them in the database. This includes any apps shipped with Django "
"that might be in :setting:`INSTALLED_APPS` by default. When you start a new "
"project, run this command to install the default apps."
msgstr ""

# 30a9b8202cf441c5ad3e552acc2a09c7
#: ../../ref/django-admin.txt:1047
msgid ""
"``syncdb`` will only create tables for models which have not yet been "
"installed. It will *never* issue ``ALTER TABLE`` statements to match changes "
"made to a model class after installation. Changes to model classes and "
"database schemas often involve some form of ambiguity and, in those cases, "
"Django would have to guess at the correct changes to make. There is a risk "
"that critical data would be lost in the process."
msgstr ""

# 3d05cd7ae83a43dbab4464b1c5a4ca21
#: ../../ref/django-admin.txt:1054
msgid ""
"If you have made changes to a model and wish to alter the database tables to "
"match, use the ``sql`` command to display the new SQL structure and compare "
"that to your existing table schema to work out the changes."
msgstr ""

# 98c248c92f7042ec8113df82bbb860a4
#: ../../ref/django-admin.txt:1058
msgid ""
"If you're installing the ``django.contrib.auth`` application, ``syncdb`` "
"will give you the option of creating a superuser immediately."
msgstr ""

# a8b62adcf68148e49774459e38909159
#: ../../ref/django-admin.txt:1061
msgid ""
"``syncdb`` will also search for and install any fixture named "
"``initial_data`` with an appropriate extension (e.g. ``json`` or ``xml``). "
"See the documentation for ``loaddata`` for details on the specification of "
"fixture data files."
msgstr ""

# ba176c232c2c4c42bc64f992431b9da8
#: ../../ref/django-admin.txt:1071
msgid ""
"The :djadminopt:`--database` option can be used to specify the database to "
"synchronize."
msgstr ""

# 5506156cb7634b488cc042a426bb0d42
#: ../../ref/django-admin.txt:1075
msgid "test <app or test identifier>"
msgstr ""

# 0f2ef14e36dc4191b2a2a5b7e8ebe8a9
#: ../../ref/django-admin.txt:1079
msgid ""
"Runs tests for all installed models. See :doc:`/topics/testing` for more "
"information."
msgstr ""

# ef0f316fb2f242699832a42a4afef083
#: ../../ref/django-admin.txt:1085
msgid ""
"The ``--failfast`` option can be used to stop running tests and report the "
"failure immediately after a test fails."
msgstr ""

# 19738840a4174af9ba78d11150456cb5
#: ../../ref/django-admin.txt:1091
msgid ""
"The ``--testrunner`` option can be used to control the test runner class "
"that is used to execute tests. If this value is provided, it overrides the "
"value provided by the :setting:`TEST_RUNNER` setting."
msgstr ""

# 3f949aa2acb54b78a8cb961198d0205b
#: ../../ref/django-admin.txt:1098
msgid ""
"The ``--liveserver`` option can be used to override the default address "
"where the live server (used with :class:`~django.test.LiveServerTestCase`) "
"is expected to run from. The default value is ``localhost:8081``."
msgstr ""

# ee4d91213e30419abce6ff94580b72fd
#: ../../ref/django-admin.txt:1103
msgid "testserver <fixture fixture ...>"
msgstr ""

# 34b2b0192c6b4dbebb8c56fae098e0dd
#: ../../ref/django-admin.txt:1107
msgid ""
"Runs a Django development server (as in ``runserver``) using data from the "
"given fixture(s)."
msgstr ""

# 2c2640d0995a4fff8ad98feb9dbc81ed
#: ../../ref/django-admin.txt:1110
msgid "For example, this command::"
msgstr ""

# 3f7ad1b9baab4e288a361378fe4e3199
#: ../../ref/django-admin.txt:1114
msgid "...would perform the following steps:"
msgstr ""

# 44cfa4ecaaac41dd93171b3efb1b411f
#: ../../ref/django-admin.txt:1116
msgid "Create a test database, as described in :doc:`/topics/testing`."
msgstr ""

# a4b6977f53dc4823a78c28a02818c347
#: ../../ref/django-admin.txt:1117
msgid ""
"Populate the test database with fixture data from the given fixtures. (For "
"more on fixtures, see the documentation for ``loaddata`` above.)"
msgstr ""

# 1852bad21e314e93b7154db378d9d641
#: ../../ref/django-admin.txt:1119
msgid ""
"Runs the Django development server (as in ``runserver``), pointed at this "
"newly created test database instead of your production database."
msgstr ""

# 8c9621ebc66f47bd87b0115d9207892b
#: ../../ref/django-admin.txt:1122
msgid "This is useful in a number of ways:"
msgstr ""

# 869c2ee005fc4adcb58f2f53ae6543cf
#: ../../ref/django-admin.txt:1124
msgid ""
"When you're writing :doc:`unit tests </topics/testing>` of how your views "
"act with certain fixture data, you can use ``testserver`` to interact with "
"the views in a Web browser, manually."
msgstr ""

# bd35f53ea245480689b9f1dd82ebbc70
#: ../../ref/django-admin.txt:1128
msgid ""
"Let's say you're developing your Django application and have a \"pristine\" "
"copy of a database that you'd like to interact with. You can dump your "
"database to a fixture (using the ``dumpdata`` command, explained above), "
"then use ``testserver`` to run your Web application with that data. With "
"this arrangement, you have the flexibility of messing up your data in any "
"way, knowing that whatever data changes you're making are only being made to "
"a test database."
msgstr ""

# 4c399cd1d20a4c9592dfba47c358e62b
#: ../../ref/django-admin.txt:1136
msgid ""
"Note that this server does *not* automatically detect changes to your Python "
"source code (as ``runserver`` does). It does, however, detect changes to "
"templates."
msgstr ""

# 5772f901bb7c4430afa0722508ce2d6f
#: ../../ref/django-admin.txt:1142
msgid ""
"Use ``--addrport`` to specify a different port, or IP address and port, from "
"the default of ``127.0.0.1:8000``. This value follows exactly the same "
"format and serves exactly the same function as the argument to the "
"``runserver`` command."
msgstr ""

# 5ce32fd5dcc64a7aa63d285fda59a096
#: ../../ref/django-admin.txt:1148
msgid ""
"To run the test server on port 7000 with ``fixture1`` and ``fixture2``::"
msgstr ""

# 374c02f389094534ad4063859f536610
#: ../../ref/django-admin.txt:1153
msgid ""
"(The above statements are equivalent. We include both of them to demonstrate "
"that it doesn't matter whether the options come before or after the fixture "
"arguments.)"
msgstr ""

# 993754d7d4ea4e77ab3fd5e53d1c7724
#: ../../ref/django-admin.txt:1157
msgid "To run on 1.2.3.4:7000 with a ``test`` fixture::"
msgstr ""

# d89f150757ed4a389e5bf484f5fa461a
#: ../../ref/django-admin.txt:1167
msgid "validate"
msgstr ""

# dd3410b37704490496179a1f58d00806
#: ../../ref/django-admin.txt:1171
msgid ""
"Validates all installed models (according to the :setting:`INSTALLED_APPS` "
"setting) and prints validation errors to standard output."
msgstr ""

# 1989684f0e1b46f29dc15156f6dc6191
#: ../../ref/django-admin.txt:1175
msgid "Commands provided by applications"
msgstr ""

# 8d46a694364d4c12ac9117d88a5828c9
#: ../../ref/django-admin.txt:1177
msgid ""
"Some commands are only available when the ``django.contrib`` application "
"that :doc:`implements </howto/custom-management-commands>` them has been :"
"setting:`enabled <INSTALLED_APPS>`. This section describes them grouped by "
"their application."
msgstr ""

# 58fc28be80324c5c8ec18f8c9906ab7f
#: ../../ref/django-admin.txt:1186
msgid "changepassword"
msgstr ""

# 6622d5f1c1804714905dd51f4ac247f8
# 348916f7f65c447b94e11f9bdcd28817
#: ../../ref/django-admin.txt:1192 ../../ref/django-admin.txt:1214
msgid ""
"This command is only available if Django's :doc:`authentication system </"
"topics/auth>` (``django.contrib.auth``) is installed."
msgstr ""

# efb3292fdbb948ef8a2fcc870545ec8b
#: ../../ref/django-admin.txt:1195
msgid ""
"Allows changing a user's password. It prompts you to enter twice the "
"password of the user given as parameter. If they both match, the new "
"password will be changed immediately. If you do not supply a user, the "
"command will attempt to change the password whose username matches the "
"current user."
msgstr ""

# 0fe8764b71bc449fa2a0ade458a73591
#: ../../ref/django-admin.txt:1202
msgid ""
"The ``--database`` option can be used to specify the database to query for "
"the user. If it is not supplied the ``default`` database will be used."
msgstr ""

# c576bba548fa42cf9d45ad3ab79eb65f
#: ../../ref/django-admin.txt:1210
msgid "createsuperuser"
msgstr ""

# e0372282afd540baa325ea910f83316f
#: ../../ref/django-admin.txt:1217
msgid ""
"Creates a superuser account (a user who has all permissions). This is useful "
"if you need to create an initial superuser account but did not do so during "
"``syncdb``, or if you need to programmatically generate superuser accounts "
"for your site(s)."
msgstr ""

# 9be494c6fc3f4ffea0712c3860e2164c
#: ../../ref/django-admin.txt:1222
msgid ""
"When run interactively, this command will prompt for a password for the new "
"superuser account. When run non-interactively, no password will be set, and "
"the superuser account will not be able to log in until a password has been "
"manually set for it."
msgstr ""

# 34bd97a5685c41a48ac3ad974e6c0692
#: ../../ref/django-admin.txt:1230
msgid ""
"The username and email address for the new account can be supplied by using "
"the ``--username`` and ``--email`` arguments on the command line. If either "
"of those is not supplied, ``createsuperuser`` will prompt for it when "
"running interactively."
msgstr ""

# 077a8a63348f4745a9b0f3f7bc88598f
#: ../../ref/django-admin.txt:1237
msgid ""
"The ``--database`` option can be used to specify the database into which the "
"superuser object will be saved."
msgstr ""

# 9cad15160b4d4f2e895338cb7442a207
#: ../../ref/django-admin.txt:1241
msgid "``django.contrib.gis``"
msgstr ""

# cfbd214c5e904b7fb49cd370700c03d1
#: ../../ref/django-admin.txt:1244
msgid "ogrinspect"
msgstr ""

# 78886230c3c2487c8aeb3415f9b169c7
#: ../../ref/django-admin.txt:1246
msgid ""
"This command is only available if :doc:`GeoDjango </ref/contrib/gis/index>` "
"(``django.contrib.gis``) is installed."
msgstr ""

# b5102f0379d24369919a704fbe942468
#: ../../ref/django-admin.txt:1249
msgid ""
"Please refer to its :djadmin:`description <ogrinspect>` in the GeoDjango "
"documentation."
msgstr ""

# c07c2d64011c494ba487862df93a63c4
#: ../../ref/django-admin.txt:1253
msgid "``django.contrib.sitemaps``"
msgstr ""

# ea9dc6e4fc13482cafd4041e57629fbf
#: ../../ref/django-admin.txt:1256
msgid "ping_google"
msgstr ""

# f94392771d274dc19e7ac7f7efeb403b
#: ../../ref/django-admin.txt:1258
msgid ""
"This command is only available if the :doc:`Sitemaps framework </ref/contrib/"
"sitemaps>` (``django.contrib.sitemaps``) is installed."
msgstr ""

# d5a3408d5ea0452e80c9e235163e6296
#: ../../ref/django-admin.txt:1261
msgid ""
"Please refer to its :djadmin:`description <ping_google>` in the Sitemaps "
"documentation."
msgstr ""

# 67e1187fdd8b429cb35f96285ebe3f67
#: ../../ref/django-admin.txt:1265
msgid "``django.contrib.staticfiles``"
msgstr ""

# 8b9ce7ab0e1744c68c18724d6069bbb6
# 59236f3c57e1488e8a1011c9e2409037
#: ../../ref/django-admin.txt:1270 ../../ref/django-admin.txt:1279
msgid ""
"This command is only available if the :doc:`static files application </howto/"
"static-files>` (``django.contrib.staticfiles``) is installed."
msgstr ""

# d308d20e6a56492cbbb1ea25d7221613
#: ../../ref/django-admin.txt:1273
msgid ""
"Please refer to its :djadmin:`description <collectstatic>` in the :doc:"
"`staticfiles </ref/contrib/staticfiles>` documentation."
msgstr ""

# b721be1f38ea463992bf82e89522c40b
#: ../../ref/django-admin.txt:1282
msgid ""
"Please refer to its :djadmin:`description <findstatic>` in the :doc:"
"`staticfiles </ref/contrib/staticfiles>` documentation."
msgstr ""

# 82e48634a7004e9ea236ec0faeda1d8b
#: ../../ref/django-admin.txt:1286
msgid "Default options"
msgstr ""

# 371dbe9c192049229c808df0b86bddd3
#: ../../ref/django-admin.txt:1288
msgid ""
"Although some commands may allow their own custom options, every command "
"allows for the following options:"
msgstr ""

# bb3a73a602d84220b0855377ca6c6045
#: ../../ref/django-admin.txt:1297
msgid ""
"Adds the given filesystem path to the Python `import search path`_. If this "
"isn't provided, ``django-admin.py`` will use the ``PYTHONPATH`` environment "
"variable."
msgstr ""

# a14b21bc877b4b34b48173afdb221bd1
#: ../../ref/django-admin.txt:1301
msgid ""
"Note that this option is unnecessary in ``manage.py``, because it takes care "
"of setting the Python path for you."
msgstr ""

# 55cf89422e1540b3a2f1c781dd4b1a2b
#: ../../ref/django-admin.txt:1312
msgid ""
"Explicitly specifies the settings module to use. The settings module should "
"be in Python package syntax, e.g. ``mysite.settings``. If this isn't "
"provided, ``django-admin.py`` will use the ``DJANGO_SETTINGS_MODULE`` "
"environment variable."
msgstr ""

# 3098a1f532e14006b16a1e604dbd35df
#: ../../ref/django-admin.txt:1317
msgid ""
"Note that this option is unnecessary in ``manage.py``, because it uses "
"``settings.py`` from the current project by default."
msgstr ""

# 30f31d714aba49d78c5af7270e434d8d
#: ../../ref/django-admin.txt:1326
msgid ""
"By default, ``django-admin.py`` will show a simple error message whenever an "
"error occurs. If you specify ``--traceback``, ``django-admin.py``  will "
"output a full stack trace whenever an exception is raised."
msgstr ""

# 4a4174d1303e467ca021bd308814db50
#: ../../ref/django-admin.txt:1336
msgid ""
"Use ``--verbosity`` to specify the amount of notification and debug "
"information that ``django-admin.py`` should print to the console."
msgstr ""

# 31d206d1937742898a11203659bdc452
#: ../../ref/django-admin.txt:1339
msgid "``0`` means no output."
msgstr ""

# 62e339c1579244a398c921e2e4da9b4d
#: ../../ref/django-admin.txt:1340
msgid "``1`` means normal output (default)."
msgstr ""

# e91314262ad34c91a8e8dc27b1bfbae3
#: ../../ref/django-admin.txt:1341
msgid "``2`` means verbose output."
msgstr ""

# 3f6bc2c9987d4335a79a6f08c6f982da
#: ../../ref/django-admin.txt:1342
msgid "``3`` means *very* verbose output."
msgstr ""

# 165f041f03424ef2ae2587206bab46ee
#: ../../ref/django-admin.txt:1345
msgid "Common options"
msgstr ""

# a716be2a391d47b2970faa1e2455cb9b
#: ../../ref/django-admin.txt:1347
msgid ""
"The following options are not available on every command, but they are "
"common to a number of commands."
msgstr ""

# c1a5a68a02ce4388835d0dcfd4f00efe
#: ../../ref/django-admin.txt:1354
msgid ""
"Used to specify the database on which a command will operate. If not "
"specified, this option will default to an alias of ``default``."
msgstr ""

# 2cc15181613e41a1b8805f535d1dedbe
#: ../../ref/django-admin.txt:1357
msgid "For example, to dump data from the database with the alias ``master``::"
msgstr ""

# 7c2538790ed44cb0a3c88dd84bdd32c6
#: ../../ref/django-admin.txt:1363
msgid ""
"Exclude a specific application from the applications whose contents is "
"output. For example, to specifically exclude the `auth` application from the "
"output of dumpdata, you would call::"
msgstr ""

# a7aecdb304c44ea1ba2e330d9dfefd49
#: ../../ref/django-admin.txt:1369
msgid ""
"If you want to exclude multiple applications, use multiple ``--exclude`` "
"directives::"
msgstr ""

# 5123021c102e4f67a5fc9062d8a27226
#: ../../ref/django-admin.txt:1376
msgid ""
"Use the ``--locale`` or ``-l`` option to specify the locale to process. If "
"not provided all locales are processed."
msgstr ""

# df1122657efc4003888562533519d847
#: ../../ref/django-admin.txt:1381
msgid ""
"Use the ``--noinput`` option to suppress all user prompting, such as \"Are "
"you sure?\" confirmation messages. This is useful if ``django-admin.py`` is "
"being executed as an unattended, automated script."
msgstr ""

# d2259539589b4bd09ad6325eb6d989f4
#: ../../ref/django-admin.txt:1386
msgid "Extra niceties"
msgstr ""

# 95362b5bf3ae4675b07d7bac20ef0bdb
#: ../../ref/django-admin.txt:1391
msgid "Syntax coloring"
msgstr ""

# 772cdaf734d84a498d626fee8df2f430
#: ../../ref/django-admin.txt:1393
msgid ""
"The ``django-admin.py`` / ``manage.py`` commands will use pretty color-coded "
"output if your terminal supports ANSI-colored output. It won't use the color "
"codes if you're piping the command's output to another program."
msgstr ""

# 209a27a6cd39490ebd45e1438cc5e123
#: ../../ref/django-admin.txt:1398
msgid ""
"The colors used for syntax highlighting can be customized. Django ships with "
"three color palettes:"
msgstr ""

# a491b3db7189461ba1214e83f601a7a2
#: ../../ref/django-admin.txt:1401
msgid ""
"``dark``, suited to terminals that show white text on a black background. "
"This is the default palette."
msgstr ""

# 97434c003433415b967bcf86b2d22e1c
#: ../../ref/django-admin.txt:1404
msgid ""
"``light``, suited to terminals that show black text on a white background."
msgstr ""

# c7ea0e8a95334f75ba6e76bf77f1ae17
#: ../../ref/django-admin.txt:1407
msgid "``nocolor``, which disables syntax highlighting."
msgstr ""

# acfee13a50de4ffea303c14d01a6df00
#: ../../ref/django-admin.txt:1409
msgid ""
"You select a palette by setting a ``DJANGO_COLORS`` environment variable to "
"specify the palette you want to use. For example, to specify the ``light`` "
"palette under a Unix or OS/X BASH shell, you would run the following at a "
"command prompt::"
msgstr ""

# 2858eee5e9fd4a33b15ef3226a7594a4
#: ../../ref/django-admin.txt:1416
msgid ""
"You can also customize the colors that are used. Django specifies a number "
"of roles in which color is used:"
msgstr ""

# c8661707bbb34024b6d31eda64cbc977
#: ../../ref/django-admin.txt:1419
msgid "``error`` - A major error."
msgstr ""

# d697486043ff43989d72606cf560d8ac
#: ../../ref/django-admin.txt:1420
msgid "``notice`` - A minor error."
msgstr ""

# 8fadb1abbc12426aaa0cf1d2cdbc9f29
#: ../../ref/django-admin.txt:1421
msgid "``sql_field`` - The name of a model field in SQL."
msgstr ""

# 5c525e9ade6644f79a33f0d50290ecd5
#: ../../ref/django-admin.txt:1422
msgid "``sql_coltype`` - The type of a model field in SQL."
msgstr ""

# 891b9d52807b4e93abb53140c2d82a07
#: ../../ref/django-admin.txt:1423
msgid "``sql_keyword`` - A SQL keyword."
msgstr ""

# 93a2bda1231f4c249c985593fa1f75af
#: ../../ref/django-admin.txt:1424
msgid "``sql_table`` - The name of a model in SQL."
msgstr ""

# d2e7a0cc7a684088a2e5030a66d2195e
#: ../../ref/django-admin.txt:1425
msgid "``http_info`` - A 1XX HTTP Informational server response."
msgstr ""

# d52eba69bca548a6bfc61018135bbc01
#: ../../ref/django-admin.txt:1426
msgid "``http_success`` - A 2XX HTTP Success server response."
msgstr ""

# 7fd3fd959554448bae960d2e8b6f9dfb
#: ../../ref/django-admin.txt:1427
msgid "``http_not_modified`` - A 304 HTTP Not Modified server response."
msgstr ""

# 7e1c3c5c2e5f4029a9f1e494c69d0937
#: ../../ref/django-admin.txt:1428
msgid "``http_redirect`` - A 3XX HTTP Redirect server response other than 304."
msgstr ""

# e825d6167af1403bb15738cdd073eb54
#: ../../ref/django-admin.txt:1429
msgid "``http_not_found`` - A 404 HTTP Not Found server response."
msgstr ""

# 80210ad9dc4c4933bd48c6cb4113d408
#: ../../ref/django-admin.txt:1430
msgid ""
"``http_bad_request`` - A 4XX HTTP Bad Request server response other than 404."
msgstr ""

# 058bfe3fd4c74971a527d62315548d9a
#: ../../ref/django-admin.txt:1431
msgid "``http_server_error`` - A 5XX HTTP Server Error response."
msgstr ""

# 5783f4af44d841f1b2190b6789177841
#: ../../ref/django-admin.txt:1433
msgid ""
"Each of these roles can be assigned a specific foreground and background "
"color, from the following list:"
msgstr ""

# 3c030187ce7141689a1ad33868a9d5dc
#: ../../ref/django-admin.txt:1436
msgid "``black``"
msgstr ""

# a5a6a501b93d49ed819da20cabda0d3f
#: ../../ref/django-admin.txt:1437
msgid "``red``"
msgstr ""

# 9259ebe490604a3395b39352ca3e4648
#: ../../ref/django-admin.txt:1438
msgid "``green``"
msgstr ""

# ddd7098cc747454089f6e1769b7ea6c9
#: ../../ref/django-admin.txt:1439
msgid "``yellow``"
msgstr ""

# e3f4518b02e34c16a26c4d6859088d5c
#: ../../ref/django-admin.txt:1440
msgid "``blue``"
msgstr ""

# 7200b1529c6c476f99d2dc939c13fd38
#: ../../ref/django-admin.txt:1441
msgid "``magenta``"
msgstr ""

# 45237485c75f40bc87ac01eb52c7e312
#: ../../ref/django-admin.txt:1442
msgid "``cyan``"
msgstr ""

# 714b5a9830ca4439982ab92fa2709ffe
#: ../../ref/django-admin.txt:1443
msgid "``white``"
msgstr ""

# d16eea5f15034409857ad8bbb984e2f5
#: ../../ref/django-admin.txt:1445
msgid ""
"Each of these colors can then be modified by using the following display "
"options:"
msgstr ""

# 5f42fac3d5a34598927e02b749c423b5
#: ../../ref/django-admin.txt:1448
msgid "``bold``"
msgstr ""

# 173354154c6a4739bc7e0a534397c688
#: ../../ref/django-admin.txt:1449
msgid "``underscore``"
msgstr ""

# 5a2b20636ed845c293e5c1cae77d9bf2
#: ../../ref/django-admin.txt:1450
msgid "``blink``"
msgstr ""

# f485f651527942b1a2b775f9888c9562
# b7d279ef79d443d2a5416aee5810f8ed
# bb61dcbdd3114236a1700f449df83c70
#: ../../ref/django-admin.txt:1451 ../../ref/signals.txt:297
#: ../../ref/signals.txt:323
msgid "``reverse``"
msgstr ""

# 34fa65ecee9247d5ad3ce49fc7cecd86
#: ../../ref/django-admin.txt:1452
msgid "``conceal``"
msgstr ""

# 5fcf10fcc28f4e62a1b469eac07fa516
#: ../../ref/django-admin.txt:1454
msgid "A color specification follows one of the following patterns:"
msgstr ""

# 8804ac746eba4102b0ccdff851aed5bf
#: ../../ref/django-admin.txt:1456
msgid "``role=fg``"
msgstr ""

# 7648d65f387c438b845a9907bf570dbb
#: ../../ref/django-admin.txt:1457
msgid "``role=fg/bg``"
msgstr ""

# 6d1f3ec1a2384f44a3a34979e1e3ecfc
#: ../../ref/django-admin.txt:1458
msgid "``role=fg,option,option``"
msgstr ""

# a5f7f198056f4b41b0ac9fc44220fdb7
#: ../../ref/django-admin.txt:1459
msgid "``role=fg/bg,option,option``"
msgstr ""

# 6011909e3b4149e4a256261c9aabd6a4
#: ../../ref/django-admin.txt:1461
msgid ""
"where ``role`` is the name of a valid color role, ``fg`` is the foreground "
"color, ``bg`` is the background color and each ``option`` is one of the "
"color modifying options. Multiple color specifications are then separated by "
"semicolon. For example::"
msgstr ""

# 4a1838c06f57404da4a952d5f5328bb4
#: ../../ref/django-admin.txt:1468
msgid ""
"would specify that errors be displayed using blinking yellow on blue, and "
"notices displayed using magenta. All other color roles would be left "
"uncolored."
msgstr ""

# 0dfddffcb6bd4c84a56efaab657bb80e
#: ../../ref/django-admin.txt:1472
msgid ""
"Colors can also be specified by extending a base palette. If you put a "
"palette name in a color specification, all the colors implied by that "
"palette will be loaded. So::"
msgstr ""

# 0201cd20b9634b6db002b16871b8d031
#: ../../ref/django-admin.txt:1478
msgid ""
"would specify the use of all the colors in the light color palette, *except* "
"for the colors for errors and notices which would be overridden as specified."
msgstr ""

# ed132fcfd9974f1aa97a4f49fafd99ba
#: ../../ref/django-admin.txt:1483
msgid "Bash completion"
msgstr ""

# ea477fb6c66a40258adc9005a839fdbd
#: ../../ref/django-admin.txt:1485
msgid ""
"If you use the Bash shell, consider installing the Django bash completion "
"script, which lives in ``extras/django_bash_completion`` in the Django "
"distribution. It enables tab-completion of ``django-admin.py`` and ``manage."
"py`` commands, so you can, for instance..."
msgstr ""

# c43ef0ee190b4f949045b846e1c260fa
#: ../../ref/django-admin.txt:1490
msgid "Type ``django-admin.py``."
msgstr ""

# 1ff53d6735d74e33a06d778b99fd171e
#: ../../ref/django-admin.txt:1491
msgid "Press [TAB] to see all available options."
msgstr ""

# 86ffe43a079d42e0a23f6d537449302b
#: ../../ref/django-admin.txt:1492
msgid ""
"Type ``sql``, then [TAB], to see all available options whose names start "
"with ``sql``."
msgstr ""

# dff776845cfa4a9688759b3f786ca7db
#: ../../ref/django-admin.txt:1496
msgid ""
"See :doc:`/howto/custom-management-commands` for how to add customized "
"actions."
msgstr ""

# a01306e6ecd947549bea501223ff398a
#: ../../ref/django-admin.txt:1501
msgid "Running management commands from your code"
msgstr ""

# 55f7327c1c4c4684978f1a19715efd8c
#: ../../ref/django-admin.txt:1507
msgid "To call a management command from code use ``call_command``."
msgstr ""

# 6ba2ca366cad40a5b202095044f6fccc
#: ../../ref/django-admin.txt:1510
msgid "the name of the command to call."
msgstr ""

# 36fa6be029df4f019f30f47fe0a6cbb0
#: ../../ref/django-admin.txt:1513
msgid "a list of arguments accepted by the command."
msgstr ""

# 117a4a7d9ae64ae99c0a5cdf377c2826
#: ../../ref/django-admin.txt:1516
msgid "named options accepted on the command-line."
msgstr ""

# 761b35b4011b43368450090a4d49d452
# f4b1583daedb41b58c585f9f2348aad2
# 480b29226ca840d3a54347199afdc61f
# 666d7b44d035491595bd5dbe9faedf3a
# 2e00bd0aa4c3492ab3d9676b8bba17bf
#: ../../ref/django-admin.txt:1518 ../../ref/models/querysets.txt:401
#: ../../ref/models/querysets.txt:580 ../../ref/models/querysets.txt:609
#: ../../ref/models/querysets.txt:1657
msgid "Examples::"
msgstr ""

# f9064340ea3b44588f2f9565d61103e7
#: ../../ref/exceptions.txt:3
msgid "Django Exceptions"
msgstr ""

# f9ce2023f5ae4a2fb6a49e648f18930a
#: ../../ref/exceptions.txt:6
msgid ""
"Django raises some Django specific exceptions as well as many standard "
"Python exceptions."
msgstr ""

# 234ed4d3b9da412f86c3844298c91569
#: ../../ref/exceptions.txt:10
msgid "Django-specific Exceptions"
msgstr ""

# 3ce081723db54e47a5341d7e57141e37
#: ../../ref/exceptions.txt:16
msgid "ObjectDoesNotExist and DoesNotExist"
msgstr ""

# 66e95ab86ee946f89d61e5c79faf140d
#: ../../ref/exceptions.txt:20
msgid ""
"The :exc:`DoesNotExist` exception is raised when an object is not found for "
"the given parameters of a query."
msgstr ""

# fba914a0381147c49bdd64430936c258
#: ../../ref/exceptions.txt:23
msgid ""
":exc:`ObjectDoesNotExist` is defined in :mod:`django.core.exceptions`. :exc:"
"`DoesNotExist` is a subclass of the base :exc:`ObjectDoesNotExist` exception "
"that is provided on every model class as a way of identifying the specific "
"type of object that could not be found."
msgstr ""

# 3548cf1797604c8582d0b2242951882f
#: ../../ref/exceptions.txt:28
msgid ""
"See :meth:`~django.db.models.query.QuerySet.get()` for further information "
"on :exc:`ObjectDoesNotExist` and :exc:`DoesNotExist`."
msgstr ""

# dfea5a23d51f4ab0a90af72c926b9884
#: ../../ref/exceptions.txt:32
msgid "MultipleObjectsReturned"
msgstr ""

# 0aee3e0b88be4a16b43b3387f108b002
#: ../../ref/exceptions.txt:35
msgid ""
"The :exc:`MultipleObjectsReturned` exception is raised by a query if only "
"one object is expected, but multiple objects are returned. A base version of "
"this exception is provided in :mod:`django.core.exceptions`; each model "
"class contains a subclassed version that can be used to identify the "
"specific object type that has returned multiple objects."
msgstr ""

# 611ff9ac7aaf4b7ab90b99273242fef0
#: ../../ref/exceptions.txt:41
msgid ""
"See :meth:`~django.db.models.query.QuerySet.get()` for further information."
msgstr ""

# f02d3c14b1e5488e9614fa5d93e92c07
#: ../../ref/exceptions.txt:44
msgid "SuspiciousOperation"
msgstr ""

# 78ff7c11d11b45788fa0c926af767628
#: ../../ref/exceptions.txt:47
msgid ""
"The :exc:`SuspiciousOperation` exception is raised when a user has performed "
"an operation that should be considered suspicious from a security "
"perspective, such as tampering with a session cookie."
msgstr ""

# 0dc4912095ad41459118bb6ef40c176f
#: ../../ref/exceptions.txt:52
msgid "PermissionDenied"
msgstr ""

# 92602e0e9e7b4a799307d685d12cfead
#: ../../ref/exceptions.txt:55
msgid ""
"The :exc:`PermissionDenied` exception is raised when a user does not have "
"permission to perform the action requested."
msgstr ""

# 4ac3514c3af440f3af0196ac9719cc17
#: ../../ref/exceptions.txt:59
msgid "ViewDoesNotExist"
msgstr ""

# fb6c4dfe46f94a53bcd4ee81d4e07660
#: ../../ref/exceptions.txt:62
msgid ""
"The :exc:`ViewDoesNotExist` exception is raised by :mod:`django.core."
"urlresolvers` when a requested view does not exist."
msgstr ""

# e212c0305170436eb322874130123d1a
#: ../../ref/exceptions.txt:66
msgid "MiddlewareNotUsed"
msgstr ""

# 0f2d4273524e499e903fed898f1ebd89
#: ../../ref/exceptions.txt:69
msgid ""
"The :exc:`MiddlewareNotUsed` exception is raised when a middleware is not "
"used in the server configuration."
msgstr ""

# 22805aeeb7e54a96a73110f42d5c790c
#: ../../ref/exceptions.txt:73
msgid "ImproperlyConfigured"
msgstr ""

# a0b922aef0734a38bb81a7fdfd38db51
#: ../../ref/exceptions.txt:76
msgid ""
"The :exc:`ImproperlyConfigured` exception is raised when Django is somehow "
"improperly configured -- for example, if a value in ``settings.py`` is "
"incorrect or unparseable."
msgstr ""

# c2178a5debac4722bdbbba356fba104e
#: ../../ref/exceptions.txt:81
msgid "FieldError"
msgstr ""

# 594fc23ba5774dc7bcda8020d1d0aa6a
#: ../../ref/exceptions.txt:84
msgid ""
"The :exc:`FieldError` exception is raised when there is a problem with a "
"model field. This can happen for several reasons:"
msgstr ""

# 9a112a94f2714b08af9d9d203cbdbad0
#: ../../ref/exceptions.txt:87
msgid ""
"A field in a model clashes with a field of the same name from an abstract "
"base class"
msgstr ""

# 903244324a7a4eebb0faaa89363b1f68
#: ../../ref/exceptions.txt:89
msgid "An infinite loop is caused by ordering"
msgstr ""

# 9f0511ffbeeb4139a495a70d9083ac00
#: ../../ref/exceptions.txt:90
msgid "A keyword cannot be parsed from the filter parameters"
msgstr ""

# aa17fde61ffe41559b289b0f8ed75599
#: ../../ref/exceptions.txt:91
msgid "A field cannot be determined from a keyword in the query parameters"
msgstr ""

# 5f63f96a767e46b88ff1cddaa433884e
#: ../../ref/exceptions.txt:93
msgid "A join is not permitted on the specified field"
msgstr ""

# 0a7238c9a5a84c488e800c8987e89aaa
#: ../../ref/exceptions.txt:94
msgid "A field name is invalid"
msgstr ""

# e0161b80c7274607bc0e022f3fc99c8c
#: ../../ref/exceptions.txt:95
msgid "A query contains invalid order_by arguments"
msgstr ""

# 4dcdbb2680ef4c02ba95e13b06d5b259
#: ../../ref/exceptions.txt:98
msgid "ValidationError"
msgstr ""

# c546b7dd54794a6dabe807be709ffef4
#: ../../ref/exceptions.txt:101
msgid ""
"The :exc:`ValidationError` exception is raised when data fails form or model "
"field validation. For more information about validation, see :doc:`Form and "
"Field Validation </ref/forms/validation>`, :ref:`Model Field Validation "
"<validating-objects>` and the :doc:`Validator Reference </ref/validators>`."
msgstr ""

# 06c4f9163af541ba85414f22be27911d
#: ../../ref/exceptions.txt:110
msgid "NoReverseMatch"
msgstr ""

# 69534911ecdb49ce90de417239173862
#: ../../ref/exceptions.txt:113
msgid ""
"The :exc:`NoReverseMatch` exception is raised by :mod:`django.core."
"urlresolvers` when a matching URL in your URLconf cannot be identified based "
"on the parameters supplied."
msgstr ""

# d68c0298bb374628bedfc78d6637225a
#: ../../ref/exceptions.txt:120
msgid "Database Exceptions"
msgstr ""

# 3efdc92fa53e4465a3fd90ce45760aac
#: ../../ref/exceptions.txt:122
msgid ""
"Django wraps the standard database exceptions :exc:`DatabaseError` and :exc:"
"`IntegrityError` so that your Django code has a guaranteed common "
"implementation of these classes. These database exceptions are provided in :"
"mod:`django.db`."
msgstr ""

# b1890a95b0684f20914520629a515ff9
#: ../../ref/exceptions.txt:130
msgid ""
"The Django wrappers for database exceptions behave exactly the same as the "
"underlying database exceptions. See :pep:`249`, the Python Database API "
"Specification v2.0, for further information."
msgstr ""

# 7e081cd1bd434462836129ac5ffe53a3
#: ../../ref/exceptions.txt:137
msgid "Transaction Exceptions"
msgstr ""

# d8c471a76ab84259804abb17ac294752
#: ../../ref/exceptions.txt:141
msgid ""
"The :exc:`TransactionManagementError` is raised for any and all problems "
"related to database transactions. It is available from :mod:`django.db."
"transaction`."
msgstr ""

# 8271de3939e844be9bff7200ffb4e0ab
#: ../../ref/exceptions.txt:146
msgid "Python Exceptions"
msgstr ""

# b542d831275047f9830151d1dcaee0d2
#: ../../ref/exceptions.txt:148
msgid ""
"Django raises built-in Python exceptions when appropriate as well. See the "
"Python documentation for further information on the built-in :mod:"
"`exceptions`."
msgstr ""

# d40c6f6e18e34021aafe956461c5d40e
#: ../../ref/files/file.txt:2
msgid "The ``File`` object"
msgstr ""

# 91b0334dc68e4bac989b74143fd423af
#: ../../ref/files/file.txt:4
msgid ""
"The :mod:`django.core.files` module and its submodules contain built-in "
"classes for basic file handling in Django."
msgstr ""

# 61033b37f13a449fad32dadd9a13bc16
#: ../../ref/files/file.txt:10
msgid "The ``File`` Class"
msgstr ""

# 11cda9ddf79a46d1bc2b39bca0f98ca1
#: ../../ref/files/file.txt:14
msgid ""
"The :class:`File` is a thin wrapper around Python's built-in file object "
"with some Django-specific additions. Internally, Django uses this class any "
"time it needs to represent a file."
msgstr ""

# e3315774d9c64c3cb5b3d307f36a516f
#: ../../ref/files/file.txt:18
msgid ":class:`File` objects have the following attributes and methods:"
msgstr ""

# d0e10a97841e45b6a5bf022f76c2acf0
#: ../../ref/files/file.txt:22
msgid ""
"The name of file including the relative path from :setting:`MEDIA_ROOT`."
msgstr ""

# 6f8a638ee3ad4c50ae7e93d78252426e
#: ../../ref/files/file.txt:27
msgid "The size of the file in bytes."
msgstr ""

# 1c7ee0b9120a48a28a874e89f3a42f95
#: ../../ref/files/file.txt:31
msgid ""
"The underlying Python ``file`` object passed to :class:`~django.core.files."
"File`."
msgstr ""

# f6559d43a361418fa66178569b3593cf
#: ../../ref/files/file.txt:36
msgid "The read/write mode for the file."
msgstr ""

# 2b8852a8b5c64969ae9283d7cd904302
#: ../../ref/files/file.txt:40
msgid ""
"Open or reopen the file (which by definition also does ``File.seek(0)``). "
"The ``mode`` argument allows the same values as Python's standard ``open()``."
msgstr ""

# 57170cace0fd40f6ba0dcd9f2f410893
#: ../../ref/files/file.txt:44
msgid ""
"When reopening a file, ``mode`` will override whatever mode the file was "
"originally opened with; ``None`` means to reopen with the original mode."
msgstr ""

# 1b441d8a29764adfa814ebc28a3468f7
#: ../../ref/files/file.txt:50
msgid ""
"Read content from the file. The optional ``size`` is the number of bytes to "
"read; if not specified, the file will be read to the end."
msgstr ""

# 6bf58c8fd0fe49ee81987a7c7e231667
#: ../../ref/files/file.txt:55
msgid "Iterate over the file yielding one line at a time."
msgstr ""

# 4d59676fbd234433a88cac1916ca4ff1
#: ../../ref/files/file.txt:59
msgid ""
"Iterate over the file yielding \"chunks\" of a given size. ``chunk_size`` "
"defaults to 64 KB."
msgstr ""

# 091cd275c7fc46cd80bf5e785a6d8032
#: ../../ref/files/file.txt:62
msgid ""
"This is especially useful with very large files since it allows them to be "
"streamed off disk and avoids storing the whole file in memory."
msgstr ""

# 7d2c5973fb89406cb973f3049547e374
#: ../../ref/files/file.txt:67
msgid ""
"Returns ``True`` if the file is large enough to require multiple chunks to "
"access all of its content give some ``chunk_size``."
msgstr ""

# e58e8a5e43a643418b667fc1561f0618
#: ../../ref/files/file.txt:72
msgid ""
"Writes the specified content string to the file. Depending on the storage "
"system behind the scenes, this content might not be fully committed until "
"``close()`` is called on the file."
msgstr ""

# c80eb5eab63048a8aa936de5b7ab2111
#: ../../ref/files/file.txt:78
msgid "Close the file."
msgstr ""

# 8961204141df4ebe96d62948e77ff3b8
#: ../../ref/files/file.txt:80
msgid ""
"In addition to the listed methods, :class:`~django.core.files.File` exposes "
"the following attributes and methods of the underlying ``file`` object: "
"``encoding``, ``fileno``, ``flush``, ``isatty``, ``newlines``, ``read``, "
"``readinto``, ``readlines``, ``seek``, ``softspace``, ``tell``, "
"``truncate``, ``writelines``, ``xreadlines``."
msgstr ""

# 1d41b3c5cad04996a8c1296ddb92058f
#: ../../ref/files/file.txt:89
msgid "The ``ContentFile`` Class"
msgstr ""

# 965a76dfe5304e17b9fa926b224500fd
#: ../../ref/files/file.txt:93
msgid ""
"The ``ContentFile`` class inherits from :class:`~django.core.files.File`, "
"but unlike :class:`~django.core.files.File` it operates on string content, "
"rather than an actual file. For example::"
msgstr ""

# ebf03197f1624e1c8517f58c27906e9a
#: ../../ref/files/file.txt:105
msgid "The ``ImageFile`` Class"
msgstr ""

# fc8cb159f1ed4baf8acecc3097892fc9
#: ../../ref/files/file.txt:109
msgid ""
"Django provides a built-in class specifically for images. :class:`django."
"core.files.images.ImageFile` inherits all the attributes and methods of :"
"class:`~django.core.files.File`, and additionally provides the following:"
msgstr ""

# 4f4b35a1a5a64a9dac049df105d935ee
#: ../../ref/files/file.txt:116
msgid "Width of the image in pixels."
msgstr ""

# ef33b2b7c6b14473b66440e0c77a0d3a
#: ../../ref/files/file.txt:120
msgid "Height of the image in pixels."
msgstr ""

# e5654af54818431399695f6b2993ea3a
#: ../../ref/files/file.txt:125
msgid "Additional methods on files attached to objects"
msgstr ""

# 73dfffaf1da6419ca0376cdfdd350d7d
#: ../../ref/files/file.txt:127
msgid ""
"Any :class:`File` that's associated with an object (as with ``Car.photo``, "
"below) will also have a couple of extra methods:"
msgstr ""

# 924c9df73bc74b118035d6d010d22ef3
#: ../../ref/files/file.txt:132
msgid ""
"Saves a new file with the file name and contents provided. This will not "
"replace the existing file, but will create a new file and update the object "
"to point to it. If ``save`` is ``True``, the model's ``save()`` method will "
"be called once the file is saved. That is, these two lines::"
msgstr ""

# fdab4fe941b9427f8a3a5551f814b26f
#: ../../ref/files/file.txt:140
msgid "are the same as this one line::"
msgstr ""

# ac2b4dc9f0f544f7bf4a72f69c007156
#: ../../ref/files/file.txt:144
msgid ""
"Note that the ``content`` argument must be an instance of either :class:"
"`File` or of a subclass of :class:`File`, such as :class:`ContentFile`."
msgstr ""

# b229a99ee88f4560806f8afbbc91fbbe
#: ../../ref/files/file.txt:150
msgid ""
"Removes the file from the model instance and deletes the underlying file. If "
"``save`` is ``True``, the model's ``save()`` method will be called once the "
"file is deleted."
msgstr ""

# ca1e022b58e24bd4b8de22b65453a61b
#: ../../ref/files/index.txt:3
msgid "File handling"
msgstr ""

# 7fbdafff1bb04bb4a20f1e681032b389
#: ../../ref/files/storage.txt:2
msgid "File storage API"
msgstr ""

# fed4f2c4b4ed4287af1ffa2e79e02caf
#: ../../ref/files/storage.txt:7
msgid "Getting the current storage class"
msgstr ""

# 8b72e3040ca946d2be9d3bf61ed5f008
#: ../../ref/files/storage.txt:9
msgid ""
"Django provides two convenient ways to access the current storage class:"
msgstr ""

# 56fa686479cb4cc5b9e155d8da449e40
#: ../../ref/files/storage.txt:13
msgid ""
":class:`~django.core.files.storage.DefaultStorage` provides lazy access to "
"the current default storage system as defined by :setting:"
"`DEFAULT_FILE_STORAGE`. :class:`DefaultStorage` uses :func:`~django.core."
"files.storage.get_storage_class` internally."
msgstr ""

# 0b7090aafc324d9a992bda9f4b93513d
#: ../../ref/files/storage.txt:20
msgid "Returns a class or module which implements the storage API."
msgstr ""

# 6eb33cd1953f456bbd10281fdf4aacaa
#: ../../ref/files/storage.txt:22
msgid ""
"When called without the ``import_path`` parameter ``get_storage_class`` will "
"return the current default storage system as defined by :setting:"
"`DEFAULT_FILE_STORAGE`. If ``import_path`` is provided, "
"``get_storage_class`` will attempt to import the class or module from the "
"given path and will return it if successful. An exception will be raised if "
"the import is unsuccessful."
msgstr ""

# 2272e120f42849399baf8d1ae63e8a7d
#: ../../ref/files/storage.txt:30
msgid "The FileSystemStorage Class"
msgstr ""

# b3a90cfd0eff45cdbf3febe2a97a2f8d
#: ../../ref/files/storage.txt:34
msgid ""
"The :class:`~django.core.files.storage.FileSystemStorage` class implements "
"basic file storage on a local filesystem. It inherits from :class:`~django."
"core.files.storage.Storage` and provides implementations for all the public "
"methods thereof."
msgstr ""

# d2b84a475a4748f4875db14b37597a0f
#: ../../ref/files/storage.txt:41
msgid ""
"The :class:`FileSystemStorage.delete` method will not raise raise an "
"exception if the given file name does not exist."
msgstr ""

# da4d0e4dbec54a748092b1804ff21938
#: ../../ref/files/storage.txt:45
msgid "The Storage Class"
msgstr ""

# 5f4118aea997450f8b872996345e53bb
#: ../../ref/files/storage.txt:49
msgid ""
"The :class:`~django.core.files.storage.Storage` class provides a "
"standardized API for storing files, along with a set of default behaviors "
"that all other storage systems can inherit or override as necessary."
msgstr ""

# ac6a9af0b36a446f8b7fc9865318bf32
#: ../../ref/files/storage.txt:58
msgid ""
"Returns a ``datetime`` object containing the last accessed time of the file. "
"For storage systems that aren't able to return the last accessed time this "
"will raise ``NotImplementedError`` instead."
msgstr ""

# f95fce500e334dd2bbb653addf8a6984
#: ../../ref/files/storage.txt:66
msgid ""
"Returns a ``datetime`` object containing the creation time of the file. For "
"storage systems that aren't able to return the creation time this will raise "
"``NotImplementedError`` instead."
msgstr ""

# 91bf37d344754176b2693345413ee128
#: ../../ref/files/storage.txt:72
msgid ""
"Deletes the file referenced by ``name``. If deletion is not supported on the "
"targest storage system this will raise ``NotImplementedError`` instead"
msgstr ""

# 363031ad34c949a080d647bbca47ff8a
#: ../../ref/files/storage.txt:78
msgid ""
"Returns ``True`` if a file referenced by the given name already exists in "
"the storage system, or ``False`` if the name is available for a new file."
msgstr ""

# 8e61c1b5f4914ad395e35cd42bdd7ea2
#: ../../ref/files/storage.txt:84
msgid ""
"Returns a filename based on the ``name`` parameter that's free and available "
"for new content to be written to on the target storage system."
msgstr ""

# da72763793e040548aad1f6a267d80b3
#: ../../ref/files/storage.txt:91
msgid ""
"Returns a filename based on the ``name`` parameter that's suitable for use "
"on the target storage system."
msgstr ""

# 221273c12fc64029ab2aa4addf9e7d83
#: ../../ref/files/storage.txt:96
msgid ""
"Lists the contents of the specified path, returning a 2-tuple of lists; the "
"first item being directories, the second item being files. For storage "
"systems that aren't able to provide such a listing, this will raise a "
"``NotImplementedError`` instead."
msgstr ""

# d194896798ed4f1482118f67569ea8a4
#: ../../ref/files/storage.txt:105
msgid ""
"Returns a ``datetime`` object containing the last modified time. For storage "
"systems that aren't able to return the last modified time, this will raise "
"``NotImplementedError`` instead."
msgstr ""

# afeaeb66a5fe4c14a46c4c0d98cda3b2
#: ../../ref/files/storage.txt:111
msgid ""
"Opens the file given by ``name``. Note that although the returned file is "
"guaranteed to be a ``File`` object, it might actually be some subclass. In "
"the case of remote file storage this means that reading/writing could be "
"quite slow, so be warned."
msgstr ""

# c9fa4b8a13d64b7db1f9a88556983d94
#: ../../ref/files/storage.txt:118
msgid ""
"The local filesystem path where the file can be opened using Python's "
"standard ``open()``. For storage systems that aren't accessible from the "
"local filesystem, this will raise ``NotImplementedError`` instead."
msgstr ""

# d0ab918bf34d4a52aafd4b31c6d4e4e4
#: ../../ref/files/storage.txt:124
msgid ""
"Saves a new file using the storage system, preferably with the name "
"specified. If there already exists a file with this name ``name``, the "
"storage system may modify the filename as necessary to get a unique name. "
"The actual name of the stored file will be returned."
msgstr ""

# ff220a9056f04d18b75802177bd9b19a
#: ../../ref/files/storage.txt:129
msgid ""
"The ``content`` argument must be an instance of :class:`django.core.files."
"File` or of a subclass of :class:`~django.core.files.File`."
msgstr ""

# 4957057b8b394c80aaab7f26fa81b5da
#: ../../ref/files/storage.txt:135
msgid ""
"Returns the total size, in bytes, of the file referenced by ``name``. For "
"storage systems that aren't able to return the file size this will raise "
"``NotImplementedError`` instead."
msgstr ""

# 6ed6406c1fdc4c0daed71db5d4519bbd
#: ../../ref/files/storage.txt:141
msgid ""
"Returns the URL where the contents of the file referenced by ``name`` can be "
"accessed. For storage systems that don't support access by URL this will "
"raise ``NotImplementedError`` instead."
msgstr ""

# a2d88b2a1bb348ecb97c7bf29733c903
#: ../../ref/forms/api.txt:3
msgid "The Forms API"
msgstr ""

# 436b4f6557584ed2824de1b9d93e7647
#: ../../ref/forms/api.txt:11
msgid ""
"This document covers the gritty details of Django's forms API. You should "
"read the :doc:`introduction to working with forms </topics/forms/index>` "
"first."
msgstr ""

# 7ea09783c7c04853827a058e554f0298
#: ../../ref/forms/api.txt:18
msgid "Bound and unbound forms"
msgstr ""

# 6fccbd5d830a4235abc5ddb655148f43
#: ../../ref/forms/api.txt:20
msgid ""
"A :class:`Form` instance is either **bound** to a set of data, or "
"**unbound**."
msgstr ""

# 37ee48ef5821464da9fc11fd41b1b822
#: ../../ref/forms/api.txt:22
msgid ""
"If it's **bound** to a set of data, it's capable of validating that data and "
"rendering the form as HTML with the data displayed in the HTML."
msgstr ""

# 6dd9b3378a274382a46fa698a5138dd7
#: ../../ref/forms/api.txt:25
msgid ""
"If it's **unbound**, it cannot do validation (because there's no data to "
"validate!), but it can still render the blank form as HTML."
msgstr ""

# 7b3cfa09982846c8959894dfe2f3a169
#: ../../ref/forms/api.txt:30
msgid ""
"To create an unbound :class:`Form` instance, simply instantiate the class::"
msgstr ""

# 2891902e50a34f2b84acb53d84a8e09f
#: ../../ref/forms/api.txt:34
msgid ""
"To bind data to a form, pass the data as a dictionary as the first parameter "
"to your :class:`Form` class constructor::"
msgstr ""

# 50799e6036d0466f9dee19b345f288b9
#: ../../ref/forms/api.txt:43
msgid ""
"In this dictionary, the keys are the field names, which correspond to the "
"attributes in your :class:`Form` class. The values are the data you're "
"trying to validate. These will usually be strings, but there's no "
"requirement that they be strings; the type of data you pass depends on the :"
"class:`Field`, as we'll see in a moment."
msgstr ""

# a4e41c4288cf48ada3fb51d8376059a7
#: ../../ref/forms/api.txt:51
msgid ""
"If you need to distinguish between bound and unbound form instances at "
"runtime, check the value of the form's :attr:`~Form.is_bound` attribute::"
msgstr ""

# e28fa5303e6048caad1413c29297cc9b
#: ../../ref/forms/api.txt:61
msgid ""
"Note that passing an empty dictionary creates a *bound* form with empty "
"data::"
msgstr ""

# 2424f8f0dd744477a2be60b430634f1c
#: ../../ref/forms/api.txt:67
msgid ""
"If you have a bound :class:`Form` instance and want to change the data "
"somehow, or if you want to bind an unbound :class:`Form` instance to some "
"data, create another :class:`Form` instance. There is no way to change data "
"in a :class:`Form` instance. Once a :class:`Form` instance has been created, "
"you should consider its data immutable, whether it has data or not."
msgstr ""

# d60450085ab240369152663fe796761e
#: ../../ref/forms/api.txt:74
msgid "Using forms to validate data"
msgstr ""

# 9a47e5ab8be9483592b8e8be000ccb3e
#: ../../ref/forms/api.txt:78
msgid ""
"The primary task of a :class:`Form` object is to validate data. With a "
"bound :class:`Form` instance, call the :meth:`~Form.is_valid` method to run "
"validation and return a boolean designating whether the data was valid::"
msgstr ""

# 037c3df7f5334d46841dddf1526abcf2
#: ../../ref/forms/api.txt:90
msgid ""
"Let's try with some invalid data. In this case, ``subject`` is blank (an "
"error, because all fields are required by default) and ``sender`` is not a "
"valid email address::"
msgstr ""

# 3b77737c92b8441bab47e690fad26db3
#: ../../ref/forms/api.txt:104
msgid ""
"Access the :attr:`~Form.errors` attribute to get a dictionary of error "
"messages::"
msgstr ""

# b47d5dddbc3c48ec97c0e9b125167352
#: ../../ref/forms/api.txt:110
msgid ""
"In this dictionary, the keys are the field names, and the values are lists "
"of Unicode strings representing the error messages. The error messages are "
"stored in lists because a field can have multiple error messages."
msgstr ""

# 2a56aa9644ae43c59e4afbb04fa0328c
#: ../../ref/forms/api.txt:114
msgid ""
"You can access :attr:`~Form.errors` without having to call :meth:`~Form."
"is_valid` first. The form's data will be validated the first time either you "
"call :meth:`~Form.is_valid` or access :attr:`~Form.errors`."
msgstr ""

# c38f995864cb4327add75dde24fb2650
#: ../../ref/forms/api.txt:118
msgid ""
"The validation routines will only get called once, regardless of how many "
"times you access :attr:`~Form.errors` or call :meth:`~Form.is_valid`. This "
"means that if validation has side effects, those side effects will only be "
"triggered once."
msgstr ""

# 3accbe5af8c74d7a99bc1e2a6ab95fc2
#: ../../ref/forms/api.txt:123
msgid "Behavior of unbound forms"
msgstr ""

# 47cda773184e44f3bc791968cf1a915d
#: ../../ref/forms/api.txt:125
msgid ""
"It's meaningless to validate a form with no data, but, for the record, "
"here's what happens with unbound forms::"
msgstr ""

# 276df1ac628d4ceebd25624ef4ea30e3
#: ../../ref/forms/api.txt:135
msgid "Dynamic initial values"
msgstr ""

# 8955b1f054b94891a7750bcbac5719c3
#: ../../ref/forms/api.txt:139
msgid ""
"Use :attr:`~Form.initial` to declare the initial value of form fields at "
"runtime. For example, you might want to fill in a ``username`` field with "
"the username of the current session."
msgstr ""

# 2b052075e7d149219032db1f6736ab24
#: ../../ref/forms/api.txt:143
msgid ""
"To accomplish this, use the :attr:`~Form.initial` argument to a :class:"
"`Form`. This argument, if given, should be a dictionary mapping field names "
"to initial values. Only include the fields for which you're specifying an "
"initial value; it's not necessary to include every field in your form. For "
"example::"
msgstr ""

# 354faa7719264dc4a3804e3e18069529
#: ../../ref/forms/api.txt:150
msgid ""
"These values are only displayed for unbound forms, and they're not used as "
"fallback values if a particular value isn't provided."
msgstr ""

# 064f3033fe134c8d8504629c1c4854a5
#: ../../ref/forms/api.txt:153
msgid ""
"Note that if a :class:`~django.forms.fields.Field` defines :attr:`~Form."
"initial` *and* you include ``initial`` when instantiating the ``Form``, then "
"the latter ``initial`` will have precedence. In this example, ``initial`` is "
"provided both at the field level and at the form instance level, and the "
"latter gets precedence::"
msgstr ""

# c22b4358c39a4eebbac35324e2599a5b
#: ../../ref/forms/api.txt:170
msgid "Accessing \"clean\" data"
msgstr ""

# f6e8f389381f4945b77c3230185a5a8d
#: ../../ref/forms/api.txt:174
msgid ""
"Each field in a :class:`Form` class is responsible not only for validating "
"data, but also for \"cleaning\" it -- normalizing it to a consistent format. "
"This is a nice feature, because it allows data for a particular field to be "
"input in a variety of ways, always resulting in consistent output."
msgstr ""

# fa6d5fffe7864825865b78b761188858
#: ../../ref/forms/api.txt:179
msgid ""
"For example, :class:`~django.forms.DateField` normalizes input into a Python "
"``datetime.date`` object. Regardless of whether you pass it a string in the "
"format ``'1994-07-15'``, a ``datetime.date`` object, or a number of other "
"formats, ``DateField`` will always normalize it to a ``datetime.date`` "
"object as long as it's valid."
msgstr ""

# 46f3c98ac4cf4fbaa44b47cfc3739fd3
#: ../../ref/forms/api.txt:185
msgid ""
"Once you've created a :class:`~Form` instance with a set of data and "
"validated it, you can access the clean data via its ``cleaned_data`` "
"attribute::"
msgstr ""

# 23f53281fa364a2f964607868dc3b627
#: ../../ref/forms/api.txt:198
msgid ""
"Note that any text-based field -- such as ``CharField`` or ``EmailField`` -- "
"always cleans the input into a Unicode string. We'll cover the encoding "
"implications later in this document."
msgstr ""

# 412292a4ca2644cf8c64c88b9fef9801
#: ../../ref/forms/api.txt:202
msgid ""
"If your data does *not* validate, your ``Form`` instance will not have a "
"``cleaned_data`` attribute::"
msgstr ""

# 5c92735fd8d5441098d2cdef78261501
#: ../../ref/forms/api.txt:217
msgid ""
"``cleaned_data`` will always *only* contain a key for fields defined in the "
"``Form``, even if you pass extra data when you define the ``Form``. In this "
"example, we pass a bunch of extra fields to the ``ContactForm`` constructor, "
"but ``cleaned_data`` contains only the form's fields::"
msgstr ""

# 1c4a13be0ccf42058bc9a0f5be81902f
#: ../../ref/forms/api.txt:235
msgid ""
"``cleaned_data`` will include a key and value for *all* fields defined in "
"the ``Form``, even if the data didn't include a value for fields that are "
"not required. In this example, the data dictionary doesn't include a value "
"for the ``nick_name`` field, but ``cleaned_data`` includes it, with an empty "
"value::"
msgstr ""

# 712ee816d7384c0391e58181cf014028
#: ../../ref/forms/api.txt:251
msgid ""
"In this above example, the ``cleaned_data`` value for ``nick_name`` is set "
"to an empty string, because ``nick_name`` is ``CharField``, and ``CharField``"
"\\s treat empty values as an empty string. Each field type knows what its "
"\"blank\" value is -- e.g., for ``DateField``, it's ``None`` instead of the "
"empty string. For full details on each field's behavior in this case, see "
"the \"Empty value\" note for each field in the \"Built-in ``Field`` classes"
"\" section below."
msgstr ""

# 40a1682e7a0040d1b49db949affa5fa7
#: ../../ref/forms/api.txt:258
msgid ""
"You can write code to perform validation for particular form fields (based "
"on their name) or for the form as a whole (considering combinations of "
"various fields). More information about this is in :doc:`/ref/forms/"
"validation`."
msgstr ""

# 573381b654204b839334934268b3b817
#: ../../ref/forms/api.txt:263
msgid "Outputting forms as HTML"
msgstr ""

# 85b9a2b0329447058814650aca4b5adc
#: ../../ref/forms/api.txt:265
msgid ""
"The second task of a ``Form`` object is to render itself as HTML. To do so, "
"simply ``print`` it::"
msgstr ""

# d1492e9f38f4477896f72e89eb4a3764
#: ../../ref/forms/api.txt:275
msgid ""
"If the form is bound to data, the HTML output will include that data "
"appropriately. For example, if a field is represented by an ``<input type="
"\"text\">``, the data will be in the ``value`` attribute. If a field is "
"represented by an ``<input type=\"checkbox\">``, then that HTML will include "
"``checked=\"checked\"`` if appropriate::"
msgstr ""

# 3ff9593ea264428ab450bde8cc677400
#: ../../ref/forms/api.txt:292
msgid ""
"This default output is a two-column HTML table, with a ``<tr>`` for each "
"field. Notice the following:"
msgstr ""

# ae42b0e184324536ac97aa480c406179
#: ../../ref/forms/api.txt:295
msgid ""
"For flexibility, the output does *not* include the ``<table>`` and ``</"
"table>`` tags, nor does it include the ``<form>`` and ``</form>`` tags or an "
"``<input type=\"submit\">`` tag. It's your job to do that."
msgstr ""

# 28ee429d109f4005bdb320674fc0bd82
#: ../../ref/forms/api.txt:299
msgid ""
"Each field type has a default HTML representation. ``CharField`` and "
"``EmailField`` are represented by an ``<input type=\"text\">``. "
"``BooleanField`` is represented by an ``<input type=\"checkbox\">``. Note "
"these are merely sensible defaults; you can specify which HTML to use for a "
"given field by using widgets, which we'll explain shortly."
msgstr ""

# 9916c61e597345f583e002b90e6fae7d
#: ../../ref/forms/api.txt:305
msgid ""
"The HTML ``name`` for each tag is taken directly from its attribute name in "
"the ``ContactForm`` class."
msgstr ""

# 5260636d87d3438fa32c6ac1e5c13d1e
#: ../../ref/forms/api.txt:308
msgid ""
"The text label for each field -- e.g. ``'Subject:'``, ``'Message:'`` and "
"``'Cc myself:'`` is generated from the field name by converting all "
"underscores to spaces and upper-casing the first letter. Again, note these "
"are merely sensible defaults; you can also specify labels manually."
msgstr ""

# 5854e7d9c39c4585a55b944336202da7
#: ../../ref/forms/api.txt:313
msgid ""
"Each text label is surrounded in an HTML ``<label>`` tag, which points to "
"the appropriate form field via its ``id``. Its ``id``, in turn, is generated "
"by prepending ``'id_'`` to the field name. The ``id`` attributes and "
"``<label>`` tags are included in the output by default, to follow best "
"practices, but you can change that behavior."
msgstr ""

# 5ecc36dfa9fd467aafb944fc2fec74db
#: ../../ref/forms/api.txt:319
msgid ""
"Although ``<table>`` output is the default output style when you ``print`` a "
"form, other output styles are available. Each style is available as a method "
"on a form object, and each rendering method returns a Unicode object."
msgstr ""

# d6f40503ae7745b294413827863b230b
#: ../../ref/forms/api.txt:324
msgid "``as_p()``"
msgstr ""

# c3ad70ba48eb4a5482b9bd400e281dd0
#: ../../ref/forms/api.txt:328
msgid ""
"``as_p()`` renders the form as a series of ``<p>`` tags, with each ``<p>`` "
"containing one field::"
msgstr ""

# ad82f0dd5b5043cfa05498a5b6c8704f
#: ../../ref/forms/api.txt:341
msgid "``as_ul()``"
msgstr ""

# 20bd3570039f4082bd6a38ad865ad2cd
#: ../../ref/forms/api.txt:345
msgid ""
"``as_ul()`` renders the form as a series of ``<li>`` tags, with each "
"``<li>`` containing one field. It does *not* include the ``<ul>`` or ``</"
"ul>``, so that you can specify any HTML attributes on the ``<ul>`` for "
"flexibility::"
msgstr ""

# f6592caa9a0c48429c8c25bfe5f089ec
#: ../../ref/forms/api.txt:360
msgid "``as_table()``"
msgstr ""

# 2acc162925e34398aabb5c98571bfd2c
#: ../../ref/forms/api.txt:364
msgid ""
"Finally, ``as_table()`` outputs the form as an HTML ``<table>``. This is "
"exactly the same as ``print``. In fact, when you ``print`` a form object, it "
"calls its ``as_table()`` method behind the scenes::"
msgstr ""

# f31e4ce357b445bfa7592cd384fbd0d5
#: ../../ref/forms/api.txt:378
msgid "Styling required or erroneous form rows"
msgstr ""

# fd382b795fb64c129d70ca09f752d138
#: ../../ref/forms/api.txt:382
msgid ""
"It's pretty common to style form rows and fields that are required or have "
"errors. For example, you might want to present required form rows in bold "
"and highlight errors in red."
msgstr ""

# 12d1fd01eb734944898a523468e4e7d4
#: ../../ref/forms/api.txt:386
msgid ""
"The :class:`Form` class has a couple of hooks you can use to add ``class`` "
"attributes to required rows or to rows with errors: simply set the :attr:"
"`Form.error_css_class` and/or :attr:`Form.required_css_class` attributes::"
msgstr ""

# b9e68876e67d4133b23369ff8ca068a4
#: ../../ref/forms/api.txt:397
msgid ""
"Once you've done that, rows will be given ``\"error\"`` and/or ``\"required"
"\"`` classes, as needed. The HTML will look something like::"
msgstr ""

# 046201adb1c14003abdec74225cc34d5
#: ../../ref/forms/api.txt:410
msgid "Configuring HTML ``<label>`` tags"
msgstr ""

# c3f96261e94c4f119ae3b68abcf779f9
#: ../../ref/forms/api.txt:412
msgid ""
"An HTML ``<label>`` tag designates which label text is associated with which "
"form element. This small enhancement makes forms more usable and more "
"accessible to assistive devices. It's always a good idea to use ``<label>`` "
"tags."
msgstr ""

# 812418c4b69d4649b92dc155795becdf
#: ../../ref/forms/api.txt:416
msgid ""
"By default, the form rendering methods include HTML ``id`` attributes on the "
"form elements and corresponding ``<label>`` tags around the labels. The "
"``id`` attribute values are generated by prepending ``id_`` to the form "
"field names. This behavior is configurable, though, if you want to change "
"the ``id`` convention or remove HTML ``id`` attributes and ``<label>`` tags "
"entirely."
msgstr ""

# e005f504879c4be4ae62140be2d94474
#: ../../ref/forms/api.txt:422
msgid ""
"Use the ``auto_id`` argument to the ``Form`` constructor to control the "
"label and ``id`` behavior. This argument must be ``True``, ``False`` or a "
"string."
msgstr ""

# 55f84e9b83fd413f91d757157913ca1d
#: ../../ref/forms/api.txt:425
msgid ""
"If ``auto_id`` is ``False``, then the form output will not include "
"``<label>`` tags nor ``id`` attributes::"
msgstr ""

# beae1c7f356945989f57c7c1bf501fd3
#: ../../ref/forms/api.txt:445
msgid ""
"If ``auto_id`` is set to ``True``, then the form output *will* include "
"``<label>`` tags and will simply use the field name as its ``id`` for each "
"form field::"
msgstr ""

# 08ba27aa182e4bfeb4e2ef54b102f321
#: ../../ref/forms/api.txt:466
msgid ""
"If ``auto_id`` is set to a string containing the format character ``'%s'``, "
"then the form output will include ``<label>`` tags, and will generate ``id`` "
"attributes based on the format string. For example, for a format string "
"``'field_%s'``, a field named ``subject`` will get the ``id`` value "
"``'field_subject'``. Continuing our example::"
msgstr ""

# dd8d93980cb741a1ad9fa521f795ddb7
#: ../../ref/forms/api.txt:489
msgid ""
"If ``auto_id`` is set to any other true value -- such as a string that "
"doesn't include ``%s`` -- then the library will act as if ``auto_id`` is "
"``True``."
msgstr ""

# 26d80c56d5ef479f89d2625992c2b870
#: ../../ref/forms/api.txt:492
msgid "By default, ``auto_id`` is set to the string ``'id_%s'``."
msgstr ""

# c8b5d86fa63e46ddb3cb02948480416f
#: ../../ref/forms/api.txt:494
msgid ""
"Normally, a colon (``:``) will be appended after any label name when a form "
"is rendered. It's possible to change the colon to another character, or omit "
"it entirely, using the ``label_suffix`` parameter::"
msgstr ""

# 4ba3aaa23189475a8e2e34ed6c18fc30
#: ../../ref/forms/api.txt:511
msgid ""
"Note that the label suffix is added only if the last character of the label "
"isn't a punctuation character (``.``, ``!``, ``?`` or ``:``)"
msgstr ""

# 33f02f209003440cbf936f8db5ad62a2
#: ../../ref/forms/api.txt:515
msgid "Notes on field ordering"
msgstr ""

# 6f8014c1909a427790a79554b0268f20
#: ../../ref/forms/api.txt:517
msgid ""
"In the ``as_p()``, ``as_ul()`` and ``as_table()`` shortcuts, the fields are "
"displayed in the order in which you define them in your form class. For "
"example, in the ``ContactForm`` example, the fields are defined in the order "
"``subject``, ``message``, ``sender``, ``cc_myself``. To reorder the HTML "
"output, just change the order in which those fields are listed in the class."
msgstr ""

# 4ff702a682724a30baa41afae69806d7
#: ../../ref/forms/api.txt:524
msgid "How errors are displayed"
msgstr ""

# 0cf2d4f0e197467b9bd9d8e5daf9c0a7
#: ../../ref/forms/api.txt:526
msgid ""
"If you render a bound ``Form`` object, the act of rendering will "
"automatically run the form's validation if it hasn't already happened, and "
"the HTML output will include the validation errors as a ``<ul class="
"\"errorlist\">`` near the field. The particular positioning of the error "
"messages depends on the output method you're using::"
msgstr ""

# 8431a921a60b4d0fb35129c59ca1dbc2
#: ../../ref/forms/api.txt:556
msgid "Customizing the error list format"
msgstr ""

# 0663355c945341c4ad6092f5f59f930a
#: ../../ref/forms/api.txt:558
msgid ""
"By default, forms use ``django.forms.util.ErrorList`` to format validation "
"errors. If you'd like to use an alternate class for displaying errors, you "
"can pass that in at construction time::"
msgstr ""

# 3faf019e6fd04553b66506477323141a
#: ../../ref/forms/api.txt:579
msgid "More granular output"
msgstr ""

# 6f2c7a487df84015a4e7db3430f8a2c5
#: ../../ref/forms/api.txt:581
msgid ""
"The ``as_p()``, ``as_ul()`` and ``as_table()`` methods are simply shortcuts "
"for lazy developers -- they're not the only way a form object can be "
"displayed."
msgstr ""

# d7139d819a3d4a1385cc290165205d86
#: ../../ref/forms/api.txt:586
msgid ""
"Used to display HTML or access attributes for a single field of a :class:"
"`Form` instance."
msgstr ""

# 80ed0cd6e9a04857978c42bd5fe9ce3e
#: ../../ref/forms/api.txt:589
msgid ""
"The :meth:`__unicode__` and :meth:`__str__` methods of this object displays "
"the HTML for this field."
msgstr ""

# ecf23133c2f048a38358328b3b840cba
#: ../../ref/forms/api.txt:592
msgid ""
"To retrieve a single ``BoundField``, use dictionary lookup syntax on your "
"form using the field's name as the key::"
msgstr ""

# b9609e07796f4888a2a769651b86c5d4
#: ../../ref/forms/api.txt:599
msgid "To retrieve all ``BoundField`` objects, iterate the form::"
msgstr ""

# b71c9ad4398b4d53945d6f1f8b4886e5
#: ../../ref/forms/api.txt:608
msgid ""
"The field-specific output honors the form object's ``auto_id`` setting::"
msgstr ""

# 24e6a291d1074f38bf0e666a6564312c
#: ../../ref/forms/api.txt:617
msgid "For a field's list of errors, access the field's ``errors`` attribute."
msgstr ""

# 2095cbc4e2ea432697395397fc7c5203
#: ../../ref/forms/api.txt:621
msgid ""
"A list-like object that is displayed as an HTML ``<ul class=\"errorlist\">`` "
"when printed::"
msgstr ""

# 0e65b29613094a03b7aeb29fe1138f09
#: ../../ref/forms/api.txt:643
msgid ""
"When you use Django's rendering shortcuts, CSS classes are used to indicate "
"required form fields or fields that contain errors. If you're manually "
"rendering a form, you can access these CSS classes using the ``css_classes`` "
"method::"
msgstr ""

# cc72178bba114a8785d198b2543944ef
#: ../../ref/forms/api.txt:652
msgid ""
"If you want to provide some additional classes in addition to the error and "
"required classes that may be required, you can provide those classes as an "
"argument::"
msgstr ""

# 8d32a267ccb94c468c0f980e95138cfb
#: ../../ref/forms/api.txt:664
msgid ""
"Use this method to render the raw value of this field as it would be "
"rendered by a ``Widget``::"
msgstr ""

# 854dfd3444ed4b45b35e49b7fdbb4d29
#: ../../ref/forms/api.txt:678
msgid "Binding uploaded files to a form"
msgstr ""

# c5d9f4c93fc44f25950bb5d6b4725082
#: ../../ref/forms/api.txt:680
msgid ""
"Dealing with forms that have ``FileField`` and ``ImageField`` fields is a "
"little more complicated than a normal form."
msgstr ""

# 1751e8d184024d91a54afc3b3f10b725
#: ../../ref/forms/api.txt:683
msgid ""
"Firstly, in order to upload files, you'll need to make sure that your "
"``<form>`` element correctly defines the ``enctype`` as ``\"multipart/form-"
"data\"``::"
msgstr ""

# dc1cf5d5df8c424d9b7389b00f581694
#: ../../ref/forms/api.txt:689
msgid ""
"Secondly, when you use the form, you need to bind the file data. File data "
"is handled separately to normal form data, so when your form contains a "
"``FileField`` and ``ImageField``, you will need to specify a second argument "
"when you bind your form. So if we extend our ContactForm to include an "
"``ImageField`` called ``mugshot``, we need to bind the file data containing "
"the mugshot image::"
msgstr ""

# 631e8ae68e0a4992976a1c511c5f87fd
#: ../../ref/forms/api.txt:705
msgid ""
"In practice, you will usually specify ``request.FILES`` as the source of "
"file data (just like you use ``request.POST`` as the source of form data)::"
msgstr ""

# 0bddd0c7b6384232a231cf8fca65aa3c
#: ../../ref/forms/api.txt:712
msgid ""
"Constructing an unbound form is the same as always -- just omit both form "
"data *and* file data::"
msgstr ""

# bbb0b734845242f1a50e82b42e9638e2
#: ../../ref/forms/api.txt:719
msgid "Testing for multipart forms"
msgstr ""

# a555712a40594db69b85eee87abe2fad
#: ../../ref/forms/api.txt:721
msgid ""
"If you're writing reusable views or templates, you may not know ahead of "
"time whether your form is a multipart form or not. The ``is_multipart()`` "
"method tells you whether the form requires multipart encoding for "
"submission::"
msgstr ""

# ea6f960906fe4133afe32916870568ea
#: ../../ref/forms/api.txt:729
msgid "Here's an example of how you might use this in a template::"
msgstr ""

# 4093898df85248fbb8ba31aec79868ff
#: ../../ref/forms/api.txt:740
msgid "Subclassing forms"
msgstr ""

# 10ae239dd6424b03898bf4321ea720ae
#: ../../ref/forms/api.txt:742
msgid ""
"If you have multiple ``Form`` classes that share fields, you can use "
"subclassing to remove redundancy."
msgstr ""

# c13ccd37d9f242f39c957bd0a0048b76
#: ../../ref/forms/api.txt:745
msgid ""
"When you subclass a custom ``Form`` class, the resulting subclass will "
"include all fields of the parent class(es), followed by the fields you "
"define in the subclass."
msgstr ""

# dd9908eda4c446cd97c4c571f5d48f23
#: ../../ref/forms/api.txt:749
msgid ""
"In this example, ``ContactFormWithPriority`` contains all the fields from "
"``ContactForm``, plus an additional field, ``priority``. The ``ContactForm`` "
"fields are ordered first::"
msgstr ""

# 797dfc1f3ef94c65aa6ea8c2fabd43b3
#: ../../ref/forms/api.txt:763
msgid ""
"It's possible to subclass multiple forms, treating forms as \"mix-ins.\" In "
"this example, ``BeatleForm`` subclasses both ``PersonForm`` and "
"``InstrumentForm`` (in that order), and its field list includes the fields "
"from the parent classes::"
msgstr ""

# 2e51dbae4cfc49d98a8eeaa93097ef2e
#: ../../ref/forms/api.txt:785
msgid "Prefixes for forms"
msgstr ""

# ab9f41f588d346fb928b3c652dde4965
#: ../../ref/forms/api.txt:789
msgid ""
"You can put several Django forms inside one ``<form>`` tag. To give each "
"``Form`` its own namespace, use the ``prefix`` keyword argument::"
msgstr ""

# 9e8d90dd62df43e395dab6d3b3e15b28
#: ../../ref/forms/fields.txt:3
msgid "Form fields"
msgstr ""

# edd2b2daa45a468197f9cf8fdd0083e7
#: ../../ref/forms/fields.txt:12
msgid ""
"When you create a ``Form`` class, the most important part is defining the "
"fields of the form. Each field has custom validation logic, along with a few "
"other hooks."
msgstr ""

# 0893a1ba8b0f4345ad9571f2a37bbc49
#: ../../ref/forms/fields.txt:18
msgid ""
"Although the primary way you'll use ``Field`` classes is in ``Form`` "
"classes, you can also instantiate them and use them directly to get a better "
"idea of how they work. Each ``Field`` instance has a ``clean()`` method, "
"which takes a single argument and either raises a ``django.forms."
"ValidationError`` exception or returns the clean value::"
msgstr ""

# fb79ca6aca1d4bcc9ef809e9c52c1311
#: ../../ref/forms/fields.txt:36
msgid "Core field arguments"
msgstr ""

# 0c1dc4eb6ab649d49e8bc4b0904361f0
#: ../../ref/forms/fields.txt:38
msgid ""
"Each ``Field`` class constructor takes at least these arguments. Some "
"``Field`` classes take additional, field-specific arguments, but the "
"following should *always* be accepted:"
msgstr ""

# d9c3a32adc024f34ab81e7da88c9eb39
#: ../../ref/forms/fields.txt:43
msgid "``required``"
msgstr ""

# ab8b4c66e29544248bc149df9e1e8863
#: ../../ref/forms/fields.txt:47
msgid ""
"By default, each ``Field`` class assumes the value is required, so if you "
"pass an empty value -- either ``None`` or the empty string (``\"\"``) -- "
"then ``clean()`` will raise a ``ValidationError`` exception::"
msgstr ""

# 29685beec105429fbe10b31b9dc08c9d
#: ../../ref/forms/fields.txt:71
msgid ""
"To specify that a field is *not* required, pass ``required=False`` to the "
"``Field`` constructor::"
msgstr ""

# ef5e624ccf8d40379cced47e9059c02d
#: ../../ref/forms/fields.txt:88
msgid ""
"If a ``Field`` has ``required=False`` and you pass ``clean()`` an empty "
"value, then ``clean()`` will return a *normalized* empty value rather than "
"raising ``ValidationError``. For ``CharField``, this will be a Unicode empty "
"string. For other ``Field`` classes, it might be ``None``. (This varies from "
"field to field.)"
msgstr ""

# ebf37d2d516346ccbf85ebf0827d2467
#: ../../ref/forms/fields.txt:95
msgid "``label``"
msgstr ""

# c3f7cccc0aff483c8c950eede0cc0b1c
#: ../../ref/forms/fields.txt:99
msgid ""
"The ``label`` argument lets you specify the \"human-friendly\" label for "
"this field. This is used when the ``Field`` is displayed in a ``Form``."
msgstr ""

# 2f9d59589d1a401daaeb643168206b3c
#: ../../ref/forms/fields.txt:102
msgid ""
"As explained in \"Outputting forms as HTML\" above, the default label for a "
"``Field`` is generated from the field name by converting all underscores to "
"spaces and upper-casing the first letter. Specify ``label`` if that default "
"behavior doesn't result in an adequate label."
msgstr ""

# 7e684afcc8ee4c8aa7f90d1384d986d0
#: ../../ref/forms/fields.txt:107
msgid ""
"Here's a full example ``Form`` that implements ``label`` for two of its "
"fields. We've specified ``auto_id=False`` to simplify the output::"
msgstr ""

# ed0dc63fb84b40749132ca446c5b1feb
#: ../../ref/forms/fields.txt:121
msgid "``initial``"
msgstr ""

# c5c6d0bb6bbd40df9b6a768f559d0233
#: ../../ref/forms/fields.txt:125
msgid ""
"The ``initial`` argument lets you specify the initial value to use when "
"rendering this ``Field`` in an unbound ``Form``."
msgstr ""

# 6bb646317e884d6abae22ab4cc882d09
#: ../../ref/forms/fields.txt:128
msgid ""
"To specify dynamic initial data, see the :attr:`Form.initial` parameter."
msgstr ""

# e8e1d0b8b0b247deab7e56033dc038f1
#: ../../ref/forms/fields.txt:130
msgid ""
"The use-case for this is when you want to display an \"empty\" form in which "
"a field is initialized to a particular value. For example::"
msgstr ""

# 736069090c9d4b189f4d6394ca00421d
#: ../../ref/forms/fields.txt:143
msgid ""
"You may be thinking, why not just pass a dictionary of the initial values as "
"data when displaying the form? Well, if you do that, you'll trigger "
"validation, and the HTML output will include any validation errors::"
msgstr ""

# e4f4453710dc4b8aaffa7d2ba12ae560
#: ../../ref/forms/fields.txt:158
msgid ""
"This is why ``initial`` values are only displayed for unbound forms. For "
"bound forms, the HTML output will use the bound data."
msgstr ""

# 6faefa8b513d48309af67b099a02538b
#: ../../ref/forms/fields.txt:161
msgid ""
"Also note that ``initial`` values are *not* used as \"fallback\" data in "
"validation if a particular field's value is not given. ``initial`` values "
"are *only* intended for initial form display::"
msgstr ""

# 177b2b7cdf864a18a7aebfb18b63bcf3
#: ../../ref/forms/fields.txt:177
msgid "Instead of a constant, you can also pass any callable::"
msgstr ""

# 1351df489a5f4b58a5d335e6a94499f5
#: ../../ref/forms/fields.txt:185
msgid ""
"The callable will be evaluated only when the unbound form is displayed, not "
"when it is defined."
msgstr ""

# b40d2328808a4ec1a6129fe5776cc295
#: ../../ref/forms/fields.txt:188
msgid "``widget``"
msgstr ""

# f10b88545a774e62ba4c369d334cb097
#: ../../ref/forms/fields.txt:192
msgid ""
"The ``widget`` argument lets you specify a ``Widget`` class to use when "
"rendering this ``Field``. See :doc:`/ref/forms/widgets` for more information."
msgstr ""

# 129bd767fbb0445386b60cf87fcd841e
# b219e9dd300a4c6d8c7fa5e74ffa7bf5
#: ../../ref/forms/fields.txt:196 ../../ref/models/fields.txt:219
msgid "``help_text``"
msgstr ""

# 806addea93d74a56905f1522fcc87a39
#: ../../ref/forms/fields.txt:200
msgid ""
"The ``help_text`` argument lets you specify descriptive text for this "
"``Field``. If you provide ``help_text``, it will be displayed next to the "
"``Field`` when the ``Field`` is rendered by one of the convenience ``Form`` "
"methods (e.g., ``as_ul()``)."
msgstr ""

# c61ec959e3a74be9bb66754c2a0aca20
#: ../../ref/forms/fields.txt:205
msgid ""
"Here's a full example ``Form`` that implements ``help_text`` for two of its "
"fields. We've specified ``auto_id=False`` to simplify the output::"
msgstr ""

# de4a17fe69d246ceafdb32a8cc15cfa8
# 627ce1410245437ca166a4769b685257
#: ../../ref/forms/fields.txt:231 ../../ref/models/fields.txt:204
msgid "``error_messages``"
msgstr ""

# 95ccd93c536f400ea2a081ac4e292b5e
#: ../../ref/forms/fields.txt:235
msgid ""
"The ``error_messages`` argument lets you override the default messages that "
"the field will raise. Pass in a dictionary with keys matching the error "
"messages you want to override. For example, here is the default error "
"message::"
msgstr ""

# 2d3b9d88042f4612b8fa448b72d7752f
#: ../../ref/forms/fields.txt:245
msgid "And here is a custom error message::"
msgstr ""

# c002091b20c14032b4782444c12475a9
#: ../../ref/forms/fields.txt:253
msgid ""
"In the `built-in Field classes`_ section below, each ``Field`` defines the "
"error message keys it uses."
msgstr ""

# fe1a4151bb204cbfb90c23d822edc7c7
# 6bb0423edf264ccc8d8b9b1b865d56af
#: ../../ref/forms/fields.txt:257 ../../ref/models/fields.txt:305
msgid "``validators``"
msgstr ""

# 91547e26928c4123ac76f3458d676f8e
#: ../../ref/forms/fields.txt:263
msgid ""
"The ``validators`` argument lets you provide a list of validation functions "
"for this field."
msgstr ""

# 97966ed928be46168bc8e5be95312809
#: ../../ref/forms/fields.txt:266
msgid ""
"See the :doc:`validators documentation </ref/validators>` for more "
"information."
msgstr ""

# 4baadadc3ca64ab0a44780fb4e335a86
#: ../../ref/forms/fields.txt:269
msgid "``localize``"
msgstr ""

# 717d97d3ad2149f782c52800169e13c2
#: ../../ref/forms/fields.txt:275
msgid ""
"The ``localize`` argument enables the localization of form data, input as "
"well as the rendered output."
msgstr ""

# ad968e56dc53450db1a087e6ef56ee0b
#: ../../ref/forms/fields.txt:278
msgid ""
"See the :ref:`format localization <format-localization>` documentation for "
"more information."
msgstr ""

# 87f15e21c95b47c6a84fcf57acc40a40
#: ../../ref/forms/fields.txt:284
msgid "Built-in ``Field`` classes"
msgstr ""

# 2b5666803d5d4df68d2247799c12e95b
#: ../../ref/forms/fields.txt:286
msgid ""
"Naturally, the ``forms`` library comes with a set of ``Field`` classes that "
"represent common validation needs. This section documents each built-in "
"field."
msgstr ""

# 026c472ab4fe4c52af8845e84ebcedfc
#: ../../ref/forms/fields.txt:289
msgid ""
"For each field, we describe the default widget used if you don't specify "
"``widget``. We also specify the value returned when you provide an empty "
"value (see the section on ``required`` above to understand what that means)."
msgstr ""

# b2f69820f307498a9dfbb535d1775335
# 14fc894561f6452bab46258a590bcf86
#: ../../ref/forms/fields.txt:294 ../../ref/models/fields.txt:344
msgid "``BooleanField``"
msgstr ""

# 2f231bc0ecba499db3728b1a8b80d147
#: ../../ref/forms/fields.txt:298
msgid "Default widget: ``CheckboxInput``"
msgstr ""

# cac287480b884e069b1deb5f73ceaf51
#: ../../ref/forms/fields.txt:299
msgid "Empty value: ``False``"
msgstr ""

# 401c6aca1a2b4a6d9d5f93fe9504a0b4
#: ../../ref/forms/fields.txt:300
msgid "Normalizes to: A Python ``True`` or ``False`` value."
msgstr ""

# 0ceaed190c384431a9e713856a9229a9
#: ../../ref/forms/fields.txt:301
msgid ""
"Validates that the value is ``True`` (e.g. the check box is checked) if the "
"field has ``required=True``."
msgstr ""

# e936c926748a45c991ea5c7d21622d9d
#: ../../ref/forms/fields.txt:303
msgid "Error message keys: ``required``"
msgstr ""

# 6e2c18c0819b4f4db739fea20b897d2e
#: ../../ref/forms/fields.txt:307
msgid ""
"Since all ``Field`` subclasses have ``required=True`` by default, the "
"validation condition here is important. If you want to include a boolean in "
"your form that can be either ``True`` or ``False`` (e.g. a checked or "
"unchecked checkbox), you must remember to pass in ``required=False`` when "
"creating the ``BooleanField``."
msgstr ""

# 47080fe7a3ef4740bbb1725bd9a2fa1b
# 064c3f986d6c4fe8a51fe62bc0a60c87
#: ../../ref/forms/fields.txt:314 ../../ref/models/fields.txt:361
msgid "``CharField``"
msgstr ""

# 00820f9b192c4092862e9bec40c3ef32
# 33c1d059f76d4fdcb3a7c759b52cac11
# d722ca5e7aa9421f9df5fec914359f02
# 8c7da66d237a44b1b22a939870ae332c
# 4d22f13086e443208d394a7ce8937dbe
# e614741ed385481f98f4921b4ca43821
# 90d2c904852a40178688a075ba5b3d59
# 6779ec3407b84d8781e645131433c69c
# 95aba02bd59046aaa5ea15b1bee4c90f
# 6a470e526d52438996424b0d5dbe1cc9
# 7bf080eb03664448965dd0d44f9c9787
# 32dadd00115340588a2b0f8ba2a28b07
# c9e9b751fe4744ab89f23bef2175c768
#: ../../ref/forms/fields.txt:318 ../../ref/forms/fields.txt:449
#: ../../ref/forms/fields.txt:484 ../../ref/forms/fields.txt:563
#: ../../ref/forms/fields.txt:600 ../../ref/forms/fields.txt:623
#: ../../ref/forms/fields.txt:639 ../../ref/forms/fields.txt:722
#: ../../ref/forms/fields.txt:749 ../../ref/forms/fields.txt:764
#: ../../ref/forms/fields.txt:788 ../../ref/forms/fields.txt:829
#: ../../ref/forms/fields.txt:856
msgid "Default widget: ``TextInput``"
msgstr ""

# 2b12ceeb844b4cebb48d6335c0481d2f
# 5813585b5f9843e294374a4a8cb63c01
# cb326f0e166a47ca90f4a560c9e53f2c
# 256758cfd885474dac4d2512ae51de74
# 8dc5504b1d9b4f4890b7f12a130e721b
# 4fd6219abe904a4887e68e2e1bc97f67
# e94ad2800938445bbe4b8476866b59cf
# eaf761f8809f4addadc381ecd5b7a032
# 993bbca8a551432da2938465889c7b19
# 5ca4c41b86f2460eb9f6bf0dee556a81
#: ../../ref/forms/fields.txt:319 ../../ref/forms/fields.txt:339
#: ../../ref/forms/fields.txt:485 ../../ref/forms/fields.txt:624
#: ../../ref/forms/fields.txt:640 ../../ref/forms/fields.txt:723
#: ../../ref/forms/fields.txt:750 ../../ref/forms/fields.txt:789
#: ../../ref/forms/fields.txt:830 ../../ref/forms/fields.txt:857
msgid "Empty value: ``''`` (an empty string)"
msgstr ""

# 4a2c0339f0224c909cf475993e5012e8
# 617cc843ba2544caa4107b2bf0564e0e
# 47575e9345244171bc213f23709af2a7
# 18f2716568404240b55ee9a362af4f59
# d0448f9e8ba0420eb2762ac738950c18
# 8b1d09f6a6ea4323b7076bf48f2b5282
# a8f03bc2638f4e958bf9a9c6ae9db1d0
# 242df17a690649f4b7852f0276076d30
#: ../../ref/forms/fields.txt:320 ../../ref/forms/fields.txt:340
#: ../../ref/forms/fields.txt:486 ../../ref/forms/fields.txt:625
#: ../../ref/forms/fields.txt:724 ../../ref/forms/fields.txt:751
#: ../../ref/forms/fields.txt:790 ../../ref/forms/fields.txt:831
msgid "Normalizes to: A Unicode object."
msgstr ""

# 2f803eb71d4940f1915d0bea5c73b9bb
#: ../../ref/forms/fields.txt:321
msgid ""
"Validates ``max_length`` or ``min_length``, if they are provided. Otherwise, "
"all inputs are valid."
msgstr ""

# a06439f5e5994846a0ce11f9ed85626e
#: ../../ref/forms/fields.txt:323
msgid "Error message keys: ``required``, ``max_length``, ``min_length``"
msgstr ""

# 477dc39e5b714f189c40bab6dde4251f
#: ../../ref/forms/fields.txt:325
msgid "Has two optional arguments for validation:"
msgstr ""

# 0afca3a271f744d09b01f4029e52739c
#: ../../ref/forms/fields.txt:330
msgid ""
"If provided, these arguments ensure that the string is at most or at least "
"the given length."
msgstr ""

# 542506eb238647bb9745f9eff5f79723
#: ../../ref/forms/fields.txt:334
msgid "``ChoiceField``"
msgstr ""

# 4c33bffd9158485aba821819945a73a5
# a14f651109ee4326b539dc2f411399b6
# bcf1e33dd9814a81adf831386aa7ab04
# 80758ef065c14f7a9e78ed39413de2e7
#: ../../ref/forms/fields.txt:338 ../../ref/forms/fields.txt:364
#: ../../ref/forms/fields.txt:533 ../../ref/forms/fields.txt:928
msgid "Default widget: ``Select``"
msgstr ""

# 65804c6b8a014ea48b81874b747a6982
#: ../../ref/forms/fields.txt:341
msgid "Validates that the given value exists in the list of choices."
msgstr ""

# 4b7a3f1b820643b891ad9ae2f9c5d22d
# 4dfea5a913d749c89ad1d43d2987f241
# 90afb7ddeaff4dbeb1e870fbaa0ee0e5
# 0ad96b4cda3d44ec9ac5fd0ad142d083
# 52177257fb284525a0566b494a53337f
#: ../../ref/forms/fields.txt:342 ../../ref/forms/fields.txt:369
#: ../../ref/forms/fields.txt:537 ../../ref/forms/fields.txt:700
#: ../../ref/forms/fields.txt:932
msgid "Error message keys: ``required``, ``invalid_choice``"
msgstr ""

# 156e228efe83434696e80129d97ef6bb
# 1880100196fe475c85fce5860947d824
# ee1469b4291e41d9ae22dc0c5b6dddde
#: ../../ref/forms/fields.txt:344 ../../ref/forms/fields.txt:679
#: ../../ref/forms/fields.txt:702
msgid ""
"The ``invalid_choice`` error message may contain ``%(value)s``, which will "
"be replaced with the selected choice."
msgstr ""

# acff13dc9aa6481c8490458c8d25c7cf
# 61311f30dc104fd3890be8ced4986ba5
# c81fd83505bb4faf9e1f84957918f9b9
#: ../../ref/forms/fields.txt:347 ../../ref/forms/fields.txt:836
#: ../../ref/forms/fields.txt:870
msgid "Takes one extra required argument:"
msgstr ""

# 99b83e546041493b9c57ce8cad894339
#: ../../ref/forms/fields.txt:351
msgid ""
"An iterable (e.g., a list or tuple) of 2-tuples to use as choices for this "
"field. This argument accepts the same formats as the ``choices`` argument to "
"a model field. See the :ref:`model field reference documentation on choices "
"<field-choices>` for more details."
msgstr ""

# dcffd944889f44b3a3be2d2f1687f0f2
#: ../../ref/forms/fields.txt:357
msgid "``TypedChoiceField``"
msgstr ""

# c29e70462e394ce38bc431fa609a83e0
#: ../../ref/forms/fields.txt:361
msgid ""
"Just like a :class:`ChoiceField`, except :class:`TypedChoiceField` takes two "
"extra arguments, ``coerce`` and ``empty_value``."
msgstr ""

# 92e2b866c7fc4a438bc15d81096439f8
# 33e1e38685c546eabb3a60e2eff70cfb
#: ../../ref/forms/fields.txt:365 ../../ref/forms/fields.txt:695
msgid "Empty value: Whatever you've given as ``empty_value``"
msgstr ""

# a3a57212f7f041118ae0725ac6fd3b40
#: ../../ref/forms/fields.txt:366
msgid "Normalizes to: A value of the type provided by the ``coerce`` argument."
msgstr ""

# ea563fb39ab14ee5901602cfce12d958
#: ../../ref/forms/fields.txt:367
msgid ""
"Validates that the given value exists in the list of choices and can be "
"coerced."
msgstr ""

# 092d62abd141464289f8b1d95609b897
#: ../../ref/forms/fields.txt:371
msgid "Takes extra arguments:"
msgstr ""

# 8384a87cac084547aa46bc92b6b7c948
#: ../../ref/forms/fields.txt:375
msgid ""
"A function that takes one argument and returns a coerced value. Examples "
"include the built-in ``int``, ``float``, ``bool`` and other types. Defaults "
"to an identity function."
msgstr ""

# 5335f24716b647a9b20cf0afefbc1b26
#: ../../ref/forms/fields.txt:381
msgid ""
"The value to use to represent \"empty.\" Defaults to the empty string; "
"``None`` is another common choice here. Note that this value will not be "
"coerced by the function given in the ``coerce`` argument, so choose it "
"accordingly."
msgstr ""

# 4528e6926ef9434bac270c93dae6d70d
# a3e1c49ce8324f2bb8a0a9f2ef7f767c
#: ../../ref/forms/fields.txt:387 ../../ref/models/fields.txt:403
msgid "``DateField``"
msgstr ""

# 5db34cee39c849b7bc08d25f0874fb74
#: ../../ref/forms/fields.txt:391
msgid "Default widget: ``DateInput``"
msgstr ""

# 45e0d96ffd994f4ebc6acdf4a2914543
# a9147600c35c40a287830ed01b9beb06
# caf3791947014a3f862dd4e6f7759160
# 716666d0111d4d0998ed1ea4682a8732
# a7d1171b53a74a489183226d705c099d
# 0f6cb736c73d4481928b2453729958c5
# 8a7c977ea247426988f05eacceb11b28
# 8d6f2d32a6894a34be9a8b31964b6db6
# 888745245b644a0f938f84676ef7dc2b
# 3f3d37707e1d48fa81a668dfa34d875b
# eb428edf050e43489cc01bf15c8d4acc
# a81834219b274716a66b2f7479638ffb
#: ../../ref/forms/fields.txt:392 ../../ref/forms/fields.txt:419
#: ../../ref/forms/fields.txt:450 ../../ref/forms/fields.txt:506
#: ../../ref/forms/fields.txt:534 ../../ref/forms/fields.txt:564
#: ../../ref/forms/fields.txt:580 ../../ref/forms/fields.txt:601
#: ../../ref/forms/fields.txt:713 ../../ref/forms/fields.txt:765
#: ../../ref/forms/fields.txt:886 ../../ref/forms/fields.txt:929
msgid "Empty value: ``None``"
msgstr ""

# a14a019a3c514d268080713b915ef213
#: ../../ref/forms/fields.txt:393
msgid "Normalizes to: A Python ``datetime.date`` object."
msgstr ""

# e1c85ad0d8ad4fc0ac03f1da13cc7050
#: ../../ref/forms/fields.txt:394
msgid ""
"Validates that the given value is either a ``datetime.date``, ``datetime."
"datetime`` or string formatted in a particular date format."
msgstr ""

# d2c8be70d31d4659aa08f08e385f4eba
# 1b8577d0cebb4e8e884b8db7fcb1a286
# 45711127067646a08bd8f4992932e3b4
# b7aac44293ee4d908957ddba6b6f409e
# c37835c44d264fe9bb8ffb1ef47301f1
# 81990634b044442395b65eae595dc128
# c813f8e85e7d471d8a60e7876c090448
# cc9c9f3f735f4daeb2cb552f851fa302
# 4e9b839b80b24024bc53eb1d4e7c2a26
#: ../../ref/forms/fields.txt:396 ../../ref/forms/fields.txt:423
#: ../../ref/forms/fields.txt:489 ../../ref/forms/fields.txt:628
#: ../../ref/forms/fields.txt:644 ../../ref/forms/fields.txt:727
#: ../../ref/forms/fields.txt:769 ../../ref/forms/fields.txt:834
#: ../../ref/forms/fields.txt:861
msgid "Error message keys: ``required``, ``invalid``"
msgstr ""

# a2551f35215f47dbb932b7fc9c79b61e
# 47f93a1d71784f928a16326724f66129
# 9c6fb5e6372b4f819d38822dcc7909c5
# dd123f35891146d3b66a68a8a02b1d13
# 52b8e04949bd4a80b0fc11d5a545a584
# fd2d3348b5e743879db4ea25af60e0a7
# 2266d95d8aae43a28ebc0cf0b8f03fcf
# 9409ba9258f840f6ba4216b591549a24
# e823d50910c74bd4b2cb55766a127138
#: ../../ref/forms/fields.txt:398 ../../ref/forms/fields.txt:425
#: ../../ref/forms/fields.txt:771 ../../ref/forms/widgets.txt:190
#: ../../ref/forms/widgets.txt:250 ../../ref/forms/widgets.txt:267
#: ../../ref/forms/widgets.txt:284 ../../ref/forms/widgets.txt:308
#: ../../ref/forms/widgets.txt:525
msgid "Takes one optional argument:"
msgstr ""

# 0168b230dd20406a8a7754cc7f40b5d7
# 57fd5ae6168b41068fe670f3a67e58d2
#: ../../ref/forms/fields.txt:402 ../../ref/forms/fields.txt:897
msgid ""
"A list of formats used to attempt to convert a string to a valid ``datetime."
"date`` object."
msgstr ""

# 40823e8bc0614a2ca1e40984bc185283
# 2c470cee36394edf9ac14ef85985a7bb
# 60c9351731ea41d1ac8fc315b7bd71fa
#: ../../ref/forms/fields.txt:405 ../../ref/forms/fields.txt:432
#: ../../ref/forms/fields.txt:778
msgid ""
"If no ``input_formats`` argument is provided, the default input formats are::"
msgstr ""

# 9bc39c132b69469babeebc401a05910d
# 3fa27396c6fa44c9af14985ddcc9acaa
#: ../../ref/forms/fields.txt:414 ../../ref/models/fields.txt:432
msgid "``DateTimeField``"
msgstr ""

# 5adcf7fe799c41d1a84ce953a4470a7e
#: ../../ref/forms/fields.txt:418
msgid "Default widget: ``DateTimeInput``"
msgstr ""

# eafafffa16b44925930b4704171512e9
# 6d0d593f6eda4855a7179ee77185cb89
#: ../../ref/forms/fields.txt:420 ../../ref/forms/fields.txt:887
msgid "Normalizes to: A Python ``datetime.datetime`` object."
msgstr ""

# 1bd0e1ab8ef549bab3aa45f572abff10
#: ../../ref/forms/fields.txt:421
msgid ""
"Validates that the given value is either a ``datetime.datetime``, ``datetime."
"date`` or string formatted in a particular datetime format."
msgstr ""

# d57fcc9f855a4a3693a3bfed9e10e991
#: ../../ref/forms/fields.txt:429
msgid ""
"A list of formats used to attempt to convert a string to a valid ``datetime."
"datetime`` object."
msgstr ""

# 0a9e044187ff403c8d1286a0e00af009
# f50cb144519f48de8073c07d7fd75227
#: ../../ref/forms/fields.txt:445 ../../ref/models/fields.txt:443
msgid "``DecimalField``"
msgstr ""

# 3e33f1d8b1b44bc9b38548303a941a9f
#: ../../ref/forms/fields.txt:451
msgid "Normalizes to: A Python ``decimal``."
msgstr ""

# cddd279a25b94955af92eee23008e70e
#: ../../ref/forms/fields.txt:452
msgid ""
"Validates that the given value is a decimal. Leading and trailing whitespace "
"is ignored."
msgstr ""

# 994d1df5b0b44685bfa96165c622ba1c
#: ../../ref/forms/fields.txt:454
msgid ""
"Error message keys: ``required``, ``invalid``, ``max_value``, ``min_value``, "
"``max_digits``, ``max_decimal_places``, ``max_whole_digits``"
msgstr ""

# 160cedd1160e44a988a6c004ecf5103e
# 4e0075ed124d4e0da3d9ed3003faf460
#: ../../ref/forms/fields.txt:458 ../../ref/forms/fields.txt:608
msgid ""
"The ``max_value`` and ``min_value`` error messages may contain ``"
"%(limit_value)s``, which will be substituted by the appropriate limit."
msgstr ""

# f76f507479b847edba11a4154a2c715e
#: ../../ref/forms/fields.txt:461
msgid "Takes four optional arguments:"
msgstr ""

# 8bef6133b5464b2bb8ebb3c059ef88fd
#: ../../ref/forms/fields.txt:466
msgid ""
"These control the range of values permitted in the field, and should be "
"given as ``decimal.Decimal`` values."
msgstr ""

# e0f4fd02e07c47fe8a05e5d02cd883f1
#: ../../ref/forms/fields.txt:471
msgid ""
"The maximum number of digits (those before the decimal point plus those "
"after the decimal point, with leading zeros stripped) permitted in the value."
msgstr ""

# 02b51fd778ec4024b69a68572a30d7d8
#: ../../ref/forms/fields.txt:477
msgid "The maximum number of decimal places permitted."
msgstr ""

# 5af4707289d34610b4c7f1aa89701a79
# c7f6cd2ceb9b4110ad72e3c634e04221
#: ../../ref/forms/fields.txt:480 ../../ref/models/fields.txt:478
msgid "``EmailField``"
msgstr ""

# 832df35315124b8384c7c6c61b0c53a1
#: ../../ref/forms/fields.txt:487
msgid ""
"Validates that the given value is a valid email address, using a moderately "
"complex regular expression."
msgstr ""

# a6c51dbf8fe44a25b7fc7b00e886a6b3
#: ../../ref/forms/fields.txt:491
msgid ""
"Has two optional arguments for validation, ``max_length`` and "
"``min_length``. If provided, these arguments ensure that the string is at "
"most or at least the given length."
msgstr ""

# 54273a94aa574bb69c931e2b4aeaf085
# 9e83cc217d6b46dd9d6a70fa16af6d8c
#: ../../ref/forms/fields.txt:501 ../../ref/models/fields.txt:485
msgid "``FileField``"
msgstr ""

# 55fd256b30f34770ae5b6621f0b6d6de
# 3ce78d1e5cf14302895fa8a09fbd91a5
#: ../../ref/forms/fields.txt:505 ../../ref/forms/fields.txt:579
msgid "Default widget: ``ClearableFileInput``"
msgstr ""

# c78a681c172a4adb84442a55f95029b2
# ad9a2281850243b1ab48d9e354cd4687
#: ../../ref/forms/fields.txt:507 ../../ref/forms/fields.txt:581
msgid ""
"Normalizes to: An ``UploadedFile`` object that wraps the file content and "
"file name into a single object."
msgstr ""

# 9626897f1a9e40de89d42791d86d6b72
#: ../../ref/forms/fields.txt:509
msgid "Can validate that non-empty file data has been bound to the form."
msgstr ""

# 37c87cc2c42044cbbda4661cb51ae176
#: ../../ref/forms/fields.txt:510
msgid ""
"Error message keys: ``required``, ``invalid``, ``missing``, ``empty``, "
"``max_length``"
msgstr ""

# c4aa7115ccdb4d4184300301637557bf
#: ../../ref/forms/fields.txt:513
msgid ""
"Has two optional arguments for validation, ``max_length`` and "
"``allow_empty_file``. If provided, these ensure that the file name is at "
"most the given length, and that validation will succeed even if the file "
"content is empty."
msgstr ""

# ed9bd9de0dda404ba69e6d15b891e7c2
#: ../../ref/forms/fields.txt:518
msgid ""
"To learn more about the ``UploadedFile`` object, see the :doc:`file uploads "
"documentation </topics/http/file-uploads>`."
msgstr ""

# ba91479c19f6456aa668fad31631d5b5
#: ../../ref/forms/fields.txt:521
msgid ""
"When you use a ``FileField`` in a form, you must also remember to :ref:`bind "
"the file data to the form <binding-uploaded-files>`."
msgstr ""

# 021b690ef99e42cd886c499471b98db1
#: ../../ref/forms/fields.txt:524
msgid ""
"The ``max_length`` error refers to the length of the filename. In the error "
"message for that key, ``%(max)d`` will be replaced with the maximum filename "
"length and ``%(length)d`` will be replaced with the current filename length."
msgstr ""

# d1b6bdaf4de64d99aaf4842312f6595e
# 089aca6a8520440292fa970484619612
#: ../../ref/forms/fields.txt:529 ../../ref/models/fields.txt:660
msgid "``FilePathField``"
msgstr ""

# 3b4f4b0dcefe46d0aed4a39ba11a4d41
#: ../../ref/forms/fields.txt:535
msgid "Normalizes to: A unicode object"
msgstr ""

# 7884cdd9aebb467a97be76f17674d62e
#: ../../ref/forms/fields.txt:536
msgid "Validates that the selected choice exists in the list of choices."
msgstr ""

# 3997b58115ec4135ad93600019e2506f
#: ../../ref/forms/fields.txt:539
msgid ""
"The field allows choosing from files inside a certain directory. It takes "
"three extra arguments; only ``path`` is required:"
msgstr ""

# c6d3a06925ed402ca6b4333976c09007
#: ../../ref/forms/fields.txt:544
msgid ""
"The absolute path to the directory whose contents you want listed. This "
"directory must exist."
msgstr ""

# 0f0336993bb1402ab0fab6667fff3512
#: ../../ref/forms/fields.txt:549
msgid ""
"If ``False`` (the default) only the direct contents of ``path`` will be "
"offered as choices. If ``True``, the directory will be descended into "
"recursively and all descendants will be listed as choices."
msgstr ""

# a08bd13fce934315a13f12eff0fee52b
#: ../../ref/forms/fields.txt:555
msgid ""
"A regular expression pattern; only files with names matching this expression "
"will be allowed as choices."
msgstr ""

# 38f5b6d1eeb241d9b02e3a9736862014
# 155886a0b01b481e9088c7481f389018
#: ../../ref/forms/fields.txt:559 ../../ref/models/fields.txt:701
msgid "``FloatField``"
msgstr ""

# f101c46444a04265a602739ac5aea9d7
#: ../../ref/forms/fields.txt:565
msgid "Normalizes to: A Python float."
msgstr ""

# 8da4245d04284f64bd29b2c418515728
#: ../../ref/forms/fields.txt:566
msgid ""
"Validates that the given value is an float. Leading and trailing whitespace "
"is allowed, as in Python's ``float()`` function."
msgstr ""

# 734529d28fda486e923a2058a1316a8b
# d2b70d516bf7405fac95ba0cd9a9fe80
#: ../../ref/forms/fields.txt:568 ../../ref/forms/fields.txt:605
msgid ""
"Error message keys: ``required``, ``invalid``, ``max_value``, ``min_value``"
msgstr ""

# 2e7ed4c010974b2187a4cbe172bcebd1
#: ../../ref/forms/fields.txt:571
msgid ""
"Takes two optional arguments for validation, ``max_value`` and "
"``min_value``. These control the range of values permitted in the field."
msgstr ""

# 82c83ed2bb3943899917da1d712647ef
# 88866fa690ec4390b63f06434827fcce
#: ../../ref/forms/fields.txt:575 ../../ref/models/fields.txt:721
msgid "``ImageField``"
msgstr ""

# 7331d57c56ba4b6ebdea149ce5a8084a
#: ../../ref/forms/fields.txt:583
msgid ""
"Validates that file data has been bound to the form, and that the file is of "
"an image format understood by PIL."
msgstr ""

# 1cfe801847cd4e40aa08eafbc57bf97d
#: ../../ref/forms/fields.txt:585
msgid ""
"Error message keys: ``required``, ``invalid``, ``missing``, ``empty``, "
"``invalid_image``"
msgstr ""

# 550dcc34c1f441c8a3ff7d1738bf1bd1
#: ../../ref/forms/fields.txt:588
msgid ""
"Using an ImageField requires that the `Python Imaging Library`_ is installed."
msgstr ""

# 39b9e6e692dc4b28b6deca4ce7dca5aa
#: ../../ref/forms/fields.txt:590
msgid ""
"When you use an ``ImageField`` on a form, you must also remember to :ref:"
"`bind the file data to the form <binding-uploaded-files>`."
msgstr ""

# 3b76c7e4102343219de831909d223409
# 39ae1c50a46449949929654459a0f1a6
#: ../../ref/forms/fields.txt:596 ../../ref/models/fields.txt:754
msgid "``IntegerField``"
msgstr ""

# a3a1ef48cf4f49989dd807db47f33e3f
#: ../../ref/forms/fields.txt:602
msgid "Normalizes to: A Python integer or long integer."
msgstr ""

# 60b781cca73141f29f926523bcbb3dcd
#: ../../ref/forms/fields.txt:603
msgid ""
"Validates that the given value is an integer. Leading and trailing "
"whitespace is allowed, as in Python's ``int()`` function."
msgstr ""

# 8caa21f232c2435e8d528a52e7e60cd4
#: ../../ref/forms/fields.txt:611
msgid "Takes two optional arguments for validation:"
msgstr ""

# 089f1d0aca964dcf8d5f856b1eac5e03
#: ../../ref/forms/fields.txt:616
msgid "These control the range of values permitted in the field."
msgstr ""

# c50984869b5f4605a1c07eab6998f801
# 946c33476bbd413abc79049fd27fc7f6
#: ../../ref/forms/fields.txt:619 ../../ref/models/fields.txt:762
msgid "``IPAddressField``"
msgstr ""

# 601f0cf4559a4541a2f8eb36d68fefdb
#: ../../ref/forms/fields.txt:626
msgid ""
"Validates that the given value is a valid IPv4 address, using a regular "
"expression."
msgstr ""

# 3122b173a8f44568a5348dd2bb5b473e
# ff822019c31d437b841ea353cb274472
#: ../../ref/forms/fields.txt:631 ../../ref/models/fields.txt:770
msgid "``GenericIPAddressField``"
msgstr ""

# 4ca1fce893204f7fa0b392f097d97d1a
#: ../../ref/forms/fields.txt:637
msgid "A field containing either an IPv4 or an IPv6 address."
msgstr ""

# f92d594ed856452aa20435146badcee6
#: ../../ref/forms/fields.txt:641
msgid ""
"Normalizes to: A Unicode object. IPv6 addresses are normalized as described "
"below."
msgstr ""

# 16c78fac293e42d49b5dfda4d3d6f4bf
#: ../../ref/forms/fields.txt:643
msgid "Validates that the given value is a valid IP address."
msgstr ""

# 1e59e1ef770f4f2b92865166512edd23
# 7dcb867106654fba966cbb2d86b75730
#: ../../ref/forms/fields.txt:646 ../../ref/models/fields.txt:780
msgid ""
"The IPv6 address normalization follows :rfc:`4291#section-2.2` section 2.2, "
"including using the IPv4 format suggested in paragraph 3 of that section, "
"like ``::ffff:192.0.2.0``. For example, ``2001:0::0:01`` would be normalized "
"to ``2001::1``, and ``::ffff:0a0a:0a0a`` to ``::ffff:10.10.10.10``. All "
"characters are converted to lowercase."
msgstr ""

# 948d0d47d901442184f8ce4ac0b901e4
# 6104ea271bd84ae9938a26782d678ed5
#: ../../ref/forms/fields.txt:652 ../../ref/forms/fields.txt:893
msgid "Takes two optional arguments:"
msgstr ""

# e9533aa148b644ca86cddced4ee853a3
#: ../../ref/forms/fields.txt:656
msgid ""
"Limits valid inputs to the specified protocol. Accepted values are ``both`` "
"(default), ``IPv4`` or ``IPv6``. Matching is case insensitive."
msgstr ""

# 7c5702d838d94e9a8db359b1d84c7b8e
# bebd5dd7b655469d8ed7e3a26aee0f77
#: ../../ref/forms/fields.txt:662 ../../ref/models/fields.txt:794
msgid ""
"Unpacks IPv4 mapped addresses like ``::ffff::192.0.2.1``. If this option is "
"enabled that address would be unpacked to ``192.0.2.1``. Default is "
"disabled. Can only be used when ``protocol`` is set to ``'both'``."
msgstr ""

# 514ddae2bbdf480093df3f32424dfcf1
#: ../../ref/forms/fields.txt:668
msgid "``MultipleChoiceField``"
msgstr ""

# 04b144391c4948d9a3cd6678d45a72a7
# 713d0ca785d04ca2adfa157340456fd4
# 7a231402275843a2af7553230d9aebaa
#: ../../ref/forms/fields.txt:672 ../../ref/forms/fields.txt:694
#: ../../ref/forms/fields.txt:979
msgid "Default widget: ``SelectMultiple``"
msgstr ""

# f059e17c3ef34eadaa62e3eec48ee076
# a2607c3efb464ae488dbb77e845cfb5a
#: ../../ref/forms/fields.txt:673 ../../ref/forms/fields.txt:980
msgid "Empty value: ``[]`` (an empty list)"
msgstr ""

# 801f8eaad26c4b728f70a116eaf77902
#: ../../ref/forms/fields.txt:674
msgid "Normalizes to: A list of Unicode objects."
msgstr ""

# c4619745d03e47598eac3782593076e4
#: ../../ref/forms/fields.txt:675
msgid ""
"Validates that every value in the given list of values exists in the list of "
"choices."
msgstr ""

# 19ad7085a16145588b64e557eac1cd0c
#: ../../ref/forms/fields.txt:677
msgid "Error message keys: ``required``, ``invalid_choice``, ``invalid_list``"
msgstr ""

# 982820f88cef458290d19b05dec5039d
#: ../../ref/forms/fields.txt:682
msgid "Takes one extra required argument, ``choices``, as for ``ChoiceField``."
msgstr ""

# 11bccb30e1ec41759ff423c5c04ac2f2
#: ../../ref/forms/fields.txt:685
msgid "``TypedMultipleChoiceField``"
msgstr ""

# 1eb142c4c7c84f00a7bf4a6358b3fd95
#: ../../ref/forms/fields.txt:691
msgid ""
"Just like a :class:`MultipleChoiceField`, except :class:"
"`TypedMultipleChoiceField` takes two extra arguments, ``coerce`` and "
"``empty_value``."
msgstr ""

# bf6f84fba11e44b284ad8d36188dc2c0
#: ../../ref/forms/fields.txt:696
msgid ""
"Normalizes to: A list of values of the type provided by the ``coerce`` "
"argument."
msgstr ""

# f1c4d90907ee447b9ed9d3fba257fb0c
#: ../../ref/forms/fields.txt:698
msgid ""
"Validates that the given values exists in the list of choices and can be "
"coerced."
msgstr ""

# b7b375dcdc97472eaecc693cdf96d4dc
#: ../../ref/forms/fields.txt:705
msgid ""
"Takes two extra arguments, ``coerce`` and ``empty_value``, as for "
"``TypedChoiceField``."
msgstr ""

# 51c63d2c51444ccca7904e0c17d0474d
# 3438adcfd79a46b18ca4bae7587218d1
#: ../../ref/forms/fields.txt:708 ../../ref/models/fields.txt:800
msgid "``NullBooleanField``"
msgstr ""

# bc8dd39143854eba8fa4b07b5178b124
#: ../../ref/forms/fields.txt:712
msgid "Default widget: ``NullBooleanSelect``"
msgstr ""

# f17b5dddc42e432fb1163afd589eeb2e
#: ../../ref/forms/fields.txt:714
msgid "Normalizes to: A Python ``True``, ``False`` or ``None`` value."
msgstr ""

# 7e455da992e7491bb6fdc0359c0c68ef
#: ../../ref/forms/fields.txt:715
msgid "Validates nothing (i.e., it never raises a ``ValidationError``)."
msgstr ""

# da78362c118d44fc97ea5a80239307b0
#: ../../ref/forms/fields.txt:718
msgid "``RegexField``"
msgstr ""

# a694d6d48d3948fb9fe9ef5379877b1f
#: ../../ref/forms/fields.txt:725
msgid ""
"Validates that the given value matches against a certain regular expression."
msgstr ""

# 0047324ebfd448c3be3d0f7fddc7d3dc
#: ../../ref/forms/fields.txt:729
msgid "Takes one required argument:"
msgstr ""

# a99d8167bb634e3daa1352ff96461c47
#: ../../ref/forms/fields.txt:733
msgid ""
"A regular expression specified either as a string or a compiled regular "
"expression object."
msgstr ""

# c843444ce82b42d391b35349a0f2818e
#: ../../ref/forms/fields.txt:736
msgid ""
"Also takes ``max_length`` and ``min_length``, which work just as they do for "
"``CharField``."
msgstr ""

# 970d2cb725314d92ab451a4262df37c9
#: ../../ref/forms/fields.txt:739
msgid ""
"The optional argument ``error_message`` is also accepted for backwards "
"compatibility. The preferred way to provide an error message is to use the "
"``error_messages`` argument, passing a dictionary with ``'invalid'`` as a "
"key and the error message as the value."
msgstr ""

# 434315044614422893143629f3f1246f
# a342bb48eb9c4be19d242d447a7e663b
#: ../../ref/forms/fields.txt:745 ../../ref/models/fields.txt:825
msgid "``SlugField``"
msgstr ""

# 4709af05ee96400aa2aa81ea7f71f671
#: ../../ref/forms/fields.txt:752
msgid ""
"Validates that the given value contains only letters, numbers, underscores, "
"and hyphens."
msgstr ""

# a7223e1811274e53b3fdb430b89bd663
#: ../../ref/forms/fields.txt:754
msgid "Error messages: ``required``, ``invalid``"
msgstr ""

# 8ceb8308cdf046f4927b12777482e805
#: ../../ref/forms/fields.txt:756
msgid ""
"This field is intended for use in representing a model :class:`~django.db."
"models.SlugField` in forms."
msgstr ""

# 16030e64848d40ef9d6074201ed9f555
# 8b53d41e3b9749d8a725093a73b07954
#: ../../ref/forms/fields.txt:760 ../../ref/models/fields.txt:868
msgid "``TimeField``"
msgstr ""

# e28380e117414eb8a6bcb059e97f9380
#: ../../ref/forms/fields.txt:766
msgid "Normalizes to: A Python ``datetime.time`` object."
msgstr ""

# e3ccafe7445b4811a20de1b8fca2101c
#: ../../ref/forms/fields.txt:767
msgid ""
"Validates that the given value is either a ``datetime.time`` or string "
"formatted in a particular time format."
msgstr ""

# 363b5dc8ee68417281d3555f22b06618
# 2be51c3b30834502809e0abf49d4f7b6
#: ../../ref/forms/fields.txt:775 ../../ref/forms/fields.txt:905
msgid ""
"A list of formats used to attempt to convert a string to a valid ``datetime."
"time`` object."
msgstr ""

# 7b55e7dae45d4bb39fb165ce3ebd9bc0
# 09026ac5c1ab40dda25f2c49bbebeef4
#: ../../ref/forms/fields.txt:784 ../../ref/models/fields.txt:879
msgid "``URLField``"
msgstr ""

# b58de11be18a431ab3ad77b94d362a54
#: ../../ref/forms/fields.txt:791
msgid "Validates that the given value is a valid URL."
msgstr ""

# 31936ab566744ee9849edc2a6902ba84
#: ../../ref/forms/fields.txt:792
msgid "Error message keys: ``required``, ``invalid``, ``invalid_link``"
msgstr ""

# ace3c24af4ae432da73ae67c217ec0da
#: ../../ref/forms/fields.txt:794
msgid "Takes the following optional arguments:"
msgstr ""

# 93b5f378c4cf4fde989ce0b90883bb19
#: ../../ref/forms/fields.txt:799
msgid ""
"These are the same as ``CharField.max_length`` and ``CharField.min_length``."
msgstr ""

# 7a409c338b0c4ad683baaa128f775b66
#: ../../ref/forms/fields.txt:803
msgid ""
"If ``True``, the validator will attempt to load the given URL, raising "
"``ValidationError`` if the page gives a 404. Defaults to ``False``."
msgstr ""

# dec0474a243845eba65e84333f50f9c9
#: ../../ref/forms/fields.txt:812
msgid ""
"String used as the user-agent used when checking for a URL's existence. "
"Defaults to the value of the :setting:`URL_VALIDATOR_USER_AGENT` setting."
msgstr ""

# b0fa88bfc199454597040eb5968a1731
#: ../../ref/forms/fields.txt:822
msgid "Slightly complex built-in ``Field`` classes"
msgstr ""

# 75cdc1dab09f4575adcfce34a5d6cf57
#: ../../ref/forms/fields.txt:825
msgid "``ComboField``"
msgstr ""

# e1f1833cdb764c3a9ec1f32f42270a01
#: ../../ref/forms/fields.txt:832
msgid ""
"Validates that the given value against each of the fields specified as an "
"argument to the ``ComboField``."
msgstr ""

# 0c7a117172e1408684c5ae0db1ef35b7
#: ../../ref/forms/fields.txt:840
msgid ""
"The list of fields that should be used to validate the field's value (in the "
"order in which they are provided)."
msgstr ""

# 10e4f3daa4724b10b7879a924650614e
#: ../../ref/forms/fields.txt:852
msgid "``MultiValueField``"
msgstr ""

# 6fd5346da77645b0b1d91b5f527a2871
#: ../../ref/forms/fields.txt:858
msgid ""
"Normalizes to: the type returned by the ``compress`` method of the subclass."
msgstr ""

# 86d89962e11b49b3b3dcf9b703e9502f
#: ../../ref/forms/fields.txt:859
msgid ""
"Validates that the given value against each of the fields specified as an "
"argument to the ``MultiValueField``."
msgstr ""

# e11213d297374b82a24b725f9e6cf37d
#: ../../ref/forms/fields.txt:863
msgid ""
"This abstract field (must be subclassed) aggregates the logic of multiple "
"fields. Subclasses should not have to implement clean(). Instead, they must "
"implement compress(), which takes a list of valid values and returns a "
"\"compressed\" version of those values -- a single value.  For example, :"
"class:`SplitDateTimeField` is a subclass which combines a time field and a "
"date field into a datetime object."
msgstr ""

# 5a227933528542dfbc6ae044076568c9
#: ../../ref/forms/fields.txt:874
msgid ""
"A list of fields which are cleaned into a single field. Each value in "
"``clean`` is cleaned by the corresponding field in ``fields`` -- the first "
"value is cleaned by the first field, the second value is cleaned by the "
"second field, etc.  Once all fields are cleaned, the list of clean values is "
"\"compressed\" into a single value."
msgstr ""

# 3e120e279b644ae19f5cbff1be11d13c
#: ../../ref/forms/fields.txt:881
msgid "``SplitDateTimeField``"
msgstr ""

# 326a69ffc5654be9b7d8e2685125dddd
#: ../../ref/forms/fields.txt:885
msgid "Default widget: ``SplitDateTimeWidget``"
msgstr ""

# b5c9f8e76eba457683a3e738820b8ac4
#: ../../ref/forms/fields.txt:888
msgid ""
"Validates that the given value is a ``datetime.datetime`` or string "
"formatted in a particular datetime format."
msgstr ""

# 5dee643171084cab9ca1cd2dc40e3c3e
#: ../../ref/forms/fields.txt:890
msgid ""
"Error message keys: ``required``, ``invalid``, ``invalid_date``, "
"``invalid_time``"
msgstr ""

# 20808690942745ebb79c66a541043ebe
#: ../../ref/forms/fields.txt:900
msgid ""
"If no ``input_date_formats`` argument is provided, the default input formats "
"for ``DateField`` are used."
msgstr ""

# 0df00a0b18a24344997d00e7ad88b8a6
#: ../../ref/forms/fields.txt:908
msgid ""
"If no ``input_time_formats`` argument is provided, the default input formats "
"for ``TimeField`` are used."
msgstr ""

# da5ee0ab145949a0aaecb7f7c848c146
#: ../../ref/forms/fields.txt:912
msgid "Fields which handle relationships"
msgstr ""

# f0f65a24482443fb8622405ee77d9918
#: ../../ref/forms/fields.txt:914
msgid ""
"Two fields are available for representing relationships between models: :"
"class:`ModelChoiceField` and :class:`ModelMultipleChoiceField`.  Both of "
"these fields require a single ``queryset`` parameter that is used to create "
"the choices for the field.  Upon form validation, these fields will place "
"either one model object (in the case of ``ModelChoiceField``) or multiple "
"model objects (in the case of ``ModelMultipleChoiceField``) into the "
"``cleaned_data`` dictionary of the form."
msgstr ""

# 5d469954d9084500aab12304a9a564b4
#: ../../ref/forms/fields.txt:924
msgid "``ModelChoiceField``"
msgstr ""

# b836abe23a7b489e91db264d54ca2804
#: ../../ref/forms/fields.txt:930
msgid "Normalizes to: A model instance."
msgstr ""

# a89a54fc40e845739473fceda8150da2
#: ../../ref/forms/fields.txt:931
msgid "Validates that the given id exists in the queryset."
msgstr ""

# 7a711fc24787475a8edf242eb9ca455a
#: ../../ref/forms/fields.txt:934
msgid ""
"Allows the selection of a single model object, suitable for representing a "
"foreign key.  A single argument is required:"
msgstr ""

# e0cafca647614e45adb7b6c7a645bd55
# f1e04a3d2491407b99fb7b5e3b2c1388
#: ../../ref/forms/fields.txt:939 ../../ref/forms/fields.txt:994
msgid ""
"A ``QuerySet`` of model objects from which the choices for the field will be "
"derived, and which will be used to validate the user's selection."
msgstr ""

# 7dc4aa81a4954052b79805761dbadbc6
#: ../../ref/forms/fields.txt:943
msgid "``ModelChoiceField`` also takes one optional argument:"
msgstr ""

# 22becfb00d364886aa941211bebcaab1
#: ../../ref/forms/fields.txt:947
msgid ""
"By default the ``<select>`` widget used by ``ModelChoiceField`` will have an "
"empty choice at the top of the list. You can change the text of this label "
"(which is ``\"---------\"`` by default) with the ``empty_label`` attribute, "
"or you can disable the empty label entirely by setting ``empty_label`` to "
"``None``::"
msgstr ""

# 35cbd374c8d44f59bf3f3cabf5fa0f41
#: ../../ref/forms/fields.txt:959
msgid ""
"Note that if a ``ModelChoiceField`` is required and has a default initial "
"value, no empty choice is created (regardless of the value of "
"``empty_label``)."
msgstr ""

# f27e828940d4422088447ee2f0c15e9e
#: ../../ref/forms/fields.txt:963
msgid ""
"The ``__unicode__`` method of the model will be called to generate string "
"representations of the objects for use in the field's choices; to provide "
"customized representations, subclass ``ModelChoiceField`` and override "
"``label_from_instance``. This method will receive a model object, and should "
"return a string suitable for representing it. For example::"
msgstr ""

# f07cd76e359041949a041407fbe311d1
#: ../../ref/forms/fields.txt:975
msgid "``ModelMultipleChoiceField``"
msgstr ""

# 4d56889387f447d98c50dae2486d52bb
#: ../../ref/forms/fields.txt:981
msgid "Normalizes to: A list of model instances."
msgstr ""

# ec9f13db649e466f90ef12c8a972607b
#: ../../ref/forms/fields.txt:982
msgid ""
"Validates that every id in the given list of values exists in the queryset."
msgstr ""

# 5755009533414091b2870a9651aeb7ed
#: ../../ref/forms/fields.txt:984
msgid ""
"Error message keys: ``required``, ``list``, ``invalid_choice``, "
"``invalid_pk_value``"
msgstr ""

# ee121f7fd71741d99bdccd418d68dfa6
#: ../../ref/forms/fields.txt:987
msgid ""
"Allows the selection of one or more model objects, suitable for representing "
"a many-to-many relation. As with :class:`ModelChoiceField`, you can use "
"``label_from_instance`` to customize the object representations, and "
"``queryset`` is a required parameter:"
msgstr ""

# 6d41987f35474a95a529211fa6650615
#: ../../ref/forms/fields.txt:999
msgid "Creating custom fields"
msgstr ""

# f94423ea84014df5bcca553286187ff3
#: ../../ref/forms/fields.txt:1001
msgid ""
"If the built-in ``Field`` classes don't meet your needs, you can easily "
"create custom ``Field`` classes. To do this, just create a subclass of "
"``django.forms.Field``. Its only requirements are that it implement a ``clean"
"()`` method and that its ``__init__()`` method accept the core arguments "
"mentioned above (``required``, ``label``, ``initial``, ``widget``, "
"``help_text``)."
msgstr ""

# d017c1804f97416cae9595294f68f171
#: ../../ref/forms/index.txt:3
msgid "Forms"
msgstr ""

# 58218aa0912140c6b98963f09b269d93
#: ../../ref/forms/index.txt:5
msgid ""
"Detailed form API reference. For introductory material, see :doc:`/topics/"
"forms/index`."
msgstr ""

# 1c88f298bba64c6a89129673ca083f59
#: ../../ref/forms/validation.txt:2
msgid "Form and field validation"
msgstr ""

# 820ff8f555f94ac28dfe4261b8c74a8f
#: ../../ref/forms/validation.txt:6
msgid ""
"Form validation happens when the data is cleaned. If you want to customize "
"this process, there are various places you can change, each one serving a "
"different purpose. Three types of cleaning methods are run during form "
"processing. These are normally executed when you call the ``is_valid()`` "
"method on a form. There are other things that can trigger cleaning and "
"validation (accessing the ``errors`` attribute or calling ``full_clean()`` "
"directly), but normally they won't be needed."
msgstr ""

# 04936cbb43584edf8e584e044c1b35cb
#: ../../ref/forms/validation.txt:14
msgid ""
"In general, any cleaning method can raise ``ValidationError`` if there is a "
"problem with the data it is processing, passing the relevant error message "
"to the ``ValidationError`` constructor. If no ``ValidationError`` is raised, "
"the method should return the cleaned (normalized) data as a Python object."
msgstr ""

# 4b2c432ffb2046bcb9194ca4a5e88ac1
#: ../../ref/forms/validation.txt:19
msgid ""
"If you detect multiple errors during a cleaning method and wish to signal "
"all of them to the form submitter, it is possible to pass a list of errors "
"to the ``ValidationError`` constructor."
msgstr ""

# 01a983a0223f4586ace579a13cf32ca0
#: ../../ref/forms/validation.txt:23
msgid ""
"Most validation can be done using `validators`_ - simple helpers that can be "
"reused easily. Validators are simple functions (or callables) that take a "
"single argument and raise ``ValidationError`` on invalid input. Validators "
"are run after the field's ``to_python`` and ``validate`` methods have been "
"called."
msgstr ""

# 132418ce80f24b4da93e235b14d7b4b3
#: ../../ref/forms/validation.txt:28
msgid ""
"Validation of a Form is split into several steps, which can be customized or "
"overridden:"
msgstr ""

# 7fd2d36fcd0d42db828bd578dad60f7a
#: ../../ref/forms/validation.txt:31
msgid ""
"The ``to_python()`` method on a Field is the first step in every validation. "
"It coerces the value to correct datatype and raises ``ValidationError`` if "
"that is not possible. This method accepts the raw value from the widget and "
"returns the converted value. For example, a FloatField will turn the data "
"into a Python ``float`` or raise a ``ValidationError``."
msgstr ""

# 306f35c10dc244fdab2a72f121f931db
#: ../../ref/forms/validation.txt:38
msgid ""
"The ``validate()`` method on a Field handles field-specific validation that "
"is not suitable for a validator, It takes a value that has been coerced to "
"correct datatype and raises ``ValidationError`` on any error. This method "
"does not return anything and shouldn't alter the value. You should override "
"it to handle validation logic that you can't or don't want to put in a "
"validator."
msgstr ""

# 89c284e9593a441e9beb39a0a7cd93fc
#: ../../ref/forms/validation.txt:45
msgid ""
"The ``run_validators()`` method on a Field runs all of the field's "
"validators and aggregates all the errors into a single ``ValidationError``. "
"You shouldn't need to override this method."
msgstr ""

# 2e1de9160db644afa037a3f764952536
#: ../../ref/forms/validation.txt:49
msgid ""
"The ``clean()`` method on a Field subclass. This is responsible for running "
"``to_python``, ``validate`` and ``run_validators`` in the correct order and "
"propagating their errors. If, at any time, any of the methods raise "
"``ValidationError``, the validation stops and that error is raised. This "
"method returns the clean data, which is then inserted into the "
"``cleaned_data`` dictionary of the form."
msgstr ""

# f6e676d3dd724fdb85d889ea2535f628
#: ../../ref/forms/validation.txt:56
msgid ""
"The ``clean_<fieldname>()`` method in a form subclass -- where "
"``<fieldname>`` is replaced with the name of the form field attribute. This "
"method does any cleaning that is specific to that particular attribute, "
"unrelated to the type of field that it is. This method is not passed any "
"parameters. You will need to look up the value of the field in ``self."
"cleaned_data`` and remember that it will be a Python object at this point, "
"not the original string submitted in the form (it will be in "
"``cleaned_data`` because the general field ``clean()`` method, above, has "
"already cleaned the data once)."
msgstr ""

# 2b0a2d8da3b74fce97f6ffb11aabd17e
#: ../../ref/forms/validation.txt:66
msgid ""
"For example, if you wanted to validate that the contents of a ``CharField`` "
"called ``serialnumber`` was unique, ``clean_serialnumber()`` would be the "
"right place to do this. You don't need a specific field (it's just a "
"``CharField``), but you want a formfield-specific piece of validation and, "
"possibly, cleaning/normalizing the data."
msgstr ""

# 9c4d52554c5a47b38caab952b47ca740
#: ../../ref/forms/validation.txt:73
msgid ""
"Just like the general field ``clean()`` method, above, this method should "
"return the cleaned data, regardless of whether it changed anything or not."
msgstr ""

# 9d3a3cc0c9f343a3a8b40346c2284603
#: ../../ref/forms/validation.txt:77
msgid ""
"The Form subclass's ``clean()`` method. This method can perform any "
"validation that requires access to multiple fields from the form at once. "
"This is where you might put in things to check that if field ``A`` is "
"supplied, field ``B`` must contain a valid email address and the like. The "
"data that this method returns is the final ``cleaned_data`` attribute for "
"the form, so don't forget to return the full list of cleaned data if you "
"override this method (by default, ``Form.clean()`` just returns ``self."
"cleaned_data``)."
msgstr ""

# bbd12cb229ec457b8ebd01d0fb74d59e
#: ../../ref/forms/validation.txt:86
msgid ""
"Note that any errors raised by your ``Form.clean()`` override will not be "
"associated with any field in particular. They go into a special \"field"
"\" (called ``__all__``), which you can access via the ``non_field_errors()`` "
"method if you need to. If you want to attach errors to a specific field in "
"the form, you will need to access the ``_errors`` attribute on the form, "
"which is `described later`_."
msgstr ""

# 23a483c410594c699f823c3b6bfdae99
#: ../../ref/forms/validation.txt:93
msgid ""
"Also note that there are special considerations when overriding the ``clean()"
"`` method of a ``ModelForm`` subclass. (see the :ref:`ModelForm "
"documentation <overriding-modelform-clean-method>` for more information)"
msgstr ""

# e2abf1d34edd4ec38f3fa0be0e45cebb
#: ../../ref/forms/validation.txt:98
msgid ""
"These methods are run in the order given above, one field at a time.  That "
"is, for each field in the form (in the order they are declared in the form "
"definition), the ``Field.clean()`` method (or its override) is run, then "
"``clean_<fieldname>()``. Finally, once those two methods are run for every "
"field, the ``Form.clean()`` method, or its override, is executed."
msgstr ""

# c54d999b86984f8c9750c6f9494ed114
#: ../../ref/forms/validation.txt:104
msgid "Examples of each of these methods are provided below."
msgstr ""

# 7a8b4e4d7ee74914b863d12d332660e9
#: ../../ref/forms/validation.txt:106
msgid ""
"As mentioned, any of these methods can raise a ``ValidationError``. For any "
"field, if the ``Field.clean()`` method raises a ``ValidationError``, any "
"field-specific cleaning method is not called. However, the cleaning methods "
"for all remaining fields are still executed."
msgstr ""

# c495c2ced7474ad2b9e0cfadf66804d8
#: ../../ref/forms/validation.txt:111
msgid ""
"The ``clean()`` method for the ``Form`` class or subclass is always run. If "
"that method raises a ``ValidationError``, ``cleaned_data`` will be an empty "
"dictionary."
msgstr ""

# 202d82ce7f354c788f63d3859efd64f4
#: ../../ref/forms/validation.txt:115
msgid ""
"The previous paragraph means that if you are overriding ``Form.clean()``, "
"you should iterate through ``self.cleaned_data.items()``, possibly "
"considering the ``_errors`` dictionary attribute on the form as well. In "
"this way, you will already know which fields have passed their individual "
"validation requirements."
msgstr ""

# 021ff243d7ca4b6a8954c78fb3e2e33f
#: ../../ref/forms/validation.txt:123
msgid "Form subclasses and modifying field errors"
msgstr ""

# 384f0bbe12414d9eac9fedce8c75f04c
#: ../../ref/forms/validation.txt:125
msgid ""
"Sometimes, in a form's ``clean()`` method, you will want to add an error "
"message to a particular field in the form. This won't always be appropriate "
"and the more typical situation is to raise a ``ValidationError`` from ``Form."
"clean()``, which is turned into a form-wide error that is available through "
"the ``Form.non_field_errors()`` method."
msgstr ""

# 5443978b9abf41bcb680e356c318250c
#: ../../ref/forms/validation.txt:131
msgid ""
"When you really do need to attach the error to a particular field, you "
"should store (or amend) a key in the ``Form._errors`` attribute. This "
"attribute is an instance of a ``django.forms.util.ErrorDict`` class. "
"Essentially, though, it's just a dictionary. There is a key in the "
"dictionary for each field in the form that has an error. Each value in the "
"dictionary is a ``django.forms.util.ErrorList`` instance, which is a list "
"that knows how to display itself in different ways. So you can treat "
"``_errors`` as a dictionary mapping field names to lists."
msgstr ""

# 7fdf38872951413580971ea8c34dede0
#: ../../ref/forms/validation.txt:140
msgid ""
"If you want to add a new error to a particular field, you should check "
"whether the key already exists in ``self._errors`` or not. If not, create a "
"new entry for the given key, holding an empty ``ErrorList`` instance. In "
"either case, you can then append your error message to the list for the "
"field name in question and it will be displayed when the form is displayed."
msgstr ""

# 564e1332f8ca43c7bdaa5ec4b67e38ef
#: ../../ref/forms/validation.txt:146
msgid ""
"There is an example of modifying ``self._errors`` in the following section."
msgstr ""

# a3c489c1334b4690964dd03212f651ca
#: ../../ref/forms/validation.txt:150
msgid ""
"You may be wondering why is this attribute called ``_errors`` and not "
"``errors``. Normal Python practice is to prefix a name with an underscore if "
"it's not for external usage. In this case, you are subclassing the ``Form`` "
"class, so you are essentially writing new internals. In effect, you are "
"given permission to access some of the internals of ``Form``."
msgstr ""

# 22f19a05a9eb40cebe8f4ea217784039
#: ../../ref/forms/validation.txt:156
msgid ""
"Of course, any code outside your form should never access ``_errors`` "
"directly. The data is available to external code through the ``errors`` "
"property, which populates ``_errors`` before returning it)."
msgstr ""

# b9780b8277bd43f1b6d02ff7c0031467
#: ../../ref/forms/validation.txt:160
msgid ""
"Another reason is purely historical: the attribute has been called "
"``_errors`` since the early days of the forms module and changing it now "
"(particularly since ``errors`` is used for the read-only property name) "
"would be inconvenient for a number of reasons. You can use whichever "
"explanation makes you feel more comfortable. The result is the same."
msgstr ""

# c618869110024e0c958207bb4e525695
#: ../../ref/forms/validation.txt:167
msgid "Using validation in practice"
msgstr ""

# 3f071144518345b1a37d17532ece5788
#: ../../ref/forms/validation.txt:169
msgid ""
"The previous sections explained how validation works in general for forms. "
"Since it can sometimes be easier to put things into place by seeing each "
"feature in use, here are a series of small examples that use each of the "
"previous features."
msgstr ""

# 211e512586ae4fee90318e16badd195a
#: ../../ref/forms/validation.txt:177
msgid "Using validators"
msgstr ""

# db6e148ac5984dfda31caebaad9e0277
#: ../../ref/forms/validation.txt:180
msgid ""
"Django's form (and model) fields support use of simple utility functions and "
"classes known as validators. These can be passed to a field's constructor, "
"via the field's ``validators`` argument, or defined on the Field class "
"itself with the ``default_validators`` attribute."
msgstr ""

# 44d4069b168f4a8d87c197ec851c3bb0
#: ../../ref/forms/validation.txt:185
msgid ""
"Simple validators can be used to validate values inside the field, let's "
"have a look at Django's ``EmailField``::"
msgstr ""

# f360514230d6423a90d7a013fddebf49
#: ../../ref/forms/validation.txt:194
msgid ""
"As you can see, ``EmailField`` is just a ``CharField`` with customized error "
"message and a validator that validates email addresses. This can also be "
"done on field definition so::"
msgstr ""

# c98b3d3bf84249d3b2556484b8f91ac6
#: ../../ref/forms/validation.txt:200
msgid "is equivalent to::"
msgstr ""

# 5787c78c9abc4d69829aa113ca824d7c
#: ../../ref/forms/validation.txt:207
msgid "Form field default cleaning"
msgstr ""

# bc82bb4b1165408cae60a075aa61e18f
#: ../../ref/forms/validation.txt:209
msgid ""
"Let's firstly create a custom form field that validates its input is a "
"string containing comma-separated email addresses. The full class looks like "
"this::"
msgstr ""

# 8f47306d6ad24e5fbc4afe457f79606a
#: ../../ref/forms/validation.txt:233
msgid ""
"Every form that uses this field will have these methods run before anything "
"else can be done with the field's data. This is cleaning that is specific to "
"this type of field, regardless of how it is subsequently used."
msgstr ""

# d160fba66c094fa9ae4901e1dfb234da
#: ../../ref/forms/validation.txt:237
msgid ""
"Let's create a simple ``ContactForm`` to demonstrate how you'd use this "
"field::"
msgstr ""

# 801cdc5b7b1647bb83fab0f36f6ed814
#: ../../ref/forms/validation.txt:247
msgid ""
"Simply use ``MultiEmailField`` like any other form field. When the ``is_valid"
"()`` method is called on the form, the ``MultiEmailField.clean()`` method "
"will be run as part of the cleaning process and it will, in turn, call the "
"custom ``to_python()`` and ``validate()`` methods."
msgstr ""

# a1e85a06511848dcbedac839b933fd58
#: ../../ref/forms/validation.txt:253
msgid "Cleaning a specific field attribute"
msgstr ""

# 283e62757d194beaba559d785ad2d85f
#: ../../ref/forms/validation.txt:255
msgid ""
"Continuing on from the previous example, suppose that in our "
"``ContactForm``, we want to make sure that the ``recipients`` field always "
"contains the address ``\"fred@example.com\"``. This is validation that is "
"specific to our form, so we don't want to put it into the general "
"``MultiEmailField`` class. Instead, we write a cleaning method that operates "
"on the ``recipients`` field, like so::"
msgstr ""

# ef684f656101494dac130ee83d2d8479
#: ../../ref/forms/validation.txt:275
msgid "Cleaning and validating fields that depend on each other"
msgstr ""

# 8c0b3442191c4316afdce0faa2324005
#: ../../ref/forms/validation.txt:277
msgid ""
"Suppose we add another requirement to our contact form: if the ``cc_myself`` "
"field is ``True``, the ``subject`` must contain the word ``\"help\"``. We "
"are performing validation on more than one field at a time, so the form's "
"``clean()`` method is a good spot to do this. Notice that we are talking "
"about the ``clean()`` method on the form here, whereas earlier we were "
"writing a ``clean()`` method on a field. It's important to keep the field "
"and form difference clear when working out where to validate things. Fields "
"are single data points, forms are a collection of fields."
msgstr ""

# ba575220c7344ec6b2542b23b5db55ad
#: ../../ref/forms/validation.txt:286
msgid ""
"By the time the form's ``clean()`` method is called, all the individual "
"field clean methods will have been run (the previous two sections), so "
"``self.cleaned_data`` will be populated with any data that has survived so "
"far. So you also need to remember to allow for the fact that the fields you "
"are wanting to validate might not have survived the initial individual field "
"checks."
msgstr ""

# 6108eb64204540cf862345b9fa38aa1b
#: ../../ref/forms/validation.txt:293
msgid ""
"There are two ways to report any errors from this step. Probably the most "
"common method is to display the error at the top of the form. To create such "
"an error, you can raise a ``ValidationError`` from the ``clean()`` method. "
"For example::"
msgstr ""

# a264aa7fd8bb445da286607234f9f45d
#: ../../ref/forms/validation.txt:316
msgid ""
"In this code, if the validation error is raised, the form will display an "
"error message at the top of the form (normally) describing the problem."
msgstr ""

# 29089909ed17407097b17f73f8bf2801
#: ../../ref/forms/validation.txt:319
msgid ""
"Note that the call to ``super(ContactForm, self).clean()`` in the example "
"code ensures that any validation logic in parent classes is maintained."
msgstr ""

# f82dec71b51842aaae5ff815c91b9ba7
#: ../../ref/forms/validation.txt:322
msgid ""
"The second approach might involve assigning the error message to one of the "
"fields. In this case, let's assign an error message to both the \"subject\" "
"and \"cc_myself\" rows in the form display. Be careful when doing this in "
"practice, since it can lead to confusing form output. We're showing what is "
"possible here and leaving it up to you and your designers to work out what "
"works effectively in your particular situation. Our new code (replacing the "
"previous sample) looks like this::"
msgstr ""

# 6425722d27ea4a72bbdb56e056543013
#: ../../ref/forms/validation.txt:354
msgid ""
"As you can see, this approach requires a bit more effort, not withstanding "
"the extra design effort to create a sensible form display. The details are "
"worth noting, however. Firstly, earlier we mentioned that you might need to "
"check if the field name keys already exist in the ``_errors`` dictionary. In "
"this case, since we know the fields exist in ``self.cleaned_data``, they "
"must have been valid when cleaned as individual fields, so there will be no "
"corresponding entries in ``_errors``."
msgstr ""

# 2c22a8ab9c69472e8e351a6bb5c7d526
#: ../../ref/forms/validation.txt:362
msgid ""
"Secondly, once we have decided that the combined data in the two fields we "
"are considering aren't valid, we must remember to remove them from the "
"``cleaned_data``."
msgstr ""

# cc544cf3ac8d432fa97bc565477c304f
#: ../../ref/forms/validation.txt:366
msgid ""
"In fact, Django will currently completely wipe out the ``cleaned_data`` "
"dictionary if there are any errors in the form. However, this behavior may "
"change in the future, so it's not a bad idea to clean up after yourself in "
"the first place."
msgstr ""

# ab592557cafa4728971ba0fafc5ebde9
#: ../../ref/forms/widgets.txt:3
msgid "Widgets"
msgstr ""

# 2399a5170b5a4eb5b5215fc674e4c643
#: ../../ref/forms/widgets.txt:10
msgid ""
"A widget is Django's representation of a HTML input element. The widget "
"handles the rendering of the HTML, and the extraction of data from a GET/"
"POST dictionary that corresponds to the widget."
msgstr ""

# 31818648ab99417684acbcd0121317e3
#: ../../ref/forms/widgets.txt:15
msgid "Specifying widgets"
msgstr ""

# f5005b6cbd0d4cd4ad1b3d35a40012f4
#: ../../ref/forms/widgets.txt:17
msgid ""
"Whenever you specify a field on a form, Django will use a default widget "
"that is appropriate to the type of data that is to be displayed. To find "
"which widget is used on which field, see the documentation about :ref:`built-"
"in fields`."
msgstr ""

# 93796066c5874056aee2ab83bf1c3a35
#: ../../ref/forms/widgets.txt:22
msgid ""
"However, if you want to use a different widget for a field, you can just use "
"the :attr:`~Field.widget` argument on the field definition. For example::"
msgstr ""

# 6fd8336d0e054f9bbf65d14d3cac76f2
#: ../../ref/forms/widgets.txt:33
msgid ""
"This would specify a form with a comment that uses a larger :class:"
"`Textarea` widget, rather than the default :class:`TextInput` widget."
msgstr ""

# 9cf0fee6d71b40d88f1a2eed076092ed
#: ../../ref/forms/widgets.txt:38
msgid "Setting arguments for widgets"
msgstr ""

# 2dc085dd147f45daa56d9dcd78c2fece
#: ../../ref/forms/widgets.txt:40
msgid ""
"Many widgets have optional extra arguments; they can be set when defining "
"the widget on the field. In the following example, the :attr:"
"`~SelectDateWidget.years` attribute is set for a :class:`~django.forms."
"extras.widgets.SelectDateWidget`::"
msgstr ""

# 566310460be8492899e3b466dd9ae0d6
#: ../../ref/forms/widgets.txt:61
msgid ""
"See the :ref:`built-in widgets` for more information about which widgets are "
"available and which arguments they accept."
msgstr ""

# 10786a4c1bb3436f8c76842f338c77a9
#: ../../ref/forms/widgets.txt:66
msgid "Widgets inheriting from the Select widget"
msgstr ""

# da64b1933e594254afc3bd7ae4a1ee83
#: ../../ref/forms/widgets.txt:68
msgid ""
"Widgets inheriting from the :class:`Select` widget deal with choices. They "
"present the user with a list of options to choose from. The different "
"widgets present this choice differently; the :class:`Select` widget itself "
"uses a ``<select>`` HTML list representation, while :class:`RadioSelect` "
"uses radio buttons."
msgstr ""

# 3fca6d28c56145a0b1858469543f2701
#: ../../ref/forms/widgets.txt:74
msgid ""
":class:`Select` widgets are used by default on :class:`ChoiceField` fields. "
"The choices displayed on the widget are inherited from the :class:"
"`ChoiceField` and changing :attr:`ChoiceField.choices` will update :attr:"
"`Select.choices`. For example::"
msgstr ""

# 5d8788b116e2442c9164ccca4dd91e17
#: ../../ref/forms/widgets.txt:92
msgid ""
"Widgets which offer a :attr:`~Select.choices` attribute can however be used "
"with fields which are not based on choice -- such as a :class:`CharField` -- "
"but it is recommended to use a :class:`ChoiceField`-based field when the "
"choices are inherent to the model and not just the representational widget."
msgstr ""

# 427675d6fa524e288e49ba127798102d
#: ../../ref/forms/widgets.txt:98
msgid "Customizing widget instances"
msgstr ""

# 85a7a5ceac1342448ff0994da7178084
#: ../../ref/forms/widgets.txt:100
msgid ""
"When Django renders a widget as HTML, it only renders the bare minimum HTML "
"- Django doesn't add a class definition, or any other widget-specific "
"attributes. This means that all :class:`TextInput` widgets will appear the "
"same on your Web page."
msgstr ""

# a12332128f76440b904c9fdd1c0e4e3b
#: ../../ref/forms/widgets.txt:105
msgid ""
"If you want to make one widget look different to another, you need to "
"specify additional attributes for each widget. When you specify a widget, "
"you can provide a list of attributes that will be added to the rendered HTML "
"for the widget."
msgstr ""

# 7e6bb436373d406084bd5147820b0547
#: ../../ref/forms/widgets.txt:110
msgid "For example, take the following simple form::"
msgstr ""

# 5568b9d1e0aa4ef18fbd10db6a52d85a
#: ../../ref/forms/widgets.txt:119
msgid ""
"This form will include three default :class:`TextInput` widgets, with "
"default rendering -- no CSS class, no extra attributes. This means that the "
"input boxes provided for each widget will be rendered exactly the same::"
msgstr ""

# e01b8845017541ea98b40e0d0436f077
#: ../../ref/forms/widgets.txt:129
msgid ""
"On a real Web page, you probably don't want every widget to look the same. "
"You might want a larger input element for the comment, and you might want "
"the 'name' widget to have some special CSS class. To do this, you use the :"
"attr:`Widget.attrs` argument when creating the widget:"
msgstr ""

# bf5f34308f5848729cd476123ef3f14f
#: ../../ref/forms/widgets.txt:143
msgid "Django will then include the extra attributes in the rendered output:"
msgstr ""

# a23464ada2ad467b8dcef22ac24ae021
#: ../../ref/forms/widgets.txt:154
msgid "Built-in widgets"
msgstr ""

# 13ce2c425a404337a2fff69d5d677815
#: ../../ref/forms/widgets.txt:156
msgid ""
"Django provides a representation of all the basic HTML widgets, plus some "
"commonly used groups of widgets:"
msgstr ""

# dbbef378674f4fe3924782016fadc0cb
#: ../../ref/forms/widgets.txt:160
msgid "``Widget``"
msgstr ""

# 911b544707c34956abe3f0d57e8793a7
#: ../../ref/forms/widgets.txt:164
msgid ""
"This abstract class cannot be rendered, but provides the basic attribute :"
"attr:`~Widget.attrs`."
msgstr ""

# 7ef6bea6056942bd933b7ed25f541e84
#: ../../ref/forms/widgets.txt:168
msgid ""
"A dictionary containing HTML attributes to be set on the rendered widget."
msgstr ""

# 2ed380c63110454cb451cab5de40ce56
#: ../../ref/forms/widgets.txt:177
msgid "``TextInput``"
msgstr ""

# 1c03ea39fdca450a952e823d81a5f0a0
#: ../../ref/forms/widgets.txt:181
msgid "Text input: ``<input type='text' ...>``"
msgstr ""

# eb1c3aff8cac42c988ebb605a47412e1
#: ../../ref/forms/widgets.txt:184
msgid "``PasswordInput``"
msgstr ""

# b955a91d881c478f9e36cdbfee190194
#: ../../ref/forms/widgets.txt:188
msgid "Password input: ``<input type='password' ...>``"
msgstr ""

# 46b7f4e1edb6427a9a3d5a687185b766
#: ../../ref/forms/widgets.txt:194
msgid ""
"Determines whether the widget will have a value filled in when the form is "
"re-displayed after a validation error (default is ``False``)."
msgstr ""

# c57e71dd828b4922acd67e0fdd0fa31d
#: ../../ref/forms/widgets.txt:203
msgid "``HiddenInput``"
msgstr ""

# 067aa5c83ec444b2a20c2b3bc5a107c9
#: ../../ref/forms/widgets.txt:207
msgid "Hidden input: ``<input type='hidden' ...>``"
msgstr ""

# 23f1e385eea84f87bfa4b3301801d95c
#: ../../ref/forms/widgets.txt:210
msgid "``MultipleHiddenInput``"
msgstr ""

# 0822be26f6fd4a74a5eeb40906a25617
#: ../../ref/forms/widgets.txt:214
msgid "Multiple ``<input type='hidden' ...>`` widgets."
msgstr ""

# 581ae088f82a4056bf7887be8d506e46
#: ../../ref/forms/widgets.txt:216
msgid ""
"A widget that handles multiple hidden widgets for fields that have a list of "
"values."
msgstr ""

# 74962247654e42a19b92b0b70ed267ea
# 9711ba8600dc4d72b7d821b8b3e97418
#: ../../ref/forms/widgets.txt:221 ../../ref/forms/widgets.txt:324
msgid ""
"This attribute is optional when the field does not have a :attr:`~Field."
"choices` attribute. If it does, it will override anything you set here when "
"the attribute is updated on the :class:`Field`."
msgstr ""

# 8d2f76845bad4414b4feff2f0b4a103f
#: ../../ref/forms/widgets.txt:226
msgid "``FileInput``"
msgstr ""

# 098400feb3f24c4b8e7c8b5fe860e3d5
#: ../../ref/forms/widgets.txt:230
msgid "File upload input: ``<input type='file' ...>``"
msgstr ""

# 528d7d90633343cc9a8c316e4c758f23
#: ../../ref/forms/widgets.txt:233
msgid "``ClearableFileInput``"
msgstr ""

# 9ebe4073be204e3a9438240d785c3f32
#: ../../ref/forms/widgets.txt:239
msgid ""
"File upload input: ``<input type='file' ...>``, with an additional checkbox "
"input to clear the field's value, if the field is not required and has "
"initial data."
msgstr ""

# 77a83837abf14eba828f5307c1202e44
#: ../../ref/forms/widgets.txt:244
msgid "``DateInput``"
msgstr ""

# e7a7c605d803411884a50bc78df803de
#: ../../ref/forms/widgets.txt:248
msgid "Date input as a simple text box: ``<input type='text' ...>``"
msgstr ""

# 1b5de5eeacb84c8e9d3bb1ad69b1a24e
# c990a2c5e78e46c0b925fc97b7f886bf
# fab8a21bd6ac419492f2e9345719aaed
#: ../../ref/forms/widgets.txt:254 ../../ref/forms/widgets.txt:271
#: ../../ref/forms/widgets.txt:288
msgid "The format in which this field's initial value will be displayed."
msgstr ""

# 9bd563cad4f144f399c833553a5152f2
#: ../../ref/forms/widgets.txt:256
msgid ""
"If no ``format`` argument is provided, the default format is the first "
"format found in :setting:`DATE_INPUT_FORMATS` and respects :ref:`format-"
"localization`."
msgstr ""

# b37903e34a4d47b5a6c27555ea3c9d5c
#: ../../ref/forms/widgets.txt:261
msgid "``DateTimeInput``"
msgstr ""

# 3458929bc9bc453cae4e862d7ece235f
#: ../../ref/forms/widgets.txt:265
msgid "Date/time input as a simple text box: ``<input type='text' ...>``"
msgstr ""

# 747607fb47bf4ad4a0000bd3febbcaaf
#: ../../ref/forms/widgets.txt:273
msgid ""
"If no ``format`` argument is provided, the default format is the first "
"format found in :setting:`DATETIME_INPUT_FORMATS` and respects :ref:`format-"
"localization`."
msgstr ""

# e6bc7856f3a04f63af6dc010d226691c
#: ../../ref/forms/widgets.txt:278
msgid "``TimeInput``"
msgstr ""

# e7165d1a6f084f978f8de20bae54d2e4
#: ../../ref/forms/widgets.txt:282
msgid "Time input as a simple text box: ``<input type='text' ...>``"
msgstr ""

# 0301e817189c4b63a521bc68c2bf8a4b
#: ../../ref/forms/widgets.txt:290
msgid ""
"If no ``format`` argument is provided, the default format is the first "
"format found in :setting:`TIME_INPUT_FORMATS` and respects :ref:`format-"
"localization`."
msgstr ""

# f5d34f716c344909a2545a4fea19dd96
#: ../../ref/forms/widgets.txt:295
msgid "``Textarea``"
msgstr ""

# c1db78e73a794a829cef7a67af73f03d
#: ../../ref/forms/widgets.txt:299
msgid "Text area: ``<textarea>...</textarea>``"
msgstr ""

# 4d8291ceed484fe4a0dd8a2f008e38eb
#: ../../ref/forms/widgets.txt:302
msgid "``CheckboxInput``"
msgstr ""

# 7396e24ecdb34e2baa7b3095f2083f32
#: ../../ref/forms/widgets.txt:306
msgid "Checkbox: ``<input type='checkbox' ...>``"
msgstr ""

# c959d51803474eeeb3043c49508bbef3
#: ../../ref/forms/widgets.txt:312
msgid ""
"A callable that takes the value of the CheckBoxInput and returns ``True`` if "
"the checkbox should be checked for that value."
msgstr ""

# 561d244eb5914de3b1d1705d7aa41691
#: ../../ref/forms/widgets.txt:316
msgid "``Select``"
msgstr ""

# dcebe51a71d44a78b6e89133562e3132
#: ../../ref/forms/widgets.txt:320
msgid "Select widget: ``<select><option ...>...</select>``"
msgstr ""

# a407b7020c5341699f87de652f18919a
#: ../../ref/forms/widgets.txt:329
msgid "``NullBooleanSelect``"
msgstr ""

# 084fc8d98df54f5c8d311fb0e49eaadc
#: ../../ref/forms/widgets.txt:333
msgid "Select widget with options 'Unknown', 'Yes' and 'No'"
msgstr ""

# 4e55cc50929e40749c337ae1d63c1391
#: ../../ref/forms/widgets.txt:336
msgid "``SelectMultiple``"
msgstr ""

# ee68b747ca604b37b767ab4890bf4138
#: ../../ref/forms/widgets.txt:340
msgid ""
"Similar to :class:`Select`, but allows multiple selection: ``<select "
"multiple='multiple'>...</select>``"
msgstr ""

# 549427c12b3543ebb729707a5a68bae5
#: ../../ref/forms/widgets.txt:344
msgid "``RadioSelect``"
msgstr ""

# dcaa78ca62d446cfad745a81c6236b7b
#: ../../ref/forms/widgets.txt:348
msgid ""
"Similar to :class:`Select`, but rendered as a list of radio buttons within "
"``<li>`` tags:"
msgstr ""

# d91e702c846a4b028aba9739a2dbf6f3
#: ../../ref/forms/widgets.txt:360
msgid ""
"For more granular control over the generated markup, you can loop over the "
"radio buttons in the template. Assuming a form ``myform`` with a field "
"``beatles`` that uses a ``RadioSelect`` as its widget:"
msgstr ""

# 12a4a5e93c89404a9c236305c1f4b5b5
#: ../../ref/forms/widgets.txt:372
msgid "This would generate the following HTML:"
msgstr ""

# 064b795ccd35411bb392bb60a718d7c7
#: ../../ref/forms/widgets.txt:389
msgid ""
"That included the ``<label>`` tags. To get more granular, you can use each "
"radio button's ``tag`` and ``choice_label`` attributes. For example, this "
"template..."
msgstr ""

# cec7198d80f14dffbbf5c47e68bc1983
#: ../../ref/forms/widgets.txt:401
msgid "...will result in the following HTML:"
msgstr ""

# 4da1e20b29ee41a89a4617ea306fc1a4
#: ../../ref/forms/widgets.txt:422
msgid ""
"If you decide not to loop over the radio buttons -- e.g., if your template "
"simply includes ``{{ myform.beatles }}`` -- they'll be output in a ``<ul>`` "
"with ``<li>`` tags, as above."
msgstr ""

# 3c02d3ea3f0447e7a5305bc7c6dc91fa
#: ../../ref/forms/widgets.txt:426
msgid "``CheckboxSelectMultiple``"
msgstr ""

# 8089b8e3554045eaaaff30f3591ad6e2
#: ../../ref/forms/widgets.txt:430
msgid ""
"Similar to :class:`SelectMultiple`, but rendered as a list of check buttons:"
msgstr ""

# 740f515bdc0b498da8b936e119d7de57
#: ../../ref/forms/widgets.txt:441
msgid "``MultiWidget``"
msgstr ""

# 263a3286a2444025a4c65cd5094ccd7e
#: ../../ref/forms/widgets.txt:445
msgid ""
"Wrapper around multiple other widgets. You'll probably want to use this "
"class with :class:`MultiValueField`."
msgstr ""

# 379f22b6e47542448b502463bee27308
#: ../../ref/forms/widgets.txt:448
msgid ""
"Its ``render()`` method is different than other widgets', because it has to "
"figure out how to split a single value for display in multiple widgets."
msgstr ""

# db0a007584514791bbb49a94bdd25142
#: ../../ref/forms/widgets.txt:451
msgid ""
"Subclasses may implement ``format_output``, which takes the list of rendered "
"widgets and returns a string of HTML that formats them any way you'd like."
msgstr ""

# 205b5da1136845028ff943bab9e1ff11
#: ../../ref/forms/widgets.txt:455
msgid "The ``value`` argument used when rendering can be one of two things:"
msgstr ""

# b77ecbb389ff45519e6bf92384966c79
#: ../../ref/forms/widgets.txt:457
msgid "A ``list``."
msgstr ""

# ff77660eda4642eda2f0073356d221c3
#: ../../ref/forms/widgets.txt:458
msgid ""
"A single value (e.g., a string) that is the \"compressed\" representation of "
"a ``list`` of values."
msgstr ""

# 9d5401feebda45a0973b780cdbded1ce
#: ../../ref/forms/widgets.txt:461
msgid ""
"In the second case -- i.e., if the value is *not* a list -- ``render()`` "
"will first decompress the value into a ``list`` before rendering it. It does "
"so by calling the ``decompress()`` method, which :class:`MultiWidget`'s "
"subclasses must implement. This method takes a single \"compressed\" value "
"and returns a ``list``. An example of this is how :class:"
"`SplitDateTimeWidget` turns a :class:`datetime` value into a list with date "
"and time split into two seperate values::"
msgstr ""

# 60402e655ca6426088dc1f49324a286c
#: ../../ref/forms/widgets.txt:478
msgid ""
"When ``render()`` executes its HTML rendering, each value in the list is "
"rendered with the corresponding widget -- the first value is rendered in the "
"first widget, the second value is rendered in the second widget, etc."
msgstr ""

# e6500ff8da5f4ca0b1ea41830ee6ff81
#: ../../ref/forms/widgets.txt:482
msgid ":class:`MultiWidget` has one required argument:"
msgstr ""

# ed9e3e1568d4484986b4ebba3f670a6e
#: ../../ref/forms/widgets.txt:486
msgid "An iterable containing the widgets needed."
msgstr ""

# 8349c465871745db95e6a5c6e1eb9907
#: ../../ref/forms/widgets.txt:489
msgid "``SplitDateTimeWidget``"
msgstr ""

# 00086d0798344c978258601a5626eb3a
#: ../../ref/forms/widgets.txt:493
msgid ""
"Wrapper (using :class:`MultiWidget`) around two widgets: :class:`DateInput` "
"for the date, and :class:`TimeInput` for the time."
msgstr ""

# fb557fccbbfb435b8d74b16b9ce9bbae
#: ../../ref/forms/widgets.txt:496
msgid "``SplitDateTimeWidget`` has two optional attributes:"
msgstr ""

# dde58142bd6d4139a1b421f2cb76ca26
#: ../../ref/forms/widgets.txt:500
msgid "Similar to :attr:`DateInput.format`"
msgstr ""

# bae502cf055a490e83c31dff84ab68a5
#: ../../ref/forms/widgets.txt:504
msgid "Similar to :attr:`TimeInput.format`"
msgstr ""

# f82cdd852a5d439fbdcb21093584c8ad
#: ../../ref/forms/widgets.txt:507
msgid "``SplitHiddenDateTimeWidget``"
msgstr ""

# 21133b0ef0f140a790d4c397b009e6fa
#: ../../ref/forms/widgets.txt:511
msgid ""
"Similar to :class:`SplitDateTimeWidget`, but uses :class:`HiddenInput` for "
"both date and time."
msgstr ""

# b89fa92c173449a0abaa00bda6bb17be
#: ../../ref/forms/widgets.txt:517
msgid "``SelectDateWidget``"
msgstr ""

# a49218d83e824ed780b2058f8dc5e240
#: ../../ref/forms/widgets.txt:521
msgid ""
"Wrapper around three :class:`~django.forms.Select` widgets: one each for "
"month, day, and year. Note that this widget lives in a separate file from "
"the standard widgets."
msgstr ""

# e6526ec4de0d469993c19a916b07244a
#: ../../ref/forms/widgets.txt:529
msgid ""
"An optional list/tuple of years to use in the \"year\" select box. The "
"default is a list containing the current year and the next 9 years."
msgstr ""

# a1384a10fbb64ecb96c9ebf109c2c480
#: ../../ref/generic-views.txt:10
msgid ""
"From Django 1.3, function-based generic views have been deprecated in favor "
"of a class-based approach, described in the class-based views :doc:`topic "
"guide </topics/class-based-views>` and :doc:`detailed reference </ref/class-"
"based-views>`."
msgstr ""

# 13478a737725497ebed914063b8f5a47
#: ../../ref/generic-views.txt:15
msgid ""
"Writing Web applications can be monotonous, because we repeat certain "
"patterns again and again. In Django, the most common of these patterns have "
"been abstracted into \"generic views\" that let you quickly provide common "
"views of an object without actually needing to write any Python code."
msgstr ""

# c64f925dd29d4440861322d9c55ae5f9
#: ../../ref/generic-views.txt:20
msgid ""
"A general introduction to generic views can be found in the :doc:`topic "
"guide </topics/generic-views>`."
msgstr ""

# 56f45cf9e0ac4c679eb63edf275a313d
#: ../../ref/generic-views.txt:23
msgid ""
"This reference contains details of Django's built-in generic views, along "
"with a list of all keyword arguments that a generic view expects. Remember "
"that arguments may either come from the URL pattern or from the "
"``extra_context`` additional-information dictionary."
msgstr ""

# d416ace4f5924ec288ef9248428f199a
#: ../../ref/generic-views.txt:35
msgid "\"Simple\" generic views"
msgstr ""

# c53bc7ff3aa54d3cab7fea23d3989745
#: ../../ref/generic-views.txt:37
msgid ""
"The ``django.views.generic.simple`` module contains simple views to handle a "
"couple of common cases: rendering a template when no view logic is needed, "
"and issuing a redirect."
msgstr ""

# de4078bb42e84112842c7b074c236e18
#: ../../ref/generic-views.txt:42
msgid "``django.views.generic.simple.direct_to_template``"
msgstr ""

# d2caba96bd16460d88ddda226bcf9f7d
# 6b75aadf7d2340a38e97c55d97476ac5
# 5d75027acbb14a1987bdd67c34de9ede
# 046ee5b1bf2e46c581dbb8a09b496777
# df98aa748b614fffa25775237e23b204
# cbb49dacc66146ae95f3d8b50234a011
# 8369c088bd634e839531457521471bf8
# 00db456ae53744a0836b9846b8c988de
# 9f922126161a4cce9c3fc5730feb4294
# bc59bff84cf24dab8f3d18f24f33f36e
# a8092f8acace4dc89a7a8c2654e9616b
# fa83287f37884cb883d4ab57c9c32eff
# dddf80433c6449f7bf6b69cf26014688
# 0000297f81cb4a0db783d91abaffc918
#: ../../ref/generic-views.txt:44 ../../ref/generic-views.txt:81
#: ../../ref/generic-views.txt:162 ../../ref/generic-views.txt:243
#: ../../ref/generic-views.txt:328 ../../ref/generic-views.txt:421
#: ../../ref/generic-views.txt:493 ../../ref/generic-views.txt:583
#: ../../ref/generic-views.txt:592 ../../ref/generic-views.txt:695
#: ../../ref/generic-views.txt:807 ../../ref/generic-views.txt:880
#: ../../ref/generic-views.txt:954 ../../ref/generic-views.txt:1048
msgid "**Description:**"
msgstr ""

# cec6f87d469d4876a99566f5398341dd
# b5eed6ec1f444ecf9d9415a9e6bb6780
# 664c40af0a8a4cb4b6a0fe1b3aab7370
# 04e5225a874f40b1a62b5a3dacd94a8a
# 25275c026aba401a9be21eab63aa1eee
# ae4b9b7e9d8f4a76a8b64aa2a146a8df
# e021d1d106be4121bd2b20f23d73a77e
# a46ecd9f53ac487cb84dfb07c7b20aec
# 133dbbdc520b4078b4ade396ff3879e3
# bb958a55f78142ca8b754b49791e9776
# 6b81ae48f1ab482bad62b70b0fcd837d
# 848f16675831489bb700fd1a34bdef30
# 718a01745beb4b5bba09360e99b16015
#: ../../ref/generic-views.txt:49 ../../ref/generic-views.txt:93
#: ../../ref/generic-views.txt:168 ../../ref/generic-views.txt:249
#: ../../ref/generic-views.txt:334 ../../ref/generic-views.txt:426
#: ../../ref/generic-views.txt:499 ../../ref/generic-views.txt:598
#: ../../ref/generic-views.txt:699 ../../ref/generic-views.txt:811
#: ../../ref/generic-views.txt:885 ../../ref/generic-views.txt:961
#: ../../ref/generic-views.txt:1055
msgid "**Required arguments:**"
msgstr ""

# 485ecadf8a3945dd8410e4dc76b2b6ad
#: ../../ref/generic-views.txt:51
msgid "``template``: The full name of a template to use."
msgstr ""

# 4ee6346fb9044b5c9441113c7b19a44c
# 89b5b28c1a8c4cb59349091b6996f916
# f14a16002a9f4fa78837afac660035f7
# f3442f4c13314e9f9e2efd3632ec7676
# 703bed98c11d4aa3b9418a06614b79b3
# 344bb4b573314f2db418c56d9e8d2100
# 8364790fd9c1488b9bb5d146fad04711
# 5e906961e5624bb4b05200251ba5cf27
# 8436fe0cbf014090ba3f4068f9a7b4f6
# 58fc7cc3618f46ab957f85ee9673bd3b
# 2fc9ba3089cc4fcc90aa85418b300acc
# 924b21fa3e444963b887abd711512262
# e56a7146f64b4816a632e28eb947769b
#: ../../ref/generic-views.txt:53 ../../ref/generic-views.txt:98
#: ../../ref/generic-views.txt:176 ../../ref/generic-views.txt:259
#: ../../ref/generic-views.txt:347 ../../ref/generic-views.txt:439
#: ../../ref/generic-views.txt:515 ../../ref/generic-views.txt:623
#: ../../ref/generic-views.txt:703 ../../ref/generic-views.txt:824
#: ../../ref/generic-views.txt:897 ../../ref/generic-views.txt:982
#: ../../ref/generic-views.txt:1072
msgid "**Optional arguments:**"
msgstr ""

# b67b3aeeb85b4db0b8a594899c41bfbc
# 7af636475c4a44299b40e14e3d4c7943
# 84ad0026f3c047a996fb80b29cf5634e
# def71f055c014575b61f9e58aceae776
# e62a3e8727f241789f7cce20b2cf9545
# e252839bcb664fa08dd175003ccb1c92
# 3890df275d464531ac3e2ef113152fea
# 015637f3e9574a258e1c5108659481ca
# 77bc487bc5f44f07973e795d001c958e
# 8a04d1a490564c66b5f8bc3ffb2e6892
# c88407885df74f22abaa2d93a68f6ed8
# d8944320c7504a6cbca980bb187250a7
#: ../../ref/generic-views.txt:55 ../../ref/generic-views.txt:187
#: ../../ref/generic-views.txt:267 ../../ref/generic-views.txt:361
#: ../../ref/generic-views.txt:447 ../../ref/generic-views.txt:532
#: ../../ref/generic-views.txt:649 ../../ref/generic-views.txt:720
#: ../../ref/generic-views.txt:841 ../../ref/generic-views.txt:920
#: ../../ref/generic-views.txt:1006 ../../ref/generic-views.txt:1089
msgid ""
"``extra_context``: A dictionary of values to add to the template context. By "
"default, this is an empty dictionary. If a value in the dictionary is "
"callable, the generic view will call it just before rendering the template."
msgstr ""

# 87ad640ebbf0498397bbca06786b98ee
# 00cd876718174ee1a12a0a1ed47ff43a
# 84a328b06123421e814ef657e2f163c5
# d108b23ca8b04d4b86fca4a618ca63fa
# 6ddb96843fc14a4fa2d7b9dc8b6b31eb
# 641f6d98c96f434aa2d28d0270c502ba
# 50279750a57f478bae9fa943ae3fe670
# cbae0cfd2e44490a92aa6950482bed3c
# 173b0eda5a114bbf96d9e89d4d7a482e
#: ../../ref/generic-views.txt:60 ../../ref/generic-views.txt:200
#: ../../ref/generic-views.txt:292 ../../ref/generic-views.txt:379
#: ../../ref/generic-views.txt:465 ../../ref/generic-views.txt:550
#: ../../ref/generic-views.txt:660 ../../ref/generic-views.txt:738
#: ../../ref/generic-views.txt:852
msgid ""
"``mimetype``: The MIME type to use for the resulting document. Defaults to "
"the value of the :setting:`DEFAULT_CONTENT_TYPE` setting."
msgstr ""

# 014c4e2b5ee14f8b93dc9a7907fd1e0f
# 39c5689e4fd2487e82989caa82129591
#: ../../ref/generic-views.txt:63 ../../ref/generic-views.txt:113
msgid "**Example:**"
msgstr ""

# 25dfd8e85e99405ea8c46934b5f4c029
#: ../../ref/generic-views.txt:65
msgid "Given the following URL patterns::"
msgstr ""

# f79fe1fa93e44dbc8601aa3e6cedf42e
#: ../../ref/generic-views.txt:74
msgid ""
"... a request to ``/foo/`` would render the template ``foo_index.html``, and "
"a request to ``/foo/15/`` would render the ``foo_detail.html`` with a "
"context variable ``{{ params.id }}`` that is set to ``15``."
msgstr ""

# 9761b7470b664a9c879a9dff2fdddd4e
#: ../../ref/generic-views.txt:79
msgid "``django.views.generic.simple.redirect_to``"
msgstr ""

# 74348c45b5894634bd4aeabb5607cb05
#: ../../ref/generic-views.txt:95
msgid ""
"``url``: The URL to redirect to, as a string. Or ``None`` to raise a 410 "
"(Gone) HTTP error."
msgstr ""

# dc36269260bd4d9883461502c0167d04
#: ../../ref/generic-views.txt:100
msgid ""
"``permanent``: Whether the redirect should be permanent. The only difference "
"here is the HTTP status code returned. If ``True``, then the redirect will "
"use status code 301. If ``False``, then the redirect will use status code "
"302. By default, ``permanent`` is ``True``."
msgstr ""

# 7e34a213416c4578b55c29128f76b836
#: ../../ref/generic-views.txt:105
msgid ""
"``query_string``: Whether to pass along the GET query string to the new "
"location. If ``True``, then the query string is appended to the URL. If "
"``False``, then the query string is discarded. By default, ``query_string`` "
"is ``False``."
msgstr ""

# 5095b26f305a47ed8264da79b1740346
#: ../../ref/generic-views.txt:115
msgid ""
"This example issues a permanent redirect (HTTP status code 301) from ``/foo/"
"<id>/`` to ``/bar/<id>/``::"
msgstr ""

# d0959b43b65e45359fb1b0b65f7046df
#: ../../ref/generic-views.txt:124
msgid ""
"This example issues a non-permanent redirect (HTTP status code 302) from ``/"
"foo/<id>/`` to ``/bar/<id>/``::"
msgstr ""

# f9bd6df7639e4519bbcecce4e886564c
#: ../../ref/generic-views.txt:133
msgid "This example returns a 410 HTTP error for requests to ``/bar/``::"
msgstr ""

# 16fb9b63d05e4d2c9c9bec1ff52027bd
#: ../../ref/generic-views.txt:141
msgid ""
"This example shows how ``\"%\"`` characters must be written in the URL in "
"order to avoid confusion with Python's string formatting markers. If the "
"redirect string is written as ``\"%7Ejacob/\"`` (with only a single ``%``), "
"an exception would be raised::"
msgstr ""

# 9880cf37ebd04e20919a3d6fb377c3ab
#: ../../ref/generic-views.txt:154
msgid "Date-based generic views"
msgstr ""

# 7f3d7fdbba2244cf9ccdb1f0ca1076aa
#: ../../ref/generic-views.txt:156
msgid ""
"Date-based generic views (in the module ``django.views.generic.date_based``) "
"are views for displaying drilldown pages for date-based data."
msgstr ""

# 422c1e2a05494651b1c9b4495f299469
#: ../../ref/generic-views.txt:160
msgid "``django.views.generic.date_based.archive_index``"
msgstr ""

# 0a55ae62c02d4e90bd0450bd918773b2
# 6647e30e6abd4a3181d0d2e297d9129d
# f60aa7f71c0342f6a19ef797ef6e34c8
# 5aa472a2f27d4fe59d81b297f4528a65
# be94e74579db464dbcd1b4c1beee6603
#: ../../ref/generic-views.txt:170 ../../ref/generic-views.txt:253
#: ../../ref/generic-views.txt:341 ../../ref/generic-views.txt:433
#: ../../ref/generic-views.txt:509
msgid "``queryset``: A ``QuerySet`` of objects for which the archive serves."
msgstr ""

# 735d44d79c824e50937fd05aa64a2d21
# 184ae406a36848d1a636b94f46ac0203
# 22bb150da1fb418cb1ab98d681b8b4ca
# 3b84d9efb34d46f6a9caa0608b97b472
# 093de919123d4362ac095fb90ae3e093
#: ../../ref/generic-views.txt:172 ../../ref/generic-views.txt:255
#: ../../ref/generic-views.txt:343 ../../ref/generic-views.txt:435
#: ../../ref/generic-views.txt:511
msgid ""
"``date_field``: The name of the ``DateField`` or ``DateTimeField`` in the "
"``QuerySet``'s model that the date-based archive should use to determine the "
"objects on the page."
msgstr ""

# f6187decf5644283944e99f8eab12fa4
#: ../../ref/generic-views.txt:178
msgid ""
"``num_latest``: The number of latest objects to send to the template "
"context. By default, it's 15."
msgstr ""

# 1e332b5053494bd98240ce650f74d57f
# 7f3d5bbbb5324e9785bb33aa1f6c5e32
# 07071eb41fd84108a78326fd8f6a8c47
# 7c511b91584d432b9f03590b18f34bfa
# 6a55fefdc29c4aaa961d225dc3c791c4
# 97c45b8f68344c568aacff3a60f3d115
# e1c9717c5f2f4fd0b3d078bd6ffb6759
# f4f32b40df32413eac44cb16edf4df3b
# 1ac356f265eb4b8fbe7d477b344ae466
# 87c46f4e6a6c4079baab1cb9569291be
# afd9d50f1a7644ea87d451ccc0b99ebc
#: ../../ref/generic-views.txt:181 ../../ref/generic-views.txt:261
#: ../../ref/generic-views.txt:355 ../../ref/generic-views.txt:441
#: ../../ref/generic-views.txt:526 ../../ref/generic-views.txt:634
#: ../../ref/generic-views.txt:714 ../../ref/generic-views.txt:826
#: ../../ref/generic-views.txt:914 ../../ref/generic-views.txt:1000
#: ../../ref/generic-views.txt:1083
msgid ""
"``template_name``: The full name of a template to use in rendering the page. "
"This lets you override the default template name (see below)."
msgstr ""

# b6558373c3cc4bb8921a52a9148ca1e0
# fe9f7ce70e5a4933824aa75e03d711ee
# b32f098016444d5e95fdb9d6d36825a0
# 0abb5a6627ad4cc6bb13d49bf73e671c
# 3f307339e9d3465fa76307061ac30994
# 631a571bc76f4f629f0bcde4a7c52ce3
# d810d86b5ef04b419df0bd9022b0a536
# 41bb7ddaecf84c518c8fc180540c968b
# d300f257117c4b64ad42e1d5956f8144
# fa45d110be094df2a202706326afb915
# 4130e89346c84e53b11086b9a8000abf
#: ../../ref/generic-views.txt:184 ../../ref/generic-views.txt:264
#: ../../ref/generic-views.txt:358 ../../ref/generic-views.txt:444
#: ../../ref/generic-views.txt:529 ../../ref/generic-views.txt:646
#: ../../ref/generic-views.txt:717 ../../ref/generic-views.txt:838
#: ../../ref/generic-views.txt:917 ../../ref/generic-views.txt:1003
#: ../../ref/generic-views.txt:1086
msgid ""
"``template_loader``: The template loader to use when loading the template. "
"By default, it's ``django.template.loader``."
msgstr ""

# 13b2865eb86b4cfabe85af1919c18a70
# 7b1eb5237a984410a74991362bda2980
# 9d68e115e70e47688b8be0c81d754d28
#: ../../ref/generic-views.txt:192 ../../ref/generic-views.txt:452
#: ../../ref/generic-views.txt:725
msgid ""
"``allow_empty``: A boolean specifying whether to display the page if no "
"objects are available. If this is ``False`` and no objects are available, "
"the view will raise a 404 instead of displaying an empty page. By default, "
"this is ``True``."
msgstr ""

# bef669543e2042d8a50529e64ad2ec3e
# 69b3cfa98dff4aa7b28c1aebe6fc7e0b
# 081d75aa20a14d738affd25ca2a90403
# 8732858c8215448890f408abffde1510
# 8c02631902744b029950caeda5ee9760
# 4da98fc1211a42cbbe14f270efd51648
# df25eacf95a84802a34872f2c142c2d3
# 44898c32bb334194bd49975f7e59ac35
# f9981d20bd914f3ebdca369626973254
# c6853d87bfb64430857cddaf8170a3ff
# bd837969c75641c6b476a9a4d9a4c16f
#: ../../ref/generic-views.txt:197 ../../ref/generic-views.txt:277
#: ../../ref/generic-views.txt:371 ../../ref/generic-views.txt:457
#: ../../ref/generic-views.txt:542 ../../ref/generic-views.txt:654
#: ../../ref/generic-views.txt:730 ../../ref/generic-views.txt:846
#: ../../ref/generic-views.txt:925 ../../ref/generic-views.txt:1011
#: ../../ref/generic-views.txt:1094
msgid ""
"``context_processors``: A list of template-context processors to apply to "
"the view's template."
msgstr ""

# f9ed8cd663a14fb590d46e5e0d1ce96d
# 643d555604404439a9c3c2c2e8a7fb3b
# 25725906065b41b39f55103b80bd0ef6
# 0fd3021d9e464e298c0fd8b21aac4721
# 131b6ddf3ecd4f0bbd85d6016d410770
# 0accc33e930b45d8b5ad528aad61c39a
#: ../../ref/generic-views.txt:203 ../../ref/generic-views.txt:295
#: ../../ref/generic-views.txt:382 ../../ref/generic-views.txt:468
#: ../../ref/generic-views.txt:553 ../../ref/generic-views.txt:663
msgid ""
"``allow_future``: A boolean specifying whether to include \"future\" objects "
"on this page, where \"future\" means objects in which the field specified in "
"``date_field`` is greater than the current date/time. By default, this is "
"``False``."
msgstr ""

# 46410b2fbd444c259e2f151abc302676
#: ../../ref/generic-views.txt:208
msgid ""
"``template_object_name``: Designates the name of the template variable to "
"use in the template context. By default, this is ``'latest'``."
msgstr ""

# c989cd8fd018462ebe3a78f221fad588
# ea3052bb232c49338a1e6c8ccc52017e
# 6e54ff6f03aa459caba205d5b4be7cc7
# f59cdc1ea1d54664b19e8376b58232b3
# 46cf56edb9984a16ba8cbef9581cb578
# d2891dd5156344b1b6de41b2aaf89cbc
# e00e14ebb2354954945f7e5d3161a24c
# ebd93577371a45b4b872f8edd7c25422
# dc86a12849594bd587123015f28b0049
# fcaed3a771564130b134eda4cd2a50c9
# dd96161a73094d1dad63ab5b67739c2c
#: ../../ref/generic-views.txt:211 ../../ref/generic-views.txt:300
#: ../../ref/generic-views.txt:387 ../../ref/generic-views.txt:473
#: ../../ref/generic-views.txt:558 ../../ref/generic-views.txt:668
#: ../../ref/generic-views.txt:741 ../../ref/generic-views.txt:855
#: ../../ref/generic-views.txt:928 ../../ref/generic-views.txt:1017
#: ../../ref/generic-views.txt:1100
msgid "**Template name:**"
msgstr ""

# e1d1c6bcc64d4ca9ac976b73d86d8154
#: ../../ref/generic-views.txt:213
msgid ""
"If ``template_name`` isn't specified, this view will use the template "
"``<app_label>/<model_name>_archive.html`` by default, where:"
msgstr ""

# f85df102bd0047a4915a0c0caa466fe7
#: ../../ref/generic-views.txt:216
msgid ""
"``<model_name>`` is your model's name in all lowercase. For a model "
"``StaffMember``, that'd be ``staffmember``."
msgstr ""

# 7c427534d9cc47029761a2635b276796
#: ../../ref/generic-views.txt:219
msgid ""
"``<app_label>`` is the right-most part of the full Python path to your "
"model's app. For example, if your model lives in ``apps/blog/models.py``, "
"that'd be ``blog``."
msgstr ""

# 234c01af1507459d9d3353906d18def4
# e2f1346da1e54d3e8e81c2333501258b
# 2594e0a3e8144a26a0fd932acf6a604c
# 64381a8e11e643eda98e8daa43744667
# 2859fbe54bc843289302f600f5cb1682
# 4f7408aee8604215b3f31d558870774b
# b53034a124484a57addbae31067fb8e8
# 8f853625f05e44d2bd2ffd8c4ee72188
# 37ec381e17e34f46a341f64f50a67b88
# a3f08fe5147d4c9c85bebc9835a2d9af
# 57c6cac221b14868befbd7e2c24bfa1e
#: ../../ref/generic-views.txt:223 ../../ref/generic-views.txt:305
#: ../../ref/generic-views.txt:392 ../../ref/generic-views.txt:478
#: ../../ref/generic-views.txt:563 ../../ref/generic-views.txt:673
#: ../../ref/generic-views.txt:746 ../../ref/generic-views.txt:860
#: ../../ref/generic-views.txt:933 ../../ref/generic-views.txt:1022
#: ../../ref/generic-views.txt:1105
msgid "**Template context:**"
msgstr ""

# fba4422b55164cdb89f9791c7daab0b4
# bbe2d2dc6a5e4cfb9289fbab8e680232
# 8f62d28b70ac4a419bcccea90df6c264
# ee9822663c1c4ed7b6949c0e2217ca13
# c135d2d2b85547458d0cac62632368d1
# 97c5fa19e4534ac6a01d77a1c2e9de03
# 42eaa9e9d5ad439fa8aaeac2050eb728
# b4007c0c56274f62ac979260ffb2e217
# 12edd9a80b60417ca89e7d987a35f306
# bbc4d1106b1747b3be7e68e1a27a772d
# 4b19ffd7f7354a33956b6405c02d35e0
#: ../../ref/generic-views.txt:225 ../../ref/generic-views.txt:307
#: ../../ref/generic-views.txt:397 ../../ref/generic-views.txt:480
#: ../../ref/generic-views.txt:565 ../../ref/generic-views.txt:675
#: ../../ref/generic-views.txt:748 ../../ref/generic-views.txt:862
#: ../../ref/generic-views.txt:935 ../../ref/generic-views.txt:1024
#: ../../ref/generic-views.txt:1107
msgid "In addition to ``extra_context``, the template's context will be:"
msgstr ""

# 1a5be1242718433db76bd832d300d985
#: ../../ref/generic-views.txt:227
msgid ""
"``date_list``: A ``DateQuerySet`` object containing all years that have have "
"objects available according to ``queryset``, represented as ``datetime."
"datetime`` objects. These are ordered in reverse. This is equivalent to "
"``queryset.dates(date_field, 'year')[::-1]``."
msgstr ""

# 443701deddb84a7d90fbed800cb8bb30
#: ../../ref/generic-views.txt:232
msgid ""
"``latest``: The ``num_latest`` objects in the system, ordered descending by "
"``date_field``. For example, if ``num_latest`` is ``10``, then ``latest`` "
"will be a list of the latest 10 objects in ``queryset``."
msgstr ""

# b663da22808a4897bef4da573559e54b
#: ../../ref/generic-views.txt:236
msgid ""
"This variable's name depends on the ``template_object_name`` parameter, "
"which is ``'latest'`` by default. If ``template_object_name`` is ``'foo'``, "
"this variable's name will be ``foo``."
msgstr ""

# 75c5a5cde496462c8b7360e7ece4f632
#: ../../ref/generic-views.txt:241
msgid "``django.views.generic.date_based.archive_year``"
msgstr ""

# 1beccbdbc396428dbca1a2e7d04b9801
#: ../../ref/generic-views.txt:251
msgid "``year``: The four-digit year for which the archive serves."
msgstr ""

# 4c20d2a340bd4dc1b6acb38bf25c9193
# e71ac764f63c419faa35a849b6cc76b3
# f94a9cae53a24b79840aede9c00a9e31
#: ../../ref/generic-views.txt:272 ../../ref/generic-views.txt:366
#: ../../ref/generic-views.txt:537
msgid ""
"``allow_empty``: A boolean specifying whether to display the page if no "
"objects are available. If this is ``False`` and no objects are available, "
"the view will raise a 404 instead of displaying an empty page. By default, "
"this is ``False``."
msgstr ""

# 64ba7f715a354feda165551a9d04394c
# 97c2922e4f0f4735b1ebb277eff08fa9
# 7ade62aa2c604235ad49101815ae697f
# dada971d2c59407b830c2074f1f5a4b8
# 530ffdf1d2664c668eb110bda183aea8
#: ../../ref/generic-views.txt:280 ../../ref/generic-views.txt:374
#: ../../ref/generic-views.txt:460 ../../ref/generic-views.txt:545
#: ../../ref/generic-views.txt:733
msgid ""
"``template_object_name``:  Designates the name of the template variable to "
"use in the template context. By default, this is ``'object'``. The view will "
"append ``'_list'`` to the value of this parameter in determining the "
"variable's name."
msgstr ""

# e4d2cb83aa2e47cd9b373c15ea26053e
#: ../../ref/generic-views.txt:285
msgid ""
"``make_object_list``: A boolean specifying whether to retrieve the full list "
"of objects for this year and pass those to the template. If ``True``, this "
"list of objects will be made available to the template as ``object_list``. "
"(The name ``object_list`` may be different; see the docs for ``object_list`` "
"in the \"Template context\" section below.) By default, this is ``False``."
msgstr ""

# c4363a8c890044a4bf17fbd7b6593742
#: ../../ref/generic-views.txt:302
msgid ""
"If ``template_name`` isn't specified, this view will use the template "
"``<app_label>/<model_name>_archive_year.html`` by default."
msgstr ""

# e92b97fb05a14f6a96af27a700d00277
#: ../../ref/generic-views.txt:309
msgid ""
"``date_list``: A ``DateQuerySet`` object containing all months that have "
"have objects available according to ``queryset``, represented as ``datetime."
"datetime`` objects, in ascending order."
msgstr ""

# 1ec4f0d97b8e4124997f3b45b1a4d182
#: ../../ref/generic-views.txt:315
msgid ""
"``object_list``: If the ``make_object_list`` parameter is ``True``, this "
"will be set to a list of objects available for the given year, ordered by "
"the date field. This variable's name depends on the ``template_object_name`` "
"parameter, which is ``'object'`` by default. If ``template_object_name`` is "
"``'foo'``, this variable's name will be ``foo_list``."
msgstr ""

# dd886ad2d70e4ec08b3306da46be9211
#: ../../ref/generic-views.txt:322
msgid ""
"If ``make_object_list`` is ``False``, ``object_list`` will be passed to the "
"template as an empty list."
msgstr ""

# b99e082ea0444972b3a94d0bef296e5f
#: ../../ref/generic-views.txt:326
msgid "``django.views.generic.date_based.archive_month``"
msgstr ""

# c78c16f118a842789bb92598a1857eef
# 4c520f5275cb4ad7a9ec8de1904092e2
# c18b8cf562c44a0cb7fb47d2cb8b8d93
#: ../../ref/generic-views.txt:336 ../../ref/generic-views.txt:428
#: ../../ref/generic-views.txt:501
msgid "``year``: The four-digit year for which the archive serves (a string)."
msgstr ""

# fb85656c8d904392acad6e8a80b408e9
# 5a28b5755f204301a857295a97f71fd2
#: ../../ref/generic-views.txt:338 ../../ref/generic-views.txt:503
msgid ""
"``month``: The month for which the archive serves, formatted according to "
"the ``month_format`` argument."
msgstr ""

# 0a08203f1de4421d91dc60e26329c30d
# 28557b7b8774426fb7be04a78dd6bd02
# a5088623dfb64cad8b136f60d9f150c4
#: ../../ref/generic-views.txt:349 ../../ref/generic-views.txt:517
#: ../../ref/generic-views.txt:625
msgid ""
"``month_format``: A format string that regulates what format the ``month`` "
"parameter uses. This should be in the syntax accepted by Python's :func:"
"`~time.strftime`. It's set to ``\"%b\"`` by default, which is a three-letter "
"month abbreviation. To change it to use numbers, use ``\"%m\"``."
msgstr ""

# 9d3a78529ff344118a91f7b3930afeb9
#: ../../ref/generic-views.txt:389
msgid ""
"If ``template_name`` isn't specified, this view will use the template "
"``<app_label>/<model_name>_archive_month.html`` by default."
msgstr ""

# 24fece824b5645c4a594127025197be7
#: ../../ref/generic-views.txt:399
msgid ""
"``date_list``: A ``DateQuerySet`` object containing all days that have have "
"objects available in the given month, according to ``queryset``, represented "
"as ``datetime.datetime`` objects, in ascending order."
msgstr ""

# f6aa8f6171174371a431e5ce2e5a7436
#: ../../ref/generic-views.txt:413
msgid ""
"``object_list``: A list of objects available for the given month. This "
"variable's name depends on the ``template_object_name`` parameter, which is "
"``'object'`` by default. If ``template_object_name`` is ``'foo'``, this "
"variable's name will be ``foo_list``."
msgstr ""

# 35d619ceec1c4fafb50bac3c8cdbc517
#: ../../ref/generic-views.txt:419
msgid "``django.views.generic.date_based.archive_week``"
msgstr ""

# f4dec87a25db43daaebd8459102b271a
#: ../../ref/generic-views.txt:430
msgid ""
"``week``: The week of the year for which the archive serves (a string). "
"Weeks start with Sunday."
msgstr ""

# 597becedceca4c8d95107c18ee6ef486
#: ../../ref/generic-views.txt:475
msgid ""
"If ``template_name`` isn't specified, this view will use the template "
"``<app_label>/<model_name>_archive_week.html`` by default."
msgstr ""

# 7ab55e341bed4c67bd6ea57b70797ef5
#: ../../ref/generic-views.txt:485
msgid ""
"``object_list``: A list of objects available for the given week. This "
"variable's name depends on the ``template_object_name`` parameter, which is "
"``'object'`` by default. If ``template_object_name`` is ``'foo'``, this "
"variable's name will be ``foo_list``."
msgstr ""

# 9926a383f6ca41e296fbba33e9adf01a
#: ../../ref/generic-views.txt:491
msgid "``django.views.generic.date_based.archive_day``"
msgstr ""

# 1d93a33973394f458124691c2ca58920
#: ../../ref/generic-views.txt:506
msgid ""
"``day``: The day for which the archive serves, formatted according to the "
"``day_format`` argument."
msgstr ""

# 64e4dd32fec34883954e6e6cf558cef5
# f028a2a16fe747549a05c86629391585
#: ../../ref/generic-views.txt:523 ../../ref/generic-views.txt:631
msgid ""
"``day_format``: Like ``month_format``, but for the ``day`` parameter. It "
"defaults to ``\"%d\"`` (day of the month as a decimal number, 01-31)."
msgstr ""

# 41bb8e43897f46c0a60b74860b40abe6
#: ../../ref/generic-views.txt:560
msgid ""
"If ``template_name`` isn't specified, this view will use the template "
"``<app_label>/<model_name>_archive_day.html`` by default."
msgstr ""

# bf766abdec094e609585150b9541c496
#: ../../ref/generic-views.txt:575
msgid ""
"``object_list``: A list of objects available for the given day. This "
"variable's name depends on the ``template_object_name`` parameter, which is "
"``'object'`` by default. If ``template_object_name`` is ``'foo'``, this "
"variable's name will be ``foo_list``."
msgstr ""

# 28666f9164cc4afd8389939fe0350065
#: ../../ref/generic-views.txt:581
msgid "``django.views.generic.date_based.archive_today``"
msgstr ""

# 426097d4550c4f0eadd4280322266a3d
#: ../../ref/generic-views.txt:585
msgid ""
"A day archive page showing all objects for *today*. This is exactly the same "
"as ``archive_day``, except the ``year``/``month``/``day`` arguments are not "
"used, and today's date is used instead."
msgstr ""

# 851c96a1db8549dba23f42f5b5c5bdaa
#: ../../ref/generic-views.txt:590
msgid "``django.views.generic.date_based.object_detail``"
msgstr ""

# 11d4e5a4e7d54968b515be2c54e47657
#: ../../ref/generic-views.txt:600
msgid "``year``: The object's four-digit year (a string)."
msgstr ""

# f04800bb6ee74b55ab533b2cb675cc92
#: ../../ref/generic-views.txt:602
msgid ""
"``month``: The object's month , formatted according to the ``month_format`` "
"argument."
msgstr ""

# d1ce47739bc64412852a50e9d1da4642
#: ../../ref/generic-views.txt:605
msgid ""
"``day``: The object's day , formatted according to the ``day_format`` "
"argument."
msgstr ""

# 2c9360b7f9f34072885445bb471bc85f
# 7fcba7a3b7134654b1124709bd6735f5
#: ../../ref/generic-views.txt:608 ../../ref/generic-views.txt:813
msgid "``queryset``: A ``QuerySet`` that contains the object."
msgstr ""

# a9212863fe4445eba63b2a3df32bee39
#: ../../ref/generic-views.txt:610
msgid ""
"``date_field``: The name of the ``DateField`` or ``DateTimeField`` in the "
"``QuerySet``'s model that the generic view should use to look up the object "
"according to ``year``, ``month`` and ``day``."
msgstr ""

# 79461232f3ae43188e797bf919509d82
# d6f37d1aa742462dae3bbc26d76ca22d
# 7070568b9b8146a1b897b76687bab463
# 41fc90f85cd1488eb22b52e111ab07d5
#: ../../ref/generic-views.txt:614 ../../ref/generic-views.txt:815
#: ../../ref/generic-views.txt:973 ../../ref/generic-views.txt:1060
msgid "Either ``object_id`` or (``slug`` *and* ``slug_field``) is required."
msgstr ""

# b7ae9fbb3ab94796853825c24b32a46d
# 19a46ab2e6c84e62a8fe1e95fb330487
# 5315b5e44cff40a083f23a98dd8619d8
# 862e24931ef3458aa8165033d448d20b
#: ../../ref/generic-views.txt:616 ../../ref/generic-views.txt:817
#: ../../ref/generic-views.txt:975 ../../ref/generic-views.txt:1062
msgid ""
"If you provide ``object_id``, it should be the value of the primary-key "
"field for the object being displayed on this page."
msgstr ""

# 87328487a436431ba8f1edfcc49c9c0c
# b52ab73d7e644e2f8ef7d5abd56f7223
# e4b61df8f1d04602b9697aa1076075d1
# 2b96569055774aeb9164d36e1b9eaf49
#: ../../ref/generic-views.txt:619 ../../ref/generic-views.txt:820
#: ../../ref/generic-views.txt:978 ../../ref/generic-views.txt:1065
msgid ""
"Otherwise, ``slug`` should be the slug of the given object, and "
"``slug_field`` should be the name of the slug field in the ``QuerySet``'s "
"model. By default, ``slug_field`` is ``'slug'``."
msgstr ""

# bd13dfb82a044509a8b4176e9e24536b
# 6b26b6913b5d42beb045b35445d8d372
#: ../../ref/generic-views.txt:637 ../../ref/generic-views.txt:829
msgid ""
"``template_name_field``: The name of a field on the object whose value is "
"the template name to use. This lets you store template names in the data. In "
"other words, if your object has a field ``'the_template'`` that contains a "
"string ``'foo.html'``, and you set ``template_name_field`` to "
"``'the_template'``, then the generic view for this object will use the "
"template ``'foo.html'``."
msgstr ""

# 9afd0ff51abd440fa5cb9289ecb14bed
# 000039d39a6646bb9ff0d489b4563805
#: ../../ref/generic-views.txt:644 ../../ref/generic-views.txt:836
msgid "It's a bit of a brain-bender, but it's useful in some cases."
msgstr ""

# 7e4e2be028c84369b19479663651daf4
# 241b2d8d6abd43d68694516841fdfa53
# 2ebcf8299f174f999be387956c951fdc
# 9c8cbbd601dd4c03b92c81610a1febcb
#: ../../ref/generic-views.txt:657 ../../ref/generic-views.txt:849
#: ../../ref/generic-views.txt:1014 ../../ref/generic-views.txt:1097
msgid ""
"``template_object_name``:  Designates the name of the template variable to "
"use in the template context. By default, this is ``'object'``."
msgstr ""

# e1ac4c9b8ef8446c85841cda9b96cb98
# 3a6c3d54210f4bf7927f31b898030abe
#: ../../ref/generic-views.txt:670 ../../ref/generic-views.txt:857
msgid ""
"If ``template_name`` isn't specified, this view will use the template "
"``<app_label>/<model_name>_detail.html`` by default."
msgstr ""

# 098650e1654c4f59800639281d13999e
# b26fae8b57cd480d9fe9a15bb0d5d050
#: ../../ref/generic-views.txt:677 ../../ref/generic-views.txt:864
msgid ""
"``object``: The object. This variable's name depends on the "
"``template_object_name`` parameter, which is ``'object'`` by default. If "
"``template_object_name`` is ``'foo'``, this variable's name will be ``foo``."
msgstr ""

# 0ae1a120cd1443bc8150b4e949896e96
#: ../../ref/generic-views.txt:685
msgid "List/detail generic views"
msgstr ""

# 557ed8c2c8494d36bd280821cbb6a5a5
#: ../../ref/generic-views.txt:687
msgid ""
"The list-detail generic-view framework (in the ``django.views.generic."
"list_detail`` module) is similar to the date-based one, except the former "
"simply has two views: a list of objects and an individual object page."
msgstr ""

# 16b0b6dd79d04a5296e108dc4c6ef51f
#: ../../ref/generic-views.txt:693
msgid "``django.views.generic.list_detail.object_list``"
msgstr ""

# ce38e9b8dcfb4d89b0119d9749b9fcb2
#: ../../ref/generic-views.txt:701
msgid "``queryset``: A ``QuerySet`` that represents the objects."
msgstr ""

# c253cc0e23d448a9a357c9916c2ac1df
#: ../../ref/generic-views.txt:705
msgid ""
"``paginate_by``: An integer specifying how many objects should be displayed "
"per page. If this is given, the view will paginate objects with "
"``paginate_by`` objects per page. The view will expect either a ``page`` "
"query string parameter (via ``GET``) or a ``page`` variable specified in the "
"URLconf. See `Notes on pagination`_ below."
msgstr ""

# 4d7808e0dace41fdb645aa71e66b9092
#: ../../ref/generic-views.txt:711
msgid ""
"``page``: The current page number, as an integer, or the string ``'last'``. "
"This is 1-based. See `Notes on pagination`_ below."
msgstr ""

# 92f81e33b5b142c699f0777b3501e1ae
#: ../../ref/generic-views.txt:743
msgid ""
"If ``template_name`` isn't specified, this view will use the template "
"``<app_label>/<model_name>_list.html`` by default."
msgstr ""

# 76990a5b65be4cf98240b471f680ff1e
#: ../../ref/generic-views.txt:750
msgid ""
"``object_list``: The list of objects. This variable's name depends on the "
"``template_object_name`` parameter, which is ``'object'`` by default. If "
"``template_object_name`` is ``'foo'``, this variable's name will be "
"``foo_list``."
msgstr ""

# f0d2f437103b40c89ab295ff234aab71
#: ../../ref/generic-views.txt:755
msgid ""
"``is_paginated``: A boolean representing whether the results are paginated. "
"Specifically, this is set to ``False`` if the number of available objects is "
"less than or equal to ``paginate_by``."
msgstr ""

# 35640faea30443e19f2e67319c9ef79c
#: ../../ref/generic-views.txt:759
msgid ""
"If the results are paginated, the context will contain these extra variables:"
msgstr ""

# 662a08bc09074b9e8f7581ad84a5c020
#: ../../ref/generic-views.txt:761
msgid "``paginator``: An instance of ``django.core.paginator.Paginator``."
msgstr ""

# df659b4cc9d24163ae94e123f26ae3a2
#: ../../ref/generic-views.txt:763
msgid "``page_obj``: An instance of ``django.core.paginator.Page``."
msgstr ""

# 0129f8bb05a4464a89141b07d755c49e
#: ../../ref/generic-views.txt:766
msgid "Notes on pagination"
msgstr ""

# a60a650093224335851b2dfe970db201
#: ../../ref/generic-views.txt:768
msgid ""
"If ``paginate_by`` is specified, Django will paginate the results. You can "
"specify the page number in the URL in one of two ways:"
msgstr ""

# 09c36b2977ff413082f8230821fbef92
#: ../../ref/generic-views.txt:781
msgid ""
"To loop over all the available page numbers, use the ``page_range`` "
"variable. You can iterate over the list provided by ``page_range`` to create "
"a link to every page of results."
msgstr ""

# fc6efb4123c3460cab549ce2efcf5540
#: ../../ref/generic-views.txt:803
msgid "``django.views.generic.list_detail.object_detail``"
msgstr ""

# 3d83da194bee4a39b25700bcf158d1f7
#: ../../ref/generic-views.txt:872
msgid "Create/update/delete generic views"
msgstr ""

# 7a13e55c4c1b47c08c01c82df80d4aee
#: ../../ref/generic-views.txt:874
msgid ""
"The ``django.views.generic.create_update`` module contains a set of "
"functions for creating, editing and deleting objects."
msgstr ""

# 681e9dde938b4361bf56569f4a1d3c1e
#: ../../ref/generic-views.txt:878
msgid "``django.views.generic.create_update.create_object``"
msgstr ""

# 69bbe6bcd95f47af914314680e1558ac
#: ../../ref/generic-views.txt:882
msgid ""
"A page that displays a form for creating an object, redisplaying the form "
"with validation errors (if there are any) and saving the object."
msgstr ""

# cb7ee4ed5a584d41b5063b6f9140c8c0
# e55abde8015246db9a42f58fce7ccf51
#: ../../ref/generic-views.txt:887 ../../ref/generic-views.txt:963
msgid "Either ``form_class`` or ``model`` is required."
msgstr ""

# 43ec7635445845c3a0f5a00c8d8642e1
# 10c37e2000484b3593eafb596c0738ee
#: ../../ref/generic-views.txt:889 ../../ref/generic-views.txt:965
msgid ""
"If you provide ``form_class``, it should be a ``django.forms.ModelForm`` "
"subclass. Use this argument when you need to customize the model's form. See "
"the :doc:`ModelForm docs </topics/forms/modelforms>` for more information."
msgstr ""

# 9d1b9d247c2140d183b8c72035884a00
# 595a9b68c8464f0fbc1ef2f8ba673a4d
#: ../../ref/generic-views.txt:894 ../../ref/generic-views.txt:970
msgid ""
"Otherwise, ``model`` should be a Django model class and the form used will "
"be a standard ``ModelForm`` for ``model``."
msgstr ""

# e2f9af4581d0489fa98089c879ae9e98
# 096936100d0040219fb2f4b27c62f55a
#: ../../ref/generic-views.txt:899 ../../ref/generic-views.txt:984
msgid ""
"``post_save_redirect``: A URL to which the view will redirect after saving "
"the object. By default, it's ``object.get_absolute_url()``."
msgstr ""

# 1b5ff7cd5223410ca49738afffe193d1
# f6cc7d2b42a34fb883e2ed593ff81b12
#: ../../ref/generic-views.txt:902 ../../ref/generic-views.txt:987
msgid ""
"``post_save_redirect`` may contain dictionary string formatting, which will "
"be interpolated against the object's field attributes. For example, you "
"could use ``post_save_redirect=\"/polls/%(slug)s/\"``."
msgstr ""

# 9d7628d61bcf4bfda706fe173e3b21bb
# 0f4d7e84fd36464d80be56903535c018
# 6aed43da3b114f0288bc5e5484968cf8
#: ../../ref/generic-views.txt:906 ../../ref/generic-views.txt:991
#: ../../ref/generic-views.txt:1074
msgid ""
"``login_required``: A boolean that designates whether a user must be logged "
"in, in order to see the page and save changes. This hooks into the Django :"
"doc:`authentication system </topics/auth>`. By default, this is ``False``."
msgstr ""

# 7a9066265be047d4a4996fc648158e1b
#: ../../ref/generic-views.txt:911
msgid ""
"If this is ``True``, and a non-logged-in user attempts to visit this page or "
"save the form, Django will redirect the request to ``/accounts/login/``."
msgstr ""

# 51195a85b8374bb7a9b4289096c0512e
# b789681069564fd6bb2a69e80196c4b9
#: ../../ref/generic-views.txt:930 ../../ref/generic-views.txt:1019
msgid ""
"If ``template_name`` isn't specified, this view will use the template "
"``<app_label>/<model_name>_form.html`` by default."
msgstr ""

# e30e302b96f84dd1aa9d2a2da27d0b8e
#: ../../ref/generic-views.txt:937
msgid ""
"``form``: A ``django.forms.ModelForm`` instance representing the form for "
"creating the object. This lets you refer to form fields easily in the "
"template system."
msgstr ""

# 5a40c9f1ba4f467cab1f9703cbafbaeb
# ad91e307d1334e06bdbeaad8eb680528
#: ../../ref/generic-views.txt:941 ../../ref/generic-views.txt:1030
msgid "For example, if the model has two fields, ``name`` and ``address``::"
msgstr ""

# 566f0981fd17439189daaefd2f25b3a4
# 4affdf3794084be6bfefa617b63137e6
#: ../../ref/generic-views.txt:948 ../../ref/generic-views.txt:1037
msgid ""
"See the :doc:`forms documentation </topics/forms/index>` for more "
"information about using ``Form`` objects in templates."
msgstr ""

# b1b478f0978240baa71d3876aadd81bd
#: ../../ref/generic-views.txt:952
msgid "``django.views.generic.create_update.update_object``"
msgstr ""

# 9be7d4db801842c2b9c8a547e6501243
#: ../../ref/generic-views.txt:956
msgid ""
"A page that displays a form for editing an existing object, redisplaying the "
"form with validation errors (if there are any) and saving changes to the "
"object. This uses a form automatically generated from the object's model "
"class."
msgstr ""

# 3d6841d6690949eeba5a9f564155cbd4
# af8c871e666945108e461e037d69a2e1
#: ../../ref/generic-views.txt:996 ../../ref/generic-views.txt:1079
msgid ""
"If this is ``True``, and a non-logged-in user attempts to visit this page or "
"save the form, Django will redirect to :setting:`LOGIN_URL` (which defaults "
"to ``/accounts/login/``)."
msgstr ""

# 979dd4bc55d24531807b4110dd4bbc11
#: ../../ref/generic-views.txt:1026
msgid ""
"``form``: A ``django.forms.ModelForm`` instance representing the form for "
"editing the object. This lets you refer to form fields easily in the "
"template system."
msgstr ""

# 045cf75523e84e2bbfac30336c16e8b4
#: ../../ref/generic-views.txt:1040
msgid ""
"``object``: The original object being edited. This variable's name depends "
"on the ``template_object_name`` parameter, which is ``'object'`` by default. "
"If ``template_object_name`` is ``'foo'``, this variable's name will be "
"``foo``."
msgstr ""

# d41b00fc8a17400eac6deff0eeab5328
#: ../../ref/generic-views.txt:1046
msgid "``django.views.generic.create_update.delete_object``"
msgstr ""

# 17f5ace6ca2d4f1696a1655b14538e7d
#: ../../ref/generic-views.txt:1057
msgid ""
"``model``: The Django model class of the object that the form will delete."
msgstr ""

# 053f46978d4d4eef88170f232b00ae47
#: ../../ref/generic-views.txt:1069
msgid ""
"``post_delete_redirect``: A URL to which the view will redirect after "
"deleting the object."
msgstr ""

# f4a1f9a59fa4418b93d72a3e62528d4d
#: ../../ref/generic-views.txt:1102
msgid ""
"If ``template_name`` isn't specified, this view will use the template "
"``<app_label>/<model_name>_confirm_delete.html`` by default."
msgstr ""

# 0ff53bec5260447aab6a47a80399b1bd
#: ../../ref/generic-views.txt:1109
msgid ""
"``object``: The original object that's about to be deleted. This variable's "
"name depends on the ``template_object_name`` parameter, which is "
"``'object'`` by default. If ``template_object_name`` is ``'foo'``, this "
"variable's name will be ``foo``."
msgstr ""

# 73f11f73eccb4f32b966b037d5bdbc17
#: ../../ref/index.txt:29
msgid "Deprecated features"
msgstr ""

# 07b9dfa436ce4643ac7d4abed96c56af
#: ../../ref/middleware.txt:3
msgid "Middleware"
msgstr ""

# 36bdbb7b33cf4e7eb563fd760b3806cf
#: ../../ref/middleware.txt:8
msgid ""
"This document explains all middleware components that come with Django. For "
"information on how to use them and how to write your own middleware, see "
"the :doc:`middleware usage guide </topics/http/middleware>`."
msgstr ""

# 9979ba78b6af487d874be3e8dbef081b
#: ../../ref/middleware.txt:13
msgid "Available middleware"
msgstr ""

# 09dcb2622d694da4ae705d4f883a672d
#: ../../ref/middleware.txt:16
msgid "Cache middleware"
msgstr ""

# 4a5df78e1dcf4fe2906370c5597e9378
#: ../../ref/middleware.txt:25
msgid ""
"Enable the site-wide cache. If these are enabled, each Django-powered page "
"will be cached for as long as the :setting:`CACHE_MIDDLEWARE_SECONDS` "
"setting defines. See the :doc:`cache documentation </topics/cache>`."
msgstr ""

# cec103dc420b45b7a4c71dfb45ef364e
#: ../../ref/middleware.txt:30
msgid "\"Common\" middleware"
msgstr ""

# 8d9104a0df5c4770bba6d640051b289c
#: ../../ref/middleware.txt:37
msgid "Adds a few conveniences for perfectionists:"
msgstr ""

# 9c6aa83d1b8a498abb47e3aa6931c20b
#: ../../ref/middleware.txt:39
msgid ""
"Forbids access to user agents in the :setting:`DISALLOWED_USER_AGENTS` "
"setting, which should be a list of strings."
msgstr ""

# 2885e6514c674c5fbb6b350802d133cc
#: ../../ref/middleware.txt:42
msgid ""
"Performs URL rewriting based on the :setting:`APPEND_SLASH` and :setting:"
"`PREPEND_WWW` settings."
msgstr ""

# 4418a2ca9e774bf48e46f233ac15ac29
#: ../../ref/middleware.txt:45
msgid ""
"If :setting:`APPEND_SLASH` is ``True`` and the initial URL doesn't end with "
"a slash, and it is not found in the URLconf, then a new URL is formed by "
"appending a slash at the end. If this new URL is found in the URLconf, then "
"Django redirects the request to this new URL. Otherwise, the initial URL is "
"processed as usual."
msgstr ""

# 2d847cca10064556a26664a4e0b07ba1
#: ../../ref/middleware.txt:51
msgid ""
"For example, ``foo.com/bar`` will be redirected to ``foo.com/bar/`` if you "
"don't have a valid URL pattern for ``foo.com/bar`` but *do* have a valid "
"pattern for ``foo.com/bar/``."
msgstr ""

# d63344d482fa497cac36cbb03874e03a
#: ../../ref/middleware.txt:55
msgid ""
"If :setting:`PREPEND_WWW` is ``True``, URLs that lack a leading \"www.\" "
"will be redirected to the same URL with a leading \"www.\""
msgstr ""

# f8fde2a4e273424fb8cd1541eda68348
#: ../../ref/middleware.txt:58
msgid ""
"Both of these options are meant to normalize URLs. The philosophy is that "
"each URL should exist in one, and only one, place. Technically a URL ``foo."
"com/bar`` is distinct from ``foo.com/bar/`` -- a search-engine indexer would "
"treat them as separate URLs -- so it's best practice to normalize URLs."
msgstr ""

# 886f4273063a419d92c4d82e23daaf5e
#: ../../ref/middleware.txt:64
msgid ""
"Sends broken link notification emails to :setting:`MANAGERS` if :setting:"
"`SEND_BROKEN_LINK_EMAILS` is set to ``True``."
msgstr ""

# e6c2c1a3435344f0bea03d36b9920d9f
#: ../../ref/middleware.txt:67
msgid ""
"Handles ETags based on the :setting:`USE_ETAGS` setting. If :setting:"
"`USE_ETAGS` is set to ``True``, Django will calculate an ETag for each "
"request by MD5-hashing the page content, and it'll take care of sending "
"``Not Modified`` responses, if appropriate."
msgstr ""

# aa8b0cff087d49018163ece264b38c8e
#: ../../ref/middleware.txt:73
msgid "View metadata middleware"
msgstr ""

# 8b32092fa3e149d0a3f8eb7d0145d930
#: ../../ref/middleware.txt:80
msgid ""
"Sends custom ``X-View`` HTTP headers to HEAD requests that come from IP "
"addresses defined in the :setting:`INTERNAL_IPS` setting. This is used by "
"Django's :doc:`automatic documentation system </ref/contrib/admin/"
"admindocs>`. Depends on :class:`~django.contrib.auth.middleware."
"AuthenticationMiddleware`."
msgstr ""

# bc99687566a24837b4f81c9857c9ee9d
#: ../../ref/middleware.txt:86
msgid "GZip middleware"
msgstr ""

# 4e5db71059ca45b785dae84c9ce79769
#: ../../ref/middleware.txt:93
msgid ""
"Compresses content for browsers that understand GZip compression (all modern "
"browsers)."
msgstr ""

# af70b61a41b244329986f317b2d5bb51
#: ../../ref/middleware.txt:96
msgid ""
"It is suggested to place this first in the middleware list, so that the "
"compression of the response content is the last thing that happens."
msgstr ""

# d23b76dfac5540fc99ded1fd9214de12
#: ../../ref/middleware.txt:99
msgid "It will NOT compress content if any of the following are true:"
msgstr ""

# 49a50fcef6e34071b31821391b7cf269
#: ../../ref/middleware.txt:101
msgid "The content body is less than 200 bytes long."
msgstr ""

# a3c556e0f5fc4df99494319ddea18292
#: ../../ref/middleware.txt:103
msgid "The response has already set the ``Content-Encoding`` header."
msgstr ""

# e579dc279c5347419e95cbbf0f0b054c
#: ../../ref/middleware.txt:105
msgid ""
"The request (the browser) hasn't sent an ``Accept-Encoding`` header "
"containing ``gzip``."
msgstr ""

# bbdc11a2d2c4439396b9ee80fbb0982b
#: ../../ref/middleware.txt:108
msgid ""
"The request is from Internet Explorer and the ``Content-Type`` header "
"contains ``javascript`` or starts with anything other than ``text/``. We do "
"this to avoid a bug in early versions of IE that caused decompression not to "
"be performed on certain content types."
msgstr ""

# 0446478f9e2b43dd94059b776d4a633d
#: ../../ref/middleware.txt:113
msgid ""
"You can apply GZip compression to individual views using the :func:`~django."
"views.decorators.http.gzip_page()` decorator."
msgstr ""

# fcb558ae3ad84981a6d9967a61267d41
#: ../../ref/middleware.txt:117
msgid "Conditional GET middleware"
msgstr ""

# 7878986fda06426d9de19165aa11c07e
#: ../../ref/middleware.txt:124
msgid ""
"Handles conditional GET operations. If the response has a ``ETag`` or ``Last-"
"Modified`` header, and the request has ``If-None-Match`` or ``If-Modified-"
"Since``, the response is replaced by an :class:`~django.http."
"HttpNotModified`."
msgstr ""

# 511af56d81ea46cf87012ff293276e51
#: ../../ref/middleware.txt:129
msgid "Also sets the ``Date`` and ``Content-Length`` response-headers."
msgstr ""

# f8e00c261d4e4bcd8438ad1738125295
#: ../../ref/middleware.txt:132
msgid "Reverse proxy middleware"
msgstr ""

# c7251656e1e94830b661163bc014edbe
#: ../../ref/middleware.txt:136
msgid ""
"This middleware was removed in Django 1.1. See :ref:`the release notes "
"<removed-setremoteaddrfromforwardedfor-middleware>` for details."
msgstr ""

# f8a0a6c054cc470ab26ec6c6f5ee8d41
#: ../../ref/middleware.txt:140
msgid "Locale middleware"
msgstr ""

# a037c556ffc94b35a5a655361d3a7994
#: ../../ref/middleware.txt:147
msgid ""
"Enables language selection based on data from the request. It customizes "
"content for each user. See the :doc:`internationalization documentation </"
"topics/i18n/index>`."
msgstr ""

# 57852a9a031540caa5c648dd895d43b9
#: ../../ref/middleware.txt:152
msgid "Message middleware"
msgstr ""

# 324cc188efad4b32bb19252edf86910e
#: ../../ref/middleware.txt:162
msgid ""
"Enables cookie- and session-based message support. See the :doc:`messages "
"documentation </ref/contrib/messages>`."
msgstr ""

# cdf8d0862af44c15a040a02a22f764e4
#: ../../ref/middleware.txt:166
msgid "Session middleware"
msgstr ""

# eebe7abb828b44e3be701a22a1cce620
#: ../../ref/middleware.txt:173
msgid ""
"Enables session support. See the :doc:`session documentation </topics/http/"
"sessions>`."
msgstr ""

# b32c62abec404b2589d870e05b2e460a
#: ../../ref/middleware.txt:177
msgid "Authentication middleware"
msgstr ""

# e58dc106d5b14558bdfad6d568b61697
#: ../../ref/middleware.txt:184
msgid ""
"Adds the ``user`` attribute, representing the currently-logged-in user, to "
"every incoming ``HttpRequest`` object. See :doc:`Authentication in Web "
"requests </topics/auth>`."
msgstr ""

# 9c457b382c86483681fe87c624f05d47
#: ../../ref/middleware.txt:189
msgid "CSRF protection middleware"
msgstr ""

# b47defcca6ec4db5b8c9ffde70715a31
#: ../../ref/middleware.txt:197
msgid ""
"Adds protection against Cross Site Request Forgeries by adding hidden form "
"fields to POST forms and checking requests for the correct value. See the :"
"doc:`Cross Site Request Forgery protection documentation </ref/contrib/"
"csrf>`."
msgstr ""

# 83dddc2c5d044627b2dd739604272b85
#: ../../ref/middleware.txt:202
msgid "Transaction middleware"
msgstr ""

# fb86404c08de4a4495a466a84f71092e
#: ../../ref/middleware.txt:209
msgid ""
"Binds commit and rollback to the request/response phase. If a view function "
"runs successfully, a commit is done. If it fails with an exception, a "
"rollback is done."
msgstr ""

# ea59e74a98a94c7e86427ea6f7c25f18
#: ../../ref/middleware.txt:213
msgid ""
"The order of this middleware in the stack is important: middleware modules "
"running outside of it run with commit-on-save - the default Django behavior. "
"Middleware modules running inside it (coming later in the stack) will be "
"under the same transaction control as the view functions."
msgstr ""

# fc08bab74bcb4ef589e48f43c5e193a6
#: ../../ref/middleware.txt:218
msgid ""
"See the :doc:`transaction management documentation </topics/db/"
"transactions>`."
msgstr ""

# 3d16c68d75704794b05ec69cf2885940
#: ../../ref/middleware.txt:221
msgid "X-Frame-Options middleware"
msgstr ""

# 19e9af6eadeb43f2a675244d4a341de5
#: ../../ref/middleware.txt:231
msgid ""
"Simple :doc:`clickjacking protection via the X-Frame-Options header </ref/"
"clickjacking/>`."
msgstr ""

# 2671e95020a1485ebe4f8fb60dda8ce4
#: ../../ref/models/fields.txt:3
msgid "Model field reference"
msgstr ""

# 120f474ddfdf460c9da4957218f19ccd
#: ../../ref/models/fields.txt:10
msgid ""
"This document contains all the gory details about all the `field options`_ "
"and `field types`_ Django's got to offer."
msgstr ""

# c3d66c3911e74324a2919cc151226828
#: ../../ref/models/fields.txt:15
msgid ""
"If the built-in fields don't do the trick, you can try :mod:`django.contrib."
"localflavor`, which contains assorted pieces of code that are useful for "
"particular countries or cultures. Also, you can easily :doc:`write your own "
"custom model fields </howto/custom-model-fields>`."
msgstr ""

# 206cc7cc09aa4aba995a8163f649c7bc
#: ../../ref/models/fields.txt:22
msgid ""
"Technically, these models are defined in :mod:`django.db.models.fields`, but "
"for convenience they're imported into :mod:`django.db.models`; the standard "
"convention is to use ``from django.db import models`` and refer to fields as "
"``models.<Foo>Field``."
msgstr ""

# 6eece1431ec44da8863cca4a9a400778
#: ../../ref/models/fields.txt:30
msgid "Field options"
msgstr ""

# 79717a405d594b1eb184f92c9aac165c
#: ../../ref/models/fields.txt:32
msgid ""
"The following arguments are available to all field types. All are optional."
msgstr ""

# 25c4a5c4d1ff48f0bcdab17e0a5e8620
#: ../../ref/models/fields.txt:35
msgid "``null``"
msgstr ""

# 1a30492075a341d593fecd2fdcb00f80
#: ../../ref/models/fields.txt:39
msgid ""
"If ``True``, Django will store empty values as ``NULL`` in the database. "
"Default is ``False``."
msgstr ""

# e5f22b090ada4946a972335cd6e6dac0
#: ../../ref/models/fields.txt:42
msgid ""
"Note that empty string values will always get stored as empty strings, not "
"as ``NULL``. Only use ``null=True`` for non-string fields such as integers, "
"booleans and dates. For both types of fields, you will also need to set "
"``blank=True`` if you wish to permit empty values in forms, as the :attr:"
"`~Field.null` parameter only affects database storage (see :attr:`~Field."
"blank`)."
msgstr ""

# 071bc8bd8c4e43089dd0cc0f838ebffa
#: ../../ref/models/fields.txt:49
msgid ""
"Avoid using :attr:`~Field.null` on string-based fields such as :class:"
"`CharField` and :class:`TextField` unless you have an excellent reason. If a "
"string-based field has ``null=True``, that means it has two possible values "
"for \"no data\": ``NULL``, and the empty string. In most cases, it's "
"redundant to have two possible values for \"no data;\" Django convention is "
"to use the empty string, not ``NULL``."
msgstr ""

# 30b7676a5fd34e87b005321bbb2b0396
#: ../../ref/models/fields.txt:58
msgid ""
"When using the Oracle database backend, the ``null=True`` option will be "
"coerced for string-based fields that have the empty string as a possible "
"value, and the value ``NULL`` will be stored to denote the empty string."
msgstr ""

# 87e81525cdcc49eca935a0331425cab9
#: ../../ref/models/fields.txt:62
msgid ""
"If you want to accept :attr:`~Field.null` values with :class:`BooleanField`, "
"use :class:`NullBooleanField` instead."
msgstr ""

# 857d25de1a35491f9ea1e51d60d7309a
#: ../../ref/models/fields.txt:66
msgid "``blank``"
msgstr ""

# 790aea3470944a58a10a5ac424c8f7b2
#: ../../ref/models/fields.txt:70
msgid "If ``True``, the field is allowed to be blank. Default is ``False``."
msgstr ""

# c3ecb656434d4dc6bd939eababe0b75d
#: ../../ref/models/fields.txt:72
msgid ""
"Note that this is different than :attr:`~Field.null`. :attr:`~Field.null` is "
"purely database-related, whereas :attr:`~Field.blank` is validation-related. "
"If a field has ``blank=True``, validation on Django's admin site will allow "
"entry of an empty value. If a field has ``blank=False``, the field will be "
"required."
msgstr ""

# 02f4eebfa41a4a16a43220e38e9b4c60
#: ../../ref/models/fields.txt:80
msgid "``choices``"
msgstr ""

# 9df18ff5ac6e43ea8bd52c5b1702992d
#: ../../ref/models/fields.txt:84
msgid ""
"An iterable (e.g., a list or tuple) of 2-tuples to use as choices for this "
"field."
msgstr ""

# f4614c6c825f42438969a77c1e75c50f
#: ../../ref/models/fields.txt:87
msgid ""
"If this is given, Django's admin will use a select box instead of the "
"standard text field and will limit choices to the choices given."
msgstr ""

# 451c635743fe4bd8aab79e36429ec05f
#: ../../ref/models/fields.txt:90
msgid "A choices list looks like this::"
msgstr ""

# cf0558e1ee314fc68d8270c304454ff0
#: ../../ref/models/fields.txt:100
msgid ""
"The first element in each tuple is the actual value to be stored. The second "
"element is the human-readable name for the option."
msgstr ""

# 4deaa7cc898748bb8657a9d7edf32fe7
#: ../../ref/models/fields.txt:103
msgid "The choices list can be defined either as part of your model class::"
msgstr ""

# 9caf308d9b764649a4f5648542988430
#: ../../ref/models/fields.txt:112
msgid "or outside your model class altogether::"
msgstr ""

# 6e2bf0f55860412490d4bb3f08ebe84b
#: ../../ref/models/fields.txt:121
msgid ""
"You can also collect your available choices into named groups that can be "
"used for organizational purposes::"
msgstr ""

# a675954a8d61464f9d3c6cf895b1e3bb
#: ../../ref/models/fields.txt:138
msgid ""
"The first element in each tuple is the name to apply to the group. The "
"second element is an iterable of 2-tuples, with each 2-tuple containing a "
"value and a human-readable name for an option. Grouped options may be "
"combined with ungrouped options within a single list (such as the `unknown` "
"option in this example)."
msgstr ""

# 10ab2306a1534c9e9d74b7011bce9edb
#: ../../ref/models/fields.txt:144
msgid ""
"For each model field that has :attr:`~Field.choices` set, Django will add a "
"method to retrieve the human-readable name for the field's current value. "
"See :meth:`~django.db.models.Model.get_FOO_display` in the database API "
"documentation."
msgstr ""

# 8ac02c5f6a044945aba8264610f4259b
#: ../../ref/models/fields.txt:149
msgid ""
"Finally, note that choices can be any iterable object -- not necessarily a "
"list or tuple. This lets you construct choices dynamically. But if you find "
"yourself hacking :attr:`~Field.choices` to be dynamic, you're probably "
"better off using a proper database table with a :class:`ForeignKey`. :attr:"
"`~Field.choices` is meant for static data that doesn't change much, if ever."
msgstr ""

# 507484c455b04a0ab3d522a79061c8ad
#: ../../ref/models/fields.txt:156
msgid "``db_column``"
msgstr ""

# 9a45ec9b974d4f33bb10f90c868f9c5f
#: ../../ref/models/fields.txt:160
msgid ""
"The name of the database column to use for this field. If this isn't given, "
"Django will use the field's name."
msgstr ""

# 561f6a56840448789d37c86f7b7c6f16
#: ../../ref/models/fields.txt:163
msgid ""
"If your database column name is an SQL reserved word, or contains characters "
"that aren't allowed in Python variable names -- notably, the hyphen -- "
"that's OK. Django quotes column and table names behind the scenes."
msgstr ""

# 6b8e15b0d33d4c87a999b7762c38f23e
#: ../../ref/models/fields.txt:169
msgid "``db_index``"
msgstr ""

# b9453d70772e400f88b69ff168f85e7c
#: ../../ref/models/fields.txt:173
msgid ""
"If ``True``, djadmin:`django-admin.py sqlindexes <sqlindexes>` will output a "
"``CREATE INDEX`` statement for this field."
msgstr ""

# e32c8ebac3c640638d77a39ee05c85ca
# b30d93f395324ed2aa085102c1f215fd
#: ../../ref/models/fields.txt:177 ../../ref/models/options.txt:72
msgid "``db_tablespace``"
msgstr ""

# a57407ffa47248aab6122ae43136cd97
#: ../../ref/models/fields.txt:181
msgid ""
"The name of the :doc:`database tablespace </topics/db/tablespaces>` to use "
"for this field's index, if this field is indexed. The default is the "
"project's :setting:`DEFAULT_INDEX_TABLESPACE` setting, if set, or the :attr:"
"`~Options.db_tablespace` of the model, if any. If the backend doesn't "
"support tablespaces for indexes, this option is ignored."
msgstr ""

# f4f02b313a5e40d996c7a2c9709e99f6
#: ../../ref/models/fields.txt:188
msgid "``default``"
msgstr ""

# 222c631a863844019d1ed36ebd27f1fc
#: ../../ref/models/fields.txt:192
msgid ""
"The default value for the field. This can be a value or a callable object. "
"If callable it will be called every time a new object is created."
msgstr ""

# 1c653fe0226748c5a286e8e0c499b8b6
#: ../../ref/models/fields.txt:196
msgid "``editable``"
msgstr ""

# 1729112496774cfea1f7f6aaeafdf18d
#: ../../ref/models/fields.txt:200
msgid ""
"If ``False``, the field will not be editable in the admin or via forms "
"automatically generated from the model class. Default is ``True``."
msgstr ""

# 0777d812e77242d293af33e22cfa60d9
#: ../../ref/models/fields.txt:210
msgid ""
"The ``error_messages`` argument lets you override the default messages that "
"the field will raise. Pass in a dictionary with keys matching the error "
"messages you want to override."
msgstr ""

# 569bffc00364435493a487ef92f44881
#: ../../ref/models/fields.txt:214
msgid ""
"Error message keys include ``null``, ``blank``, ``invalid``, "
"``invalid_choice``, and ``unique``. Additional error message keys are "
"specified for each field in the `Field types`_ section below."
msgstr ""

# d7917f5590c94d47ae11335e955ed61f
#: ../../ref/models/fields.txt:223
msgid ""
"Extra \"help\" text to be displayed under the field on the object's admin "
"form. It's useful for documentation even if your object doesn't have an "
"admin form."
msgstr ""

# b52e8b81f3b0432ba0c2f962da9003c1
#: ../../ref/models/fields.txt:226
msgid ""
"Note that this value is *not* HTML-escaped when it's displayed in the admin "
"interface. This lets you include HTML in :attr:`~Field.help_text` if you so "
"desire. For example::"
msgstr ""

# 5a608599c73844feaf609202a8ae36d3
#: ../../ref/models/fields.txt:232
msgid ""
"Alternatively you can use plain text and ``django.utils.html.escape()`` to "
"escape any HTML special characters."
msgstr ""

# 48a7a8d0ed054c50a233deb6a6d85a77
#: ../../ref/models/fields.txt:236
msgid "``primary_key``"
msgstr ""

# f80fcca3266d4dafbf8a12610cb07fc9
#: ../../ref/models/fields.txt:240
msgid "If ``True``, this field is the primary key for the model."
msgstr ""

# 33398cdf2e1946709d724ca7c6692ac8
#: ../../ref/models/fields.txt:242
msgid ""
"If you don't specify ``primary_key=True`` for any fields in your model, "
"Django will automatically add an :class:`IntegerField` to hold the primary "
"key, so you don't need to set ``primary_key=True`` on any of your fields "
"unless you want to override the default primary-key behavior. For more, see :"
"ref:`automatic-primary-key-fields`."
msgstr ""

# c120c79fbbbb47fcaa795e651ff43094
#: ../../ref/models/fields.txt:248
msgid ""
"``primary_key=True`` implies :attr:`null=False <Field.null>` and :attr:"
"`unique=True <Field.unique>`. Only one primary key is allowed on an object."
msgstr ""

# 9f55a0da4dcf47cc93f9325f954f2213
#: ../../ref/models/fields.txt:256
msgid "If ``True``, this field must be unique throughout the table."
msgstr ""

# 4cf51a395d764ab499e75df71f0a4e93
#: ../../ref/models/fields.txt:258
msgid ""
"This is enforced at the database level and at the Django admin-form level. "
"If you try to save a model with a duplicate value in a :attr:`~Field.unique` "
"field, a :exc:`django.db.IntegrityError` will be raised by the model's :meth:"
"`~django.db.models.Model.save` method."
msgstr ""

# 11db2bd602924ef98d9ddc5e151307e5
#: ../../ref/models/fields.txt:263
msgid ""
"This option is valid on all field types except :class:`ManyToManyField` and :"
"class:`FileField`."
msgstr ""

# 1e3916806bdd43fe850a6beacb0dd747
#: ../../ref/models/fields.txt:267
msgid "``unique_for_date``"
msgstr ""

# dfd7a4ff39a3450ea6a1b506fcc85df7
#: ../../ref/models/fields.txt:271
msgid ""
"Set this to the name of a :class:`DateField` or :class:`DateTimeField` to "
"require that this field be unique for the value of the date field."
msgstr ""

# 2a119e640773410fa94c56934ad3d978
#: ../../ref/models/fields.txt:274
msgid ""
"For example, if you have a field ``title`` that has ``unique_for_date="
"\"pub_date\"``, then Django wouldn't allow the entry of two records with the "
"same ``title`` and ``pub_date``."
msgstr ""

# 564657100ba448d2af6cf3111e06ca83
#: ../../ref/models/fields.txt:278
msgid ""
"This is enforced at the Django admin-form level but not at the database "
"level."
msgstr ""

# 17da1b4711434f5b80554c1c2ba8d32d
#: ../../ref/models/fields.txt:281
msgid "``unique_for_month``"
msgstr ""

# 95a12978b13b4ca181b4f07a96b932e7
#: ../../ref/models/fields.txt:285
msgid ""
"Like :attr:`~Field.unique_for_date`, but requires the field to be unique "
"with respect to the month."
msgstr ""

# c174aaebdec644e69f1b80fcf3412e86
#: ../../ref/models/fields.txt:289
msgid "``unique_for_year``"
msgstr ""

# 8fd3190d64de4abfa9e82b15445ef780
#: ../../ref/models/fields.txt:293
msgid ""
"Like :attr:`~Field.unique_for_date` and :attr:`~Field.unique_for_month`."
msgstr ""

# ddaefc7c8b724b4aa9d935f5be0ea756
# 6d6ae5b7d3f34783a3cbb2df9ef28a69
#: ../../ref/models/fields.txt:296 ../../ref/models/options.txt:264
msgid "``verbose_name``"
msgstr ""

# 8107a9ee43a54a789a8e6b6ee53d0a36
#: ../../ref/models/fields.txt:300
msgid ""
"A human-readable name for the field. If the verbose name isn't given, Django "
"will automatically create it using the field's attribute name, converting "
"underscores to spaces. See :ref:`Verbose field names <verbose-field-names>`."
msgstr ""

# ca0f16ef5a2b4244b2db932df71b7362
#: ../../ref/models/fields.txt:311
msgid ""
"A list of validators to run for this field. See the :doc:`validators "
"documentation </ref/validators>` for more information."
msgstr ""

# ae490ad33b404857b73b11940039633c
#: ../../ref/models/fields.txt:317
msgid "Field types"
msgstr ""

# 7a231d2ff50a4d33baacaa769cb6dacd
#: ../../ref/models/fields.txt:322
msgid "``AutoField``"
msgstr ""

# 3863b2cc3e634fc2a399894e6542aa03
#: ../../ref/models/fields.txt:326
msgid ""
"An :class:`IntegerField` that automatically increments according to "
"available IDs. You usually won't need to use this directly; a primary key "
"field will automatically be added to your model if you don't specify "
"otherwise. See :ref:`automatic-primary-key-fields`."
msgstr ""

# b1fc4725248e4852909c0566a5331d50
#: ../../ref/models/fields.txt:332
msgid "``BigIntegerField``"
msgstr ""

# a6248741c0e04d37b4191cb5c98c39e4
#: ../../ref/models/fields.txt:338
msgid ""
"A 64 bit integer, much like an :class:`IntegerField` except that it is "
"guaranteed to fit numbers from -9223372036854775808 to 9223372036854775807. "
"The admin represents this as an ``<input type=\"text\">`` (a single-line "
"input)."
msgstr ""

# 58898d4508a148908fffa2cd56819721
#: ../../ref/models/fields.txt:348
msgid "A true/false field."
msgstr ""

# c66a484540594bb687309ca6171074e0
#: ../../ref/models/fields.txt:350
msgid "The admin represents this as a checkbox."
msgstr ""

# 620c2bfd7a384946ba1e7fecd31eb419
#: ../../ref/models/fields.txt:352
msgid ""
"If you need to accept :attr:`~Field.null` values then use :class:"
"`NullBooleanField` instead."
msgstr ""

# 7c33e30df75a4d6aa3fcbc8636084089
#: ../../ref/models/fields.txt:365
msgid "A string field, for small- to large-sized strings."
msgstr ""

# 265f537f811a46318173f311b8b7fbf9
#: ../../ref/models/fields.txt:367
msgid "For large amounts of text, use :class:`~django.db.models.TextField`."
msgstr ""

# ac4a83e310f04b6e88f72ba57d8fe21f
# 321a56dac2ed4e7dbe931d1a5179d4f0
# ea61fc9cb45a4dcabbe3a784140b82fa
# e644458a75344386a368cff087f8b352
#: ../../ref/models/fields.txt:369 ../../ref/models/fields.txt:469
#: ../../ref/models/fields.txt:707 ../../ref/models/fields.txt:899
msgid ""
"The admin represents this as an ``<input type=\"text\">`` (a single-line "
"input)."
msgstr ""

# 4b83a8c819ff418eb67e4e117c862264
#: ../../ref/models/fields.txt:371
msgid ":class:`CharField` has one extra required argument:"
msgstr ""

# 34258903ed434a7eacb7220f96af28e6
#: ../../ref/models/fields.txt:375
msgid ""
"The maximum length (in characters) of the field. The max_length is enforced "
"at the database level and in Django's validation."
msgstr ""

# c8c409bf5c2f41c7b698dfcb91e7de04
#: ../../ref/models/fields.txt:380
msgid ""
"If you are writing an application that must be portable to multiple database "
"backends, you should be aware that there are restrictions on ``max_length`` "
"for some backends. Refer to the :doc:`database backend notes </ref/"
"databases>` for details."
msgstr ""

# 3d1b7c8df1254b22b11409828119c4d4
#: ../../ref/models/fields.txt:387
msgid ""
"If you are using this field with MySQLdb 1.2.2 and the ``utf8_bin`` "
"collation (which is *not* the default), there are some issues to be aware "
"of. Refer to the :ref:`MySQL database notes <mysql-collation>` for details."
msgstr ""

# 36eafac15d8b4dce824931233c56973c
#: ../../ref/models/fields.txt:394
msgid "``CommaSeparatedIntegerField``"
msgstr ""

# 5b78e05ff05f4a3eb5dd1c76fa4b9784
#: ../../ref/models/fields.txt:398
msgid ""
"A field of integers separated by commas. As in :class:`CharField`, the :attr:"
"`~CharField.max_length` argument is required and the note about database "
"portability mentioned there should be heeded."
msgstr ""

# c37e274ac415460ab078db114aaf78e3
#: ../../ref/models/fields.txt:407
msgid ""
"A date, represented in Python by a ``datetime.date`` instance. Has a few "
"extra, optional arguments:"
msgstr ""

# 2d6384be60ef4e4f9760977d16e35931
#: ../../ref/models/fields.txt:412
msgid ""
"Automatically set the field to now every time the object is saved. Useful "
"for \"last-modified\" timestamps. Note that the current date is *always* "
"used; it's not just a default value that you can override."
msgstr ""

# 8e8dacc945bb4d5880f6c20471271ebb
#: ../../ref/models/fields.txt:418
msgid ""
"Automatically set the field to now when the object is first created. Useful "
"for creation of timestamps. Note that the current date is *always* used; "
"it's not just a default value that you can override."
msgstr ""

# c66fc2e163d4445ab757eea000a25f40
#: ../../ref/models/fields.txt:422
msgid ""
"The admin represents this as an ``<input type=\"text\">`` with a JavaScript "
"calendar, and a shortcut for \"Today\". Includes an additional "
"``invalid_date`` error message key."
msgstr ""

# 2c43e1d704744d97bbcd18ce260a279f
#: ../../ref/models/fields.txt:427
msgid ""
"As currently implemented, setting ``auto_now`` or ``auto_now_add`` to "
"``True`` will cause the field to have ``editable=False`` and ``blank=True`` "
"set."
msgstr ""

# 9f45324a016c49f9bcfd31d0b25f35f0
#: ../../ref/models/fields.txt:436
msgid ""
"A date and time, represented in Python by a ``datetime.datetime`` instance. "
"Takes the same extra arguments as :class:`DateField`."
msgstr ""

# bd2130ffa3a746688e62f8711dd99f79
#: ../../ref/models/fields.txt:439
msgid ""
"The admin represents this as two ``<input type=\"text\">`` fields, with "
"JavaScript shortcuts."
msgstr ""

# 2be6319e906c4ebca7d6e179eb9ffd80
#: ../../ref/models/fields.txt:447
msgid ""
"A fixed-precision decimal number, represented in Python by a :class:"
"`~decimal.Decimal` instance. Has two **required** arguments:"
msgstr ""

# 4e48ec20d6a645a9b8bd68f426f8e96a
#: ../../ref/models/fields.txt:452
msgid ""
"The maximum number of digits allowed in the number. Note that this number "
"must be greater than or equal to ``decimal_places``, if it exists."
msgstr ""

# 3ba39df44f76411fb0e1982752046a18
#: ../../ref/models/fields.txt:457
msgid "The number of decimal places to store with the number."
msgstr ""

# 454e5de64d3c423b9a5e7f6fe118bb33
#: ../../ref/models/fields.txt:459
msgid ""
"For example, to store numbers up to 999 with a resolution of 2 decimal "
"places, you'd use::"
msgstr ""

# a0caede1be3044e989b7e1e64e9bd2e2
#: ../../ref/models/fields.txt:464
msgid ""
"And to store numbers up to approximately one billion with a resolution of 10 "
"decimal places::"
msgstr ""

# a966b414fc7a4c0b99f64f1050429b63
#: ../../ref/models/fields.txt:473
msgid ""
"For more information about the differences between the :class:`FloatField` "
"and :class:`DecimalField` classes, please see :ref:`FloatField vs. "
"DecimalField <floatfield_vs_decimalfield>`."
msgstr ""

# cb8b323ea4a1464089384dc851bbaba6
#: ../../ref/models/fields.txt:482
msgid ""
"A :class:`CharField` that checks that the value is a valid email address."
msgstr ""

# 6cae9a0be3044cca95bc300a8c622aec
#: ../../ref/models/fields.txt:489
msgid "A file-upload field."
msgstr ""

# 42de0acc8300452ca518bb4cba527a69
#: ../../ref/models/fields.txt:492
msgid ""
"The ``primary_key`` and ``unique`` arguments are not supported, and will "
"raise a ``TypeError`` if used."
msgstr ""

# dd906908eb4041eeb6554e086b610d50
#: ../../ref/models/fields.txt:495
msgid "Has one **required** argument:"
msgstr ""

# 51915ab8cd454fae87f9719e68e1a1d0
#: ../../ref/models/fields.txt:499
msgid ""
"A local filesystem path that will be appended to your :setting:`MEDIA_ROOT` "
"setting to determine the value of the :attr:`~django.core.files.File.url` "
"attribute."
msgstr ""

# 9304728a45bd4297b9df39e53a1b67f4
#: ../../ref/models/fields.txt:503
msgid ""
"This path may contain :func:`~time.strftime` formatting, which will be "
"replaced by the date/time of the file upload (so that uploaded files don't "
"fill up the given directory)."
msgstr ""

# 9a89acc1c1a44b4c8f75220638d565f0
#: ../../ref/models/fields.txt:507
msgid ""
"This may also be a callable, such as a function, which will be called to "
"obtain the upload path, including the filename. This callable must be able "
"to accept two arguments, and return a Unix-style path (with forward slashes) "
"to be passed along to the storage system. The two arguments that will be "
"passed are:"
msgstr ""

# 98ca8e700ee54ac882a0f0691ddd3d80
# 47458f080ddc4e559cd51b3796b58772
# 57956ef91dab46e3ba232f04e5814020
#: ../../ref/models/fields.txt:516 ../../ref/signals.txt:293
#: ../../ref/signals.txt:319
msgid "``instance``"
msgstr ""

# e97df8f33d584e81b37b9039df34c0b8
#: ../../ref/models/fields.txt:516
msgid ""
"An instance of the model where the ``FileField`` is defined. More "
"specifically, this is the particular instance where the current file is "
"being attached."
msgstr ""

# 089b596e43a94b33a6ed503488e41482
#: ../../ref/models/fields.txt:521
msgid ""
"In most cases, this object will not have been saved to the database yet, so "
"if it uses the default ``AutoField``, *it might not yet have a value for its "
"primary key field*."
msgstr ""

# 16919a47f2fc4c319a9eedc4e42fec95
#: ../../ref/models/fields.txt:526
msgid "``filename``"
msgstr ""

# e137cf5f6ba44d84aa3e6c48ded2a3ec
#: ../../ref/models/fields.txt:526
msgid ""
"The filename that was originally given to the file. This may or may not be "
"taken into account when determining the final destination path."
msgstr ""

# cd9b44b454e44d4582e27b6c2f4d3232
#: ../../ref/models/fields.txt:531
msgid "Also has one optional argument:"
msgstr ""

# 60ce511c22f24bc6811f4883527b8f59
#: ../../ref/models/fields.txt:535
msgid ""
"Optional. A storage object, which handles the storage and retrieval of your "
"files. See :doc:`/topics/files` for details on how to provide this object."
msgstr ""

# e4122254eba442bc8171dfd06b2088c0
#: ../../ref/models/fields.txt:538
msgid ""
"The admin represents this field as an ``<input type=\"file\">`` (a file-"
"upload widget)."
msgstr ""

# f75dc3cae3f4490f983ba6d7d4159acd
#: ../../ref/models/fields.txt:541
msgid ""
"Using a :class:`FileField` or an :class:`ImageField` (see below) in a model "
"takes a few steps:"
msgstr ""

# b2bc6e27e4ce4782ad76b05d5944c08a
#: ../../ref/models/fields.txt:544
msgid ""
"In your settings file, you'll need to define :setting:`MEDIA_ROOT` as the "
"full path to a directory where you'd like Django to store uploaded files. "
"(For performance, these files are not stored in the database.) Define :"
"setting:`MEDIA_URL` as the base public URL of that directory. Make sure that "
"this directory is writable by the Web server's user account."
msgstr ""

# eaf3cf93f0f8456a92317c98d5f33143
#: ../../ref/models/fields.txt:550
msgid ""
"Add the :class:`FileField` or :class:`ImageField` to your model, making sure "
"to define the :attr:`~FileField.upload_to` option to tell Django to which "
"subdirectory of :setting:`MEDIA_ROOT` it should upload files."
msgstr ""

# 20a9eb3df6ba40bcae9d41a883b3d70e
#: ../../ref/models/fields.txt:554
msgid ""
"All that will be stored in your database is a path to the file (relative to :"
"setting:`MEDIA_ROOT`). You'll most likely want to use the convenience :attr:"
"`~django.core.files.File.url` function provided by Django. For example, if "
"your :class:`ImageField` is called ``mug_shot``, you can get the absolute "
"path to your image in a template with ``{{ object.mug_shot.url }}``."
msgstr ""

# cc55ff7e440741318cad01b5ea89b5d7
#: ../../ref/models/fields.txt:561
msgid ""
"For example, say your :setting:`MEDIA_ROOT` is set to ``'/home/media'``, "
"and :attr:`~FileField.upload_to` is set to ``'photos/%Y/%m/%d'``. The ``'%Y/"
"%m/%d'`` part of :attr:`~FileField.upload_to` is :func:`~time.strftime` "
"formatting; ``'%Y'`` is the four-digit year, ``'%m'`` is the two-digit month "
"and ``'%d'`` is the two-digit day. If you upload a file on Jan. 15, 2007, it "
"will be saved in the directory ``/home/media/photos/2007/01/15``."
msgstr ""

# 53d2f7dad5db49ea90084bbf844873a0
#: ../../ref/models/fields.txt:568
msgid ""
"If you wanted to retrieve the uploaded file's on-disk filename, or the "
"file's size, you could use the :attr:`~django.core.files.File.name` and :"
"attr:`~django.core.files.File.size` attributes respectively; for more "
"information on the available attributes and methods, see the :class:`~django."
"core.files.File` class reference and the :doc:`/topics/files` topic guide."
msgstr ""

# 0fc5184e32a9486e99b61d5bfe57dd9c
#: ../../ref/models/fields.txt:576
msgid ""
"The file is saved as part of saving the model in the database, so the actual "
"file name used on disk cannot be relied on until after the model has been "
"saved."
msgstr ""

# bec89e0e71b74a359602d6e3a2b83808
#: ../../ref/models/fields.txt:580
msgid ""
"The uploaded file's relative URL can be obtained using the :attr:`~django.db."
"models.fields.FileField.url` attribute. Internally, this calls the :meth:"
"`~django.core.files.storage.Storage.url` method of the underlying :class:"
"`~django.core.files.storage.Storage` class."
msgstr ""

# 2ec08e26b0e84e838a3f66438fb6fb9f
#: ../../ref/models/fields.txt:587
msgid ""
"Note that whenever you deal with uploaded files, you should pay close "
"attention to where you're uploading them and what type of files they are, to "
"avoid security holes. *Validate all uploaded files* so that you're sure the "
"files are what you think they are. For example, if you blindly let somebody "
"upload files, without validation, to a directory that's within your Web "
"server's document root, then somebody could upload a CGI or PHP script and "
"execute that script by visiting its URL on your site. Don't allow that."
msgstr ""

# 49f7a5b0443b4c4f8f46079bacfb84ab
#: ../../ref/models/fields.txt:595
msgid ""
"Also note that even an uploaded HTML file, since it can be executed by the "
"browser (though not by the server), can pose security threats that are "
"equivalent to XSS or CSRF attacks."
msgstr ""

# 2aca8fb9f53e49ea8c8baa3867048661
#: ../../ref/models/fields.txt:599
msgid ""
"By default, :class:`FileField` instances are created as ``varchar(100)`` "
"columns in your database. As with other fields, you can change the maximum "
"length using the :attr:`~CharField.max_length` argument."
msgstr ""

# 2dc393f48920493bb75589e2246fb53f
#: ../../ref/models/fields.txt:604
msgid "FileField and FieldFile"
msgstr ""

# 69257b91acf64757a5583392ac3b5bfa
#: ../../ref/models/fields.txt:606
msgid ""
"When you access a :class:`FileField` on a model, you are given an instance "
"of :class:`FieldFile` as a proxy for accessing the underlying file. This "
"class has several methods that can be used to interact with file data:"
msgstr ""

# 6f709191dc8d47788c74f912dfcbc3e6
#: ../../ref/models/fields.txt:612
msgid ""
"Behaves like the standard Python ``open()`` method and opens the file "
"associated with this instance in the mode specified by ``mode``."
msgstr ""

# 8faed01a86b2416ab73a5f03cd10675d
#: ../../ref/models/fields.txt:617
msgid ""
"Behaves like the standard Python ``file.close()`` method and closes the file "
"associated with this instance."
msgstr ""

# e790ec84ba1145b197f92a3cba052aa2
#: ../../ref/models/fields.txt:622
msgid ""
"This method takes a filename and file contents and passes them to the "
"storage class for the field, then associates the stored file with the model "
"field. If you want to manually associate file data with :class:`FileField` "
"instances on your model, the ``save()`` method is used to persist that file "
"data."
msgstr ""

# 36f7d3dcd07541049da6c9582f1c8a15
#: ../../ref/models/fields.txt:628
msgid ""
"Takes two required arguments: ``name`` which is the name of the file, and "
"``content`` which is an object containing the file's contents.  The optional "
"``save`` argument controls whether or not the instance is saved after the "
"file has been altered. Defaults to ``True``."
msgstr ""

# e51db9aa80cd45759e5577f3843b4911
#: ../../ref/models/fields.txt:633
msgid ""
"Note that the ``content`` argument should be an instance of :class:`django."
"core.files.File`, not Python's built-in file object. You can construct a :"
"class:`~django.core.files.File` from an existing Python file object like "
"this::"
msgstr ""

# 9a82b274f51b4866a017cf197893c861
#: ../../ref/models/fields.txt:643
msgid "Or you can construct one from a Python string like this::"
msgstr ""

# a87d9aea9072435484ad110e4a87553a
#: ../../ref/models/fields.txt:648
msgid "For more information, see :doc:`/topics/files`."
msgstr ""

# 38496c52fcb043979f0bf4ff4d10e676
#: ../../ref/models/fields.txt:652
msgid ""
"Deletes the file associated with this instance and clears all attributes on "
"the field. Note: This method will close the file if it happens to be open "
"when ``delete()`` is called."
msgstr ""

# 6f042e9a9c0d4d29827a70ff982df47a
#: ../../ref/models/fields.txt:656
msgid ""
"The optional ``save`` argument controls whether or not the instance is saved "
"after the file has been deleted. Defaults to ``True``."
msgstr ""

# cda86741415b436db9dff785b89d5f71
#: ../../ref/models/fields.txt:664
msgid ""
"A :class:`CharField` whose choices are limited to the filenames in a certain "
"directory on the filesystem. Has three special arguments, of which the first "
"is **required**:"
msgstr ""

# 0049a6dba09b4e088b76ace9877a7650
#: ../../ref/models/fields.txt:670
msgid ""
"Required. The absolute filesystem path to a directory from which this :class:"
"`FilePathField` should get its choices. Example: ``\"/home/images\"``."
msgstr ""

# c2f59521674748b597514945defe99c6
#: ../../ref/models/fields.txt:675
msgid ""
"Optional. A regular expression, as a string, that :class:`FilePathField` "
"will use to filter filenames. Note that the regex will be applied to the "
"base filename, not the full path. Example: ``\"foo.*\\.txt$\"``, which will "
"match a file called ``foo23.txt`` but not ``bar.txt`` or ``foo23.gif``."
msgstr ""

# 69e3fdbde40845bc97903e29e9825869
#: ../../ref/models/fields.txt:682
msgid ""
"Optional. Either ``True`` or ``False``. Default is ``False``. Specifies "
"whether all subdirectories of :attr:`~FilePathField.path` should be included"
msgstr ""

# 2c6068764c71469dbf5e1ee410e1afe3
#: ../../ref/models/fields.txt:685
msgid "Of course, these arguments can be used together."
msgstr ""

# cb0cca058bc647398b5f6db948d5f4c8
#: ../../ref/models/fields.txt:687
msgid ""
"The one potential gotcha is that :attr:`~FilePathField.match` applies to the "
"base filename, not the full path. So, this example::"
msgstr ""

# e0d26884b1e443348c80bbaa4c704a9e
#: ../../ref/models/fields.txt:692
msgid ""
"...will match ``/home/images/foo.gif`` but not ``/home/images/foo/bar.gif`` "
"because the :attr:`~FilePathField.match` applies to the base filename (``foo."
"gif`` and ``bar.gif``)."
msgstr ""

# dea30d387b014a7f993966e8aa90d899
#: ../../ref/models/fields.txt:696
msgid ""
"By default, :class:`FilePathField` instances are created as ``varchar(100)`` "
"columns in your database. As with other fields, you can change the maximum "
"length using the :attr:`~CharField.max_length` argument."
msgstr ""

# 860f628306574525b1ea144234f18c8e
#: ../../ref/models/fields.txt:705
msgid "A floating-point number represented in Python by a ``float`` instance."
msgstr ""

# 7bb988f04c0a4a87b574f7878e19d7a0
#: ../../ref/models/fields.txt:713
msgid ""
"The :class:`FloatField` class is sometimes mixed up with the :class:"
"`DecimalField` class. Although they both represent real numbers, they "
"represent those numbers differently. ``FloatField`` uses Python's ``float`` "
"type internally, while ``DecimalField`` uses Python's ``Decimal`` type. For "
"information on the difference between the two, see Python's documentation "
"for the :mod:`decimal` module."
msgstr ""

# 9bd2a2fb6af0481a9c968f1d90cfae47
#: ../../ref/models/fields.txt:725
msgid ""
"Inherits all attributes and methods from :class:`FileField`, but also "
"validates that the uploaded object is a valid image."
msgstr ""

# c12dc1ea6d2e420f9456b8b3cfa8d6fd
#: ../../ref/models/fields.txt:728
msgid ""
"In addition to the special attributes that are available for :class:"
"`FileField`, an :class:`ImageField` also has :attr:`~django.core.files.File."
"height` and :attr:`~django.core.files.File.width` attributes."
msgstr ""

# 6d08a369c38f4da38621377022972cac
#: ../../ref/models/fields.txt:732
msgid ""
"To facilitate querying on those attributes, :class:`ImageField` has two "
"extra optional arguments:"
msgstr ""

# d4811a9919724108b6f54df1af3362f5
#: ../../ref/models/fields.txt:737
msgid ""
"Name of a model field which will be auto-populated with the height of the "
"image each time the model instance is saved."
msgstr ""

# d6813464a5b249ac8533b39a2c10b6f7
#: ../../ref/models/fields.txt:742
msgid ""
"Name of a model field which will be auto-populated with the width of the "
"image each time the model instance is saved."
msgstr ""

# f12e8744c0294b5cb667c071748a7d2b
#: ../../ref/models/fields.txt:745
msgid "Requires the `Python Imaging Library`_."
msgstr ""

# 798943ed8154444aa32e70e9df76c894
#: ../../ref/models/fields.txt:749
msgid ""
"By default, :class:`ImageField` instances are created as ``varchar(100)`` "
"columns in your database. As with other fields, you can change the maximum "
"length using the :attr:`~CharField.max_length` argument."
msgstr ""

# 233283a8094c4ae5803baa66f16ee91f
#: ../../ref/models/fields.txt:758
msgid ""
"An integer. The admin represents this as an ``<input type=\"text\">`` (a "
"single-line input)."
msgstr ""

# a6265946e73344568fe12b3ad00eea57
#: ../../ref/models/fields.txt:766
msgid ""
"An IP address, in string format (e.g. \"192.0.2.30\"). The admin represents "
"this as an ``<input type=\"text\">`` (a single-line input)."
msgstr ""

# 869f8635747148788147fa80e57d7f2f
#: ../../ref/models/fields.txt:776
msgid ""
"An IPv4 or IPv6 address, in string format (e.g. ``192.0.2.30`` or "
"``2a02:42fe::4``). The admin represents this as an ``<input type=\"text\">`` "
"(a single-line input)."
msgstr ""

# 29755a5f6a9a41dca9b0736070668aeb
#: ../../ref/models/fields.txt:788
msgid ""
"Limits valid inputs to the specified protocol. Accepted values are "
"``'both'`` (default), ``'IPv4'`` or ``'IPv6'``. Matching is case insensitive."
msgstr ""

# 01cb45ed7b024d2680891608db643cc1
#: ../../ref/models/fields.txt:804
msgid ""
"Like a :class:`BooleanField`, but allows ``NULL`` as one of the options. Use "
"this instead of a :class:`BooleanField` with ``null=True``. The admin "
"represents this as a ``<select>`` box with \"Unknown\", \"Yes\" and \"No\" "
"choices."
msgstr ""

# 83a6546f3a7a4db4b64953c2497fcb90
#: ../../ref/models/fields.txt:809
msgid "``PositiveIntegerField``"
msgstr ""

# fe0abfdc29ca4287a297e61ab728bd22
#: ../../ref/models/fields.txt:813
msgid ""
"Like an :class:`IntegerField`, but must be either positive or zero (`0`). "
"The value `0` is accepted for backward compatibility reasons."
msgstr ""

# 070f183a0dca4de19c198e9a818e41a1
#: ../../ref/models/fields.txt:817
msgid "``PositiveSmallIntegerField``"
msgstr ""

# bd4682157b004e5f811c4362118ef6d3
#: ../../ref/models/fields.txt:821
msgid ""
"Like a :class:`PositiveIntegerField`, but only allows values under a certain "
"(database-dependent) point."
msgstr ""

# 5744dbcb1d2840b88bc3194bbe889644
#: ../../ref/models/fields.txt:829
msgid ""
":term:`Slug` is a newspaper term. A slug is a short label for something, "
"containing only letters, numbers, underscores or hyphens. They're generally "
"used in URLs."
msgstr ""

# cd017dc62b85488eaabdda4c5c569efc
#: ../../ref/models/fields.txt:833
msgid ""
"Like a CharField, you can specify :attr:`~CharField.max_length` (read the "
"note about database portability and :attr:`~CharField.max_length` in that "
"section, too). If :attr:`~CharField.max_length` is not specified, Django "
"will use a default length of 50."
msgstr ""

# eb4b2b1a1a904f50b3f4a48473f05395
#: ../../ref/models/fields.txt:838
msgid "Implies setting :attr:`Field.db_index` to ``True``."
msgstr ""

# 5720a11ad05b4ca4b51c57cc3f690ab1
#: ../../ref/models/fields.txt:840
msgid ""
"It is often useful to automatically prepopulate a SlugField based on the "
"value of some other value.  You can do this automatically in the admin "
"using :attr:`~django.contrib.admin.ModelAdmin.prepopulated_fields`."
msgstr ""

# f02fa03f754e42479bb56f38cb0fa444
#: ../../ref/models/fields.txt:845
msgid "``SmallIntegerField``"
msgstr ""

# 3c672e2984054ae48e06d1d431984321
#: ../../ref/models/fields.txt:849
msgid ""
"Like an :class:`IntegerField`, but only allows values under a certain "
"(database-dependent) point."
msgstr ""

# 7f75ad7537a344978a991cb8da9407c7
#: ../../ref/models/fields.txt:853
msgid "``TextField``"
msgstr ""

# 2b36d80b463b40eb99688b1f0c17a5f5
#: ../../ref/models/fields.txt:857
msgid ""
"A large text field. The admin represents this as a ``<textarea>`` (a multi-"
"line input)."
msgstr ""

# 10efe590f6204048bd053052b86fc80b
#: ../../ref/models/fields.txt:862
msgid ""
"If you are using this field with MySQLdb 1.2.1p2 and the ``utf8_bin`` "
"collation (which is *not* the default), there are some issues to be aware "
"of. Refer to the :ref:`MySQL database notes <mysql-collation>` for details."
msgstr ""

# 42955e99b61d4250bcecba349a086bb5
#: ../../ref/models/fields.txt:872
msgid ""
"A time, represented in Python by a ``datetime.time`` instance. Accepts the "
"same auto-population options as :class:`DateField`."
msgstr ""

# 73539c96d0b442b3b503a39573afc6a5
#: ../../ref/models/fields.txt:875
msgid ""
"The admin represents this as an ``<input type=\"text\">`` with some "
"JavaScript shortcuts."
msgstr ""

# 8532186682594083a7c5cb595c853d6b
#: ../../ref/models/fields.txt:883
msgid "A :class:`CharField` for a URL. Has one extra optional argument:"
msgstr ""

# 976cbb72de8a47b7ad82365b6f13f7a9
#: ../../ref/models/fields.txt:891
msgid ""
"If ``True``, the URL given will be checked for existence (i.e., the URL "
"actually loads and doesn't give a 404 response) using a ``HEAD`` request. "
"Redirects are allowed, but will not be followed."
msgstr ""

# 97d52f53b23941a3a271bf694c82b369
#: ../../ref/models/fields.txt:895
msgid ""
"Note that when you're using the single-threaded development server, "
"validating a URL being served by the same server will hang. This should not "
"be a problem for multithreaded servers."
msgstr ""

# feadfae77ee34cc59f3c85b9e7300110
#: ../../ref/models/fields.txt:901
msgid ""
"Like all :class:`CharField` subclasses, :class:`URLField` takes the "
"optional :attr:`~CharField.max_length`argument. If you don't specify :attr:"
"`~CharField.max_length`, a default of 200 is used."
msgstr ""

# 2b381ed9287441068f41da551d5d65b9
#: ../../ref/models/fields.txt:906
msgid "``XMLField``"
msgstr ""

# 6a9ba8710a1940be91200028d7cc6e50
#: ../../ref/models/fields.txt:913
msgid ""
"A :class:`TextField` that stores XML data and a path to a schema. Takes one "
"optional argument:"
msgstr ""

# f60f8e748b114febbe8e8998099e853a
#: ../../ref/models/fields.txt:918
msgid "The filesystem path to a schema for the field."
msgstr ""

# d68d0c7e54c640a4b7085c9d21a75cdf
#: ../../ref/models/fields.txt:922
msgid "Relationship fields"
msgstr ""

# dcb4b98ae11049f98e87f57435b48eaa
#: ../../ref/models/fields.txt:929
msgid "Django also defines a set of fields that represent relations."
msgstr ""

# f2fba8d50ec94c969e72e1f882e64287
#: ../../ref/models/fields.txt:934
msgid "``ForeignKey``"
msgstr ""

# 98b6ed7b80144e16a0c9a72d9cc527d5
#: ../../ref/models/fields.txt:938
msgid ""
"A many-to-one relationship. Requires a positional argument: the class to "
"which the model is related."
msgstr ""

# 1e29e5b1a5b34e358ba28ba5acba097b
#: ../../ref/models/fields.txt:943
msgid ""
"To create a recursive relationship -- an object that has a many-to-one "
"relationship with itself -- use ``models.ForeignKey('self')``."
msgstr ""

# 5b93e1c38e4a4320b5db6421ae205192
#: ../../ref/models/fields.txt:948
msgid ""
"If you need to create a relationship on a model that has not yet been "
"defined, you can use the name of the model, rather than the model object "
"itself::"
msgstr ""

# 82756681b59146649075ecf87e52ddb7
#: ../../ref/models/fields.txt:958
msgid ""
"To refer to models defined in another application, you can explicitly "
"specify a model with the full application label. For example, if the "
"``Manufacturer`` model above is defined in another application called "
"``production``, you'd need to use::"
msgstr ""

# 324673d03cd941139ef2b7e494aadd98
#: ../../ref/models/fields.txt:966
msgid ""
"This sort of reference can be useful when resolving circular import "
"dependencies between two applications."
msgstr ""

# 0d845d11bd984617a70ec3baa04de3fe
# d85a39d7e0af45fa93219b93ec5bd37b
#: ../../ref/models/fields.txt:970 ../../ref/models/fields.txt:1084
msgid "Database Representation"
msgstr ""

# a20dabe588fa47d9badc0a3743c1f5f9
#: ../../ref/models/fields.txt:972
msgid ""
"Behind the scenes, Django appends ``\"_id\"`` to the field name to create "
"its database column name. In the above example, the database table for the "
"``Car`` model will have a ``manufacturer_id`` column. (You can change this "
"explicitly by specifying :attr:`~Field.db_column`) However, your code should "
"never have to deal with the database column name, unless you write custom "
"SQL. You'll always deal with the field names of your model object."
msgstr ""

# ff1f12615fbf4909ab7e3bcd294c1408
# ca9aad2f4d964421ab7aeaeea868a0d1
#: ../../ref/models/fields.txt:982 ../../ref/models/fields.txt:1099
msgid "Arguments"
msgstr ""

# 66d6ee04e6f9476087dbcfd8762f932c
#: ../../ref/models/fields.txt:984
msgid ""
":class:`ForeignKey` accepts an extra set of arguments -- all optional -- "
"that define the details of how the relation works."
msgstr ""

# c5f369a250fb45eca6f7f37ea02941d9
#: ../../ref/models/fields.txt:989
msgid ""
"A dictionary of lookup arguments and values (see :doc:`/topics/db/queries`) "
"that limit the available admin choices for this object. Use this with "
"functions from the Python ``datetime`` module to limit choices of objects by "
"date. For example::"
msgstr ""

# d2cb11f24ab54b318a59b1270ad9bc39
#: ../../ref/models/fields.txt:996
msgid ""
"only allows the choice of related objects with a ``pub_date`` before the "
"current date/time to be chosen."
msgstr ""

# 0c23dc4689dc408fb7aeaf4a7e56b2c2
#: ../../ref/models/fields.txt:999
msgid ""
"Instead of a dictionary this can also be a :class:`~django.db.models.Q` "
"object for more :ref:`complex queries <complex-lookups-with-q>`. However, if "
"``limit_choices_to`` is a :class:`~django.db.models.Q` object then it will "
"only have an effect on the choices available in the admin when the field is "
"not listed in ``raw_id_fields`` in the ``ModelAdmin`` for the model."
msgstr ""

# 5003c4dd40724d8ab6d83313d16e695f
#: ../../ref/models/fields.txt:1007
msgid ""
"The name to use for the relation from the related object back to this one. "
"See the :ref:`related objects documentation <backwards-related-objects>` for "
"a full explanation and example. Note that you must set this value when "
"defining relations on :ref:`abstract models <abstract-base-classes>`; and "
"when you do so :ref:`some special syntax <abstract-related-name>` is "
"available."
msgstr ""

# b1ccff9c53cf48c890bb23bd16d1de42
#: ../../ref/models/fields.txt:1014
msgid ""
"If you'd prefer Django didn't create a backwards relation, set "
"``related_name`` to ``'+'``. For example, this will ensure that the ``User`` "
"model won't get a backwards relation to this model::"
msgstr ""

# 650d6beefc914570b84b9bb48c423fd5
#: ../../ref/models/fields.txt:1022
msgid ""
"The field on the related object that the relation is to. By default, Django "
"uses the primary key of the related object."
msgstr ""

# bc4270ac5c874aec8029dada7c8ebda9
#: ../../ref/models/fields.txt:1029
msgid ""
"When an object referenced by a :class:`ForeignKey` is deleted, Django by "
"default emulates the behavior of the SQL constraint ``ON DELETE CASCADE`` "
"and also deletes the object containing the ``ForeignKey``. This behavior can "
"be overridden by specifying the :attr:`on_delete` argument. For example, if "
"you have a nullable :class:`ForeignKey` and you want it to be set null when "
"the referenced object is deleted::"
msgstr ""

# 0800c247493d48dfa0cb078f4e693b61
#: ../../ref/models/fields.txt:1038
msgid ""
"The possible values for :attr:`on_delete` are found in :mod:`django.db."
"models`:"
msgstr ""

# 7187effbc5f24d51adecb1c7dce31d66
#: ../../ref/models/fields.txt:1041
msgid ":attr:`~django.db.models.CASCADE`: Cascade deletes; the default."
msgstr ""

# 95b39f89bdf548c29be42b38c1bac7f1
#: ../../ref/models/fields.txt:1043
msgid ""
":attr:`~django.db.models.PROTECT`: Prevent deletion of the referenced object "
"by raising :exc:`django.db.models.ProtectedError`, a subclass of :exc:"
"`django.db.IntegrityError`."
msgstr ""

# e797d11f149b4b66a63f8ec8187cb1ae
#: ../../ref/models/fields.txt:1047
msgid ""
":attr:`~django.db.models.SET_NULL`: Set the :class:`ForeignKey` null; this "
"is only possible if :attr:`null` is ``True``."
msgstr ""

# f81da045fe9b45d98fa273ee06494a55
#: ../../ref/models/fields.txt:1050
msgid ""
":attr:`~django.db.models.SET_DEFAULT`: Set the :class:`ForeignKey` to its "
"default value; a default for the :class:`ForeignKey` must be set."
msgstr ""

# a3a1db5b54fe48e7a368eda87b4e9d98
#: ../../ref/models/fields.txt:1053
msgid ""
":func:`~django.db.models.SET()`: Set the :class:`ForeignKey` to the value "
"passed to :func:`~django.db.models.SET()`, or if a callable is passed in, "
"the result of calling it. In most cases, passing a callable will be "
"necessary to avoid executing queries at the time your models.py is imported::"
msgstr ""

# 268531c96d874619bb8fa7db3502c3e1
#: ../../ref/models/fields.txt:1065
msgid ""
":attr:`~django.db.models.DO_NOTHING`: Take no action. If your database "
"backend enforces referential integrity, this will cause an :exc:`~django.db."
"IntegrityError` unless you manually add a SQL ``ON DELETE`` constraint to "
"the database field (perhaps using :ref:`initial sql<initial-sql>`)."
msgstr ""

# df633ff1652c41ceb776e71ad952a0e8
#: ../../ref/models/fields.txt:1074
msgid "``ManyToManyField``"
msgstr ""

# e774adbdceb1402a9e5ce5f1ac02b9f4
#: ../../ref/models/fields.txt:1078
msgid ""
"A many-to-many relationship. Requires a positional argument: the class to "
"which the model is related. This works exactly the same as it does for :"
"class:`ForeignKey`, including all the options regarding :ref:`recursive "
"<recursive-relationships>` and :ref:`lazy <lazy-relationships>` "
"relationships."
msgstr ""

# 6e44b69d723942c5a1d188ea6b88bd32
#: ../../ref/models/fields.txt:1086
msgid ""
"Behind the scenes, Django creates an intermediary join table to represent "
"the many-to-many relationship. By default, this table name is generated "
"using the name of the many-to-many field and the model that contains it. "
"Since some databases don't support table names above a certain length, these "
"table names will be automatically truncated to 64 characters and a "
"uniqueness hash will be used. This means you might see table names like "
"``author_books_9cdf4``; this is perfectly normal. You can manually provide "
"the name of the join table using the :attr:`~ManyToManyField.db_table` "
"option."
msgstr ""

# defc287802ba47258f123a5208f3d870
#: ../../ref/models/fields.txt:1101
msgid ""
":class:`ManyToManyField` accepts an extra set of arguments -- all optional "
"-- that control how the relationship functions."
msgstr ""

# 46795a5d141145908a01a5640f9112ea
#: ../../ref/models/fields.txt:1106
msgid "Same as :attr:`ForeignKey.related_name`."
msgstr ""

# d3b4e4b6da04493b9c7270aeae08f48c
#: ../../ref/models/fields.txt:1110
msgid "Same as :attr:`ForeignKey.limit_choices_to`."
msgstr ""

# be7287fb75374e199a48a5336952f1f0
#: ../../ref/models/fields.txt:1112
msgid ""
"``limit_choices_to`` has no effect when used on a ``ManyToManyField`` with a "
"custom intermediate table specified using the :attr:`~ManyToManyField."
"through` parameter."
msgstr ""

# 1de6fdd3a11849cc8628b5c554bfda77
#: ../../ref/models/fields.txt:1118
msgid ""
"Only used in the definition of ManyToManyFields on self. Consider the "
"following model::"
msgstr ""

# d3cd0dd81df848a18f6e8af0ac7b8fbb
#: ../../ref/models/fields.txt:1124
msgid ""
"When Django processes this model, it identifies that it has a :class:"
"`ManyToManyField` on itself, and as a result, it doesn't add a "
"``person_set`` attribute to the ``Person`` class. Instead, the :class:"
"`ManyToManyField` is assumed to be symmetrical -- that is, if I am your "
"friend, then you are my friend."
msgstr ""

# a0dd027501b44f058c67735367067f24
#: ../../ref/models/fields.txt:1130
msgid ""
"If you do not want symmetry in many-to-many relationships with ``self``, "
"set :attr:`~ManyToManyField.symmetrical` to ``False``. This will force "
"Django to add the descriptor for the reverse relationship, allowing :class:"
"`ManyToManyField` relationships to be non-symmetrical."
msgstr ""

# 0d6a41f4d8b24bb791ed2951a8605f4d
#: ../../ref/models/fields.txt:1137
msgid ""
"Django will automatically generate a table to manage many-to-many "
"relationships. However, if you want to manually specify the intermediary "
"table, you can use the :attr:`~ManyToManyField.through` option to specify "
"the Django model that represents the intermediate table that you want to use."
msgstr ""

# d6745b8a1fb04c89b47576d27ca9ce2a
#: ../../ref/models/fields.txt:1143
msgid ""
"The most common use for this option is when you want to associate :ref:"
"`extra data with a many-to-many relationship <intermediary-manytomany>`."
msgstr ""

# 0ae89797140e419688b1d6bfa341ee10
#: ../../ref/models/fields.txt:1149
msgid ""
"The name of the table to create for storing the many-to-many data. If this "
"is not provided, Django will assume a default name based upon the names of "
"the two tables being joined."
msgstr ""

# 804231918ba94c80b97c5f62a156a870
#: ../../ref/models/fields.txt:1156
msgid "``OneToOneField``"
msgstr ""

# 1c6bdc66d6fb49e3b5aedf87d3c1105d
#: ../../ref/models/fields.txt:1160
msgid ""
"A one-to-one relationship. Conceptually, this is similar to a :class:"
"`ForeignKey` with :attr:`unique=True <Field.unique>`, but the \"reverse\" "
"side of the relation will directly return a single object."
msgstr ""

# e4ffd88fcec24e2e93bb054f07a4d620
#: ../../ref/models/fields.txt:1164
msgid ""
"This is most useful as the primary key of a model which \"extends\" another "
"model in some way; :ref:`multi-table-inheritance` is implemented by adding "
"an implicit one-to-one relation from the child model to the parent model, "
"for example."
msgstr ""

# 48aad4910c004bf58dfec1cc41a5e2d0
#: ../../ref/models/fields.txt:1169
msgid ""
"One positional argument is required: the class to which the model will be "
"related. This works exactly the same as it does for :class:`ForeignKey`, "
"including all the options regarding :ref:`recursive <recursive-"
"relationships>` and :ref:`lazy <lazy-relationships>` relationships."
msgstr ""

# c915bdf76cee4b1aa723a9e4018ee98f
#: ../../ref/models/fields.txt:1176
msgid ""
"Additionally, ``OneToOneField`` accepts all of the extra arguments accepted "
"by :class:`ForeignKey`, plus one extra argument:"
msgstr ""

# cc7f465d459e4bdeab228d950f307298
#: ../../ref/models/fields.txt:1181
msgid ""
"When ``True`` and used in a model which inherits from another (concrete) "
"model, indicates that this field should be used as the link back to the "
"parent class, rather than the extra ``OneToOneField`` which would normally "
"be implicitly created by subclassing."
msgstr ""

# 86c8f2d3f4e44c12812adcbddc418e7d
#: ../../ref/models/index.txt:5
msgid ""
"Model API reference. For introductory material, see :doc:`/topics/db/models`."
msgstr ""

# ffb6be072c07496b934fe8f5776f21f5
#: ../../ref/models/instances.txt:3
msgid "Model instance reference"
msgstr ""

# ba10cb2bc71b4a09bd7bf6af1cf06c5f
#: ../../ref/models/instances.txt:7
msgid ""
"This document describes the details of the ``Model`` API. It builds on the "
"material presented in the :doc:`model </topics/db/models>` and :doc:"
"`database query </topics/db/queries>` guides, so you'll probably want to "
"read and understand those documents before reading this one."
msgstr ""

# df72421db3bd402f80e8ed1b5abdf307
# 1b98eea8280c428fbb3e30f4100c797f
#: ../../ref/models/instances.txt:12 ../../ref/models/querysets.txt:12
msgid ""
"Throughout this reference we'll use the :ref:`example Weblog models "
"<queryset-model-example>` presented in the :doc:`database query guide </"
"topics/db/queries>`."
msgstr ""

# 899f91c194da48dbb87c642525af6b49
#: ../../ref/models/instances.txt:17
msgid "Creating objects"
msgstr ""

# 2f8450c4f96c4f04aacb68369dde6a5d
#: ../../ref/models/instances.txt:19
msgid ""
"To create a new instance of a model, just instantiate it like any other "
"Python class:"
msgstr ""

# a3fa1e7969c14526a03d28de4fdbd5dc
#: ../../ref/models/instances.txt:24
msgid ""
"The keyword arguments are simply the names of the fields you've defined on "
"your model. Note that instantiating a model in no way touches your database; "
"for that, you need to :meth:`~Model.save()`."
msgstr ""

# a59071584a804e7faadf74154423cc22
#: ../../ref/models/instances.txt:31
msgid "Validating objects"
msgstr ""

# 6baba76913834425a8150b8ef04c00ab
#: ../../ref/models/instances.txt:35
msgid "There are three steps involved in validating a model:"
msgstr ""

# f45e084fd2a84bd9aabc6a187c973175
#: ../../ref/models/instances.txt:37
msgid "Validate the model fields"
msgstr ""

# a23c833c17bd4923b41bde73efe58d31
#: ../../ref/models/instances.txt:38
msgid "Validate the model as a whole"
msgstr ""

# 8601b865ba604cc2aef688ac9af501fa
#: ../../ref/models/instances.txt:39
msgid "Validate the field uniqueness"
msgstr ""

# c9b7b1de78184362bd0f50f2481175dd
#: ../../ref/models/instances.txt:41
msgid ""
"All three steps are performed when you call a model's :meth:`~Model."
"full_clean()` method."
msgstr ""

# bf96a73abcca42bcb1e457479dc811ff
#: ../../ref/models/instances.txt:44
msgid ""
"When you use a :class:`~django.forms.ModelForm`, the call to :meth:`~django."
"forms.Form.is_valid()` will perform these validation steps for all the "
"fields that are included on the form. See the :doc:`ModelForm documentation "
"</topics/forms/modelforms>` for more information. You should only need to "
"call a model's :meth:`~Model.full_clean()` method if you plan to handle "
"validation errors yourself, or if you have excluded fields from the :class:"
"`~django.forms.ModelForm` that require validation."
msgstr ""

# 2064bdde61754309817668631a177e58
#: ../../ref/models/instances.txt:54
msgid ""
"This method calls :meth:`Model.clean_fields()`, :meth:`Model.clean()`, and :"
"meth:`Model.validate_unique()`, in that order and raises a :exc:`~django."
"core.exceptions.ValidationError` that has a ``message_dict`` attribute "
"containing errors from all three stages."
msgstr ""

# 65ff9391955a46eabb74dcf4016f1139
#: ../../ref/models/instances.txt:59
msgid ""
"The optional ``exclude`` argument can be used to provide a list of field "
"names that can be excluded from validation and cleaning. :class:`~django."
"forms.ModelForm` uses this argument to exclude fields that aren't present on "
"your form from being validated since any errors raised could not be "
"corrected by the user."
msgstr ""

# 6360daf8e6024c17bfc2407085ce01b8
#: ../../ref/models/instances.txt:65
msgid ""
"Note that ``full_clean()`` will *not* be called automatically when you call "
"your model's :meth:`~Model.save()` method, nor as a result of :class:"
"`~django.forms.ModelForm` validation. You'll need to call it manually when "
"you want to run one-step model validation for your own manually created "
"models."
msgstr ""

# a12901534b3b407cb2e45561668c3bcb
#: ../../ref/models/instances.txt:79
msgid ""
"The first step ``full_clean()`` performs is to clean each individual field."
msgstr ""

# eda1db20301a4ad496a07dbc78be1737
#: ../../ref/models/instances.txt:83
msgid ""
"This method will validate all fields on your model. The optional ``exclude`` "
"argument lets you provide a list of field names to exclude from validation. "
"It will raise a :exc:`~django.core.exceptions.ValidationError` if any fields "
"fail validation."
msgstr ""

# 69fa6dc890034152999c5b1b334b330b
#: ../../ref/models/instances.txt:88
msgid ""
"The second step ``full_clean()`` performs is to call :meth:`Model.clean()`. "
"This method should be overridden to perform custom validation on your model."
msgstr ""

# c3cfc2eb6f854eef8aea26408437ff2b
#: ../../ref/models/instances.txt:93
msgid ""
"This method should be used to provide custom model validation, and to modify "
"attributes on your model if desired. For instance, you could use it to "
"automatically provide a value for a field, or to do validation that requires "
"access to more than a single field::"
msgstr ""

# 12d3a01a3f604b84b31a1c2812f27a62
#: ../../ref/models/instances.txt:107
msgid ""
"Any :exc:`~django.core.exceptions.ValidationError` exceptions raised by "
"``Model.clean()`` will be stored in a special key error dictionary key, "
"``NON_FIELD_ERRORS``, that is used for errors that are tied to the entire "
"model instead of to a specific field::"
msgstr ""

# a366db6782284ce7b99a2b5ecc00deb4
#: ../../ref/models/instances.txt:118
msgid ""
"Finally, ``full_clean()`` will check any unique constraints on your model."
msgstr ""

# bc9369beaf734990b2941413ad12a18d
#: ../../ref/models/instances.txt:122
msgid ""
"This method is similar to :meth:`~Model.clean_fields`, but validates all "
"uniqueness constraints on your model instead of individual field values. The "
"optional ``exclude`` argument allows you to provide a list of field names to "
"exclude from validation. It will raise a :exc:`~django.core.exceptions."
"ValidationError` if any fields fail validation."
msgstr ""

# 2fbc5f8c479747c3a9b1a2566b8a9581
#: ../../ref/models/instances.txt:128
msgid ""
"Note that if you provide an ``exclude`` argument to ``validate_unique()``, "
"any :attr:`~django.db.models.Options.unique_together` constraint involving "
"one of the fields you provided will not be checked."
msgstr ""

# b59bf730bf634effa36d592f152e33c6
#: ../../ref/models/instances.txt:134
msgid "Saving objects"
msgstr ""

# 4ba564034cd64ee790aaedc76965d230
#: ../../ref/models/instances.txt:136
msgid "To save an object back to the database, call ``save()``:"
msgstr ""

# 2ae33ae424b346d1bd3c01ed1859ae2e
#: ../../ref/models/instances.txt:143
msgid ""
"If you want customized saving behavior, you can override this ``save()`` "
"method. See :ref:`overriding-model-methods` for more details."
msgstr ""

# 7e78b8136f884f60970b37360d90f1cb
#: ../../ref/models/instances.txt:146
msgid ""
"The model save process also has some subtleties; see the sections below."
msgstr ""

# fed5b5924527446abfd7fca603b65e2f
#: ../../ref/models/instances.txt:149
msgid "Auto-incrementing primary keys"
msgstr ""

# 674c6c45ca2d42ef9aad8f3159a7e8fc
#: ../../ref/models/instances.txt:151
msgid ""
"If a model has an :class:`~django.db.models.AutoField` — an auto-"
"incrementing primary key — then that auto-incremented value will be "
"calculated and saved as an attribute on your object the first time you call "
"``save()``::"
msgstr ""

# 8740b0f48a6547c4a7d7fd785eac8de0
#: ../../ref/models/instances.txt:160
msgid ""
"There's no way to tell what the value of an ID will be before you call ``save"
"()``, because that value is calculated by your database, not by Django."
msgstr ""

# 42996e793dda4c70b3b61c91bd1a6891
#: ../../ref/models/instances.txt:163
msgid ""
"For convenience, each model has an :class:`~django.db.models.AutoField` "
"named ``id`` by default unless you explicitly specify ``primary_key=True`` "
"on a field in your model. See the documentation for :class:`~django.db."
"models.AutoField` for more details."
msgstr ""

# a34c96940dd64382afe522c85a97a65e
#: ../../ref/models/instances.txt:169
msgid "The ``pk`` property"
msgstr ""

# a5b7b70eb7fc498b9b35548d6461db3a
#: ../../ref/models/instances.txt:173
msgid ""
"Regardless of whether you define a primary key field yourself, or let Django "
"supply one for you, each model will have a property called ``pk``. It "
"behaves like a normal attribute on the model, but is actually an alias for "
"whichever attribute is the primary key field for the model. You can read and "
"set this value, just as you would for any other attribute, and it will "
"update the correct field in the model."
msgstr ""

# e2f8123c29ee41bdb57afd360b71f342
#: ../../ref/models/instances.txt:181
msgid "Explicitly specifying auto-primary-key values"
msgstr ""

# 0a964c79c3314046af46c93336d8bd05
#: ../../ref/models/instances.txt:183
msgid ""
"If a model has an :class:`~django.db.models.AutoField` but you want to "
"define a new object's ID explicitly when saving, just define it explicitly "
"before saving, rather than relying on the auto-assignment of the ID::"
msgstr ""

# 016ae4e79da343d5904a2eebff70478a
#: ../../ref/models/instances.txt:192
msgid ""
"If you assign auto-primary-key values manually, make sure not to use an "
"already-existing primary-key value! If you create a new object with an "
"explicit primary-key value that already exists in the database, Django will "
"assume you're changing the existing record rather than creating a new one."
msgstr ""

# c41ed4dfa11e4525aad03ad029f40a8f
#: ../../ref/models/instances.txt:197
msgid ""
"Given the above ``'Cheddar Talk'`` blog example, this example would override "
"the previous record in the database::"
msgstr ""

# 35a2f5e6d4d645c9aaff2896eb7dd385
#: ../../ref/models/instances.txt:203
msgid ""
"See `How Django knows to UPDATE vs. INSERT`_, below, for the reason this "
"happens."
msgstr ""

# 6cbc0d5104e14452b34e9a8480d2221d
#: ../../ref/models/instances.txt:206
msgid ""
"Explicitly specifying auto-primary-key values is mostly useful for bulk-"
"saving objects, when you're confident you won't have primary-key collision."
msgstr ""

# 85b69663d979486cb56ef10474553242
#: ../../ref/models/instances.txt:210
msgid "What happens when you save?"
msgstr ""

# bdd2698cd53b4badbcc97e2c5858bc51
#: ../../ref/models/instances.txt:212
msgid "When you save an object, Django performs the following steps:"
msgstr ""

# ba66ccb5787d4356a6341fa8d06ba9bf
#: ../../ref/models/instances.txt:214
msgid ""
"**Emit a pre-save signal.** The :doc:`signal </ref/signals>` :attr:`django."
"db.models.signals.pre_save` is sent, allowing any functions listening for "
"that signal to take some customized action."
msgstr ""

# 135321e735a3490085dadf0c64c1682b
#: ../../ref/models/instances.txt:219
msgid ""
"**Pre-process the data.** Each field on the object is asked to perform any "
"automated data modification that the field may need to perform."
msgstr ""

# 60c96da566b4496cb4673ce72ec5da09
#: ../../ref/models/instances.txt:223
msgid ""
"Most fields do *no* pre-processing — the field data is kept as-is. Pre-"
"processing is only used on fields that have special behavior.  For example, "
"if your model has a :class:`~django.db.models.DateField` with "
"``auto_now=True``, the pre-save phase will alter the data in the object to "
"ensure that the date field contains the current date stamp. (Our "
"documentation doesn't yet include a list of all the fields with this "
"\"special behavior.\")"
msgstr ""

# 31e41221681449639f82a10f00605f6a
#: ../../ref/models/instances.txt:231
msgid ""
"**Prepare the data for the database.** Each field is asked to provide its "
"current value in a data type that can be written to the database."
msgstr ""

# 87e14230cf1f45e79d8448de4b86fc79
#: ../../ref/models/instances.txt:234
msgid ""
"Most fields require *no* data preparation. Simple data types, such as "
"integers and strings, are 'ready to write' as a Python object. However, more "
"complex data types often require some modification."
msgstr ""

# fe47c9e37d1d4ff5a81f7aeb10df8b5f
#: ../../ref/models/instances.txt:238
msgid ""
"For example, :class:`~django.db.models.DateField` fields use a Python "
"``datetime`` object to store data. Databases don't store ``datetime`` "
"objects, so the field value must be converted into an ISO-compliant date "
"string for insertion into the database."
msgstr ""

# 51c2e5820ee04dd3be7b989f9ff61a1d
#: ../../ref/models/instances.txt:243
msgid ""
"**Insert the data into the database.** The pre-processed, prepared data is "
"then composed into an SQL statement for insertion into the database."
msgstr ""

# 55a50d9346354bdb9b2cee81badb742a
#: ../../ref/models/instances.txt:247
msgid ""
"**Emit a post-save signal.** The signal :attr:`django.db.models.signals."
"post_save` is sent, allowing any functions listening for that signal to take "
"some customized action."
msgstr ""

# 32355e0a08e94700ab71d69fa989d61a
#: ../../ref/models/instances.txt:253
msgid "How Django knows to UPDATE vs. INSERT"
msgstr ""

# 83588ae8fa934d6e8e34a4c67dd9ea56
#: ../../ref/models/instances.txt:255
msgid ""
"You may have noticed Django database objects use the same ``save()`` method "
"for creating and changing objects. Django abstracts the need to use "
"``INSERT`` or ``UPDATE`` SQL statements. Specifically, when you call ``save()"
"``, Django follows this algorithm:"
msgstr ""

# 47da6f0b263d480b8e8d716c6c4140d5
#: ../../ref/models/instances.txt:260
msgid ""
"If the object's primary key attribute is set to a value that evaluates to "
"``True`` (i.e., a value other than ``None`` or the empty string), Django "
"executes a ``SELECT`` query to determine whether a record with the given "
"primary key already exists."
msgstr ""

# 373c2cb7d64544848c6d661c32ebc1b2
#: ../../ref/models/instances.txt:264
msgid ""
"If the record with the given primary key does already exist, Django executes "
"an ``UPDATE`` query."
msgstr ""

# ea1a977f6d954d5c9d12543d3403726c
#: ../../ref/models/instances.txt:266
msgid ""
"If the object's primary key attribute is *not* set, or if it's set but a "
"record doesn't exist, Django executes an ``INSERT``."
msgstr ""

# e1d554559e10406dbb575e5e748eabb7
#: ../../ref/models/instances.txt:269
msgid ""
"The one gotcha here is that you should be careful not to specify a primary-"
"key value explicitly when saving new objects, if you cannot guarantee the "
"primary-key value is unused. For more on this nuance, see `Explicitly "
"specifying auto-primary-key values`_ above and `Forcing an INSERT or "
"UPDATE`_ below."
msgstr ""

# 42ccf1b3ee8a4d81b10ab7625a33945c
#: ../../ref/models/instances.txt:277
msgid "Forcing an INSERT or UPDATE"
msgstr ""

# 4a0ce7966dc24a69957f8d94f2cd9bb5
#: ../../ref/models/instances.txt:279
msgid ""
"In some rare circumstances, it's necessary to be able to force the :meth:"
"`~Model.save()` method to perform an SQL ``INSERT`` and not fall back to "
"doing an ``UPDATE``. Or vice-versa: update, if possible, but not insert a "
"new row. In these cases you can pass the ``force_insert=True`` or "
"``force_update=True`` parameters to the :meth:`~Model.save()` method. "
"Obviously, passing both parameters is an error: you cannot both insert *and* "
"update at the same time!"
msgstr ""

# 16762dcdc38d435ba3e378cd08fd0c57
#: ../../ref/models/instances.txt:287
msgid ""
"It should be very rare that you'll need to use these parameters. Django will "
"almost always do the right thing and trying to override that will lead to "
"errors that are difficult to track down. This feature is for advanced use "
"only."
msgstr ""

# 023a621ca70b4ad192192298166a34c7
#: ../../ref/models/instances.txt:293
msgid "Updating attributes based on existing fields"
msgstr ""

# 186425b638004879b8c20feb8ff177c0
#: ../../ref/models/instances.txt:295
msgid ""
"Sometimes you'll need to perform a simple arithmetic task on a field, such "
"as incrementing or decrementing the current value. The obvious way to "
"achieve this is to do something like::"
msgstr ""

# 84d8a582828d4f70a06f0215b0f357a9
#: ../../ref/models/instances.txt:303
msgid ""
"If the old ``number_sold`` value retrieved from the database was 10, then "
"the value of 11 will be written back to the database."
msgstr ""

# 36e6a56da02f4683919a48e33cadf334
#: ../../ref/models/instances.txt:306
msgid ""
"This sequence has a standard update problem in that it contains a race "
"condition. If another thread of execution has already saved an updated value "
"after the current thread retrieved the old value, the current thread will "
"only save the old value plus one, rather than the new (current) value plus "
"one."
msgstr ""

# 15dc7e2f5e0649d2ba322e0b8a95ce2f
#: ../../ref/models/instances.txt:311
msgid ""
"The process can be made robust and slightly faster by expressing the update "
"relative to the original field value, rather than as an explicit assignment "
"of a new value. Django provides :ref:`F() expressions <query-expressions>` "
"for performing this kind of relative update. Using ``F()`` expressions, the "
"previous example is expressed as::"
msgstr ""

# a20fcda021e14af0b3c6639a2b51a7d6
#: ../../ref/models/instances.txt:322
msgid ""
"This approach doesn't use the initial value from the database. Instead, it "
"makes the database do the update based on whatever value is current at the "
"time that the :meth:`~Model.save()` is executed."
msgstr ""

# 0f4aadc687ed432a85023a94a8cd339a
#: ../../ref/models/instances.txt:326
msgid ""
"Once the object has been saved, you must reload the object in order to "
"access the actual value that was applied to the updated field::"
msgstr ""

# 8ba73f7957c0465b8eb2472f588879aa
#: ../../ref/models/instances.txt:333
msgid ""
"For more details, see the documentation on :ref:`F() expressions <query-"
"expressions>` and their :ref:`use in update queries <topics-db-queries-"
"update>`."
msgstr ""

# abb5cbca082a4badbaa9767075879562
#: ../../ref/models/instances.txt:338
msgid "Deleting objects"
msgstr ""

# 4a722081f91e4590a30544e817b5e347
#: ../../ref/models/instances.txt:345
msgid ""
"Issues a SQL ``DELETE`` for the object. This only deletes the object in the "
"database; the Python instance will still exist and will still have data in "
"its fields."
msgstr ""

# 63647e1f499c440394eff8b5cb452ea4
#: ../../ref/models/instances.txt:349
msgid ""
"For more details, including how to delete objects in bulk, see :ref:`topics-"
"db-queries-delete`."
msgstr ""

# 868b395985ce4b529441c08c22e9aa58
#: ../../ref/models/instances.txt:352
msgid ""
"If you want customized deletion behavior, you can override the ``delete()`` "
"method. See :ref:`overriding-model-methods` for more details."
msgstr ""

# 2b0fd886dd384257ac7c77f6cbef1801
#: ../../ref/models/instances.txt:358
msgid "Other model instance methods"
msgstr ""

# 4a86fb01672342aaa0e2a2f17999123f
#: ../../ref/models/instances.txt:360
msgid "A few object methods have special purposes."
msgstr ""

# 5f65fbf0be524c14a5e841622867a781
#: ../../ref/models/instances.txt:363
msgid "``__unicode__``"
msgstr ""

# b91cc202aa51452b9ab4778919071c07
#: ../../ref/models/instances.txt:367
msgid ""
"The ``__unicode__()`` method is called whenever you call ``unicode()`` on an "
"object. Django uses ``unicode(obj)`` (or the related function, :meth:`str"
"(obj) <Model.__str__>`) in a number of places. Most notably, to display an "
"object in the Django admin site and as the value inserted into a template "
"when it displays an object. Thus, you should always return a nice, human-"
"readable representation of the model from the ``__unicode__()`` method."
msgstr ""

# b9cf692d92ed4788b29ed01be3d0c5c8
#: ../../ref/models/instances.txt:383
msgid ""
"If you define a ``__unicode__()`` method on your model and not a :meth:"
"`~Model.__str__()` method, Django will automatically provide you with a :"
"meth:`~Model.__str__()` that calls ``__unicode__()`` and then converts the "
"result correctly to a UTF-8 encoded string object. This is recommended "
"development practice: define only ``__unicode__()`` and let Django take care "
"of the conversion to string objects when required."
msgstr ""

# c4013eb91df74781bd463d528df4f7b4
#: ../../ref/models/instances.txt:391
msgid "``__str__``"
msgstr ""

# 4a25a562fb694118b37b50ff6c4af493
#: ../../ref/models/instances.txt:395
msgid ""
"The ``__str__()`` method is called whenever you call ``str()`` on an object. "
"The main use for this method directly inside Django is when the ``repr()`` "
"output of a model is displayed anywhere (for example, in debugging output). "
"Thus, you should return a nice, human-readable string for the object's "
"``__str__()``.  It isn't required to put ``__str__()`` methods everywhere if "
"you have sensible :meth:`~Model.__unicode__()` methods."
msgstr ""

# f8cbabca0c0540978276a8115a9777cc
#: ../../ref/models/instances.txt:399
msgid ""
"The previous :meth:`~Model.__unicode__()` example could be similarly written "
"using ``__str__()`` like this::"
msgstr ""

# fe7d108859c04e599ab268fb85af6baa
#: ../../ref/models/instances.txt:412
msgid "``get_absolute_url``"
msgstr ""

# 70fa0da0a4fc4187bd37046f2b24934f
#: ../../ref/models/instances.txt:416
msgid ""
"Define a ``get_absolute_url()`` method to tell Django how to calculate the "
"canonical URL for an object. To callers, this method should appear to return "
"a string that can be used to refer to the object over HTTP."
msgstr ""

# 6d78aab31a054dd5bcd11b977a329104
#: ../../ref/models/instances.txt:425
msgid ""
"(Whilst this code is correct and simple, it may not be the most portable way "
"to write this kind of method. The :func:`permalink() decorator <permalink>`, "
"documented below, is usually the best approach and you should read that "
"section before diving into code implementation.)"
msgstr ""

# 8d9e6c65617545cfa1649146ba97df3e
#: ../../ref/models/instances.txt:430
msgid ""
"One place Django uses ``get_absolute_url()`` is in the admin app. If an "
"object defines this method, the object-editing page will have a \"View on "
"site\" link that will jump you directly to the object's public view, as "
"given by ``get_absolute_url()``."
msgstr ""

# a20e3efd31754145bcced5ab9b4f8c5c
#: ../../ref/models/instances.txt:435
msgid ""
"Similarly, a couple of other bits of Django, such as the :doc:`syndication "
"feed framework </ref/contrib/syndication>`, use ``get_absolute_url()`` when "
"it is defined. If it makes sense for your model's instances to each have a "
"unique URL, you should define ``get_absolute_url()``."
msgstr ""

# b49d3027f71f480eac1e55cf07d81c37
#: ../../ref/models/instances.txt:440
msgid ""
"It's good practice to use ``get_absolute_url()`` in templates, instead of "
"hard-coding your objects' URLs. For example, this template code is bad::"
msgstr ""

# bfd723c7a77b427c9c4b7fba023eaa64
#: ../../ref/models/instances.txt:446
msgid "This template code is much better::"
msgstr ""

# 25e72ed4567843578f52f400120969d6
#: ../../ref/models/instances.txt:450
msgid ""
"The logic here is that if you change the URL structure of your objects, even "
"for something simple such as correcting a spelling error, you don't want to "
"have to track down every place that the URL might be created. Specify it "
"once, in ``get_absolute_url()`` and have all your other code call that one "
"place."
msgstr ""

# c979d46961ae42708f5c84f68dee59ea
#: ../../ref/models/instances.txt:456
msgid ""
"The string you return from ``get_absolute_url()`` **must** contain only "
"ASCII characters (required by the URI specfication, :rfc:`2396`) and be URL-"
"encoded, if necessary."
msgstr ""

# 2b1d7fe6b6ec4d07b351c3c2799fc4e7
#: ../../ref/models/instances.txt:460
msgid ""
"Code and templates calling ``get_absolute_url()`` should be able to use the "
"result directly without any further processing. You may wish to use the "
"``django.utils.encoding.iri_to_uri()`` function to help with this if you are "
"using unicode strings containing characters outside the ASCII range at all."
msgstr ""

# 312e48643cb241828f13b0a373f393e2
#: ../../ref/models/instances.txt:467
msgid "The ``permalink`` decorator"
msgstr ""

# c494c451b027417bbdef4ccc0ed14bd7
#: ../../ref/models/instances.txt:469
msgid ""
"The way we wrote ``get_absolute_url()`` above is a slightly violation of the "
"DRY principle: the URL for this object is defined both in the URLconf file "
"and in the model."
msgstr ""

# b946813a06a44e438d0ae993666d5f3b
#: ../../ref/models/instances.txt:473
msgid ""
"You can decouple your models from the URLconf using the ``permalink`` "
"decorator:"
msgstr ""

# 555473784b89434989602dc865db4b93
#: ../../ref/models/instances.txt:477
msgid ""
"This decorator takes the name of a URL pattern (either a view name or a URL "
"pattern name) and a list of position or keyword arguments and uses the "
"URLconf patterns to construct the correct, full URL. It returns a string for "
"the correct URL, with all parameters substituted in the correct positions."
msgstr ""

# 8a8d647b6f084676a02dab669d8fa16b
#: ../../ref/models/instances.txt:482
msgid ""
"The ``permalink`` decorator is a Python-level equivalent to the :ttag:`url` "
"template tag and a high-level wrapper for the :func:`django.core."
"urlresolvers.reverse()` function."
msgstr ""

# 39dbcb88ba87411a859df99adb404a50
#: ../../ref/models/instances.txt:484
msgid ""
"An example should make it clear how to use ``permalink()``. Suppose your "
"URLconf contains a line such as::"
msgstr ""

# a8c5a83032b24936b80dfaa40edd8e8f
#: ../../ref/models/instances.txt:489
msgid ""
"...your model could have a :meth:`~django.db.models.Model.get_absolute_url()"
"` method that looked like this::"
msgstr ""

# e05aa10e2a024aed97d36f099555bb96
#: ../../ref/models/instances.txt:498
msgid "Similarly, if you had a URLconf entry that looked like::"
msgstr ""

# ff8b01e1fa45401c8344ce1a79413fc9
#: ../../ref/models/instances.txt:502
msgid "...you could reference this using ``permalink()`` as follows::"
msgstr ""

# 3d26c1bbaa7647728334b3645dbc7e8e
#: ../../ref/models/instances.txt:511
msgid ""
"Notice that we specify an empty sequence for the second parameter in this "
"case, because we only want to pass keyword parameters, not positional ones."
msgstr ""

# 8fddbb756c77426d940ba21abeda355e
#: ../../ref/models/instances.txt:514
msgid ""
"In this way, you're associating the model's absolute path with the view that "
"is used to display it, without repeating the view's URL information "
"anywhere. You can still use the :meth:`~django.db.models.Model."
"get_absolute_url()` method in templates, as before."
msgstr ""

# 59d7e7def6dc475c9abc42cd6fcfaaf3
#: ../../ref/models/instances.txt:519
msgid ""
"In some cases, such as the use of generic views or the re-use of custom "
"views for multiple models, specifying the view function may confuse the "
"reverse URL matcher (because multiple patterns point to the same view). For "
"that case, Django has :ref:`named URL patterns <naming-url-patterns>`. Using "
"a named URL pattern, it's possible to give a name to a pattern, and then "
"reference the name rather than the view function. A named URL pattern is "
"defined by replacing the pattern tuple by a call to the ``url`` function)::"
msgstr ""

# 992da4a98cc94f6ab162ac241ac15582
#: ../../ref/models/instances.txt:531
msgid ""
"...and then using that name to perform the reverse URL resolution instead of "
"the view name::"
msgstr ""

# 61a93b672ded4075b88c0806ba150702
#: ../../ref/models/instances.txt:540
msgid ""
"More details on named URL patterns are in the :doc:`URL dispatch "
"documentation </topics/http/urls>`."
msgstr ""

# da3d78ba4dfd44f38cf87e688c2f9602
#: ../../ref/models/instances.txt:544
msgid "Extra instance methods"
msgstr ""

# b7fc79cc21614084abadb5a81f26712a
#: ../../ref/models/instances.txt:546
msgid ""
"In addition to :meth:`~Model.save()`, :meth:`~Model.delete()`, a model "
"object might have some of the following methods:"
msgstr ""

# c5c0613b7ea44f1fa4d4b2a80f42357b
#: ../../ref/models/instances.txt:551
msgid ""
"For every field that has :attr:`~django.db.models.Field.choices` set, the "
"object will have a ``get_FOO_display()`` method, where ``FOO`` is the name "
"of the field. This method returns the \"human-readable\" value of the field. "
"For example, in the following model::"
msgstr ""

# d249ab9e5a7f4c68a19a3942af5e9e06
#: ../../ref/models/instances.txt:564
msgid ""
"...each ``Person`` instance will have a ``get_gender_display()`` method. "
"Example::"
msgstr ""

# 3b49912fb9974665b6ca977da4986d30
#: ../../ref/models/instances.txt:576
msgid ""
"For every :class:`~django.db.models.DateField` and :class:`~django.db.models."
"DateTimeField` that does not have :attr:`null=True <django.db.models.Field."
"null>`, the object will have ``get_next_by_FOO()`` and ``get_previous_by_FOO"
"()`` methods, where ``FOO`` is the name of the field. This returns the next "
"and previous object with respect to the date field, raising a :exc:`~django."
"db.DoesNotExist` exception when appropriate."
msgstr ""

# 7fac6a4aae324a28be10c84280822853
#: ../../ref/models/instances.txt:583
msgid ""
"Both methods accept optional keyword arguments, which should be in the "
"format described in :ref:`Field lookups <field-lookups>`."
msgstr ""

# f25f5369de8c43febdb1759c2bccb083
#: ../../ref/models/instances.txt:586
msgid ""
"Note that in the case of identical date values, these methods will use the "
"primary key as a tie-breaker. This guarantees that no records are skipped or "
"duplicated. That also means you cannot use those methods on unsaved objects."
msgstr ""

# b93e1a7a55c24888b7a052da73c83658
#: ../../ref/models/options.txt:3
msgid "Model ``Meta`` options"
msgstr ""

# 931affb29171498ba62a6f12e7adaca3
#: ../../ref/models/options.txt:5
msgid ""
"This document explains all the possible :ref:`metadata options <meta-"
"options>` that you can give your model in its internal ``class Meta``."
msgstr ""

# f9d1d95d8f554d598dd5758667ef1d41
#: ../../ref/models/options.txt:10
msgid "Available ``Meta`` options"
msgstr ""

# cbb3ff4a5e3046b89a8dce4ac1ffd9aa
#: ../../ref/models/options.txt:15
msgid "``abstract``"
msgstr ""

# 798bfb634386491ea0ef5665c949fe31
#: ../../ref/models/options.txt:19
msgid ""
"If ``abstract = True``, this model will be an :ref:`abstract base class "
"<abstract-base-classes>`."
msgstr ""

# 9035ab9253584a39a2e5ec0d9b1e4b8d
#: ../../ref/models/options.txt:27
msgid ""
"If a model exists outside of the standard :file:`models.py` (for instance, "
"if the app's models are in submodules of ``myapp.models``), the model must "
"define which app it is part of::"
msgstr ""

# f008a7067eaa425798f2eb0323c40f8f
#: ../../ref/models/options.txt:34
msgid "``db_table``"
msgstr ""

# a15bf6e337404910b991e90083f1430c
#: ../../ref/models/options.txt:38
msgid "The name of the database table to use for the model::"
msgstr ""

# 3bf22ccf1d8e4d0294b4bfd460300a13
#: ../../ref/models/options.txt:47
msgid ""
"To save you time, Django automatically derives the name of the database "
"table from the name of your model class and the app that contains it. A "
"model's database table name is constructed by joining the model's \"app label"
"\" -- the name you used in :djadmin:`manage.py startapp <startapp>` -- to "
"the model's class name, with an underscore between them."
msgstr ""

# 0c00826ef9974fed85f9b2c3938e7497
#: ../../ref/models/options.txt:53
msgid ""
"For example, if you have an app ``bookstore`` (as created by ``manage.py "
"startapp bookstore``), a model defined as ``class Book`` will have a "
"database table named ``bookstore_book``."
msgstr ""

# a0ffa891b1e1462a80344f1e0e40e0ac
#: ../../ref/models/options.txt:57
msgid ""
"To override the database table name, use the ``db_table`` parameter in "
"``class Meta``."
msgstr ""

# 840af24250984e72ac06a93fd086f051
#: ../../ref/models/options.txt:60
msgid ""
"If your database table name is an SQL reserved word, or contains characters "
"that aren't allowed in Python variable names -- notably, the hyphen -- "
"that's OK. Django quotes column and table names behind the scenes."
msgstr ""

# 3b7aebb606cc4f0aa0deefb0172afcdb
#: ../../ref/models/options.txt:66
msgid ""
"It is strongly advised that you use lowercase table names when you override "
"the table name via ``db_table``, particularly if you are using the MySQL "
"backend. See the :ref:`MySQL notes <mysql-notes>` for more details."
msgstr ""

# bab9d5c734fd4145987d7f24d3fd6195
#: ../../ref/models/options.txt:76
msgid ""
"The name of the :doc:`database tablespace </topics/db/tablespaces>` to use "
"for this model. The default is the project's :setting:`DEFAULT_TABLESPACE` "
"setting, if set. If the backend doesn't support tablespaces, this option is "
"ignored."
msgstr ""

# 143104c2e7b947b7b3b988082d186032
#: ../../ref/models/options.txt:82
msgid "``get_latest_by``"
msgstr ""

# e0f8a1771d5b4d2b8c39ea73bd0ff473
#: ../../ref/models/options.txt:86
msgid ""
"The name of a :class:`DateField` or :class:`DateTimeField` in the model. "
"This specifies the default field to use in your model :class:`Manager`'s :"
"class:`~QuerySet.latest` method."
msgstr ""

# 630072f79eb141868341b5255d4061b2
#: ../../ref/models/options.txt:94
msgid ""
"See the docs for :meth:`~django.db.models.query.QuerySet.latest` for more."
msgstr ""

# 7c3a12a4a4854282bf25a542b875ba67
#: ../../ref/models/options.txt:97
msgid "``managed``"
msgstr ""

# 77b17ddd55b44a22ad6db23a923a3b6b
#: ../../ref/models/options.txt:101
msgid ""
"Defaults to ``True``, meaning Django will create the appropriate database "
"tables in :djadmin:`syncdb` and remove them as part of a :djadmin:`reset` "
"management command. That is, Django *manages* the database tables' "
"lifecycles."
msgstr ""

# f274965aae07485bac51cf878024e407
#: ../../ref/models/options.txt:106
msgid ""
"If ``False``, no database table creation or deletion operations will be "
"performed for this model. This is useful if the model represents an existing "
"table or a database view that has been created by some other means. This is "
"the *only* difference when ``managed=False``. All other aspects of model "
"handling are exactly the same as normal. This includes"
msgstr ""

# 28238440195042ce8ecde5bdff9184bb
#: ../../ref/models/options.txt:112
msgid ""
"Adding an automatic primary key field to the model if you don't declare it.  "
"To avoid confusion for later code readers, it's recommended to specify all "
"the columns from the database table you are modeling when using unmanaged "
"models."
msgstr ""

# 7921a47b2ba642ad8d77c0b86aa3b1e3
#: ../../ref/models/options.txt:117
msgid ""
"If a model with ``managed=False`` contains a :class:`~django.db.models."
"ManyToManyField` that points to another unmanaged model, then the "
"intermediate table for the many-to-many join will also not be created. "
"However, the intermediary table between one managed and one unmanaged model "
"*will* be created."
msgstr ""

# a045bde39137468aa5d0efef86b3ea0d
#: ../../ref/models/options.txt:123
msgid ""
"If you need to change this default behavior, create the intermediary table "
"as an explicit model (with ``managed`` set as needed) and use the :attr:"
"`ManyToManyField.through` attribute to make the relation use your custom "
"model."
msgstr ""

# 097bbefef7ff403d80ae4c1f52ebf914
#: ../../ref/models/options.txt:128
msgid ""
"For tests involving models with ``managed=False``, it's up to you to ensure "
"the correct tables are created as part of the test setup."
msgstr ""

# ad74b59777b24d56b2ced761adff1add
#: ../../ref/models/options.txt:131
msgid ""
"If you're interested in changing the Python-level behavior of a model class, "
"you *could* use ``managed=False`` and create a copy of an existing model. "
"However, there's a better approach for that situation: :ref:`proxy-models`."
msgstr ""

# b90e56ee780a477fb58328639d3b29ad
#: ../../ref/models/options.txt:136
msgid "``order_with_respect_to``"
msgstr ""

# 81f9016509334e708b657c21b9c52f31
#: ../../ref/models/options.txt:140
msgid ""
"Marks this object as \"orderable\" with respect to the given field. This is "
"almost always used with related objects to allow them to be ordered with "
"respect to a parent object. For example, if an ``Answer`` relates to a "
"``Question`` object, and a question has more than one answer, and the order "
"of answers matters, you'd do this::"
msgstr ""

# f80bd296aa8641abacaac7689af1780d
#: ../../ref/models/options.txt:153
msgid ""
"When ``order_with_respect_to`` is set, two additional methods are provided "
"to retrieve and to set the order of the related objects: ``get_RELATED_order"
"()`` and ``set_RELATED_order()``, where ``RELATED`` is the lowercased model "
"name. For example, assuming that a ``Question`` object has multiple related "
"``Answer`` objects, the list returned contains the primary keys of the "
"related ``Answer`` objects::"
msgstr ""

# 4838ba6d2646496d97588ad74170e789
#: ../../ref/models/options.txt:164
msgid ""
"The order of a ``Question`` object's related ``Answer`` objects can be set "
"by passing in a list of ``Answer`` primary keys::"
msgstr ""

# 282f706cffcb45f69d8e855d0c378d5b
#: ../../ref/models/options.txt:169
msgid ""
"The related objects also get two methods, ``get_next_in_order()`` and "
"``get_previous_in_order()``, which can be used to access those objects in "
"their proper order. Assuming the ``Answer`` objects are ordered by ``id``::"
msgstr ""

# 2b23e4618c504306bb16bb73d759ac7b
#: ../../ref/models/options.txt:181
msgid ""
"``order_with_respect_to`` adds an additional field/database column named "
"``_order``, so be sure to handle that as you would any other change to your "
"models if you add or change ``order_with_respect_to`` after your initial :"
"djadmin:`syncdb`."
msgstr ""

# 24a48140d69d4783b2f45c741efa86ca
#: ../../ref/models/options.txt:187
msgid "``ordering``"
msgstr ""

# 29b442601649472b95cc013f243ee614
#: ../../ref/models/options.txt:191
msgid ""
"The default ordering for the object, for use when obtaining lists of "
"objects::"
msgstr ""

# 6d91d041ed6b40cb97209268758bb4de
#: ../../ref/models/options.txt:195
msgid ""
"This is a tuple or list of strings. Each string is a field name with an "
"optional \"-\" prefix, which indicates descending order. Fields without a "
"leading \"-\" will be ordered ascending. Use the string \"?\" to order "
"randomly."
msgstr ""

# ec72441ad8044ad99f8b1ebf116e6988
#: ../../ref/models/options.txt:199
msgid "For example, to order by a ``pub_date`` field ascending, use this::"
msgstr ""

# 3257371d6cc24cd1a901d58408763b05
#: ../../ref/models/options.txt:203
msgid "To order by ``pub_date`` descending, use this::"
msgstr ""

# 410e77ce5f2142f3aa7f76213572a625
#: ../../ref/models/options.txt:207
msgid ""
"To order by ``pub_date`` descending, then by ``author`` ascending, use this::"
msgstr ""

# 78807189b0584eca9ec38de8265d01fc
#: ../../ref/models/options.txt:216
msgid "``permissions``"
msgstr ""

# 52a2ed1f3fbc4469a2532eb676a653a1
#: ../../ref/models/options.txt:220
msgid ""
"Extra permissions to enter into the permissions table when creating this "
"object. Add, delete and change permissions are automatically created for "
"each object that has ``admin`` set. This example specifies an extra "
"permission, ``can_deliver_pizzas``::"
msgstr ""

# 7cceab2c3bc340f9b754bd3b81f1b321
#: ../../ref/models/options.txt:227
msgid ""
"This is a list or tuple of 2-tuples in the format ``(permission_code, "
"human_readable_permission_name)``."
msgstr ""

# 53aca74c35ec4c38a11d093f249125f6
#: ../../ref/models/options.txt:231
msgid "``proxy``"
msgstr ""

# 729b6c77905e4041b06ecc907a441b3d
#: ../../ref/models/options.txt:235
msgid ""
"If ``proxy = True``, a model which subclasses another model will be treated "
"as a :ref:`proxy model <proxy-models>`."
msgstr ""

# 93e8dfe006e3457fb82471e905e617c6
#: ../../ref/models/options.txt:239
msgid "``unique_together``"
msgstr ""

# b2e7398d3ff6471a8995e62c3a867794
#: ../../ref/models/options.txt:243
msgid "Sets of field names that, taken together, must be unique::"
msgstr ""

# 422dd5a5ac854f768f3b415c83dfdba7
#: ../../ref/models/options.txt:247
msgid ""
"This is a list of lists of fields that must be unique when considered "
"together. It's used in the Django admin and is enforced at the database "
"level (i.e., the appropriate ``UNIQUE`` statements are included in the "
"``CREATE TABLE`` statement)."
msgstr ""

# ba8f3b13757a4a85a2d35a7640ade908
#: ../../ref/models/options.txt:252
msgid ""
"For convenience, unique_together can be a single list when dealing with a "
"single set of fields::"
msgstr ""

# b3a6fb3620c4462483382a537e7bf6dd
#: ../../ref/models/options.txt:257
msgid ""
"A :class:`~django.db.models.ManyToManyField` cannot be included in "
"unique_together. (It's not clear what that would even mean!) If you need to "
"validate uniqueness related to a :class:`~django.db.models.ManyToManyField`, "
"try using a signal or an explicit :attr:`through <ManyToManyField.through>` "
"model."
msgstr ""

# f26435abfadc4d9b9a4d1d3907df56d6
#: ../../ref/models/options.txt:268
msgid "A human-readable name for the object, singular::"
msgstr ""

# cbaffb4671d34055aa7118890fb3525f
#: ../../ref/models/options.txt:272
msgid ""
"If this isn't given, Django will use a munged version of the class name: "
"``CamelCase`` becomes ``camel case``."
msgstr ""

# f37cf49bff154817806b15c6b72978b7
#: ../../ref/models/options.txt:276
msgid "``verbose_name_plural``"
msgstr ""

# 83490cb52f6145239ec5bd3e4a47e92c
#: ../../ref/models/options.txt:280
msgid "The plural name for the object::"
msgstr ""

# 7600e6adb15148c3bc50ee076699345b
#: ../../ref/models/options.txt:284
msgid ""
"If this isn't given, Django will use :attr:`~Options.verbose_name` + ``\"s"
"\"``."
msgstr ""

# 6d30d8043c74492a87b458b550bf035e
#: ../../ref/models/querysets.txt:3
msgid "QuerySet API reference"
msgstr ""

# 144d4fdc8572470392448974c1d2cd59
#: ../../ref/models/querysets.txt:7
msgid ""
"This document describes the details of the ``QuerySet`` API. It builds on "
"the material presented in the :doc:`model </topics/db/models>` and :doc:"
"`database query </topics/db/queries>` guides, so you'll probably want to "
"read and understand those documents before reading this one."
msgstr ""

# 9211317e096241a1b32d7144df410428
#: ../../ref/models/querysets.txt:19
msgid "When QuerySets are evaluated"
msgstr ""

# 1b43bb3936e645c2a6428096aebdd2fd
#: ../../ref/models/querysets.txt:21
msgid ""
"Internally, a ``QuerySet`` can be constructed, filtered, sliced, and "
"generally passed around without actually hitting the database. No database "
"activity actually occurs until you do something to evaluate the queryset."
msgstr ""

# d39ba622d35b4dbdb8a84b6d9e009457
#: ../../ref/models/querysets.txt:25
msgid "You can evaluate a ``QuerySet`` in the following ways:"
msgstr ""

# 9a7d2679e05947f5a1d1553af116443b
#: ../../ref/models/querysets.txt:27
msgid ""
"**Iteration.** A ``QuerySet`` is iterable, and it executes its database "
"query the first time you iterate over it. For example, this will print the "
"headline of all entries in the database::"
msgstr ""

# ec41ae263ab043f88faff475b5625ee4
#: ../../ref/models/querysets.txt:34
msgid ""
"**Slicing.** As explained in :ref:`limiting-querysets`, a ``QuerySet`` can "
"be sliced, using Python's array-slicing syntax. Slicing an unevaluated "
"``QuerySet`` usually returns another unevaluated ``QuerySet``, but Django "
"will execute the database query if you use the \"step\" parameter of slice "
"syntax, and will return a list. Slicing a ``QuerySet`` that has been "
"evaluated (partially or fully) also returns a list."
msgstr ""

# 2c779db4fb464b87850761e923f61408
#: ../../ref/models/querysets.txt:41
msgid ""
"**Pickling/Caching.** See the following section for details of what is "
"involved when `pickling QuerySets`_. The important thing for the purposes of "
"this section is that the results are read from the database."
msgstr ""

# bdd6ffa7bb054a288a9eb3c65b047bbc
#: ../../ref/models/querysets.txt:45
msgid ""
"**repr().** A ``QuerySet`` is evaluated when you call ``repr()`` on it. This "
"is for convenience in the Python interactive interpreter, so you can "
"immediately see your results when using the API interactively."
msgstr ""

# 971ad88981b5406791420ffbdc9c9991
#: ../../ref/models/querysets.txt:49
msgid ""
"**len().** A ``QuerySet`` is evaluated when you call ``len()`` on it. This, "
"as you might expect, returns the length of the result list."
msgstr ""

# 32c2816b15de4cf0985395524a4189fd
#: ../../ref/models/querysets.txt:52
msgid ""
"Note: *Don't* use ``len()`` on ``QuerySet``\\s if all you want to do is "
"determine the number of records in the set. It's much more efficient to "
"handle a count at the database level, using SQL's ``SELECT COUNT(*)``, and "
"Django provides a ``count()`` method for precisely this reason. See ``count()"
"`` below."
msgstr ""

# 203d6d14d8c84673886c3ff1086b778a
#: ../../ref/models/querysets.txt:58
msgid ""
"**list().** Force evaluation of a ``QuerySet`` by calling ``list()`` on it. "
"For example::"
msgstr ""

# 35b65ae8482a4961a2d990dfa2d12328
#: ../../ref/models/querysets.txt:63
msgid ""
"Be warned, though, that this could have a large memory overhead, because "
"Django will load each element of the list into memory. In contrast, "
"iterating over a ``QuerySet`` will take advantage of your database to load "
"data and instantiate objects only as you need them."
msgstr ""

# a4e9dfb12fec4a4cba59538c2b6540cf
#: ../../ref/models/querysets.txt:68
msgid ""
"**bool().** Testing a ``QuerySet`` in a boolean context, such as using ``bool"
"()``, ``or``, ``and`` or an ``if`` statement, will cause the query to be "
"executed. If there is at least one result, the ``QuerySet`` is ``True``, "
"otherwise ``False``. For example::"
msgstr ""

# e7437fff2ae346b7aefbb0a465ce09e9
#: ../../ref/models/querysets.txt:76
msgid ""
"Note: *Don't* use this if all you want to do is determine if at least one "
"result exists, and don't need the actual objects. It's more efficient to "
"use :meth:`exists() <QuerySet.exists>` (see below)."
msgstr ""

# f4176c410bbc4b808055af85acd20672
#: ../../ref/models/querysets.txt:83
msgid "Pickling QuerySets"
msgstr ""

# 615ff4bc41b449c2a3e55a258d3c47b3
#: ../../ref/models/querysets.txt:85
msgid ""
"If you :mod:`pickle` a ``QuerySet``, this will force all the results to be "
"loaded into memory prior to pickling. Pickling is usually used as a "
"precursor to caching and when the cached queryset is reloaded, you want the "
"results to already be present and ready for use (reading from the database "
"can take some time, defeating the purpose of caching). This means that when "
"you unpickle a ``QuerySet``, it contains the results at the moment it was "
"pickled, rather than the results that are currently in the database."
msgstr ""

# 6afc637506d7492384a43fd8f43c5dd3
#: ../../ref/models/querysets.txt:93
msgid ""
"If you only want to pickle the necessary information to recreate the "
"``QuerySet`` from the database at a later time, pickle the ``query`` "
"attribute of the ``QuerySet``. You can then recreate the original "
"``QuerySet`` (without any results loaded) using some code like this::"
msgstr ""

# e43cede41cb34f429e4f8e44853129a1
#: ../../ref/models/querysets.txt:103
msgid ""
"The ``query`` attribute is an opaque object. It represents the internals of "
"the query construction and is not part of the public API. However, it is "
"safe (and fully supported) to pickle and unpickle the attribute's contents "
"as described here."
msgstr ""

# fc2163cc0eda412b999877ca772086c4
#: ../../ref/models/querysets.txt:110
msgid ""
"Pickles of QuerySets are only valid for the version of Django that was used "
"to generate them. If you generate a pickle using Django version N, there is "
"no guarantee that pickle will be readable with Django version N+1. Pickles "
"should not be used as part of a long-term archival strategy."
msgstr ""

# 8dd436ad8c014f44b16692fd11392d01
#: ../../ref/models/querysets.txt:119
msgid "QuerySet API"
msgstr ""

# 9f7988ff095f4d4aa401d8fbc8fd3239
#: ../../ref/models/querysets.txt:121
msgid ""
"Though you usually won't create one manually — you'll go through a :class:"
"`~django.db.models.Manager` — here's the formal declaration of a "
"``QuerySet``:"
msgstr ""

# a6b88cde23344e60a76d580822908156
#: ../../ref/models/querysets.txt:127
msgid ""
"Usually when you'll interact with a ``QuerySet`` you'll use it by :ref:"
"`chaining filters <chaining-filters>`. To make this work, most ``QuerySet`` "
"methods return new querysets. These methods are covered in detail later in "
"this section."
msgstr ""

# b0f55b961ee34344b491f696e2a0d431
#: ../../ref/models/querysets.txt:132
msgid ""
"The ``QuerySet`` class has two public attributes you can use for "
"introspection:"
msgstr ""

# 75e0acd9547e4bd2a19046aac84a13f6
#: ../../ref/models/querysets.txt:137
msgid ""
"``True`` if the ``QuerySet`` is ordered — i.e. has an :meth:`order_by()` "
"clause or a default ordering on the model. ``False`` otherwise."
msgstr ""

# 5e21f6803ed2495fb4a9a64ad9489d03
#: ../../ref/models/querysets.txt:143
msgid "The database that will be used if this query is executed now."
msgstr ""

# 9d95ecd8222e484f97c2350bfa298209
#: ../../ref/models/querysets.txt:147
msgid ""
"The ``query`` parameter to :class:`QuerySet` exists so that specialized "
"query subclasses such as :class:`~django.contrib.gis.db.models.GeoQuerySet` "
"can reconstruct internal query state. The value of the parameter is an "
"opaque representation of that query state and is not part of a public API. "
"To put it simply: if you need to ask, you don't need to use it."
msgstr ""

# d0bb7900ae0c4297b05f9e4cb653cada
#: ../../ref/models/querysets.txt:157
msgid "Methods that return new QuerySets"
msgstr ""

# 508abf12238b47e1bee99521fd5dcbc2
#: ../../ref/models/querysets.txt:159
msgid ""
"Django provides a range of ``QuerySet`` refinement methods that modify "
"either the types of results returned by the ``QuerySet`` or the way its SQL "
"query is executed."
msgstr ""

# de15489c321f469e912df0f1a86b5fb8
# 23c372ba46dd48e4ad5122666505c61e
#: ../../ref/models/querysets.txt:164 ../../ref/templates/builtins.txt:220
msgid "filter"
msgstr ""

# d5a965fd9d214669bb6cc7f8666589c5
#: ../../ref/models/querysets.txt:168
msgid ""
"Returns a new ``QuerySet`` containing objects that match the given lookup "
"parameters."
msgstr ""

# f02b2c0d52cc4b72985f8add371da2c9
#: ../../ref/models/querysets.txt:171
msgid ""
"The lookup parameters (``**kwargs``) should be in the format described in "
"`Field lookups`_ below. Multiple parameters are joined via ``AND`` in the "
"underlying SQL statement."
msgstr ""

# ee69ec49944a4cfa83aa3fd28008759e
#: ../../ref/models/querysets.txt:176
msgid "exclude"
msgstr ""

# 7531a08ffe154bb1ac912f447a235d51
#: ../../ref/models/querysets.txt:180
msgid ""
"Returns a new ``QuerySet`` containing objects that do *not* match the given "
"lookup parameters."
msgstr ""

# f1ccdc6fa8b34482a198dceb88d724d6
#: ../../ref/models/querysets.txt:183
msgid ""
"The lookup parameters (``**kwargs``) should be in the format described in "
"`Field lookups`_ below. Multiple parameters are joined via ``AND`` in the "
"underlying SQL statement, and the whole thing is enclosed in a ``NOT()``."
msgstr ""

# bbb90ccbba11472fa6b14990c706581c
#: ../../ref/models/querysets.txt:187
msgid ""
"This example excludes all entries whose ``pub_date`` is later than 2005-1-3 "
"AND whose ``headline`` is \"Hello\"::"
msgstr ""

# 65b1327a516949b1b8b3494f8c7f5b0c
# 1cf4a2ee37a047a6b4e618d5643aa184
#: ../../ref/models/querysets.txt:192 ../../ref/models/querysets.txt:202
msgid "In SQL terms, that evaluates to::"
msgstr ""

# 216a2615dd10435a820c525eb08b7413
#: ../../ref/models/querysets.txt:197
msgid ""
"This example excludes all entries whose ``pub_date`` is later than 2005-1-3 "
"OR whose headline is \"Hello\"::"
msgstr ""

# c5625e2a533847e0b0a931071b3bdee6
#: ../../ref/models/querysets.txt:208
msgid "Note the second example is more restrictive."
msgstr ""

# 9319f31d0e1a40e692defd7f345014a9
#: ../../ref/models/querysets.txt:211
msgid "annotate"
msgstr ""

# 6918571a669a4bb2a15b755ac49ebfbf
#: ../../ref/models/querysets.txt:215
msgid ""
"Annotates each object in the ``QuerySet`` with the provided list of "
"aggregate values (averages, sums, etc) that have been computed over the "
"objects that are related to the objects in the ``QuerySet``. Each argument "
"to ``annotate()`` is an annotation that will be added to each object in the "
"``QuerySet`` that is returned."
msgstr ""

# 7db59dc2943e40a5a18cbab158e19942
# 95824301a6a84350ab60ebd9993fc204
#: ../../ref/models/querysets.txt:221 ../../ref/models/querysets.txt:1487
msgid ""
"The aggregation functions that are provided by Django are described in "
"`Aggregation Functions`_ below."
msgstr ""

# 06c6ff07da1c430b8f1ce9ad0f354096
#: ../../ref/models/querysets.txt:224
msgid ""
"Annotations specified using keyword arguments will use the keyword as the "
"alias for the annotation. Anonymous arguments will have an alias generated "
"for them based upon the name of the aggregate function and the model field "
"that is being aggregated."
msgstr ""

# c1da1c8e2b624ff49a2989212133d695
#: ../../ref/models/querysets.txt:229
msgid ""
"For example, if you were manipulating a list of blogs, you may want to "
"determine how many entries have been made in each blog::"
msgstr ""

# a676faa276b34addbd81456763531039
#: ../../ref/models/querysets.txt:240
msgid ""
"The ``Blog`` model doesn't define an ``entry__count`` attribute by itself, "
"but by using a keyword argument to specify the aggregate function, you can "
"control the name of the annotation::"
msgstr ""

# c7eddd72a5d9493eb8cd2437e54a0956
# 058eea291c464126adbd8a301f105875
#: ../../ref/models/querysets.txt:249 ../../ref/models/querysets.txt:1507
msgid ""
"For an in-depth discussion of aggregation, see :doc:`the topic guide on "
"Aggregation </topics/db/aggregation>`."
msgstr ""

# 48daeedb40bf4af9a990acdeb8ec5f89
#: ../../ref/models/querysets.txt:253
msgid "order_by"
msgstr ""

# 42c786166fa849e38ae38e932468503b
#: ../../ref/models/querysets.txt:257
msgid ""
"By default, results returned by a ``QuerySet`` are ordered by the ordering "
"tuple given by the ``ordering`` option in the model's ``Meta``. You can "
"override this on a per-``QuerySet`` basis by using the ``order_by`` method."
msgstr ""

# b9f0f6c56ad24cb6ad17a0cce1140edf
#: ../../ref/models/querysets.txt:265
msgid ""
"The result above will be ordered by ``pub_date`` descending, then by "
"``headline`` ascending. The negative sign in front of ``\"-pub_date\"`` "
"indicates *descending* order. Ascending order is implied. To order randomly, "
"use ``\"?\"``, like so::"
msgstr ""

# ffa7e2c0c8544ee192a3aa22771deea1
#: ../../ref/models/querysets.txt:272
msgid ""
"Note: ``order_by('?')`` queries may be expensive and slow, depending on the "
"database backend you're using."
msgstr ""

# fc81fff5fb544ac09e6e37b3f999df9c
#: ../../ref/models/querysets.txt:275
msgid ""
"To order by a field in a different model, use the same syntax as when you "
"are querying across model relations. That is, the name of the field, "
"followed by a double underscore (``__``), followed by the name of the field "
"in the new model, and so on for as many models as you want to join. For "
"example::"
msgstr ""

# d9adf259f5f24ed39aabe5e074db55e7
#: ../../ref/models/querysets.txt:282
msgid ""
"If you try to order by a field that is a relation to another model, Django "
"will use the default ordering on the related model (or order by the related "
"model's primary key if there is no :attr:`Meta.ordering <django.db.models."
"Options.ordering>` specified. For example::"
msgstr ""

# 2a0b09130b0840d6971129a95a4cd47f
#: ../../ref/models/querysets.txt:289
msgid "...is identical to::"
msgstr ""

# d8d869c738d9419cb8857fc08de1b14f
#: ../../ref/models/querysets.txt:293
msgid "...since the ``Blog`` model has no default ordering specified."
msgstr ""

# eaa44d1e9e57467ea9ae15391e3a9791
#: ../../ref/models/querysets.txt:295
msgid ""
"Be cautious when ordering by fields in related models if you are also using :"
"meth:`distinct()`. See the note in :meth:`distinct` for an explanation of "
"how related model ordering can change the expected results."
msgstr ""

# e8fd79887eb94ecdb20217cf6503d8b3
#: ../../ref/models/querysets.txt:299
msgid ""
"It is permissible to specify a multi-valued field to order the results by "
"(for example, a :class:`~django.db.models.ManyToManyField` field). Normally "
"this won't be a sensible thing to do and it's really an advanced usage "
"feature. However, if you know that your queryset's filtering or available "
"data implies that there will only be one ordering piece of data for each of "
"the main items you are selecting, the ordering may well be exactly what you "
"want to do. Use ordering on multi-valued fields with care and make sure the "
"results are what you expect."
msgstr ""

# 38a7c54f9c4840d7945e791f3a2cda1e
#: ../../ref/models/querysets.txt:308
msgid ""
"There's no way to specify whether ordering should be case sensitive. With "
"respect to case-sensitivity, Django will order results however your database "
"backend normally orders them."
msgstr ""

# 2620987bf0314fc1aef0caeb4f5132e7
#: ../../ref/models/querysets.txt:312
msgid ""
"If you don't want any ordering to be applied to a query, not even the "
"default ordering, call :meth:`order_by()` with no parameters."
msgstr ""

# a09689af532d4fc1833e34e2de145c3c
#: ../../ref/models/querysets.txt:315
msgid ""
"You can tell if a query is ordered or not by checking the :attr:`.QuerySet."
"ordered` attribute, which will be ``True`` if the ``QuerySet`` has been "
"ordered in any way."
msgstr ""

# 4a3f032c2b3e42d49070427e18793fd5
#: ../../ref/models/querysets.txt:320
msgid "reverse"
msgstr ""

# ab4cb3b1be5247a7bf1615f304680dc1
#: ../../ref/models/querysets.txt:324
msgid ""
"Use the ``reverse()`` method to reverse the order in which a queryset's "
"elements are returned. Calling ``reverse()`` a second time restores the "
"ordering back to the normal direction."
msgstr ""

# eb20775024204726a7d2fc710f268424
#: ../../ref/models/querysets.txt:328
msgid "To retrieve the ''last'' five items in a queryset, you could do this::"
msgstr ""

# 6a136e7601bc40f09e94bb30c91a7671
#: ../../ref/models/querysets.txt:332
msgid ""
"Note that this is not quite the same as slicing from the end of a sequence "
"in Python. The above example will return the last item first, then the "
"penultimate item and so on. If we had a Python sequence and looked at ``seq"
"[-5:]``, we would see the fifth-last item first. Django doesn't support that "
"mode of access (slicing from the end), because it's not possible to do it "
"efficiently in SQL."
msgstr ""

# c30210bca3f345f5b90ac13a1828c783
#: ../../ref/models/querysets.txt:339
msgid ""
"Also, note that ``reverse()`` should generally only be called on a "
"``QuerySet`` which has a defined ordering (e.g., when querying against a "
"model which defines a default ordering, or when using :meth:`order_by()`). "
"If no such ordering is defined for a given ``QuerySet``, calling ``reverse()"
"`` on it has no real effect (the ordering was undefined prior to calling "
"``reverse()``, and will remain undefined afterward)."
msgstr ""

# c27f8e940384425cbeab15b175b4afa7
#: ../../ref/models/querysets.txt:347
msgid "distinct"
msgstr ""

# e2e117a6139645a3b4ccec57e83dcc54
#: ../../ref/models/querysets.txt:351
msgid ""
"Returns a new ``QuerySet`` that uses ``SELECT DISTINCT`` in its SQL query. "
"This eliminates duplicate rows from the query results."
msgstr ""

# 7c76bd2aed374c80af6351a2b71b88b8
#: ../../ref/models/querysets.txt:354
msgid ""
"By default, a ``QuerySet`` will not eliminate duplicate rows. In practice, "
"this is rarely a problem, because simple queries such as ``Blog.objects.all()"
"`` don't introduce the possibility of duplicate result rows. However, if "
"your query spans multiple tables, it's possible to get duplicate results "
"when a ``QuerySet`` is evaluated. That's when you'd use ``distinct()``."
msgstr ""

# 0cfcd15acd0844d298730528435e49c7
#: ../../ref/models/querysets.txt:361
msgid ""
"Any fields used in an :meth:`order_by` call are included in the SQL "
"``SELECT`` columns. This can sometimes lead to unexpected results when used "
"in conjunction with ``distinct()``. If you order by fields from a related "
"model, those fields will be added to the selected columns and they may make "
"otherwise duplicate rows appear to be distinct. Since the extra columns "
"don't appear in the returned results (they are only there to support "
"ordering), it sometimes looks like non-distinct results are being returned."
msgstr ""

# 7133c14877e841dd88bb1d3a9ccb1312
#: ../../ref/models/querysets.txt:369
msgid ""
"Similarly, if you use a :meth:`values()` query to restrict the columns "
"selected, the columns used in any :meth:`order_by()` (or default model "
"ordering) will still be involved and may affect uniqueness of the results."
msgstr ""

# 3cad7cfcf61d4981b3688809b92dab96
#: ../../ref/models/querysets.txt:373
msgid ""
"The moral here is that if you are using ``distinct()`` be careful about "
"ordering by related models. Similarly, when using ``distinct()`` and :meth:"
"`values()` together, be careful when ordering by fields not in the :meth:"
"`values()` call."
msgstr ""

# 4777575c601646b5bdb9f7da44d0aba8
#: ../../ref/models/querysets.txt:380
msgid ""
"As of Django 1.4, you can pass positional arguments (``*fields``) in order "
"to specify the names of fields to which the ``DISTINCT`` should apply. This "
"translates to a ``SELECT DISTINCT ON`` SQL query."
msgstr ""

# d249cb93c8f44d62b8eb472036b784d1
#: ../../ref/models/querysets.txt:384
msgid ""
"Here's the difference. For a normal ``distinct()`` call, the database "
"compares *each* field in each row when determining which rows are distinct. "
"For a ``distinct()`` call with specified field names, the database will only "
"compare the specified field names."
msgstr ""

# d9b164d405ee4aee8622eedffed7a8f7
#: ../../ref/models/querysets.txt:390
msgid "This ability to specify field names is only available in PostgreSQL."
msgstr ""

# 155a56c45a4d4058a733749018460915
#: ../../ref/models/querysets.txt:393
msgid ""
"When you specify field names, you *must* provide an ``order_by()`` in the "
"QuerySet, and the fields in ``order_by()`` must start with the fields in "
"``distinct()``, in the same order."
msgstr ""

# 787e5e7d43114d36b7449770737e3441
#: ../../ref/models/querysets.txt:397
msgid ""
"For example, ``SELECT DISTINCT ON (a)`` gives you the first row for each "
"value in column ``a``. If you don't specify an order, you'll get some "
"arbitrary row."
msgstr ""

# 39d0a279bce642d68968a6c6ab765e67
#: ../../ref/models/querysets.txt:422
msgid "values"
msgstr ""

# b87e624153c14c5c90f37e881ca6963f
#: ../../ref/models/querysets.txt:426
msgid ""
"Returns a ``ValuesQuerySet`` — a ``QuerySet`` subclass that returns "
"dictionaries when used as an iterable, rather than model-instance objects."
msgstr ""

# d4108f38d06c4e65a73ff74f3dbdc8ef
#: ../../ref/models/querysets.txt:429
msgid ""
"Each of those dictionaries represents an object, with the keys corresponding "
"to the attribute names of model objects."
msgstr ""

# debfda5764724fd4a52826990b74a591
#: ../../ref/models/querysets.txt:432
msgid ""
"This example compares the dictionaries of ``values()`` with the normal model "
"objects::"
msgstr ""

# 73736adc02a84953a4092a4340f3bb0b
#: ../../ref/models/querysets.txt:443
msgid ""
"The ``values()`` method takes optional positional arguments, ``*fields``, "
"which specify field names to which the ``SELECT`` should be limited. If you "
"specify the fields, each dictionary will contain only the field keys/values "
"for the fields you specify. If you don't specify the fields, each dictionary "
"will contain a key and value for every field in the database table."
msgstr ""

# e3c88c2913a14c19ad3b3199e701fa43
#: ../../ref/models/querysets.txt:456
msgid "A few subtleties that are worth mentioning:"
msgstr ""

# 34ebba2420d5421eb6233e41517761b6
#: ../../ref/models/querysets.txt:458
msgid ""
"If you have a field called ``foo`` that is a :class:`~django.db.models."
"ForeignKey`, the default ``values()`` call will return a dictionary key "
"called ``foo_id``, since this is the name of the hidden model attribute that "
"stores the actual value (the ``foo`` attribute refers to the related model). "
"When you are calling ``values()`` and passing in field names, you can pass "
"in either ``foo`` or ``foo_id`` and you will get back the same thing (the "
"dictionary key will match the field name you passed in)."
msgstr ""

# d29f134d70ba444291c2f048b3ac3645
#: ../../ref/models/querysets.txt:478
msgid ""
"When using ``values()`` together with :meth:`distinct()`, be aware that "
"ordering can affect the results. See the note in :meth:`distinct` for "
"details."
msgstr ""

# 7b0dd94ea34e47ae99fbee4bad80204d
#: ../../ref/models/querysets.txt:482
msgid ""
"If you use a ``values()`` clause after an :meth:`extra()` call, any fields "
"defined by a ``select`` argument in the :meth:`extra()` must be explicitly "
"included in the ``values()`` call. Any :meth:`extra()` call made after a "
"``values()`` call will have its extra selected fields ignored."
msgstr ""

# 1737c93b1a244b8ebb7a0ca31173f40f
#: ../../ref/models/querysets.txt:488
msgid ""
"A ``ValuesQuerySet`` is useful when you know you're only going to need "
"values from a small number of the available fields and you won't need the "
"functionality of a model instance object. It's more efficient to select only "
"the fields you need to use."
msgstr ""

# d30e3a0ad4ef4803a4a428b193ae2a79
#: ../../ref/models/querysets.txt:493
msgid ""
"Finally, note a ``ValuesQuerySet`` is a subclass of ``QuerySet``, so it has "
"all methods of ``QuerySet``. You can call ``filter()`` on it, or ``order_by()"
"``, or whatever. Yes, that means these two calls are identical::"
msgstr ""

# d728d5734bc34a13ba20144315b85e61
#: ../../ref/models/querysets.txt:500
msgid ""
"The people who made Django prefer to put all the SQL-affecting methods "
"first, followed (optionally) by any output-affecting methods (such as "
"``values()``), but it doesn't really matter. This is your chance to really "
"flaunt your individualism."
msgstr ""

# 282a1c395c8d4a38bc85c02dfe6234a6
#: ../../ref/models/querysets.txt:507
msgid ""
"The ``values()`` method previously did not return anything for :class:"
"`~django.db.models.ManyToManyField` attributes and would raise an error if "
"you tried to pass this type of field to it."
msgstr ""

# 4b26868418104ad7a7759cac7a7f7dcf
#: ../../ref/models/querysets.txt:511
msgid ""
"This restriction has been lifted, and you can now also refer to fields on "
"related models with reverse relations through ``OneToOneField``, "
"``ForeignKey`` and ``ManyToManyField`` attributes::"
msgstr ""

# 91bb2482a6c64a75b0fe4643ba088963
#: ../../ref/models/querysets.txt:521
msgid ""
"Because :class:`~django.db.models.ManyToManyField` attributes and reverse "
"relations can have multiple related rows, including these can have a "
"multiplier effect on the size of your result set. This will be especially "
"pronounced if you include multiple such fields in your ``values()`` query, "
"in which case all possible combinations will be returned."
msgstr ""

# 82ab3cd69e8140ec8a03cd6f5bc1924f
#: ../../ref/models/querysets.txt:528
msgid "values_list"
msgstr ""

# 37ebbbc6e2a94898906ad5d9d26487cc
#: ../../ref/models/querysets.txt:532
msgid ""
"This is similar to ``values()`` except that instead of returning "
"dictionaries, it returns tuples when iterated over. Each tuple contains the "
"value from the respective field passed into the ``values_list()`` call — so "
"the first item is the first field, etc. For example::"
msgstr ""

# e667c9e19e794786a55eb91a46709d9e
#: ../../ref/models/querysets.txt:540
msgid ""
"If you only pass in a single field, you can also pass in the ``flat`` "
"parameter. If ``True``, this will mean the returned results are single "
"values, rather than one-tuples. An example should make the difference "
"clearer::"
msgstr ""

# 360eecf275274d4d8ee3f76866f3650b
#: ../../ref/models/querysets.txt:550
msgid "It is an error to pass in ``flat`` when there is more than one field."
msgstr ""

# a3f824497adc455889eba61f6b85078c
#: ../../ref/models/querysets.txt:552
msgid ""
"If you don't pass any values to ``values_list()``, it will return all the "
"fields in the model, in the order they were declared."
msgstr ""

# e62f5a2123824a6c899831eac7bc6c56
#: ../../ref/models/querysets.txt:556
msgid "dates"
msgstr ""

# 4d263ed36ae841c2b8cc16877c5f553c
#: ../../ref/models/querysets.txt:560
msgid ""
"Returns a ``DateQuerySet`` — a ``QuerySet`` that evaluates to a list of "
"``datetime.datetime`` objects representing all available dates of a "
"particular kind within the contents of the ``QuerySet``."
msgstr ""

# b9405bfe0f144001a66703977b92bb84
#: ../../ref/models/querysets.txt:564
msgid ""
"``field`` should be the name of a ``DateField`` or ``DateTimeField`` of your "
"model."
msgstr ""

# f0f0d09a829f496984531cf38cfb8db2
#: ../../ref/models/querysets.txt:567
msgid ""
"``kind`` should be either ``\"year\"``, ``\"month\"`` or ``\"day\"``. Each "
"``datetime.datetime`` object in the result list is \"truncated\" to the "
"given ``type``."
msgstr ""

# 3583dc37d5a8409e812ee0477147a33e
#: ../../ref/models/querysets.txt:571
msgid "``\"year\"`` returns a list of all distinct year values for the field."
msgstr ""

# 3ba782a1b58740c584ce1e78afd335ad
#: ../../ref/models/querysets.txt:572
msgid ""
"``\"month\"`` returns a list of all distinct year/month values for the field."
msgstr ""

# 76a7481fbc504013bf6c8b85ec736486
#: ../../ref/models/querysets.txt:574
msgid ""
"``\"day\"`` returns a list of all distinct year/month/day values for the "
"field."
msgstr ""

# 501d0e72be924519b0e9df1b58e45619
#: ../../ref/models/querysets.txt:577
msgid ""
"``order``, which defaults to ``'ASC'``, should be either ``'ASC'`` or "
"``'DESC'``. This specifies how to order the results."
msgstr ""

# b5bf1493a360442989a5d6e9dedd34e5
#: ../../ref/models/querysets.txt:595
msgid ""
"When :doc:`time zone support </topics/i18n/timezones>` is enabled, Django "
"uses UTC in the database connection, which means the aggregation is "
"performed in UTC. This is a known limitation of the current implementation."
msgstr ""

# 2079834efbb1448da3a8c42460ca14f5
#: ../../ref/models/querysets.txt:600
msgid "none"
msgstr ""

# 9493a11721a24e1ab2587ea8a5a9408b
#: ../../ref/models/querysets.txt:604
msgid ""
"Returns an ``EmptyQuerySet`` — a ``QuerySet`` subclass that always evaluates "
"to an empty list. This can be used in cases where you know that you should "
"return an empty result set and your caller is expecting a ``QuerySet`` "
"object (instead of returning an empty list, for example.)"
msgstr ""

# a2d53f2dfc7e4bd9bede3299ba317fb2
#: ../../ref/models/querysets.txt:615
msgid "all"
msgstr ""

# 112020ea06164edf8d11d5f37c6f31cf
#: ../../ref/models/querysets.txt:619
msgid ""
"Returns a *copy* of the current ``QuerySet`` (or ``QuerySet`` subclass).  "
"This can be useful in situations where you might want to pass in either a "
"model manager or a ``QuerySet`` and do further filtering on the result. "
"After calling ``all()`` on either object, you'll definitely have a "
"``QuerySet`` to work with."
msgstr ""

# 7fce5bbfe0804457b9018b24245724cf
#: ../../ref/models/querysets.txt:625
msgid "select_related"
msgstr ""

# 2af658176f794c88b5573f5114705c5f
#: ../../ref/models/querysets.txt:629
msgid ""
"Returns a ``QuerySet`` that will automatically \"follow\" foreign-key "
"relationships, selecting that additional related-object data when it "
"executes its query. This is a performance booster which results in "
"(sometimes much) larger queries but means later use of foreign-key "
"relationships won't require database queries."
msgstr ""

# 964a0ee4400f4018b5a6376b35a6637e
#: ../../ref/models/querysets.txt:635
msgid ""
"The following examples illustrate the difference between plain lookups and "
"``select_related()`` lookups. Here's standard lookup::"
msgstr ""

# adf532b72556485493f9771f67c517ef
#: ../../ref/models/querysets.txt:644
msgid "And here's ``select_related`` lookup::"
msgstr ""

# a9e3ae4135c7435ba106c395995845d7
#: ../../ref/models/querysets.txt:653
msgid ""
"``select_related()`` follows foreign keys as far as possible. If you have "
"the following models::"
msgstr ""

# 4e4b941992314abca64d0d993f00945e
#: ../../ref/models/querysets.txt:668
msgid ""
"...then a call to ``Book.objects.select_related().get(id=4)`` will cache the "
"related ``Person`` *and* the related ``City``::"
msgstr ""

# 798a63ac317e424baa408274bd68639f
#: ../../ref/models/querysets.txt:679
msgid ""
"Note that, by default, ``select_related()`` does not follow foreign keys "
"that have ``null=True``."
msgstr ""

# 053f754e68a64fed813528feb1515c44
#: ../../ref/models/querysets.txt:682
msgid ""
"Usually, using ``select_related()`` can vastly improve performance because "
"your app can avoid many database calls. However, in situations with deeply "
"nested sets of relationships ``select_related()`` can sometimes end up "
"following \"too many\" relations, and can generate queries so large that "
"they end up being slow."
msgstr ""

# ca5025c4f41b42daa3f842ee6b7798d0
#: ../../ref/models/querysets.txt:687
msgid ""
"In these situations, you can use the ``depth`` argument to ``select_related()"
"`` to control how many \"levels\" of relations ``select_related()`` will "
"actually follow::"
msgstr ""

# cc9d0210a46b467da2aaa6c5e9292ef3
#: ../../ref/models/querysets.txt:695
msgid ""
"Sometimes you only want to access specific models that are related to your "
"root model, not all of the related models. In these cases, you can pass the "
"related field names to ``select_related()`` and it will only follow those "
"relations. You can even do this for models that are more than one relation "
"away by separating the field names with double underscores, just as for "
"filters. For example, if you have this model::"
msgstr ""

# 175174463d234159997861d68068e6e6
#: ../../ref/models/querysets.txt:712
msgid ""
"...and you only needed to work with the ``room`` and ``subject`` attributes, "
"you could write this::"
msgstr ""

# c9032da9992f4096b8a5871d1d3d43c2
#: ../../ref/models/querysets.txt:717
msgid "This is also valid::"
msgstr ""

# 1b11fe599b84445aac59ce327ac1018c
#: ../../ref/models/querysets.txt:721
msgid "...and would also pull in the ``building`` relation."
msgstr ""

# ba3f7ed4098c4ac99a83ff2f347d50bb
#: ../../ref/models/querysets.txt:723
msgid ""
"You can refer to any :class:`~django.db.models.ForeignKey` or :class:"
"`~django.db.models.OneToOneField` relation in the list of fields passed to "
"``select_related()``. This includes foreign keys that have ``null=True`` "
"(which are omitted in a no-parameter ``select_related()`` call). It's an "
"error to use both a list of fields and the ``depth`` parameter in the same "
"``select_related()`` call; they are conflicting options."
msgstr ""

# 97ea539add2e46e99bc720dd7bb324c1
#: ../../ref/models/querysets.txt:732
msgid ""
"You can also refer to the reverse direction of a :class:`~django.db.models."
"OneToOneField` in the list of fields passed to ``select_related`` — that is, "
"you can traverse a :class:`~django.db.models.OneToOneField` back to the "
"object on which the field is defined. Instead of specifying the field name, "
"use the :attr:`related_name <django.db.models.ForeignKey.related_name>` for "
"the field on the related object."
msgstr ""

# c69655988262463ab98dd667a9142377
#: ../../ref/models/querysets.txt:739
msgid ""
"A :class:`~django.db.models.OneToOneField` is not traversed in the reverse "
"direction if you are performing a depth-based ``select_related()`` call."
msgstr ""

# be4a9ac93ba14f5c9f377b22e0c28da6
#: ../../ref/models/querysets.txt:743
msgid "prefetch_related"
msgstr ""

# df28d64bcde543c9bd23e5c3f79a1f63
#: ../../ref/models/querysets.txt:749
msgid ""
"Returns a ``QuerySet`` that will automatically retrieve, in a single batch, "
"related objects for each of the specified lookups."
msgstr ""

# b2803b1a2b0e48bd9289e11d88622f3e
#: ../../ref/models/querysets.txt:752
msgid ""
"This has a similar purpose to ``select_related``, in that both are designed "
"to stop the deluge of database queries that is caused by accessing related "
"objects, but the strategy is quite different."
msgstr ""

# 7e4b48cb731a4583bf648db29903dc61
#: ../../ref/models/querysets.txt:756
msgid ""
"``select_related`` works by creating a SQL join and including the fields of "
"the related object in the SELECT statement. For this reason, "
"``select_related`` gets the related objects in the same database query. "
"However, to avoid the much larger result set that would result from joining "
"across a 'many' relationship, ``select_related`` is limited to single-valued "
"relationships - foreign key and one-to-one."
msgstr ""

# 0fe1b8e37e25456cbfe01f3f272daed8
#: ../../ref/models/querysets.txt:763
msgid ""
"``prefetch_related``, on the other hand, does a separate lookup for each "
"relationship, and does the 'joining' in Python. This allows it to prefetch "
"many-to-many and many-to-one objects, which cannot be done using "
"``select_related``, in addition to the foreign key and one-to-one "
"relationships that are supported by ``select_related``. It also supports "
"prefetching of :class:`~django.contrib.contenttypes.generic.GenericRelation` "
"and :class:`~django.contrib.contenttypes.generic.GenericForeignKey`."
msgstr ""

# b4f777417fb043409e2d87f06ac320e7
#: ../../ref/models/querysets.txt:771
msgid "For example, suppose you have these models::"
msgstr ""

# 3228f51e88d6419496daf9d45f7e319d
#: ../../ref/models/querysets.txt:784
msgid "and run this code::"
msgstr ""

# f863638c2b7742b09d20a726c4d89cfe
#: ../../ref/models/querysets.txt:789
msgid ""
"The problem with this code is that it will run a query on the Toppings table "
"for **every** item in the Pizza ``QuerySet``.  Using ``prefetch_related``, "
"this can be reduced to two:"
msgstr ""

# 6bc44b6a241b451e8a4868268d255816
#: ../../ref/models/querysets.txt:795
msgid ""
"All the relevant toppings will be fetched in a single query, and used to "
"make ``QuerySets`` that have a pre-filled cache of the relevant results. "
"These ``QuerySets`` are then used in the ``self.toppings.all()`` calls."
msgstr ""

# 6a1ec7c4cefd43c1b882317db9262801
#: ../../ref/models/querysets.txt:799
msgid ""
"The additional queries are executed after the QuerySet has begun to be "
"evaluated and the primary query has been executed. Note that the result "
"cache of the primary QuerySet and all specified related objects will then be "
"fully loaded into memory, which is often avoided in other cases - even after "
"a query has been executed in the database, QuerySet normally tries to make "
"uses of chunking between the database to avoid loading all objects into "
"memory before you need them."
msgstr ""

# 1680d381cdfb43cdb420b9a4f06d80cd
#: ../../ref/models/querysets.txt:807
msgid ""
"Also remember that, as always with QuerySets, any subsequent chained methods "
"which imply a different database query will ignore previously cached "
"results, and retrieve data using a fresh database query. So, if you write "
"the following:"
msgstr ""

# 160c24d9ee194c5a8f8e7811d1c3c62b
#: ../../ref/models/querysets.txt:814
msgid ""
"...then the fact that ``pizza.toppings.all()`` has been prefetched will not "
"help you - in fact it hurts performance, since you have done a database "
"query that you haven't used. So use this feature with caution!"
msgstr ""

# eedab4a2ed5f403480688a238647f662
#: ../../ref/models/querysets.txt:818
msgid ""
"You can also use the normal join syntax to do related fields of related "
"fields. Suppose we have an additional model to the example above::"
msgstr ""

# 8c8bef675c274543aafdfd2c68d698aa
#: ../../ref/models/querysets.txt:825
msgid "The following are all legal:"
msgstr ""

# d2cf788203fd482292f05fa1e1feed56
#: ../../ref/models/querysets.txt:829
msgid ""
"This will prefetch all pizzas belonging to restaurants, and all toppings "
"belonging to those pizzas. This will result in a total of 3 database queries "
"- one for the restaurants, one for the pizzas, and one for the toppings."
msgstr ""

# a668bc15a85c498593d6fb5de3c8ee72
#: ../../ref/models/querysets.txt:835
msgid ""
"This will fetch the best pizza and all the toppings for the best pizza for "
"each restaurant. This will be done in 3 database queries - one for the "
"restaurants, one for the 'best pizzas', and one for one for the toppings."
msgstr ""

# 678f5e4c6f904e9c83cc1b1600dc28ff
#: ../../ref/models/querysets.txt:839
msgid ""
"Of course, the ``best_pizza`` relationship could also be fetched using "
"``select_related`` to reduce the query count to 2:"
msgstr ""

# 86ed871d09ce41fea59185a27870ee3a
#: ../../ref/models/querysets.txt:844
msgid ""
"Since the prefetch is executed after the main query (which includes the "
"joins needed by ``select_related``), it is able to detect that the "
"``best_pizza`` objects have already been fetched, and it will skip fetching "
"them again."
msgstr ""

# 14a3b9b86fa848bca2758180df48e1ec
#: ../../ref/models/querysets.txt:848
msgid ""
"Chaining ``prefetch_related`` calls will accumulate the lookups that are "
"prefetched. To clear any ``prefetch_related`` behavior, pass `None` as a "
"parameter::"
msgstr ""

# 76fd5a11f8c64b3da2bdaab0dbbcbbcd
#: ../../ref/models/querysets.txt:854
msgid ""
"One difference to note when using ``prefetch_related`` is that objects "
"created by a query can be shared between the different objects that they are "
"related to i.e. a single Python model instance can appear at more than one "
"point in the tree of objects that are returned. This will normally happen "
"with foreign key relationships. Typically this behavior will not be a "
"problem, and will in fact save both memory and CPU time."
msgstr ""

# 99b47c5bd8cc4ac58010431730448cbd
#: ../../ref/models/querysets.txt:861
msgid ""
"While ``prefetch_related`` supports prefetching ``GenericForeignKey`` "
"relationships, the number of queries will depend on the data. Since a "
"``GenericForeignKey`` can reference data in multiple tables, one query per "
"table referenced is needed, rather than one query for all the items. There "
"could be additional queries on the ``ContentType`` table if the relevant "
"rows have not already been fetched."
msgstr ""

# 459bc26541764608b426249c8942d2f5
#: ../../ref/models/querysets.txt:868
msgid ""
"``prefetch_related`` in most cases will be implemented using a SQL query "
"that uses the 'IN' operator. This means that for a large QuerySet a large "
"'IN' clause could be generated, which, depending on the database, might have "
"performance problems of its own when it comes to parsing or executing the "
"SQL query. Always profile for your use case!"
msgstr ""

# ec539d8eddd84247875334996d699907
#: ../../ref/models/querysets.txt:874
msgid ""
"Note that if you use ``iterator()`` to run the query, ``prefetch_related()`` "
"calls will be ignored since these two optimizations do not make sense "
"together."
msgstr ""

# 3879b6f12b024ba3ac8df90e5fe4a7fc
#: ../../ref/models/querysets.txt:878
msgid "extra"
msgstr ""

# 4160b0f432bb492da4dcbc13a55209ed
#: ../../ref/models/querysets.txt:882
msgid ""
"Sometimes, the Django query syntax by itself can't easily express a complex "
"``WHERE`` clause. For these edge cases, Django provides the ``extra()`` "
"``QuerySet`` modifier — a hook for injecting specific clauses into the SQL "
"generated by a ``QuerySet``."
msgstr ""

# bd80b98eafcd4c33b2aafacfda18aeea
#: ../../ref/models/querysets.txt:887
msgid ""
"By definition, these extra lookups may not be portable to different database "
"engines (because you're explicitly writing SQL code) and violate the DRY "
"principle, so you should avoid them if possible."
msgstr ""

# 3ac2a4d28f554617a570d17b2e455bfb
#: ../../ref/models/querysets.txt:891
msgid ""
"Specify one or more of ``params``, ``select``, ``where`` or ``tables``. None "
"of the arguments is required, but you should use at least one of them."
msgstr ""

# bd4bbfeaf8814626a7e4311c939fb889
#: ../../ref/models/querysets.txt:894
msgid "``select``"
msgstr ""

# 86a7c39d457f4612bc88e87fa3397288
#: ../../ref/models/querysets.txt:896
msgid ""
"The ``select`` argument lets you put extra fields in the ``SELECT`` clause.  "
"It should be a dictionary mapping attribute names to SQL clauses to use to "
"calculate that attribute."
msgstr ""

# 4d5336e575b94ed0b0e0ba1c93064ae9
#: ../../ref/models/querysets.txt:904
msgid ""
"As a result, each ``Entry`` object will have an extra attribute, "
"``is_recent``, a boolean representing whether the entry's ``pub_date`` is "
"greater than Jan. 1, 2006."
msgstr ""

# 28a015ee15a64fafb5668eb99744bf3d
#: ../../ref/models/querysets.txt:908
msgid ""
"Django inserts the given SQL snippet directly into the ``SELECT`` statement, "
"so the resulting SQL of the above example would be something like::"
msgstr ""

# 5a6e23a69af34a068f3e1633596b3a15
#: ../../ref/models/querysets.txt:916
msgid ""
"The next example is more advanced; it does a subquery to give each resulting "
"``Blog`` object an ``entry_count`` attribute, an integer count of associated "
"``Entry`` objects::"
msgstr ""

# 8bb6ad7e81e843ac94d98c41f82dff82
#: ../../ref/models/querysets.txt:926
msgid ""
"In this particular case, we're exploiting the fact that the query will "
"already contain the ``blog_blog`` table in its ``FROM`` clause."
msgstr ""

# 50968da2740a4f3eb777395ed44efa29
#: ../../ref/models/querysets.txt:929
msgid "The resulting SQL of the above example would be::"
msgstr ""

# 0310b5a14fb44bdfbbbe7feeb2721b2a
#: ../../ref/models/querysets.txt:934
msgid ""
"Note that the parentheses required by most database engines around "
"subqueries are not required in Django's ``select`` clauses. Also note that "
"some database backends, such as some MySQL versions, don't support "
"subqueries."
msgstr ""

# ff1c00e8eeef4d8d80f1804a3b4dff90
#: ../../ref/models/querysets.txt:939
msgid ""
"In some rare cases, you might wish to pass parameters to the SQL fragments "
"in ``extra(select=...)``. For this purpose, use the ``select_params`` "
"parameter. Since ``select_params`` is a sequence and the ``select`` "
"attribute is a dictionary, some care is required so that the parameters are "
"matched up correctly with the extra select pieces. In this situation, you "
"should use a :class:`django.utils.datastructures.SortedDict` for the "
"``select`` value, not just a normal Python dictionary."
msgstr ""

# f72990081d134abdae5c15c872e72c83
#: ../../ref/models/querysets.txt:948
msgid "This will work, for example::"
msgstr ""

# 663ffe52f1164ba1b5237211a06b1d98
#: ../../ref/models/querysets.txt:954
msgid ""
"The only thing to be careful about when using select parameters in ``extra()"
"`` is to avoid using the substring ``\"%%s\"`` (that's *two* percent "
"characters before the ``s``) in the select strings. Django's tracking of "
"parameters looks for ``%s`` and an escaped ``%`` character like this isn't "
"detected. That will lead to incorrect results."
msgstr ""

# 07a5495c08b64312b46d474c1dcf26bd
#: ../../ref/models/querysets.txt:960
msgid "``where`` / ``tables``"
msgstr ""

# 25e468dbedfa4d8ba358264038175291
#: ../../ref/models/querysets.txt:962
msgid ""
"You can define explicit SQL ``WHERE`` clauses — perhaps to perform non-"
"explicit joins — by using ``where``. You can manually add tables to the SQL "
"``FROM`` clause by using ``tables``."
msgstr ""

# d2d4766e83cf4abd91a5bf92b16aae92
#: ../../ref/models/querysets.txt:966
msgid ""
"``where`` and ``tables`` both take a list of strings. All ``where`` "
"parameters are \"AND\"ed to any other search criteria."
msgstr ""

# 458a4556fe2344eeabb5c4e4411370b7
#: ../../ref/models/querysets.txt:973
msgid "...translates (roughly) into the following SQL::"
msgstr ""

# 2779b892df8a4178b6bfca15c09ab4ca
#: ../../ref/models/querysets.txt:977
msgid ""
"Be careful when using the ``tables`` parameter if you're specifying tables "
"that are already used in the query. When you add extra tables via the "
"``tables`` parameter, Django assumes you want that table included an extra "
"time, if it is already included. That creates a problem, since the table "
"name will then be given an alias. If a table appears multiple times in an "
"SQL statement, the second and subsequent occurrences must use aliases so the "
"database can tell them apart. If you're referring to the extra table you "
"added in the extra ``where`` parameter this is going to cause errors."
msgstr ""

# 6cbd20e8c4e74056a6ba813b401098cb
#: ../../ref/models/querysets.txt:987
msgid ""
"Normally you'll only be adding extra tables that don't already appear in the "
"query. However, if the case outlined above does occur, there are a few "
"solutions. First, see if you can get by without including the extra table "
"and use the one already in the query. If that isn't possible, put your "
"``extra()`` call at the front of the queryset construction so that your "
"table is the first use of that table. Finally, if all else fails, look at "
"the query produced and rewrite your ``where`` addition to use the alias "
"given to your extra table. The alias will be the same each time you "
"construct the queryset in the same way, so you can rely upon the alias name "
"to not change."
msgstr ""

# 83da5582dd014cbab1322e3c4a564f94
#: ../../ref/models/querysets.txt:998
msgid "``order_by``"
msgstr ""

# ec7eedebdfdf486f9938949e2c80f01b
#: ../../ref/models/querysets.txt:1000
msgid ""
"If you need to order the resulting queryset using some of the new fields or "
"tables you have included via ``extra()`` use the ``order_by`` parameter to "
"``extra()`` and pass in a sequence of strings. These strings should either "
"be model fields (as in the normal :meth:`order_by()` method on querysets), "
"of the form ``table_name.column_name`` or an alias for a column that you "
"specified in the ``select`` parameter to ``extra()``."
msgstr ""

# 1e9d852ffc4f456c9dd332580e22645b
#: ../../ref/models/querysets.txt:1013
msgid ""
"This would sort all the items for which ``is_recent`` is true to the front "
"of the result set (``True`` sorts before ``False`` in a descending ordering)."
msgstr ""

# 51cb5c7a203547dd98cd6d88bdf3749c
#: ../../ref/models/querysets.txt:1017
msgid ""
"This shows, by the way, that you can make multiple calls to ``extra()`` and "
"it will behave as you expect (adding new constraints each time)."
msgstr ""

# 2b17513b7e64486bad66c6d676f038b2
#: ../../ref/models/querysets.txt:1020
msgid "``params``"
msgstr ""

# 96099595e7574a529ca343e51d90f78a
#: ../../ref/models/querysets.txt:1022
msgid ""
"The ``where`` parameter described above may use standard Python database "
"string placeholders — ``'%s'`` to indicate parameters the database engine "
"should automatically quote. The ``params`` argument is a list of any extra "
"parameters to be substituted."
msgstr ""

# c3aa40824d974dd89f02b082191ff4b4
#: ../../ref/models/querysets.txt:1031
msgid ""
"Always use ``params`` instead of embedding values directly into ``where`` "
"because ``params`` will ensure values are quoted correctly according to your "
"particular backend. For example, quotes will be escaped correctly."
msgstr ""

# 1d40898a920f4edd8c04e9094649252a
#: ../../ref/models/querysets.txt:1036
msgid "Bad::"
msgstr ""

# e7fd31471bfb4b068cda1e8dfadc2a23
#: ../../ref/models/querysets.txt:1040
msgid "Good::"
msgstr ""

# 391e55ae7e2143c78bd9203b95337030
#: ../../ref/models/querysets.txt:1045
msgid "defer"
msgstr ""

# 54b499fa123643669cf4f8e845353a0e
#: ../../ref/models/querysets.txt:1049
msgid ""
"In some complex data-modeling situations, your models might contain a lot of "
"fields, some of which could contain a lot of data (for example, text "
"fields), or require expensive processing to convert them to Python objects. "
"If you are using the results of a queryset in some situation where you know "
"you don't know if you need those particular fields when you initially fetch "
"the data, you can tell Django not to retrieve them from the database."
msgstr ""

# e6f2d1bad8ca4d06a2b3e701db0de391
#: ../../ref/models/querysets.txt:1056
msgid ""
"This is done by passing the names of the fields to not load to ``defer()``::"
msgstr ""

# a771f994e90a47198f937b891bdabfa9
#: ../../ref/models/querysets.txt:1060
msgid ""
"A queryset that has deferred fields will still return model instances. Each "
"deferred field will be retrieved from the database if you access that field "
"(one at a time, not all the deferred fields at once)."
msgstr ""

# e0f66fcdabd74c268e7d867bd2cf478e
#: ../../ref/models/querysets.txt:1064
msgid ""
"You can make multiple calls to ``defer()``. Each call adds new fields to the "
"deferred set::"
msgstr ""

# ce5363f1c2084c70ad06044b4e14587b
#: ../../ref/models/querysets.txt:1070
msgid ""
"The order in which fields are added to the deferred set does not matter. "
"Calling ``defer()`` with a field name that has already been deferred is "
"harmless (the field will still be deferred)."
msgstr ""

# bbd85ccd3f214d8191c37cbb3bc47939
#: ../../ref/models/querysets.txt:1074
msgid ""
"You can defer loading of fields in related models (if the related models are "
"loading via :meth:`select_related()`) by using the standard double-"
"underscore notation to separate related fields::"
msgstr ""

# 83228828836a459dbfc8d9e3d9280099
#: ../../ref/models/querysets.txt:1080
msgid ""
"If you want to clear the set of deferred fields, pass ``None`` as a "
"parameter to ``defer()``::"
msgstr ""

# 7f4c399dbbfe4308b1d2fe5b2e3f03db
#: ../../ref/models/querysets.txt:1086
msgid ""
"Some fields in a model won't be deferred, even if you ask for them. You can "
"never defer the loading of the primary key. If you are using :meth:"
"`select_related()` to retrieve related models, you shouldn't defer the "
"loading of the field that connects from the primary model to the related one "
"(at the moment, that doesn't raise an error, but it will eventually)."
msgstr ""

# 213ffcc02d1a41aea7a901c7f9a4348e
#: ../../ref/models/querysets.txt:1094
msgid ""
"The ``defer()`` method (and its cousin, :meth:`only()`, below) are only for "
"advanced use-cases. They provide an optimization for when you have analyzed "
"your queries closely and understand *exactly* what information you need and "
"have measured that the difference between returning the fields you need and "
"the full set of fields for the model will be significant."
msgstr ""

# 6fbfda3420f243debbe999167415b0e5
#: ../../ref/models/querysets.txt:1100
msgid ""
"Even if you think you are in the advanced use-case situation, **only use "
"defer() when you cannot, at queryset load time, determine if you will need "
"the extra fields or not**. If you are frequently loading and using a "
"particular subset of your data, the best choice you can make is to normalize "
"your models and put the non-loaded data into a separate model (and database "
"table). If the columns *must* stay in the one table for some reason, create "
"a model with ``Meta.managed = False`` (see the :attr:`managed attribute "
"<django.db.models.Options.managed>` documentation) containing just the "
"fields you normally need to load and use that where you might otherwise call "
"``defer()``. This makes your code more explicit to the reader, is slightly "
"faster and consumes a little less memory in the Python process."
msgstr ""

# b103d57b03d64f94ba0869718b618669
#: ../../ref/models/querysets.txt:1115
msgid "only"
msgstr ""

# 687c4dc62a614d7083add29c902200d9
#: ../../ref/models/querysets.txt:1119
msgid ""
"The ``only()`` method is more or less the opposite of :meth:`defer()`. You "
"call it with the fields that should *not* be deferred when retrieving a "
"model.  If you have a model where almost all the fields need to be deferred, "
"using ``only()`` to specify the complementary set of fields can result in "
"simpler code."
msgstr ""

# e74c42b53a6844abb4cb10c388665ea9
#: ../../ref/models/querysets.txt:1125
msgid ""
"Suppose you have a model with fields ``name``, ``age`` and ``biography``. "
"The following two querysets are the same, in terms of deferred fields::"
msgstr ""

# 2f7a3d39c02f4d9580690031820c0607
#: ../../ref/models/querysets.txt:1131
msgid ""
"Whenever you call ``only()`` it *replaces* the set of fields to load "
"immediately. The method's name is mnemonic: **only** those fields are loaded "
"immediately; the remainder are deferred. Thus, successive calls to ``only()"
"`` result in only the final fields being considered::"
msgstr ""

# 0d282cce148342129951dae977fc428f
#: ../../ref/models/querysets.txt:1139
msgid ""
"Since ``defer()`` acts incrementally (adding fields to the deferred list), "
"you can combine calls to ``only()`` and ``defer()`` and things will behave "
"logically::"
msgstr ""

# 0b7e47cd6d324ed883bd107f32ab9b81
#: ../../ref/models/querysets.txt:1150
msgid ""
"All of the cautions in the note for the :meth:`defer` documentation apply to "
"``only()`` as well. Use it cautiously and only after exhausting your other "
"options."
msgstr ""

# 3b6dc20ceb6a4a629016706fbc10b55f
#: ../../ref/models/querysets.txt:1155
msgid "using"
msgstr ""

# 0a5de151353c48e99286b437bfce5e3d
#: ../../ref/models/querysets.txt:1161
msgid ""
"This method is for controlling which database the ``QuerySet`` will be "
"evaluated against if you are using more than one database.  The only "
"argument this method takes is the alias of a database, as defined in :"
"setting:`DATABASES`."
msgstr ""

# d9e051c7c74c49a581584bf19f7cb3a5
#: ../../ref/models/querysets.txt:1175
msgid "select_for_update"
msgstr ""

# b280485cbb784cfa9a15dc7375abf41d
#: ../../ref/models/querysets.txt:1181
msgid ""
"Returns a queryset that will lock rows until the end of the transaction, "
"generating a ``SELECT ... FOR UPDATE`` SQL statement on supported databases."
msgstr ""

# 12bf6a0da3a74db788c747d40d9d70ac
#: ../../ref/models/querysets.txt:1188
msgid ""
"All matched entries will be locked until the end of the transaction block, "
"meaning that other transactions will be prevented from changing or acquiring "
"locks on them."
msgstr ""

# 0854118f64b44237b11a7eadfedfec3b
#: ../../ref/models/querysets.txt:1192
msgid ""
"Usually, if another transaction has already acquired a lock on one of the "
"selected rows, the query will block until the lock is released. If this is "
"not the behavior you want, call ``select_for_update(nowait=True)``. This "
"will make the call non-blocking. If a conflicting lock is already acquired "
"by another transaction, :exc:`~django.db.DatabaseError` will be raised when "
"the queryset is evaluated."
msgstr ""

# 07a1e90cb56e412485ddd3ab189f2aae
#: ../../ref/models/querysets.txt:1199
msgid ""
"Note that using ``select_for_update()`` will cause the current transaction "
"to be considered dirty, if under transaction management. This is to ensure "
"that Django issues a ``COMMIT`` or ``ROLLBACK``, releasing any locks held by "
"the ``SELECT FOR UPDATE``."
msgstr ""

# 0c0ef172eef54906bd990879d364f06b
#: ../../ref/models/querysets.txt:1204
msgid ""
"Currently, the ``postgresql_psycopg2``, ``oracle``, and ``mysql`` database "
"backends support ``select_for_update()``. However, MySQL has no support for "
"the ``nowait`` argument. Obviously, users of external third-party backends "
"should check with their backend's documentation for specifics in those cases."
msgstr ""

# 4ba9e14792464de080be1c7cf996b3fc
#: ../../ref/models/querysets.txt:1209
msgid ""
"Passing ``nowait=True`` to ``select_for_update`` using database backends "
"that do not support ``nowait``, such as MySQL, will cause a :exc:`~django.db."
"DatabaseError` to be raised. This is in order to prevent code unexpectedly "
"blocking."
msgstr ""

# 9b97117dd70e4cabac38fbeb45431cac
#: ../../ref/models/querysets.txt:1214
msgid ""
"Using ``select_for_update`` on backends which do not support ``SELECT ... "
"FOR UPDATE`` (such as SQLite) will have no effect."
msgstr ""

# 5663724c3d8a4efc86b701595c4b71a3
#: ../../ref/models/querysets.txt:1218
msgid "Methods that do not return QuerySets"
msgstr ""

# a7024357c372417b825d603220a7a52a
#: ../../ref/models/querysets.txt:1220
msgid ""
"The following ``QuerySet`` methods evaluate the ``QuerySet`` and return "
"something *other than* a ``QuerySet``."
msgstr ""

# 1c9f0ca173894be69c1465b8b30f76b5
#: ../../ref/models/querysets.txt:1223
msgid ""
"These methods do not use a cache (see :ref:`caching-and-querysets`). Rather, "
"they query the database each time they're called."
msgstr ""

# 39e54dab90cd454a933fd24bc9085f2d
#: ../../ref/models/querysets.txt:1227
msgid "get"
msgstr ""

# c087e786122a465baf1aaaf79e5369fc
#: ../../ref/models/querysets.txt:1231
msgid ""
"Returns the object matching the given lookup parameters, which should be in "
"the format described in `Field lookups`_."
msgstr ""

# 6981662bf5844da38b85f798a9b4186c
#: ../../ref/models/querysets.txt:1234
msgid ""
"``get()`` raises :exc:`~django.core.exceptions.MultipleObjectsReturned` if "
"more than one object was found. The :exc:`~django.core.excpetions."
"MultipleObjectsReturned` exception is an attribute of the model class."
msgstr ""

# e8979a28cd404849be846f0f9548e0f3
#: ../../ref/models/querysets.txt:1239
msgid ""
"``get()`` raises a :exc:`~django.core.exceptions.DoesNotExist` exception if "
"an object wasn't found for the given parameters. This exception is also an "
"attribute of the model class. Example::"
msgstr ""

# 57114b26a9aa4843bf8b0a8da3706e99
#: ../../ref/models/querysets.txt:1245
msgid ""
"The :exc:`~django.core.exceptions.DoesNotExist` exception inherits from :exc:"
"`django.core.exceptions.ObjectDoesNotExist`, so you can target multiple :exc:"
"`~django.core.exceptions.DoesNotExist` exceptions. Example::"
msgstr ""

# 99e1617908dc447c89abe88db912b46a
#: ../../ref/models/querysets.txt:1257
msgid "create"
msgstr ""

# 2fc89e40edfc4c16b88d2daafed34456
#: ../../ref/models/querysets.txt:1261
msgid ""
"A convenience method for creating an object and saving it all in one step.  "
"Thus::"
msgstr ""

# 64cd456da5f34f8db7b9cc02a5cfa19c
#: ../../ref/models/querysets.txt:1265
msgid "and::"
msgstr ""

# a4b0940e66aa4c46950fd66f7aada410
#: ../../ref/models/querysets.txt:1270
msgid "are equivalent."
msgstr ""

# 9d2f8c4f2cdc43d8b3ab9f1dbbb857f3
#: ../../ref/models/querysets.txt:1272
msgid ""
"The :ref:`force_insert <ref-models-force-insert>` parameter is documented "
"elsewhere, but all it means is that a new object will always be created. "
"Normally you won't need to worry about this. However, if your model contains "
"a manual primary key value that you set and if that value already exists in "
"the database, a call to ``create()`` will fail with an :exc:`~django.db."
"IntegrityError` since primary keys must be unique. Be prepared to handle the "
"exception if you are using manual primary keys."
msgstr ""

# 69da2aba6e0a476d88714cbfab4ded2c
#: ../../ref/models/querysets.txt:1281
msgid "get_or_create"
msgstr ""

# 095d127ed3f0454e84ada91368fbcd78
#: ../../ref/models/querysets.txt:1285
msgid ""
"A convenience method for looking up an object with the given kwargs, "
"creating one if necessary."
msgstr ""

# c4730fdeadce446ebd59ddaeb5260458
#: ../../ref/models/querysets.txt:1288
msgid ""
"Returns a tuple of ``(object, created)``, where ``object`` is the retrieved "
"or created object and ``created`` is a boolean specifying whether a new "
"object was created."
msgstr ""

# 9a6f12f9068e44288fdf44a314377927
#: ../../ref/models/querysets.txt:1292
msgid ""
"This is meant as a shortcut to boilerplatish code and is mostly useful for "
"data-import scripts. For example::"
msgstr ""

# eef27f490beb4646a47e0ee0ab6c1864
#: ../../ref/models/querysets.txt:1301
msgid ""
"This pattern gets quite unwieldy as the number of fields in a model goes up. "
"The above example can be rewritten using ``get_or_create()`` like so::"
msgstr ""

# 09a5346db34b46999085a6c90b728c0e
#: ../../ref/models/querysets.txt:1307
msgid ""
"Any keyword arguments passed to ``get_or_create()`` — *except* an optional "
"one called ``defaults`` — will be used in a :meth:`get()` call. If an object "
"is found, ``get_or_create()`` returns a tuple of that object and ``False``. "
"If an object is *not* found, ``get_or_create()`` will instantiate and save a "
"new object, returning a tuple of the new object and ``True``. The new object "
"will be created roughly according to this algorithm::"
msgstr ""

# b6b0d463125e461e9d677cca3cd9c702
#: ../../ref/models/querysets.txt:1320
msgid ""
"In English, that means start with any non-``'defaults'`` keyword argument "
"that doesn't contain a double underscore (which would indicate a non-exact "
"lookup). Then add the contents of ``defaults``, overriding any keys if "
"necessary, and use the result as the keyword arguments to the model class. "
"As hinted at above, this is a simplification of the algorithm that is used, "
"but it contains all the pertinent details. The internal implementation has "
"some more error-checking than this and handles some extra edge-conditions; "
"if you're interested, read the code."
msgstr ""

# 788d3a80de854d8caa5182a2a8934469
#: ../../ref/models/querysets.txt:1329
msgid ""
"If you have a field named ``defaults`` and want to use it as an exact lookup "
"in ``get_or_create()``, just use ``'defaults__exact'``, like so::"
msgstr ""

# d9e51a17630c4fce85f65b3244528406
#: ../../ref/models/querysets.txt:1334
msgid ""
"The ``get_or_create()`` method has similar error behavior to :meth:`create()"
"` when you're using manually specified primary keys. If an object needs to "
"be created and the key already exists in the database, an :exc:`~django.db."
"IntegrityError` will be raised."
msgstr ""

# 343103b21ec14fd4be6deea33223918d
#: ../../ref/models/querysets.txt:1339
msgid ""
"Finally, a word on using ``get_or_create()`` in Django views. As mentioned "
"earlier, ``get_or_create()`` is mostly useful in scripts that need to parse "
"data and create new records if existing ones aren't available. But if you "
"need to use ``get_or_create()`` in a view, please make sure to use it only "
"in ``POST`` requests unless you have a good reason not to. ``GET`` requests "
"shouldn't have any effect on data; use ``POST`` whenever a request to a page "
"has a side effect on your data. For more, see `Safe methods`_ in the HTTP "
"spec."
msgstr ""

# 1a98b7141bf04983887db8d3f6ab5589
#: ../../ref/models/querysets.txt:1350
msgid "bulk_create"
msgstr ""

# 6a3e7a565a72460ebabe910f962f1c51
#: ../../ref/models/querysets.txt:1356
msgid ""
"This method inserts the provided list of objects into the database in an "
"efficient manner (generally only 1 query, no matter how many objects there "
"are)::"
msgstr ""

# 2bce4477f94a443cbb328dd320143259
#: ../../ref/models/querysets.txt:1366
msgid "This has a number of caveats though:"
msgstr ""

# f17f45b1284b47b5993695dab1462633
#: ../../ref/models/querysets.txt:1368
msgid ""
"The model's ``save()`` method will not be called, and the ``pre_save`` and "
"``post_save`` signals will not be sent."
msgstr ""

# 3c7ce6c26fb2476e9dcf7bba1c9dec80
#: ../../ref/models/querysets.txt:1370
msgid ""
"It does not work with child models in a multi-table inheritance scenario."
msgstr ""

# 86307a6745fa4420bf01ce5e94fe10bf
#: ../../ref/models/querysets.txt:1371
msgid ""
"If the model's primary key is an :class:`~django.db.models.AutoField` it "
"does not retrieve and set the primary key attribute, as ``save()`` does."
msgstr ""

# 9c0aa7d9a5234e6aa45d9eb2e1db8483
#: ../../ref/models/querysets.txt:1376
msgid ""
"SQLite sets a limit on the number of parameters per SQL statement. The "
"maximum is defined by the SQLITE_MAX_VARIABLE_NUMBER_ compilation option, "
"which defaults to 999. For instance, if your model has 8 fields (including "
"the primary key), you cannot create more than 999 // 8 = 124 instances at a "
"time. If you exceed this limit, you will get an exception::"
msgstr ""

# 900b16e541ac40ad87c2a711fcb1d4ba
#: ../../ref/models/querysets.txt:1384
msgid ""
"If your application's performance requirements exceed SQLite's limits, you "
"should switch to another database engine, such as PostgreSQL."
msgstr ""

# a589281af91447afbf498b1b55d83197
#: ../../ref/models/querysets.txt:1390
msgid "count"
msgstr ""

# 026afa74202840ee842576e24beb4347
#: ../../ref/models/querysets.txt:1394
msgid ""
"Returns an integer representing the number of objects in the database "
"matching the ``QuerySet``. The ``count()`` method never raises exceptions."
msgstr ""

# 73363b445824441e941ca065cb86e770
#: ../../ref/models/querysets.txt:1405
msgid ""
"A ``count()`` call performs a ``SELECT COUNT(*)`` behind the scenes, so you "
"should always use ``count()`` rather than loading all of the record into "
"Python objects and calling ``len()`` on the result (unless you need to load "
"the objects into memory anyway, in which case ``len()`` will be faster)."
msgstr ""

# 2cfd425ed111401aa8130c4deed6d781
#: ../../ref/models/querysets.txt:1410
msgid ""
"Depending on which database you're using (e.g. PostgreSQL vs. MySQL), ``count"
"()`` may return a long integer instead of a normal Python integer. This is "
"an underlying implementation quirk that shouldn't pose any real-world "
"problems."
msgstr ""

# 104880cabcc446c8a375e9080c27d2f2
#: ../../ref/models/querysets.txt:1416
msgid "in_bulk"
msgstr ""

# c015cb0b0bc24ba1bff83b385f1ee411
#: ../../ref/models/querysets.txt:1420
msgid ""
"Takes a list of primary-key values and returns a dictionary mapping each "
"primary-key value to an instance of the object with the given ID."
msgstr ""

# 0a088bb88a794c8e9d04be73c13e2800
#: ../../ref/models/querysets.txt:1432
msgid ""
"If you pass ``in_bulk()`` an empty list, you'll get an empty dictionary."
msgstr ""

# 89a873f6e4144b11b8b0c0e503758c58
#: ../../ref/models/querysets.txt:1435
msgid "iterator"
msgstr ""

# 7ca7f535303047e48a21ba0daddbb334
#: ../../ref/models/querysets.txt:1439
msgid ""
"Evaluates the ``QuerySet`` (by performing the query) and returns an iterator "
"(see :pep:`234`) over the results. A ``QuerySet`` typically caches its "
"results internally so that repeated evaluations do not result in additional "
"queries. In contrast, ``iterator()`` will read results directly, without "
"doing any caching at the ``QuerySet`` level (internally, the default "
"iterator calls ``iterator()`` and caches the return value). For a "
"``QuerySet`` which returns a large number of objects that you only need to "
"access once, this can results in better performance and a significant "
"reduction in memory."
msgstr ""

# c384b409b94540aaa7a6efcb39ce7e25
#: ../../ref/models/querysets.txt:1448
msgid ""
"Note that using ``iterator()`` on a ``QuerySet`` which has already been "
"evaluated will force it to evaluate again, repeating the query."
msgstr ""

# bbd8d1ccc70848adbdf0c270028568d8
#: ../../ref/models/querysets.txt:1451
msgid ""
"Also, use of ``iterator()`` causes previous ``prefetch_related()`` calls to "
"be ignored since these two optimizations do not make sense together."
msgstr ""

# 644fd584461a4cb3a11b1c8a525ae832
#: ../../ref/models/querysets.txt:1455
msgid "latest"
msgstr ""

# 5bbbde566eba43ddac62d8ea0ecd2275
#: ../../ref/models/querysets.txt:1459
msgid ""
"Returns the latest object in the table, by date, using the ``field_name`` "
"provided as the date field."
msgstr ""

# 8bb157a1b5a3441480c92e9f9d0e531b
#: ../../ref/models/querysets.txt:1462
msgid ""
"This example returns the latest ``Entry`` in the table, according to the "
"``pub_date`` field::"
msgstr ""

# a3e0a6cf8236453abaf4f5b1be9636da
#: ../../ref/models/querysets.txt:1467
msgid ""
"If your model's :ref:`Meta <meta-options>` specifies :attr:`~django.db."
"models.Options.get_latest_by`, you can leave off the ``field_name`` argument "
"to ``latest()``. Django will use the field specified in :attr:`~django.db."
"models.Options.get_latest_by` by default."
msgstr ""

# 9c775b76790d4ad49b75c11db268afe9
#: ../../ref/models/querysets.txt:1472
msgid ""
"Like :meth:`get()`, ``latest()`` raises :exc:`~django.core.exceptions."
"DoesNotExist` if there is no object with the given parameters."
msgstr ""

# a06e084a22624576a0521208f2353f92
#: ../../ref/models/querysets.txt:1476
msgid "Note ``latest()`` exists purely for convenience and readability."
msgstr ""

# 9e2be18390464feb82b8bd56a5d6c616
#: ../../ref/models/querysets.txt:1479
msgid "aggregate"
msgstr ""

# 75e7a89d54924141bb4f1e08407fa359
#: ../../ref/models/querysets.txt:1483
msgid ""
"Returns a dictionary of aggregate values (averages, sums, etc) calculated "
"over the ``QuerySet``. Each argument to ``aggregate()`` specifies a value "
"that will be included in the dictionary that is returned."
msgstr ""

# 7a78ee447e9341a184ef4e22d6f12b8f
#: ../../ref/models/querysets.txt:1490
msgid ""
"Aggregates specified using keyword arguments will use the keyword as the "
"name for the annotation. Anonymous arguments will have a name generated for "
"them based upon the name of the aggregate function and the model field that "
"is being aggregated."
msgstr ""

# cb8833c5e83d44d1a2cbe41e5c2d86b9
#: ../../ref/models/querysets.txt:1495
msgid ""
"For example, when you are working with blog entries, you may want to know "
"the number of authors that have contributed blog entries::"
msgstr ""

# bd065422e32544b5acb9c46003bc100d
#: ../../ref/models/querysets.txt:1501
msgid ""
"By using a keyword argument to specify the aggregate function, you can "
"control the name of the aggregation value that is returned::"
msgstr ""

# 93f463637be645cd9c29ad618c9afc92
#: ../../ref/models/querysets.txt:1511
msgid "exists"
msgstr ""

# e3ca83464623475190112367b5b076d3
#: ../../ref/models/querysets.txt:1517
msgid ""
"Returns ``True`` if the :class:`.QuerySet` contains any results, and "
"``False`` if not. This tries to perform the query in the simplest and "
"fastest way possible, but it *does* execute nearly the same query. This "
"means that calling :meth:`.QuerySet.exists` is faster than ``bool"
"(some_query_set)``, but not by a large degree. If ``some_query_set`` has not "
"yet been evaluated, but you know that it will be at some point, then using "
"``some_query_set.exists()`` will do more overall work (one query for the "
"existence check plus an extra one to later retrieve the results) than simply "
"using ``bool(some_query_set)``, which retrieves the results and then checks "
"if any were returned."
msgstr ""

# bd5dbea1e09149119376e07bea197032
#: ../../ref/models/querysets.txt:1528
msgid "update"
msgstr ""

# c1a7d6a7ff3d41f3a309b6762135ca3b
#: ../../ref/models/querysets.txt:1532
msgid ""
"Performs an SQL update query for the specified fields, and returns the "
"number of rows affected."
msgstr ""

# 101967ca2f8c446ca1246bcb32bc8bbe
#: ../../ref/models/querysets.txt:1535
msgid ""
"For example, to turn comments off for all blog entries published in 2010, "
"you could do this::"
msgstr ""

# 0d7d730dee68496ebc78b829e53acb0f
#: ../../ref/models/querysets.txt:1540
msgid ""
"(This assumes your ``Entry`` model has fields ``pub_date`` and "
"``comments_on``.)"
msgstr ""

# 46186b877d1e46f8a3169d6ed1f0f0fb
#: ../../ref/models/querysets.txt:1542
msgid ""
"You can update multiple fields — there's no limit on how many. For example, "
"here we update the ``comments_on`` and ``headline`` fields::"
msgstr ""

# 0ad062d84fc44b58abec86b628072b8e
#: ../../ref/models/querysets.txt:1547
msgid ""
"The ``update()`` method is applied instantly, and the only restriction on "
"the :class:`.QuerySet` that is updated is that it can only update columns in "
"the model's main table, not on related models. You can't do this, for "
"example::"
msgstr ""

# 6ac63b394243454892515e54e7f14508
#: ../../ref/models/querysets.txt:1553
msgid "Filtering based on related fields is still possible, though::"
msgstr ""

# 7d499515b1e64fada3aee814142e4325
#: ../../ref/models/querysets.txt:1557
msgid ""
"You cannot call ``update()`` on a :class:`.QuerySet` that has had a slice "
"taken or can otherwise no longer be filtered."
msgstr ""

# a89ca279848f4974a563209b4dec199c
#: ../../ref/models/querysets.txt:1560
msgid "The ``update()`` method returns the number of affected rows::"
msgstr ""

# 3ce63769fee34274a024f4b3a3e43b78
#: ../../ref/models/querysets.txt:1571
msgid ""
"If you're just updating a record and don't need to do anything with the "
"model object, the most efficient approach is to call ``update()``, rather "
"than loading the model object into memory. For example, instead of doing "
"this::"
msgstr ""

# 5a1545212709425f93d94f0829a437d7
#: ../../ref/models/querysets.txt:1579
msgid "...do this::"
msgstr ""

# 353ff23f1ae0457ea4ec911972b46ac6
#: ../../ref/models/querysets.txt:1583
msgid ""
"Using ``update()`` also prevents a race condition wherein something might "
"change in your database in the short period of time between loading the "
"object and calling ``save()``."
msgstr ""

# c79077ab5996458095ce2f6b37be50f6
#: ../../ref/models/querysets.txt:1587
msgid ""
"Finally, realize that ``update()`` does an update at the SQL level and, "
"thus, does not call any ``save()`` methods on your models, nor does it emit "
"the :attr:`~django.db.models.signals.pre_save` or :attr:`~django.db.models."
"signals.post_save` signals (which are a consequence of calling :meth:`Model."
"save() <~django.db.models.Model.save()>`). If you want to update a bunch of "
"records for a model that has a custom :meth:`~django.db.models.Model.save()"
"`` method, loop over them and call :meth:`~django.db.models.Model.save()`, "
"like this::"
msgstr ""

# 7f4621d2e1f5494abb894b7e07fcea08
#: ../../ref/models/querysets.txt:1601
msgid "delete"
msgstr ""

# 6a8165a1bc1e49f1a50a3a73eecb7e06
#: ../../ref/models/querysets.txt:1605
msgid ""
"Performs an SQL delete query on all rows in the :class:`.QuerySet`. The "
"``delete()`` is applied instantly. You cannot call ``delete()`` on a :class:"
"`.QuerySet` that has had a slice taken or can otherwise no longer be "
"filtered."
msgstr ""

# a6ba13eacc404ec3b5271306bc954951
#: ../../ref/models/querysets.txt:1610
msgid "For example, to delete all the entries in a particular blog::"
msgstr ""

# 22b655b2c188426d81fba9eb50cb0b64
#: ../../ref/models/querysets.txt:1617
msgid ""
"By default, Django's :class:`~django.db.models.ForeignKey` emulates the SQL "
"constraint ``ON DELETE CASCADE`` — in other words, any objects with foreign "
"keys pointing at the objects to be deleted will be deleted along with them. "
"For example::"
msgstr ""

# 6e525e013efd4920bc409d1ca09e2280
#: ../../ref/models/querysets.txt:1631
msgid ""
"The ``delete()`` method does a bulk delete and does not call any ``delete()"
"`` methods on your models. It does, however, emit the :data:`~django.db."
"models.signals.pre_delete` and :data:`~django.db.models.signals.post_delete` "
"signals for all deleted objects (including cascaded deletions)."
msgstr ""

# 25bb2d9766cf4d1f942af439e0ae24a8
#: ../../ref/models/querysets.txt:1640
msgid "Field lookups"
msgstr ""

# 9b8318d1c404483d8fe97ae2855e543f
#: ../../ref/models/querysets.txt:1642
msgid ""
"Field lookups are how you specify the meat of an SQL ``WHERE`` clause. "
"They're specified as keyword arguments to the ``QuerySet`` methods :meth:"
"`filter()`, :meth:`exclude()` and :meth:`get()`."
msgstr ""

# 706c28ac405344e1a4f446f620e62b41
#: ../../ref/models/querysets.txt:1646
msgid ""
"For an introduction, see :ref:`models and database queries documentation "
"<field-lookups-intro>`."
msgstr ""

# aae6f00611d24e33a40759127ce01d4b
#: ../../ref/models/querysets.txt:1652
msgid "exact"
msgstr ""

# f1c275ce0f734a989c2d212b5c8c13e2
#: ../../ref/models/querysets.txt:1654
msgid ""
"Exact match. If the value provided for comparison is ``None``, it will be "
"interpreted as an SQL ``NULL`` (see :lookup:`isnull` for more details)."
msgstr ""

# 2d1915634dd045d48b96a3a666049053
# 8dd9797d403a4c58926f979784ea4ad1
# 00d748c69f724122a3d9c011e7bb8191
#: ../../ref/models/querysets.txt:1662 ../../ref/models/querysets.txt:2095
#: ../../ref/models/querysets.txt:2119
msgid "SQL equivalents::"
msgstr ""

# afd1d95ef7194daeaf734313266fabf1
#: ../../ref/models/querysets.txt:1669
msgid ""
"In MySQL, a database table's \"collation\" setting determines whether "
"``exact`` comparisons are case-sensitive. This is a database setting, *not* "
"a Django setting. It's possible to configure your MySQL tables to use case-"
"sensitive comparisons, but some trade-offs are involved. For more "
"information about this, see the :ref:`collation section <mysql-collation>` "
"in the :doc:`databases </ref/databases>` documentation."
msgstr ""

# c2d738a0f4794372961eea7334b1e631
#: ../../ref/models/querysets.txt:1679
msgid "iexact"
msgstr ""

# 1d2a782330e044019acd959577a8b229
#: ../../ref/models/querysets.txt:1681
msgid "Case-insensitive exact match."
msgstr ""

# f0337a83543d402a9a1f5b9bb5e82e1f
# 1b16dc65eaca427cb26458ae9c807598
# 3d6b9723e5514cb8988bd64e6a246c2a
# 25821b44413f4335bf59ee82133792e6
# 6228fd4c49fb443295ccd498d9163528
# f3a9d91abf3f44ceaf346d72ee5cbe80
# 24bbc57db9554cba9e31376833dc1722
# 854b4b92dad541d2a8b24685cd166f2e
# 255d050c47d441779f160f758b91a212
# 0556a9de39ea4772928e7edab64d8b7d
# 4304efe39f084bca96001b7e4b5edc2c
# 047d40155e46497ea622d043d13c5860
# 4954d1b2131049d4b20c856734c81582
# 0a25ab71ad874a5a86153117c19b5425
# 34f42a3a696e439b8cd3713b344b37e1
#: ../../ref/models/querysets.txt:1687 ../../ref/models/querysets.txt:1712
#: ../../ref/models/querysets.txt:1737 ../../ref/models/querysets.txt:1758
#: ../../ref/models/querysets.txt:1831 ../../ref/models/querysets.txt:1867
#: ../../ref/models/querysets.txt:1885 ../../ref/models/querysets.txt:1906
#: ../../ref/models/querysets.txt:1927 ../../ref/models/querysets.txt:1950
#: ../../ref/models/querysets.txt:1968 ../../ref/models/querysets.txt:1986
#: ../../ref/models/querysets.txt:2003 ../../ref/models/querysets.txt:2052
#: ../../ref/models/querysets.txt:2068
msgid "SQL equivalent::"
msgstr ""

# e1f74500fccf44fb8199e876162e287c
#: ../../ref/models/querysets.txt:1691
msgid ""
"Note this will match ``'Beatles Blog'``, ``'beatles blog'``, ``'BeAtLes "
"BLoG'``, etc."
msgstr ""

# 5e0a4b2589054a87b954da22ee3e361f
#: ../../ref/models/querysets.txt:1696
msgid ""
"When using the SQLite backend and Unicode (non-ASCII) strings, bear in mind "
"the :ref:`database note <sqlite-string-matching>` about string comparisons. "
"SQLite does not do case-insensitive matching for Unicode strings."
msgstr ""

# c71a47376e7147a9a378380b4b23355e
#: ../../ref/models/querysets.txt:1706
msgid "Case-sensitive containment test."
msgstr ""

# 209a43faa73746a59220814573dbde8e
#: ../../ref/models/querysets.txt:1716
msgid ""
"Note this will match the headline ``'Lennon honored today'`` but not "
"``'lennon honored today'``."
msgstr ""

# 50f25ba31a8146cf9d4ddf1ece874649
#: ../../ref/models/querysets.txt:1721
msgid ""
"SQLite doesn't support case-sensitive ``LIKE`` statements; ``contains`` acts "
"like ``icontains`` for SQLite. See the :ref:`database note <sqlite-string-"
"matching>` for more information."
msgstr ""

# 5ead255230a541c483d4bc37ebfb97d6
#: ../../ref/models/querysets.txt:1729
msgid "icontains"
msgstr ""

# ea5eaa729d7e4fec86f5726e008c7007
#: ../../ref/models/querysets.txt:1731
msgid "Case-insensitive containment test."
msgstr ""

# e21784425ba84a5ab73ed1dbc790a82d
# cb9c8d3129bf460d8662a2263cddd3ae
# 188e0e6fa0ab4ba591daaf50369ac7ae
#: ../../ref/models/querysets.txt:1743 ../../ref/models/querysets.txt:1891
#: ../../ref/models/querysets.txt:1933
msgid ""
"When using the SQLite backend and Unicode (non-ASCII) strings, bear in mind "
"the :ref:`database note <sqlite-string-matching>` about string comparisons."
msgstr ""

# d282a983e91f43aab4b89bc5b53e3386
#: ../../ref/models/querysets.txt:1750
msgid "in"
msgstr ""

# 06eeb2991a274cc1b0e34472837babe6
#: ../../ref/models/querysets.txt:1752
msgid "In a given list."
msgstr ""

# 981d3da9403f43289d70dddcd611efcc
#: ../../ref/models/querysets.txt:1762
msgid ""
"You can also use a queryset to dynamically evaluate the list of values "
"instead of providing a list of literal values::"
msgstr ""

# 661d457c0339436d81b25eddf94ea80e
#: ../../ref/models/querysets.txt:1768
msgid "This queryset will be evaluated as subselect statement::"
msgstr ""

# 037ad4759388409e8629d403218a0a10
#: ../../ref/models/querysets.txt:1772
msgid "The above code fragment could also be written as follows::"
msgstr ""

# 18002bd45b204b9f9f9cfba216abe089
#: ../../ref/models/querysets.txt:1779
msgid ""
"This ``query`` attribute should be considered an opaque internal attribute. "
"It's fine to use it like above, but its API may change between Django "
"versions."
msgstr ""

# f6e3db8c0d024e3db5fd7bc699c57e1b
#: ../../ref/models/querysets.txt:1783
msgid ""
"This second form is a bit less readable and unnatural to write, since it "
"accesses the internal ``query`` attribute and requires a ``ValuesQuerySet``. "
"If your code doesn't require compatibility with Django 1.0, use the first "
"form, passing in a queryset directly."
msgstr ""

# 931fb4918a7d45a1a244166d48ba7d94
#: ../../ref/models/querysets.txt:1788
msgid ""
"If you pass in a ``ValuesQuerySet`` or ``ValuesListQuerySet`` (the result of "
"calling ``values()`` or ``values_list()`` on a queryset) as the value to an "
"``__in`` lookup, you need to ensure you are only extracting one field in the "
"result. For example, this will work (filtering on the blog names)::"
msgstr ""

# 1c7a714a3c574b0899d528411b702337
#: ../../ref/models/querysets.txt:1796
msgid ""
"This example will raise an exception, since the inner query is trying to "
"extract two field values, where only one is expected::"
msgstr ""

# 395b781395cf43c6822e30c865719a2d
#: ../../ref/models/querysets.txt:1805
msgid ""
"Be cautious about using nested queries and understand your database server's "
"performance characteristics (if in doubt, benchmark!). Some database "
"backends, most notably MySQL, don't optimize nested queries very well. It is "
"more efficient, in those cases, to extract a list of values and then pass "
"that into the second query. That is, execute two queries instead of one::"
msgstr ""

# 1a79cfd4bc4c4163b514b4ac1e87bf37
#: ../../ref/models/querysets.txt:1816
msgid ""
"Note the ``list()`` call around the Blog ``QuerySet`` to force execution of "
"the first query. Without it, a nested query would be executed, because :ref:"
"`querysets-are-lazy`."
msgstr ""

# 93104c51ce2a44cfb06c5bf28e37bdc2
#: ../../ref/models/querysets.txt:1823
msgid "gt"
msgstr ""

# 9d9289648c5e4f8bb3e312e18ba87009
#: ../../ref/models/querysets.txt:1825
msgid "Greater than."
msgstr ""

# c516e8f45e3f4acfbaf1931cc0cac5a8
#: ../../ref/models/querysets.txt:1838
msgid "gte"
msgstr ""

# 8af1d2776c8147a9a774cfcbd40979bf
#: ../../ref/models/querysets.txt:1840
msgid "Greater than or equal to."
msgstr ""

# b976bdac5eae4dada8b4e3e2dd2bca28
#: ../../ref/models/querysets.txt:1845
msgid "lt"
msgstr ""

# 094074be81384d26b0467e280f6acc1f
#: ../../ref/models/querysets.txt:1847
msgid "Less than."
msgstr ""

# 268954b6b2124a75b647651558276831
#: ../../ref/models/querysets.txt:1852
msgid "lte"
msgstr ""

# 5d99cb7ca3b740b5bf9fb76c699f4952
#: ../../ref/models/querysets.txt:1854
msgid "Less than or equal to."
msgstr ""

# 0e3c6f6a882941fc80491e9a5dd49671
#: ../../ref/models/querysets.txt:1859
msgid "startswith"
msgstr ""

# 811e612b38d64f92b1b8ddc7e66bf48f
#: ../../ref/models/querysets.txt:1861
msgid "Case-sensitive starts-with."
msgstr ""

# 919abaeee71d471a8bec83484275f03a
#: ../../ref/models/querysets.txt:1871
msgid ""
"SQLite doesn't support case-sensitive ``LIKE`` statements; ``startswith`` "
"acts like ``istartswith`` for SQLite."
msgstr ""

# 8f69ce1dba4747e98050abd29307ed21
#: ../../ref/models/querysets.txt:1877
msgid "istartswith"
msgstr ""

# 3b77568876624c6c99823c88da019953
#: ../../ref/models/querysets.txt:1879
msgid "Case-insensitive starts-with."
msgstr ""

# 0880115146f64504bcbb0fb8fcffe20a
#: ../../ref/models/querysets.txt:1898
msgid "endswith"
msgstr ""

# 2f64dad7ce514858a87463660afd744a
#: ../../ref/models/querysets.txt:1900
msgid "Case-sensitive ends-with."
msgstr ""

# b459f7d7d63f49b2ab37dffe2800803b
#: ../../ref/models/querysets.txt:1912
msgid ""
"SQLite doesn't support case-sensitive ``LIKE`` statements; ``endswith`` acts "
"like ``iendswith`` for SQLite. Refer to the :ref:`database note <sqlite-"
"string-matching>` documentation for more."
msgstr ""

# 381c783711f64783aef6a680c07f578f
#: ../../ref/models/querysets.txt:1919
msgid "iendswith"
msgstr ""

# 762e43c1248c48eca036b2c4e78a8b81
#: ../../ref/models/querysets.txt:1921
msgid "Case-insensitive ends-with."
msgstr ""

# d5eb095bc4b947408055b5199215e4f6
#: ../../ref/models/querysets.txt:1940
msgid "range"
msgstr ""

# 95ce5761a5c949ae96422a101da1e349
#: ../../ref/models/querysets.txt:1942
msgid "Range test (inclusive)."
msgstr ""

# bbea07d73e154b7198fc319559cc68d2
#: ../../ref/models/querysets.txt:1954
msgid ""
"You can use ``range`` anywhere you can use ``BETWEEN`` in SQL — for dates, "
"numbers and even characters."
msgstr ""

# 6c923eaa5c984dff9538961974967c5a
#: ../../ref/models/querysets.txt:1960
msgid "year"
msgstr ""

# d67f1ddb7382438aabf78e4b082000be
#: ../../ref/models/querysets.txt:1962
msgid "For date/datetime fields, exact year match. Takes a four-digit year."
msgstr ""

# abf0626cb578458294c06b96a830afb6
# f2a1db1dcdd34852b3d398f34891caa4
# 2d87c6b68dd94617828137b01a974ed8
#: ../../ref/models/querysets.txt:1972 ../../ref/models/querysets.txt:1990
#: ../../ref/models/querysets.txt:2007
msgid "(The exact SQL syntax varies for each database engine.)"
msgstr ""

# c457b60918a34f319b9dc0c3bc74df66
#: ../../ref/models/querysets.txt:1977
msgid "month"
msgstr ""

# 00d25c1194284cb39b5e78099a904063
#: ../../ref/models/querysets.txt:1979
msgid ""
"For date and datetime fields, an exact month match. Takes an integer 1 "
"(January) through 12 (December)."
msgstr ""

# 263043491beb4a06bf9b692e3d3f5cbb
#: ../../ref/models/querysets.txt:1995
msgid "day"
msgstr ""

# 60169bf262994000bd1e71f879800a55
#: ../../ref/models/querysets.txt:1997
msgid "For date and datetime fields, an exact day match."
msgstr ""

# f42878ef4fd9434abac102971e84f4dc
#: ../../ref/models/querysets.txt:2009
msgid ""
"Note this will match any record with a pub_date on the third day of the "
"month, such as January 3, July 3, etc."
msgstr ""

# 61715c8d25d24277b47ca9afd68edf87
#: ../../ref/models/querysets.txt:2015
msgid "week_day"
msgstr ""

# f02fa40ac5fc491b958ff011a8bdca5a
#: ../../ref/models/querysets.txt:2017
msgid "For date and datetime fields, a 'day of the week' match."
msgstr ""

# 88197825e19a4e98a281556af47b4e3c
#: ../../ref/models/querysets.txt:2019
msgid ""
"Takes an integer value representing the day of week from 1 (Sunday) to 7 "
"(Saturday)."
msgstr ""

# 6ac2ed21dfc4490e82c1f96c5e7e4797
#: ../../ref/models/querysets.txt:2026
msgid ""
"(No equivalent SQL code fragment is included for this lookup because "
"implementation of the relevant query varies among different database "
"engines.)"
msgstr ""

# 4dd39e8121244683afa63dbf67a1ae7b
#: ../../ref/models/querysets.txt:2029
msgid ""
"Note this will match any record with a ``pub_date`` that falls on a Monday "
"(day 2 of the week), regardless of the month or year in which it occurs. "
"Week days are indexed with day 1 being Sunday and day 7 being Saturday."
msgstr ""

# 13c2464a1a9340cf9b81e7be3216e8e1
#: ../../ref/models/querysets.txt:2035
msgid ""
"When :doc:`time zone support </topics/i18n/timezones>` is enabled, Django "
"uses UTC in the database connection, which means the ``year``, ``month``, "
"``day`` and ``week_day`` lookups are performed in UTC. This is a known "
"limitation of the current implementation."
msgstr ""

# 42a1afe5b554499f9bb71cd4becc84b9
#: ../../ref/models/querysets.txt:2043
msgid "isnull"
msgstr ""

# d82ccb4d36324e5895688a9176daacf6
#: ../../ref/models/querysets.txt:2045
msgid ""
"Takes either ``True`` or ``False``, which correspond to SQL queries of ``IS "
"NULL`` and ``IS NOT NULL``, respectively."
msgstr ""

# 832543e048764573acb78fa03e1cf0a9
#: ../../ref/models/querysets.txt:2059
msgid "search"
msgstr ""

# 0171159032664dd69e5354f4bfc67391
#: ../../ref/models/querysets.txt:2061
msgid ""
"A boolean full-text search, taking advantage of full-text indexing. This is "
"like :lookup:`contains` but is significantly faster due to full-text "
"indexing."
msgstr ""

# f11367cc386a4e2897d2b57ff811b690
#: ../../ref/models/querysets.txt:2072
msgid ""
"Note this is only available in MySQL and requires direct manipulation of the "
"database to add the full-text index. By default Django uses BOOLEAN MODE for "
"full text searches. See the `MySQL documentation`_ for additional details."
msgstr ""

# 7a6b7fecdf17452098048db0e8c98813
#: ../../ref/models/querysets.txt:2082
msgid "regex"
msgstr ""

# a61b2802d23f44d39d58b5cece610423
#: ../../ref/models/querysets.txt:2084
msgid "Case-sensitive regular expression match."
msgstr ""

# de6f304baaf24bffba6192e71e84da44
#: ../../ref/models/querysets.txt:2086
msgid ""
"The regular expression syntax is that of the database backend in use. In the "
"case of SQLite, which has no built in regular expression support, this "
"feature is provided by a (Python) user-defined REGEXP function, and the "
"regular expression syntax is therefore that of Python's ``re`` module."
msgstr ""

# 59f304bd7fc04234a410afe4977e8d65
#: ../../ref/models/querysets.txt:2105
msgid ""
"Using raw strings (e.g., ``r'foo'`` instead of ``'foo'``) for passing in the "
"regular expression syntax is recommended."
msgstr ""

# 94f220d6bb3e4d678fbcac57dbbde571
#: ../../ref/models/querysets.txt:2111
msgid "iregex"
msgstr ""

# 56640e22db0046f2a718d6f8894bbcba
#: ../../ref/models/querysets.txt:2113
msgid "Case-insensitive regular expression match."
msgstr ""

# b74665d8821a45a6b98c4184f2999397
#: ../../ref/models/querysets.txt:2132
msgid "Aggregation functions"
msgstr ""

# f77dc6dbe0824a6e869bb65140960f25
#: ../../ref/models/querysets.txt:2136
msgid ""
"Django provides the following aggregation functions in the ``django.db."
"models`` module. For details on how to use these aggregate functions, see :"
"doc:`the topic guide on aggregation </topics/db/aggregation>`."
msgstr ""

# b5d35029b03342bcaab0466627d9e735
#: ../../ref/models/querysets.txt:2142
msgid "Avg"
msgstr ""

# 2e9ed0dedd9e4715b118861cbf69d546
#: ../../ref/models/querysets.txt:2146
msgid "Returns the mean value of the given field, which must be numeric."
msgstr ""

# 74b437b032ba4cf0bebad1ee07ebf5b8
#: ../../ref/models/querysets.txt:2148
msgid "Default alias: ``<field>__avg``"
msgstr ""

# 1d2463b34b0a47399b0bfc62c1ecc881
# 74f074111e3443eaa0e4d824d4f169c0
# 6fb3018c7b92431fa88caf632a7d5e7d
#: ../../ref/models/querysets.txt:2149 ../../ref/models/querysets.txt:2197
#: ../../ref/models/querysets.txt:2231
msgid "Return type: ``float``"
msgstr ""

# 79896dcd23df43b0a8513bd22c721e97
#: ../../ref/models/querysets.txt:2152
msgid "Count"
msgstr ""

# b117ece903f5481aa10dcf56e568571f
#: ../../ref/models/querysets.txt:2156
msgid ""
"Returns the number of objects that are related through the provided field."
msgstr ""

# 9e1c0c77457b471eb676c6c98420f7b3
#: ../../ref/models/querysets.txt:2158
msgid "Default alias: ``<field>__count``"
msgstr ""

# c22377ba0c254c118367b6ce8e311dc8
#: ../../ref/models/querysets.txt:2159
msgid "Return type: ``int``"
msgstr ""

# 5db726c7b1954d23a5f65894e5d4cc99
# 6e8486ee22c54e2b9dac2465bb6f4312
# 78531a0a353f49c0a102544be81dff39
#: ../../ref/models/querysets.txt:2161 ../../ref/models/querysets.txt:2199
#: ../../ref/models/querysets.txt:2233
msgid "Has one optional argument:"
msgstr ""

# 5f32e6b905c4488cb9a0e62d550dceaa
#: ../../ref/models/querysets.txt:2165
msgid ""
"If ``distinct=True``, the count will only include unique instances. This is "
"the SQL equivalent of ``COUNT(DISTINCT <field>)``. The default value is "
"``False``."
msgstr ""

# b6b8b667ed574b32aaf4db4eac78ad3a
#: ../../ref/models/querysets.txt:2170
msgid "Max"
msgstr ""

# fc6f561c8c484482bcc1da8766cb3c7b
#: ../../ref/models/querysets.txt:2174
msgid "Returns the maximum value of the given field."
msgstr ""

# 28a671b38b164fff8557cab915db95e9
#: ../../ref/models/querysets.txt:2176
msgid "Default alias: ``<field>__max``"
msgstr ""

# 70e517513b7b4994853ac0422aefde65
# 18e83de1ed5a49cd877ca23d23b1abf5
# 4d1b9083ce0547fea6bbda8ee7b811e9
#: ../../ref/models/querysets.txt:2177 ../../ref/models/querysets.txt:2187
#: ../../ref/models/querysets.txt:2221
msgid "Return type: same as input field"
msgstr ""

# 86d01bbbb40d4a48ac085df1b879f2e2
#: ../../ref/models/querysets.txt:2180
msgid "Min"
msgstr ""

# afad6f38666c4e80a9fe674d8d6546f0
#: ../../ref/models/querysets.txt:2184
msgid "Returns the minimum value of the given field."
msgstr ""

# b0feb1a3b071447a95f056de5994df75
#: ../../ref/models/querysets.txt:2186
msgid "Default alias: ``<field>__min``"
msgstr ""

# 6ef52ee58b424f47b8dd52bdda78f7e6
#: ../../ref/models/querysets.txt:2190
msgid "StdDev"
msgstr ""

# 2b860dcc0e4245b189377bd4480449ba
#: ../../ref/models/querysets.txt:2194
msgid "Returns the standard deviation of the data in the provided field."
msgstr ""

# 227a68d13af848a7940742e4f5230833
#: ../../ref/models/querysets.txt:2196
msgid "Default alias: ``<field>__stddev``"
msgstr ""

# e129bcbfa1d84215abeb16a162ac103f
#: ../../ref/models/querysets.txt:2203
msgid ""
"By default, ``StdDev`` returns the population standard deviation. However, "
"if ``sample=True``, the return value will be the sample standard deviation."
msgstr ""

# 59ed0d223cf4487eb176ae86f019698c
#: ../../ref/models/querysets.txt:2208
msgid ""
"SQLite doesn't provide ``StdDev`` out of the box. An implementation is "
"available as an extension module for SQLite. Consult the `SQlite "
"documentation`_ for instructions on obtaining and installing this extension."
msgstr ""

# 80f71d4e5ae64180b11364fc1f15352e
#: ../../ref/models/querysets.txt:2214
msgid "Sum"
msgstr ""

# 0de17a10036f4a018861c877db96b000
#: ../../ref/models/querysets.txt:2218
msgid "Computes the sum of all values of the given field."
msgstr ""

# e751ced62ee045bca9122ff2d3d0471b
#: ../../ref/models/querysets.txt:2220
msgid "Default alias: ``<field>__sum``"
msgstr ""

# 4f459576b8474c15bc60784aa0428d33
#: ../../ref/models/querysets.txt:2224
msgid "Variance"
msgstr ""

# 102d0617749940a0bfa2b3954c9121d2
#: ../../ref/models/querysets.txt:2228
msgid "Returns the variance of the data in the provided field."
msgstr ""

# a1b0cc28eca140008dab47e7ff255fae
#: ../../ref/models/querysets.txt:2230
msgid "Default alias: ``<field>__variance``"
msgstr ""

# b43e3f8d8da3415e925822ce92bcf09f
#: ../../ref/models/querysets.txt:2237
msgid ""
"By default, ``Variance`` returns the population variance. However, if "
"``sample=True``, the return value will be the sample variance."
msgstr ""

# 83d421c5819c4139806b3b7400011b35
#: ../../ref/models/querysets.txt:2242
msgid ""
"SQLite doesn't provide ``Variance`` out of the box. An implementation is "
"available as an extension module for SQLite. Consult the `SQlite "
"documentation`_ for instructions on obtaining and installing this extension."
msgstr ""

# 8f6736e469b249cabb823eade13d3907
#: ../../ref/models/relations.txt:3
msgid "Related objects reference"
msgstr ""

# f1128359334a44ee84a65c2e00781b97
#: ../../ref/models/relations.txt:9
msgid ""
"A \"related manager\" is a manager used in a one-to-many or many-to-many "
"related context. This happens in two cases:"
msgstr ""

# 5df37adccbed44e4a2e61b51eb2f8435
#: ../../ref/models/relations.txt:12
msgid ""
"The \"other side\" of a :class:`~django.db.models.ForeignKey` relation. That "
"is::"
msgstr ""

# fbd0e86425af4e73b279ec13fe5b1848
#: ../../ref/models/relations.txt:21
msgid ""
"In the above example, the methods below will be available on the manager "
"``reporter.article_set``."
msgstr ""

# 7f7b6f1228934577864a49a94dbe546b
#: ../../ref/models/relations.txt:24
msgid "Both sides of a :class:`~django.db.models.ManyToManyField` relation::"
msgstr ""

# ca19c3f48cfc4f3fb84949bd9a6633e1
#: ../../ref/models/relations.txt:32
msgid ""
"In this example, the methods below will be available both on ``topping."
"pizza_set`` and on ``pizza.toppings``."
msgstr ""

# a5689d37fa0943a98c71eb10c249b22e
#: ../../ref/models/relations.txt:35
msgid "These related managers have some extra methods:"
msgstr ""

# b9f6acbb29204732ad8535383eac7166
#: ../../ref/models/relations.txt:39
msgid "Adds the specified model objects to the related object set."
msgstr ""

# d168e7b8df7b4a9a848f4ccae8bdece0
#: ../../ref/models/relations.txt:49
msgid ""
"Creates a new object, saves it and puts it in the related object set. "
"Returns the newly created object::"
msgstr ""

# ec444304d440405a97f7565570c53254
#: ../../ref/models/relations.txt:61
msgid "This is equivalent to (but much simpler than)::"
msgstr ""

# cf2bc74d736d45b68f0af03e528e8efa
#: ../../ref/models/relations.txt:72
msgid ""
"Note that there's no need to specify the keyword argument of the model that "
"defines the relationship. In the above example, we don't pass the parameter "
"``blog`` to ``create()``. Django figures out that the new ``Entry`` object's "
"``blog`` field should be set to ``b``."
msgstr ""

# 6611c987ccf948d78ef5f8226d248c06
#: ../../ref/models/relations.txt:79
msgid "Removes the specified model objects from the related object set::"
msgstr ""

# 6f811d2b974e4e8bb13a27e56a526d14
#: ../../ref/models/relations.txt:85
msgid ""
"In order to prevent database inconsistency, this method only exists on :"
"class:`~django.db.models.ForeignKey` objects where ``null=True``. If the "
"related field can't be set to ``None`` (``NULL``), then an object can't be "
"removed from a relation without being added to another. In the above "
"example, removing ``e`` from ``b.entry_set()`` is equivalent to doing ``e."
"blog = None``, and because the ``blog`` :class:`~django.db.models."
"ForeignKey` doesn't have ``null=True``, this is invalid."
msgstr ""

# 66538b44b3fd4ad5ae126eb73931e14d
#: ../../ref/models/relations.txt:96
msgid "Removes all objects from the related object set::"
msgstr ""

# 79f00f25fa2444aa8a5e1d4c86aec388
#: ../../ref/models/relations.txt:101
msgid ""
"Note this doesn't delete the related objects -- it just disassociates them."
msgstr ""

# b87c8c4caeb14f248a0f54f9e77a3fbf
#: ../../ref/models/relations.txt:104
msgid ""
"Just like ``remove()``, ``clear()`` is only available on :class:`~django.db."
"models.ForeignKey`\\s where ``null=True``."
msgstr ""

# b6eba3a16979443fb7bd89bec4d09824
#: ../../ref/request-response.txt:3
msgid "Request and response objects"
msgstr ""

# 2201cc8efc204fcbbb9b133186fc6d3a
#: ../../ref/request-response.txt:9
msgid "Quick overview"
msgstr ""

# 3bf03de476db429a8f0e58bc9b70c30c
#: ../../ref/request-response.txt:11
msgid ""
"Django uses request and response objects to pass state through the system."
msgstr ""

# f2d8a682b4b141b39b96a92d44fbae82
#: ../../ref/request-response.txt:13
msgid ""
"When a page is requested, Django creates an :class:`HttpRequest` object that "
"contains metadata about the request. Then Django loads the appropriate view, "
"passing the :class:`HttpRequest` as the first argument to the view function. "
"Each view is responsible for returning an :class:`HttpResponse` object."
msgstr ""

# 218fd48a3ac44182a34ff91461abb361
#: ../../ref/request-response.txt:18
msgid ""
"This document explains the APIs for :class:`HttpRequest` and :class:"
"`HttpResponse` objects."
msgstr ""

# 4d5a07ee87b54a3ba98b7ad1b5c03873
#: ../../ref/request-response.txt:22
msgid "HttpRequest objects"
msgstr ""

# 9f5e2dd7ef214c84ace5969042bbb6b7
# 2ea32e343c5246009d1611e3d5dd3041
# b7a988db65964eca9b04d79ce6f2ce25
# 82d9334d953f48f78cd41e9e837ef448
#: ../../ref/request-response.txt:29 ../../ref/request-response.txt:332
#: ../../ref/request-response.txt:596 ../../ref/template-response.txt:32
msgid "Attributes"
msgstr ""

# c9ef2024c0fb47428a9532d56cefc7e7
#: ../../ref/request-response.txt:31
msgid "All attributes except ``session`` should be considered read-only."
msgstr ""

# 01ea32dd1d614d4e881dce7877eb21e4
#: ../../ref/request-response.txt:37
msgid ""
"Before Django 1.4, ``HttpRequest.body`` was named ``HttpRequest."
"raw_post_data``."
msgstr ""

# caeea0c6753c4a799ec80602da3bb46d
#: ../../ref/request-response.txt:40
msgid ""
"The raw HTTP request body as a byte string. This is useful for processing "
"data in different ways than conventional HTML forms: binary images, XML "
"payload etc. For processing conventional form data, use ``HttpRequest.POST``."
msgstr ""

# 5119e40d0423421a81aca107890380a8
#: ../../ref/request-response.txt:46
msgid ""
"You can also read from an HttpRequest using a file-like interface. See :meth:"
"`HttpRequest.read()`."
msgstr ""

# 728c65454c3a4d35bff43a3b78f1c8b4
#: ../../ref/request-response.txt:51
msgid ""
"A string representing the full path to the requested page, not including the "
"domain."
msgstr ""

# 6ea0c0f785594c9f80215d558662394e
#: ../../ref/request-response.txt:54
msgid "Example: ``\"/music/bands/the_beatles/\"``"
msgstr ""

# 988a9e740091455787a3563af9ef7265
#: ../../ref/request-response.txt:58
msgid ""
"Under some Web server configurations, the portion of the URL after the host "
"name is split up into a script prefix portion and a path info portion (this "
"happens, for example, when using the ``django.root`` option with the :doc:"
"`modpython handler from Apache </howto/deployment/modpython>`). The "
"``path_info`` attribute always contains the path info portion of the path, "
"no matter what Web server is being used. Using this instead of attr:"
"`~HttpRequest.path` can make your code much easier to move between test and "
"deployment servers."
msgstr ""

# 3375cde3da894a439e34cf20d8b4b6ed
#: ../../ref/request-response.txt:67
msgid ""
"For example, if the ``django.root`` for your application is set to ``\"/minfo"
"\"``, then ``path`` might be ``\"/minfo/music/bands/the_beatles/\"`` and "
"``path_info`` would be ``\"/music/bands/the_beatles/\"``."
msgstr ""

# 1cb43bb9db514119b001ff0b6edb8201
#: ../../ref/request-response.txt:73
msgid ""
"A string representing the HTTP method used in the request. This is "
"guaranteed to be uppercase. Example::"
msgstr ""

# 044036d2a9d0485397afe9baad6a7b91
#: ../../ref/request-response.txt:83
msgid ""
"A string representing the current encoding used to decode form submission "
"data (or ``None``, which means the :setting:`DEFAULT_CHARSET` setting is "
"used). You can write to this attribute to change the encoding used when "
"accessing the form data. Any subsequent attribute accesses (such as reading "
"from ``GET`` or ``POST``) will use the new ``encoding`` value.  Useful if "
"you know the form data is not in the :setting:`DEFAULT_CHARSET` encoding."
msgstr ""

# c7ba233df6f04fe589a40e2fd842b5ca
#: ../../ref/request-response.txt:92
msgid ""
"A dictionary-like object containing all given HTTP GET parameters. See the :"
"class:`QueryDict` documentation below."
msgstr ""

# f1f4b0d8628840e3a2fbb11d0a4d6e69
#: ../../ref/request-response.txt:97
msgid ""
"A dictionary-like object containing all given HTTP POST parameters. See the :"
"class:`QueryDict` documentation below."
msgstr ""

# 18315cf7931d47b08ebd4873961cfe60
#: ../../ref/request-response.txt:100
msgid ""
"It's possible that a request can come in via POST with an empty ``POST`` "
"dictionary -- if, say, a form is requested via the POST HTTP method but does "
"not include form data. Therefore, you shouldn't use ``if request.POST`` to "
"check for use of the POST method; instead, use ``if request.method == \"POST"
"\"`` (see above)."
msgstr ""

# 8a46ebdd068f45e7af56de15554d3c38
#: ../../ref/request-response.txt:106
msgid ""
"Note: ``POST`` does *not* include file-upload information. See ``FILES``."
msgstr ""

# cdbb00116ce34c2da5f829b19924c079
#: ../../ref/request-response.txt:110
msgid ""
"For convenience, a dictionary-like object that searches ``POST`` first, then "
"``GET``. Inspired by PHP's ``$_REQUEST``."
msgstr ""

# 7c2060be457a4e2789685ccd4dc02661
#: ../../ref/request-response.txt:113
msgid ""
"For example, if ``GET = {\"name\": \"john\"}`` and ``POST = {\"age\": '34'}"
"``, ``REQUEST[\"name\"]`` would be ``\"john\"``, and ``REQUEST[\"age\"]`` "
"would be ``\"34\"``."
msgstr ""

# d84bde709956448490fa3ae3a9fcd35b
#: ../../ref/request-response.txt:117
msgid ""
"It's strongly suggested that you use ``GET`` and ``POST`` instead of "
"``REQUEST``, because the former are more explicit."
msgstr ""

# 0e0b4902f1484489ae660ec08c0fa047
#: ../../ref/request-response.txt:122
msgid ""
"A standard Python dictionary containing all cookies. Keys and values are "
"strings."
msgstr ""

# ecabe0db729a4b67a0496914f4b07937
#: ../../ref/request-response.txt:127
msgid ""
"A dictionary-like object containing all uploaded files. Each key in "
"``FILES`` is the ``name`` from the ``<input type=\"file\" name=\"\" />``. "
"Each value in ``FILES`` is an :class:`UploadedFile` as described below."
msgstr ""

# 820805b858a6428da433a5101ea0c84f
#: ../../ref/request-response.txt:131
msgid "See :doc:`/topics/files` for more information."
msgstr ""

# b449926c04174249bc8c7ed63cd6d8dd
#: ../../ref/request-response.txt:133
msgid ""
"Note that ``FILES`` will only contain data if the request method was POST "
"and the ``<form>`` that posted to the request had ``enctype=\"multipart/form-"
"data\"``. Otherwise, ``FILES`` will be a blank dictionary-like object."
msgstr ""

# 71441bd098bd43b182f8b2d2628c08da
#: ../../ref/request-response.txt:140
msgid ""
"A standard Python dictionary containing all available HTTP headers. "
"Available headers depend on the client and server, but here are some "
"examples:"
msgstr ""

# 8a4cf151d0b24f56a83ffd5e5c127e58
#: ../../ref/request-response.txt:144
msgid "``CONTENT_LENGTH`` -- the length of the request body (as a string)."
msgstr ""

# 8dd59e5f593b4e9e883482278a96bb5e
#: ../../ref/request-response.txt:145
msgid "``CONTENT_TYPE`` -- the MIME type of the request body."
msgstr ""

# 70142cec9e614484a13b029395de6451
#: ../../ref/request-response.txt:146
msgid "``HTTP_ACCEPT_ENCODING`` -- Acceptable encodings for the response."
msgstr ""

# 2e80b4aa7b9143f1ae5e0ea319e93a84
#: ../../ref/request-response.txt:147
msgid "``HTTP_ACCEPT_LANGUAGE`` -- Acceptable languages for the response."
msgstr ""

# beb4bda6b9dd4af091b8ff9bf6941c3d
#: ../../ref/request-response.txt:148
msgid "``HTTP_HOST`` -- The HTTP Host header sent by the client."
msgstr ""

# 054ec61db008489f8a5ca88507b346ac
#: ../../ref/request-response.txt:149
msgid "``HTTP_REFERER`` -- The referring page, if any."
msgstr ""

# 85615525489c4254ae7ade0dbfcf3a66
#: ../../ref/request-response.txt:150
msgid "``HTTP_USER_AGENT`` -- The client's user-agent string."
msgstr ""

# c4946d6bdb6b46df80c1192d75fb90e2
#: ../../ref/request-response.txt:151
msgid "``QUERY_STRING`` -- The query string, as a single (unparsed) string."
msgstr ""

# 598e163330434c1b975b3affe65e8a10
#: ../../ref/request-response.txt:152
msgid "``REMOTE_ADDR`` -- The IP address of the client."
msgstr ""

# 48060e2b9b5541bb9a0c5f07336c2119
#: ../../ref/request-response.txt:153
msgid "``REMOTE_HOST`` -- The hostname of the client."
msgstr ""

# cef06550426f4ba09b57efe2702f8631
#: ../../ref/request-response.txt:154
msgid "``REMOTE_USER`` -- The user authenticated by the Web server, if any."
msgstr ""

# 99769350d94e43d1a5c08536d91c7cdb
#: ../../ref/request-response.txt:155
msgid "``REQUEST_METHOD`` -- A string such as ``\"GET\"`` or ``\"POST\"``."
msgstr ""

# 0e831cab641247739f52f8384bda68bc
#: ../../ref/request-response.txt:156
msgid "``SERVER_NAME`` -- The hostname of the server."
msgstr ""

# 3deaf17e39174d6c9991dd1cecea331c
#: ../../ref/request-response.txt:157
msgid "``SERVER_PORT`` -- The port of the server (as a string)."
msgstr ""

# 98ce641e7f2444b6a3ea697d69c4e60d
#: ../../ref/request-response.txt:159
msgid ""
"With the exception of ``CONTENT_LENGTH`` and ``CONTENT_TYPE``, as given "
"above, any HTTP headers in the request are converted to ``META`` keys by "
"converting all characters to uppercase, replacing any hyphens with "
"underscores and adding an ``HTTP_`` prefix to the name. So, for example, a "
"header called ``X-Bender`` would be mapped to the ``META`` key "
"``HTTP_X_BENDER``."
msgstr ""

# 6371c0078fae4e419aa536fd598926c4
#: ../../ref/request-response.txt:168
msgid ""
"A ``django.contrib.auth.models.User`` object representing the currently "
"logged-in user. If the user isn't currently logged in, ``user`` will be set "
"to an instance of ``django.contrib.auth.models.AnonymousUser``. You can tell "
"them apart with ``is_authenticated()``, like so::"
msgstr ""

# eb5fb423b7eb4a6e8f9175183eb0af38
#: ../../ref/request-response.txt:178
msgid ""
"``user`` is only available if your Django installation has the "
"``AuthenticationMiddleware`` activated. For more, see :doc:`/topics/auth`."
msgstr ""

# d9398c21518747a996f3b1765af7e69c
#: ../../ref/request-response.txt:184
msgid ""
"A readable-and-writable, dictionary-like object that represents the current "
"session. This is only available if your Django installation has session "
"support activated. See the :doc:`session documentation </topics/http/"
"sessions>` for full details."
msgstr ""

# 761324127548490ca984448f119d3f40
#: ../../ref/request-response.txt:191
msgid ""
"Not defined by Django itself, but will be read if other code (e.g., a custom "
"middleware class) sets it. When present, this will be used as the root "
"URLconf for the current request, overriding the :setting:`ROOT_URLCONF` "
"setting. See :ref:`how-django-processes-a-request` for details."
msgstr ""

# 63b55217f99e40b8aaa577f592e92bb4
# 11f2a93f7bc54fa2a65802e8bc290ead
# 16ec17305c144479874cc54c406914dc
# b1ceb003ead849d79ea5f066d517d5cd
# a608c515d43a4e15a4130c5dfed3ebc6
# 3989590928734870ae7b35c958f65bbd
#: ../../ref/request-response.txt:197 ../../ref/request-response.txt:343
#: ../../ref/request-response.txt:371 ../../ref/request-response.txt:608
#: ../../ref/template-response.txt:59 ../../ref/template-response.txt:148
msgid "Methods"
msgstr ""

# cd8045d805f5426ca106a7a3b7d93a32
#: ../../ref/request-response.txt:201
msgid ""
"Returns the originating host of the request using information from the "
"``HTTP_X_FORWARDED_HOST`` (if :setting:`USE_X_FORWARDED_HOST` is enabled) "
"and ``HTTP_HOST`` headers, in that order. If they don't provide a value, the "
"method uses a combination of ``SERVER_NAME`` and ``SERVER_PORT`` as detailed "
"in :pep:`3333`."
msgstr ""

# 2014d814362341fa86f67d93fba78a64
#: ../../ref/request-response.txt:207
msgid "Example: ``\"127.0.0.1:8000\"``"
msgstr ""

# 52fdab2e8b414f788b8045361d6a4914
#: ../../ref/request-response.txt:209
msgid ""
"The :meth:`~HttpRequest.get_host()` method fails when the host is behind "
"multiple proxies. One solution is to use middleware to rewrite the proxy "
"headers, as in the following example::"
msgstr ""

# a87a08c1ab734ec69b2b3113c200b507
#: ../../ref/request-response.txt:231
msgid ""
"This middleware should be positioned before any other middleware that relies "
"on the value of :meth:`~HttpRequest.get_host()` -- for instance, :class:"
"`~django.middleware.common.CommonMiddleware` or :class:`~django.middleware."
"csrf.CsrfViewMiddleware`."
msgstr ""

# 8167555c96004d0cb49ac79d1783b5aa
#: ../../ref/request-response.txt:238
msgid "Returns the ``path``, plus an appended query string, if applicable."
msgstr ""

# 8f33ebbbcfac46caaf747013bdba637f
#: ../../ref/request-response.txt:240
msgid "Example: ``\"/music/bands/the_beatles/?print=true\"``"
msgstr ""

# 2c05940bef2d4ac3b4f9f0aa83234279
#: ../../ref/request-response.txt:244
msgid ""
"Returns the absolute URI form of ``location``. If no location is provided, "
"the location will be set to ``request.get_full_path()``."
msgstr ""

# 6dd1938917e04eedbfa9b055b023253e
#: ../../ref/request-response.txt:247
msgid ""
"If the location is already an absolute URI, it will not be altered. "
"Otherwise the absolute URI is built using the server variables available in "
"this request."
msgstr ""

# c4ddb66108754a00a55ae080d7fdbb85
#: ../../ref/request-response.txt:251
msgid "Example: ``\"http://example.com/music/bands/the_beatles/?print=true\"``"
msgstr ""

# 10f4b4c973ac46de962fc8ea0b632b2d
#: ../../ref/request-response.txt:257
msgid ""
"Returns a cookie value for a signed cookie, or raises a :class:`~django.core."
"signing.BadSignature` exception if the signature is no longer valid. If you "
"provide the ``default`` argument the exception will be suppressed and that "
"default value will be returned instead."
msgstr ""

# ed888aa5ad0d49388359f52a09cd8ce1
#: ../../ref/request-response.txt:262
msgid ""
"The optional ``salt`` argument can be used to provide extra protection "
"against brute force attacks on your secret key. If supplied, the ``max_age`` "
"argument will be checked against the signed timestamp attached to the cookie "
"value to ensure the cookie is not older than ``max_age`` seconds."
msgstr ""

# d226e870933c450395fcf47b99a33185
#: ../../ref/request-response.txt:288
msgid ""
"See :doc:`cryptographic signing </topics/signing>` for more information."
msgstr ""

# 016c23feb255428c9a8d1e749b7dc173
#: ../../ref/request-response.txt:292
msgid ""
"Returns ``True`` if the request is secure; that is, if it was made with "
"HTTPS."
msgstr ""

# f36cfe90155042cc848c7ff6ae74df45
#: ../../ref/request-response.txt:297
msgid ""
"Returns ``True`` if the request was made via an ``XMLHttpRequest``, by "
"checking the ``HTTP_X_REQUESTED_WITH`` header for the string "
"``'XMLHttpRequest'``. Most modern JavaScript libraries send this header. If "
"you write your own XMLHttpRequest call (on the browser side), you'll have to "
"set this header manually if you want ``is_ajax()`` to work."
msgstr ""

# c1ba3c59a7d4445b981db7912ca9f08e
#: ../../ref/request-response.txt:311
msgid ""
"Methods implementing a file-like interface for reading from an HttpRequest "
"instance. This makes it possible to consume an incoming request in a "
"streaming fashion. A common use-case would be to process a big XML payload "
"with iterative parser without constructing a whole XML tree in memory."
msgstr ""

# 3ec3b415f79748d099932965b27f619e
#: ../../ref/request-response.txt:317
msgid ""
"Given this standard interface, an HttpRequest instance can be passed "
"directly to an XML parser such as ElementTree::"
msgstr ""

# 718363f7f7644848af3f5fdfff981136
#: ../../ref/request-response.txt:326
msgid "UploadedFile objects"
msgstr ""

# 82ae1c58419d4692a2576f1b9344e862
#: ../../ref/request-response.txt:336
msgid "The name of the uploaded file."
msgstr ""

# 06b6c76766414bcaa7ade826144df435
#: ../../ref/request-response.txt:340
msgid "The size, in bytes, of the uploaded file."
msgstr ""

# bce39609bd40438e8ff9a1d09d2cc5f2
#: ../../ref/request-response.txt:347
msgid "Returns a generator that yields sequential chunks of data."
msgstr ""

# 6f8efecfafb742acb489ba0fcc641b9d
#: ../../ref/request-response.txt:351
msgid "Read a number of bytes from the file."
msgstr ""

# 38a61dedfb0f4c4bbe3e64e4fbd0fcf2
#: ../../ref/request-response.txt:356
msgid "QueryDict objects"
msgstr ""

# 6329e72928744560b9686988fde918df
#: ../../ref/request-response.txt:360
msgid ""
"In an :class:`HttpRequest` object, the ``GET`` and ``POST`` attributes are "
"instances of ``django.http.QueryDict``. :class:`QueryDict` is a dictionary-"
"like class customized to deal with multiple values for the same key. This is "
"necessary because some HTML form elements, notably ``<select multiple="
"\"multiple\">``, pass multiple values for the same key."
msgstr ""

# 7f82cd9a5bdd4a0d924c4b521cefc1e0
#: ../../ref/request-response.txt:366
msgid ""
"``QueryDict`` instances are immutable, unless you create a ``copy()`` of "
"them. That means you can't change attributes of ``request.POST`` and "
"``request.GET`` directly."
msgstr ""

# f1fdf262854147a8b25c601a819b7b3e
#: ../../ref/request-response.txt:373
msgid ""
":class:`QueryDict` implements all the standard dictionary methods, because "
"it's a subclass of dictionary. Exceptions are outlined here:"
msgstr ""

# c25ac4487af44184b3219a887a43f02d
#: ../../ref/request-response.txt:378
msgid ""
"Returns the value for the given key. If the key has more than one value, "
"``__getitem__()`` returns the last value. Raises ``django.utils."
"datastructures.MultiValueDictKeyError`` if the key does not exist. (This is "
"a subclass of Python's standard ``KeyError``, so you can stick to catching "
"``KeyError``.)"
msgstr ""

# dcaf152ca8934252a5b34506bf06bb52
#: ../../ref/request-response.txt:386
msgid ""
"Sets the given key to ``[value]`` (a Python list whose single element is "
"``value``). Note that this, as other dictionary functions that have side "
"effects, can only be called on a mutable ``QueryDict`` (one that was created "
"via ``copy()``)."
msgstr ""

# 61faed48e41942799149d6ee81cc346d
#: ../../ref/request-response.txt:393
msgid ""
"Returns ``True`` if the given key is set. This lets you do, e.g., ``if \"foo"
"\" in request.GET``."
msgstr ""

# f9a857986d5d41348c4ad576c101a94a
#: ../../ref/request-response.txt:398
msgid ""
"Uses the same logic as ``__getitem__()`` above, with a hook for returning a "
"default value if the key doesn't exist."
msgstr ""

# 8cb444a0248a4085b1736a81c3c1eb2b
#: ../../ref/request-response.txt:403
msgid ""
"Just like the standard dictionary ``setdefault()`` method, except it uses "
"``__setitem__()`` internally."
msgstr ""

# 20f879fc615445c98a23dde3f7022656
#: ../../ref/request-response.txt:408
msgid ""
"Takes either a ``QueryDict`` or standard dictionary. Just like the standard "
"dictionary ``update()`` method, except it *appends* to the current "
"dictionary items rather than replacing them. For example::"
msgstr ""

# ecc9c199238640f7890c6d9a89fb5e95
#: ../../ref/request-response.txt:422
msgid ""
"Just like the standard dictionary ``items()`` method, except this uses the "
"same last-value logic as ``__getitem__()``. For example::"
msgstr ""

# 0c366151319445efbd94a1eeb32c4813
#: ../../ref/request-response.txt:431
msgid ""
"Just like the standard dictionary ``iteritems()`` method. Like :meth:"
"`QueryDict.items()` this uses the same last-value logic as :meth:`QueryDict."
"__getitem__()`."
msgstr ""

# 62414056a2734153bc953888eccce57b
#: ../../ref/request-response.txt:437
msgid ""
"Like :meth:`QueryDict.iteritems()` except it includes all values, as a list, "
"for each member of the dictionary."
msgstr ""

# 30a979f0c4d14e5cb3809175933b9a61
#: ../../ref/request-response.txt:442
msgid ""
"Just like the standard dictionary ``values()`` method, except this uses the "
"same last-value logic as ``__getitem__()``. For example::"
msgstr ""

# 44c1f8ee679c47d6bb75ea6c472c24e1
#: ../../ref/request-response.txt:451
msgid "Just like :meth:`QueryDict.values()`, except an iterator."
msgstr ""

# 49368e2466a0404aa70a4cab621182ea
#: ../../ref/request-response.txt:453
msgid "In addition, ``QueryDict`` has the following methods:"
msgstr ""

# 1f847de04fa44b2aad0841be8b4b8bc1
#: ../../ref/request-response.txt:457
msgid ""
"Returns a copy of the object, using ``copy.deepcopy()`` from the Python "
"standard library. The copy will be mutable -- that is, you can change its "
"values."
msgstr ""

# 3ad81a45f34044199b30dfbc18296114
#: ../../ref/request-response.txt:463
msgid ""
"Returns the data with the requested key, as a Python list. Returns an empty "
"list if the key doesn't exist and no default value was provided. It's "
"guaranteed to return a list of some sort unless the default value was no "
"list."
msgstr ""

# 6787373e2ce04b8a9e7527b5830d4916
#: ../../ref/request-response.txt:473
msgid "Sets the given key to ``list_`` (unlike ``__setitem__()``)."
msgstr ""

# 1ef826bcdc1840f2bcc16ebb64a61942
#: ../../ref/request-response.txt:477
msgid "Appends an item to the internal list associated with key."
msgstr ""

# be0e9bcab8b947efaaa44c069aa5e6ec
#: ../../ref/request-response.txt:481
msgid ""
"Just like ``setdefault``, except it takes a list of values instead of a "
"single value."
msgstr ""

# bd584a75756741468bb601c426047e22
#: ../../ref/request-response.txt:486
msgid ""
"Like :meth:`items()`, except it includes all values, as a list, for each "
"member of the dictionary. For example::"
msgstr ""

# f898142b62464e839bc40523f5077121
#: ../../ref/request-response.txt:497
msgid ""
"Returns ``dict`` representation of ``QueryDict``. For every (key, list) pair "
"in ``QueryDict``, ``dict`` will have (key, item), where item is one element "
"of the list, using same logic as :meth:`QueryDict.__getitem__()`::"
msgstr ""

# 945c068888cd4a37ad7bae2341c2260d
#: ../../ref/request-response.txt:507
msgid "Returns a string of the data in query-string format. Example::"
msgstr ""

# fe9401d9b75a400e9b441097a9e89f4b
#: ../../ref/request-response.txt:516
msgid ""
"Optionally, urlencode can be passed characters which do not require "
"encoding. For example::"
msgstr ""

# 7df22384b69b41d1adc73a2ca281bbbc
#: ../../ref/request-response.txt:525
msgid "HttpResponse objects"
msgstr ""

# 077bbbd1030f4a31b386f3ca0d34d167
#: ../../ref/request-response.txt:529
msgid ""
"In contrast to :class:`HttpRequest` objects, which are created automatically "
"by Django, :class:`HttpResponse` objects are your responsibility. Each view "
"you write is responsible for instantiating, populating and returning an :"
"class:`HttpResponse`."
msgstr ""

# cc8885e716a049d3b38ca7f78e38507b
#: ../../ref/request-response.txt:534
msgid "The :class:`HttpResponse` class lives in the :mod:`django.http` module."
msgstr ""

# a1101b39551a423788f154c10458e2b4
#: ../../ref/request-response.txt:540
msgid "Passing strings"
msgstr ""

# c83b6fc12bc24ba7a5e00e407c49479b
#: ../../ref/request-response.txt:542
msgid ""
"Typical usage is to pass the contents of the page, as a string, to the :"
"class:`HttpResponse` constructor::"
msgstr ""

# eed8b4c8efb8433a9bbed28d7a3dd5ee
#: ../../ref/request-response.txt:549
msgid ""
"But if you want to add content incrementally, you can use ``response`` as a "
"file-like object::"
msgstr ""

# c3eef2f3258943758fa2f4a36bcc4c6f
#: ../../ref/request-response.txt:557
msgid "Passing iterators"
msgstr ""

# 6e79e31e1309448b847fa60a12e63ec9
#: ../../ref/request-response.txt:559
msgid ""
"Finally, you can pass ``HttpResponse`` an iterator rather than passing it "
"hard-coded strings. If you use this technique, follow these guidelines:"
msgstr ""

# aab2640f2aec4ed18fd1ad45cc976394
#: ../../ref/request-response.txt:562
msgid "The iterator should return strings."
msgstr ""

# baf825932dd743eea1150bb81ad12260
#: ../../ref/request-response.txt:563
msgid ""
"If an :class:`HttpResponse` has been initialized with an iterator as its "
"content, you can't use the :class:`HttpResponse` instance as a file-like "
"object. Doing so will raise ``Exception``."
msgstr ""

# 78dc970222fb4cbba2165028d0c5b515
#: ../../ref/request-response.txt:568
msgid "Setting headers"
msgstr ""

# f1d297e6ee014b5a8a6f2a3d75544939
#: ../../ref/request-response.txt:570
msgid ""
"To set or remove a header in your response, treat it like a dictionary::"
msgstr ""

# 75de2004506746818ddcba5503721889
#: ../../ref/request-response.txt:576
msgid ""
"Note that unlike a dictionary, ``del`` doesn't raise ``KeyError`` if the "
"header doesn't exist."
msgstr ""

# 99459d203f2d41e2b75fad5d7e3f9a93
#: ../../ref/request-response.txt:579
msgid ""
"HTTP headers cannot contain newlines. An attempt to set a header containing "
"a newline character (CR or LF) will raise ``BadHeaderError``"
msgstr ""

# f64782a35b3b4b5786e6fa197a50cb01
#: ../../ref/request-response.txt:583
msgid "Telling the browser to treat the response as a file attachment"
msgstr ""

# b5ab8d2824b240c99fce93dc85aebbbf
#: ../../ref/request-response.txt:585
msgid ""
"To tell the browser to treat the response as a file attachment, use the "
"``content_type`` argument and set the ``Content-Disposition`` header. For "
"example, this is how you might return a Microsoft Excel spreadsheet::"
msgstr ""

# 1b618c3ecb8c43838eec1c82617a7abf
#: ../../ref/request-response.txt:592
msgid ""
"There's nothing Django-specific about the ``Content-Disposition`` header, "
"but it's easy to forget the syntax, so we've included it here."
msgstr ""

# 87fa7921540b4033858f4e1bbcda2db0
#: ../../ref/request-response.txt:600
msgid ""
"A string representing the content, encoded from a Unicode object if "
"necessary."
msgstr ""

# 028e89ad9c33494c96bd43b1786978d7
#: ../../ref/request-response.txt:605
msgid "The `HTTP Status code`_ for the response."
msgstr ""

# a290077e3e154228b51696a08cbbe740
#: ../../ref/request-response.txt:612
msgid ""
"Instantiates an ``HttpResponse`` object with the given page content (a "
"string) and MIME type. The :setting:`DEFAULT_CONTENT_TYPE` is ``'text/"
"html'``."
msgstr ""

# b04c2b16aec84269b424353fe54f4843
#: ../../ref/request-response.txt:616
msgid ""
"``content`` should be an iterator or a string. If it's an iterator, it "
"should return strings, and those strings will be joined together to form the "
"content of the response. If it is not an iterator or a string, it will be "
"converted to a string when accessed."
msgstr ""

# 255ef99887494a3a8858eb26dfc09bc8
#: ../../ref/request-response.txt:622
msgid "``status`` is the `HTTP Status code`_ for the response."
msgstr ""

# 8c6893540e9b473ca0e039351543ec10
#: ../../ref/request-response.txt:624
msgid ""
"``content_type`` is an alias for ``mimetype``. Historically, this parameter "
"was only called ``mimetype``, but since this is actually the value included "
"in the HTTP ``Content-Type`` header, it can also include the character set "
"encoding, which makes it more than just a MIME type specification. If "
"``mimetype`` is specified (not ``None``), that value is used. Otherwise, "
"``content_type`` is used. If neither is given, the :setting:"
"`DEFAULT_CONTENT_TYPE` setting is used."
msgstr ""

# e9dc17da920f417cadf9479954b3ed69
#: ../../ref/request-response.txt:634
msgid ""
"Sets the given header name to the given value. Both ``header`` and ``value`` "
"should be strings."
msgstr ""

# b8b6d4191a18460097c0c27a6c143ba3
#: ../../ref/request-response.txt:639
msgid ""
"Deletes the header with the given name. Fails silently if the header doesn't "
"exist. Case-insensitive."
msgstr ""

# fd0135b9cf9e4d0a8df0c4c2d26f0efe
#: ../../ref/request-response.txt:644
msgid "Returns the value for the given header name. Case-insensitive."
msgstr ""

# cf00374d475249cfade138012521596c
#: ../../ref/request-response.txt:648
msgid ""
"Returns ``True`` or ``False`` based on a case-insensitive check for a header "
"with the given name."
msgstr ""

# a1395a7c717a4400a3f42b554c96ae67
#: ../../ref/request-response.txt:655
msgid ""
"The possibility of specifying a ``datetime.datetime`` object in ``expires``, "
"and the auto-calculation of ``max_age`` in such case was added. The "
"``httponly`` argument was also added."
msgstr ""

# 1ffcdfa66ed643f9aa151a3809f7a1ed
#: ../../ref/request-response.txt:661
msgid "The default value for httponly was changed from ``False`` to ``True``."
msgstr ""

# b65f2fec51f14b1997e20343716977b0
#: ../../ref/request-response.txt:663
msgid ""
"Sets a cookie. The parameters are the same as in the :class:`Cookie.Morsel` "
"object in the Python standard library."
msgstr ""

# 33dcc8a8afa34bdf80f3b79c9dc14d75
#: ../../ref/request-response.txt:666
msgid ""
"``max_age`` should be a number of seconds, or ``None`` (default) if the "
"cookie should last only as long as the client's browser session. If "
"``expires`` is not specified, it will be calculated."
msgstr ""

# 9cbba6766561450593fed35e29e04e88
#: ../../ref/request-response.txt:669
msgid ""
"``expires`` should either be a string in the format ``\"Wdy, DD-Mon-YY HH:MM:"
"SS GMT\"`` or a ``datetime.datetime`` object in UTC. If ``expires`` is a "
"``datetime`` object, the ``max_age`` will be calculated."
msgstr ""

# ae116836acb14ea2868f3093c046c84f
#: ../../ref/request-response.txt:673
msgid ""
"Use ``domain`` if you want to set a cross-domain cookie. For example, "
"``domain=\".lawrence.com\"`` will set a cookie that is readable by the "
"domains www.lawrence.com, blogs.lawrence.com and calendars.lawrence.com. "
"Otherwise, a cookie will only be readable by the domain that set it."
msgstr ""

# e231f8626b4e4bfea12a95800f0f32b2
#: ../../ref/request-response.txt:678
msgid ""
"Use ``httponly=True`` if you want to prevent client-side JavaScript from "
"having access to the cookie."
msgstr ""

# 33bdd40fb9e64aee9be16194b5a4dbab
# f493213def054d26ab120da571153927
#: ../../ref/request-response.txt:681 ../../ref/settings.txt:1720
msgid ""
"HTTPOnly_ is a flag included in a Set-Cookie HTTP response header. It is not "
"part of the :rfc:`2109` standard for cookies, and it isn't honored "
"consistently by all browsers. However, when it is honored, it can be a "
"useful way to mitigate the risk of client side script accessing the "
"protected cookie data."
msgstr ""

# 2787672021e54fa9bc87bafd7793b444
#: ../../ref/request-response.txt:694
msgid ""
"Like :meth:`~HttpResponse.set_cookie()`, but :doc:`cryptographic signing </"
"topics/signing>` the cookie before setting it. Use in conjunction with :meth:"
"`HttpRequest.get_signed_cookie`. You can use the optional ``salt`` argument "
"for added key strength, but you will need to remember to pass it to the "
"corresponding :meth:`HttpRequest.get_signed_cookie` call."
msgstr ""

# 66d86fd87bab43e4b15e957d37a645b2
#: ../../ref/request-response.txt:703
msgid ""
"Deletes the cookie with the given key. Fails silently if the key doesn't "
"exist."
msgstr ""

# e874fc036213406e8c06afbfeb22620e
#: ../../ref/request-response.txt:706
msgid ""
"Due to the way cookies work, ``path`` and ``domain`` should be the same "
"values you used in ``set_cookie()`` -- otherwise the cookie may not be "
"deleted."
msgstr ""

# 67224bd80cf945c1b95bb9ff1d27859b
# e5ddcdb31fba4da8a54a97f65ff08ff5
# bfe904bedf0f4acca03c394ee49bdf65
#: ../../ref/request-response.txt:712 ../../ref/request-response.txt:716
#: ../../ref/request-response.txt:720
msgid "This method makes an :class:`HttpResponse` instance a file-like object."
msgstr ""

# a3d3020f038743308588f03ba35736ca
#: ../../ref/request-response.txt:728
msgid "HttpResponse subclasses"
msgstr ""

# 29ad9804e7574b4b973d86763a18bad6
#: ../../ref/request-response.txt:730
msgid ""
"Django includes a number of ``HttpResponse`` subclasses that handle "
"different types of HTTP responses. Like ``HttpResponse``, these subclasses "
"live in :mod:`django.http`."
msgstr ""

# c023698eab1944f0b0dc19d526d92960
#: ../../ref/request-response.txt:736
msgid ""
"The constructor takes a single argument -- the path to redirect to. This can "
"be a fully qualified URL (e.g. ``'http://www.yahoo.com/search/'``) or an "
"absolute path with no domain (e.g. ``'/search/'``). Note that this returns "
"an HTTP status code 302."
msgstr ""

# 6a66b808351f4b5d8c25facd79e517aa
#: ../../ref/request-response.txt:743
msgid ""
"Like :class:`HttpResponseRedirect`, but it returns a permanent redirect "
"(HTTP status code 301) instead of a \"found\" redirect (status code 302)."
msgstr ""

# be108b425a9042f4af14690ad764e356
#: ../../ref/request-response.txt:748
msgid ""
"The constructor doesn't take any arguments. Use this to designate that a "
"page hasn't been modified since the user's last request (status code 304)."
msgstr ""

# 0b6731f96a994abea47e0826deed7025
#: ../../ref/request-response.txt:753
msgid "Acts just like :class:`HttpResponse` but uses a 400 status code."
msgstr ""

# b1a0d8a265a54853896927c2101292a3
#: ../../ref/request-response.txt:757
msgid "Acts just like :class:`HttpResponse` but uses a 404 status code."
msgstr ""

# 5298f1d069dd46aca9d836a9c9b0fcd1
#: ../../ref/request-response.txt:761
msgid "Acts just like :class:`HttpResponse` but uses a 403 status code."
msgstr ""

# 1e37ad938e274cfc89e06e1376773452
#: ../../ref/request-response.txt:765
msgid ""
"Like :class:`HttpResponse`, but uses a 405 status code. Takes a single, "
"required argument: a list of permitted methods (e.g. ``['GET', 'POST']``)."
msgstr ""

# 10f4b054ebc44ee097b918f148775b60
#: ../../ref/request-response.txt:770
msgid "Acts just like :class:`HttpResponse` but uses a 410 status code."
msgstr ""

# 18e6345a12aa464eb3f78cb3447613af
#: ../../ref/request-response.txt:774
msgid "Acts just like :class:`HttpResponse` but uses a 500 status code."
msgstr ""

# 1c460e3329fd456b8dd3d447925284c7
#: ../../ref/request-response.txt:778
msgid ""
"If a custom subclass of :class:`HttpResponse` implements a ``render`` "
"method, Django will treat it as emulating a :class:`~django.template."
"response.SimpleTemplateResponse`, and the ``render`` method must itself "
"return a valid response object."
msgstr ""

# c6bf82d4051a4a65b705622505e7d286
#: ../../ref/settings.txt:11
msgid ""
"Be careful when you override settings, especially when the default value is "
"a non-empty tuple or dictionary, such as :setting:`MIDDLEWARE_CLASSES` and :"
"setting:`TEMPLATE_CONTEXT_PROCESSORS`. Make sure you keep the components "
"required by the features of Django you wish to use."
msgstr ""

# b6ea53d5c9904cdc905e5e51e64f400d
#: ../../ref/settings.txt:17
msgid "Available settings"
msgstr ""

# d44fb925511b4c7cb34e6dda88bdfb69
#: ../../ref/settings.txt:19
msgid ""
"Here's a full list of all available settings, in alphabetical order, and "
"their default values."
msgstr ""

# e44e4d809ff04ffda173ebb8c298b8e0
#: ../../ref/settings.txt:25
msgid "ABSOLUTE_URL_OVERRIDES"
msgstr ""

# cf493c579daf473eafd1ae6a3a06dd67
# bfb14a72e07242b9932ddea29c9870f0
# bcfa68df507940d29ac38b5ee47f6def
#: ../../ref/settings.txt:27 ../../ref/settings.txt:391
#: ../../ref/settings.txt:478
msgid "Default: ``{}`` (Empty dictionary)"
msgstr ""

# 32880f14a3314921a78d0bda146daa47
#: ../../ref/settings.txt:29
msgid ""
"A dictionary mapping ``\"app_label.model_name\"`` strings to functions that "
"take a model object and return its URL. This is a way of overriding "
"``get_absolute_url()`` methods on a per-installation basis. Example::"
msgstr ""

# da40215d0bb34b40bf66e40e5ad6f4a0
#: ../../ref/settings.txt:38
msgid ""
"Note that the model name used in this setting should be all lower-case, "
"regardless of the case of the actual model class name."
msgstr ""

# ef2b2629016e486d8aeec2832f1be270
#: ../../ref/settings.txt:44
msgid "ADMIN_FOR"
msgstr ""

# 6d02381692fd4be18708602e8670744f
# 6800482fc7ec4b58b532cb0de85b8a5c
# 0e039c07b38244bfa78941437df5c2fc
# 6cf1f82d5fbf4eb39ddac2b56efb364d
# 08a8245c17374f2ead9e181e04036f3c
# f4afdec9dbd74227bc5dfcea1e152b7f
# d9bb43ce7d3a4ab0856be96c4dd634db
# 73ae466fb05d488298351a30d0f9add0
# 0cb8877dc1db4e8caec3387f6581eb26
# 0a2adfde23f64802b0ff7c2cccc6d583
# 908be1ac5c5e4946954996e86edd75b8
#: ../../ref/settings.txt:46 ../../ref/settings.txt:59
#: ../../ref/settings.txt:76 ../../ref/settings.txt:917
#: ../../ref/settings.txt:1106 ../../ref/settings.txt:1180
#: ../../ref/settings.txt:1200 ../../ref/settings.txt:1279
#: ../../ref/settings.txt:1392 ../../ref/settings.txt:1551
#: ../../ref/settings.txt:1983
msgid "Default: ``()`` (Empty tuple)"
msgstr ""

# e9b0df07a4d148c4af1664ef0a4a0d75
#: ../../ref/settings.txt:48
msgid ""
"Used for admin-site settings modules, this should be a tuple of settings "
"modules (in the format ``'foo.bar.baz'``) for which this site is an admin."
msgstr ""

# 8b78aec5c64c43539dcebe517aba231c
#: ../../ref/settings.txt:51
msgid ""
"The admin site uses this in its automatically-introspected documentation of "
"models, views and template tags."
msgstr ""

# 3e0c5cd504ce4b8a904d87adb4a08f28
#: ../../ref/settings.txt:57
msgid "ADMINS"
msgstr ""

# 198e51ac93554b54bd7e279162156ecc
#: ../../ref/settings.txt:61
msgid ""
"A tuple that lists people who get code error notifications. When "
"``DEBUG=False`` and a view raises an exception, Django will email these "
"people with the full exception information. Each member of the tuple should "
"be a tuple of (Full name, email address). Example::"
msgstr ""

# 5d8b5b93793041debfcbadb389a6bb4b
#: ../../ref/settings.txt:68
msgid ""
"Note that Django will email *all* of these people whenever an error happens. "
"See :doc:`/howto/error-reporting` for more information."
msgstr ""

# b7d6e32e06724c398b0717b2c412b225
#: ../../ref/settings.txt:74
msgid "ALLOWED_INCLUDE_ROOTS"
msgstr ""

# 3b88fdf081d240bbbdd6580f5ea2fb43
#: ../../ref/settings.txt:78
msgid ""
"A tuple of strings representing allowed prefixes for the ``{% ssi %}`` "
"template tag. This is a security measure, so that template authors can't "
"access files that they shouldn't be accessing."
msgstr ""

# 4214c29ae0c5495c92cc3acf525d4c30
#: ../../ref/settings.txt:82
msgid ""
"For example, if :setting:`ALLOWED_INCLUDE_ROOTS` is ``('/home/html', '/var/"
"www')``, then ``{% ssi /home/html/foo.txt %}`` would work, but ``{% ssi /etc/"
"passwd %}`` wouldn't."
msgstr ""

# b56ccf8c222c4c159ba020253c3929f9
#: ../../ref/settings.txt:89
msgid "APPEND_SLASH"
msgstr ""

# 751f8d961b8647f88636c71c6e033554
# ecb8955e003b4eb497c8f7d95f8faa2f
# a09c85a741c84954ae49807746e82fbb
# 601c159b020643c5a65263ad0905d325
#: ../../ref/settings.txt:91 ../../ref/settings.txt:595
#: ../../ref/settings.txt:619 ../../ref/settings.txt:2178
msgid "Default: ``True``"
msgstr ""

# cea825e7a90240918ba4eccfb06fe342
#: ../../ref/settings.txt:93
msgid ""
"When set to ``True``, if the request URL does not match any of the patterns "
"in the URLconf and it doesn't end in a slash, an HTTP redirect is issued to "
"the same URL with a slash appended. Note that the redirect may cause any "
"data submitted in a POST request to be lost."
msgstr ""

# 2971a6e0cdd84707927b8bd8d2e98f00
#: ../../ref/settings.txt:98
msgid ""
"The :setting:`APPEND_SLASH` setting is only used if :class:`~django."
"middleware.common.CommonMiddleware` is installed (see :doc:`/topics/http/"
"middleware`). See also :setting:`PREPEND_WWW`."
msgstr ""

# 5f7060b5678c4a4f831f06802bfc382d
#: ../../ref/settings.txt:105
msgid "AUTHENTICATION_BACKENDS"
msgstr ""

# ec2a3ffd07264730bc852be63d88aa0a
#: ../../ref/settings.txt:107
msgid "Default: ``('django.contrib.auth.backends.ModelBackend',)``"
msgstr ""

# 6fc35f99a9fa42acbec3f779ce687859
#: ../../ref/settings.txt:109
msgid ""
"A tuple of authentication backend classes (as strings) to use when "
"attempting to authenticate a user. See the :doc:`authentication backends "
"documentation </ref/authbackends>` for details."
msgstr ""

# 40397b3ec65c408f997c1f5e8ccd9084
#: ../../ref/settings.txt:116
msgid "AUTH_PROFILE_MODULE"
msgstr ""

# f81c9ac4351b450e8bcf8e3e775c8f26
# b19638a0d5064c5589259f76934b00b0
# c9f91f01c23742058547c7afd40bb4fe
# b89cbb28ff694975b2c96ebd0e4d5ba9
#: ../../ref/settings.txt:118 ../../ref/settings.txt:943
#: ../../ref/settings.txt:1575 ../../ref/settings.txt:1864
msgid "Default: Not defined"
msgstr ""

# 9b7eb730890b4a53b0f5d14c97d374e4
#: ../../ref/settings.txt:120
msgid ""
"The site-specific user profile model used by this site. See :ref:`auth-"
"profiles`."
msgstr ""

# 0a3bfe51708943588761913b67908362
#: ../../ref/settings.txt:126
msgid "CACHES"
msgstr ""

# 19a9da6bb63f4b1fa28c81b04f69d545
#: ../../ref/settings.txt:138
msgid ""
"A dictionary containing the settings for all caches to be used with Django. "
"It is a nested dictionary whose contents maps cache aliases to a dictionary "
"containing the options for an individual cache."
msgstr ""

# 588a4a5e8e60465e957d9b9f54b38422
#: ../../ref/settings.txt:142
msgid ""
"The :setting:`CACHES` setting must configure a ``default`` cache; any number "
"of additional caches may also be specified. If you are using a cache backend "
"other than the local memory cache, or you need to define multiple caches, "
"other options will be required. The following cache options are available."
msgstr ""

# 6b5b636f2fa842f9a0396725bd39cc4a
#: ../../ref/settings.txt:151
msgid "BACKEND"
msgstr ""

# 0e01b9f900724b5baf55d48060cdcabd
# d0588705ef0a403bb9db5cb0639486d2
# b1d9d6b3f7104ada8c6113a5f7c5a414
# b0cfa75f93484ff986a8426a4a48773a
# 21f01ef471834dba982e44f0d13c8293
# 6c5d501c3c4943e4ab3d960d416ab6d5
# 5e5d829fb9f44d0885ae73f88cdf21d7
# eaa8a8be470e475592465318dc0633e5
# aa12e7cb2bc9402f80c95c568cb5a0f3
# e00f81739cc045d39b5c13ea1b789652
# 24fbc14a5c164161b1a26987a6aa3f69
# ceebf93a511b432f805e23e2c804bcd1
# 1917609ac90a42799c0e11aa2cd84689
# d771e248ed694688aa2484b64d20b256
# 384b596e1b2947fda5d8b671ae1facc2
# 5545e62c41fc41e38585bea7a0f09034
# 067bce010f5148e3831c4e834aaf1d2c
# 89b480c777a4474a8c89e8b695ff250a
# d61f6f133b57469c828af3e6ab280517
#: ../../ref/settings.txt:153 ../../ref/settings.txt:198
#: ../../ref/settings.txt:210 ../../ref/settings.txt:287
#: ../../ref/settings.txt:418 ../../ref/settings.txt:444
#: ../../ref/settings.txt:467 ../../ref/settings.txt:492
#: ../../ref/settings.txt:501 ../../ref/settings.txt:511
#: ../../ref/settings.txt:897 ../../ref/settings.txt:907
#: ../../ref/settings.txt:963 ../../ref/settings.txt:977
#: ../../ref/settings.txt:1402 ../../ref/settings.txt:1416
#: ../../ref/settings.txt:1587 ../../ref/settings.txt:1879
#: ../../ref/settings.txt:2019
msgid "Default: ``''`` (Empty string)"
msgstr ""

# fa1e07c1bbc0446a91658a9c1e90813b
#: ../../ref/settings.txt:155
msgid "The cache backend to use. The built-in cache backends are:"
msgstr ""

# 6eb5161da04e4430be2d4cfe711f74f6
#: ../../ref/settings.txt:157
msgid "``'django.core.cache.backends.db.DatabaseCache'``"
msgstr ""

# e8a74e4badd749a18c4eddfd0f00c8cc
#: ../../ref/settings.txt:158
msgid "``'django.core.cache.backends.dummy.DummyCache'``"
msgstr ""

# 3b0d68eb987e43999c57f6ee19b29fae
#: ../../ref/settings.txt:159
msgid "``'django.core.cache.backends.filebased.FileBasedCache'``"
msgstr ""

# 5efac690d3d44d3f94c112dba81bd090
#: ../../ref/settings.txt:160
msgid "``'django.core.cache.backends.locmem.LocMemCache'``"
msgstr ""

# 9a6a763724e7460cafe1f7ba0f4e5ab7
#: ../../ref/settings.txt:161
msgid "``'django.core.cache.backends.memcached.MemcachedCache'``"
msgstr ""

# 37d9238ba76f4785a25d4207a40aa581
#: ../../ref/settings.txt:162
msgid "``'django.core.cache.backends.memcached.PyLibMCCache'``"
msgstr ""

# 1d1846b3a8db48f293b2c1b4bb746060
#: ../../ref/settings.txt:164
msgid ""
"You can use a cache backend that doesn't ship with Django by setting :"
"setting:`BACKEND <CACHE-BACKEND>` to a fully-qualified path of a cache "
"backend class (i.e. ``mypackage.backends.whatever.WhateverCache``). Writing "
"a whole new cache backend from scratch is left as an exercise to the reader; "
"see the other backends for examples."
msgstr ""

# 4c6aa9898cac4706aa21eb86b70204b9
#: ../../ref/settings.txt:171
msgid ""
"Prior to Django 1.3, you could use a URI based version of the backend name "
"to reference the built-in cache backends (e.g., you could use ``'db://"
"tablename'`` to refer to the database backend). This format has been "
"deprecated, and will be removed in Django 1.5."
msgstr ""

# 1e06caaa6ca54352aec8c702cbeeb38e
#: ../../ref/settings.txt:179
msgid "KEY_FUNCTION"
msgstr ""

# 7d8881788a8f47ee8394410e4cec24bf
#: ../../ref/settings.txt:181
msgid ""
"A string containing a dotted path to a function that defines how to compose "
"a prefix, version and key into a final cache key. The default implementation "
"is equivalent to the function::"
msgstr ""

# a8d160355bcd4d9a81ff18c4ae9901b0
#: ../../ref/settings.txt:188
msgid ""
"You may use any key function you want, as long as it has the same argument "
"signature."
msgstr ""

# d8125e6bef4b489f8571c47ff852cee4
#: ../../ref/settings.txt:191
msgid ""
"See the :ref:`cache documentation <cache_key_transformation>` for more "
"information."
msgstr ""

# c17297ec1c83495091a6cc81e55918a8
#: ../../ref/settings.txt:196
msgid "KEY_PREFIX"
msgstr ""

# e92a36ee3fed43ccb0f0c4b5d76b07e8
#: ../../ref/settings.txt:200
msgid ""
"A string that will be automatically included (prepended by default) to all "
"cache keys used by the Django server."
msgstr ""

# 5faa5e4f14cd46c886d5845802fbeca7
#: ../../ref/settings.txt:203
msgid ""
"See the :ref:`cache documentation <cache_key_prefixing>` for more "
"information."
msgstr ""

# bb42125ce88a46a5a4ea4c6212bf2dd1
#: ../../ref/settings.txt:208
msgid "LOCATION"
msgstr ""

# 23a2cf1c9fec49638b12a68cf9009feb
#: ../../ref/settings.txt:212
msgid ""
"The location of the cache to use. This might be the directory for a file "
"system cache, a host and port for a memcache server, or simply an "
"identifying name for a local memory cache. e.g.::"
msgstr ""

# e572be9897a242649ee30da58bc00a31
# 3fbbfda9dca6456c9fbe0bcf8729a0f8
#: ../../ref/settings.txt:226 ../../ref/settings.txt:476
msgid "OPTIONS"
msgstr ""

# 7118c0dd2ec0477689517bda0760876f
#: ../../ref/settings.txt:228
msgid "Default: None"
msgstr ""

# a56001f786aa43c6a26bd8d1c860353c
#: ../../ref/settings.txt:230
msgid ""
"Extra parameters to pass to the cache backend. Available parameters vary "
"depending on your cache backend."
msgstr ""

# 419085bb9f2a45a8a478e69ec3cfe7fe
#: ../../ref/settings.txt:233
msgid ""
"Some information on available parameters can be found in the :doc:`Cache "
"Backends </topics/cache>` documentation. For more information, consult your "
"backend module's own documentation."
msgstr ""

# 85db35f4a5cb435a8fdbcdaf7dbce040
#: ../../ref/settings.txt:240
msgid "TIMEOUT"
msgstr ""

# ba14eb42906b48edb3e78af0808bfe44
#: ../../ref/settings.txt:242
msgid "Default: 300"
msgstr ""

# 25115b51d09245bdac3154ce40bd8e25
#: ../../ref/settings.txt:244
msgid "The number of seconds before a cache entry is considered stale."
msgstr ""

# 406104165d5c4d9ea3062c05ba573021
#: ../../ref/settings.txt:249
msgid "VERSION"
msgstr ""

# 9049f5fe5d554d53a17e9e6247f38ef2
#: ../../ref/settings.txt:251
msgid "Default: ``1``"
msgstr ""

# b2e25ac781884cdc8baef892629cac70
#: ../../ref/settings.txt:253
msgid ""
"The default version number for cache keys generated by the Django server."
msgstr ""

# 09d67c27f4cf49f0a40a3a014b4332b6
#: ../../ref/settings.txt:255
msgid ""
"See the :ref:`cache documentation <cache_versioning>` for more information."
msgstr ""

# 0f2542cf90dc4fb48048ed40b34f4303
#: ../../ref/settings.txt:260
msgid "CACHE_MIDDLEWARE_ALIAS"
msgstr ""

# 2216ba333f76471cb7c160bba6afd299
#: ../../ref/settings.txt:262
msgid "Default: ``default``"
msgstr ""

# 823cfe2bd0ab44aeaa194ad2a01189d4
#: ../../ref/settings.txt:264
msgid "The cache connection to use for the cache middleware."
msgstr ""

# 68b04a902054453e84d4294a3836e36a
#: ../../ref/settings.txt:269
msgid "CACHE_MIDDLEWARE_ANONYMOUS_ONLY"
msgstr ""

# f2f760d5a1b24826b139f521ca1a6655
#: ../../ref/settings.txt:273
msgid ""
"If the value of this setting is ``True``, only anonymous requests (i.e., not "
"those made by a logged-in user) will be cached.  Otherwise, the middleware "
"caches every page that doesn't have GET or POST parameters."
msgstr ""

# bc79ab4213ac498e837536dfa6584807
#: ../../ref/settings.txt:277
msgid ""
"If you set the value of this setting to ``True``, you should make sure "
"you've activated ``AuthenticationMiddleware``."
msgstr ""

# beaa91c27450427095f5be6daf8a5de9
# cf5fb64b0afd4e9582adada57fe45be3
# bb4d30123a994ffc931613dac8caf933
#: ../../ref/settings.txt:280 ../../ref/settings.txt:291
#: ../../ref/settings.txt:303
msgid "See :doc:`/topics/cache`."
msgstr ""

# 95c91a2ac0054bcd8101a076f1a1fac7
#: ../../ref/settings.txt:285
msgid "CACHE_MIDDLEWARE_KEY_PREFIX"
msgstr ""

# 6bd5a2d0278d43ab9b0a090ceab1488a
#: ../../ref/settings.txt:289
msgid "The cache key prefix that the cache middleware should use."
msgstr ""

# 9f9b4ccabf83444188ea4458176b0808
#: ../../ref/settings.txt:296
msgid "CACHE_MIDDLEWARE_SECONDS"
msgstr ""

# e221df6414c94a24b31b0e4e0b2fbd0d
#: ../../ref/settings.txt:298
msgid "Default: ``600``"
msgstr ""

# 92b9d98e341e4214bf12eb7c82650185
#: ../../ref/settings.txt:300
msgid ""
"The default number of seconds to cache a page when the caching middleware or "
"``cache_page()`` decorator is used."
msgstr ""

# ba10acd39bb2415bb26c45448f1b2b6f
#: ../../ref/settings.txt:314
msgid ""
"The domain to be used when setting the CSRF cookie.  This can be useful for "
"easily allowing cross-subdomain requests to be excluded from the normal "
"cross site request forgery protection.  It should be set to a string such as "
"``\".lawrence.com\"`` to allow a POST request from a form on one subdomain "
"to be accepted by accepted by a view served from another subdomain."
msgstr ""

# c7e6712fd6f44effa7cfc071caa12cfe
#: ../../ref/settings.txt:320
msgid ""
"Please note that the presence of this setting does not imply that Django's "
"CSRF protection is safe from cross-subdomain attacks by default - please see "
"the :ref:`CSRF limitations <csrf-limitations>` section."
msgstr ""

# c63e1fe67c314bfa96d5d273609b5681
#: ../../ref/settings.txt:333
msgid ""
"The name of the cookie to use for the CSRF authentication token. This can be "
"whatever you want.  See :doc:`/ref/contrib/csrf`."
msgstr ""

# 0060d0f2549b45579a4ac69412cd7685
#: ../../ref/settings.txt:379
msgid ""
"where ``reason`` is a short message (intended for developers or logging, not "
"for end users) indicating the reason the request was rejected.  See :doc:`/"
"ref/contrib/csrf`."
msgstr ""

# 8a7d6d0a670a481c8a0850bba479ff22
#: ../../ref/settings.txt:387
msgid "DATABASES"
msgstr ""

# cad30f4afd3c4f0fa076865c883f776b
#: ../../ref/settings.txt:393
msgid ""
"A dictionary containing the settings for all databases to be used with "
"Django. It is a nested dictionary whose contents maps database aliases to a "
"dictionary containing the options for an individual database."
msgstr ""

# 6ee29722f8644be5a771504cb4c895ff
#: ../../ref/settings.txt:397
msgid ""
"The :setting:`DATABASES` setting must configure a ``default`` database; any "
"number of additional databases may also be specified."
msgstr ""

# 0f5adf191ab94d36be4795abb0fa17af
#: ../../ref/settings.txt:400
msgid ""
"The simplest possible settings file is for a single-database setup using "
"SQLite. This can be configured using the following::"
msgstr ""

# 617633ba11e9472e94f3edb5be460cf2
#: ../../ref/settings.txt:410
msgid ""
"For other database backends, or more complex SQLite configurations, other "
"options will be required. The following inner options are available."
msgstr ""

# fba9c4aa8c884856a6e2101fbe9d0920
#: ../../ref/settings.txt:416
msgid "ENGINE"
msgstr ""

# 4e717892357f4a6d98cff5595dfd46a9
#: ../../ref/settings.txt:420
msgid "The database backend to use. The built-in database backends are:"
msgstr ""

# d2db79799a9241f4a2187f7160b7874a
#: ../../ref/settings.txt:422
msgid "``'django.db.backends.postgresql_psycopg2'``"
msgstr ""

# 21e4fd1da7c44079808129a66771301b
#: ../../ref/settings.txt:423
msgid "``'django.db.backends.mysql'``"
msgstr ""

# f261a217c93c478caaba277d8fc6d3d7
#: ../../ref/settings.txt:424
msgid "``'django.db.backends.sqlite3'``"
msgstr ""

# 92e82df7c2384da4b36559aa977ea52f
#: ../../ref/settings.txt:425
msgid "``'django.db.backends.oracle'``"
msgstr ""

# 8118f0b2e16f4132aec590172a577189
#: ../../ref/settings.txt:427
msgid ""
"You can use a database backend that doesn't ship with Django by setting "
"``ENGINE`` to a fully-qualified path (i.e. ``mypackage.backends.whatever``). "
"Writing a whole new database backend from scratch is left as an exercise to "
"the reader; see the other backends for examples."
msgstr ""

# 0a8a9323c47d47b6a93b9606b5fbd0f8
#: ../../ref/settings.txt:434
msgid ""
"Prior to Django 1.2, you could use a short version of the backend name to "
"reference the built-in database backends (e.g., you could use ``'sqlite3'`` "
"to refer to the SQLite backend). This format has been deprecated, and will "
"be removed in Django 1.4."
msgstr ""

# ead4dd7485de4353b846373170134597
#: ../../ref/settings.txt:442
msgid "HOST"
msgstr ""

# 2c1c9744f5b744bf99ea0fc0c9ce2679
#: ../../ref/settings.txt:446
msgid ""
"Which host to use when connecting to the database. An empty string means "
"localhost. Not used with SQLite."
msgstr ""

# 9ec124f3296b4d139bb7b3bebe2715b5
#: ../../ref/settings.txt:449
msgid ""
"If this value starts with a forward slash (``'/'``) and you're using MySQL, "
"MySQL will connect via a Unix socket to the specified socket. For example::"
msgstr ""

# 53a554ff96c74eddaae89bfdf5c9cef3
#: ../../ref/settings.txt:454
msgid ""
"If you're using MySQL and this value *doesn't* start with a forward slash, "
"then this value is assumed to be the host."
msgstr ""

# b20fc8714fa0467e95bebdb2c2547b10
#: ../../ref/settings.txt:457
msgid ""
"If you're using PostgreSQL, an empty string means to use a Unix domain "
"socket for the connection, rather than a network connection to localhost. If "
"you explicitly need to use a TCP/IP connection on the local machine with "
"PostgreSQL, specify ``localhost`` here."
msgstr ""

# 4d46b865b9734c5e9da51a739b4c44fe
#: ../../ref/settings.txt:465
msgid "NAME"
msgstr ""

# 3122cf02eada45f6be19d88b71dfce07
#: ../../ref/settings.txt:469
msgid ""
"The name of the database to use. For SQLite, it's the full path to the "
"database file. When specifying the path, always use forward slashes, even on "
"Windows (e.g. ``C:/homes/user/mysite/sqlite3.db``)."
msgstr ""

# 3f3f7915f697498cae0749d01841a931
#: ../../ref/settings.txt:480
msgid ""
"Extra parameters to use when connecting to the database. Available "
"parameters vary depending on your database backend."
msgstr ""

# b3c9f1463bd642e786a1bcf4b0110ab2
#: ../../ref/settings.txt:483
msgid ""
"Some information on available parameters can be found in the :doc:`Database "
"Backends </ref/databases>` documentation. For more information, consult your "
"backend module's own documentation."
msgstr ""

# a9811a6397b3499f8b9165ae47df32b5
#: ../../ref/settings.txt:490
msgid "PASSWORD"
msgstr ""

# f120e6d1a5604eb283c3e3b0c94be27d
#: ../../ref/settings.txt:494
msgid ""
"The password to use when connecting to the database. Not used with SQLite."
msgstr ""

# 53a83ea8da644a7895fe3f5c31a84739
#: ../../ref/settings.txt:499
msgid "PORT"
msgstr ""

# e841dce0f6454b5590fe244c43ff9f55
#: ../../ref/settings.txt:503
msgid ""
"The port to use when connecting to the database. An empty string means the "
"default port. Not used with SQLite."
msgstr ""

# 10fe70ac0e544253853905d6d7d09f68
#: ../../ref/settings.txt:509
msgid "USER"
msgstr ""

# bb145478f687409fa1348b0e1f48df91
#: ../../ref/settings.txt:513
msgid ""
"The username to use when connecting to the database. Not used with SQLite."
msgstr ""

# 1d70b50a5b3f484896dab88a0b8c19b5
#: ../../ref/settings.txt:518
msgid "TEST_CHARSET"
msgstr ""

# 787bc1061b0947afaff879f790ed5ee3
#: ../../ref/settings.txt:522
msgid ""
"The character set encoding used to create the test database. The value of "
"this string is passed directly through to the database, so its format is "
"backend-specific."
msgstr ""

# e31c9d00b2294a43b39ee413a3912861
#: ../../ref/settings.txt:526
msgid ""
"Supported for the PostgreSQL_ (``postgresql_psycopg2``) and MySQL_ "
"(``mysql``) backends."
msgstr ""

# 2ce80b269b3d45b296a9ad228fae6911
#: ../../ref/settings.txt:535
msgid "TEST_COLLATION"
msgstr ""

# 5052b55b726e4009a8a52036049e38bc
#: ../../ref/settings.txt:539
msgid ""
"The collation order to use when creating the test database. This value is "
"passed directly to the backend, so its format is backend-specific."
msgstr ""

# 183ae2a71408491c91ae3bda6f1cbf67
#: ../../ref/settings.txt:542
msgid ""
"Only supported for the ``mysql`` backend (see the `MySQL manual`_ for "
"details)."
msgstr ""

# ab13b6f75d22494693e07fc7d488530d
#: ../../ref/settings.txt:549
msgid "TEST_DEPENDENCIES"
msgstr ""

# 9351f7dca9944f0f9498401531f31ff6
#: ../../ref/settings.txt:553
msgid ""
"Default: ``['default']``, for all databases other than ``default``, which "
"has no dependencies."
msgstr ""

# b7d9718502274cb6b1ffd54f63f6659c
#: ../../ref/settings.txt:556
msgid ""
"The creation-order dependencies of the database. See the documentation on :"
"ref:`controlling the creation order of test databases <topics-testing-"
"creation-dependencies>` for details."
msgstr ""

# 53d8efd6d76b400086ecf88de1fbfdf1
#: ../../ref/settings.txt:563
msgid "TEST_MIRROR"
msgstr ""

# 58dd51d8638e438cba168ead7d3bcac5
#: ../../ref/settings.txt:567
msgid ""
"The alias of the database that this database should mirror during testing."
msgstr ""

# b543688a8a404620972c1d8becb9d582
#: ../../ref/settings.txt:570
msgid ""
"This setting exists to allow for testing of master/slave configurations of "
"multiple databases. See the documentation on :ref:`testing master/slave "
"configurations <topics-testing-masterslave>` for details."
msgstr ""

# f93987033bc143acb0b96f79ce017207
#: ../../ref/settings.txt:578
msgid "TEST_NAME"
msgstr ""

# 5f5ace95a6a54ce69c13c926084fc5fd
#: ../../ref/settings.txt:582
msgid "The name of database to use when running the test suite."
msgstr ""

# 7e312505fc33455888d681b40c5172a1
#: ../../ref/settings.txt:584
msgid ""
"If the default value (``None``) is used with the SQLite database engine, the "
"tests will use a memory resident database. For all other database engines "
"the test database will use the name ``'test_' + DATABASE_NAME``."
msgstr ""

# 1b180037f34b41048ea63b87b3c8d9ee
#: ../../ref/settings.txt:588
msgid "See :doc:`/topics/testing`."
msgstr ""

# 29a3163b938d4743acec562c58b54b88
#: ../../ref/settings.txt:593
msgid "TEST_CREATE"
msgstr ""

# 3a4b9dad433f40268d37055daea5692d
# 2653464b20a440c588c59f196ec1f8d5
# 2f0a735c0b464fc588b656bfc3b10da0
# 0135386b17f147ce8e75a1031bf26be7
# 219d76d79cd84cf08e15980a38ff5d9e
# 0e218d61cb9f4656835d92772f1e67ee
#: ../../ref/settings.txt:597 ../../ref/settings.txt:609
#: ../../ref/settings.txt:621 ../../ref/settings.txt:633
#: ../../ref/settings.txt:645 ../../ref/settings.txt:657
msgid "This is an Oracle-specific setting."
msgstr ""

# 0792857737e549649a508551cbcca553
#: ../../ref/settings.txt:599
msgid ""
"If it is set to ``False``, the test tablespaces won't be automatically "
"created at the beginning of the tests and dropped at the end."
msgstr ""

# 425564e0b9454fd1930a9861e4e5fe64
#: ../../ref/settings.txt:605
msgid "TEST_USER"
msgstr ""

# 6c535dd864c7471e8eef187695db8716
#: ../../ref/settings.txt:611
msgid ""
"The username to use when connecting to the Oracle database that will be used "
"when running tests. If not provided, Django will use ``'test_' + USER``."
msgstr ""

# 54303ae77576491a96df69263a6e1b7c
#: ../../ref/settings.txt:617
msgid "TEST_USER_CREATE"
msgstr ""

# 73796a2e84a94368a87217e0327a1991
#: ../../ref/settings.txt:623
msgid ""
"If it is set to ``False``, the test user won't be automatically created at "
"the beginning of the tests and dropped at the end."
msgstr ""

# f45d37b8f5a747baa6e033af537da4d0
#: ../../ref/settings.txt:629
msgid "TEST_PASSWD"
msgstr ""

# 3c9881993e8e4fd69b468afeb06c1163
#: ../../ref/settings.txt:635
msgid ""
"The password to use when connecting to the Oracle database that will be used "
"when running tests. If not provided, Django will use a hardcoded default "
"value."
msgstr ""

# 54ac30039b61490f821483ddb65838d1
#: ../../ref/settings.txt:641
msgid "TEST_TBLSPACE"
msgstr ""

# e0a79ba680254ca88b080508c069fb84
#: ../../ref/settings.txt:647
msgid ""
"The name of the tablespace that will be used when running tests. If not "
"provided, Django will use ``'test_' + NAME``."
msgstr ""

# b9d48e8a3ab84d9fb5f403089fee6b65
#: ../../ref/settings.txt:653
msgid "TEST_TBLSPACE_TMP"
msgstr ""

# c553ddc2638d42009c38913f7f1ba380
#: ../../ref/settings.txt:659
msgid ""
"The name of the temporary tablespace that will be used when running tests. "
"If not provided, Django will use ``'test_' + NAME + '_temp'``."
msgstr ""

# 9c81e0b408314866bc558c777da2341e
#: ../../ref/settings.txt:665
msgid "DATABASE_ROUTERS"
msgstr ""

# d9e6ce4d49204613a13e3b233454a895
#: ../../ref/settings.txt:669
msgid "Default: ``[]`` (Empty list)"
msgstr ""

# 07610e4e0e56443b9918c30e1bed0c3f
#: ../../ref/settings.txt:671
msgid ""
"The list of routers that will be used to determine which database to use "
"when performing a database queries."
msgstr ""

# e56b0509669344249fe2e72c16506cfd
#: ../../ref/settings.txt:674
msgid ""
"See the documentation on :ref:`automatic database routing in multi database "
"configurations <topics-db-multi-db-routing>`."
msgstr ""

# 064e4976fb9245e9a08705bc221a691b
#: ../../ref/settings.txt:680
msgid "DATE_FORMAT"
msgstr ""

# 9689f40360d5421cbdc97f853a153b3f
#: ../../ref/settings.txt:682
msgid "Default: ``'N j, Y'`` (e.g. ``Feb. 4, 2003``)"
msgstr ""

# eccf22f1096b419ba61607efce830f21
#: ../../ref/settings.txt:684
msgid ""
"The default formatting to use for displaying date fields in any part of the "
"system. Note that if :setting:`USE_L10N` is set to ``True``, then the locale-"
"dictated format has higher precedence and will be applied instead. See :"
"tfilter:`allowed date format strings <date>`."
msgstr ""

# a6be4620bb0a478ba5b3e673df9b71b4
#: ../../ref/settings.txt:692
msgid ""
"See also :setting:`DATETIME_FORMAT`, :setting:`TIME_FORMAT` and :setting:"
"`SHORT_DATE_FORMAT`."
msgstr ""

# 7b72284b5a8a400d82d40ca7a977f9df
#: ../../ref/settings.txt:697
msgid "DATE_INPUT_FORMATS"
msgstr ""

# 3bbbb9beab3e44fcaeae5481d212cea0
#: ../../ref/settings.txt:707
msgid ""
"A tuple of formats that will be accepted when inputting data on a date "
"field. Formats will be tried in order, using the first valid one. Note that "
"these format strings use Python's datetime_ module syntax, not the format "
"strings from the ``date`` Django template tag."
msgstr ""

# faa11dee129d4382b27b0543f86b9829
# f400d03b098841f39156c8107a2df1ee
# 518172eb23894fba8f15c4ee1210ef1b
#: ../../ref/settings.txt:712 ../../ref/settings.txt:754
#: ../../ref/settings.txt:2089
msgid ""
"When :setting:`USE_L10N` is ``True``, the locale-dictated format has higher "
"precedence and will be applied instead."
msgstr ""

# bcd67d5d53744d0eb055c0e76f3940ec
#: ../../ref/settings.txt:715
msgid ""
"See also :setting:`DATETIME_INPUT_FORMATS` and :setting:`TIME_INPUT_FORMATS`."
msgstr ""

# 897bf825f64a4028a81820a4f752b89d
#: ../../ref/settings.txt:722
msgid "DATETIME_FORMAT"
msgstr ""

# e09f596f7bd44f928c8706b3da64ec4c
#: ../../ref/settings.txt:724
msgid "Default: ``'N j, Y, P'`` (e.g. ``Feb. 4, 2003, 4 p.m.``)"
msgstr ""

# 06690733c96e4172a90c569ed2f92cc3
#: ../../ref/settings.txt:726
msgid ""
"The default formatting to use for displaying datetime fields in any part of "
"the system. Note that if :setting:`USE_L10N` is set to ``True``, then the "
"locale-dictated format has higher precedence and will be applied instead. "
"See :tfilter:`allowed date format strings <date>`."
msgstr ""

# ccfaa6d7c97a4b8098c78bab6f770a46
#: ../../ref/settings.txt:734
msgid ""
"See also :setting:`DATE_FORMAT`, :setting:`TIME_FORMAT` and :setting:"
"`SHORT_DATETIME_FORMAT`."
msgstr ""

# 2c9237b73f2142c0901182bfd693f91d
#: ../../ref/settings.txt:739
msgid "DATETIME_INPUT_FORMATS"
msgstr ""

# 8925a8cc95034478860bea892b373d70
#: ../../ref/settings.txt:749
msgid ""
"A tuple of formats that will be accepted when inputting data on a datetime "
"field. Formats will be tried in order, using the first valid one. Note that "
"these format strings use Python's datetime_ module syntax, not the format "
"strings from the ``date`` Django template tag."
msgstr ""

# 41efbaeba2b64d3fb6e3a27576924f4f
#: ../../ref/settings.txt:757
msgid ""
"See also :setting:`DATE_INPUT_FORMATS` and :setting:`TIME_INPUT_FORMATS`."
msgstr ""

# 2d9606a0f0bf469ba426f9ac4a60f86e
#: ../../ref/settings.txt:764
msgid "DEBUG"
msgstr ""

# 32a6185b53bc429cadcdf0bdc7ca4c93
#: ../../ref/settings.txt:768
msgid "A boolean that turns on/off debug mode."
msgstr ""

# 2396d778c9df40e4b286bb854f54caed
#: ../../ref/settings.txt:770
msgid "Never deploy a site into production with :setting:`DEBUG` turned on."
msgstr ""

# 354df96bcfb54988b95f1c12e29a16df
#: ../../ref/settings.txt:772
msgid ""
"Did you catch that? NEVER deploy a site into production with :setting:"
"`DEBUG` turned on."
msgstr ""

# b337c550680a42fa85d5933e3f00b6eb
#: ../../ref/settings.txt:775
msgid ""
"One of the main features of debug mode is the display of detailed error "
"pages. If your app raises an exception when ``DEBUG`` is ``True``, Django "
"will display a detailed traceback, including a lot of metadata about your "
"environment, such as all the currently defined Django settings (from "
"``settings.py``)."
msgstr ""

# dee99e39d2a94d98b5ee7f3d34958ac7
#: ../../ref/settings.txt:780
msgid ""
"As a security measure, Django will *not* include settings that might be "
"sensitive (or offensive), such as ``SECRET_KEY`` or ``PROFANITIES_LIST``. "
"Specifically, it will exclude any setting whose name includes any of the "
"following:"
msgstr ""

# 0c366276f07345c48cfb5d8a776ac04d
#: ../../ref/settings.txt:785
msgid "API"
msgstr ""

# dc3652bbfd0948eba4b427750e27af16
#: ../../ref/settings.txt:786
msgid "KEY"
msgstr ""

# cd97c497e9164d05b9bfe196ee56c832
#: ../../ref/settings.txt:787
msgid "PASS"
msgstr ""

# 92374be1e4ae4103b524fd60d71470c9
# 4d4f8218d6444e3a96d7314b0d92ded9
#: ../../ref/settings.txt:788 ../../ref/settings.txt:1549
msgid "PROFANITIES_LIST"
msgstr ""

# 403f9a62f6dc4e14987025378ad481e2
#: ../../ref/settings.txt:789
msgid "SECRET"
msgstr ""

# 41b3ff4bdd5c4bcbb275b28978f3cf2b
#: ../../ref/settings.txt:790
msgid "SIGNATURE"
msgstr ""

# 68f53ec83d0248a8b19b89c2d9e4527a
#: ../../ref/settings.txt:791
msgid "TOKEN"
msgstr ""

# ec34617f434c4116ae8dc69ba7e9c28f
#: ../../ref/settings.txt:798
msgid ""
"Note that these are *partial* matches. ``'PASS'`` will also match PASSWORD, "
"just as ``'TOKEN'`` will also match TOKENIZED and so on."
msgstr ""

# fcf0571e340649ecb0fc09d2c5c66023
#: ../../ref/settings.txt:801
msgid ""
"Still, note that there are always going to be sections of your debug output "
"that are inappropriate for public consumption. File paths, configuration "
"options and the like all give attackers extra information about your server."
msgstr ""

# 64b0975146a244dea52ea7a203706a0d
#: ../../ref/settings.txt:805
msgid ""
"It is also important to remember that when running with :setting:`DEBUG` "
"turned on, Django will remember every SQL query it executes. This is useful "
"when you're debugging, but it'll rapidly consume memory on a production "
"server."
msgstr ""

# e775ba9875be46d698bf269913c838b6
#: ../../ref/settings.txt:812
msgid "DEBUG_PROPAGATE_EXCEPTIONS"
msgstr ""

# 75042cad113949c98efe4c6496ddf082
#: ../../ref/settings.txt:816
msgid ""
"If set to True, Django's normal exception handling of view functions will be "
"suppressed, and exceptions will propagate upwards.  This can be useful for "
"some test setups, and should never be used on a live site."
msgstr ""

# 546294bf9dc343c49caa21c82bd95944
#: ../../ref/settings.txt:824
msgid "DECIMAL_SEPARATOR"
msgstr ""

# b611899ae9a341e49e1103fc75b67ead
#: ../../ref/settings.txt:828
msgid "Default: ``'.'`` (Dot)"
msgstr ""

# 982f0215d2704a268717502208627e0b
#: ../../ref/settings.txt:830
msgid "Default decimal separator used when formatting decimal numbers."
msgstr ""

# e096d40da2824930abf5568d5ec6b618
# 467130974fb94299a35e1278e64a2bcb
# ac959baf101d433c84ccf6ab5041831c
#: ../../ref/settings.txt:832 ../../ref/settings.txt:1519
#: ../../ref/settings.txt:2052
msgid ""
"Note that if :setting:`USE_L10N` is set to ``True``, then the locale-"
"dictated format has higher precedence and will be applied instead."
msgstr ""

# dbaa1addeb0746bd8c68a5ec994faeb0
#: ../../ref/settings.txt:835
msgid ""
"See also :setting:`NUMBER_GROUPING`, :setting:`THOUSAND_SEPARATOR` and :"
"setting:`USE_THOUSAND_SEPARATOR`."
msgstr ""

# 49fa6fd08cf943f0a7171f90f4e30667
#: ../../ref/settings.txt:842
msgid "DEFAULT_CHARSET"
msgstr ""

# 110685adb7134ec2987e03830a437de3
# 844d9459ab414053a089410a3d63242f
#: ../../ref/settings.txt:844 ../../ref/settings.txt:1018
msgid "Default: ``'utf-8'``"
msgstr ""

# 054eb5704a2f4192a3ecd18f27fde91f
#: ../../ref/settings.txt:846
msgid ""
"Default charset to use for all ``HttpResponse`` objects, if a MIME type "
"isn't manually specified. Used with :setting:`DEFAULT_CONTENT_TYPE` to "
"construct the ``Content-Type`` header."
msgstr ""

# 16ff99ac1ab740e8a5fb6e6af042f3c6
#: ../../ref/settings.txt:853
msgid "DEFAULT_CONTENT_TYPE"
msgstr ""

# c8f79fb8a2044685a4b782c7bf252d54
#: ../../ref/settings.txt:855
msgid "Default: ``'text/html'``"
msgstr ""

# 45c0ccaa39ed4da0982e23d663ba7a9c
#: ../../ref/settings.txt:857
msgid ""
"Default content type to use for all ``HttpResponse`` objects, if a MIME type "
"isn't manually specified. Used with :setting:`DEFAULT_CHARSET` to construct "
"the ``Content-Type`` header."
msgstr ""

# 4f47ad82931b47a29941a768f13fdae7
#: ../../ref/settings.txt:864
msgid "DEFAULT_EXCEPTION_REPORTER_FILTER"
msgstr ""

# 5a06684f178840409e37efbcc466165e
#: ../../ref/settings.txt:866
msgid "Default: :class:`django.views.debug.SafeExceptionReporterFilter`"
msgstr ""

# cc8b1f5523254456b03f9b5dd7743934
#: ../../ref/settings.txt:868
msgid ""
"Default exception reporter filter class to be used if none has been assigned "
"to the :class:`HttpRequest` instance yet. See :ref:`Filtering error "
"reports<filtering-error-reports>`."
msgstr ""

# f7dcdab113e34dcdb1cbe458d4b31613
#: ../../ref/settings.txt:875
msgid "DEFAULT_FILE_STORAGE"
msgstr ""

# ee6a2df6eaf74b039331289ecfc6dd12
#: ../../ref/settings.txt:877
msgid "Default: :class:`django.core.files.storage.FileSystemStorage`"
msgstr ""

# d557adf981be448f8ff98a2bd1817c1b
#: ../../ref/settings.txt:879
msgid ""
"Default file storage class to be used for any file-related operations that "
"don't specify a particular storage system. See :doc:`/topics/files`."
msgstr ""

# 7d5b2565b3df443fba9d55363262ecc5
#: ../../ref/settings.txt:885
msgid "DEFAULT_FROM_EMAIL"
msgstr ""

# acb032560f4f4975ab8b9550d49bc9bd
#: ../../ref/settings.txt:887
msgid "Default: ``'webmaster@localhost'``"
msgstr ""

# 90e07b877adc40bf9c88b88e8fcfaca5
#: ../../ref/settings.txt:889
msgid ""
"Default email address to use for various automated correspondence from the "
"site manager(s)."
msgstr ""

# f1b734eadfc24a739623001fd46280e7
#: ../../ref/settings.txt:895
msgid "DEFAULT_INDEX_TABLESPACE"
msgstr ""

# e493b179b98e432d88d7c2826306769d
#: ../../ref/settings.txt:899
msgid ""
"Default tablespace to use for indexes on fields that don't specify one, if "
"the backend supports it (see :doc:`/topics/db/tablespaces`)."
msgstr ""

# 646c4c85b82b4155854569f3d15a80e3
#: ../../ref/settings.txt:905
msgid "DEFAULT_TABLESPACE"
msgstr ""

# e6cd03db25704cd5b379dda610792634
#: ../../ref/settings.txt:909
msgid ""
"Default tablespace to use for models that don't specify one, if the backend "
"supports it (see :doc:`/topics/db/tablespaces`)."
msgstr ""

# 95274dc30f03497f848a450cb7e73a9f
#: ../../ref/settings.txt:915
msgid "DISALLOWED_USER_AGENTS"
msgstr ""

# ac002400e3664c6181e9268f44d8f179
#: ../../ref/settings.txt:919
msgid ""
"List of compiled regular expression objects representing User-Agent strings "
"that are not allowed to visit any page, systemwide. Use this for bad robots/"
"crawlers. This is only used if ``CommonMiddleware`` is installed (see :doc:`/"
"topics/http/middleware`)."
msgstr ""

# ac9bba104c6248ff83c2b8c7b95f3360
#: ../../ref/settings.txt:927
msgid "EMAIL_BACKEND"
msgstr ""

# 60cbd535edce4e48bf426da25b3d69cd
#: ../../ref/settings.txt:931
msgid "Default: ``'django.core.mail.backends.smtp.EmailBackend'``"
msgstr ""

# 01df3298773347feb6e3dac87bc6f23c
#: ../../ref/settings.txt:933
msgid ""
"The backend to use for sending emails. For the list of available backends "
"see :doc:`/topics/email`."
msgstr ""

# f6b61fadd9534aa0b3f74e367c82a640
#: ../../ref/settings.txt:939
msgid "EMAIL_FILE_PATH"
msgstr ""

# acceabd184bc40c1a6b708184b7bd335
#: ../../ref/settings.txt:945
msgid "The directory used by the ``file`` email backend to store output files."
msgstr ""

# 24fb93b8f30340ab8c4a9adde910c754
#: ../../ref/settings.txt:950
msgid "EMAIL_HOST"
msgstr ""

# c1921051d79949c186aa2e78a4bb4b03
#: ../../ref/settings.txt:952
msgid "Default: ``'localhost'``"
msgstr ""

# 41be8e886a71469cbecb8e9029355980
#: ../../ref/settings.txt:954
msgid "The host to use for sending email."
msgstr ""

# ffb509723bd941b69fd34ffe22ce4ffb
#: ../../ref/settings.txt:956
msgid "See also :setting:`EMAIL_PORT`."
msgstr ""

# 054e9dd9dbd447328bb4434196133f19
#: ../../ref/settings.txt:961
msgid "EMAIL_HOST_PASSWORD"
msgstr ""

# e2991b86640d41ac88910e57e61510a0
#: ../../ref/settings.txt:965
msgid ""
"Password to use for the SMTP server defined in :setting:`EMAIL_HOST`. This "
"setting is used in conjunction with :setting:`EMAIL_HOST_USER` when "
"authenticating to the SMTP server. If either of these settings is empty, "
"Django won't attempt authentication."
msgstr ""

# eed1916cf95f4c5295f6721b9c3066d9
#: ../../ref/settings.txt:970
msgid "See also :setting:`EMAIL_HOST_USER`."
msgstr ""

# f18cfd6fd0a6413bbf0c1452f6f8e963
#: ../../ref/settings.txt:975
msgid "EMAIL_HOST_USER"
msgstr ""

# 721d88c2670e4d9faa601edff869ac54
#: ../../ref/settings.txt:979
msgid ""
"Username to use for the SMTP server defined in :setting:`EMAIL_HOST`. If "
"empty, Django won't attempt authentication."
msgstr ""

# e9978257ce5749a9a2f6e84fd9138b66
#: ../../ref/settings.txt:982
msgid "See also :setting:`EMAIL_HOST_PASSWORD`."
msgstr ""

# 076d4d4f845e477c8177486004ec2209
#: ../../ref/settings.txt:987
msgid "EMAIL_PORT"
msgstr ""

# 02928f47d03540ab960dc8a12e992bcf
#: ../../ref/settings.txt:989
msgid "Default: ``25``"
msgstr ""

# f2ab7eda0e4047f3bcb9dea8246f90e1
#: ../../ref/settings.txt:991
msgid "Port to use for the SMTP server defined in :setting:`EMAIL_HOST`."
msgstr ""

# 419a40d818dc4484bc4206796dbb321f
#: ../../ref/settings.txt:996
msgid "EMAIL_SUBJECT_PREFIX"
msgstr ""

# b9052761459e4f7d99909e47c229807c
#: ../../ref/settings.txt:998
msgid "Default: ``'[Django] '``"
msgstr ""

# 22eda788b79a41f0ae3dc43673593965
#: ../../ref/settings.txt:1000
msgid ""
"Subject-line prefix for email messages sent with ``django.core.mail."
"mail_admins`` or ``django.core.mail.mail_managers``. You'll probably want to "
"include the trailing space."
msgstr ""

# c89205438b7548b5bb62ebeff6ef0028
#: ../../ref/settings.txt:1007
msgid "EMAIL_USE_TLS"
msgstr ""

# 8134a3838c4040e38b4bb4dbee619bb5
#: ../../ref/settings.txt:1011
msgid ""
"Whether to use a TLS (secure) connection when talking to the SMTP server."
msgstr ""

# 1e98723481cb486793a6398ce9df0873
#: ../../ref/settings.txt:1016
msgid "FILE_CHARSET"
msgstr ""

# c4b7b8e88ce34ef2bc77946b6235d29c
#: ../../ref/settings.txt:1020
msgid ""
"The character encoding used to decode any files read from disk. This "
"includes template files and initial SQL data files."
msgstr ""

# 8ca7c53acf014214ba0f14b692916406
#: ../../ref/settings.txt:1026
msgid "FILE_UPLOAD_HANDLERS"
msgstr ""

# a703d702b1ec4ebf9264ca656a8be781
#: ../../ref/settings.txt:1033
msgid ""
"A tuple of handlers to use for uploading. See :doc:`/topics/files` for "
"details."
msgstr ""

# 7d3bf0823f38416cbcf2b2ce6b0cfd36
#: ../../ref/settings.txt:1038
msgid "FILE_UPLOAD_MAX_MEMORY_SIZE"
msgstr ""

# 4a4c1088c27c4816bb4cd00f3a2feab3
#: ../../ref/settings.txt:1040
msgid "Default: ``2621440`` (i.e. 2.5 MB)."
msgstr ""

# 4d7f586c5f1747659946ae5d7b5dbd79
#: ../../ref/settings.txt:1042
msgid ""
"The maximum size (in bytes) that an upload will be before it gets streamed "
"to the file system. See :doc:`/topics/files` for details."
msgstr ""

# 6e5f9842015e4f69b9f2dc64385681a4
#: ../../ref/settings.txt:1048
msgid "FILE_UPLOAD_PERMISSIONS"
msgstr ""

# 9c9b60211632490abebbad9b7ff5b124
#: ../../ref/settings.txt:1052
msgid ""
"The numeric mode (i.e. ``0644``) to set newly uploaded files to. For more "
"information about what these modes mean, see the documentation for :func:`os."
"chmod`."
msgstr ""

# 379ec848cf724c58a765f7c97792f770
#: ../../ref/settings.txt:1056
msgid ""
"If this isn't given or is ``None``, you'll get operating-system dependent "
"behavior. On most platforms, temporary files will have a mode of ``0600``, "
"and files saved from memory will be saved using the system's standard umask."
msgstr ""

# 19cc404770bc44e8871aabe77725624b
#: ../../ref/settings.txt:1063
msgid "**Always prefix the mode with a 0.**"
msgstr ""

# 42c099dd43c648aca6a65cc4240dcb69
#: ../../ref/settings.txt:1065
msgid ""
"If you're not familiar with file modes, please note that the leading ``0`` "
"is very important: it indicates an octal number, which is the way that modes "
"must be specified. If you try to use ``644``, you'll get totally incorrect "
"behavior."
msgstr ""

# bd10366890f64580ba7d708486258e06
#: ../../ref/settings.txt:1074
msgid "FILE_UPLOAD_TEMP_DIR"
msgstr ""

# 135aa6512b284715b9109979da62a27a
#: ../../ref/settings.txt:1078
msgid ""
"The directory to store data temporarily while uploading files. If ``None``, "
"Django will use the standard temporary directory for the operating system. "
"For example, this will default to '/tmp' on \\*nix-style operating systems."
msgstr ""

# a73fc8b6b6b9461fbfdab4e9043a4f39
#: ../../ref/settings.txt:1082
msgid "See :doc:`/topics/files` for details."
msgstr ""

# 9c7b76de34e94a8399a243b66fddcab3
#: ../../ref/settings.txt:1087
msgid "FIRST_DAY_OF_WEEK"
msgstr ""

# b509b4d923a74548a7cfea0e8c507467
#: ../../ref/settings.txt:1091
msgid "Default: ``0`` (Sunday)"
msgstr ""

# f083b95c00b342b4ad455fc10ebc1174
#: ../../ref/settings.txt:1093
msgid ""
"Number representing the first day of the week. This is especially useful "
"when displaying a calendar. This value is only used when not using format "
"internationalization, or when a format cannot be found for the current "
"locale."
msgstr ""

# 2044e486024741eeadafd10224bc9c2b
#: ../../ref/settings.txt:1098
msgid ""
"The value must be an integer from 0 to 6, where 0 means Sunday, 1 means "
"Monday and so on."
msgstr ""

# 1545acc54c9f4974a639feda907d76e1
#: ../../ref/settings.txt:1104
msgid "FIXTURE_DIRS"
msgstr ""

# 08dbe45c7fcf4f0ba630e00c805718e4
#: ../../ref/settings.txt:1108
msgid ""
"List of directories searched for fixture files, in addition to the "
"``fixtures`` directory of each application, in search order."
msgstr ""

# afc6d620501746e999f9da20960bcacc
# a0e43c7914084c4fa0ae4e8bdb79da7c
# 790fc8222a30460988d700c58d58d0b0
#: ../../ref/settings.txt:1111 ../../ref/settings.txt:1988
#: ../../ref/templates/api.txt:568
msgid ""
"Note that these paths should use Unix-style forward slashes, even on Windows."
msgstr ""

# 948849e22b56410fa26981aad793f6c5
#: ../../ref/settings.txt:1113
msgid ""
"See :ref:`initial-data-via-fixtures` and :ref:`topics-testing-fixtures`."
msgstr ""

# 0b08d0616cda454ba1689c483c71e30c
#: ../../ref/settings.txt:1116
msgid "FORCE_SCRIPT_NAME"
msgstr ""

# f4894798023345bd82c92e20393bb7f3
#: ../../ref/settings.txt:1120
msgid ""
"If not ``None``, this will be used as the value of the ``SCRIPT_NAME`` "
"environment variable in any HTTP request. This setting can be used to "
"override the server-provided value of ``SCRIPT_NAME``, which may be a "
"rewritten version of the preferred value or not supplied at all."
msgstr ""

# a3a399e2b4cd402ebe77d4b1fb0fdd3b
#: ../../ref/settings.txt:1128
msgid "FORMAT_MODULE_PATH"
msgstr ""

# 1100994ad8d14b4a88329459e8bad7ee
#: ../../ref/settings.txt:1134
msgid ""
"A full Python path to a Python package that contains format definitions for "
"project locales. If not ``None``, Django will check for a ``formats.py`` "
"file, under the directory named as the current locale, and will use the "
"formats defined on this file."
msgstr ""

# ad19d8fae65948fab827e874fbb483b2
#: ../../ref/settings.txt:1139
msgid ""
"For example, if :setting:`FORMAT_MODULE_PATH` is set to ``mysite.formats``, "
"and current language is ``en`` (English), Django will expect a directory "
"tree like::"
msgstr ""

# 503038e6af57419b8e9b16989343f2f1
#: ../../ref/settings.txt:1150
msgid ""
"Available formats are :setting:`DATE_FORMAT`, :setting:`TIME_FORMAT`, :"
"setting:`DATETIME_FORMAT`, :setting:`YEAR_MONTH_FORMAT`, :setting:"
"`MONTH_DAY_FORMAT`, :setting:`SHORT_DATE_FORMAT`, :setting:"
"`SHORT_DATETIME_FORMAT`, :setting:`FIRST_DAY_OF_WEEK`, :setting:"
"`DECIMAL_SEPARATOR`, :setting:`THOUSAND_SEPARATOR` and :setting:"
"`NUMBER_GROUPING`."
msgstr ""

# e6d6701cab034d579f1a76c3d9007ce8
#: ../../ref/settings.txt:1160
msgid "IGNORABLE_404_URLS"
msgstr ""

# d43f5da7dca8454d976752e4080a5faf
#: ../../ref/settings.txt:1164
msgid "Default: ``()``"
msgstr ""

# 881af4e0c72c4af499e905a91db278bd
#: ../../ref/settings.txt:1166
msgid ""
"List of compiled regular expression objects describing URLs that should be "
"ignored when reporting HTTP 404 errors via email (see :doc:`/howto/error-"
"reporting`). Use this if your site does not provide a commonly requested "
"file such as ``favicon.ico`` or ``robots.txt``, or if it gets hammered by "
"script kiddies."
msgstr ""

# f0c8cf8a36214606952ac4ffb04c5c40
#: ../../ref/settings.txt:1172
msgid ""
"This is only used if :setting:`SEND_BROKEN_LINK_EMAILS` is set to ``True`` "
"and ``CommonMiddleware`` is installed (see :doc:`/topics/http/middleware`)."
msgstr ""

# 85046b7c319b4bc6936cbadf97840dd2
#: ../../ref/settings.txt:1178
msgid "INSTALLED_APPS"
msgstr ""

# 33b5a1a08e0048bbbfe3143506ff36e0
#: ../../ref/settings.txt:1182
msgid ""
"A tuple of strings designating all applications that are enabled in this "
"Django installation. Each string should be a full Python path to a Python "
"package that contains a Django application, as created by :djadmin:`django-"
"admin.py startapp <startapp>`."
msgstr ""

# 6dd789ef2a544dd48eeb0a8417100fa2
#: ../../ref/settings.txt:1189
msgid ""
"The application names (that is, the final dotted part of the path to the "
"module containing ``models.py``) defined in :setting:`INSTALLED_APPS` *must* "
"be unique. For example, you can't include both ``django.contrib.auth`` and "
"``myproject.auth`` in INSTALLED_APPS."
msgstr ""

# 75a629fead4b4aa2b777b959e0bdedac
#: ../../ref/settings.txt:1198
msgid "INTERNAL_IPS"
msgstr ""

# d325c0bff8124429a04a251d65e15a35
#: ../../ref/settings.txt:1202
msgid "A tuple of IP addresses, as strings, that:"
msgstr ""

# 9b5bbfe37adf47a5ad64ddf5ddc54820
#: ../../ref/settings.txt:1204
msgid "See debug comments, when :setting:`DEBUG` is ``True``"
msgstr ""

# a8b69ee8d9e140499f3b5a1c478711a3
#: ../../ref/settings.txt:1205
msgid ""
"Receive X headers if the ``XViewMiddleware`` is installed (see :doc:`/topics/"
"http/middleware`)"
msgstr ""

# 431646a1f1de49fdb0bcbb7704f7cfbe
#: ../../ref/settings.txt:1211
msgid "LANGUAGE_CODE"
msgstr ""

# a1586ffa27c94c5188bd9fb01e185982
#: ../../ref/settings.txt:1213
msgid "Default: ``'en-us'``"
msgstr ""

# 8f940c04555c411799265fa4dd8ab099
#: ../../ref/settings.txt:1215
msgid ""
"A string representing the language code for this installation. This should "
"be in standard :term:`language format<language code>`. For example, U.S. "
"English is ``\"en-us\"``. See :doc:`/topics/i18n/index`."
msgstr ""

# a6b31fc1ba414227b81151309b7713a1
#: ../../ref/settings.txt:1222
msgid "LANGUAGE_COOKIE_NAME"
msgstr ""

# 2caa634ee29f4db6a3aeb7d0a29491df
#: ../../ref/settings.txt:1224
msgid "Default: ``'django_language'``"
msgstr ""

# 9f96e3652d004d59be7eea7882c493b5
#: ../../ref/settings.txt:1226
msgid ""
"The name of the cookie to use for the language cookie. This can be whatever "
"you want (but should be different from :setting:`SESSION_COOKIE_NAME`). See :"
"doc:`/topics/i18n/index`."
msgstr ""

# eaf086dfbd2e49bca6d6dca9f3e258a0
#: ../../ref/settings.txt:1233
msgid "LANGUAGES"
msgstr ""

# bd01cc44041d4be3a2bfcba1b5e3ddce
#: ../../ref/settings.txt:1235
msgid ""
"Default: A tuple of all available languages. This list is continually "
"growing and including a copy here would inevitably become rapidly out of "
"date. You can see the current list of translated languages by looking in "
"``django/conf/global_settings.py`` (or view the `online source`_)."
msgstr ""

# 7f3b8667680449e5a2c1da533a29eb94
#: ../../ref/settings.txt:1242
msgid ""
"The list is a tuple of two-tuples in the format ``(language code, language "
"name)``, the ``language code`` part should be a :term:`language "
"name<language code>` -- for example, ``('ja', 'Japanese')``. This specifies "
"which languages are available for language selection. See :doc:`/topics/i18n/"
"index`."
msgstr ""

# f4997a0fe93d47788743571db1bcd4e9
#: ../../ref/settings.txt:1248
msgid ""
"Generally, the default value should suffice. Only set this setting if you "
"want to restrict language selection to a subset of the Django-provided "
"languages."
msgstr ""

# 5ac657e9e9c54b52948de43ccfc2e2b8
#: ../../ref/settings.txt:1251
msgid ""
"If you define a custom :setting:`LANGUAGES` setting, it's OK to mark the "
"languages as translation strings (as in the default value referred to above) "
"-- but use a \"dummy\" ``gettext()`` function, not the one in ``django.utils."
"translation``. You should *never* import ``django.utils.translation`` from "
"within your settings file, because that module in itself depends on the "
"settings, and that would cause a circular import."
msgstr ""

# 6c0ca5866704453eb7bfee8929903c50
#: ../../ref/settings.txt:1259
msgid ""
"The solution is to use a \"dummy\" ``gettext()`` function. Here's a sample "
"settings file::"
msgstr ""

# 743a6755371c4a06b461d89d8c471e08
#: ../../ref/settings.txt:1269
msgid ""
"With this arrangement, ``django-admin.py makemessages`` will still find and "
"mark these strings for translation, but the translation won't happen at "
"runtime -- so you'll have to remember to wrap the languages in the *real* "
"``gettext()`` in any code that uses :setting:`LANGUAGES` at runtime."
msgstr ""

# d44cad19170e4bdf8699610151edc122
#: ../../ref/settings.txt:1277
msgid "LOCALE_PATHS"
msgstr ""

# cb9265840ce145a9bb5a986144da8408
#: ../../ref/settings.txt:1281
msgid ""
"A tuple of directories where Django looks for translation files. See :ref:"
"`how-django-discovers-translations`."
msgstr ""

# 86a6f64ec63a443882188e288c328d03
#: ../../ref/settings.txt:1291
msgid ""
"Note that in the paths you add to the value of this setting, if you have the "
"typical ``/path/to/locale/xx/LC_MESSAGES`` hierarchy, you should use the "
"path to the ``locale`` directory (i.e. ``'/path/to/locale'``)."
msgstr ""

# 8e10b014ff6845ce86ec346549be09b3
#: ../../ref/settings.txt:1298
msgid "LOGGING"
msgstr ""

# 04bc2e44474f455fa2b89821344e51d9
#: ../../ref/settings.txt:1302
msgid "Default: A logging configuration dictionary."
msgstr ""

# 90ecede3b6a642aea5a8d05e82a7b0f0
#: ../../ref/settings.txt:1304
msgid ""
"A data structure containing configuration information. The contents of this "
"data structure will be passed as the argument to the configuration method "
"described in :setting:`LOGGING_CONFIG`."
msgstr ""

# 4ee177a7bae04e3c807bef5baf5eaace
#: ../../ref/settings.txt:1308
msgid ""
"The default logging configuration passes HTTP 500 server errors to an email "
"log handler; all other log messages are given to a NullHandler."
msgstr ""

# 91b45b88d41541e5abd6aa12114186a0
#: ../../ref/settings.txt:1314
msgid "LOGGING_CONFIG"
msgstr ""

# 96d49fcbc0f44767ab807168ebf1451b
#: ../../ref/settings.txt:1318
msgid "Default: ``'django.utils.log.dictConfig'``"
msgstr ""

# 61c9ae35b47a4dda8a8c5043d81c9422
#: ../../ref/settings.txt:1320
msgid ""
"A path to a callable that will be used to configure logging in the Django "
"project. Points at a instance of Python's `dictConfig`_ configuration method "
"by default."
msgstr ""

# 5227886cd07c468fbed424d25daf8f50
#: ../../ref/settings.txt:1324
msgid ""
"If you set :setting:`LOGGING_CONFIG` to ``None``, the logging configuration "
"process will be skipped."
msgstr ""

# eb967f14848747dcb0179ab93dd5d3ca
#: ../../ref/settings.txt:1332
msgid "LOGIN_REDIRECT_URL"
msgstr ""

# 9f2d5aed8ab149518b1110a36c482891
#: ../../ref/settings.txt:1334
msgid "Default: ``'/accounts/profile/'``"
msgstr ""

# 03c6a6c495bd4f33987eee67ba9ffde5
#: ../../ref/settings.txt:1336
msgid ""
"The URL where requests are redirected after login when the ``contrib.auth."
"login`` view gets no ``next`` parameter."
msgstr ""

# 84c1663748ea4fadac2d4b999a8671d1
#: ../../ref/settings.txt:1339
msgid ""
"This is used by the :func:`~django.contrib.auth.decorators.login_required` "
"decorator, for example."
msgstr ""

# f79621435b8e4e7684c487ba0ea52d19
#: ../../ref/settings.txt:1345
msgid ""
"You can use :func:`~django.core.urlresolvers.reverse_lazy` to reference URLs "
"by their name instead of providing a hardcoded value. Assuming a ``urls.py`` "
"with an URLpattern named ``home``::"
msgstr ""

# 4660fb4d7269408687f1732e5215a240
#: ../../ref/settings.txt:1353
msgid "You can use :func:`~django.core.urlresolvers.reverse_lazy` like this::"
msgstr ""

# 91beb06b88fa497086ac5388e8b92ef6
#: ../../ref/settings.txt:1359
msgid ""
"This also works fine with localized URLs using :func:`~django.conf.urls.i18n."
"i18n_patterns`."
msgstr ""

# f7193b587a5f4cffaf6ab6f0248d31bb
#: ../../ref/settings.txt:1365
msgid "LOGIN_URL"
msgstr ""

# f672db328f344f7eb53b835442b198c9
#: ../../ref/settings.txt:1367
msgid "Default: ``'/accounts/login/'``"
msgstr ""

# 8f03de1fb09e44fc9e9d1984a46c1d9c
#: ../../ref/settings.txt:1369
msgid ""
"The URL where requests are redirected for login, especially when using the :"
"func:`~django.contrib.auth.decorators.login_required` decorator."
msgstr ""

# b5750ab6adaa4a37bb434884fad92d97
# e668dc2c5ded48a993b54b97ecc6a07e
#: ../../ref/settings.txt:1373 ../../ref/settings.txt:1385
msgid "See the `note on LOGIN_REDIRECT_URL setting`_"
msgstr ""

# f577065923344a878401631de2e8c3e0
#: ../../ref/settings.txt:1378
msgid "LOGOUT_URL"
msgstr ""

# 473d9333db6e44b191cd5dd7b4ba6713
#: ../../ref/settings.txt:1380
msgid "Default: ``'/accounts/logout/'``"
msgstr ""

# 6c357b0cbdac451daab134375002f0e3
#: ../../ref/settings.txt:1382
msgid "LOGIN_URL counterpart."
msgstr ""

# 8bda5154a713430abe4a459b21bf174a
#: ../../ref/settings.txt:1390
msgid "MANAGERS"
msgstr ""

# 6852608eebd44a88a411c1df2acda167
#: ../../ref/settings.txt:1394
msgid ""
"A tuple in the same format as :setting:`ADMINS` that specifies who should "
"get broken-link notifications when ``SEND_BROKEN_LINK_EMAILS=True``."
msgstr ""

# b08d620789c54593b3b1f2e6f2f6c6fb
#: ../../ref/settings.txt:1400
msgid "MEDIA_ROOT"
msgstr ""

# 9b37d9be9cab49a88406563398a16f25
#: ../../ref/settings.txt:1404
msgid ""
"Absolute path to the directory that holds media for this installation, used "
"for :doc:`managing stored files </topics/files>`."
msgstr ""

# 98c6916a7ec043de9935e354b60be180
#: ../../ref/settings.txt:1407
msgid "Example: ``\"/home/media/media.lawrence.com/\"``"
msgstr ""

# 4b08c7cd75fa408185cd3bf7841ae0fb
#: ../../ref/settings.txt:1409
msgid "See also :setting:`MEDIA_URL`."
msgstr ""

# 9dc5851cf1b94a0591ab171419eb36bd
#: ../../ref/settings.txt:1414
msgid "MEDIA_URL"
msgstr ""

# 9aabaeb4753748f188eb80d2af595b3e
#: ../../ref/settings.txt:1418
msgid ""
"URL that handles the media served from :setting:`MEDIA_ROOT`, used for :doc:"
"`managing stored files </topics/files>`."
msgstr ""

# a2b4e75201bd4ac8a7d94e521f9974d5
#: ../../ref/settings.txt:1421
msgid "Example: ``\"http://media.lawrence.com/\"``"
msgstr ""

# fb976501970d4cf5ad0bd4c33047ceab
#: ../../ref/settings.txt:1431
msgid "Default: `messages.INFO`"
msgstr ""

# c12bae05325c4ab1a56c6708ca1fdb89
#: ../../ref/settings.txt:1433
msgid ""
"Sets the minimum message level that will be recorded by the messages "
"framework. See the :doc:`messages documentation </ref/contrib/messages>` for "
"more details."
msgstr ""

# 9e599e384ed54b038ae1f08ed78c3da0
#: ../../ref/settings.txt:1442
msgid ""
"Default: ``'django.contrib.messages.storage.user_messages."
"LegacyFallbackStorage'``"
msgstr ""

# 506451aa184e4e219981058f2055e0d5
#: ../../ref/settings.txt:1444
msgid ""
"Controls where Django stores message data.  See the :doc:`messages "
"documentation </ref/contrib/messages>` for more details."
msgstr ""

# aee9949213ca4b8080feb298318bfa44
#: ../../ref/settings.txt:1460
msgid ""
"Sets the mapping of message levels to message tags. See the :doc:`messages "
"documentation </ref/contrib/messages>` for more details."
msgstr ""

# 16aff6a1b94e44d9a5560e6991d06712
#: ../../ref/settings.txt:1466
msgid "MIDDLEWARE_CLASSES"
msgstr ""

# 1cfbfcb9b939411ca0cce879d9d508d4
#: ../../ref/settings.txt:1476
msgid ""
"A tuple of middleware classes to use. See :doc:`/topics/http/middleware`."
msgstr ""

# f168eb352d09460b9c667cd272700251
#: ../../ref/settings.txt:1486
msgid "MONTH_DAY_FORMAT"
msgstr ""

# 4d933bca51c449d095069b1295384d9d
#: ../../ref/settings.txt:1488
msgid "Default: ``'F j'``"
msgstr ""

# 91aa3afafd09474e9ea3e26beffb8b06
#: ../../ref/settings.txt:1490
msgid ""
"The default formatting to use for date fields on Django admin change-list "
"pages -- and, possibly, by other parts of the system -- in cases when only "
"the month and day are displayed."
msgstr ""

# a50aa95503994b70b2b14682a0a31394
#: ../../ref/settings.txt:1494
msgid ""
"For example, when a Django admin change-list page is being filtered by a "
"date drilldown, the header for a given day displays the day and month. "
"Different locales have different formats. For example, U.S. English would "
"say \"January 1,\" whereas Spanish might say \"1 Enero.\""
msgstr ""

# 1d80bbfffd814f6b9fca760b2ca33122
#: ../../ref/settings.txt:1499
msgid ""
"See :tfilter:`allowed date format strings <date>`. See also :setting:"
"`DATE_FORMAT`, :setting:`DATETIME_FORMAT`, :setting:`TIME_FORMAT` and :"
"setting:`YEAR_MONTH_FORMAT`."
msgstr ""

# 8ec385a0c8304d5696d97e8f8f465a1e
#: ../../ref/settings.txt:1506
msgid "NUMBER_GROUPING"
msgstr ""

# 795f2adfb8a74ef59c93af55098d4525
#: ../../ref/settings.txt:1510
msgid "Default: ``0``"
msgstr ""

# 8b5ac6b6f47041dab5afaf5ac5973406
#: ../../ref/settings.txt:1512
msgid "Number of digits grouped together on the integer part of a number."
msgstr ""

# 4c7a02fb07d3431499e85e851cbae101
#: ../../ref/settings.txt:1514
msgid ""
"Common use is to display a thousand separator. If this setting is ``0``, "
"then no grouping will be applied to the number. If this setting is greater "
"than ``0``, then :setting:`THOUSAND_SEPARATOR` will be used as the separator "
"between those groups."
msgstr ""

# 20a61817e1154d3a9415cba3d3999769
#: ../../ref/settings.txt:1522
msgid ""
"See also :setting:`DECIMAL_SEPARATOR`, :setting:`THOUSAND_SEPARATOR` and :"
"setting:`USE_THOUSAND_SEPARATOR`."
msgstr ""

# d40da63186894d93861e02e3d5465fe5
#: ../../ref/settings.txt:1528
msgid "PASSWORD_RESET_TIMEOUT_DAYS"
msgstr ""

# 81874697e3844777ab17c86b71f551c7
#: ../../ref/settings.txt:1530
msgid "Default: ``3``"
msgstr ""

# 039df1211a5d49919bc6748140e0a3d8
#: ../../ref/settings.txt:1532
msgid ""
"The number of days a password reset link is valid for. Used by the :mod:"
"`django.contrib.auth` password reset mechanism."
msgstr ""

# b9cd958efdf243379ed5720688fad555
#: ../../ref/settings.txt:1538
msgid "PREPEND_WWW"
msgstr ""

# 554da500c1ab4d239df8c0e53678ed41
#: ../../ref/settings.txt:1542
msgid ""
"Whether to prepend the \"www.\" subdomain to URLs that don't have it. This "
"is only used if :class:`~django.middleware.common.CommonMiddleware` is "
"installed (see :doc:`/topics/http/middleware`). See also :setting:"
"`APPEND_SLASH`."
msgstr ""

# 02e110a8621949d09ad1e2faf12ebf84
#: ../../ref/settings.txt:1553
msgid ""
"A tuple of profanities, as strings, that will be forbidden in comments when :"
"setting:`COMMENTS_ALLOW_PROFANITIES` is ``False``."
msgstr ""

# 348548c6faeb414bbb13f731f39870b7
#: ../../ref/settings.txt:1559
msgid "RESTRUCTUREDTEXT_FILTER_SETTINGS"
msgstr ""

# f6ea8282f57a49fab2ab94708449d751
#: ../../ref/settings.txt:1561
msgid "Default: ``{}``"
msgstr ""

# f289060872a64dde939a70f57d6c3998
#: ../../ref/settings.txt:1563
msgid ""
"A dictionary containing settings for the ``restructuredtext`` markup filter "
"from the :doc:`django.contrib.markup application </ref/contrib/markup>`. "
"They override the default writer settings. See the Docutils restructuredtext "
"`writer settings docs`_ for details."
msgstr ""

# ac46856c17e944c18c5ef2c8d63b2dbe
#: ../../ref/settings.txt:1573
msgid "ROOT_URLCONF"
msgstr ""

# 52d6cd8040f84c5bb49bb94298bfb805
#: ../../ref/settings.txt:1577
msgid ""
"A string representing the full Python import path to your root URLconf. For "
"example: ``\"mydjangoapps.urls\"``. Can be overridden on a per-request basis "
"by setting the attribute ``urlconf`` on the incoming ``HttpRequest`` object. "
"See :ref:`how-django-processes-a-request` for details."
msgstr ""

# d7b9cf58b6e54c00be47466782704525
#: ../../ref/settings.txt:1585
msgid "SECRET_KEY"
msgstr ""

# da14fcf75b3a48f0bef8f7e023d91d06
#: ../../ref/settings.txt:1589
msgid ""
"A secret key for this particular Django installation. Used to provide a seed "
"in secret-key hashing algorithms. Set this to a random string -- the longer, "
"the better. ``django-admin.py startproject`` creates one automatically."
msgstr ""

# 6fdc4a1d7d2e461583332ddbd9fcbf6e
#: ../../ref/settings.txt:1596
msgid "SECURE_PROXY_SSL_HEADER"
msgstr ""

# 860575694e8645ae92f62724d872d09c
#: ../../ref/settings.txt:1602
msgid ""
"A tuple representing a HTTP header/value combination that signifies a "
"request is secure. This controls the behavior of the request object's "
"``is_secure()`` method."
msgstr ""

# 1ff660b6ebdf4f998084dc67e36036fc
#: ../../ref/settings.txt:1606
msgid ""
"This takes some explanation. By default, ``is_secure()`` is able to "
"determine whether a request is secure by looking at whether the requested "
"URL uses \"https://\"."
msgstr ""

# cb0703fbdf0f43e9805f99632fe8f8d5
#: ../../ref/settings.txt:1610
msgid ""
"If your Django app is behind a proxy, though, the proxy may be \"swallowing"
"\" the fact that a request is HTTPS, using a non-HTTPS connection between "
"the proxy and Django. In this case, ``is_secure()`` would always return "
"``False`` -- even for requests that were made via HTTPS by the end user."
msgstr ""

# c90ee8a9be8d499d959cb55ff4e49282
#: ../../ref/settings.txt:1615
msgid ""
"In this situation, you'll want to configure your proxy to set a custom HTTP "
"header that tells Django whether the request came in via HTTPS, and you'll "
"want to set ``SECURE_PROXY_SSL_HEADER`` so that Django knows what header to "
"look for."
msgstr ""

# 1d4b8d5c02144086a3c99c3bfd95b565
#: ../../ref/settings.txt:1620
msgid ""
"You'll need to set a tuple with two elements -- the name of the header to "
"look for and the required value. For example::"
msgstr ""

# 78c33db41aff4d009737f39a8c2f0d46
#: ../../ref/settings.txt:1625
msgid ""
"Here, we're telling Django that we trust the ``X-Forwarded-Protocol`` header "
"that comes from our proxy, and any time its value is ``'https'``, then the "
"request is guaranteed to be secure (i.e., it originally came in via HTTPS). "
"Obviously, you should *only* set this setting if you control your proxy or "
"have some other guarantee that it sets/strips this header appropriately."
msgstr ""

# b97fbe361fc141b5b5eb1a57924b9ac3
#: ../../ref/settings.txt:1631
msgid ""
"Note that the header needs to be in the format as used by ``request.META`` "
"-- all caps and likely starting with ``HTTP_``. (Remember, Django "
"automatically adds ``'HTTP_'`` to the start of x-header names before making "
"the header available in ``request.META``.)"
msgstr ""

# 22cd418244bd476d82cc9620356fbf14
#: ../../ref/settings.txt:1638
msgid ""
"**You will probably open security holes in your site if you set this without "
"knowing what you're doing. Seriously.**"
msgstr ""

# ebef8140509f4afcadec3948314ae11b
#: ../../ref/settings.txt:1640
msgid ""
"Make sure ALL of the following are true before setting this (assuming the "
"values from the example above):"
msgstr ""

# 13a7bcf27e484d988b70ee2a4c73f211
#: ../../ref/settings.txt:1643
msgid "Your Django app is behind a proxy."
msgstr ""

# 41d0205b8f314ce5bc7c0be06f263109
#: ../../ref/settings.txt:1644
msgid ""
"Your proxy strips the 'X-Forwarded-Protocol' header from all incoming "
"requests. In other words, if end users include that header in their "
"requests, the proxy will discard it."
msgstr ""

# 58c1fc3dc9c64a8f8b4c66b78230ceb6
#: ../../ref/settings.txt:1647
msgid ""
"Your proxy sets the 'X-Forwarded-Protocol' header and sends it to Django, "
"but only for requests that originally come in via HTTPS."
msgstr ""

# a26d3c770d914d069cb9d1002e20b292
#: ../../ref/settings.txt:1650
msgid ""
"If any of those are not true, you should keep this setting set to ``None`` "
"and find another way of determining HTTPS, perhaps via custom middleware."
msgstr ""

# 99ee9383bf974bca872794e388574949
#: ../../ref/settings.txt:1656
msgid "SEND_BROKEN_LINK_EMAILS"
msgstr ""

# 50bc3753300c40dba8469ad4dd860b1e
#: ../../ref/settings.txt:1660
msgid ""
"Whether to send an email to the :setting:`MANAGERS` each time somebody "
"visits a Django-powered page that is 404ed with a non-empty referer (i.e., a "
"broken link). This is only used if ``CommonMiddleware`` is installed (see :"
"doc:`/topics/http/middleware`). See also :setting:`IGNORABLE_404_URLS` and :"
"doc:`/howto/error-reporting`."
msgstr ""

# 161d2f4ecf2a43e88c3b37c88935639e
#: ../../ref/settings.txt:1669
msgid "SERIALIZATION_MODULES"
msgstr ""

# ab7ff1bbf54a4b5788b7c60c0f63ff67
#: ../../ref/settings.txt:1671
msgid "Default: Not defined."
msgstr ""

# ba0a223f6be847f581dab77cb2ea0bf0
#: ../../ref/settings.txt:1673
msgid ""
"A dictionary of modules containing serializer definitions (provided as "
"strings), keyed by a string identifier for that serialization type. For "
"example, to define a YAML serializer, use::"
msgstr ""

# 982bf771117f4a58bffe2cdda1c549b0
#: ../../ref/settings.txt:1682
msgid "SERVER_EMAIL"
msgstr ""

# 927a67b4a81e46eba541764f39c6dc20
#: ../../ref/settings.txt:1684
msgid "Default: ``'root@localhost'``"
msgstr ""

# b7b0237b06154d08b85edc3a1f8b67b4
#: ../../ref/settings.txt:1686
msgid ""
"The email address that error messages come from, such as those sent to :"
"setting:`ADMINS` and :setting:`MANAGERS`."
msgstr ""

# bd2ac9222b6544e7af940c23db0dc329
#: ../../ref/settings.txt:1692
msgid "SESSION_COOKIE_AGE"
msgstr ""

# 52b111c62e8747eb8e2e06b9a82fe7c2
#: ../../ref/settings.txt:1694
msgid "Default: ``1209600`` (2 weeks, in seconds)"
msgstr ""

# 23efa388f9994b439550556a2f69f37b
#: ../../ref/settings.txt:1696
msgid ""
"The age of session cookies, in seconds. See :doc:`/topics/http/sessions`."
msgstr ""

# 4c038ae2d9564e609d02f5daf3699323
#: ../../ref/settings.txt:1705
msgid ""
"The domain to use for session cookies. Set this to a string such as ``\"."
"lawrence.com\"`` for cross-domain cookies, or use ``None`` for a standard "
"domain cookie. See the :doc:`/topics/http/sessions`."
msgstr ""

# 46fb41522310470fb889c74d63e912c5
#: ../../ref/settings.txt:1712
msgid "SESSION_COOKIE_HTTPONLY"
msgstr ""

# 855547795cbd4847aaee00fef716bbb4
#: ../../ref/settings.txt:1716
msgid ""
"Whether to use HTTPOnly flag on the session cookie. If this is set to "
"``True``, client-side JavaScript will not to be able to access the session "
"cookie."
msgstr ""

# 51d7fc23d7f749e0893d7b1bacb6a643
#: ../../ref/settings.txt:1731
msgid "SESSION_COOKIE_NAME"
msgstr ""

# a0b778c314eb4264adc024502f7cb897
#: ../../ref/settings.txt:1733
msgid "Default: ``'sessionid'``"
msgstr ""

# f6832a8311f142b786a72862e9553c56
#: ../../ref/settings.txt:1735
msgid ""
"The name of the cookie to use for sessions. This can be whatever you want "
"(but should be different from :setting:`LANGUAGE_COOKIE_NAME`). See the :doc:"
"`/topics/http/sessions`."
msgstr ""

# 15a2857ebf9044cf87bf29596572c195
#: ../../ref/settings.txt:1742
msgid "SESSION_COOKIE_PATH"
msgstr ""

# 6fa922ffd1164173840699c7187c21e7
#: ../../ref/settings.txt:1746
msgid ""
"The path set on the session cookie. This should either match the URL path of "
"your Django installation or be parent of that path."
msgstr ""

# d16fee69076a40559c1a5e35511b3c1a
#: ../../ref/settings.txt:1749
msgid ""
"This is useful if you have multiple Django instances running under the same "
"hostname. They can use different cookie paths, and each instance will only "
"see its own session cookie."
msgstr ""

# 989c27527da9440c96d45ead7f476628
#: ../../ref/settings.txt:1756
msgid "SESSION_COOKIE_SECURE"
msgstr ""

# ba4c89cac9c14444ae133b3836c5300f
#: ../../ref/settings.txt:1760
msgid ""
"Whether to use a secure cookie for the session cookie. If this is set to "
"``True``, the cookie will be marked as \"secure,\" which means browsers may "
"ensure that the cookie is only sent under an HTTPS connection. See the :doc:"
"`/topics/http/sessions`."
msgstr ""

# fbe603610d7147a1b1ec9132476516dc
#: ../../ref/settings.txt:1768
msgid "SESSION_ENGINE"
msgstr ""

# 31e1212677ef4a9c9f9fab13caf766a0
#: ../../ref/settings.txt:1770
msgid "Default: ``django.contrib.sessions.backends.db``"
msgstr ""

# 08fdd42896e741f5ad9ca29bc58da253
#: ../../ref/settings.txt:1772
msgid "Controls where Django stores session data. Valid values are:"
msgstr ""

# ed11cc509e7c4eb298767b010a871d3b
#: ../../ref/settings.txt:1774
msgid "``'django.contrib.sessions.backends.db'``"
msgstr ""

# 0da230d05887404cb19cac0cdb3d163a
#: ../../ref/settings.txt:1775
msgid "``'django.contrib.sessions.backends.file'``"
msgstr ""

# e83904cf09564456a3d7ee56b7a00126
#: ../../ref/settings.txt:1776
msgid "``'django.contrib.sessions.backends.cache'``"
msgstr ""

# 8fda1ab73c1d42d68652076ce92c0678
#: ../../ref/settings.txt:1777
msgid "``'django.contrib.sessions.backends.cached_db'``"
msgstr ""

# 04f41b673114461c846841231f0dcc4d
#: ../../ref/settings.txt:1778
msgid "``'django.contrib.sessions.backends.signed_cookies'``"
msgstr ""

# 8a77911175074feb9f8deba4598fc1e4
#: ../../ref/settings.txt:1780
msgid "See :doc:`/topics/http/sessions`."
msgstr ""

# 57013e6c6fec4b689e8494a23ce5eac7
#: ../../ref/settings.txt:1785
msgid "SESSION_EXPIRE_AT_BROWSER_CLOSE"
msgstr ""

# 3070b74cb11b47618cfaa3e7ef1b6884
#: ../../ref/settings.txt:1789
msgid ""
"Whether to expire the session when the user closes his or her browser. See "
"the :doc:`/topics/http/sessions`."
msgstr ""

# 48ea088a14ab4cb7b01e70e662c6e975
#: ../../ref/settings.txt:1795
msgid "SESSION_FILE_PATH"
msgstr ""

# 2bc911f04eb142fc83c67202def4ec41
#: ../../ref/settings.txt:1799
msgid ""
"If you're using file-based session storage, this sets the directory in which "
"Django will store session data. See :doc:`/topics/http/sessions`. When the "
"default value (``None``) is used, Django will use the standard temporary "
"directory for the system."
msgstr ""

# c0b3a920f279407f9fd3872d41ebe9e3
#: ../../ref/settings.txt:1807
msgid "SESSION_SAVE_EVERY_REQUEST"
msgstr ""

# cf4a8c50b861488f8092eda2c5b60062
#: ../../ref/settings.txt:1811
msgid ""
"Whether to save the session data on every request. See :doc:`/topics/http/"
"sessions`."
msgstr ""

# 769e6de70aff4a5d8887e9ab9607f47d
#: ../../ref/settings.txt:1817
msgid "SHORT_DATE_FORMAT"
msgstr ""

# ec8ec37e1d9541469d7f24c83ed7684a
#: ../../ref/settings.txt:1821
msgid "Default: ``m/d/Y`` (e.g. ``12/31/2003``)"
msgstr ""

# 907fe1a7c36e4c698ea5b4bf295d41e3
#: ../../ref/settings.txt:1823
msgid ""
"An available formatting that can be used for displaying date fields on "
"templates. Note that if :setting:`USE_L10N` is set to ``True``, then the "
"corresponding locale-dictated format has higher precedence and will be "
"applied. See :tfilter:`allowed date format strings <date>`."
msgstr ""

# d3147bdee74942c69ccd3d1594c6050e
#: ../../ref/settings.txt:1828
msgid "See also :setting:`DATE_FORMAT` and :setting:`SHORT_DATETIME_FORMAT`."
msgstr ""

# a4f4d3edb7284c34bc7405bacb0b94c4
#: ../../ref/settings.txt:1833
msgid "SHORT_DATETIME_FORMAT"
msgstr ""

# 228ec139aa29400cbe380b309dd246be
#: ../../ref/settings.txt:1837
msgid "Default: ``m/d/Y P`` (e.g. ``12/31/2003 4 p.m.``)"
msgstr ""

# 71f5c4766fce4e37b3aceb2129b9daed
#: ../../ref/settings.txt:1839
msgid ""
"An available formatting that can be used for displaying datetime fields on "
"templates. Note that if :setting:`USE_L10N` is set to ``True``, then the "
"corresponding locale-dictated format has higher precedence and will be "
"applied. See :tfilter:`allowed date format strings <date>`."
msgstr ""

# 03d0b6d8d3e84e0daa0615a780b49bca
#: ../../ref/settings.txt:1844
msgid "See also :setting:`DATE_FORMAT` and :setting:`SHORT_DATE_FORMAT`."
msgstr ""

# 1e8578067bb1436387e98ce59cfef949
#: ../../ref/settings.txt:1849
msgid "SIGNING_BACKEND"
msgstr ""

# 9850a8cb8dec42f586de85545fd4f6ed
#: ../../ref/settings.txt:1853
msgid "Default: 'django.core.signing.TimestampSigner'"
msgstr ""

# 1a71529d309c401bb89bb2735aff254f
#: ../../ref/settings.txt:1855
msgid "The backend used for signing cookies and other data."
msgstr ""

# 90de4bb6efd64e3bb8d16c955f48c306
#: ../../ref/settings.txt:1857
msgid "See also the :doc:`/topics/signing` documentation."
msgstr ""

# fe303c82f7e749da9a4bad3bacbb1528
#: ../../ref/settings.txt:1862
msgid "SITE_ID"
msgstr ""

# 0b5f685862f5403fa1e074ed1995255f
#: ../../ref/settings.txt:1866
msgid ""
"The ID, as an integer, of the current site in the ``django_site`` database "
"table. This is used so that application data can hook into specific site(s) "
"and a single database can manage content for multiple sites."
msgstr ""

# cd4d486c43bf4a68b2be913260d17cc7
#: ../../ref/settings.txt:1870
msgid "See :doc:`/ref/contrib/sites`."
msgstr ""

# 7eff65ee09b743dc9c3c4f7fd1ded9ad
#: ../../ref/settings.txt:1877
msgid "STATIC_ROOT"
msgstr ""

# 5b7226f275884c47b6b4aa4228f5650c
#: ../../ref/settings.txt:1881
msgid ""
"The absolute path to the directory where :djadmin:`collectstatic` will "
"collect static files for deployment."
msgstr ""

# 8d7b5f220d9343f0b0cd8074aa926604
#: ../../ref/settings.txt:1884
msgid "Example: ``\"/home/example.com/static/\"``"
msgstr ""

# 0f41f8aa0d8943eea9d480bc47454c04
#: ../../ref/settings.txt:1886
msgid ""
"If the :doc:`staticfiles</ref/contrib/staticfiles>` contrib app is enabled "
"(default) the :djadmin:`collectstatic` management command will collect "
"static files into this directory. See the howto on :doc:`managing static "
"files</howto/static-files>` for more details about usage."
msgstr ""

# 0256aa4642ab416495c0c442e9529d7f
#: ../../ref/settings.txt:1893
msgid ""
"This should be an (initially empty) destination directory for collecting "
"your static files from their permanent locations into one directory for ease "
"of deployment; it is **not** a place to store your static files permanently. "
"You should do that in directories that will be found by :doc:`staticfiles</"
"ref/contrib/staticfiles>`'s :setting:`finders<STATICFILES_FINDERS>`, which "
"by default, are ``'static/'`` app sub-directories and any directories you "
"include in :setting:`STATICFILES_DIRS`)."
msgstr ""

# 297822dcb7564e5ab69371a881159bd7
#: ../../ref/settings.txt:1902
msgid ""
"See :doc:`staticfiles reference</ref/contrib/staticfiles>` and :setting:"
"`STATIC_URL`."
msgstr ""

# 2934d5e8ab6a4719b08b2b7013af147c
#: ../../ref/settings.txt:1908
msgid "STATIC_URL"
msgstr ""

# 25871835c0204f189ba1bf07cbaea3c0
#: ../../ref/settings.txt:1912
msgid ""
"URL to use when referring to static files located in :setting:`STATIC_ROOT`."
msgstr ""

# f4218d89fa984bd293aed549be5c2410
#: ../../ref/settings.txt:1914
msgid ""
"Example: ``\"/site_media/static/\"`` or ``\"http://static.example.com/\"``"
msgstr ""

# 501e59d8375944f9a25c6e9b6d59c1bd
#: ../../ref/settings.txt:1916
msgid ""
"If not ``None``, this will be used as the base path for :ref:`media "
"definitions<form-media-paths>` and the :doc:`staticfiles app</ref/contrib/"
"staticfiles>`."
msgstr ""

# 9df0c13acbe945e1a967ea6151facffa
#: ../../ref/settings.txt:1920
msgid "It must end in a slash if set to a non-empty value."
msgstr ""

# d911264c90ee4314b18af156c075fe3a
#: ../../ref/settings.txt:1922
msgid "See :setting:`STATIC_ROOT`."
msgstr ""

# 8b89069486d64b06b90f141489fce81c
#: ../../ref/settings.txt:1927
msgid "TEMPLATE_CONTEXT_PROCESSORS"
msgstr ""

# 1acf5242c7ca4284869d05aea07aef9e
#: ../../ref/settings.txt:1939
msgid ""
"A tuple of callables that are used to populate the context in "
"``RequestContext``. These callables take a request object as their argument "
"and return a dictionary of items to be merged into the context."
msgstr ""

# b501eea3378d466db2d351e12eb3ddae
#: ../../ref/settings.txt:1964
msgid "TEMPLATE_DEBUG"
msgstr ""

# 19b1f6f4a08d402988536286a2013c8e
#: ../../ref/settings.txt:1968
msgid ""
"A boolean that turns on/off template debug mode. If this is ``True``, the "
"fancy error page will display a detailed report for any exception raised "
"during template rendering. This report contains the relevant snippet of the "
"template, with the appropriate line highlighted."
msgstr ""

# 887b8030769a404f917b4775caf596c8
#: ../../ref/settings.txt:1973
msgid ""
"Note that Django only displays fancy error pages if :setting:`DEBUG` is "
"``True``, so you'll want to set that to take advantage of this setting."
msgstr ""

# a937fcb6650f4c879d2eba5962b34115
#: ../../ref/settings.txt:1976
msgid "See also :setting:`DEBUG`."
msgstr ""

# 4c014b9f13774a3eb5ac37c51d63bf4a
#: ../../ref/settings.txt:1981
msgid "TEMPLATE_DIRS"
msgstr ""

# 9ef4f647612b4d6ab279e0a887fb2f50
#: ../../ref/settings.txt:1985
msgid ""
"List of locations of the template source files searched by :class:`django."
"template.loaders.filesystem.Loader`, in search order."
msgstr ""

# d767a393713a41879a02075a465e0341
#: ../../ref/settings.txt:1990
msgid "See :doc:`/topics/templates`."
msgstr ""

# 858af41cac094d65ad77af9eac71cdfa
#: ../../ref/settings.txt:1995
msgid "TEMPLATE_LOADERS"
msgstr ""

# 3ac8b11d25844840a11c260a7c4f9885
#: ../../ref/settings.txt:2002
msgid ""
"A tuple of template loader classes, specified as strings. Each ``Loader`` "
"class knows how to import templates from a particular source. Optionally, a "
"tuple can be used instead of a string. The first item in the tuple should be "
"the ``Loader``'s module, subsequent items are passed to the ``Loader`` "
"during initialization. See :doc:`/ref/templates/api`."
msgstr ""

# 94a0ad0400c14ac0b417b544c30d4006
#: ../../ref/settings.txt:2017
msgid "TEMPLATE_STRING_IF_INVALID"
msgstr ""

# 8408d6fdb4294cab9e56e74607351e2c
#: ../../ref/settings.txt:2021
msgid ""
"Output, as a string, that the template system should use for invalid (e.g. "
"misspelled) variables. See :ref:`invalid-template-variables`.."
msgstr ""

# e6d921c6eb134ad3bcde06b90be7d57b
#: ../../ref/settings.txt:2027
msgid "TEST_RUNNER"
msgstr ""

# 2919d47345474994b750e305672180e5
#: ../../ref/settings.txt:2029
msgid "Default: ``'django.test.simple.DjangoTestSuiteRunner'``"
msgstr ""

# e2fc88ad7eab4b0ea219a161cca2b5d2
#: ../../ref/settings.txt:2034
msgid ""
"The name of the class to use for starting the test suite. See :doc:`/topics/"
"testing`."
msgstr ""

# 7f80554f2b114ea2aa3842163899172a
#: ../../ref/settings.txt:2042
msgid "THOUSAND_SEPARATOR"
msgstr ""

# 918d36924ac7422a99309e151a8c6e49
#: ../../ref/settings.txt:2046
msgid "Default: ``,`` (Comma)"
msgstr ""

# 0cce24492ba84775b81deafa00e773d8
#: ../../ref/settings.txt:2048
msgid ""
"Default thousand separator used when formatting numbers. This setting is "
"used only when :setting:`USE_THOUSAND_SEPARATOR` is ``True`` and :setting:"
"`NUMBER_GROUPING` is greater than ``0``."
msgstr ""

# ff637454c3ff4f77a47785163131ddea
#: ../../ref/settings.txt:2055
msgid ""
"See also :setting:`NUMBER_GROUPING`, :setting:`DECIMAL_SEPARATOR` and :"
"setting:`USE_THOUSAND_SEPARATOR`."
msgstr ""

# a04f2fda85374e5391a9de17d1a9a0b1
#: ../../ref/settings.txt:2061
msgid "TIME_FORMAT"
msgstr ""

# c93a84f21ee44eb09f5563c1d8895289
#: ../../ref/settings.txt:2063
msgid "Default: ``'P'`` (e.g. ``4 p.m.``)"
msgstr ""

# a40b16a854cf448d93c8b9f47fb5278a
#: ../../ref/settings.txt:2065
msgid ""
"The default formatting to use for displaying time fields in any part of the "
"system. Note that if :setting:`USE_L10N` is set to ``True``, then the locale-"
"dictated format has higher precedence and will be applied instead. See :"
"tfilter:`allowed date format strings <date>`."
msgstr ""

# 5b2ddc753a354e93822f98ee14bc57e4
#: ../../ref/settings.txt:2073
msgid "See also :setting:`DATE_FORMAT` and :setting:`DATETIME_FORMAT`."
msgstr ""

# aa8d56d96a6e49f9b1352b8a6b079057
#: ../../ref/settings.txt:2078
msgid "TIME_INPUT_FORMATS"
msgstr ""

# 511c53b9b09244118aa4a1702ca5cb23
#: ../../ref/settings.txt:2082
msgid "Default: ``('%H:%M:%S', '%H:%M')``"
msgstr ""

# 07928ca9ae464c51bb7d37f60f82aa09
#: ../../ref/settings.txt:2084
msgid ""
"A tuple of formats that will be accepted when inputting data on a time "
"field. Formats will be tried in order, using the first valid one. Note that "
"these format strings use Python's datetime_ module syntax, not the format "
"strings from the ``date`` Django template tag."
msgstr ""

# 713ce5d834a4495286e0f905f525eea0
#: ../../ref/settings.txt:2092
msgid ""
"See also :setting:`DATE_INPUT_FORMATS` and :setting:`DATETIME_INPUT_FORMATS`."
msgstr ""

# 7bce4859b2c94ac6881d2d5d5007bda0
#: ../../ref/settings.txt:2099
msgid "TIME_ZONE"
msgstr ""

# 779e9c12c22a4b8c9cab15c727dee142
#: ../../ref/settings.txt:2101
msgid "Default: ``'America/Chicago'``"
msgstr ""

# a5915e36eeee4c5fac9757f57cd78896
#: ../../ref/settings.txt:2109
msgid ""
"A string representing the time zone for this installation, or ``None``. `See "
"available choices`_. (Note that list of available choices lists more than "
"one on the same line; you'll want to use just one of the choices for a given "
"time zone. For instance, one line says ``'Europe/London GB GB-Eire'``, but "
"you should use the first bit of that -- ``'Europe/London'`` -- as your :"
"setting:`TIME_ZONE` setting.)"
msgstr ""

# bfb80ac082854ddc8ae09a625310a4b3
#: ../../ref/settings.txt:2116
msgid ""
"Note that this isn't necessarily the time zone of the server. For example, "
"one server may serve multiple Django-powered sites, each with a separate "
"time zone setting."
msgstr ""

# 2000c73e1b3b4566beeaf5d9625a0d94
#: ../../ref/settings.txt:2120
msgid ""
"When :setting:`USE_TZ` is ``False``, this is the time zone in which Django "
"will store all datetimes. When :setting:`USE_TZ` is ``True``, this is the "
"default time zone that Django will use to display datetimes in templates and "
"to interpret datetimes entered in forms."
msgstr ""

# 85e88420643c4d3da1ea2aebd251b2a1
#: ../../ref/settings.txt:2125
msgid ""
"Django sets the ``os.environ['TZ']`` variable to the time zone you specify "
"in the :setting:`TIME_ZONE` setting. Thus, all your views and models will "
"automatically operate in this time zone. However, Django won't set the "
"``TZ`` environment variable under the following conditions:"
msgstr ""

# eba18f3829194c66ac504a325a84ddb9
#: ../../ref/settings.txt:2130
msgid ""
"If you're using the manual configuration option as described in :ref:"
"`manually configuring settings <settings-without-django-settings-module>`, or"
msgstr ""

# 52357df962e748dd8cceaedf5f8169de
#: ../../ref/settings.txt:2134
msgid ""
"If you specify ``TIME_ZONE = None``. This will cause Django to fall back to "
"using the system time zone."
msgstr ""

# 605278c7fb78452aa5c4b93b8171ff5e
#: ../../ref/settings.txt:2137
msgid ""
"If Django doesn't set the ``TZ`` environment variable, it's up to you to "
"ensure your processes are running in the correct environment."
msgstr ""

# 3cc1fec3be4041dfbf65b1650bc06f49
#: ../../ref/settings.txt:2141
msgid ""
"Django cannot reliably use alternate time zones in a Windows environment. If "
"you're running Django on Windows, :setting:`TIME_ZONE` must be set to match "
"the system time zone."
msgstr ""

# 896277f1bcc9450cb47c9ca1660e63c3
#: ../../ref/settings.txt:2152
msgid "URL_VALIDATOR_USER_AGENT"
msgstr ""

# 584b2c1f4c334139b6ec72116b392dc0
#: ../../ref/settings.txt:2154
msgid "Default: ``Django/<version> (http://www.djangoproject.com/)``"
msgstr ""

# 7e4f74953fb341d0873f6585f29aff00
#: ../../ref/settings.txt:2156
msgid ""
"The string to use as the ``User-Agent`` header when checking to see if URLs "
"exist (see the ``verify_exists`` option on :class:`~django.db.models."
"URLField`). This setting was deprecated in 1.3.1 along with "
"``verify_exists`` and will be removed in 1.4."
msgstr ""

# f9b23578149f4ff998d1d0bf3b726c72
#: ../../ref/settings.txt:2164
msgid "USE_ETAGS"
msgstr ""

# 5638e2bfdf1d423ca79d82cd6025ca32
#: ../../ref/settings.txt:2168
msgid ""
"A boolean that specifies whether to output the \"Etag\" header. This saves "
"bandwidth but slows down performance. This is used by the "
"``CommonMiddleware`` (see :doc:`/topics/http/middleware`) and in the``Cache "
"Framework`` (see :doc:`/topics/cache`)."
msgstr ""

# f4b0b7adfe6e47d7aa605ba0d23044dc
#: ../../ref/settings.txt:2176
msgid "USE_I18N"
msgstr ""

# 3374eda7bfbf4491933706a954e353e0
#: ../../ref/settings.txt:2180
msgid ""
"A boolean that specifies whether Django's translation system should be "
"enabled. This provides an easy way to turn it off, for performance. If this "
"is set to ``False``, Django will make some optimizations so as not to load "
"the translation machinery."
msgstr ""

# 5a187a940f0146ef831c70d43ae0af79
#: ../../ref/settings.txt:2185
msgid ""
"See also :setting:`LANGUAGE_CODE`, :setting:`USE_L10N` and :setting:`USE_TZ`."
msgstr ""

# 53b7498ccf3e450a83a6fe0d6a833efb
#: ../../ref/settings.txt:2190
msgid "USE_L10N"
msgstr ""

# c5329a42ac7e40d5a6c6b94dfc38e1e4
#: ../../ref/settings.txt:2196
msgid ""
"A boolean that specifies if localized formatting of data will be enabled by "
"default or not. If this is set to ``True``, e.g. Django will display numbers "
"and dates using the format of the current locale."
msgstr ""

# 0e49339d59114a619713da81f1721253
#: ../../ref/settings.txt:2200
msgid ""
"See also :setting:`LANGUAGE_CODE`, :setting:`USE_I18N` and :setting:`USE_TZ`."
msgstr ""

# cb0531648ff24688b0f5cda17f0a3162
#: ../../ref/settings.txt:2204
msgid ""
"The default :file:`settings.py` file created by :djadmin:`django-admin.py "
"startproject <startproject>` includes ``USE_L10N = True`` for convenience."
msgstr ""

# d7f9d31851f045c69c0d2a87dcb642d2
#: ../../ref/settings.txt:2210
msgid "USE_THOUSAND_SEPARATOR"
msgstr ""

# 00b31c881244461386eaac21bea86572
#: ../../ref/settings.txt:2216
msgid ""
"A boolean that specifies whether to display numbers using a thousand "
"separator. When :setting:`USE_L10N` is set to ``True`` and if this is also "
"set to ``True``, Django will use the values of :setting:`THOUSAND_SEPARATOR` "
"and :setting:`NUMBER_GROUPING` to format numbers."
msgstr ""

# 6d949db36b334373a4adcee08b785b00
#: ../../ref/settings.txt:2221
msgid ""
"See also :setting:`DECIMAL_SEPARATOR`, :setting:`NUMBER_GROUPING` and :"
"setting:`THOUSAND_SEPARATOR`."
msgstr ""

# 1e03ea4264864e7e86eafcb749a8a2e2
#: ../../ref/settings.txt:2227
msgid "USE_TZ"
msgstr ""

# 10cd527396c94a74ac9d6f77d17a5fb0
#: ../../ref/settings.txt:2233
msgid ""
"A boolean that specifies if datetimes will be timezone-aware by default or "
"not. If this is set to ``True``, Django will use timezone-aware datetimes "
"internally. Otherwise, Django will use naive datetimes in local time."
msgstr ""

# 390130798c2044ff98f0ae5c2068900d
#: ../../ref/settings.txt:2237
msgid ""
"See also :setting:`TIME_ZONE`, :setting:`USE_I18N` and :setting:`USE_L10N`."
msgstr ""

# 4b7f21de3de14fd18f329e1fcbb11e4c
#: ../../ref/settings.txt:2241
msgid ""
"The default :file:`settings.py` file created by :djadmin:`django-admin.py "
"startproject <startproject>` includes ``USE_TZ = True`` for convenience."
msgstr ""

# 59d15f27eab949b8968b8926a5ff4512
#: ../../ref/settings.txt:2248
msgid "USE_X_FORWARDED_HOST"
msgstr ""

# a2a465d0635842e892110bb239382883
#: ../../ref/settings.txt:2254
msgid ""
"A boolean that specifies whether to use the X-Forwarded-Host header in "
"preference to the Host header. This should only be enabled if a proxy which "
"sets this header is in use."
msgstr ""

# dc42d97668d74759b49036a7d27e8c74
#: ../../ref/settings.txt:2261
msgid "WSGI_APPLICATION"
msgstr ""

# b10258193f9a4accbf1083baa611e4af
#: ../../ref/settings.txt:2267
msgid ""
"The full Python path of the WSGI application object that Django's built-in "
"servers (e.g. :djadmin:`runserver`) will use. The :djadmin:`django-admin.py "
"startproject <startproject>` management command will create a simple ``wsgi."
"py`` file with an ``application`` callable in it, and point this setting to "
"that ``application``."
msgstr ""

# 3c849435257b4388bb525a0e5793fdd2
#: ../../ref/settings.txt:2273
msgid ""
"If not set, the return value of :func:`django.core.wsgi."
"get_wsgi_application` will be used. In this case, the behavior of :djadmin:"
"`runserver` will be identical to previous Django versions."
msgstr ""

# c9a045f8f9894f5abfd449e75e300aa2
#: ../../ref/settings.txt:2280
msgid "YEAR_MONTH_FORMAT"
msgstr ""

# 3405ab57607d4fec9aaf4cc43b639871
#: ../../ref/settings.txt:2282
msgid "Default: ``'F Y'``"
msgstr ""

# 1686bfd062064b2f9156e1d1f2d23133
#: ../../ref/settings.txt:2284
msgid ""
"The default formatting to use for date fields on Django admin change-list "
"pages -- and, possibly, by other parts of the system -- in cases when only "
"the year and month are displayed."
msgstr ""

# 78e4fe659cba4e628d1e9d924d5ff915
#: ../../ref/settings.txt:2288
msgid ""
"For example, when a Django admin change-list page is being filtered by a "
"date drilldown, the header for a given month displays the month and the "
"year. Different locales have different formats. For example, U.S. English "
"would say \"January 2006,\" whereas another locale might say \"2006/January."
"\""
msgstr ""

# 819ac94a1d4a43c2a9d4cf1f81f01e2f
#: ../../ref/settings.txt:2293
msgid ""
"See :tfilter:`allowed date format strings <date>`. See also :setting:"
"`DATE_FORMAT`, :setting:`DATETIME_FORMAT`, :setting:`TIME_FORMAT` and :"
"setting:`MONTH_DAY_FORMAT`."
msgstr ""

# d2ae154524f241928202b636071f9d53
#: ../../ref/settings.txt:2300
msgid "X_FRAME_OPTIONS"
msgstr ""

# 66bfa82b3d504e11969983a34fac8507
#: ../../ref/settings.txt:2302
msgid "Default: ``'SAMEORIGIN'``"
msgstr ""

# 0eb0b78b51fc40e39c15ee98bdf6c2a5
#: ../../ref/settings.txt:2304
msgid ""
"The default value for the X-Frame-Options header used by :class:`~django."
"middleware.clickjacking.XFrameOptionsMiddleware`. See the :doc:`clickjacking "
"protection </ref/clickjacking/>` documentation."
msgstr ""

# 35021f60c3b148d2a8577c54b9ebcc0b
#: ../../ref/settings.txt:2309
msgid "Deprecated settings"
msgstr ""

# 9e8f6332d17f4230bbb5d8a8dae18d3e
#: ../../ref/settings.txt:2314
msgid "ADMIN_MEDIA_PREFIX"
msgstr ""

# c7fcd885565f46949fe0a5f5f7eb6630
#: ../../ref/settings.txt:2324
msgid "CACHE_BACKEND"
msgstr ""

# b7fa68b7c6ae48ae95fd51496e80dd41
#: ../../ref/settings.txt:2333
msgid "IGNORABLE_404_ENDS"
msgstr ""

# b3dcdeb1069541b9b3e70ff7ca05ecdc
#: ../../ref/settings.txt:2341
msgid "IGNORABLE_404_STARTS"
msgstr ""

# 87c491230e4846389272db5a152fb2bf
#: ../../ref/signals.txt:3
msgid "Signals"
msgstr ""

# 33918622832b43d8b4ee35bca2f8902b
#: ../../ref/signals.txt:5
msgid "A list of all the signals that Django sends."
msgstr ""

# 1bda315ca0024a2f8003c721ccd76dbd
#: ../../ref/signals.txt:9
msgid ""
"See the documentation on the :doc:`signal dispatcher </topics/signals>` for "
"information regarding how to register for and receive signals."
msgstr ""

# c6937553d18141ec8d5b5bf6c0cbf1bc
#: ../../ref/signals.txt:12
msgid ""
"The :doc:`comment framework </ref/contrib/comments/index>` sends a :doc:`set "
"of comment-related signals </ref/contrib/comments/signals>`."
msgstr ""

# e65e457b211e473bb1fee31a47a24238
#: ../../ref/signals.txt:15
msgid ""
"The :doc:`authentication framework </topics/auth>` sends :ref:`signals when "
"a user is logged in / out <topics-auth-signals>`."
msgstr ""

# 235b609429414b41bad9a0e3fff468d3
#: ../../ref/signals.txt:19
msgid "Model signals"
msgstr ""

# 337e142182ff49bc82414bc856ad60fc
#: ../../ref/signals.txt:24
msgid ""
"The :mod:`django.db.models.signals` module defines a set of signals sent by "
"the module system."
msgstr ""

# 29c84aa5634f4ddfab1fad9733d0973e
#: ../../ref/signals.txt:29
msgid ""
"Many of these signals are sent by various model methods like :meth:`~django."
"db.models.Model.__init__` or :meth:`~django.db.models.Model.save` that you "
"can overwrite in your own code."
msgstr ""

# aacce7215b644acf824bb8496a34410b
#: ../../ref/signals.txt:34
msgid ""
"If you override these methods on your model, you must call the parent class' "
"methods for this signals to be sent."
msgstr ""

# 706d9b89fa824f879b938bdcfc6bf233
#: ../../ref/signals.txt:37
msgid ""
"Note also that Django stores signal handlers as weak references by default, "
"so if your handler is a local function, it may be garbage collected.  To "
"prevent this, pass ``weak=False`` when you call the signal's :meth:`~django."
"dispatch.Signal.connect`."
msgstr ""

# fc3db1f4394448098902c306853d1b43
#: ../../ref/signals.txt:42
msgid "pre_init"
msgstr ""

# c6b6ac5a1c4041f9ab751a66ed1ff611
#: ../../ref/signals.txt:49
msgid ""
"Whenever you instantiate a Django model,, this signal is sent at the "
"beginning of the model's :meth:`~django.db.models.Model.__init__` method."
msgstr ""

# 2ad58c718b6f4a34a488dcf445582274
#: ../../ref/signals.txt:55
msgid "The model class that just had an instance created."
msgstr ""

# 355c7221263f4a67aa4c12ec9335be0d
#: ../../ref/signals.txt:58
msgid ""
"A list of positional arguments passed to :meth:`~django.db.models.Model."
"__init__`:"
msgstr ""

# c8d50bb29ce0447e8f4ec1b5106589d3
#: ../../ref/signals.txt:62
msgid ""
"A dictionary of keyword arguments passed to :meth:`~django.db.models.Model."
"__init__`:."
msgstr ""

# 7a889c1fb808406f8bf863faa5af29ba
#: ../../ref/signals.txt:65
msgid "For example, the :doc:`tutorial </intro/tutorial01>` has this line::"
msgstr ""

# 9df78785a9ce42c6aeae812cb00a1ff5
#: ../../ref/signals.txt:69
msgid "The arguments sent to a :data:`pre_init` handler would be:"
msgstr ""

# 6411ee641e9847fd8cec6689e5809592
# 1826f73be20e4679b3f52fc3338ac02d
# 0241ac19103b434596738ac0a60ae11f
#: ../../ref/signals.txt:74 ../../ref/signals.txt:291
#: ../../ref/signals.txt:317
msgid "``sender``"
msgstr ""

# 91109ce7a5614c96bfdfd230ae84a321
#: ../../ref/signals.txt:74
msgid "``Poll`` (the class itself)"
msgstr ""

# d2de7927750042f9aa3d241fba73bfa2
#: ../../ref/signals.txt:76
msgid "``args``"
msgstr ""

# 3199aa171d8649a98da7a8d73f282655
#: ../../ref/signals.txt:76
msgid ""
"``[]`` (an empty list because there were no positional arguments passed to "
"``__init__``.)"
msgstr ""

# d6d33da5616141f79710259d9f682fa0
#: ../../ref/signals.txt:79
msgid "``kwargs``"
msgstr ""

# a03b0e8d9fdf4293809e8ba7a9b9472a
#: ../../ref/signals.txt:79
msgid "``{'question': \"What's up?\", 'pub_date': datetime.now()}``"
msgstr ""

# 4f1afa720d8d460ca20ffad35e9cbe1b
#: ../../ref/signals.txt:83
msgid "post_init"
msgstr ""

# c1c73b93ca7e45e79e6a93718ef83d67
#: ../../ref/signals.txt:88
msgid ""
"Like pre_init, but this one is sent when the :meth:`~django.db.models.Model."
"__init__`: method finishes."
msgstr ""

# 01ed5ae6411b46ac95cb49dc577140fb
#: ../../ref/signals.txt:93
msgid "As above: the model class that just had an instance created."
msgstr ""

# 27069fc08be3427484234887d7e4bd1d
#: ../../ref/signals.txt:96
msgid "The actual instance of the model that's just been created."
msgstr ""

# ee8af8bda4a544c0822f977cba871287
#: ../../ref/signals.txt:99
msgid "pre_save"
msgstr ""

# 0ea04b1a08684716871097f1bf148c41
#: ../../ref/signals.txt:104
msgid ""
"This is sent at the beginning of a model's :meth:`~django.db.models.Model."
"save` method."
msgstr ""

# 385acb961f8c42f48a40ebe242abcb6a
# 666dc46d08a549159bf9af11fa53aa21
# 279688084aca448e824aa4fb5c0cdefe
# f8628cdc422a41d28faa7e3b06a28afb
#: ../../ref/signals.txt:110 ../../ref/signals.txt:138
#: ../../ref/signals.txt:169 ../../ref/signals.txt:192
msgid "The model class."
msgstr ""

# f6f5f107264e4311a908826584ddbaab
# 3fe09ab5781e48498c4e343983658746
#: ../../ref/signals.txt:113 ../../ref/signals.txt:141
msgid "The actual instance being saved."
msgstr ""

# e6230ceec59949b4b5b3cd82b04fac26
# a0bbf36fdf3d4eb0a53fc92eb93780c4
#: ../../ref/signals.txt:116 ../../ref/signals.txt:147
msgid ""
"A boolean; ``True`` if the model is saved exactly as presented (i.e. when "
"loading a fixture). One should not query/modify other records in the "
"database as the database might not be in a consistent state yet."
msgstr ""

# 20f19975e7e24e708a60bd15ae13d9b0
# cb3bb60451304e78ad177e85f2e38175
# 760c90fbb2fd4667b1ad489689068363
# b9135fb7fb0b41118f9d551e23827101
# 3e157a3df7514a71a455b7b0264071a9
#: ../../ref/signals.txt:124 ../../ref/signals.txt:155
#: ../../ref/signals.txt:177 ../../ref/signals.txt:203
#: ../../ref/signals.txt:267
msgid "The database alias being used."
msgstr ""

# 3caa14010d7d4417bb3372674374a412
#: ../../ref/signals.txt:127
msgid "post_save"
msgstr ""

# 71344e8bfd904ab492980c4116b5b29a
#: ../../ref/signals.txt:132
msgid ""
"Like :data:`pre_save`, but sent at the end of the :meth:`~django.db.models."
"Model.save` method."
msgstr ""

# 9a07c3f85ff14d18af7f2494f80bb657
#: ../../ref/signals.txt:144
msgid "A boolean; ``True`` if a new record was created."
msgstr ""

# 40224a4b744647918f27e2f43d0c4fc0
#: ../../ref/signals.txt:158
msgid "pre_delete"
msgstr ""

# 916aaa03687e4f4188e32560d352c723
#: ../../ref/signals.txt:163
msgid ""
"Sent at the beginning of a model's :meth:`~django.db.models.Model.delete` "
"method and a queryset's :meth:`~django.db.models.query.QuerySet.delete` "
"method."
msgstr ""

# cb0fb217d9464e0f93237baee16baa9c
# 846ecb408bf34de1b76b4cf847d64fda
#: ../../ref/signals.txt:172 ../../ref/signals.txt:195
msgid "The actual instance being deleted."
msgstr ""

# 00da4f60231d4f339ac7be06f9da86c1
#: ../../ref/signals.txt:180
msgid "post_delete"
msgstr ""

# 060ac22d18494b949e004ae13ca16b57
#: ../../ref/signals.txt:185
msgid ""
"Like :data:`pre_delete`, but sent at the end of a model's :meth:`~django.db."
"models.Model.delete` method and a queryset's :meth:`~django.db.models.query."
"QuerySet.delete` method."
msgstr ""

# 154b3f89fbfc49e9938187d3278fa6eb
#: ../../ref/signals.txt:197
msgid ""
"Note that the object will no longer be in the database, so be very careful "
"what you do with this instance."
msgstr ""

# 714f6210bf5b49758ffb8a2d22351194
#: ../../ref/signals.txt:206
msgid "m2m_changed"
msgstr ""

# 38f0fb9d628343249de11c27cb63d871
#: ../../ref/signals.txt:213
msgid ""
"Sent when a :class:`ManyToManyField` is changed on a model instance. "
"Strictly speaking, this is not a model signal since it is sent by the :class:"
"`ManyToManyField`, but since it complements the :data:`pre_save`/:data:"
"`post_save` and :data:`pre_delete`/:data:`post_delete` when it comes to "
"tracking changes to models, it is included here."
msgstr ""

# 0e8971a2ed084e9b9404c94f9149caa6
#: ../../ref/signals.txt:222
msgid ""
"The intermediate model class describing the :class:`ManyToManyField`. This "
"class is automatically created when a many-to-many field is defined; you can "
"access it using the ``through`` attribute on the many-to-many field."
msgstr ""

# 5b2a919fe1704a81bef4374bbe3e9a5a
#: ../../ref/signals.txt:228
msgid ""
"The instance whose many-to-many relation is updated. This can be an instance "
"of the ``sender``, or of the class the :class:`ManyToManyField` is related "
"to."
msgstr ""

# 93ecc4515dac45cc9b61cda3ab07de56
#: ../../ref/signals.txt:233
msgid ""
"A string indicating the type of update that is done on the relation. This "
"can be one of the following:"
msgstr ""

# 3267f3c10b5541559c037c5b2ddb232b
#: ../../ref/signals.txt:237
msgid "Sent *before* one or more objects are added to the relation."
msgstr ""

# bf69c5e48e274a5698baa085c8e685d7
#: ../../ref/signals.txt:239
msgid "Sent *after* one or more objects are added to the relation."
msgstr ""

# a1a1d455fe234153a38aaecf572cdac1
#: ../../ref/signals.txt:241
msgid "Sent *before* one or more objects are removed from the relation."
msgstr ""

# 702aa14fe9714dc2a4e8f6f4d0a13664
#: ../../ref/signals.txt:243
msgid "Sent *after* one or more objects are removed from the relation."
msgstr ""

# c1a4cf0ba76f437c8d75e54981cc67f5
#: ../../ref/signals.txt:245
msgid "Sent *before* the relation is cleared."
msgstr ""

# 14c71716b294419c9f66982f4d091cef
#: ../../ref/signals.txt:247
msgid "Sent *after* the relation is cleared."
msgstr ""

# dae639c528914ae2a1945123f99942c8
#: ../../ref/signals.txt:250
msgid ""
"Indicates which side of the relation is updated (i.e., if it is the forward "
"or reverse relation that is being modified)."
msgstr ""

# 668d168fb3e94b608f5be36e2873d35f
#: ../../ref/signals.txt:254
msgid ""
"The class of the objects that are added to, removed from or cleared from the "
"relation."
msgstr ""

# ed94d06d5d95451ca543abf1c42ea36d
#: ../../ref/signals.txt:258
msgid ""
"For the ``pre_add``, ``post_add``, ``pre_remove`` and ``post_remove`` "
"actions, this is a list of primary key values that have been added to or "
"removed from the relation."
msgstr ""

# 8a130cbf38ab473caf07bee487428354
#: ../../ref/signals.txt:262
msgid "For the ``pre_clear`` and ``post_clear`` actions, this is ``None``."
msgstr ""

# b7b6dda76c354abb8a65bf4d5628b4d4
#: ../../ref/signals.txt:269
msgid ""
"For example, if a ``Pizza`` can have multiple ``Topping`` objects, modeled "
"like this::"
msgstr ""

# c0130ae1494e42daa7b99722a9b471ed
#: ../../ref/signals.txt:280
msgid "If we would do something like this:"
msgstr ""

# 6c5b8d543cca4dab9fb1949d57c51085
# 9b3d03531e1a49dca4aafee3242e4aec
#: ../../ref/signals.txt:286 ../../ref/signals.txt:312
msgid "the arguments sent to a :data:`m2m_changed` handler would be:"
msgstr ""

# 1b55381a4834400eb259d4b7db1d3b8e
# 4ce33e0f106b4666803c6ce80a55cca5
#: ../../ref/signals.txt:291 ../../ref/signals.txt:317
msgid "``Pizza.toppings.through`` (the intermediate m2m class)"
msgstr ""

# 37a3a52f3187445c86118b2a85a46677
#: ../../ref/signals.txt:293
msgid "``p`` (the ``Pizza`` instance being modified)"
msgstr ""

# 0cea92d1df624b588ab676534abf4d25
# 45eb855bd3114c80a4829f18e42d254c
#: ../../ref/signals.txt:295 ../../ref/signals.txt:321
msgid "``action``"
msgstr ""

# 760cd26c64a6490c9cb2b7cf42198d88
#: ../../ref/signals.txt:295
msgid "``\"pre_add\"`` (followed by a separate signal with ``\"post_add\"``)"
msgstr ""

# 949b0c2383014bfc969152cd7dee04e4
#: ../../ref/signals.txt:297
msgid ""
"``False`` (``Pizza`` contains the :class:`ManyToManyField`, so this call "
"modifies the forward relation)"
msgstr ""

# 9b10810b364047cf926ee2082b0dde59
#: ../../ref/signals.txt:300
msgid "``Topping`` (the class of the objects added to the ``Pizza``)"
msgstr ""

# 084ca0e04c06418ba1248d324374d89a
# fcdbbe3a45154a04a89958d1274904cc
#: ../../ref/signals.txt:303 ../../ref/signals.txt:329
msgid "``pk_set``"
msgstr ""

# 0379e6ed416a45679248462a7b256d84
#: ../../ref/signals.txt:303
msgid "``[t.id]`` (since only ``Topping t`` was added to the relation)"
msgstr ""

# 626d77ecd5a34627a00ab720195bdbf8
# 0a59d1aac31942ad80bd9325cb6aaaf5
#: ../../ref/signals.txt:305 ../../ref/signals.txt:332
msgid "``\"default\"`` (since the default router sends writes here)"
msgstr ""

# e54b3ab45ee143cfa147fb1f11eebfdd
#: ../../ref/signals.txt:308
msgid "And if we would then do something like this::"
msgstr ""

# 9877c595f4a141778b4e1d94d407adff
#: ../../ref/signals.txt:319
msgid "``t`` (the ``Topping`` instance being modified)"
msgstr ""

# d642c6339bf342a797a93bbe3fba57f2
#: ../../ref/signals.txt:321
msgid ""
"``\"pre_remove\"`` (followed by a separate signal with ``\"post_remove\"``)"
msgstr ""

# 63678ff6af9a4fb99a61c751ec45cc4a
#: ../../ref/signals.txt:323
msgid ""
"``True`` (``Pizza`` contains the :class:`ManyToManyField`, so this call "
"modifies the reverse relation)"
msgstr ""

# 23ba04819d4f4eefbfbfadb3f3f2c3e5
#: ../../ref/signals.txt:326
msgid "``Pizza`` (the class of the objects removed from the ``Topping``)"
msgstr ""

# 6b9d130479ce4d499072c7b07793466e
#: ../../ref/signals.txt:329
msgid "``[p.id]`` (since only ``Pizza p`` was removed from the relation)"
msgstr ""

# a1c7a0455c9248f182e1a840e742be58
#: ../../ref/signals.txt:336
msgid "class_prepared"
msgstr ""

# de91d073fd0044b49c773dc565a2c75a
#: ../../ref/signals.txt:341
msgid ""
"Sent whenever a model class has been \"prepared\" -- that is, once model has "
"been defined and registered with Django's model system. Django uses this "
"signal internally; it's not generally used in third-party applications."
msgstr ""

# d01bf5bb385a444d862e62c088fa44b6
#: ../../ref/signals.txt:345
msgid "Arguments that are sent with this signal:"
msgstr ""

# 177528fb6a0f4503aeb4dbaf35883a72
#: ../../ref/signals.txt:348
msgid "The model class which was just prepared."
msgstr ""

# 3525eccfb4704b50b077c3d2c9a8acba
#: ../../ref/signals.txt:351
msgid "Management signals"
msgstr ""

# 1d840aea30424a28aac3353511ed4c06
#: ../../ref/signals.txt:353
msgid "Signals sent by :doc:`django-admin </ref/django-admin>`."
msgstr ""

# 88aed44a5b714581a6a28fac3e7c5fee
#: ../../ref/signals.txt:356
msgid "post_syncdb"
msgstr ""

# e5148650566f410c8d75cde7c64752b5
#: ../../ref/signals.txt:361
msgid ""
"Sent by the :djadmin:`syncdb` command after it installs an application, and "
"the :djadmin:`flush` command."
msgstr ""

# e34545c964624640b2478d96917b2f86
#: ../../ref/signals.txt:364
msgid ""
"Any handlers that listen to this signal need to be written in a particular "
"place: a ``management`` module in one of your :setting:`INSTALLED_APPS`. If "
"handlers are registered anywhere else they may not be loaded by :djadmin:"
"`syncdb`. It is important that handlers of this signal perform idempotent "
"changes (e.g. no database alterations) as this may cause the :djadmin:"
"`flush` management command to fail if it also ran during the :djadmin:"
"`syncdb` command."
msgstr ""

# 3e0f0e680f3f496bbe140f886be4fe7d
#: ../../ref/signals.txt:375
msgid ""
"The ``models`` module that was just installed. That is, if :djadmin:`syncdb` "
"just installed an app called ``\"foo.bar.myapp\"``, ``sender`` will be the "
"``foo.bar.myapp.models`` module."
msgstr ""

# 3d10a80eadcb40a9aa2a2488dec108f1
#: ../../ref/signals.txt:380
msgid "Same as ``sender``."
msgstr ""

# dbeb16bc0bb54aaa99f7cc4b6751ef9d
#: ../../ref/signals.txt:383
msgid ""
"A list of the model classes from any app which :djadmin:`syncdb` has created "
"so far."
msgstr ""

# 0f46dc026c33466fa6136e119062cdb8
#: ../../ref/signals.txt:387
msgid ""
"Indicates how much information manage.py is printing on screen. See the :"
"djadminopt:`--verbosity` flag for details."
msgstr ""

# 6d75fa21a7954dfea6485e86093b4cd5
#: ../../ref/signals.txt:390
msgid ""
"Functions which listen for :data:`post_syncdb` should adjust what they "
"output to the screen based on the value of this argument."
msgstr ""

# 318993c27ca74f0f80876929b6ac6a3c
#: ../../ref/signals.txt:394
msgid ""
"If ``interactive`` is ``True``, it's safe to prompt the user to input things "
"on the command line. If ``interactive`` is ``False``, functions which listen "
"for this signal should not try to prompt for anything."
msgstr ""

# 02a3fd5926d04ff299e90d39d30a65f2
#: ../../ref/signals.txt:398
msgid ""
"For example, the :mod:`django.contrib.auth` app only prompts to create a "
"superuser when ``interactive`` is ``True``."
msgstr ""

# 30e78e089963400bae31373308bc0c66
#: ../../ref/signals.txt:401
msgid "For example, ``yourapp/management/__init__.py`` could be written like::"
msgstr ""

# 713d9f58410e426aa2fe5a212b52d02b
#: ../../ref/signals.txt:413
msgid "Request/response signals"
msgstr ""

# b321fd0177bd4b98af0dbb0788c2439d
#: ../../ref/signals.txt:418
msgid "Signals sent by the core framework when processing a request."
msgstr ""

# bd89159d6c1a43318a0092f9a2ebbca0
#: ../../ref/signals.txt:421
msgid "request_started"
msgstr ""

# 857909e63d004d198aeddc9b7f35669a
#: ../../ref/signals.txt:426
msgid "Sent when Django begins processing an HTTP request."
msgstr ""

# b876e09a053d496fb6e99943d9bcb3bb
#: ../../ref/signals.txt:431
msgid ""
"The handler class -- e.g. :class:`django.core.handlers.wsgi.WsgiHandler` -- "
"that handled the request."
msgstr ""

# bcc07a3b6b2e4b99b45a7ca5ed578a0c
#: ../../ref/signals.txt:436
msgid "request_finished"
msgstr ""

# bd82ad4610784982a4a75b1e07bc11a5
#: ../../ref/signals.txt:441
msgid "Sent when Django finishes processing an HTTP request."
msgstr ""

# d00fc90e021c4c1bad542dcb17f47545
# c6716e2ee7864522b3d7284a3b1599ac
#: ../../ref/signals.txt:446 ../../ref/signals.txt:459
msgid "The handler class, as above."
msgstr ""

# ccbefa0323e94da7a66d2f951f8a9b67
#: ../../ref/signals.txt:449
msgid "got_request_exception"
msgstr ""

# 73ff04f12dfd4e3e80a31a53702c5c3e
#: ../../ref/signals.txt:454
msgid ""
"This signal is sent whenever Django encounters an exception while processing "
"an incoming HTTP request."
msgstr ""

# 9133f67ef3304805989d1e5170fd62bd
#: ../../ref/signals.txt:462
msgid "The :class:`~django.http.HttpRequest` object."
msgstr ""

# 3072c2ac4c9d4f52acb376bf6988da50
#: ../../ref/signals.txt:465
msgid "Test signals"
msgstr ""

# d3a4c7b79b28495e9d22e8fcfa5d035e
#: ../../ref/signals.txt:470
msgid "Signals only sent when :doc:`running tests </topics/testing>`."
msgstr ""

# bde1802fdb774e29b1abadb6250d4893
#: ../../ref/signals.txt:473
msgid "setting_changed"
msgstr ""

# 451b0920ae644e39b49f1f8ce88dd610
#: ../../ref/signals.txt:480
msgid ""
"Sent when some :ref:`settings are overridden <overriding-settings>` with "
"the :meth:`django.test.TestCase.setting` context manager or the :func:"
"`django.test.utils.override_settings` decorator/context manager."
msgstr ""

# f9957d0f97384d37b3d3b8146736bb8f
#: ../../ref/signals.txt:487
msgid "The settings handler."
msgstr ""

# 2b958596bd8b4195a41e3fbaf7b40614
# 46c4ee17f1cf43e5bb4a354bbdd81f56
#: ../../ref/signals.txt:490 ../../ref/signals.txt:510
msgid "Same as sender"
msgstr ""

# ec48c433c2ac49a1b169c67827171d9c
#: ../../ref/signals.txt:493
msgid "The new setting value."
msgstr ""

# 7272b80b2ea949899f3ceaa6b9e2a13d
#: ../../ref/signals.txt:496
msgid "template_rendered"
msgstr ""

# 28b7322b32b34aee96b240df41b694e7
#: ../../ref/signals.txt:501
msgid ""
"Sent when the test system renders a template. This signal is not emitted "
"during normal operation of a Django server -- it is only available during "
"testing."
msgstr ""

# 89dde6eaa2e644368f8d6258267ed3f4
#: ../../ref/signals.txt:507
msgid "The :class:`~django.template.Template` object which was rendered."
msgstr ""

# faab4eec6f704057a3ecb96baad474d1
#: ../../ref/signals.txt:513
msgid ""
"The :class:`~django.template.Context` with which the template was rendered."
msgstr ""

# 5c01d82611a947e39d07ae38f6b83501
#: ../../ref/signals.txt:517
msgid "Database Wrappers"
msgstr ""

# 96a19c0322dc40fbaed2e31e71126480
#: ../../ref/signals.txt:522
msgid ""
"Signals sent by the database wrapper when a database connection is initiated."
msgstr ""

# 7707921fee2a4a059f57f04eb5c917bd
#: ../../ref/signals.txt:526
msgid "connection_created"
msgstr ""

# 89c4c526d96540d9a3aeb3b4a01e1980
#: ../../ref/signals.txt:534
msgid ""
"Sent when the database wrapper makes the initial connection to the "
"database.  This is particularly useful if you'd like to send any post "
"connection commands to the SQL backend."
msgstr ""

# be7c89dae9914367a730a11501530576
#: ../../ref/signals.txt:541
msgid ""
"The database wrapper class -- i.e. :class:`django.db.backends."
"postgresql_psycopg2.DatabaseWrapper` or :class:`django.db.backends.mysql."
"DatabaseWrapper`, etc."
msgstr ""

# b53b367ca96140a5973d42eb5bb30e17
#: ../../ref/signals.txt:546
msgid ""
"The database connection that was opened. This can be used in a multiple-"
"database configuration to differentiate connection signals from different "
"databases."
msgstr ""

# 0f11ddf1af714dc4b834e5c6edf1cb48
#: ../../ref/template-response.txt:3
msgid "TemplateResponse and SimpleTemplateResponse"
msgstr ""

# ee782d7415574e679c5c85fe02b5a728
#: ../../ref/template-response.txt:10
msgid ""
"Standard :class:`~django.http.HttpResponse` objects are static structures. "
"They are provided with a block of pre-rendered content at time of "
"construction, and while that content can be modified, it isn't in a form "
"that makes it easy to perform modifications."
msgstr ""

# 895e82fdfe9b42879cf08c591cf6f191
#: ../../ref/template-response.txt:15
msgid ""
"However, it can sometimes be beneficial to allow decorators or middleware to "
"modify a response *after* it has been constructed by the view. For example, "
"you may want to change the template that is used, or put additional data "
"into the context."
msgstr ""

# bfd823fe3c8345529d186385bd79da22
#: ../../ref/template-response.txt:20
msgid ""
"TemplateResponse provides a way to do just that. Unlike basic :class:"
"`~django.http.HttpResponse` objects, TemplateResponse objects retain the "
"details of the template and context that was provided by the view to compute "
"the response. The final output of the response is not computed until it is "
"needed, later in the response process."
msgstr ""

# e5fc8fc3accb421abd12e6f152e7413a
#: ../../ref/template-response.txt:27
msgid "SimpleTemplateResponse objects"
msgstr ""

# ae67f6998a5946b0b59e2b12219fd2b9
#: ../../ref/template-response.txt:36
msgid ""
"The name of the template to be rendered. Accepts a :class:`~django.template."
"Template` object, a path to a template or list of template paths."
msgstr ""

# 3f6f8dedd3274fc6b08fecbc8eb38cc3
#: ../../ref/template-response.txt:40
msgid "Example: ``['foo.html', 'path/to/bar.html']``"
msgstr ""

# 8c673176e63440b6a566cd5ec92b3af0
#: ../../ref/template-response.txt:44
msgid ""
"The context data to be used when rendering the template. It can be a "
"dictionary or a context object."
msgstr ""

# d27e99b5d4fb4366a51aab31421bd769
#: ../../ref/template-response.txt:47
msgid "Example: ``{'foo': 123}``"
msgstr ""

# 3d240f76042d43b68b09bbb6fc1a27f3
#: ../../ref/template-response.txt:51
msgid ""
"The current rendered value of the response content, using the current "
"template and context data."
msgstr ""

# d24634aee41d4ab6b7d30888a35af0c9
#: ../../ref/template-response.txt:56
msgid "A boolean indicating whether the response content has been rendered."
msgstr ""

# ad296585d729436da51d38711d370aed
#: ../../ref/template-response.txt:63
msgid ""
"Instantiates a :class:`~django.template.response.SimpleTemplateResponse` "
"object with the given template, context, MIME type and HTTP status."
msgstr ""

# ad858017decd40e78d22454fe5afe27a
# e1fd9d739f5f499d8bea0c2560bb6677
#: ../../ref/template-response.txt:68 ../../ref/template-response.txt:159
msgid ""
"The full name of a template, or a sequence of template names. :class:"
"`~django.template.Template` instances can also be used."
msgstr ""

# 5408a91b3b3d49b0969af0b40d4397c3
# 1c2bd51b9bd44c9d92b889c0ab50cbfd
#: ../../ref/template-response.txt:72 ../../ref/template-response.txt:163
msgid ""
"A dictionary of values to add to the template context. By default, this is "
"an empty dictionary. :class:`~django.template.Context` objects are also "
"accepted as ``context`` values."
msgstr ""

# b6bdaed83ff74c789844b98577449c1f
# f58ec04479114ff49a51b1b2e00575fa
#: ../../ref/template-response.txt:77 ../../ref/template-response.txt:168
msgid "The HTTP Status code for the response."
msgstr ""

# 445818a39ad64bd090f30a5e76df93c9
# 00c0351f05d14bb398b5c1d822455416
#: ../../ref/template-response.txt:80 ../../ref/template-response.txt:171
msgid ""
"An alias for ``mimetype``. Historically, this parameter was only called "
"``mimetype``, but since this is actually the value included in the HTTP "
"``Content-Type`` header, it can also include the character set encoding, "
"which makes it more than just a MIME type specification. If ``mimetype`` is "
"specified (not ``None``), that value is used. Otherwise, ``content_type`` is "
"used. If neither is given, :setting:`DEFAULT_CONTENT_TYPE` is used."
msgstr ""

# 4b46c0307bf648baba8bf6c1901cfebe
#: ../../ref/template-response.txt:91
msgid ""
"Converts context data into a context instance that can be used for rendering "
"a template. Accepts a dictionary of context data or a context object. "
"Returns a :class:`~django.template.Context` instance containing the provided "
"data."
msgstr ""

# b66ca1d033b54e03b7b67aafb7035993
#: ../../ref/template-response.txt:96
msgid "Override this method in order to customize context instantiation."
msgstr ""

# 664e08463e7a479182b9209f2fcaf039
#: ../../ref/template-response.txt:100
msgid ""
"Resolves the template instance to use for rendering. Accepts a path of a "
"template to use, or a sequence of template paths. :class:`~django.template."
"Template` instances may also be provided. Returns the :class:`~django."
"template.Template` instance to be rendered."
msgstr ""

# d59fefda15bb40ed8e4982453a2c7683
#: ../../ref/template-response.txt:106
msgid "Override this method in order to customize template rendering."
msgstr ""

# 976cc96992684f87917b0adad98739ee
#: ../../ref/template-response.txt:110
msgid ""
"Add a callback that will be invoked after rendering has taken place. This "
"hook can be used to defer certain processing operations (such as caching) "
"until after rendering has occurred."
msgstr ""

# 4ca0a805fe7b4e62afd148aa7d3333cb
#: ../../ref/template-response.txt:114
msgid ""
"If the :class:`~django.template.response.SimpleTemplateResponse` has already "
"been rendered, the callback will be invoked immediately."
msgstr ""

# 2ce5c2cd3710451b9b1e1078bb74c7e7
#: ../../ref/template-response.txt:118
msgid ""
"When called, callbacks will be passed a single argument -- the rendered :"
"class:`~django.template.response.SimpleTemplateResponse` instance."
msgstr ""

# d16a2090c2b84bcc9e0a3c0f3a96c608
#: ../../ref/template-response.txt:122
msgid ""
"If the callback returns a value that is not `None`, this will be used as the "
"response instead of the original response object (and will be passed to the "
"next post rendering callback etc.)"
msgstr ""

# a4bab7fdc993497ca70bf7f1769df284
#: ../../ref/template-response.txt:128
msgid ""
"Sets :attr:`response.content` to the result obtained by :attr:"
"`SimpleTemplateResponse.rendered_content`, runs all post-rendering "
"callbacks, and returns the resulting response object."
msgstr ""

# bc6015ee5eb84c8d9acba2370da5d61e
#: ../../ref/template-response.txt:132
msgid ""
":meth:`~SimpleTemplateResponse.render()` will only have an effect the first "
"time it is called. On subsequent calls, it will return the result obtained "
"from the first call."
msgstr ""

# 5f9082581f2c4e12bf64e8fa66a48f2c
#: ../../ref/template-response.txt:138
msgid "TemplateResponse objects"
msgstr ""

# b975c03b0ef1487483587da477fb87b7
#: ../../ref/template-response.txt:142
msgid ""
"TemplateResponse is a subclass of :class:`~django.template.response."
"SimpleTemplateResponse` that uses a :class:`~django.template.RequestContext` "
"instead of a :class:`~django.template.Context`."
msgstr ""

# 244c386d16b64e09b39499413e94c398
#: ../../ref/template-response.txt:152
msgid ""
"Instantiates an ``TemplateResponse`` object with the given template, "
"context, MIME type and HTTP status."
msgstr ""

# 6a2da71501f34fa38bdb1219b01fc27b
#: ../../ref/template-response.txt:156
msgid "An :class:`~django.http.HttpRequest` instance."
msgstr ""

# d399839fefa347dead2ecb0af8c10c05
#: ../../ref/template-response.txt:180
msgid ""
"A hint indicating which application contains the current view. See the :ref:"
"`namespaced URL resolution strategy <topics-http-reversing-url-namespaces>` "
"for more information."
msgstr ""

# ccb16fa4bbc4415d91f5f8557256086d
#: ../../ref/template-response.txt:186
msgid "The rendering process"
msgstr ""

# 93bb6b58a44c4c59a3790f8e3fc47b19
#: ../../ref/template-response.txt:188
msgid ""
"Before a :class:`~django.template.response.TemplateResponse` instance can be "
"returned to the client, it must be rendered. The rendering process takes the "
"intermediate representation of template and context, and turns it into the "
"final byte stream that can be served to the client."
msgstr ""

# cef16d63385d4b8ea3ec80bd10b1288d
#: ../../ref/template-response.txt:193
msgid ""
"There are three circumstances under which a TemplateResponse will be "
"rendered:"
msgstr ""

# aed761b0e90d409b8445bf8eda276e63
#: ../../ref/template-response.txt:196
msgid ""
"When the TemplateResponse instance is explicitly rendered, using the :meth:"
"`SimpleTemplateResponse.render()` method."
msgstr ""

# 2a3599cc3d2e4ce7b899fcef866879d4
#: ../../ref/template-response.txt:199
msgid ""
"When the content of the response is explicitly set by assigning :attr:"
"`response.content`."
msgstr ""

# da2d810598f14e7f9c6584c0a5483adc
#: ../../ref/template-response.txt:202
msgid ""
"After passing through template response middleware, but before passing "
"through response middleware."
msgstr ""

# ae67e70b5b8c405e9d97cc2dc633e5fa
#: ../../ref/template-response.txt:205
msgid ""
"A TemplateResponse can only be rendered once. The first call to :meth:"
"`SimpleTemplateResponse.render` sets the content of the response; subsequent "
"rendering calls do not change the response content."
msgstr ""

# bdad04c042294e92a883b842de7d4923
#: ../../ref/template-response.txt:210
msgid ""
"However, when :attr:`response.content` is explicitly assigned, the change is "
"always applied. If you want to force the content to be re-rendered, you can "
"re-evaluate the rendered content, and assign the content of the response "
"manually::"
msgstr ""

# f169dafae91347ae8358dad589848f6a
#: ../../ref/template-response.txt:233
msgid "Post-render callbacks"
msgstr ""

# 2901c4fd8ca94777815412735dee7d5d
#: ../../ref/template-response.txt:235
msgid ""
"Some operations -- such as caching -- cannot be performed on an unrendered "
"template. They must be performed on a fully complete and rendered response."
msgstr ""

# 94699458fda54c129b1b30d5371adb2b
#: ../../ref/template-response.txt:239
msgid ""
"If you're using middleware, the solution is easy. Middleware provides "
"multiple opportunities to process a response on exit from a view. If you put "
"behavior in the Response middleware is guaranteed to execute after template "
"rendering has taken place."
msgstr ""

# 941102f389724101a1e58791fcf65904
#: ../../ref/template-response.txt:244
msgid ""
"However, if you're using a decorator, the same opportunities do not exist. "
"Any behavior defined in a decorator is handled immediately."
msgstr ""

# df9848059d844c809e066c020b315f3b
#: ../../ref/template-response.txt:247
msgid ""
"To compensate for this (and any other analogous use cases), :class:"
"`TemplateResponse` allows you to register callbacks that will be invoked "
"when rendering has completed. Using this callback, you can defer critical "
"processing until a point where you can guarantee that rendered content will "
"be available."
msgstr ""

# 723d1426a5eb4e43b1609ca1d0661e09
#: ../../ref/template-response.txt:253
msgid ""
"To define a post-render callback, just define a function that takes a single "
"argument -- response -- and register that function with the template "
"response::"
msgstr ""

# 95518afc9a564fd3b5b6b5f65c73621e
#: ../../ref/template-response.txt:269
msgid ""
"``my_render_callback()`` will be invoked after the ``mytemplate.html`` has "
"been rendered, and will be provided the fully rendered :class:"
"`TemplateResponse` instance as an argument."
msgstr ""

# 7f3ca685f9bd445ba5308b4148f4c90c
#: ../../ref/template-response.txt:273
msgid ""
"If the template has already been rendered, the callback will be invoked "
"immediately."
msgstr ""

# 28cd447fd45445dc94e57d97df15cc5d
#: ../../ref/template-response.txt:277
msgid "Using TemplateResponse and SimpleTemplateResponse"
msgstr ""

# 8a0375701dfb48ee88940c5408d725ee
#: ../../ref/template-response.txt:279
msgid ""
"A TemplateResponse object can be used anywhere that a normal HttpResponse "
"can be used. It can also be used as an alternative to calling :func:`~django."
"shortcuts.render_to_response()`."
msgstr ""

# 4718e897a2c44ca5834a815c62108ef5
#: ../../ref/template-response.txt:283
msgid ""
"For example, the following simple view returns a :class:`TemplateResponse()` "
"with a simple template, and a context containing a queryset::"
msgstr ""

# 081be31397754b8fa479cf23118efa2d
#: ../../ref/templates/api.txt:3
msgid "The Django template language: For Python programmers"
msgstr ""

# 12038315b6104f0894337045659cf71c
#: ../../ref/templates/api.txt:5
msgid ""
"This document explains the Django template system from a technical "
"perspective -- how it works and how to extend it. If you're just looking for "
"reference on the language syntax, see :doc:`/topics/templates`."
msgstr ""

# e6fe0407a71d4f848ed136ed198bce9a
#: ../../ref/templates/api.txt:9
msgid ""
"If you're looking to use the Django template system as part of another "
"application -- i.e., without the rest of the framework -- make sure to read "
"the `configuration`_ section later in this document."
msgstr ""

# fdf87fa036b64649ad341753f75f9580
#: ../../ref/templates/api.txt:18
msgid ""
"A **template** is a text document, or a normal Python string, that is marked-"
"up using the Django template language. A template can contain **block tags** "
"or **variables**."
msgstr ""

# 600a300b9ee342d3acec531add8c1e08
#: ../../ref/templates/api.txt:22
msgid "A **block tag** is a symbol within a template that does something."
msgstr ""

# c0b11770fe064f0d9d7219a2310f7715
#: ../../ref/templates/api.txt:24
msgid ""
"This definition is deliberately vague. For example, a block tag can output "
"content, serve as a control structure (an \"if\" statement or \"for\" loop), "
"grab content from a database or enable access to other template tags."
msgstr ""

# adc3c0ba30c04f319f9ed911b03ee259
#: ../../ref/templates/api.txt:28
msgid "Block tags are surrounded by ``\"{%\"`` and ``\"%}\"``."
msgstr ""

# 471d5a7224174b8a95305a17192ff4a5
#: ../../ref/templates/api.txt:30
msgid "Example template with block tags:"
msgstr ""

# 473a4159bf894980a3111b22aaad4cc6
#: ../../ref/templates/api.txt:36
msgid "A **variable** is a symbol within a template that outputs a value."
msgstr ""

# 5c1fe4b32b214f109a69b30235db3a75
#: ../../ref/templates/api.txt:38
msgid "Variable tags are surrounded by ``\"{{\"`` and ``\"}}\"``."
msgstr ""

# db2920d1d5634baeb6e4248f12d27f61
#: ../../ref/templates/api.txt:40
msgid "Example template with variables:"
msgstr ""

# 746426dd7a5c45b3bf195bb1ce9daa4a
#: ../../ref/templates/api.txt:46
msgid ""
"A **context** is a \"variable name\" -> \"variable value\" mapping that is "
"passed to a template."
msgstr ""

# 0fbbea7605a746e8bf38ff534e3a7eb6
#: ../../ref/templates/api.txt:49
msgid ""
"A template **renders** a context by replacing the variable \"holes\" with "
"values from the context and executing all block tags."
msgstr ""

# 028603ade1b64cad8c6b7fc7c751acd4
#: ../../ref/templates/api.txt:53
msgid "Using the template system"
msgstr ""

# e71a1a63041244e79575bf53f423792e
#: ../../ref/templates/api.txt:57
msgid "Using the template system in Python is a two-step process:"
msgstr ""

# eda0df1bd81d42a799019089755acda6
#: ../../ref/templates/api.txt:59
msgid "First, you compile the raw template code into a ``Template`` object."
msgstr ""

# c8b73474019e430185b36278be5e4b34
#: ../../ref/templates/api.txt:60
msgid ""
"Then, you call the ``render()`` method of the ``Template`` object with a "
"given context."
msgstr ""

# b58886eeaba145c6ba92fc60164675ba
#: ../../ref/templates/api.txt:64
msgid "Compiling a string"
msgstr ""

# ba7dea0df5c644809a49b56de1869508
#: ../../ref/templates/api.txt:66
msgid ""
"The easiest way to create a ``Template`` object is by instantiating it "
"directly. The class lives at :class:`django.template.Template`. The "
"constructor takes one argument -- the raw template code::"
msgstr ""

# ab77546168ae41f89f85e277f7895546
#: ../../ref/templates/api.txt:77
msgid ""
"The system only parses your raw template code once -- when you create the "
"``Template`` object. From then on, it's stored internally as a \"node\" "
"structure for performance."
msgstr ""

# 8f55c17b7d99492ab1350472c2fa71e0
#: ../../ref/templates/api.txt:81
msgid ""
"Even the parsing itself is quite fast. Most of the parsing happens via a "
"single call to a single, short, regular expression."
msgstr ""

# 1c681b1eae3542a1ac495222fbe20e7f
#: ../../ref/templates/api.txt:85
msgid "Rendering a context"
msgstr ""

# 98ad23887d64466589825d998cd1938d
#: ../../ref/templates/api.txt:89
msgid ""
"Once you have a compiled ``Template`` object, you can render a context -- or "
"multiple contexts -- with it. The ``Context`` class lives at :class:`django."
"template.Context`, and the constructor takes two (optional) arguments:"
msgstr ""

# 5e0475a1220a4e139cf2334f82024f59
#: ../../ref/templates/api.txt:94
msgid "A dictionary mapping variable names to variable values."
msgstr ""

# 979b226214844abd94b054682aae4647
#: ../../ref/templates/api.txt:96
msgid ""
"The name of the current application. This application name is used to help :"
"ref:`resolve namespaced URLs<topics-http-reversing-url-namespaces>`. If "
"you're not using namespaced URLs, you can ignore this argument."
msgstr ""

# 08770691df2a41c4bdd79bb93a1e42b1
#: ../../ref/templates/api.txt:100
msgid ""
"Call the ``Template`` object's ``render()`` method with the context to \"fill"
"\" the template::"
msgstr ""

# 30b23fef75e34e7098d0cf9e6dc2cc64
#: ../../ref/templates/api.txt:114
msgid ""
"Variable names must consist of any letter (A-Z), any digit (0-9), an "
"underscore (but they must not start with an underscore) or a dot."
msgstr ""

# 84e02962294b40028ad513c797bf544f
#: ../../ref/templates/api.txt:117
msgid ""
"Dots have a special meaning in template rendering. A dot in a variable name "
"signifies a **lookup**. Specifically, when the template system encounters a "
"dot in a variable name, it tries the following lookups, in this order:"
msgstr ""

# d22b0650ab54454f9004b0ee658d8f2d
#: ../../ref/templates/api.txt:121
msgid "Dictionary lookup. Example: ``foo[\"bar\"]``"
msgstr ""

# 83d08b53caa148c68450ad01b79024ee
#: ../../ref/templates/api.txt:122
msgid "Attribute lookup. Example: ``foo.bar``"
msgstr ""

# bed7fb13ee944e50a94a1970ea1148c8
#: ../../ref/templates/api.txt:123
msgid "List-index lookup. Example: ``foo[bar]``"
msgstr ""

# 09e196dfa48e409b9430f170a6206bf9
#: ../../ref/templates/api.txt:125
msgid ""
"The template system uses the first lookup type that works. It's short-"
"circuit logic. Here are a few examples::"
msgstr ""

# f48013a5a7f54625bf2bc068eaf2fdb8
#: ../../ref/templates/api.txt:146
msgid ""
"If any part of the variable is callable, the template system will try "
"calling it. Example::"
msgstr ""

# 32c94d3c4a4f41a99fd52caa917e0348
#: ../../ref/templates/api.txt:161
msgid ""
"Callable variables are slightly more complex than variables which only "
"require straight lookups. Here are some things to keep in mind:"
msgstr ""

# 492402ee620e4f308c7e368468c38c79
#: ../../ref/templates/api.txt:164
msgid ""
"If the variable raises an exception when called, the exception will be "
"propagated, unless the exception has an attribute "
"``silent_variable_failure`` whose value is ``True``. If the exception *does* "
"have a ``silent_variable_failure`` attribute whose value is ``True``, the "
"variable will render as an empty string. Example::"
msgstr ""

# 8d41bffde11d4fc5b8cb9d5b6b73f7d6
#: ../../ref/templates/api.txt:189
msgid ""
"Note that :exc:`django.core.exceptions.ObjectDoesNotExist`, which is the "
"base class for all Django database API ``DoesNotExist`` exceptions, has "
"``silent_variable_failure = True``. So if you're using Django templates with "
"Django model objects, any ``DoesNotExist`` exception will fail silently."
msgstr ""

# 0fc5c673ad0d43bdb2b642aba2c6efc1
#: ../../ref/templates/api.txt:195
msgid ""
"A variable can only be called if it has no required arguments. Otherwise, "
"the system will return an empty string."
msgstr ""

# 6881d5f73ff8414c8c2c3f74766f4821
#: ../../ref/templates/api.txt:198
msgid ""
"Obviously, there can be side effects when calling some variables, and it'd "
"be either foolish or a security hole to allow the template system to access "
"them."
msgstr ""

# bc860bbda8d44a6c810327b7bbb044c5
#: ../../ref/templates/api.txt:202
msgid ""
"A good example is the :meth:`~django.db.models.Model.delete` method on each "
"Django model object. The template system shouldn't be allowed to do "
"something like this::"
msgstr ""

# fab68dfe38874bbfb2254584240b5696
#: ../../ref/templates/api.txt:208
msgid ""
"To prevent this, set an ``alters_data`` attribute on the callable variable. "
"The template system won't call a variable if it has ``alters_data=True`` "
"set, and will instead replace the variable with :setting:"
"`TEMPLATE_STRING_IF_INVALID`, unconditionally.  The dynamically-generated :"
"meth:`~django.db.models.Model.delete` and :meth:`~django.db.models.Model."
"save` methods on Django model objects get ``alters_data=True`` "
"automatically. Example::"
msgstr ""

# ca66cbfc059f4e2c980eb56bbe6ce2e0
#: ../../ref/templates/api.txt:232
msgid "How invalid variables are handled"
msgstr ""

# 0023eceea6a34855a45de6dbf659df17
#: ../../ref/templates/api.txt:234
msgid ""
"Generally, if a variable doesn't exist, the template system inserts the "
"value of the :setting:`TEMPLATE_STRING_IF_INVALID` setting, which is set to "
"``''`` (the empty string) by default."
msgstr ""

# 44437f6201c947b8a00d77fbb8d7d884
#: ../../ref/templates/api.txt:238
msgid ""
"Filters that are applied to an invalid variable will only be applied if :"
"setting:`TEMPLATE_STRING_IF_INVALID` is set to ``''`` (the empty string). "
"If :setting:`TEMPLATE_STRING_IF_INVALID` is set to any other value, variable "
"filters will be ignored."
msgstr ""

# 244b442f9c984bec98239205d188864e
#: ../../ref/templates/api.txt:243
msgid ""
"This behavior is slightly different for the ``if``, ``for`` and ``regroup`` "
"template tags. If an invalid variable is provided to one of these template "
"tags, the variable will be interpreted as ``None``. Filters are always "
"applied to invalid variables within these template tags."
msgstr ""

# 847a82a3fce74c5ea7e00013ad688860
#: ../../ref/templates/api.txt:248
msgid ""
"If :setting:`TEMPLATE_STRING_IF_INVALID` contains a ``'%s'``, the format "
"marker will be replaced with the name of the invalid variable."
msgstr ""

# c6d05d6815894663b2db92ec975d7a78
#: ../../ref/templates/api.txt:253
msgid ""
"While :setting:`TEMPLATE_STRING_IF_INVALID` can be a useful debugging tool, "
"it is a bad idea to turn it on as a 'development default'."
msgstr ""

# ff7e1be918544bc48244ad63bd7ef911
#: ../../ref/templates/api.txt:256
msgid ""
"Many templates, including those in the Admin site, rely upon the silence of "
"the template system when a non-existent variable is encountered. If you "
"assign a value other than ``''`` to :setting:`TEMPLATE_STRING_IF_INVALID`, "
"you will experience rendering problems with these templates and sites."
msgstr ""

# 1c34e016f63b45ad97554deabdc89c7d
#: ../../ref/templates/api.txt:262
msgid ""
"Generally, :setting:`TEMPLATE_STRING_IF_INVALID` should only be enabled in "
"order to debug a specific template problem, then cleared once debugging is "
"complete."
msgstr ""

# 2aa8a0c9b24c49ada13368fe15f04dc3
#: ../../ref/templates/api.txt:267
msgid "Playing with Context objects"
msgstr ""

# 26c91396609940a19f729e2ce119e5c4
#: ../../ref/templates/api.txt:271
msgid ""
"Most of the time, you'll instantiate ``Context`` objects by passing in a "
"fully-populated dictionary to ``Context()``. But you can add and delete "
"items from a ``Context`` object once it's been instantiated, too, using "
"standard dictionary syntax::"
msgstr ""

# 255f68e1743e40348f839297e2b7993f
#: ../../ref/templates/api.txt:290
msgid ""
"A ``Context`` object is a stack. That is, you can ``push()`` and ``pop()`` "
"it. If you ``pop()`` too much, it'll raise ``django.template."
"ContextPopException``::"
msgstr ""

# fdf8a9c4cea14c5d9e275ed4247846d8
#: ../../ref/templates/api.txt:313
msgid ""
"In addition to ``push()`` and ``pop()``, the ``Context`` object also defines "
"an ``update()`` method. This works like ``push()`` but takes a dictionary as "
"an argument and pushes that dictionary onto the stack instead of an empty "
"one."
msgstr ""

# b86312089f3d42f699adae08c01241d1
#: ../../ref/templates/api.txt:329
msgid ""
"Using a ``Context`` as a stack comes in handy in some custom template tags, "
"as you'll see below."
msgstr ""

# 48d3bd20ba2348debab7f0ecdf8a392e
#: ../../ref/templates/api.txt:335
msgid "Subclassing Context: RequestContext"
msgstr ""

# d9f3d94cdaff4135a5974994918ce137
#: ../../ref/templates/api.txt:339
msgid ""
"Django comes with a special ``Context`` class, ``django.template."
"RequestContext``, that acts slightly differently than the normal ``django."
"template.Context``. The first difference is that it takes an :class:`~django."
"http.HttpRequest` as its first argument. For example::"
msgstr ""

# 88f883441e6b4427b682a597c4d0145a
#: ../../ref/templates/api.txt:348
msgid ""
"The second difference is that it automatically populates the context with a "
"few variables, according to your :setting:`TEMPLATE_CONTEXT_PROCESSORS` "
"setting."
msgstr ""

# 67f0b1bc87724ba7bea0cc68d3f322a2
#: ../../ref/templates/api.txt:351
msgid ""
"The :setting:`TEMPLATE_CONTEXT_PROCESSORS` setting is a tuple of callables "
"-- called **context processors** -- that take a request object as their "
"argument and return a dictionary of items to be merged into the context. By "
"default, :setting:`TEMPLATE_CONTEXT_PROCESSORS` is set to::"
msgstr ""

# 8873ae72a0bd47d39383b14e0a02c8f5
#: ../../ref/templates/api.txt:379
msgid ""
"Each processor is applied in order. That means, if one processor adds a "
"variable to the context and a second processor adds a variable with the same "
"name, the second will override the first. The default processors are "
"explained below."
msgstr ""

# ea1518ae79ac401185591db7e54c68a4
#: ../../ref/templates/api.txt:386
msgid ""
"When you use ``RequestContext``, the variables you supply directly are added "
"first, followed any variables supplied by context processors. This means "
"that a context processor may overwrite a variable you've supplied, so take "
"care to avoid variable names which overlap with those supplied by your "
"context processors."
msgstr ""

# 956673aa5c0d4905935051c3c5a137c8
#: ../../ref/templates/api.txt:392
msgid ""
"Also, you can give ``RequestContext`` a list of additional processors, using "
"the optional, third positional argument, ``processors``. In this example, "
"the ``RequestContext`` instance gets a ``ip_address`` variable::"
msgstr ""

# c89b44461cff44e79001513738673204
#: ../../ref/templates/api.txt:408
msgid ""
"If you're using Django's :func:`~django.shortcuts.render_to_response()` "
"shortcut to populate a template with the contents of a dictionary, your "
"template will be passed a ``Context`` instance by default (not a "
"``RequestContext``). To use a ``RequestContext`` in your template rendering, "
"pass an optional third argument to :func:`~django.shortcuts."
"render_to_response()`: a ``RequestContext`` instance. Your code might look "
"like this::"
msgstr ""

# c86390aaed894f79a662913360b771d6
#: ../../ref/templates/api.txt:422
msgid "Here's what each of the default processors does:"
msgstr ""

# 175ca832a95b48658dd33ba75299fefb
#: ../../ref/templates/api.txt:425
msgid "django.contrib.auth.context_processors.auth"
msgstr ""

# 0b1e3cc32727435e9a0b6cd5f36f2e04
#: ../../ref/templates/api.txt:427
msgid ""
"If :setting:`TEMPLATE_CONTEXT_PROCESSORS` contains this processor, every "
"``RequestContext`` will contain these three variables:"
msgstr ""

# bc79e857f6744277907dade7039e1021
#: ../../ref/templates/api.txt:430
msgid ""
"``user`` -- An ``auth.User`` instance representing the currently logged-in "
"user (or an ``AnonymousUser`` instance, if the client isn't logged in)."
msgstr ""

# 4f68f79361b145fe8d52a1f74b6b2a1f
#: ../../ref/templates/api.txt:434
msgid ""
"``perms`` -- An instance of ``django.contrib.auth.context_processors."
"PermWrapper``, representing the permissions that the currently logged-in "
"user has."
msgstr ""

# c6af41f8cbe74871b5397d051074eea3
#: ../../ref/templates/api.txt:448
msgid "django.core.context_processors.debug"
msgstr ""

# e1ccf10819f24a269cab267a1efdda9c
#: ../../ref/templates/api.txt:450
msgid ""
"If :setting:`TEMPLATE_CONTEXT_PROCESSORS` contains this processor, every "
"``RequestContext`` will contain these two variables -- but only if your :"
"setting:`DEBUG` setting is set to ``True`` and the request's IP address "
"(``request.META['REMOTE_ADDR']``) is in the :setting:`INTERNAL_IPS` setting:"
msgstr ""

# c570e3683057468d8bb732397ab78e39
#: ../../ref/templates/api.txt:455
msgid ""
"``debug`` -- ``True``. You can use this in templates to test whether you're "
"in :setting:`DEBUG` mode."
msgstr ""

# 0dca2817b12f4e05849bfb18588f5a99
#: ../../ref/templates/api.txt:457
msgid ""
"``sql_queries`` -- A list of ``{'sql': ..., 'time': ...}`` dictionaries, "
"representing every SQL query that has happened so far during the request and "
"how long it took. The list is in order by query."
msgstr ""

# 245b5898c2244ad598b1f69a836500ae
#: ../../ref/templates/api.txt:462
msgid "django.core.context_processors.i18n"
msgstr ""

# 624b27d6a7e74b0ca1cb0c4155dcbbe9
#: ../../ref/templates/api.txt:464
msgid ""
"If :setting:`TEMPLATE_CONTEXT_PROCESSORS` contains this processor, every "
"``RequestContext`` will contain these two variables:"
msgstr ""

# 578b640d27a84255b2f72d36ebed10eb
#: ../../ref/templates/api.txt:467
msgid "``LANGUAGES`` -- The value of the :setting:`LANGUAGES` setting."
msgstr ""

# 362456d76eae46ba8acb3e0a32698d02
#: ../../ref/templates/api.txt:468
msgid ""
"``LANGUAGE_CODE`` -- ``request.LANGUAGE_CODE``, if it exists. Otherwise, the "
"value of the :setting:`LANGUAGE_CODE` setting."
msgstr ""

# 79c33e400a7c4e1896ff19dd21dac72f
#: ../../ref/templates/api.txt:471
msgid "See :doc:`/topics/i18n/index` for more."
msgstr ""

# 138ab1210db8477c82384bce409a8ec4
#: ../../ref/templates/api.txt:474
msgid "django.core.context_processors.media"
msgstr ""

# 84719ee8ecf94fc5a9699f82a816e977
#: ../../ref/templates/api.txt:476
msgid ""
"If :setting:`TEMPLATE_CONTEXT_PROCESSORS` contains this processor, every "
"``RequestContext`` will contain a variable ``MEDIA_URL``, providing the "
"value of the :setting:`MEDIA_URL` setting."
msgstr ""

# 7cafb9c113654f6695df8fca7445c54c
#: ../../ref/templates/api.txt:481
msgid "django.core.context_processors.static"
msgstr ""

# 73d56157c6574fcaba01bf42d38d1107
#: ../../ref/templates/api.txt:487
msgid ""
"If :setting:`TEMPLATE_CONTEXT_PROCESSORS` contains this processor, every "
"``RequestContext`` will contain a variable ``STATIC_URL``, providing the "
"value of the :setting:`STATIC_URL` setting."
msgstr ""

# c506b17befc24a31acec95e3eeb48fba
#: ../../ref/templates/api.txt:492
msgid "django.core.context_processors.csrf"
msgstr ""

# 4892ab8b83334168999f550accc7eb6e
#: ../../ref/templates/api.txt:496
msgid ""
"This processor adds a token that is needed by the :ttag:`csrf_token` "
"template tag for protection against :doc:`Cross Site Request Forgeries </ref/"
"contrib/csrf>`."
msgstr ""

# e4a8bdc59253471cb64170d747689d18
#: ../../ref/templates/api.txt:501
msgid "django.core.context_processors.request"
msgstr ""

# aebbd111da2d43a68974c72e67f9a650
#: ../../ref/templates/api.txt:503
msgid ""
"If :setting:`TEMPLATE_CONTEXT_PROCESSORS` contains this processor, every "
"``RequestContext`` will contain a variable ``request``, which is the "
"current :class:`~django.http.HttpRequest`. Note that this processor is not "
"enabled by default; you'll have to activate it."
msgstr ""

# ff15f60cecce4b2ebde78735d3b12929
#: ../../ref/templates/api.txt:509
msgid "django.contrib.messages.context_processors.messages"
msgstr ""

# 3e501e88790944e48505d515de275800
#: ../../ref/templates/api.txt:511
msgid ""
"If :setting:`TEMPLATE_CONTEXT_PROCESSORS` contains this processor, every "
"``RequestContext`` will contain a single additional variable:"
msgstr ""

# 27ffef4d25744accbd5855b6de4b92f4
#: ../../ref/templates/api.txt:514
msgid ""
"``messages`` -- A list of messages (as strings) that have been set via the "
"user model (using ``user.message_set.create``) or through the :doc:`messages "
"framework </ref/contrib/messages>`."
msgstr ""

# 5b252dfb2a38413d9219a77187404a5f
#: ../../ref/templates/api.txt:528
msgid "Writing your own context processors"
msgstr ""

# 9f920b972cd749b6bff3e5072c63c26e
#: ../../ref/templates/api.txt:530
msgid ""
"A context processor has a very simple interface: It's just a Python function "
"that takes one argument, an :class:`~django.http.HttpRequest` object, and "
"returns a dictionary that gets added to the template context. Each context "
"processor *must* return a dictionary."
msgstr ""

# be2f54234ba24ee98a9ca5d1fd2e0597
#: ../../ref/templates/api.txt:535
msgid ""
"Custom context processors can live anywhere in your code base. All Django "
"cares about is that your custom context processors are pointed-to by your :"
"setting:`TEMPLATE_CONTEXT_PROCESSORS` setting."
msgstr ""

# 898d07c5c8144b4c93f43eaef7f191d1
#: ../../ref/templates/api.txt:540
msgid "Loading templates"
msgstr ""

# f7a0dd59459d49128ed745fe88884ca7
#: ../../ref/templates/api.txt:542
msgid ""
"Generally, you'll store templates in files on your filesystem rather than "
"using the low-level ``Template`` API yourself. Save templates in a directory "
"specified as a **template directory**."
msgstr ""

# f0ed2e4b417f44b2b8f249224309eedd
#: ../../ref/templates/api.txt:546
msgid ""
"Django searches for template directories in a number of places, depending on "
"your template-loader settings (see \"Loader types\" below), but the most "
"basic way of specifying template directories is by using the :setting:"
"`TEMPLATE_DIRS` setting."
msgstr ""

# dc8436bf61c84576ada528887d4ed70c
#: ../../ref/templates/api.txt:552
msgid "The TEMPLATE_DIRS setting"
msgstr ""

# 8749c89a241a4b979c00afab14dffe89
#: ../../ref/templates/api.txt:554
msgid ""
"Tell Django what your template directories are by using the :setting:"
"`TEMPLATE_DIRS` setting in your settings file. This should be set to a list "
"or tuple of strings that contain full paths to your template directory(ies). "
"Example::"
msgstr ""

# da668827129040cb91a49bfc9d3ee1c4
#: ../../ref/templates/api.txt:564
msgid ""
"Your templates can go anywhere you want, as long as the directories and "
"templates are readable by the Web server. They can have any extension you "
"want, such as ``.html`` or ``.txt``, or they can have no extension at all."
msgstr ""

# 6e397ede07dd41528a8fea07f08ff32c
#: ../../ref/templates/api.txt:573
msgid "The Python API"
msgstr ""

# 88f884d0811b4c4c9f38551031ac906e
#: ../../ref/templates/api.txt:575
msgid "Django has two ways to load templates from files:"
msgstr ""

# a517b4c58eeb4009a71a845ffbb8116c
#: ../../ref/templates/api.txt:579
msgid ""
"``get_template`` returns the compiled template (a ``Template`` object) for "
"the template with the given name. If the template doesn't exist, it raises "
"``django.template.TemplateDoesNotExist``."
msgstr ""

# 892bf79282ec4f5fbbd7817bab964fdc
#: ../../ref/templates/api.txt:585
msgid ""
"``select_template`` is just like ``get_template``, except it takes a list of "
"template names. Of the list, it returns the first template that exists."
msgstr ""

# c92e406e6b1642d4963d32ac7ca2ac56
#: ../../ref/templates/api.txt:588
msgid ""
"For example, if you call ``get_template('story_detail.html')`` and have the "
"above :setting:`TEMPLATE_DIRS` setting, here are the files Django will look "
"for, in order:"
msgstr ""

# 7fea67233e8448e286f7a4768cea695d
# f4b6df2b475c4f54864db08c50ec8e10
#: ../../ref/templates/api.txt:592 ../../ref/templates/api.txt:600
msgid "``/home/html/templates/lawrence.com/story_detail.html``"
msgstr ""

# 372962e8987442a0b6ad12709df20f20
# 0f874316c2ea44d58c8bd60850ccb0eb
#: ../../ref/templates/api.txt:593 ../../ref/templates/api.txt:601
msgid "``/home/html/templates/default/story_detail.html``"
msgstr ""

# e01b97904a944478b3a47858e9485180
#: ../../ref/templates/api.txt:595
msgid ""
"If you call ``select_template(['story_253_detail.html', 'story_detail.html'])"
"``, here's what Django will look for:"
msgstr ""

# d35a579dfebb4131a9283dba02a1581c
#: ../../ref/templates/api.txt:598
msgid "``/home/html/templates/lawrence.com/story_253_detail.html``"
msgstr ""

# 58bc5913d9754b71b9344f8705b283d4
#: ../../ref/templates/api.txt:599
msgid "``/home/html/templates/default/story_253_detail.html``"
msgstr ""

# f8c3980151f9424e820958aaecd3672c
#: ../../ref/templates/api.txt:603
msgid "When Django finds a template that exists, it stops looking."
msgstr ""

# 5b280908ced94be7918695024c44a9d1
#: ../../ref/templates/api.txt:607
msgid ""
"You can use ``select_template()`` for super-flexible \"templatability.\" For "
"example, if you've written a news story and want some stories to have custom "
"templates, use something like ``select_template(['story_%s_detail.html' % "
"story.id, 'story_detail.html'])``. That'll allow you to use a custom "
"template for an individual story, with a fallback template for stories that "
"don't have custom templates."
msgstr ""

# ce2015f1ba6345fabcd094cc89a61e23
#: ../../ref/templates/api.txt:615
msgid "Using subdirectories"
msgstr ""

# 88a8b13f6a88467bb64e20462c2a15ea
#: ../../ref/templates/api.txt:617
msgid ""
"It's possible -- and preferable -- to organize templates in subdirectories "
"of the template directory. The convention is to make a subdirectory for each "
"Django app, with subdirectories within those subdirectories as needed."
msgstr ""

# 1aa7f89f8b62466092f162a750578734
#: ../../ref/templates/api.txt:621
msgid ""
"Do this for your own sanity. Storing all templates in the root level of a "
"single directory gets messy."
msgstr ""

# 8804dbc95f2040e88cc4fe4e0f9a5d37
#: ../../ref/templates/api.txt:624
msgid ""
"To load a template that's within a subdirectory, just use a slash, like so::"
msgstr ""

# 0440ccf7af85405b8cec5647b3e7b62c
#: ../../ref/templates/api.txt:628
msgid ""
"Using the same :setting:`TEMPLATE_DIRS` setting from above, this example "
"``get_template()`` call will attempt to load the following templates:"
msgstr ""

# be945f9e842949969238dbb1e1cbcfc0
#: ../../ref/templates/api.txt:631
msgid "``/home/html/templates/lawrence.com/news/story_detail.html``"
msgstr ""

# d66b11f9867844fc94af190245ac00bd
#: ../../ref/templates/api.txt:632
msgid "``/home/html/templates/default/news/story_detail.html``"
msgstr ""

# 18255adf3cdc43c594c5e9ce5c3e6d81
#: ../../ref/templates/api.txt:637
msgid "Loader types"
msgstr ""

# 46e1a971cd5042d0ba7662c4e3efe5c8
#: ../../ref/templates/api.txt:639
msgid ""
"By default, Django uses a filesystem-based template loader, but Django comes "
"with a few other template loaders, which know how to load templates from "
"other sources."
msgstr ""

# 143b851d4f4c482abb2331816ef06ebe
#: ../../ref/templates/api.txt:643
msgid ""
"Some of these other loaders are disabled by default, but you can activate "
"them by editing your :setting:`TEMPLATE_LOADERS` setting. :setting:"
"`TEMPLATE_LOADERS` should be a tuple of strings, where each string "
"represents a template loader class. Here are the template loaders that come "
"with Django:"
msgstr ""

# 520f7c5a2c984e3a8abd4ee540bfbfbb
#: ../../ref/templates/api.txt:654
msgid ""
"Loads templates from the filesystem, according to :setting:`TEMPLATE_DIRS`. "
"This loader is enabled by default."
msgstr ""

# 7e5f5bb047bc4de7a701af2602a955d9
#: ../../ref/templates/api.txt:658
msgid ""
"Loads templates from Django apps on the filesystem. For each app in :setting:"
"`INSTALLED_APPS`, the loader looks for a ``templates`` subdirectory. If the "
"directory exists, Django looks for templates in there."
msgstr ""

# a5127c195f3645f3a2ca09b96c3951c1
#: ../../ref/templates/api.txt:662
msgid ""
"This means you can store templates with your individual apps. This also "
"makes it easy to distribute Django apps with default templates."
msgstr ""

# a44a9f8bf80a4acf9a96f1b18dd2daa1
#: ../../ref/templates/api.txt:665
msgid "For example, for this setting::"
msgstr ""

# 3e19956768b04ddba4cf28eaa701786a
#: ../../ref/templates/api.txt:669
msgid ""
"...then ``get_template('foo.html')`` will look for templates in these "
"directories, in this order:"
msgstr ""

# 163e07464c5e45c281eb12f85ecd97fc
#: ../../ref/templates/api.txt:672
msgid "``/path/to/myproject/polls/templates/foo.html``"
msgstr ""

# ef75f25fa96847479909e33e01db6a1d
#: ../../ref/templates/api.txt:673
msgid "``/path/to/myproject/music/templates/foo.html``"
msgstr ""

# 12de1d7a683e473db9635d1d0282dcbd
#: ../../ref/templates/api.txt:675
msgid ""
"Note that the loader performs an optimization when it is first imported: It "
"caches a list of which :setting:`INSTALLED_APPS` packages have a "
"``templates`` subdirectory."
msgstr ""

# 2ea152f52884416f8aec7fe3e4327591
#: ../../ref/templates/api.txt:679
msgid "This loader is enabled by default."
msgstr ""

# 6aa15811a2bd477a8a284a2569b81a28
#: ../../ref/templates/api.txt:682
msgid ""
"Just like ``app_directories`` above, but it loads templates from Python eggs "
"rather than from the filesystem."
msgstr ""

# 2614658df27244f58ae6821f167d8079
# d4c12dec61f745c68424efb52adb0dc7
#: ../../ref/templates/api.txt:685 ../../ref/templates/api.txt:717
msgid "This loader is disabled by default."
msgstr ""

# 43ec1af8d1dd4912824bcd2be60113af
#: ../../ref/templates/api.txt:688
msgid ""
"By default, the templating system will read and compile your templates every "
"time they need to be rendered. While the Django templating system is quite "
"fast, the overhead from reading and compiling templates can add up."
msgstr ""

# 8efebae6c631477fa0d812a9bed79433
#: ../../ref/templates/api.txt:692
msgid ""
"The cached template loader is a class-based loader that you configure with a "
"list of other loaders that it should wrap. The wrapped loaders are used to "
"locate unknown templates when they are first encountered. The cached loader "
"then stores the compiled ``Template`` in memory. The cached ``Template`` "
"instance is returned for subsequent requests to load the same template."
msgstr ""

# 9a43eb18fb674f008facdbc125959b9d
#: ../../ref/templates/api.txt:698
msgid ""
"For example, to enable template caching with the ``filesystem`` and "
"``app_directories`` template loaders you might use the following settings::"
msgstr ""

# 0d44ae0536cf4127b4819c5cb8b3dfb1
#: ../../ref/templates/api.txt:710
msgid ""
"All of the built-in Django template tags are safe to use with the cached "
"loader, but if you're using custom template tags that come from third party "
"packages, or that you wrote yourself, you should ensure that the ``Node`` "
"implementation for each tag is thread-safe. For more information, see :ref:"
"`template tag thread safety considerations<template_tag_thread_safety>`."
msgstr ""

# 8ba6303e77bc48dda7fd1e48516187e3
#: ../../ref/templates/api.txt:719
msgid ""
"Django uses the template loaders in order according to the :setting:"
"`TEMPLATE_LOADERS` setting. It uses each loader until a loader finds a match."
msgstr ""

# e535dd7ab2b74f2185fef3fcbfd84bf2
#: ../../ref/templates/api.txt:724
msgid "The ``render_to_string`` shortcut"
msgstr ""

# d125b0d21a6d464782db96cb75c4421e
#: ../../ref/templates/api.txt:728
msgid ""
"To cut down on the repetitive nature of loading and rendering templates, "
"Django provides a shortcut function which largely automates the process: "
"``render_to_string()`` in :mod:`django.template.loader`, which loads a "
"template, renders it and returns the resulting string::"
msgstr ""

# dbb331657df8437186e5dc2e4ab74ec4
#: ../../ref/templates/api.txt:737
msgid ""
"The ``render_to_string`` shortcut takes one required argument -- "
"``template_name``, which should be the name of the template to load and "
"render (or a list of template names, in which case Django will use the first "
"template in the list that exists) -- and two optional arguments:"
msgstr ""

# 42d0bd50d040414d923cb096e52c1948
#: ../../ref/templates/api.txt:743
msgid ""
"A dictionary to be used as variables and values for the template's context. "
"This can also be passed as the second positional argument."
msgstr ""

# 2fb0b989f752406d87586c89c32f1542
#: ../../ref/templates/api.txt:748
msgid ""
"An instance of ``Context`` or a subclass (e.g., an instance of "
"``RequestContext``) to use as the template's context. This can also be "
"passed as the third positional argument."
msgstr ""

# 3cf460b6e43948469399cfd0fea75e27
#: ../../ref/templates/api.txt:752
msgid ""
"See also the :func:`~django.shortcuts.render_to_response()` shortcut, which "
"calls ``render_to_string`` and feeds the result into an :class:`~django.http."
"HttpResponse` suitable for returning directly from a view."
msgstr ""

# 83e6100c3f7545ca89ac70811a574ce3
#: ../../ref/templates/api.txt:757
msgid "Configuring the template system in standalone mode"
msgstr ""

# 7a872f3fefb44ed9bda7ca04c1ef1853
#: ../../ref/templates/api.txt:761
msgid ""
"This section is only of interest to people trying to use the template system "
"as an output component in another application. If you're using the template "
"system as part of a Django application, nothing here applies to you."
msgstr ""

# bb6082c4d3df4631b4aa8c0719b399d0
#: ../../ref/templates/api.txt:766
msgid ""
"Normally, Django will load all the configuration information it needs from "
"its own default configuration file, combined with the settings in the module "
"given in the :envvar:`DJANGO_SETTINGS_MODULE` environment variable. But if "
"you're using the template system independently of the rest of Django, the "
"environment variable approach isn't very convenient, because you probably "
"want to configure the template system in line with the rest of your "
"application rather than dealing with settings files and pointing to them via "
"environment variables."
msgstr ""

# e603d9b18f82455f9577434055e76ca1
#: ../../ref/templates/api.txt:774
msgid ""
"To solve this problem, you need to use the manual configuration option "
"described in :ref:`settings-without-django-settings-module`. Simply import "
"the appropriate pieces of the templating system and then, *before* you call "
"any of the templating functions, call :func:`django.conf.settings.configure()"
"` with any settings you wish to specify. You might want to consider setting "
"at least :setting:`TEMPLATE_DIRS` (if you're going to use template "
"loaders), :setting:`DEFAULT_CHARSET` (although the default of ``utf-8`` is "
"probably fine) and :setting:`TEMPLATE_DEBUG`. All available settings are "
"described in the :doc:`settings documentation </ref/settings>`, and any "
"setting starting with ``TEMPLATE_`` is of obvious interest."
msgstr ""

# 3cc50486debe45bea79e00b815413180
#: ../../ref/templates/api.txt:788
msgid "Using an alternative template language"
msgstr ""

# 35f364ea5b42452481162f32e34d2d27
#: ../../ref/templates/api.txt:792
msgid ""
"The Django ``Template`` and ``Loader`` classes implement a simple API for "
"loading and rendering templates. By providing some simple wrapper classes "
"that implement this API we can use third party template systems like `Jinja2 "
"<http://jinja.pocoo.org/2/>`_ or `Cheetah <http://www.cheetahtemplate.org/"
">`_. This allows us to use third-party template libraries without giving up "
"useful Django features like the Django ``Context`` object and handy "
"shortcuts like :func:`~django.shortcuts.render_to_response()`."
msgstr ""

# d78ea0b76ed847b89826b9bb82975c04
#: ../../ref/templates/api.txt:800
msgid ""
"The core component of the Django templating system is the ``Template`` "
"class. This class has a very simple interface: it has a constructor that "
"takes a single positional argument specifying the template string, and a "
"``render()`` method that takes a :class:`~django.template.Context` object "
"and returns a string containing the rendered response."
msgstr ""

# f05fd2305e604bcdad5ed4666c63a38b
#: ../../ref/templates/api.txt:806
msgid ""
"Suppose we're using a template language that defines a ``Template`` object "
"with a ``render()`` method that takes a dictionary rather than a ``Context`` "
"object. We can write a simple wrapper that implements the Django "
"``Template`` interface::"
msgstr ""

# 72f5766d626b4a2d8998a785f2bf8d2b
#: ../../ref/templates/api.txt:819
msgid ""
"That's all that's required to make our fictional ``Template`` class "
"compatible with the Django loading and rendering system!"
msgstr ""

# 16a233dea06e44568a596feb177d3273
#: ../../ref/templates/api.txt:822
msgid ""
"The next step is to write a ``Loader`` class that returns instances of our "
"custom template class instead of the default :class:`~django.template."
"Template`. Custom ``Loader`` classes should inherit from ``django.template."
"loader.BaseLoader`` and override the ``load_template_source()`` method, "
"which takes a ``template_name`` argument, loads the template from disk (or "
"elsewhere), and returns a tuple: ``(template_string, template_origin)``."
msgstr ""

# 847d5b2fe51e4ef990ee1f0a0822b6ef
#: ../../ref/templates/api.txt:829
msgid ""
"The ``load_template()`` method of the ``Loader`` class retrieves the "
"template string by calling ``load_template_source()``, instantiates a "
"``Template`` from the template source, and returns a tuple: ``(template, "
"template_origin)``. Since this is the method that actually instantiates the "
"``Template``, we'll need to override it to use our custom template class "
"instead. We can inherit from the builtin :class:`django.template.loaders."
"app_directories.Loader` to take advantage of the ``load_template_source()`` "
"method implemented there::"
msgstr ""

# 63cc81c6ba6e4eda93f0ad5e55e81de6
#: ../../ref/templates/api.txt:846
msgid ""
"Finally, we need to modify our project settings, telling Django to use our "
"custom loader. Now we can write all of our templates in our alternative "
"template language while continuing to use the rest of the Django templating "
"system."
msgstr ""

# e2bc2e5a595748aeaec18ff53023ae18
#: ../../ref/templates/builtins.txt:3
msgid "Built-in template tags and filters"
msgstr ""

# c375a3bfacd347c7b432eebb2672aebd
#: ../../ref/templates/builtins.txt:5
msgid ""
"This document describes Django's built-in template tags and filters. It is "
"recommended that you use the :doc:`automatic documentation </ref/contrib/"
"admin/admindocs>`, if available, as this will also include documentation for "
"any custom tags or filters installed."
msgstr ""

# 9dff2cffaff7428c98c13b2a476ae925
#: ../../ref/templates/builtins.txt:13
msgid "Built-in tag reference"
msgstr ""

# 64ed22b72d1740879c7d5b441d3c4fbe
#: ../../ref/templates/builtins.txt:20
msgid "autoescape"
msgstr ""

# 900ba6278ce6449cbadbb80b95e21202
#: ../../ref/templates/builtins.txt:22
msgid ""
"Controls the current auto-escaping behavior. This tag takes either ``on`` or "
"``off`` as an argument and that determines whether auto-escaping is in "
"effect inside the block. The block is closed with an ``endautoescape`` "
"ending tag."
msgstr ""

# 5c135bdae00d44098aebbe0aae3b5038
#: ../../ref/templates/builtins.txt:26
msgid ""
"When auto-escaping is in effect, all variable content has HTML escaping "
"applied to it before placing the result into the output (but after any "
"filters have been applied). This is equivalent to manually applying the :"
"tfilter:`escape` filter to each variable."
msgstr ""

# ad23147174c84b799e2887d6755c6871
#: ../../ref/templates/builtins.txt:31
msgid ""
"The only exceptions are variables that are already marked as \"safe\" from "
"escaping, either by the code that populated the variable, or because it has "
"had the :tfilter:`safe` or :tfilter:`escape` filters applied."
msgstr ""

# e9d7aabab38a4c33af02669f8dcbf612
# 90126365c5074f24a6a9753e30faf8c7
# 152e2db8aa514c5ca881f26e7706e8af
# 8fa627895e1c4545b17611e842262061
#: ../../ref/templates/builtins.txt:35 ../../ref/templates/builtins.txt:227
#: ../../ref/templates/builtins.txt:249 ../../ref/utils.txt:228
msgid "Sample usage::"
msgstr ""

# b6852f50b90f42ba81ea035fd72aab37
#: ../../ref/templates/builtins.txt:44
msgid "block"
msgstr ""

# a7dc2bd33dd44d7f9371ed762da70289
#: ../../ref/templates/builtins.txt:46
msgid ""
"Defines a block that can be overridden by child templates. See :ref:"
"`Template inheritance <template-inheritance>` for more information."
msgstr ""

# f3bb1b4a3320498bac4d7254dfd43810
#: ../../ref/templates/builtins.txt:52
msgid "comment"
msgstr ""

# f22b08a5dde744a98e27512776fbadde
#: ../../ref/templates/builtins.txt:54
msgid "Ignores everything between ``{% comment %}`` and ``{% endcomment %}``."
msgstr ""

# 75d7fb9aec074f0f9b56756554f3c7c6
#: ../../ref/templates/builtins.txt:59
msgid "csrf_token"
msgstr ""

# 67b9bbae3d574502bd379cef9e4a2a5f
#: ../../ref/templates/builtins.txt:61
msgid ""
"In the Django 1.1.X series, this is a no-op tag that returns an empty string "
"for future compatibility purposes.  In Django 1.2 and later, it is used for "
"CSRF protection, as described in the documentation for :doc:`Cross Site "
"Request Forgeries </ref/contrib/csrf>`."
msgstr ""

# d7b6accf34ee4552b5eadf0a74b7f189
#: ../../ref/templates/builtins.txt:69
msgid "cycle"
msgstr ""

# d81ff561523f455a94b06dd9aed95703
#: ../../ref/templates/builtins.txt:71
msgid ""
"Cycles among the given strings or variables each time this tag is "
"encountered."
msgstr ""

# 2a7261bd2c4e4a1f9944c23c84b614e9
#: ../../ref/templates/builtins.txt:73
msgid ""
"Within a loop, cycles among the given strings each time through the loop::"
msgstr ""

# e5eeb0684df44ed485d716ebecfc52c5
#: ../../ref/templates/builtins.txt:82
msgid ""
"You can use variables, too. For example, if you have two template variables, "
"``rowvalue1`` and ``rowvalue2``, you can cycle between their values like "
"this::"
msgstr ""

# f6e3675eea5e4eb4bd18123668fa49d0
#: ../../ref/templates/builtins.txt:91
msgid ""
"Note that variable arguments (``rowvalue1`` and ``rowvalue2`` above) are NOT "
"auto-escaped! So either make sure that you trust their values, or use "
"explicit escaping, like this::"
msgstr ""

# 6a9282da53574a8bb877594b204d98eb
#: ../../ref/templates/builtins.txt:101
msgid "You can mix variables and strings::"
msgstr ""

# 72221e2c281a47ed8eff7ff2aa8f9680
#: ../../ref/templates/builtins.txt:109
msgid ""
"In some cases you might want to refer to the next value of a cycle from "
"outside of a loop. To do this, just give the ``{% cycle %}`` tag a name, "
"using \"as\", like this::"
msgstr ""

# 4968b81ffcae450192cfbe713a707774
#: ../../ref/templates/builtins.txt:115
msgid ""
"From then on, you can insert the current value of the cycle wherever you'd "
"like in your template by referencing the cycle name as a context variable. "
"If you want to move the cycle onto the next value, you use the cycle tag "
"again, using the name of the variable. So, the following template::"
msgstr ""

# 0a5b3fa692f04da9b90036788ca50f8e
#: ../../ref/templates/builtins.txt:130
msgid "would output::"
msgstr ""

# c01f0f8bfd264c2d9c590e520f5b6c77
#: ../../ref/templates/builtins.txt:141
msgid ""
"You can use any number of values in a ``{% cycle %}`` tag, separated by "
"spaces. Values enclosed in single (``'``) or double quotes (``\"``) are "
"treated as string literals, while values without quotes are treated as "
"template variables."
msgstr ""

# 922b3b6e7fce4d939a8dac572722d39b
#: ../../ref/templates/builtins.txt:145
msgid ""
"Note that the variables included in the cycle will not be escaped. This is "
"because template tags do not escape their content. Any HTML or Javascript "
"code contained in the printed variable will be rendered as-is, which could "
"potentially lead to security issues."
msgstr ""

# 6b1dd3ff52774e1495d1e34c5eae3b57
#: ../../ref/templates/builtins.txt:150
msgid ""
"For backwards compatibility, the ``{% cycle %}`` tag supports the much "
"inferior old syntax from previous Django versions. You shouldn't use this in "
"any new projects, but for the sake of the people who are still using it, "
"here's what it looks like::"
msgstr ""

# 45b760638c8943568e1e18c5f920b0eb
#: ../../ref/templates/builtins.txt:157
msgid ""
"In this syntax, each value gets interpreted as a literal string, and there's "
"no way to specify variable values. Or literal commas. Or spaces. Did we "
"mention you shouldn't use this syntax in any new projects?"
msgstr ""

# 3e7f6dc6e1c74072a69a5d38730c5263
#: ../../ref/templates/builtins.txt:163
msgid ""
"By default, when you use the ``as`` keyword with the cycle tag, the usage of "
"``{% cycle %}`` that declares the cycle will itself output the first value "
"in the cycle. This could be a problem if you want to use the value in a "
"nested loop or an included template. If you want to just declare the cycle, "
"but not output the first value, you can add a ``silent`` keyword as the last "
"keyword in the tag. For example::"
msgstr ""

# 6a47b81b17c04cacb4ad3fd26efdac55
#: ../../ref/templates/builtins.txt:175
msgid ""
"This will output a list of ``<tr>`` elements with ``class`` alternating "
"between ``row1`` and ``row2``; the subtemplate will have access to "
"``rowcolors`` in it's context that matches the class of the ``<tr>`` that "
"encloses it. If the ``silent`` keyword were to be omitted, ``row1`` would be "
"emitted as normal text, outside the ``<tr>`` element."
msgstr ""

# b6d4b61a02944075965109e2de2aab60
#: ../../ref/templates/builtins.txt:182
msgid ""
"When the silent keyword is used on a cycle definition, the silence "
"automatically applies to all subsequent uses of the cycle tag. In, the "
"following template would output *nothing*, even though the second call to ``"
"{% cycle %}`` doesn't specify silent::"
msgstr ""

# 3f7c65b39a6644aab38202cd77816d2a
#: ../../ref/templates/builtins.txt:193
msgid "debug"
msgstr ""

# 640532dc147e42c78918960f041fe78b
#: ../../ref/templates/builtins.txt:195
msgid ""
"Outputs a whole load of debugging information, including the current context "
"and imported modules."
msgstr ""

# 55e073b2f1e64ab5992a0bea8cc7d55d
#: ../../ref/templates/builtins.txt:201
msgid "extends"
msgstr ""

# 85d346c3d5c542b89c8abd824c6bbd2e
#: ../../ref/templates/builtins.txt:203
msgid "Signals that this template extends a parent template."
msgstr ""

# 78ce82b4eda04e6ebb2934e205cb843c
#: ../../ref/templates/builtins.txt:205
msgid "This tag can be used in two ways:"
msgstr ""

# 4e62c807531b4128950ffd20706f5f5d
#: ../../ref/templates/builtins.txt:207
msgid ""
"``{% extends \"base.html\" %}`` (with quotes) uses the literal value ``"
"\"base.html\"`` as the name of the parent template to extend."
msgstr ""

# 880d9504c2fc4241b21a5a7509ffdf06
#: ../../ref/templates/builtins.txt:210
msgid ""
"``{% extends variable %}`` uses the value of ``variable``. If the variable "
"evaluates to a string, Django will use that string as the name of the parent "
"template. If the variable evaluates to a ``Template`` object, Django will "
"use that object as the parent template."
msgstr ""

# ea22a35047424030820b584ba6d64922
#: ../../ref/templates/builtins.txt:215
msgid "See :ref:`template-inheritance` for more information."
msgstr ""

# 4ece59218a6c4fe8a705e1f004faa934
#: ../../ref/templates/builtins.txt:222
msgid "Filters the contents of the variable through variable filters."
msgstr ""

# 73003369bb8b4177a1ef1ec4ff9a517d
#: ../../ref/templates/builtins.txt:224
msgid ""
"Filters can also be piped through each other, and they can have arguments -- "
"just like in variable syntax."
msgstr ""

# 33c0c791459b439e9e1edddf335ac3a9
#: ../../ref/templates/builtins.txt:235
msgid ""
"The :tfilter:`escape` and :tfilter:`safe` filters are not acceptable "
"arguments. Instead, use the :ttag:`autoescape` tag to manage autoescaping "
"for blocks of template code."
msgstr ""

# ec7e44d9da094d8a8b8f9b9cd3a57f52
#: ../../ref/templates/builtins.txt:242
msgid "firstof"
msgstr ""

# c3dd5cb78a6c47bf9e9565c51553a8c4
#: ../../ref/templates/builtins.txt:244
msgid ""
"Outputs the first variable passed that is not False. Does NOT auto-escape "
"variable values."
msgstr ""

# b7c02af6fccf41ffbc3a0dec11a7c603
#: ../../ref/templates/builtins.txt:247
msgid "Outputs nothing if all the passed variables are False."
msgstr ""

# bb33ef17d06841cf9ca6a05ea1a3829d
#: ../../ref/templates/builtins.txt:253
msgid "This is equivalent to::"
msgstr ""

# df55c31835ed4e29aae97677410b5c63
#: ../../ref/templates/builtins.txt:263
msgid ""
"You can also use a literal string as a fallback value in case all passed "
"variables are False::"
msgstr ""

# 854e7e3efa834c86a531c9a965a3f03b
#: ../../ref/templates/builtins.txt:268
msgid ""
"Note that the variables included in the firstof tag will not be escaped. "
"This is because template tags do not escape their content. Any HTML or "
"Javascript code contained in the printed variable will be rendered as-is, "
"which could potentially lead to security issues. If you need to escape the "
"variables in the firstof tag, you must do so explicitly::"
msgstr ""

# 8f065e17a53944acabd2ffb63eb7d249
#: ../../ref/templates/builtins.txt:282
msgid "for"
msgstr ""

# 9e0e4ae3eed143daa912f3925cde0a7d
#: ../../ref/templates/builtins.txt:284
msgid ""
"Loop over each item in an array.  For example, to display a list of athletes "
"provided in ``athlete_list``::"
msgstr ""

# c06ef693d692491b9e50dfd91e77a5cd
#: ../../ref/templates/builtins.txt:293
msgid ""
"You can loop over a list in reverse by using ``{% for obj in list reversed %}"
"``."
msgstr ""

# 59b51d472f5c4a708bf37255d1755b6d
#: ../../ref/templates/builtins.txt:296
msgid ""
"If you need to loop over a list of lists, you can unpack the values in each "
"sub-list into individual variables. For example, if your context contains a "
"list of (x,y) coordinates called ``points``, you could use the following to "
"output the list of points::"
msgstr ""

# c5941b160a8a4ec4b13b0dd0e48321ad
#: ../../ref/templates/builtins.txt:305
msgid ""
"This can also be useful if you need to access the items in a dictionary. For "
"example, if your context contained a dictionary ``data``, the following "
"would display the keys and values of the dictionary::"
msgstr ""

# 6ece25150d8544c0a9afbb41fdfbade8
#: ../../ref/templates/builtins.txt:313
msgid "The for loop sets a number of variables available within the loop:"
msgstr ""

# 57ce67c727e54db9961380e026b47e3c
#: ../../ref/templates/builtins.txt:316
msgid "Variable"
msgstr ""

# d5c29aadfc9448a7a9d9ab7b30a42d48
#: ../../ref/templates/builtins.txt:318
msgid "``forloop.counter``"
msgstr ""

# e49eed8c68fa4fe0bcf2ad290d566455
#: ../../ref/templates/builtins.txt:318
msgid "The current iteration of the loop (1-indexed)"
msgstr ""

# c70d7f8847254df2b383631525d3268e
#: ../../ref/templates/builtins.txt:319
msgid "``forloop.counter0``"
msgstr ""

# fa4ec04d53d94831bf55b1af5b9536ea
#: ../../ref/templates/builtins.txt:319
msgid "The current iteration of the loop (0-indexed)"
msgstr ""

# 37ab0ccbf60d47e8bd43a3ff59834760
#: ../../ref/templates/builtins.txt:320
msgid "``forloop.revcounter``"
msgstr ""

# 89b259b7b602442385c8a8d0e15e4f05
#: ../../ref/templates/builtins.txt:320
msgid "The number of iterations from the end of the loop (1-indexed)"
msgstr ""

# 03707a2cc6c64f45bd755fedcf1e0f95
#: ../../ref/templates/builtins.txt:322
msgid "``forloop.revcounter0``"
msgstr ""

# a02d558029ef4265bb0885b3963f9bd4
#: ../../ref/templates/builtins.txt:322
msgid "The number of iterations from the end of the loop (0-indexed)"
msgstr ""

# a135b4b75a4e490f99261af03ddcb9eb
#: ../../ref/templates/builtins.txt:324
msgid "``forloop.first``"
msgstr ""

# d7cf7b1c24f64c269403253948cdf264
#: ../../ref/templates/builtins.txt:324
msgid "True if this is the first time through the loop"
msgstr ""

# f0c2edc8a71b4b4983e69077dc9bbad8
#: ../../ref/templates/builtins.txt:325
msgid "``forloop.last``"
msgstr ""

# 1d30582faee849ffad2a58d893ab2fae
#: ../../ref/templates/builtins.txt:325
msgid "True if this is the last time through the loop"
msgstr ""

# e7162e9219d145e4b192f688ce7a40cd
#: ../../ref/templates/builtins.txt:326
msgid "``forloop.parentloop``"
msgstr ""

# 4d14512809024a8899d044268cb77ad6
#: ../../ref/templates/builtins.txt:326
msgid "For nested loops, this is the loop \"above\" the current one"
msgstr ""

# 953306e14be2425c9e596926048163d4
#: ../../ref/templates/builtins.txt:331
msgid "for ... empty"
msgstr ""

# 8cd84caa6dae4f50b7421e335fd08270
#: ../../ref/templates/builtins.txt:333
msgid ""
"The ``for`` tag can take an optional ``{% empty %}`` clause that will be "
"displayed if the given array is empty or could not be found::"
msgstr ""

# b81f06d11704404289d69d19bd7e6087
#: ../../ref/templates/builtins.txt:344
msgid ""
"The above is equivalent to -- but shorter, cleaner, and possibly faster than "
"-- the following::"
msgstr ""

# da28396a91eb45b89a9fc3b0dae62f07
#: ../../ref/templates/builtins.txt:360
msgid "if"
msgstr ""

# 450fee271f994e42863da118e2d1a0dd
#: ../../ref/templates/builtins.txt:362
msgid ""
"The ``{% if %}`` tag evaluates a variable, and if that variable is \"true"
"\" (i.e. exists, is not empty, and is not a false boolean value) the "
"contents of the block are output::"
msgstr ""

# 2cfe85956aa64f20857bacda1e46e8d0
#: ../../ref/templates/builtins.txt:374
msgid ""
"In the above, if ``athlete_list`` is not empty, the number of athletes will "
"be displayed by the ``{{ athlete_list|length }}`` variable."
msgstr ""

# eb43e6b50a6349ab8ea44b024a24c59a
#: ../../ref/templates/builtins.txt:377
msgid ""
"As you can see, the ``if`` tag may take one or several `` {% elif %}`` "
"clauses, as well as an ``{% else %}`` clause that will be displayed if all "
"previous conditions fail. These clauses are optional."
msgstr ""

# 38c419815142494e84252551e3d55298
#: ../../ref/templates/builtins.txt:383
msgid "The ``if`` tag now supports ``{% elif %}`` clauses."
msgstr ""

# 632ad37bc182403e94519cbdf9c57374
#: ../../ref/templates/builtins.txt:386
msgid "Boolean operators"
msgstr ""

# f09fcb62c2a5446091d00ff07555246f
#: ../../ref/templates/builtins.txt:388
msgid ""
":ttag:`if` tags may use ``and``, ``or`` or ``not`` to test a number of "
"variables or to negate a given variable::"
msgstr ""

# 9cad8e18266546a69222d74f385e2e09
#: ../../ref/templates/builtins.txt:415
msgid ""
"Use of both ``and`` and ``or`` clauses within the same tag is allowed, with "
"``and`` having higher precedence than ``or`` e.g.::"
msgstr ""

# 9338c631863d4445a81fd08f85505e53
#: ../../ref/templates/builtins.txt:420
msgid "will be interpreted like:"
msgstr ""

# ff3f0da01ac44f28a2b44b00e0753d0d
#: ../../ref/templates/builtins.txt:426
msgid ""
"Use of actual brackets in the :ttag:`if` tag is invalid syntax.  If you need "
"them to indicate precedence, you should use nested :ttag:`if` tags."
msgstr ""

# a6038d6de4df43b899608b0763e4d271
#: ../../ref/templates/builtins.txt:432
msgid ""
":ttag:`if` tags may also use the operators ``==``, ``!=``, ``<``, ``>``, "
"``<=``, ``>=`` and ``in`` which work as follows:"
msgstr ""

# 6f0978984fe24e92a48e1d9904a4e365
#: ../../ref/templates/builtins.txt:437
msgid "``==`` operator"
msgstr ""

# 216c69236af346408dcc20a2d004cea5
#: ../../ref/templates/builtins.txt:439
msgid "Equality. Example::"
msgstr ""

# 81cad30426ab45248f3b191bb068e22e
#: ../../ref/templates/builtins.txt:446
msgid "``!=`` operator"
msgstr ""

# aa968f2d162a4d7ca84ab96ed5610f56
#: ../../ref/templates/builtins.txt:448
msgid "Inequality. Example::"
msgstr ""

# 9beb4594159048c9bde17a1db7a322fb
#: ../../ref/templates/builtins.txt:456
msgid "``<`` operator"
msgstr ""

# 256f99117f7644b1a53dd6011b118feb
#: ../../ref/templates/builtins.txt:458
msgid "Less than. Example::"
msgstr ""

# d91eda71fbe34fa9bac82ebc70f1e051
#: ../../ref/templates/builtins.txt:465
msgid "``>`` operator"
msgstr ""

# 8f6ec280844b424c97cd43f3a4fce4e8
#: ../../ref/templates/builtins.txt:467
msgid "Greater than. Example::"
msgstr ""

# 85a2510d98334e9e83a574a59d3281a0
#: ../../ref/templates/builtins.txt:474
msgid "``<=`` operator"
msgstr ""

# bbfa5b9e463546f795b679dc217b1553
#: ../../ref/templates/builtins.txt:476
msgid "Less than or equal to. Example::"
msgstr ""

# fd9ced02745b41788a7c9bd0a7b7ee86
#: ../../ref/templates/builtins.txt:483
msgid "``>=`` operator"
msgstr ""

# e54b06f3a589479089427a379f681346
#: ../../ref/templates/builtins.txt:485
msgid "Greater than or equal to. Example::"
msgstr ""

# 239cfec392f947c6b11942b63bd4ccaa
#: ../../ref/templates/builtins.txt:492
msgid "``in`` operator"
msgstr ""

# 4710844e7b1f415fb8242059790cd9a7
#: ../../ref/templates/builtins.txt:494
msgid ""
"Contained within. This operator is supported by many Python containers to "
"test whether the given value is in the container.  The following are some "
"examples of how ``x in y`` will be interpreted::"
msgstr ""

# 8eeb393ab0344647b1790033d2979e3e
#: ../../ref/templates/builtins.txt:513
msgid "``not in`` operator"
msgstr ""

# 0d8643ffaab24a01a86a7a4aec381a6e
#: ../../ref/templates/builtins.txt:515
msgid "Not contained within.  This is the negation of the ``in`` operator."
msgstr ""

# 92bae9a0f428451084f09111b2c9f859
#: ../../ref/templates/builtins.txt:518
msgid ""
"The comparison operators cannot be 'chained' like in Python or in "
"mathematical notation. For example, instead of using::"
msgstr ""

# bc4707c7bd794619964b7d87bb35c0ff
#: ../../ref/templates/builtins.txt:523
msgid "you should use::"
msgstr ""

# 0b4e5d86b9c14d67939fdd3a8dcf7cbb
#: ../../ref/templates/builtins.txt:529
msgid "Filters"
msgstr ""

# 62fd5659f7ac441a92dee6c7083f03fb
#: ../../ref/templates/builtins.txt:531
msgid "You can also use filters in the :ttag:`if` expression. For example::"
msgstr ""

# d55f1696cf0b4b2d9684c45729ad5581
#: ../../ref/templates/builtins.txt:538
msgid "Complex expressions"
msgstr ""

# 702e3402803642e5a21128434c5ac2cf
#: ../../ref/templates/builtins.txt:540
msgid ""
"All of the above can be combined to form complex expressions. For such "
"expressions, it can be important to know how the operators are grouped when "
"the expression is evaluated - that is, the precedence rules.  The precedence "
"of the operators, from lowest to highest, is as follows:"
msgstr ""

# 7c23039a1cd44e7f815a0109f4cc8353
#: ../../ref/templates/builtins.txt:545
msgid "``or``"
msgstr ""

# 59b8cef3baaa4642b80bae234484519e
#: ../../ref/templates/builtins.txt:546
msgid "``and``"
msgstr ""

# 81ecdb6ea10c408fb78208e30ed486b5
#: ../../ref/templates/builtins.txt:547
msgid "``not``"
msgstr ""

# 062b5cb3832a4027aa0e45636945602f
#: ../../ref/templates/builtins.txt:548
msgid "``in``"
msgstr ""

# 272d6032db134388991b626e6ee10ad8
#: ../../ref/templates/builtins.txt:549
msgid "``==``, ``!=``, ``<``, ``>``, ``<=``, ``>=``"
msgstr ""

# 932fc54a344442f29e5a595c1ffdc1ab
#: ../../ref/templates/builtins.txt:551
msgid ""
"(This follows Python exactly). So, for example, the following complex :ttag:"
"`if` tag:"
msgstr ""

# 028882bc4440443c8c02802cb4a61d80
#: ../../ref/templates/builtins.txt:558
msgid "...will be interpreted as:"
msgstr ""

# c67060d3ff024379b24f326c5d087f27
#: ../../ref/templates/builtins.txt:564
msgid ""
"If you need different precedence, you will need to use nested :ttag:`if` "
"tags. Sometimes that is better for clarity anyway, for the sake of those who "
"do not know the precedence rules."
msgstr ""

# 14eec7c0a540482eb8d348c286b3e7b4
#: ../../ref/templates/builtins.txt:572
msgid "ifchanged"
msgstr ""

# 640bd9aa693448a2a23a4d8091fab293
#: ../../ref/templates/builtins.txt:574
msgid "Check if a value has changed from the last iteration of a loop."
msgstr ""

# 87f4b2cfd8b34e72a358d16b616ebd3b
#: ../../ref/templates/builtins.txt:576
msgid ""
"The ``{% ifchanged %}`` block tag is used within a loop. It has two possible "
"uses."
msgstr ""

# 5b2947dcb0474792a88f095cb4bf718f
#: ../../ref/templates/builtins.txt:579
msgid ""
"Checks its own rendered contents against its previous state and only "
"displays the content if it has changed. For example, this displays a list of "
"days, only displaying the month if it changes::"
msgstr ""

# 5f14ce9dbef24ffbaeac45ef1366de24
#: ../../ref/templates/builtins.txt:590
msgid ""
"If given one or more variables, check whether any variable has changed. For "
"example, the following shows the date every time it changes, while showing "
"the hour if either the hour or the date has changed::"
msgstr ""

# 5f6d78036df748f1b63988a64af894df
#: ../../ref/templates/builtins.txt:601
msgid ""
"The ``ifchanged`` tag can also take an optional ``{% else %}`` clause that "
"will be displayed if the value has not changed::"
msgstr ""

# 3e487154d8934024aa95146a7560a8a2
#: ../../ref/templates/builtins.txt:617
msgid "ifequal"
msgstr ""

# c1be6b65fead40ffa75daf75efb073d0
#: ../../ref/templates/builtins.txt:619
msgid "Output the contents of the block if the two arguments equal each other."
msgstr ""

# b9196d30ab724114b5306d8191d5d4a7
#: ../../ref/templates/builtins.txt:627
msgid "As in the :ttag:`if` tag, an ``{% else %}`` clause is optional."
msgstr ""

# 4c67d7cb1b074d3e8c5dddea1a6d1d8e
#: ../../ref/templates/builtins.txt:629
msgid "The arguments can be hard-coded strings, so the following is valid::"
msgstr ""

# fb998d85f51042a6beff28d3c2ba9724
#: ../../ref/templates/builtins.txt:635
msgid ""
"It is only possible to compare an argument to template variables or strings. "
"You cannot check for equality with Python objects such as ``True`` or "
"``False``.  If you need to test if something is true or false, use the :ttag:"
"`if` tag instead."
msgstr ""

# 896063ea79064fbea21c1338a77aec98
#: ../../ref/templates/builtins.txt:647
msgid "ifnotequal"
msgstr ""

# 89b388626ddf4a59a0210d00ca43fa90
#: ../../ref/templates/builtins.txt:649
msgid ""
"Just like :ttag:`ifequal`, except it tests that the two arguments are not "
"equal."
msgstr ""

# 92893af3d1144998b003f774d1a31771
#: ../../ref/templates/builtins.txt:659
msgid "include"
msgstr ""

# 876ab55a00494fe5975441d94d9a5039
#: ../../ref/templates/builtins.txt:661
msgid ""
"Loads a template and renders it with the current context. This is a way of "
"\"including\" other templates within a template."
msgstr ""

# 5aa5e25b57a3455a9fdeb43e271cd24d
#: ../../ref/templates/builtins.txt:664
msgid ""
"The template name can either be a variable or a hard-coded (quoted) string, "
"in either single or double quotes."
msgstr ""

# 7633a5cfdbb3479eaafcf01982356b73
#: ../../ref/templates/builtins.txt:667
msgid ""
"This example includes the contents of the template ``\"foo/bar.html\"``::"
msgstr ""

# 817d9030d3b94f01987dcdd5b5aa0e0f
#: ../../ref/templates/builtins.txt:671
msgid ""
"This example includes the contents of the template whose name is contained "
"in the variable ``template_name``::"
msgstr ""

# 517049049bae4ccab611d9ccb1f8cd5f
#: ../../ref/templates/builtins.txt:676
msgid ""
"An included template is rendered with the context of the template that's "
"including it. This example produces the output ``\"Hello, John\"``:"
msgstr ""

# c089548d32154d278cf4627867e9abaa
#: ../../ref/templates/builtins.txt:679
msgid "Context: variable ``person`` is set to ``\"john\"``."
msgstr ""

# f5c52c4d5c0f48e5bf168c1295668e8a
#: ../../ref/templates/builtins.txt:680
msgid "Template::"
msgstr ""

# 070c463873824bbf9e43b4367609cfd4
#: ../../ref/templates/builtins.txt:684
msgid "The ``name_snippet.html`` template::"
msgstr ""

# ae6b81a914f546f0b6970ebdbc82133a
#: ../../ref/templates/builtins.txt:691
msgid ""
"You can pass additional context to the template using keyword arguments::"
msgstr ""

# 1bab93b848924503aab785585dae4e28
#: ../../ref/templates/builtins.txt:695
msgid ""
"If you want to only render the context with the variables provided (or even "
"no variables at all), use the ``only`` option::"
msgstr ""

# 006a168907f24be1be5a572417c9e5bf
#: ../../ref/templates/builtins.txt:701
msgid ""
"The :ttag:`include` tag should be considered as an implementation of "
"\"render this subtemplate and include the HTML\", not as \"parse this "
"subtemplate and include its contents as if it were part of the parent\". "
"This means that there is no shared state between included templates -- each "
"include is a completely independent rendering process."
msgstr ""

# 0289971e2d1a4ffe9275ac6eb0b0748b
#: ../../ref/templates/builtins.txt:707
msgid "See also: :ttag:`{% ssi %}<ssi>`."
msgstr ""

# c1758e602b96489bb053b711efa3f079
#: ../../ref/templates/builtins.txt:712
msgid "load"
msgstr ""

# 0c2c42e7255e40d3b16b03107bbb4fad
#: ../../ref/templates/builtins.txt:714
msgid "Loads a custom template tag set."
msgstr ""

# 74e7ee32a48a4d7a8972491dbfe3784f
#: ../../ref/templates/builtins.txt:716
msgid ""
"For example, the following template would load all the tags and filters "
"registered in ``somelibrary`` and ``otherlibrary`` located in package "
"``package``::"
msgstr ""

# 23ee2ded3c01423d95f0b405d037f00d
#: ../../ref/templates/builtins.txt:724
msgid ""
"You can also selectively load individual filters or tags from a library, "
"using the ``from`` argument. In this example, the template tags/filters "
"named ``foo`` and ``bar`` will be loaded from ``somelibrary``::"
msgstr ""

# 783ad1f52a0c48c69dbb9792e9c4c713
#: ../../ref/templates/builtins.txt:730
msgid ""
"See :doc:`Custom tag and filter libraries </howto/custom-template-tags>` for "
"more information."
msgstr ""

# de29770dbdf34f5d9eed7eaf1b848540
#: ../../ref/templates/builtins.txt:736
msgid "now"
msgstr ""

# 5e25903169b94264b3109c314feaf4c6
#: ../../ref/templates/builtins.txt:738
msgid ""
"Displays the current date and/or time, using a format according to the given "
"string. Such string can contain format specifiers characters as described in "
"the :tfilter:`date` filter section."
msgstr ""

# 8381ba0c12db455f8296d13c3a2e08fe
#: ../../ref/templates/builtins.txt:746
msgid ""
"Note that you can backslash-escape a format string if you want to use the "
"\"raw\" value. In this example, \"f\" is backslash-escaped, because "
"otherwise \"f\" is a format string that displays the time. The \"o\" doesn't "
"need to be escaped, because it's not a format character::"
msgstr ""

# b24ae8f9279f4df5ba7f528278873572
#: ../../ref/templates/builtins.txt:753
msgid "This would display as \"It is the 4th of September\"."
msgstr ""

# 5684d81fb7e04126ad6fdf5df9cfa1b5
#: ../../ref/templates/builtins.txt:759
msgid ""
"The format passed can also be one of the predefined ones :setting:"
"`DATE_FORMAT`, :setting:`DATETIME_FORMAT`, :setting:`SHORT_DATE_FORMAT` or :"
"setting:`SHORT_DATETIME_FORMAT`. The predefined formats may vary depending "
"on the current locale and if :ref:`format-localization` is enabled, e.g.::"
msgstr ""

# a4576c5eea2e4d67bf43469e6147dbfe
#: ../../ref/templates/builtins.txt:770
msgid "regroup"
msgstr ""

# 8287a8ecde794322a34760150321ae77
#: ../../ref/templates/builtins.txt:772
msgid "Regroups a list of alike objects by a common attribute."
msgstr ""

# 8dbfcecc8f0c492d8e5be432b0a4164b
#: ../../ref/templates/builtins.txt:774
msgid ""
"This complex tag is best illustrated by use of an example: say that "
"``people`` is a list of people represented by dictionaries with "
"``first_name``, ``last_name``, and ``gender`` keys:"
msgstr ""

# cd82c81f7b734caabdb79d78b0cf1c6a
#: ../../ref/templates/builtins.txt:788
msgid ""
"...and you'd like to display a hierarchical list that is ordered by gender, "
"like this:"
msgstr ""

# 723fa5c68aa142cbab62c11df3b3cae0
# d2e27a794fe34c0da9c75c5d322ec761
# 6303994385ab4dbd831917b0fd96c41b
#: ../../ref/templates/builtins.txt:791 ../../ref/templates/builtins.txt:855
#: ../../ref/templates/builtins.txt:867
msgid "Male:"
msgstr ""

# c75e2f89882a4bf0bbf55b698641d5bb
# f525120bbb2547739b00dcd2e51ef2ba
#: ../../ref/templates/builtins.txt:793 ../../ref/templates/builtins.txt:869
msgid "George Bush"
msgstr ""

# d76d415b1b714e5bb5fd9c5606569728
# d7726911986644089ba3f793fa52f9d9
#: ../../ref/templates/builtins.txt:794 ../../ref/templates/builtins.txt:857
msgid "Bill Clinton"
msgstr ""

# f4d26f53348543eba4efe7fb162d688a
# 09a675ade9204e8d9ec82c8bab843ca1
# bba8ec8a62024c2fb803b9cd903d397a
#: ../../ref/templates/builtins.txt:796 ../../ref/templates/builtins.txt:863
#: ../../ref/templates/builtins.txt:871
msgid "Female:"
msgstr ""

# 504f0404a3434cbea30a2a470ab34c94
# c8dcd06d1da44d8f93e9616f67f5d519
#: ../../ref/templates/builtins.txt:798 ../../ref/templates/builtins.txt:865
msgid "Margaret Thatcher"
msgstr ""

# 21b7296990894b9fb294c746c4392e19
# f4dc1bd4b9834ff2bf765a7bd5f9e5db
#: ../../ref/templates/builtins.txt:799 ../../ref/templates/builtins.txt:873
msgid "Condoleezza Rice"
msgstr ""

# c534549316d3435eae98a3835b4990e4
# 6d8f7e52a51a432796c1fff3bf2078d7
#: ../../ref/templates/builtins.txt:801 ../../ref/templates/builtins.txt:859
msgid "Unknown:"
msgstr ""

# 3112a99300e743839bea32af6c97c0f6
# 84c860cd81d94765903bb2f8628e6f06
#: ../../ref/templates/builtins.txt:803 ../../ref/templates/builtins.txt:861
msgid "Pat Smith"
msgstr ""

# 4bb1db2df0c445f4b03a9e088ce86e61
#: ../../ref/templates/builtins.txt:805
msgid ""
"You can use the ``{% regroup %}`` tag to group the list of people by gender. "
"The following snippet of template code would accomplish this::"
msgstr ""

# ad4efd189c8246cdb5852c1a3ed2c622
#: ../../ref/templates/builtins.txt:822
msgid ""
"Let's walk through this example. ``{% regroup %}`` takes three arguments: "
"the list you want to regroup, the attribute to group by, and the name of the "
"resulting list. Here, we're regrouping the ``people`` list by the ``gender`` "
"attribute and calling the result ``gender_list``."
msgstr ""

# e07db299310a46c690a2d0e04ad5cd0e
#: ../../ref/templates/builtins.txt:827
msgid ""
"``{% regroup %}`` produces a list (in this case, ``gender_list``) of **group "
"objects**. Each group object has two attributes:"
msgstr ""

# cdcb575469db4a519bc28ff6948536e2
#: ../../ref/templates/builtins.txt:830
msgid ""
"``grouper`` -- the item that was grouped by (e.g., the string \"Male\" or "
"\"Female\")."
msgstr ""

# ae38f80cd14d49afb24cae49e5d99ec7
#: ../../ref/templates/builtins.txt:832
msgid ""
"``list`` -- a list of all items in this group (e.g., a list of all people "
"with gender='Male')."
msgstr ""

# e723871790174f6abae246203d460cc5
#: ../../ref/templates/builtins.txt:835
msgid ""
"Note that ``{% regroup %}`` does not order its input! Our example relies on "
"the fact that the ``people`` list was ordered by ``gender`` in the first "
"place. If the ``people`` list did *not* order its members by ``gender``, the "
"regrouping would naively display more than one group for a single gender. "
"For example, say the ``people`` list was set to this (note that the males "
"are not grouped together):"
msgstr ""

# e752a7f67c7e460ab050ca0436e1cf80
#: ../../ref/templates/builtins.txt:852
msgid ""
"With this input for ``people``, the example ``{% regroup %}`` template code "
"above would result in the following output:"
msgstr ""

# 3f63c823863e42f79d6d394ccfedc0ab
#: ../../ref/templates/builtins.txt:875
msgid ""
"The easiest solution to this gotcha is to make sure in your view code that "
"the data is ordered according to how you want to display it."
msgstr ""

# 1bef9a855879482ba7a817b8edb90f49
#: ../../ref/templates/builtins.txt:878
msgid ""
"Another solution is to sort the data in the template using the :tfilter:"
"`dictsort` filter, if your data is in a list of dictionaries::"
msgstr ""

# 8f07a4df37a2407e93ec55df97e8bb06
#: ../../ref/templates/builtins.txt:885
msgid "Grouping on other properties"
msgstr ""

# 53523724a547491894c5eb838c3a9934
#: ../../ref/templates/builtins.txt:887
msgid ""
"Any valid template lookup is a legal grouping attribute for the regroup tag, "
"including methods, attributes, dictionary keys and list items. For example, "
"if the \"gender\" field is a foreign key to a class with an attribute "
"\"description,\" you could use::"
msgstr ""

# 03c65d580b044f8c96bc429ae00fcd15
#: ../../ref/templates/builtins.txt:894
msgid ""
"Or, if ``gender`` is a field with ``choices``, it will have a :meth:`^django."
"db.models.Model.get_FOO_display` method available as an attribute, allowing  "
"you to group on the display string rather than the ``choices`` key::"
msgstr ""

# 0c9c3a7e79ac40b7b2fb3ee152ad41bc
#: ../../ref/templates/builtins.txt:901
msgid ""
"``{{ gender.grouper }}`` will now display the value fields from the "
"``choices`` set rather than the keys."
msgstr ""

# 01f5c6b959624423963fdf30d27282ed
#: ../../ref/templates/builtins.txt:907
msgid "spaceless"
msgstr ""

# 59b6ecdaa6584c91adceee0313243bba
#: ../../ref/templates/builtins.txt:909
msgid ""
"Removes whitespace between HTML tags. This includes tab characters and "
"newlines."
msgstr ""

# af7ebb329b2243b5ae8245eba2a042ef
#: ../../ref/templates/builtins.txt:920
msgid "This example would return this HTML::"
msgstr ""

# bd862007bde3418fb27d8e9bbb845c71
#: ../../ref/templates/builtins.txt:924
msgid ""
"Only space between *tags* is removed -- not space between tags and text. In "
"this example, the space around ``Hello`` won't be stripped::"
msgstr ""

# 1e317ac1bc6d406c8e371a31756e055c
#: ../../ref/templates/builtins.txt:936
msgid "ssi"
msgstr ""

# 92f34e09f8b041e08033353c4ff4cdd5
#: ../../ref/templates/builtins.txt:938
msgid "Outputs the contents of a given file into the page."
msgstr ""

# ee863443d57847148d848eaf7babc8a1
#: ../../ref/templates/builtins.txt:940
msgid ""
"Like a simple :ttag:`include` tag, ``{% ssi %}`` includes the contents of "
"another file -- which must be specified using an absolute path -- in the "
"current page::"
msgstr ""

# 53aedbedabb446038fe78ef74887ce45
#: ../../ref/templates/builtins.txt:946
msgid ""
"If the optional \"parsed\" parameter is given, the contents of the included "
"file are evaluated as template code, within the current context::"
msgstr ""

# 875e38eee1e549b8abf2b532fc82d809
#: ../../ref/templates/builtins.txt:951
msgid ""
"Note that if you use ``{% ssi %}``, you'll need to define :setting:"
"`ALLOWED_INCLUDE_ROOTS` in your Django settings, as a security measure."
msgstr ""

# 03190441081b450d9fb2ddbbd7b15e49
#: ../../ref/templates/builtins.txt:955
msgid "See also: :ttag:`{% include %}<include>`."
msgstr ""

# 3954ab2302ee4302a332c405dfa45a1d
#: ../../ref/templates/builtins.txt:961
msgid ""
"In Django 1.5, the behavior of the :ttag:`ssi` template tag will change, "
"with the first argument being made into a context variable, rather than "
"being a special case unquoted constant. This will allow the :ttag:`ssi` tag "
"to use a context variable as the value of the page to be included."
msgstr ""

# 29ead903d7334470aed6bda8a5b2516f
#: ../../ref/templates/builtins.txt:967
msgid ""
"In order to provide a forwards compatibility path, Django 1.3 provides a "
"future compatibility library -- ``future`` -- that implements the new "
"behavior. To use this library, add a :ttag:`load` call at the top of any "
"template using the :ttag:`ssi` tag, and wrap the first argument to the :ttag:"
"`ssi` tag in quotes. For example::"
msgstr ""

# 704f598d82a941dfae0e557198221c40
#: ../../ref/templates/builtins.txt:977
msgid ""
"In Django 1.5, the unquoted constant behavior will be replaced with the "
"behavior provided by the ``future`` tag library. Existing templates should "
"be migrated to use the new syntax."
msgstr ""

# a2b22890312146adba271da295d1e836
#: ../../ref/templates/builtins.txt:984
msgid "templatetag"
msgstr ""

# c81c96c86b53482388b786bc84339321
#: ../../ref/templates/builtins.txt:986
msgid "Outputs one of the syntax characters used to compose template tags."
msgstr ""

# 055e6e4f0a7a4e1495327873649e0994
#: ../../ref/templates/builtins.txt:988
msgid ""
"Since the template system has no concept of \"escaping\", to display one of "
"the bits used in template tags, you must use the ``{% templatetag %}`` tag."
msgstr ""

# ce24df64a7ac4847a20e92ea8a50c866
#: ../../ref/templates/builtins.txt:991
msgid "The argument tells which template bit to output:"
msgstr ""

# 4ef478ce73654bec9f2b2024d3a90fb3
# 5678fc825da7480fa3470a4bdbca8711
#: ../../ref/templates/builtins.txt:994 ../../ref/templates/builtins.txt:2343
msgid "Outputs"
msgstr ""

# 4c172bd6d4a346378bf07c92165c068a
#: ../../ref/templates/builtins.txt:996
msgid "``openblock``"
msgstr ""

# 3e388d59fd3f4829a330f508139ee758
#: ../../ref/templates/builtins.txt:996
msgid "``{%``"
msgstr ""

# 9c4f592fda614e1287871304b8a97314
#: ../../ref/templates/builtins.txt:997
msgid "``closeblock``"
msgstr ""

# c43de357d715485199d7f3505a3f031f
#: ../../ref/templates/builtins.txt:997
msgid "``%}``"
msgstr ""

# 42a75a3fd1744feda36f4c3b1c6617b1
#: ../../ref/templates/builtins.txt:998
msgid "``openvariable``"
msgstr ""

# 366df79f22f749a987541bce37128483
#: ../../ref/templates/builtins.txt:998
msgid "``{{``"
msgstr ""

# d95acc653ef9434888165928f86c3ab5
#: ../../ref/templates/builtins.txt:999
msgid "``closevariable``"
msgstr ""

# e7362c2b913042dfb0fefff15c07b82c
#: ../../ref/templates/builtins.txt:999
msgid "``}}``"
msgstr ""

# 1c0597a4aa85467991d20499c6964373
#: ../../ref/templates/builtins.txt:1000
msgid "``openbrace``"
msgstr ""

# 62deec9a935743119400a3924572feff
#: ../../ref/templates/builtins.txt:1000
msgid "``{``"
msgstr ""

# d5b2a2e9ab524c17903503e106524c7a
#: ../../ref/templates/builtins.txt:1001
msgid "``closebrace``"
msgstr ""

# 1532a31f4bab472591ddda0d36f13e5b
#: ../../ref/templates/builtins.txt:1001
msgid "``}``"
msgstr ""

# 3fd19725d483407f9e117801729b46f9
#: ../../ref/templates/builtins.txt:1002
msgid "``opencomment``"
msgstr ""

# e3cd8c70d8cc48359d8cde8c92f9c90c
#: ../../ref/templates/builtins.txt:1002
msgid "``{#``"
msgstr ""

# b196d5785bf141ee805ee520ef75e40b
#: ../../ref/templates/builtins.txt:1003
msgid "``closecomment``"
msgstr ""

# 80b9d7548d3844f9a2fcc9a3c2d65994
#: ../../ref/templates/builtins.txt:1003
msgid "``#}``"
msgstr ""

# 7c4615233f074fc09bcaac1b1c9e7a34
#: ../../ref/templates/builtins.txt:1009
msgid "url"
msgstr ""

# 73dc85ad2f474353ba5de99cae45280e
#: ../../ref/templates/builtins.txt:1011
msgid ""
"Returns an absolute path reference (a URL without the domain name) matching "
"a given view function and optional parameters. This is a way to output links "
"without violating the DRY principle by having to hard-code URLs in your "
"templates::"
msgstr ""

# 351252a4fb764a16b8ee6c5bce8f96e5
#: ../../ref/templates/builtins.txt:1018
msgid ""
"The first argument is a path to a view function in the format ``package."
"package.module.function``. Additional arguments are optional and should be "
"space-separated values that will be used as arguments in the URL. The "
"example above shows passing positional arguments. Alternatively you may use "
"keyword syntax::"
msgstr ""

# 6bf9090d38fe46ed83026c0d22995cfc
#: ../../ref/templates/builtins.txt:1026
msgid ""
"Do not mix both positional and keyword syntax in a single call. All "
"arguments required by the URLconf should be present."
msgstr ""

# 02123575d2b741369c29990bbecc9074
#: ../../ref/templates/builtins.txt:1029
msgid ""
"For example, suppose you have a view, ``app_views.client``, whose URLconf "
"takes a client ID (here, ``client()`` is a method inside the views file "
"``app_views.py``). The URLconf line might look like this:"
msgstr ""

# 2a7aa9beea10479faf24260c6b1e200e
#: ../../ref/templates/builtins.txt:1037
msgid ""
"If this app's URLconf is included into the project's URLconf under a path "
"such as this:"
msgstr ""

# 45e46599f69f4af0af5a849d63a2d44e
#: ../../ref/templates/builtins.txt:1044
msgid "...then, in a template, you can create a link to this view like this::"
msgstr ""

# 5d0f3cdaf6b946d899a2cb729933879a
#: ../../ref/templates/builtins.txt:1048
msgid "The template tag will output the string ``/clients/client/123/``."
msgstr ""

# c29c898d69764d8c8c3846030f9ad442
#: ../../ref/templates/builtins.txt:1050
msgid ""
"If you're using :ref:`named URL patterns <naming-url-patterns>`, you can "
"refer to the name of the pattern in the ``url`` tag instead of using the "
"path to the view."
msgstr ""

# ac7c918aad6f4439a8445a434a5eb9c6
#: ../../ref/templates/builtins.txt:1054
msgid ""
"Note that if the URL you're reversing doesn't exist, you'll get an :exc:"
"`^django.core.urlresolvers.NoReverseMatch` exception raised, which will "
"cause your site to display an error page."
msgstr ""

# 360883b4202245569a2ce2dd8d954248
#: ../../ref/templates/builtins.txt:1058
msgid ""
"If you'd like to retrieve a URL without displaying it, you can use a "
"slightly different call::"
msgstr ""

# 1160eca69fb9491fa02cad9239b45651
#: ../../ref/templates/builtins.txt:1066
msgid ""
"This ``{% url ... as var %}`` syntax will *not* cause an error if the view "
"is missing. In practice you'll use this to link to views that are optional::"
msgstr ""

# 86a53f303406411eadadc7aa280af399
#: ../../ref/templates/builtins.txt:1074
msgid ""
"If you'd like to retrieve a namespaced URL, specify the fully qualified "
"name::"
msgstr ""

# 7687543a6d14438980b58a48e3d88bfc
#: ../../ref/templates/builtins.txt:1078
msgid ""
"This will follow the normal :ref:`namespaced URL resolution strategy <topics-"
"http-reversing-url-namespaces>`, including using any hints provided by the "
"context as to the current application."
msgstr ""

# 43098380b1d44a5e936ad084a11f103c
#: ../../ref/templates/builtins.txt:1084
msgid ""
"For backwards compatibility, the ``{% url %}`` tag also supports the use of "
"commas to separate arguments. You shouldn't use this in any new projects, "
"but for the sake of the people who are still using it, here's what it looks "
"like::"
msgstr ""

# c4f676da1ca74af1b761e2b7ce51acf1
#: ../../ref/templates/builtins.txt:1092
msgid ""
"This syntax doesn't support the use of literal commas, or equals signs. Did "
"we mention you shouldn't use this syntax in any new projects?"
msgstr ""

# 200b5546511a4a48a4a49146ee423572
#: ../../ref/templates/builtins.txt:1100
msgid ""
"In Django 1.5, the behavior of the :ttag:`url` template tag will change, "
"with the first argument being made into a context variable, rather than "
"being a special case unquoted constant. This will allow the :ttag:`url` tag "
"to use a context variable as the value of the URL name to be reversed."
msgstr ""

# f393faf8d632413c9ce818cc910becb2
#: ../../ref/templates/builtins.txt:1106
msgid ""
"In order to provide a forwards compatibility path, Django 1.3 provides a "
"future compatibility library -- ``future`` -- that implements the new "
"behavior. To use this library, add a :ttag:`load` call at the top of any "
"template using the :ttag:`url` tag, and wrap the first argument to the :ttag:"
"`url` tag in quotes. For example::"
msgstr ""

# f6b9effbfc6f4d7b8f9843592ce1214b
#: ../../ref/templates/builtins.txt:1128
msgid ""
"The new library also drops support for the comma syntax for separating "
"arguments to the :ttag:`url` template tag."
msgstr ""

# 81f84f83c74b4d2880af3f751af8de3b
#: ../../ref/templates/builtins.txt:1131
msgid ""
"In Django 1.5, the old behavior will be replaced with the behavior provided "
"by the ``future`` tag library. Existing templates be migrated to use the new "
"syntax."
msgstr ""

# ce931db171664de481b7ae8aea58aab8
#: ../../ref/templates/builtins.txt:1138
msgid "widthratio"
msgstr ""

# 7b6c54beb9b44dc38c57daffea5e6183
#: ../../ref/templates/builtins.txt:1140
msgid ""
"For creating bar charts and such, this tag calculates the ratio of a given "
"value to a maximum value, and then applies that ratio to a constant."
msgstr ""

# 27a48bee85d3413eac84a8be0299ecf3
#: ../../ref/templates/builtins.txt:1147
msgid ""
"Above, if ``this_value`` is 175 and ``max_value`` is 200, the image in the "
"above example will be 88 pixels wide (because 175/200 = .875; .875 * 100 = "
"87.5 which is rounded up to 88)."
msgstr ""

# 5f9c40fdb8374801b95754131627c9fd
#: ../../ref/templates/builtins.txt:1154
msgid "with"
msgstr ""

# e85df8dd0ae447068658614c213ba78f
#: ../../ref/templates/builtins.txt:1159
msgid ""
"Caches a complex variable under a simpler name. This is useful when "
"accessing an \"expensive\" method (e.g., one that hits the database) "
"multiple times."
msgstr ""

# d51500e7a784464c868caa2f9cda309f
#: ../../ref/templates/builtins.txt:1168
msgid ""
"The populated variable (in the example above, ``total``) is only available "
"between the ``{% with %}`` and ``{% endwith %}`` tags."
msgstr ""

# 88fd306e8e714fc3a85c929e281b7199
#: ../../ref/templates/builtins.txt:1171
msgid "You can assign more than one context variable::"
msgstr ""

# 589e8381e2d34a1c981a8fc6daa09d41
#: ../../ref/templates/builtins.txt:1177
msgid ""
"The previous more verbose format is still supported: ``{% with business."
"employees.count as total %}``"
msgstr ""

# 0e93434df70f49988a4f161b883109d0
#: ../../ref/templates/builtins.txt:1183
msgid "Built-in filter reference"
msgstr ""

# 568390501ec04121a95aaed58075efca
#: ../../ref/templates/builtins.txt:1188
msgid "add"
msgstr ""

# a270fd6ccc76442097debb1de2663fc6
#: ../../ref/templates/builtins.txt:1190
msgid "Adds the argument to the value."
msgstr ""

# e9233766b42c42ca92e2578f6411f8fa
#: ../../ref/templates/builtins.txt:1196
msgid "If ``value`` is ``4``, then the output will be ``6``."
msgstr ""

# f573927ba8f3476189562e7c5ecc9f15
#: ../../ref/templates/builtins.txt:1201
msgid ""
"This filter will first try to coerce both values to integers. If this fails, "
"it'll attempt to add the values together anyway. This will work on some data "
"types (strings, list, etc.) and fail on others. If it fails, the result will "
"be an empty string."
msgstr ""

# 20ee84f404de41eeb2601fa57215218c
#: ../../ref/templates/builtins.txt:1206
msgid "For example, if we have::"
msgstr ""

# 470f8fc1bc8249879349f77e741df1bf
#: ../../ref/templates/builtins.txt:1210
msgid ""
"and ``first`` is ``[1, 2, 3]`` and ``second`` is ``[4, 5, 6]``, then the "
"output will be ``[1, 2, 3, 4, 5, 6]``."
msgstr ""

# 0fd79609d7504e998cd6ccd08880352f
#: ../../ref/templates/builtins.txt:1215
msgid ""
"Strings that can be coerced to integers will be **summed**, not "
"concatenated, as in the first example above."
msgstr ""

# 238729acda344631a382358758e05e2f
#: ../../ref/templates/builtins.txt:1221
msgid "addslashes"
msgstr ""

# ff75e631a131474385851271912b1432
#: ../../ref/templates/builtins.txt:1223
msgid ""
"Adds slashes before quotes. Useful for escaping strings in CSV, for example."
msgstr ""

# 7c83c8a948b94f648485e837b97301d8
#: ../../ref/templates/builtins.txt:1229
msgid ""
"If ``value`` is ``\"I'm using Django\"``, the output will be ``\"I\\'m using "
"Django\"``."
msgstr ""

# 80a9404e15b84c9599e892ec14bf10de
#: ../../ref/templates/builtins.txt:1235
msgid "capfirst"
msgstr ""

# f83cce2bb97f4d4d93b3bfa583f8e002
#: ../../ref/templates/builtins.txt:1237
msgid "Capitalizes the first character of the value."
msgstr ""

# aeb2da1bbc984666a85d501664486ae3
#: ../../ref/templates/builtins.txt:1243
msgid "If ``value`` is ``\"django\"``, the output will be ``\"Django\"``."
msgstr ""

# 085547325e0b4a569b41b3b9626788c7
#: ../../ref/templates/builtins.txt:1248
msgid "center"
msgstr ""

# 82a252fc17d94fcabf0eb32ed7533e4f
#: ../../ref/templates/builtins.txt:1250
msgid "Centers the value in a field of a given width."
msgstr ""

# 7fc21c3dda42471a99664a40f02a4bf0
#: ../../ref/templates/builtins.txt:1256
msgid ""
"If ``value`` is ``\"Django\"``, the output will be ``\"     Django    \"``."
msgstr ""

# ab803dc7ec9240c5bd79daacc2e77158
#: ../../ref/templates/builtins.txt:1261
msgid "cut"
msgstr ""

# e96363ef9a9644c193be0c8afdccd953
#: ../../ref/templates/builtins.txt:1263
msgid "Removes all values of arg from the given string."
msgstr ""

# fb23897198704a29a02698eef9db3c7b
#: ../../ref/templates/builtins.txt:1269
msgid ""
"If ``value`` is ``\"String with spaces\"``, the output will be ``"
"\"Stringwithspaces\"``."
msgstr ""

# 6324d746367041c287b155444b6c2f05
#: ../../ref/templates/builtins.txt:1275
msgid "date"
msgstr ""

# f305d1f5ac5840369ea1bcb04b698851
#: ../../ref/templates/builtins.txt:1277
msgid "Formats a date according to the given format."
msgstr ""

# 9a6d91c1bdc54393b2a1ff8e88b2458d
#: ../../ref/templates/builtins.txt:1279
msgid ""
"Uses a similar format as PHP's ``date()`` function (http://php.net/date) "
"with some differences."
msgstr ""

# d2a76fca9e274ae9a3f6191c67a0c144
#: ../../ref/templates/builtins.txt:1282
msgid "Available format strings:"
msgstr ""

# e014e0d4a66e4b0aafeb99fb362f1b88
#: ../../ref/templates/builtins.txt:1285
msgid "Format character"
msgstr ""

# 265c9edc8e5f47ddbaec534e8d2a664c
#: ../../ref/templates/builtins.txt:1285
msgid "Example output"
msgstr ""

# cb51b6ad7b4e4fd5a7bf0bd5a80f7a6d
#: ../../ref/templates/builtins.txt:1287
msgid "a"
msgstr ""

# 3ef97cdc94d2448ab4d358b6a2cafbdd
#: ../../ref/templates/builtins.txt:1287
msgid ""
"``'a.m.'`` or ``'p.m.'`` (Note that this is slightly different than PHP's "
"output, because this includes periods to match Associated Press style.)"
msgstr ""

# 3dcbb72ca0be4da9b8e716330f714c59
#: ../../ref/templates/builtins.txt:1287
msgid "``'a.m.'``"
msgstr ""

# 61707122f5804d7c9c5fb03d231c31bd
#: ../../ref/templates/builtins.txt:1291
msgid "A"
msgstr ""

# f37dedcb6d504dc0980bbbd8295b7518
#: ../../ref/templates/builtins.txt:1291
msgid "``'AM'`` or ``'PM'``."
msgstr ""

# 3084b35df41c499299cf786e46ccf63c
#: ../../ref/templates/builtins.txt:1291
msgid "``'AM'``"
msgstr ""

# 803501782b9942d1b4a4637aadbcdd5f
#: ../../ref/templates/builtins.txt:1292
msgid "b"
msgstr ""

# bcd9366f83d7467a85216f80746b60e6
#: ../../ref/templates/builtins.txt:1292
msgid "Month, textual, 3 letters, lowercase."
msgstr ""

# 6643ce7ce3ad4875a5b131aee85fc5d3
#: ../../ref/templates/builtins.txt:1292
msgid "``'jan'``"
msgstr ""

# ec35fc890db546fa973d126034651982
#: ../../ref/templates/builtins.txt:1293
msgid "B"
msgstr ""

# 4eef4e8167164284a589ec5e3d9ebd77
# 7c8f2fc300fc435084bb7accffd9626d
#: ../../ref/templates/builtins.txt:1293 ../../ref/templates/builtins.txt:1319
msgid "Not implemented."
msgstr ""

# 4bbd0ef287b943e4a86ba7538b2283cb
#: ../../ref/templates/builtins.txt:1294
msgid "c"
msgstr ""

# ce29674cb36f409fb9157a3eb243d7e9
#: ../../ref/templates/builtins.txt:1294
msgid ""
"ISO 8601 format. (Note: unlike others formatters, such as \"Z\", \"O\" or \"r"
"\", the \"c\" formatter will not add timezone offset if value is a naive "
"datetime (see :class:`datetime.tzinfo`)."
msgstr ""

# 5165f00e0f88459698c110f9792c81b9
#: ../../ref/templates/builtins.txt:1294
msgid ""
"``2008-01-02T10:30:00.000123+02:00``, or ``2008-01-02T10:30:00.000123`` if "
"the datetime is naive"
msgstr ""

# f953d196da3e46758f0c0b77b938acdd
#: ../../ref/templates/builtins.txt:1299
msgid "d"
msgstr ""

# 7e0145f1e84b41268750a442594dd360
#: ../../ref/templates/builtins.txt:1299
msgid "Day of the month, 2 digits with leading zeros."
msgstr ""

# ed3ee6b475a74606bdea863d6b8b5de6
#: ../../ref/templates/builtins.txt:1299
msgid "``'01'`` to ``'31'``"
msgstr ""

# 6b9a1c420051431d8aaad860b29938e0
#: ../../ref/templates/builtins.txt:1301
msgid "D"
msgstr ""

# ed4d99f62075478184ed33869619c03d
#: ../../ref/templates/builtins.txt:1301
msgid "Day of the week, textual, 3 letters."
msgstr ""

# 703740feb11b48c7bfd2963c43efe2ef
#: ../../ref/templates/builtins.txt:1301
msgid "``'Fri'``"
msgstr ""

# cff761eb728a4bfa96077a8a95111dda
#: ../../ref/templates/builtins.txt:1302
msgid "e"
msgstr ""

# 4ed14bc7b0fc4a3bb5b5c48cd47e0a69
#: ../../ref/templates/builtins.txt:1302
msgid ""
"Timezone name. Could be in any format, or might return an empty string, "
"depending on the datetime."
msgstr ""

# 68b43a2fc81b43d9b8ccf4bd4896ee54
#: ../../ref/templates/builtins.txt:1303
msgid "``''``, ``'GMT'``, ``'-500'``, ``'US/Eastern'``, etc."
msgstr ""

# 9ab4627971cf4238983c103d44d9396c
#: ../../ref/templates/builtins.txt:1305
msgid "E"
msgstr ""

# 5c0fa013b11a4968b1a65937f163ce20
#: ../../ref/templates/builtins.txt:1305
msgid ""
"Month, locale specific alternative representation usually used for long date "
"representation."
msgstr ""

# 483d108d47ca4394bef74c5025d12aef
#: ../../ref/templates/builtins.txt:1307
msgid "``'listopada'`` (for Polish locale, as opposed to ``'Listopad'``)"
msgstr ""

# fca5f468c06945399f17d1fe2a0a7270
#: ../../ref/templates/builtins.txt:1308
msgid "f"
msgstr ""

# f8e9d58c19984756b00554f17aa44449
#: ../../ref/templates/builtins.txt:1308
msgid ""
"Time, in 12-hour hours and minutes, with minutes left off if they're zero. "
"Proprietary extension."
msgstr ""

# beea153b0be44089b06a64601c802c01
#: ../../ref/templates/builtins.txt:1308
msgid "``'1'``, ``'1:30'``"
msgstr ""

# d0ee8059f4db47b0a49878656da932b0
#: ../../ref/templates/builtins.txt:1311
msgid "F"
msgstr ""

# 643cc2b11c914dc5ae5180b5a6f6894e
#: ../../ref/templates/builtins.txt:1311
msgid "Month, textual, long."
msgstr ""

# b895dbb45e7b4f899149c727df87c0cb
#: ../../ref/templates/builtins.txt:1311
msgid "``'January'``"
msgstr ""

# 0182c075bd0a48f78651f8d15524ac56
#: ../../ref/templates/builtins.txt:1312
msgid "g"
msgstr ""

# 613519d31dac47bc924971a2890b1b31
#: ../../ref/templates/builtins.txt:1312
msgid "Hour, 12-hour format without leading zeros."
msgstr ""

# 39bfb5de289b42dab67b960a6cec1a48
# f902b40d5d5a49a79ae0eff24d113d5a
#: ../../ref/templates/builtins.txt:1312 ../../ref/templates/builtins.txt:1326
msgid "``'1'`` to ``'12'``"
msgstr ""

# 50c387c9c33f46899cf770721c612b77
#: ../../ref/templates/builtins.txt:1314
msgid "G"
msgstr ""

# bf6fc6befee14441a9654000a8229910
#: ../../ref/templates/builtins.txt:1314
msgid "Hour, 24-hour format without leading zeros."
msgstr ""

# 12bcc582a9484dd2b3c218f975d0efd4
#: ../../ref/templates/builtins.txt:1314
msgid "``'0'`` to ``'23'``"
msgstr ""

# c553b4b204044edbb2275c831880281e
#: ../../ref/templates/builtins.txt:1316
msgid "h"
msgstr ""

# 9c5b6c5f16674bbe886c657f5b0233c2
#: ../../ref/templates/builtins.txt:1316
msgid "Hour, 12-hour format."
msgstr ""

# 6bc30cf62c494e39b4431dc9fc37a476
# baa832f53b5c411fb97c360f7ca8aebb
#: ../../ref/templates/builtins.txt:1316 ../../ref/templates/builtins.txt:1324
msgid "``'01'`` to ``'12'``"
msgstr ""

# ea1052b9e393415fac1209b448efe7eb
#: ../../ref/templates/builtins.txt:1317
msgid "H"
msgstr ""

# cf27afe9abe648cf92b6d9cb243e1834
#: ../../ref/templates/builtins.txt:1317
msgid "Hour, 24-hour format."
msgstr ""

# 3b09c0b1e61041a68b290748e08bbbaa
#: ../../ref/templates/builtins.txt:1317
msgid "``'00'`` to ``'23'``"
msgstr ""

# a9b5918c6100474ca65637581cc56b4e
#: ../../ref/templates/builtins.txt:1318
msgid "i"
msgstr ""

# 4100b8039d8c490a9413aa32fb338761
#: ../../ref/templates/builtins.txt:1318
msgid "Minutes."
msgstr ""

# a47bc92feb0e4f5db40e86f87eb56403
# c29051369e744591997263aa3c565abc
#: ../../ref/templates/builtins.txt:1318 ../../ref/templates/builtins.txt:1339
msgid "``'00'`` to ``'59'``"
msgstr ""

# 5d845007937b4490a019a107f7cd3c2e
#: ../../ref/templates/builtins.txt:1319
msgid "I"
msgstr ""

# 630b5eba41d94244a74ccef035a041d8
#: ../../ref/templates/builtins.txt:1320
msgid "j"
msgstr ""

# 015fd4a4cc5341bfb243934cf9894eec
#: ../../ref/templates/builtins.txt:1320
msgid "Day of the month without leading zeros."
msgstr ""

# a9c444cfd7bb4658b2bcdad8f285f8dd
#: ../../ref/templates/builtins.txt:1320
msgid "``'1'`` to ``'31'``"
msgstr ""

# 62578201096e491386ccd7ff0fc54338
#: ../../ref/templates/builtins.txt:1322
msgid "l"
msgstr ""

# ce25ad0f9e89455d996753fce54b6f30
#: ../../ref/templates/builtins.txt:1322
msgid "Day of the week, textual, long."
msgstr ""

# b44bea4e978d43d5856b560bcdd87bf4
#: ../../ref/templates/builtins.txt:1322
msgid "``'Friday'``"
msgstr ""

# 4abbccc4c0484782964b5ecb8f2c75aa
#: ../../ref/templates/builtins.txt:1323
msgid "L"
msgstr ""

# 9a6bcd5a4e174c83a81e56cde1373370
#: ../../ref/templates/builtins.txt:1323
msgid "Boolean for whether it's a leap year."
msgstr ""

# 9b34e955ffb9413b82c258cec510fd8f
#: ../../ref/templates/builtins.txt:1323
msgid "``True`` or ``False``"
msgstr ""

# 15d5c7c64de04bc1892a0de9ab2a12e6
#: ../../ref/templates/builtins.txt:1324
msgid "m"
msgstr ""

# e91cdd21c02a439297ea956e1f36e0b9
#: ../../ref/templates/builtins.txt:1324
msgid "Month, 2 digits with leading zeros."
msgstr ""

# 0b996ef237d7492796856b560aeb11a6
#: ../../ref/templates/builtins.txt:1325
msgid "M"
msgstr ""

# 367dd53647c649168d2abd7295cca93b
#: ../../ref/templates/builtins.txt:1325
msgid "Month, textual, 3 letters."
msgstr ""

# 3a1bed441ffa4381ac7f4c41c44bbbad
#: ../../ref/templates/builtins.txt:1325
msgid "``'Jan'``"
msgstr ""

# d096433a48074dc2babebcec43c57347
#: ../../ref/templates/builtins.txt:1326
msgid "n"
msgstr ""

# 044a1506f9fc4e01bf3a3abaf0305907
#: ../../ref/templates/builtins.txt:1326
msgid "Month without leading zeros."
msgstr ""

# e18034df88df47578d23f192d3e9ea0f
#: ../../ref/templates/builtins.txt:1327
msgid "N"
msgstr ""

# 4e3bf786949f4fd4b1bd18986f5de3c2
#: ../../ref/templates/builtins.txt:1327
msgid "Month abbreviation in Associated Press style. Proprietary extension."
msgstr ""

# fcf29f236769498085c3061be7f6298c
#: ../../ref/templates/builtins.txt:1327
msgid "``'Jan.'``, ``'Feb.'``, ``'March'``, ``'May'``"
msgstr ""

# d8bb01769fef49988f71c3a989b857c2
#: ../../ref/templates/builtins.txt:1329
msgid "o"
msgstr ""

# ad7a5260e43e44238a787df90ffde3d0
#: ../../ref/templates/builtins.txt:1329
msgid ""
"ISO-8601 week-numbering year, corresponding to the ISO-8601 week number (W)"
msgstr ""

# 0e23e97c6e5e47c0b83834d0d9e3648f
# b3d1a866939e415b820e3a430971be49
#: ../../ref/templates/builtins.txt:1329 ../../ref/templates/builtins.txt:1352
msgid "``'1999'``"
msgstr ""

# 5ee7397780564739806effaadc1a2bc2
#: ../../ref/templates/builtins.txt:1332
msgid "O"
msgstr ""

# 34c8cbbe011442269766f215698f453c
#: ../../ref/templates/builtins.txt:1332
msgid "Difference to Greenwich time in hours."
msgstr ""

# fc4e7075ff4642d0b7eee27c08e249f0
#: ../../ref/templates/builtins.txt:1332
msgid "``'+0200'``"
msgstr ""

# ec596b3edd334138b1336224a8c24a6a
#: ../../ref/templates/builtins.txt:1333
msgid "P"
msgstr ""

# 5c2ff8e3fa5f4b6aa9241bf11b888cb5
#: ../../ref/templates/builtins.txt:1333
msgid ""
"Time, in 12-hour hours, minutes and 'a.m.'/'p.m.', with minutes left off if "
"they're zero and the special-case strings 'midnight' and 'noon' if "
"appropriate. Proprietary extension."
msgstr ""

# 32b7ce73405645cda9d0d0d87e622ca1
#: ../../ref/templates/builtins.txt:1333
msgid ""
"``'1 a.m.'``, ``'1:30 p.m.'``, ``'midnight'``, ``'noon'``, ``'12:30 p.m.'``"
msgstr ""

# 8a6349c96be44f8ab3ddcffc052fd1f6
#: ../../ref/templates/builtins.txt:1338
msgid "r"
msgstr ""

# becdd4581f4c4406a68d844696cd5cd9
#: ../../ref/templates/builtins.txt:1338
msgid ":rfc:`2822` formatted date."
msgstr ""

# 5a267c9df9c84ddfa5c7392f0032d4ee
#: ../../ref/templates/builtins.txt:1338
msgid "``'Thu, 21 Dec 2000 16:01:07 +0200'``"
msgstr ""

# 34c1f9168c6b4ed58b50ff6b4d9ef0b3
#: ../../ref/templates/builtins.txt:1339
msgid "s"
msgstr ""

# 0e594c74e8b845a2b9f89143216cc749
#: ../../ref/templates/builtins.txt:1339
msgid "Seconds, 2 digits with leading zeros."
msgstr ""

# d1a90cc56f9346f2a566e3ef28fe0efb
#: ../../ref/templates/builtins.txt:1340
msgid "S"
msgstr ""

# a71f9e66ac97405189c344c41bfa1d45
#: ../../ref/templates/builtins.txt:1340
msgid "English ordinal suffix for day of the month, 2 characters."
msgstr ""

# 376f2471997e4b90ae548afd304a1c97
#: ../../ref/templates/builtins.txt:1340
msgid "``'st'``, ``'nd'``, ``'rd'`` or ``'th'``"
msgstr ""

# dd10cabcee604b21926bf596da706832
#: ../../ref/templates/builtins.txt:1342
msgid "t"
msgstr ""

# c2533dc558644353aa5ee3073cbfb705
#: ../../ref/templates/builtins.txt:1342
msgid "Number of days in the given month."
msgstr ""

# 095d7d159a8447e39a84c13ab2bf23d1
#: ../../ref/templates/builtins.txt:1342
msgid "``28`` to ``31``"
msgstr ""

# 4e71fd329aae4b9fb4551a4755f044ce
#: ../../ref/templates/builtins.txt:1343
msgid "T"
msgstr ""

# c9de2bdbba454cb29b85f741d3579c08
#: ../../ref/templates/builtins.txt:1343
msgid "Time zone of this machine."
msgstr ""

# 2855577ca62c42f69517fb98aac73d1a
#: ../../ref/templates/builtins.txt:1343
msgid "``'EST'``, ``'MDT'``"
msgstr ""

# b583f6f3a046421c92e740513eafa96b
#: ../../ref/templates/builtins.txt:1344
msgid "u"
msgstr ""

# de01bc404c5a4bafa2090f75ad5a058f
#: ../../ref/templates/builtins.txt:1344
msgid "Microseconds."
msgstr ""

# 1169389200744fb3b611e0fb0399321f
#: ../../ref/templates/builtins.txt:1344
msgid "``0`` to ``999999``"
msgstr ""

# 5679ed91819e4c358108f79ad9a7b3a1
#: ../../ref/templates/builtins.txt:1345
msgid "U"
msgstr ""

# dda1f057bc724ba594589b780bad9e9b
#: ../../ref/templates/builtins.txt:1345
msgid "Seconds since the Unix Epoch (January 1 1970 00:00:00 UTC)."
msgstr ""

# b2b764815c7e4872a0894478b3b4d9c7
#: ../../ref/templates/builtins.txt:1347
msgid "w"
msgstr ""

# ada28203ee154cf089106399bbd36e98
#: ../../ref/templates/builtins.txt:1347
msgid "Day of the week, digits without leading zeros."
msgstr ""

# 3df545398584448e920343570c02b7a4
#: ../../ref/templates/builtins.txt:1347
msgid "``'0'`` (Sunday) to ``'6'`` (Saturday)"
msgstr ""

# 5875addf80da4e3aad25f04c62518cc2
#: ../../ref/templates/builtins.txt:1349
msgid "W"
msgstr ""

# 6d8348bcf6694d97aab53845cdbce4c2
#: ../../ref/templates/builtins.txt:1349
msgid "ISO-8601 week number of year, with weeks starting on Monday."
msgstr ""

# d38835c6f94c431f95d531fbbca8749a
#: ../../ref/templates/builtins.txt:1349
msgid "``1``, ``53``"
msgstr ""

# a656c8a43de04c698ff13604979c54e3
#: ../../ref/templates/builtins.txt:1351
msgid "y"
msgstr ""

# 20c9647290d5464aa01c11cd42f0f8d6
#: ../../ref/templates/builtins.txt:1351
msgid "Year, 2 digits."
msgstr ""

# 3bace081d3214fdabc80e15f599af8ca
#: ../../ref/templates/builtins.txt:1351
msgid "``'99'``"
msgstr ""

# a299a4c98f9d4b2480dcae9250a3c282
#: ../../ref/templates/builtins.txt:1352
msgid "Y"
msgstr ""

# 66636db406614d0a9b8b5cc0eb48f443
#: ../../ref/templates/builtins.txt:1352
msgid "Year, 4 digits."
msgstr ""

# 0c5f27249b594456887d20ae0e77cb3f
#: ../../ref/templates/builtins.txt:1353
msgid "z"
msgstr ""

# 15cbaec1be9d435093fa1889a7549dad
#: ../../ref/templates/builtins.txt:1353
msgid "Day of the year."
msgstr ""

# 8176ab44af7e4a5d9e2ff815a0de8df0
#: ../../ref/templates/builtins.txt:1353
msgid "``0`` to ``365``"
msgstr ""

# a468d8fc16f841358278e3b96a0e76c1
#: ../../ref/templates/builtins.txt:1354
msgid "Z"
msgstr ""

# 47b8de302cf54b2cb0500abcd70ed09c
#: ../../ref/templates/builtins.txt:1354
msgid ""
"Time zone offset in seconds. The offset for timezones west of UTC is always "
"negative, and for those east of UTC is always positive."
msgstr ""

# 6eb8f07ba874476e8cc93b2f9a43d753
#: ../../ref/templates/builtins.txt:1354
msgid "``-43200`` to ``43200``"
msgstr ""

# e927da93ca3441a285b2ee1e67872f62
#: ../../ref/templates/builtins.txt:1362
msgid ""
"The ``c`` and ``u`` format specification characters were added in Django 1.2."
msgstr ""

# 14a9859105504e16b0265fc3ea0f2376
#: ../../ref/templates/builtins.txt:1366
msgid ""
"The ``e`` and ``o`` format specification characters were added in Django 1.4."
msgstr ""

# 2e602a705c58443eaa2ad73af2251b41
#: ../../ref/templates/builtins.txt:1372
msgid ""
"If ``value`` is a ``datetime`` object (e.g., the result of ``datetime."
"datetime.now()``), the output will be the string ``'Wed 09 Jan 2008'``."
msgstr ""

# 6a111b73154d4a5484405971771c8ce1
#: ../../ref/templates/builtins.txt:1376
msgid ""
"The format passed can be one of the predefined ones :setting:`DATE_FORMAT`, :"
"setting:`DATETIME_FORMAT`, :setting:`SHORT_DATE_FORMAT` or :setting:"
"`SHORT_DATETIME_FORMAT`, or a custom format that uses the format specifiers "
"shown in the table above. Note that predefined formats may vary depending on "
"the current locale."
msgstr ""

# dce6be4fd3014f7e9641bc276f2aba12
#: ../../ref/templates/builtins.txt:1382
msgid ""
"Assuming that :setting:`USE_L10N` is ``True`` and :setting:`LANGUAGE_CODE` "
"is, for example, ``\"es\"``, then for::"
msgstr ""

# 0bc24ccebdad433586fe787ddf684a0b
#: ../../ref/templates/builtins.txt:1387
msgid ""
"the output would be the string ``\"09/01/2008\"`` (the ``\"SHORT_DATE_FORMAT"
"\"`` format specifier for the ``es`` locale as shipped with Django is ``\"d/"
"m/Y\"``)."
msgstr ""

# cc59fa305fb44558b25ea47c61d470a1
# 0f3e03b3996e45c599a62055bbde0f29
#: ../../ref/templates/builtins.txt:1390 ../../ref/templates/builtins.txt:2049
msgid "When used without a format string::"
msgstr ""

# e0d4dc648f154f0ebd58ee8b2aab102f
#: ../../ref/templates/builtins.txt:1394
msgid ""
"...the formatting string defined in the :setting:`DATE_FORMAT` setting will "
"be used, without applying any localization."
msgstr ""

# 0b74d477390142e090d1ff73de69978d
#: ../../ref/templates/builtins.txt:1403
msgid "default"
msgstr ""

# 9ceefead1dd441fca257ab0383e66f9c
#: ../../ref/templates/builtins.txt:1405
msgid ""
"If value evaluates to ``False``, uses the given default. Otherwise, uses the "
"value."
msgstr ""

# 2a6ce353afbc4711a569e52dd82e6ece
#: ../../ref/templates/builtins.txt:1412
msgid ""
"If ``value`` is ``\"\"`` (the empty string), the output will be ``nothing``."
msgstr ""

# 0df32bfbd6df4be1a5c349672aa05240
#: ../../ref/templates/builtins.txt:1417
msgid "default_if_none"
msgstr ""

# 93ab38eea4dd4b6fa34825f1ff5b5eb6
#: ../../ref/templates/builtins.txt:1419
msgid ""
"If (and only if) value is ``None``, uses the given default. Otherwise, uses "
"the value."
msgstr ""

# fe6e089c21fe4780a6dbf75b790ad4b7
#: ../../ref/templates/builtins.txt:1422
msgid ""
"Note that if an empty string is given, the default value will *not* be used. "
"Use the :tfilter:`default` filter if you want to fallback for empty strings."
msgstr ""

# b55b1d4ac13b4c8ca96b32aa09994f16
#: ../../ref/templates/builtins.txt:1429
msgid ""
"If ``value`` is ``None``, the output will be the string ``\"nothing\"``."
msgstr ""

# 6a30225a7e0d46e88bb4f51271416a4e
#: ../../ref/templates/builtins.txt:1434
msgid "dictsort"
msgstr ""

# 4b12d92dcd884e4d828cc1fb882b5fc6
#: ../../ref/templates/builtins.txt:1436
msgid ""
"Takes a list of dictionaries and returns that list sorted by the key given "
"in the argument."
msgstr ""

# abca8854e71f48e393c3483b1fa555d5
#: ../../ref/templates/builtins.txt:1443
msgid "If ``value`` is:"
msgstr ""

# 7d25d2dc73b94063a1ac907f9b1ce42d
#: ../../ref/templates/builtins.txt:1453
msgid "then the output would be:"
msgstr ""

# 3db056c3c56d4a0d97e7a3e6632a7ff5
#: ../../ref/templates/builtins.txt:1466
msgid "dictsortreversed"
msgstr ""

# 9720b03fd5da4b61937e41bccd2fbdee
#: ../../ref/templates/builtins.txt:1468
msgid ""
"Takes a list of dictionaries and returns that list sorted in reverse order "
"by the key given in the argument. This works exactly the same as the above "
"filter, but the returned value will be in reverse order."
msgstr ""

# d99f7ef68f264dd494b57fd4c164e16e
#: ../../ref/templates/builtins.txt:1475
msgid "divisibleby"
msgstr ""

# 98c7854f1bc74f9797f99afc3a3734ad
#: ../../ref/templates/builtins.txt:1477
msgid "Returns ``True`` if the value is divisible by the argument."
msgstr ""

# 788eff4dc10f43549961eef063e761cb
#: ../../ref/templates/builtins.txt:1483
msgid "If ``value`` is ``21``, the output would be ``True``."
msgstr ""

# c261ff0d183a435dbe0a1c99f9213d71
#: ../../ref/templates/builtins.txt:1488
msgid "escape"
msgstr ""

# c9d85d3d02544f7392434f9ea3825d1e
#: ../../ref/templates/builtins.txt:1490
msgid "Escapes a string's HTML. Specifically, it makes these replacements:"
msgstr ""

# 81c830c41cf14a6fa20ac798d27fcd86
#: ../../ref/templates/builtins.txt:1492
msgid "``<`` is converted to ``&lt;``"
msgstr ""

# b700b6339a3349b0989f8a625b6f16df
#: ../../ref/templates/builtins.txt:1493
msgid "``>`` is converted to ``&gt;``"
msgstr ""

# 7fce4ba2f8994b54bde756f98d4e8de6
#: ../../ref/templates/builtins.txt:1494
msgid "``'`` (single quote) is converted to ``&#39;``"
msgstr ""

# 7af170bfe0ef4944baa54c46214d97ac
#: ../../ref/templates/builtins.txt:1495
msgid "``\"`` (double quote) is converted to ``&quot;``"
msgstr ""

# ad1136b44e5a413393bdf6b6858f21ac
#: ../../ref/templates/builtins.txt:1496
msgid "``&`` is converted to ``&amp;``"
msgstr ""

# e048cb67439943a9ae6bfe6c60baa9c9
#: ../../ref/templates/builtins.txt:1498
msgid ""
"The escaping is only applied when the string is output, so it does not "
"matter where in a chained sequence of filters you put ``escape``: it will "
"always be applied as though it were the last filter. If you want escaping to "
"be applied immediately, use the :tfilter:`force_escape` filter."
msgstr ""

# 4dacf5805c3e4df7b2c2ad225fb98c25
#: ../../ref/templates/builtins.txt:1503
msgid ""
"Applying ``escape`` to a variable that would normally have auto-escaping "
"applied to the result will only result in one round of escaping being done. "
"So it is safe to use this function even in auto-escaping environments. If "
"you want multiple escaping passes to be applied, use the :tfilter:"
"`force_escape` filter."
msgstr ""

# 405a215a27c24a9a99ab49ff4151f168
#: ../../ref/templates/builtins.txt:1511
msgid "escapejs"
msgstr ""

# 66d6b44f7c91455196a3e8a8df708965
#: ../../ref/templates/builtins.txt:1513
msgid ""
"Escapes characters for use in JavaScript strings. This does *not* make the "
"string safe for use in HTML, but does protect you from syntax errors when "
"using templates to generate JavaScript/JSON."
msgstr ""

# 4e1ccea02781443c89d45b8e4092c8dc
#: ../../ref/templates/builtins.txt:1521
msgid ""
"If ``value`` is ``\"testing\\r\\njavascript \\'string\" <b>escaping</b>\"``, "
"the output will be ``\"testing\\\\u000D\\\\u000Ajavascript \\\\u0027string\\"
"\\u0022 \\\\u003Cb\\\\u003Eescaping\\\\u003C/b\\\\u003E\"``."
msgstr ""

# 35feb3a71bf54e058954314e27553ad4
#: ../../ref/templates/builtins.txt:1527
msgid "filesizeformat"
msgstr ""

# 38a974902c334677856dac6ec808a7d3
#: ../../ref/templates/builtins.txt:1529
msgid ""
"Formats the value like a 'human-readable' file size (i.e. ``'13 KB'``, "
"``'4.1 MB'``, ``'102 bytes'``, etc)."
msgstr ""

# f9ec3e2f4e194dfbb95dc0e513a4f2f6
#: ../../ref/templates/builtins.txt:1536
msgid "If ``value`` is 123456789, the output would be ``117.7 MB``."
msgstr ""

# 8a89488fb48b47d0a31ef93d8f2419f6
#: ../../ref/templates/builtins.txt:1541
msgid "first"
msgstr ""

# b9e960c018c74f33aad0771112a86332
#: ../../ref/templates/builtins.txt:1543
msgid "Returns the first item in a list."
msgstr ""

# 5aa4115853b341a58b941605ea10ccfc
#: ../../ref/templates/builtins.txt:1549
msgid ""
"If ``value`` is the list ``['a', 'b', 'c']``, the output will be ``'a'``."
msgstr ""

# 66f901a2873e4d94a93fe66f6d9dc585
#: ../../ref/templates/builtins.txt:1554
msgid "fix_ampersands"
msgstr ""

# d8105b1895af4740874404a76dc265ac
#: ../../ref/templates/builtins.txt:1558
msgid ""
"This is rarely useful as ampersands are automatically escaped. See :tfilter:"
"`escape` for more information."
msgstr ""

# 9805f39d8ccb4e84bf90c8920d671816
#: ../../ref/templates/builtins.txt:1561
msgid "Replaces ampersands with ``&amp;`` entities."
msgstr ""

# 9202abf8425a46caae9015b59268892f
#: ../../ref/templates/builtins.txt:1567
msgid ""
"If ``value`` is ``Tom & Jerry``, the output will be ``Tom &amp; Jerry``."
msgstr ""

# 3539847ce8684d96b9c0b4ba6893b205
#: ../../ref/templates/builtins.txt:1569
msgid ""
"However, ampersands used in named entities and numeric character references "
"will not be replaced. For example, if ``value`` is ``Caf&eacute;``, the "
"output will *not* be ``Caf&amp;eacute;`` but remain ``Caf&eacute;``. This "
"means that in some edge cases, such as acronyms followed by semicolons, this "
"filter will not replace ampersands that need replacing. For example, if "
"``value`` is ``Contact the R&D;``, the output will remain unchanged because "
"``&D;`` resembles a named entity."
msgstr ""

# a40881f1d1aa4dcf9fa589a17e1ccca5
#: ../../ref/templates/builtins.txt:1580
msgid "floatformat"
msgstr ""

# da1be2d8445847acb7912afc0cb589a7
#: ../../ref/templates/builtins.txt:1582
msgid ""
"When used without an argument, rounds a floating-point number to one decimal "
"place -- but only if there's a decimal part to be displayed. For example:"
msgstr ""

# 674139ff4b7c4a308763ed6785b28743
# 612cc28defb245c0b4b1bf7a87965ebf
# 035f655f897a4016bd18f6910c73713e
#: ../../ref/templates/builtins.txt:1586 ../../ref/templates/builtins.txt:1597
#: ../../ref/templates/builtins.txt:1609
msgid "``value``"
msgstr ""

# 8e02dd3716144802b3fa1c48303226f5
# 9f77f2aaec674bb9900c4f65b382807e
# 80ee42c3ddc74ffca81763ac4c1caad5
#: ../../ref/templates/builtins.txt:1586 ../../ref/templates/builtins.txt:1597
#: ../../ref/templates/builtins.txt:1609
msgid "Output"
msgstr ""

# fe3065acd7c6482ea0cb4be5f93d7b94
# 019417ba639a426b9e20a353cff5221d
# 332b2ce7586844de9489499e5bd4d971
#: ../../ref/templates/builtins.txt:1588 ../../ref/templates/builtins.txt:1599
#: ../../ref/templates/builtins.txt:1611
msgid "``34.23234``"
msgstr ""

# 6f7ccebb9f204c4baad32623beee5067
# f9cfaade3aed4d788439775458d8f76c
# 66ef6d1e6481494ca4532bf8d0a53701
#: ../../ref/templates/builtins.txt:1588 ../../ref/templates/builtins.txt:1589
#: ../../ref/templates/builtins.txt:1590
msgid "``{{ value|floatformat }}``"
msgstr ""

# 57d8b27bab5e4d579891c2259f98b29d
#: ../../ref/templates/builtins.txt:1588
msgid "``34.2``"
msgstr ""

# c010244f09844c14b62e64347215e8da
# fa8bc918a78b4c748d70afa7abf949f5
# 71608bc48c81464abaa055740d2d0170
#: ../../ref/templates/builtins.txt:1589 ../../ref/templates/builtins.txt:1600
#: ../../ref/templates/builtins.txt:1612
msgid "``34.00000``"
msgstr ""

# c9730c545e1f49d8962cece3fa63cbdf
# d9256b61bcd8469f9069df54aad7da23
#: ../../ref/templates/builtins.txt:1589 ../../ref/templates/builtins.txt:1612
msgid "``34``"
msgstr ""

# fbd1d027be18428394f42bc2ba7285fa
# 113d31d5951b4a9e9b7a34ac7cc3ba7d
# 0058e6d16d784275b2655c1e5d22c638
#: ../../ref/templates/builtins.txt:1590 ../../ref/templates/builtins.txt:1601
#: ../../ref/templates/builtins.txt:1613
msgid "``34.26000``"
msgstr ""

# 5108dd70a21f496ebda9f505bcfdc5de
#: ../../ref/templates/builtins.txt:1590
msgid "``34.3``"
msgstr ""

# faa30a720b334ce18b85cc1d20b5b018
#: ../../ref/templates/builtins.txt:1593
msgid ""
"If used with a numeric integer argument, ``floatformat`` rounds a number to "
"that many decimal places. For example:"
msgstr ""

# 1a9a7c27b66847288b0f1f8bc516f144
# 2e9816dcc7f041baba091242b0614fcc
# 9f7c52cbedd54221b9c1aa84f0a160af
#: ../../ref/templates/builtins.txt:1599 ../../ref/templates/builtins.txt:1600
#: ../../ref/templates/builtins.txt:1601
msgid "``{{ value|floatformat:3 }}``"
msgstr ""

# 836c7b475951439a8fe1c604255df1bc
# 113ea265050f445ca1f9cb698f5a69bf
#: ../../ref/templates/builtins.txt:1599 ../../ref/templates/builtins.txt:1611
msgid "``34.232``"
msgstr ""

# 5dddb6680f2d48e3935d8488db8186e3
#: ../../ref/templates/builtins.txt:1600
msgid "``34.000``"
msgstr ""

# c682bc276e0d46fc8351c5b087d3d4b0
# 4f2c55867b454a8388c8dfccf27162c6
#: ../../ref/templates/builtins.txt:1601 ../../ref/templates/builtins.txt:1613
msgid "``34.260``"
msgstr ""

# 9da244ddf67e47d4b3ec2ecdc71113ec
#: ../../ref/templates/builtins.txt:1604
msgid ""
"If the argument passed to ``floatformat`` is negative, it will round a "
"number to that many decimal places -- but only if there's a decimal part to "
"be displayed. For example:"
msgstr ""

# fd9ffc2c251d484fb39bed829234193a
# f5b4c5772c09445591698f25c553ff60
# 4b5f606a732b4a35a4edcd7171420bdc
#: ../../ref/templates/builtins.txt:1611 ../../ref/templates/builtins.txt:1612
#: ../../ref/templates/builtins.txt:1613
msgid "``{{ value|floatformat:\"-3\" }}``"
msgstr ""

# 3984225531f7405f8b46d12ea018ca42
#: ../../ref/templates/builtins.txt:1616
msgid ""
"Using ``floatformat`` with no argument is equivalent to using "
"``floatformat`` with an argument of ``-1``."
msgstr ""

# dc029788cfa14919b226679c6355f3fe
#: ../../ref/templates/builtins.txt:1622
msgid "force_escape"
msgstr ""

# 469386cb5a624c24b672a3b28f6986e4
#: ../../ref/templates/builtins.txt:1624
msgid ""
"Applies HTML escaping to a string (see the :tfilter:`escape` filter for "
"details). This filter is applied *immediately* and returns a new, escaped "
"string. This is useful in the rare cases where you need multiple escaping or "
"want to apply other filters to the escaped results. Normally, you want to "
"use the :tfilter:`escape` filter."
msgstr ""

# 41bd38972e2b411cb9a78f671975c0dd
#: ../../ref/templates/builtins.txt:1633
msgid "get_digit"
msgstr ""

# f176504f22a444d5b9a02a879dc466cc
#: ../../ref/templates/builtins.txt:1635
msgid ""
"Given a whole number, returns the requested digit, where 1 is the right-most "
"digit, 2 is the second-right-most digit, etc. Returns the original value for "
"invalid input (if input or argument is not an integer, or if argument is "
"less than 1). Otherwise, output is always an integer."
msgstr ""

# d70819c155994c37972f3e2c38032baa
#: ../../ref/templates/builtins.txt:1644
msgid "If ``value`` is ``123456789``, the output will be ``8``."
msgstr ""

# b48c5b10744a4db0a12db6ff6b8a592a
#: ../../ref/templates/builtins.txt:1649
msgid "iriencode"
msgstr ""

# a1d34ebee8984909946a2b637d647b94
#: ../../ref/templates/builtins.txt:1651
msgid ""
"Converts an IRI (Internationalized Resource Identifier) to a string that is "
"suitable for including in a URL. This is necessary if you're trying to use "
"strings containing non-ASCII characters in a URL."
msgstr ""

# df7d614ca22e4843b9a9809aadd4e6f4
#: ../../ref/templates/builtins.txt:1655
msgid ""
"It's safe to use this filter on a string that has already gone through the :"
"tfilter:`urlencode` filter."
msgstr ""

# c4c7ac6a4e12495a8aaa6883e3c9b414
#: ../../ref/templates/builtins.txt:1662
msgid ""
"If ``value`` is ``\"?test=1&me=2\"``, the output will be ``\"?test=1&amp;"
"me=2\"``."
msgstr ""

# 53473442da05411696276f0883413c5c
#: ../../ref/templates/builtins.txt:1667
msgid "join"
msgstr ""

# 68f2027f2dcc445f80c6b8dd724aa4fe
#: ../../ref/templates/builtins.txt:1669
msgid "Joins a list with a string, like Python's ``str.join(list)``"
msgstr ""

# da232a8aaf8a4410bc6c834566e88514
#: ../../ref/templates/builtins.txt:1675
msgid ""
"If ``value`` is the list ``['a', 'b', 'c']``, the output will be the string "
"``\"a // b // c\"``."
msgstr ""

# e31dcd8424d6423ea04d8be6fc2cf605
#: ../../ref/templates/builtins.txt:1681
msgid "last"
msgstr ""

# 7183dc77a5f747e1b823d5c456d4ec6d
#: ../../ref/templates/builtins.txt:1683
msgid "Returns the last item in a list."
msgstr ""

# 48617734a9194cd1b5530058db2b0c4b
#: ../../ref/templates/builtins.txt:1689
msgid ""
"If ``value`` is the list ``['a', 'b', 'c', 'd']``, the output will be the "
"string ``\"d\"``."
msgstr ""

# 5b40b813d8754e9da9436cebbcbd3ba3
#: ../../ref/templates/builtins.txt:1695
msgid "length"
msgstr ""

# 60befdf6cebf4154a34acecd0a9a4c41
#: ../../ref/templates/builtins.txt:1697
msgid "Returns the length of the value. This works for both strings and lists."
msgstr ""

# a65f9444b1294665a69232041cfc17f4
#: ../../ref/templates/builtins.txt:1703
msgid "If ``value`` is ``['a', 'b', 'c', 'd']``, the output will be ``4``."
msgstr ""

# 0078d90c356d4d2b8639606248a796fd
#: ../../ref/templates/builtins.txt:1708
msgid "length_is"
msgstr ""

# 459d3e4c61a2442da24d27102ef3dbaa
#: ../../ref/templates/builtins.txt:1710
msgid ""
"Returns ``True`` if the value's length is the argument, or ``False`` "
"otherwise."
msgstr ""

# 952ea25bdd6947ecab9748c8517fce87
#: ../../ref/templates/builtins.txt:1716
msgid "If ``value`` is ``['a', 'b', 'c', 'd']``, the output will be ``True``."
msgstr ""

# 1dc574aa74d44fdfbc726fb2f92718ed
#: ../../ref/templates/builtins.txt:1721
msgid "linebreaks"
msgstr ""

# a799d1aaff4a4139ba8683bc0121673e
#: ../../ref/templates/builtins.txt:1723
msgid ""
"Replaces line breaks in plain text with appropriate HTML; a single newline "
"becomes an HTML line break (``<br />``) and a new line followed by a blank "
"line becomes a paragraph break (``</p>``)."
msgstr ""

# 95565b643f9b4627b113d133f08d1975
#: ../../ref/templates/builtins.txt:1731
msgid ""
"If ``value`` is ``Joel\\nis a slug``, the output will be ``<p>Joel<br />is a "
"slug</p>``."
msgstr ""

# ebfdf24d82a6432e9a3140e637cf9b0a
#: ../../ref/templates/builtins.txt:1737
msgid "linebreaksbr"
msgstr ""

# d88da63f345e4e6a8d7857004edf42c9
#: ../../ref/templates/builtins.txt:1739
msgid ""
"Converts all newlines in a piece of plain text to HTML line breaks (``<br /"
">``)."
msgstr ""

# 55f731eb6fc84b7595a8e05a4747045a
#: ../../ref/templates/builtins.txt:1746
msgid ""
"If ``value`` is ``Joel\\nis a slug``, the output will be ``Joel<br />is a "
"slug``."
msgstr ""

# cb9a5d32471844f0859306df1dc6574c
#: ../../ref/templates/builtins.txt:1752
msgid "linenumbers"
msgstr ""

# 43a0305f71954d48ac4bb6496aff6f59
#: ../../ref/templates/builtins.txt:1754
msgid "Displays text with line numbers."
msgstr ""

# fce4eee1e1fc4adf97354e0c4604e8d8
#: ../../ref/templates/builtins.txt:1760
msgid "If ``value`` is::"
msgstr ""

# f78775b838364ab090fec7187c1d774b
#: ../../ref/templates/builtins.txt:1766
msgid "the output will be::"
msgstr ""

# 7f60f259f1f74c1fb47987b0ca2cc6fd
#: ../../ref/templates/builtins.txt:1775
msgid "ljust"
msgstr ""

# 6181e68a53584c448387afe4d2c8d312
#: ../../ref/templates/builtins.txt:1777
msgid "Left-aligns the value in a field of a given width."
msgstr ""

# e2b9000ada2a4ed1b49bbe0855b3aa34
# 0783fa4569ec49ce8f599e47414203be
#: ../../ref/templates/builtins.txt:1779 ../../ref/templates/builtins.txt:1912
msgid "**Argument:** field size"
msgstr ""

# efbf1301ab6d4dbeb11c8b1275968fa9
#: ../../ref/templates/builtins.txt:1785
msgid "If ``value`` is ``Django``, the output will be ``\"Django    \"``."
msgstr ""

# 1d61102744994a07a06a06c2d27d70b6
#: ../../ref/templates/builtins.txt:1790
msgid "lower"
msgstr ""

# 632a2efa9dca4fff9c5e42e99b66fce3
#: ../../ref/templates/builtins.txt:1792
msgid "Converts a string into all lowercase."
msgstr ""

# a5d8bbad921e48ac8ba0d7341e6c0854
#: ../../ref/templates/builtins.txt:1798
msgid ""
"If ``value`` is ``Still MAD At Yoko``, the output will be ``still mad at "
"yoko``."
msgstr ""

# f8b42e8becaf44959ad61e6320c1a4f8
#: ../../ref/templates/builtins.txt:1804
msgid "make_list"
msgstr ""

# 3efb9fcffd4b4c77875f2ad2865e26f5
#: ../../ref/templates/builtins.txt:1806
msgid ""
"Returns the value turned into a list. For a string, it's a list of "
"characters. For an integer, the argument is cast into an unicode string "
"before creating a list."
msgstr ""

# 7ac4495a0f0a461f9ebdf5568165752e
#: ../../ref/templates/builtins.txt:1814
msgid ""
"If ``value`` is the string ``\"Joel\"``, the output would be the list ``"
"[u'J', u'o', u'e', u'l']``. If ``value`` is ``123``, the output will be the "
"list ``[u'1', u'2', u'3']``."
msgstr ""

# 120ecf2f54fe49fca98fa1fcc7d7ab7a
#: ../../ref/templates/builtins.txt:1821
msgid "phone2numeric"
msgstr ""

# 271f74c390e242a794cb3aa4e4e6a752
#: ../../ref/templates/builtins.txt:1823
msgid ""
"Converts a phone number (possibly containing letters) to its numerical "
"equivalent."
msgstr ""

# 38d0afa918a54b158d5c3abe37af4eb2
#: ../../ref/templates/builtins.txt:1826
msgid ""
"The input doesn't have to be a valid phone number. This will happily convert "
"any string."
msgstr ""

# b934d993d269469090b01ed511dc6b7c
#: ../../ref/templates/builtins.txt:1833
msgid "If ``value`` is ``800-COLLECT``, the output will be ``800-2655328``."
msgstr ""

# 40559de45db341d18b132e0e3ba9988d
#: ../../ref/templates/builtins.txt:1838
msgid "pluralize"
msgstr ""

# 682ed50e9c304dc7827657186601aeea
#: ../../ref/templates/builtins.txt:1840
msgid ""
"Returns a plural suffix if the value is not 1. By default, this suffix is "
"``'s'``."
msgstr ""

# b1cfb56848754b65973f5a271fbc4deb
#: ../../ref/templates/builtins.txt:1847
msgid ""
"If ``num_messages`` is ``1``, the output will be ``You have 1 message.`` If "
"``num_messages`` is ``2``  the output will be ``You have 2 messages.``"
msgstr ""

# c7525dcfdbda467fa93ed0388816ee5a
#: ../../ref/templates/builtins.txt:1850
msgid ""
"For words that require a suffix other than ``'s'``, you can provide an "
"alternate suffix as a parameter to the filter."
msgstr ""

# 3e073ce3baee4913b5133cefcb8ddf0d
#: ../../ref/templates/builtins.txt:1857
msgid ""
"For words that don't pluralize by simple suffix, you can specify both a "
"singular and plural suffix, separated by a comma."
msgstr ""

# a500446a851c47e680612f48e6685bef
#: ../../ref/templates/builtins.txt:1864
msgid "Use :ttag:`blocktrans` to pluralize translated strings."
msgstr ""

# fdc32534980046ae9bebd8ef7d429555
#: ../../ref/templates/builtins.txt:1869
msgid "pprint"
msgstr ""

# af71fccd229a47a2bb7cc5464ef1c474
#: ../../ref/templates/builtins.txt:1871
msgid "A wrapper around :func:`pprint.pprint` -- for debugging, really."
msgstr ""

# ae69a402c3794c4abb9c83ad61de39b3
#: ../../ref/templates/builtins.txt:1876
msgid "random"
msgstr ""

# e44c627908de4562a3bda1c669f4924d
#: ../../ref/templates/builtins.txt:1878
msgid "Returns a random item from the given list."
msgstr ""

# 6d9cf4eadc4744f49528f18bd5c3a34c
#: ../../ref/templates/builtins.txt:1884
msgid ""
"If ``value`` is the list ``['a', 'b', 'c', 'd']``, the output could be ``\"b"
"\"``."
msgstr ""

# 1f85d4c6556e4d43aaf09a76846256bd
#: ../../ref/templates/builtins.txt:1889
msgid "removetags"
msgstr ""

# 04f6ef2b509b43dcac8bf8880ab1e415
#: ../../ref/templates/builtins.txt:1891
msgid "Removes a space-separated list of [X]HTML tags from the output."
msgstr ""

# 1b449a5ab0834dcc8c9612be0cf3aa0d
#: ../../ref/templates/builtins.txt:1897
msgid ""
"If ``value`` is ``\"<b>Joel</b> <button>is</button> a <span>slug</span>\"`` "
"the output will be ``\"Joel <button>is</button> a slug\"``."
msgstr ""

# df37ae9330714cd38eaf24dc2c9f95cf
#: ../../ref/templates/builtins.txt:1900
msgid "Note that this filter is case-sensitive."
msgstr ""

# c0b56e8f50fa400b9f4e22bb7bc3d7f7
#: ../../ref/templates/builtins.txt:1902
msgid ""
"If ``value`` is ``\"<B>Joel</B> <button>is</button> a <span>slug</span>\"`` "
"the output will be ``\"<B>Joel</B> <button>is</button> a slug\"``."
msgstr ""

# efcfd4b35a074257802a9a7af7b33787
#: ../../ref/templates/builtins.txt:1908
msgid "rjust"
msgstr ""

# 181d1f59a7254761b93a1dcca1edbade
#: ../../ref/templates/builtins.txt:1910
msgid "Right-aligns the value in a field of a given width."
msgstr ""

# ebb2691af4df4f5595096b901bc5cdea
#: ../../ref/templates/builtins.txt:1918
msgid "If ``value`` is ``Django``, the output will be ``\"    Django\"``."
msgstr ""

# c1fe67d6779948718abf2ad80e7a0052
#: ../../ref/templates/builtins.txt:1923
msgid "safe"
msgstr ""

# 80b6eb676e64423393adabbb956f445c
#: ../../ref/templates/builtins.txt:1925
msgid ""
"Marks a string as not requiring further HTML escaping prior to output. When "
"autoescaping is off, this filter has no effect."
msgstr ""

# 748c26efe5514ed8901057f113ce30e8
#: ../../ref/templates/builtins.txt:1930
msgid ""
"If you are chaining filters, a filter applied after ``safe`` can make the "
"contents unsafe again. For example, the following code prints the variable "
"as is, unescaped:"
msgstr ""

# a55f5422886d4e7992f31dc8893154f1
#: ../../ref/templates/builtins.txt:1941
msgid "safeseq"
msgstr ""

# 4eafcc5a822c4d18a84169eaf890a44f
#: ../../ref/templates/builtins.txt:1943
msgid ""
"Applies the :tfilter:`safe` filter to each element of a sequence.  Useful in "
"conjunction with other filters that operate on sequences, such as :tfilter:"
"`join`.  For example::"
msgstr ""

# c85cf1ccbf844219abd351d03ce657f8
#: ../../ref/templates/builtins.txt:1949
msgid ""
"You couldn't use the :tfilter:`safe` filter directly in this case, as it "
"would first convert the variable into a string, rather than working with the "
"individual elements of the sequence."
msgstr ""

# 456cc867c1694c01b8ba5b92ee520b87
#: ../../ref/templates/builtins.txt:1956
msgid "slice"
msgstr ""

# a9d9ab6fb5384087980be30592e2bc3c
#: ../../ref/templates/builtins.txt:1958
msgid "Returns a slice of the list."
msgstr ""

# d2036523ecfb4f6e98563be385f2199f
#: ../../ref/templates/builtins.txt:1960
msgid ""
"Uses the same syntax as Python's list slicing. See http://diveintopython.net/"
"native_data_types/lists.html#odbchelper.list.slice for an introduction."
msgstr ""

# d4bfb3cb734048be9e65307ccec86c6f
#: ../../ref/templates/builtins.txt:1968
msgid ""
"If ``some_list`` is ``['a', 'b', 'c']``, the output will be ``['a', 'b']``."
msgstr ""

# 43c9458fabe6412eb1ede91f7d0cb1ac
#: ../../ref/templates/builtins.txt:1973
msgid "slugify"
msgstr ""

# 489c7ca173924786b8f35ed95d7403d4
#: ../../ref/templates/builtins.txt:1975
msgid ""
"Converts to lowercase, removes non-word characters (alphanumerics and "
"underscores) and converts spaces to hyphens. Also strips leading and "
"trailing whitespace."
msgstr ""

# 204c97550d8a452aa11593150c9b16a2
#: ../../ref/templates/builtins.txt:1983
msgid ""
"If ``value`` is ``\"Joel is a slug\"``, the output will be ``\"joel-is-a-slug"
"\"``."
msgstr ""

# b9f02df4e53e428fa7c2c3d8b0ce961f
#: ../../ref/templates/builtins.txt:1988
msgid "stringformat"
msgstr ""

# a24dba45c6ea4ca5b9dd5253b822bb9c
#: ../../ref/templates/builtins.txt:1990
msgid ""
"Formats the variable according to the argument, a string formatting "
"specifier. This specifier uses Python string formatting syntax, with the "
"exception that the leading \"%\" is dropped."
msgstr ""

# 2f562ffbd77340c9b3ce601c45310437
#: ../../ref/templates/builtins.txt:1994
msgid ""
"See http://docs.python.org/library/stdtypes.html#string-formatting-"
"operations for documentation of Python string formatting"
msgstr ""

# 5132668fce884122948ca79337e676df
#: ../../ref/templates/builtins.txt:2001
msgid ""
"If ``value`` is ``\"Joel is a slug\"``, the output will be ``\"Joel is a slug"
"\"``."
msgstr ""

# 05bb9bee7f16435a8efe5c5069c6137a
#: ../../ref/templates/builtins.txt:2006
msgid "striptags"
msgstr ""

# c8465578f04d45269371a30329d8c704
#: ../../ref/templates/builtins.txt:2008
msgid "Strips all [X]HTML tags."
msgstr ""

# 6958d56d2c4c4cfcba9c304706e531c2
#: ../../ref/templates/builtins.txt:2014
msgid ""
"If ``value`` is ``\"<b>Joel</b> <button>is</button> a <span>slug</span>\"``, "
"the output will be ``\"Joel is a slug\"``."
msgstr ""

# f6e6e4e41eca4fa98f9c0a0fd5ca229c
#: ../../ref/templates/builtins.txt:2020
msgid "time"
msgstr ""

# 4240d2ec7ca442a1940b53065f618aef
#: ../../ref/templates/builtins.txt:2022
msgid "Formats a time according to the given format."
msgstr ""

# b7d521b236f94fc2b1886050897f40a7
#: ../../ref/templates/builtins.txt:2024
msgid ""
"Given format can be the predefined one :setting:`TIME_FORMAT`, or a custom "
"format, same as the :tfilter:`date` filter. Note that the predefined format "
"is locale-dependant."
msgstr ""

# 3f3248e9847a4d3c9ce328cb30214171
#: ../../ref/templates/builtins.txt:2028
msgid ""
"The time filter will only accept parameters in the format string that relate "
"to the time of day, not the date (for obvious reasons). If you need to "
"format a date, use the :tfilter:`date` filter."
msgstr ""

# 9fcad8475c174b3090e8370acbd4edbb
#: ../../ref/templates/builtins.txt:2036
msgid ""
"If ``value`` is equivalent to ``datetime.datetime.now()``, the output will "
"be the string ``\"01:23\"``."
msgstr ""

# 48452c8186e24064a70c3970ea9eeca2
#: ../../ref/templates/builtins.txt:2039
msgid "Another example:"
msgstr ""

# 8a194dce0760457eb7dc93c59ec54d60
#: ../../ref/templates/builtins.txt:2041
msgid ""
"Assuming that :setting:`USE_L10N` is ``True`` and :setting:`LANGUAGE_CODE` "
"is, for example, ``\"de\"``, then for::"
msgstr ""

# 0a768c42cc6b449ca081427d2944f28e
#: ../../ref/templates/builtins.txt:2046
msgid ""
"the output will be the string ``\"01:23:00\"`` (The ``\"TIME_FORMAT\"`` "
"format specifier for the ``de`` locale as shipped with Django is ``\"H:i:s"
"\"``)."
msgstr ""

# 1c4bf8d4b5594b86ad0fe24a3704b8bc
#: ../../ref/templates/builtins.txt:2053
msgid ""
"...the formatting string defined in the :setting:`TIME_FORMAT` setting will "
"be used, without applying any localization."
msgstr ""

# 612ff3d8fe9b4f0f89a536e7db3bf966
#: ../../ref/templates/builtins.txt:2062
msgid "timesince"
msgstr ""

# 102fac29e1604e5c8168cc7651ded958
#: ../../ref/templates/builtins.txt:2064
msgid "Formats a date as the time since that date (e.g., \"4 days, 6 hours\")."
msgstr ""

# 0dc523a003b64133937cc57056d0b078
#: ../../ref/templates/builtins.txt:2066
msgid ""
"Takes an optional argument that is a variable containing the date to use as "
"the comparison point (without the argument, the comparison point is *now*). "
"For example, if ``blog_date`` is a date instance representing midnight on 1 "
"June 2006, and ``comment_date`` is a date instance for 08:00 on 1 June 2006, "
"then ``{{ blog_date|timesince:comment_date }}`` would return \"8 hours\"."
msgstr ""

# 4eef1a20adf446b984afc764dea4448f
# 5cab33d53c9f44b4ab527647f2e70afe
#: ../../ref/templates/builtins.txt:2072 ../../ref/templates/builtins.txt:2091
msgid ""
"Comparing offset-naive and offset-aware datetimes will return an empty "
"string."
msgstr ""

# e6b7519aa17e419d95c5ce56a8c9324f
#: ../../ref/templates/builtins.txt:2074
msgid ""
"Minutes is the smallest unit used, and \"0 minutes\" will be returned for "
"any date that is in the future relative to the comparison point."
msgstr ""

# 72fe56f07e954d99b420e5e65ca96272
#: ../../ref/templates/builtins.txt:2080
msgid "timeuntil"
msgstr ""

# 3875e2f5ea734b79b9dcadd28c19a15f
#: ../../ref/templates/builtins.txt:2082
msgid ""
"Similar to ``timesince``, except that it measures the time from now until "
"the given date or datetime. For example, if today is 1 June 2006 and "
"``conference_date`` is a date instance holding 29 June 2006, then ``"
"{{ conference_date|timeuntil }}`` will return \"4 weeks\"."
msgstr ""

# 0b39c67e69b64ee2b1b380c486b2ddb2
#: ../../ref/templates/builtins.txt:2087
msgid ""
"Takes an optional argument that is a variable containing the date to use as "
"the comparison point (instead of *now*). If ``from_date`` contains 22 June "
"2006, then ``{{ conference_date|timeuntil:from_date }}`` will return \"1 week"
"\"."
msgstr ""

# 8ee18d19eb74496992d49a8bb52ba7a5
#: ../../ref/templates/builtins.txt:2093
msgid ""
"Minutes is the smallest unit used, and \"0 minutes\" will be returned for "
"any date that is in the past relative to the comparison point."
msgstr ""

# e7088ebe59c64af9a477a6d652ee280a
#: ../../ref/templates/builtins.txt:2099
msgid "title"
msgstr ""

# aa79e058c5a640c09c6eeeabc36dcdc0
#: ../../ref/templates/builtins.txt:2101
msgid "Converts a string into titlecase."
msgstr ""

# 1616358b18264bdda51caa07bfe1d31c
#: ../../ref/templates/builtins.txt:2107
msgid ""
"If ``value`` is ``\"my first post\"``, the output will be ``\"My First Post"
"\"``."
msgstr ""

# 8f9837b00b5e4d349b0cfdf3163e399f
#: ../../ref/templates/builtins.txt:2112
msgid "truncatechars"
msgstr ""

# c4c3b70340634af498053d2ca998fd25
#: ../../ref/templates/builtins.txt:2116
msgid ""
"Truncates a string if it is longer than the specified number of characters. "
"Truncated strings will end with a translatable ellipsis sequence (\"...\")."
msgstr ""

# 756039a40ad24cf8b96b0f6ed351a7eb
#: ../../ref/templates/builtins.txt:2119
msgid "**Argument:** Number of characters to truncate to"
msgstr ""

# 815d4ef21766471d91d622a8bafefc8c
#: ../../ref/templates/builtins.txt:2125
msgid ""
"If ``value`` is ``\"Joel is a slug\"``, the output will be ``\"Joel i...\"``."
msgstr ""

# eac72fd535e641f4ac1d0fec38b7a40d
#: ../../ref/templates/builtins.txt:2130
msgid "truncatewords"
msgstr ""

# 1cc1f919c01941c19d0e8c106fe269c2
#: ../../ref/templates/builtins.txt:2132
msgid "Truncates a string after a certain number of words."
msgstr ""

# 92fdf22a6aa44658a139f4b27c7607a1
#: ../../ref/templates/builtins.txt:2134
msgid "**Argument:** Number of words to truncate after"
msgstr ""

# b343c139e1bc4bd0b5c65bb4e7d8994c
#: ../../ref/templates/builtins.txt:2140
msgid ""
"If ``value`` is ``\"Joel is a slug\"``, the output will be ``\"Joel is ..."
"\"``."
msgstr ""

# 93a0114a297744bf9a9c7d74e7abf00b
#: ../../ref/templates/builtins.txt:2142
msgid "Newlines within the string will be removed."
msgstr ""

# d9ec150a9d4d4fc28a60a9c36b5a225a
#: ../../ref/templates/builtins.txt:2147
msgid "truncatewords_html"
msgstr ""

# 3ad775f0d7244dfca839b912bf9ce217
#: ../../ref/templates/builtins.txt:2149
msgid ""
"Similar to :tfilter:`truncatewords`, except that it is aware of HTML tags. "
"Any tags that are opened in the string and not closed before the truncation "
"point, are closed immediately after the truncation."
msgstr ""

# 11042dcb197a438b9966ed8af077df4e
#: ../../ref/templates/builtins.txt:2153
msgid ""
"This is less efficient than :tfilter:`truncatewords`, so should only be used "
"when it is being passed HTML text."
msgstr ""

# 7e00218dc2b44076bb1c9bf8b5f70015
#: ../../ref/templates/builtins.txt:2160
msgid ""
"If ``value`` is ``\"<p>Joel is a slug</p>\"``, the output will be ``"
"\"<p>Joel is ...</p>\"``."
msgstr ""

# addb5c4611f3473cac36e7a5ddd8ab9a
#: ../../ref/templates/builtins.txt:2163
msgid "Newlines in the HTML content will be preserved."
msgstr ""

# f18e41e552c44a01b489001ee3d6e33c
#: ../../ref/templates/builtins.txt:2168
msgid "unordered_list"
msgstr ""

# 4a6f4a9fec854d87b91ac49cb646e001
#: ../../ref/templates/builtins.txt:2170
msgid ""
"Recursively takes a self-nested list and returns an HTML unordered list -- "
"WITHOUT opening and closing <ul> tags."
msgstr ""

# 80079f1cb3c248378041ed30f6f006c5
#: ../../ref/templates/builtins.txt:2173
msgid ""
"The list is assumed to be in the proper format. For example, if ``var`` "
"contains ``['States', ['Kansas', ['Lawrence', 'Topeka'], 'Illinois']]``, "
"then ``{{ var|unordered_list }}`` would return::"
msgstr ""

# 59542d3a5d884f34a59ac1866c842b8f
#: ../../ref/templates/builtins.txt:2189
msgid ""
"Note: An older, more restrictive and verbose input format is also supported: "
"``['States', [['Kansas', [['Lawrence', []], ['Topeka', []]]], ['Illinois', "
"[]]]]``,"
msgstr ""

# 663038bca5124b25b59d001267785a2f
#: ../../ref/templates/builtins.txt:2195
msgid "upper"
msgstr ""

# cf1816a50747424ea07e78473ce6d7d4
#: ../../ref/templates/builtins.txt:2197
msgid "Converts a string into all uppercase."
msgstr ""

# 5a45bf5705ee411d875bcd19b550aa19
#: ../../ref/templates/builtins.txt:2203
msgid ""
"If ``value`` is ``\"Joel is a slug\"``, the output will be ``\"JOEL IS A SLUG"
"\"``."
msgstr ""

# f8f1332743c34e7a965a4ec2a4d8ee26
#: ../../ref/templates/builtins.txt:2208
msgid "urlencode"
msgstr ""

# dc031cd7c5f1427fa3d794f9cba33a1a
#: ../../ref/templates/builtins.txt:2210
msgid "Escapes a value for use in a URL."
msgstr ""

# 27eb623086bf4d0586a846b9ff801c33
#: ../../ref/templates/builtins.txt:2216
msgid ""
"If ``value`` is ``\"http://www.example.org/foo?a=b&c=d\"``, the output will "
"be ``\"http%3A//www.example.org/foo%3Fa%3Db%26c%3Dd\"``."
msgstr ""

# 81a06b608ddf453a92ccad1cf85752c6
#: ../../ref/templates/builtins.txt:2221
msgid ""
"An optional argument containing the characters which should not be escaped "
"can be provided."
msgstr ""

# d56681b8fa704e379d3d9edbc5cd4bf8
#: ../../ref/templates/builtins.txt:2224
msgid ""
"If not provided, the '/' character is assumed safe. An empty string can be "
"provided when *all* characters should be escaped. For example::"
msgstr ""

# a972c68948544e8db51b634677ff49ea
#: ../../ref/templates/builtins.txt:2229
msgid ""
"If ``value`` is ``\"http://www.example.org/\"``, the output will be ``\"http"
"%3A%2F%2Fwww.example.org%2F\"``."
msgstr ""

# 201edfa2854142079a77ad573d92e46f
#: ../../ref/templates/builtins.txt:2235
msgid "urlize"
msgstr ""

# 2ea15806156f4ff78ec8f8924ed44056
#: ../../ref/templates/builtins.txt:2237
msgid "Converts URLs in text into clickable links."
msgstr ""

# c56e552997d0401ca4ca7a18da564ae0
#: ../../ref/templates/builtins.txt:2239
msgid ""
"This template tag works on links prefixed with ``http://``, ``https://``, or "
"``www.``. For example, ``http://goo.gl/aia1t`` will get converted but ``goo."
"gl/aia1t`` won't."
msgstr ""

# 191e2b3ee9284373a5f443c47d5931d0
#: ../../ref/templates/builtins.txt:2243
msgid ""
"It also supports domain-only links ending in one of the original top level "
"domains (``.com``, ``.edu``, ``.gov``, ``.int``, ``.mil``, ``.net``, and ``."
"org``). For example, ``djangoproject.com`` gets converted."
msgstr ""

# f282a7b344ec4e5aacdd2a6208c49137
#: ../../ref/templates/builtins.txt:2249
msgid ""
"Until Django 1.4, only the ``.com``, ``.net`` and ``.org`` suffixes were "
"supported for domain-only links."
msgstr ""

# 5d0e31d4936e4818a1f2f512764febc7
#: ../../ref/templates/builtins.txt:2252
msgid ""
"Links can have trailing punctuation (periods, commas, close-parens) and "
"leading punctuation (opening parens), and ``urlize`` will still do the right "
"thing."
msgstr ""

# b945d35240ac4464aef6645102e6b4e6
#: ../../ref/templates/builtins.txt:2255
msgid ""
"Links generated by ``urlize`` have a ``rel=\"nofollow\"`` attribute added to "
"them."
msgstr ""

# 41a4e3efa76f4336bbda94e3afc2f4b0
#: ../../ref/templates/builtins.txt:2262
msgid ""
"If ``value`` is ``\"Check out www.djangoproject.com\"``, the output will be "
"``\"Check out <a href=\"http://www.djangoproject.com\" rel=\"nofollow\">www."
"djangoproject.com</a>\"``."
msgstr ""

# 0841c93766dc4874b7c41deb96e87a5d
#: ../../ref/templates/builtins.txt:2266
msgid ""
"The ``urlize`` filter also takes an optional parameter ``autoescape``. If "
"``autoescape`` is ``True``, the link text and URLs will be escaped using "
"Django's built-in :tfilter:`escape` filter. The default value for "
"``autoescape`` is ``True``."
msgstr ""

# 0b2e20311331477cb59f2b3e27d73a45
#: ../../ref/templates/builtins.txt:2273
msgid ""
"If ``urlize`` is applied to text that already contains HTML markup, things "
"won't work as expected. Apply this filter only to plain text."
msgstr ""

# f049f794bb4443388bf812885eff8f9b
#: ../../ref/templates/builtins.txt:2279
msgid "urlizetrunc"
msgstr ""

# 37215860b6ab4a4e829e6fd7f2f52ced
#: ../../ref/templates/builtins.txt:2281
msgid ""
"Converts URLs into clickable links just like urlize_, but truncates URLs "
"longer than the given character limit."
msgstr ""

# f474d3afa54849debd60b737d9fa4ff5
#: ../../ref/templates/builtins.txt:2284
msgid ""
"**Argument:** Number of characters that link text should be truncated to, "
"including the ellipsis that's added if truncation is necessary."
msgstr ""

# 2df1a841aca54401bfbcbe68b6f95571
#: ../../ref/templates/builtins.txt:2291
msgid ""
"If ``value`` is ``\"Check out www.djangoproject.com\"``, the output would be "
"``'Check out <a href=\"http://www.djangoproject.com\" rel=\"nofollow\">www."
"djangopr...</a>'``."
msgstr ""

# edbbf0d5a8a74db4b67da740e4cae1c0
#: ../../ref/templates/builtins.txt:2295
msgid "As with urlize_, this filter should only be applied to plain text."
msgstr ""

# 384bccb066584d81a7d3ca98813cb2f4
#: ../../ref/templates/builtins.txt:2300
msgid "wordcount"
msgstr ""

# 12d892d726fc4712b1bd37e41ff146b3
#: ../../ref/templates/builtins.txt:2302
msgid "Returns the number of words."
msgstr ""

# 51a5b4c5177740e88496061f9335cb7d
#: ../../ref/templates/builtins.txt:2308
msgid "If ``value`` is ``\"Joel is a slug\"``, the output will be ``4``."
msgstr ""

# 26f4fbc2af2749b8ae9912602e2db685
#: ../../ref/templates/builtins.txt:2313
msgid "wordwrap"
msgstr ""

# 54935f3024c5446ead226e97ef7fabaf
#: ../../ref/templates/builtins.txt:2315
msgid "Wraps words at specified line length."
msgstr ""

# 68bd7608331c4a798a2be504311fee29
#: ../../ref/templates/builtins.txt:2317
msgid "**Argument:** number of characters at which to wrap the text"
msgstr ""

# 486c972efdea4d798b0c643314cae4f5
#: ../../ref/templates/builtins.txt:2323
msgid "If ``value`` is ``Joel is a slug``, the output would be::"
msgstr ""

# b336c7fe1e4f48b1942af696fd66ca25
#: ../../ref/templates/builtins.txt:2332
msgid "yesno"
msgstr ""

# 1ad38864f720440c961d4d1163513ea9
#: ../../ref/templates/builtins.txt:2334
msgid ""
"Maps values for true, false and (optionally) None, to the strings \"yes\", "
"\"no\", \"maybe\", or a custom mapping passed as a comma-separated list, and "
"returns one of those strings according to the value:"
msgstr ""

# 3a1a0e9976c74cb99145a08d88db93f9
# a4e801d8a8d04948bacdbd7bb7a971bb
#: ../../ref/templates/builtins.txt:2345 ../../ref/templates/builtins.txt:2346
msgid "``True``"
msgstr ""

# 89a9dcd2fda14766a0f6b6de382483bf
#: ../../ref/templates/builtins.txt:2345
msgid "``yes``"
msgstr ""

# bc6429ed94084b6f80580204099b0f07
# 88ad69d7ae7e4ea49dc15dc19ffb5106
# cb9e22dca8534e98ad9faa1e385c2f4d
#: ../../ref/templates/builtins.txt:2346 ../../ref/templates/builtins.txt:2347
#: ../../ref/templates/builtins.txt:2348
msgid "``\"yeah,no,maybe\"``"
msgstr ""

# f515743088f74d27a182e4453d4208c4
#: ../../ref/templates/builtins.txt:2346
msgid "``yeah``"
msgstr ""

# f2c7f01544b944c8aad7eb4544979f0b
#: ../../ref/templates/builtins.txt:2347
msgid "``False``"
msgstr ""

# 96a52127a7e34cd990bb14e4cb02bdad
#: ../../ref/templates/builtins.txt:2347
msgid "``no``"
msgstr ""

# e8cdf7832cee4b1f9797d7b42b59104f
# 4be4fbc538cd456da1425f41c9ba8c24
#: ../../ref/templates/builtins.txt:2348 ../../ref/templates/builtins.txt:2349
msgid "``None``"
msgstr ""

# 1bcad2e85bc24a84ae7413917b09255f
#: ../../ref/templates/builtins.txt:2348
msgid "``maybe``"
msgstr ""

# 7c11ba18f19742c0bf52dc47f8c3d93a
#: ../../ref/templates/builtins.txt:2349
msgid "``\"yeah,no\"``"
msgstr ""

# 516efdbec38e42888a6553f41c6a49b2
#: ../../ref/templates/builtins.txt:2349
msgid "``\"no\"`` (converts None to False if no mapping for None is given)"
msgstr ""

# 377d42067f474bd0b60c8b83ba44915d
#: ../../ref/templates/builtins.txt:2354
msgid "Internationalization tags and filters"
msgstr ""

# 179fb42cd95a402b8a9d18beb81c9355
#: ../../ref/templates/builtins.txt:2356
msgid ""
"Django provides template tags and filters to control each aspect of :doc:"
"`internationalization </topics/i18n/index>` in templates. They allow for "
"granular control of translations, formatting, and time zone conversions."
msgstr ""

# 571b530141ea435c93c670ac75aad49f
#: ../../ref/templates/builtins.txt:2361
msgid "i18n"
msgstr ""

# d97fed38b2a7452087155f3ecab5cc06
#: ../../ref/templates/builtins.txt:2363
msgid ""
"This library allows specifying translatable text in templates. To enable it, "
"set :setting:`USE_I18N` to ``True``, then load it with ``{% load i18n %}``."
msgstr ""

# 86f9d721b44a4d4c9a3525fdacceb8b0
#: ../../ref/templates/builtins.txt:2367
msgid "See :ref:`specifying-translation-strings-in-template-code`."
msgstr ""

# 75e87f5ab29a401a80fe56aff5aba92d
#: ../../ref/templates/builtins.txt:2370
msgid "l10n"
msgstr ""

# 0568efbde4b441d08d14f160b20923f2
#: ../../ref/templates/builtins.txt:2372
msgid ""
"This library provides control over the localization of values in templates. "
"You only need to load the library using ``{% load l10n %}``, but you'll "
"often set :setting:`USE_L10N` to ``True`` so that localization is active by "
"default."
msgstr ""

# 84b69416d6fb4830a9d8b61265cfd725
#: ../../ref/templates/builtins.txt:2376
msgid "See :ref:`topic-l10n-templates`."
msgstr ""

# e8526a29de9b46bdb1312d66accb29f2
#: ../../ref/templates/builtins.txt:2379
msgid "tz"
msgstr ""

# ee80c2ce1a8f47cd90c26056db27d1b4
#: ../../ref/templates/builtins.txt:2383
msgid ""
"This library provides control over time zone conversions in templates. Like "
"``l10n``, you only need to load the library using ``{% load tz %}``, but "
"you'll usually also set :setting:`USE_TZ` to ``True`` so that conversion to "
"local time happens by default."
msgstr ""

# c498bc30f8c546079ca0a148b5821d4c
#: ../../ref/templates/builtins.txt:2388
msgid "See :ref:`time-zones-in-templates`."
msgstr ""

# fceae249f6ad43459f31ca60e5cc2935
#: ../../ref/templates/builtins.txt:2391
msgid "Other tags and filters libraries"
msgstr ""

# a3b2f4e5092e417fbb58951f21d1bbe3
#: ../../ref/templates/builtins.txt:2393
msgid ""
"Django comes with a couple of other template-tag libraries that you have to "
"enable explicitly in your :setting:`INSTALLED_APPS` setting and enable in "
"your template with the :ttag:`{% load %}<load>` tag."
msgstr ""

# 16f3eff950f94ea9a4a55694386e2e92
#: ../../ref/templates/builtins.txt:2400
msgid ""
"A set of Django template filters useful for adding a \"human touch\" to "
"data. See :doc:`/ref/contrib/humanize`."
msgstr ""

# 94e9a5b849e94ef5b03c82984d61e132
#: ../../ref/templates/builtins.txt:2406
msgid ""
"A collection of template filters that implement these common markup "
"languages:"
msgstr ""

# a1053df7d782431d9a83f46a1b7b86ec
#: ../../ref/templates/builtins.txt:2408
msgid "Textile"
msgstr ""

# 386b526fe1384b3eb449cb2ab0491c51
#: ../../ref/templates/builtins.txt:2409
msgid "Markdown"
msgstr ""

# f10b84ad1142413b8d32d7d18a05104f
#: ../../ref/templates/builtins.txt:2410
msgid "reST (reStructuredText)"
msgstr ""

# 10ad10f93f32411c94b031f57b2178d8
#: ../../ref/templates/builtins.txt:2417
msgid ""
"A collection of template tags that can be useful while designing a Web site, "
"such as a generator of Lorem Ipsum text. See :doc:`/ref/contrib/webdesign`."
msgstr ""

# d446b6ca44374558b873371dcd18fa24
#: ../../ref/templates/builtins.txt:2430
msgid ""
"To link to static files that are saved in :setting:`STATIC_ROOT` Django "
"ships with a :ttag:`static` template tag. You can use this regardless if "
"you're using :class:`~django.template.RequestContext` or not."
msgstr ""

# b825ec19026c430b9d40dcdcf779b011
#: ../../ref/templates/builtins.txt:2439
msgid ""
"It is also able to consume standard context variables, e.g. assuming a "
"``user_stylesheet`` variable is passed to the template:"
msgstr ""

# a4bfca9ef6f843e99e5c76d999bddd78
#: ../../ref/templates/builtins.txt:2449
msgid ""
"The :mod:`staticfiles<django.contrib.staticfiles>` contrib app also ships "
"with a :ttag:`static template tag<staticfiles-static>` which uses "
"``staticfiles'`` :setting:`STATICFILES_STORAGE` to build the URL of the "
"given path. Use that instead if you have an advanced use case such as :ref:"
"`using a cloud service to serve static files<staticfiles-from-cdn>`::"
msgstr ""

# 78618e3cdf54412982b7bfeb392557e7
#: ../../ref/templates/builtins.txt:2461
msgid "get_static_prefix"
msgstr ""

# 83ebd257fcb24bd983ddb16199ac614e
#: ../../ref/templates/builtins.txt:2465
msgid ""
"If you're not using :class:`~django.template.RequestContext`, or if you need "
"more control over exactly where and how :setting:`STATIC_URL` is injected "
"into the template, you can use the :ttag:`get_static_prefix` template tag "
"instead::"
msgstr ""

# 6e5fb7dd0ced4450b2c2f011954517d8
#: ../../ref/templates/builtins.txt:2473
msgid ""
"There's also a second form you can use to avoid extra processing if you need "
"the value multiple times::"
msgstr ""

# a1c6096e2d73468694cbcd5d157cfca2
#: ../../ref/templates/builtins.txt:2485
msgid "get_media_prefix"
msgstr ""

# 9a61f99a9c1244c29dbc7104b5999e24
#: ../../ref/templates/builtins.txt:2489
msgid ""
"Similar to the :ttag:`get_static_prefix`, ``get_media_prefix`` populates a "
"template variable with the media prefix :setting:`MEDIA_URL`, e.g.::"
msgstr ""

# 8242f784dfc040958a8e90288ad12ce6
#: ../../ref/templates/index.txt:5
msgid ""
"Django's template engine provides a powerful mini-language for defining the "
"user-facing layer of your application, encouraging a clean separation of "
"application and presentation logic. Templates can be maintained by anyone "
"with an understanding of HTML; no knowledge of Python is required."
msgstr ""

# df84e726a9bf449c9f44fcef0276d8eb
#: ../../ref/templates/index.txt:18
msgid ""
"For information on writing your own custom tags and filters, see :doc:`/"
"howto/custom-template-tags`."
msgstr ""

# b6e87c0bd34c48048f1c7f99c7fb429c
#: ../../ref/unicode.txt:3
msgid "Unicode data"
msgstr ""

# c1c5d4da597c4c7e93d5beabd1226681
#: ../../ref/unicode.txt:5
msgid ""
"Django natively supports Unicode data everywhere. Providing your database "
"can somehow store the data, you can safely pass around Unicode strings to "
"templates, models and the database."
msgstr ""

# cf14e7c0ec47461c83f9b13b3e24ab32
#: ../../ref/unicode.txt:9
msgid ""
"This document tells you what you need to know if you're writing applications "
"that use data or templates that are encoded in something other than ASCII."
msgstr ""

# 5bf2a4d9375447e9b58d93cf80c98eab
#: ../../ref/unicode.txt:13
msgid "Creating the database"
msgstr ""

# 9f804c1d9605416285bf6e1550c6c9cc
#: ../../ref/unicode.txt:15
msgid ""
"Make sure your database is configured to be able to store arbitrary string "
"data. Normally, this means giving it an encoding of UTF-8 or UTF-16. If you "
"use a more restrictive encoding -- for example, latin1 (iso8859-1) -- you "
"won't be able to store certain characters in the database, and information "
"will be lost."
msgstr ""

# 3ab04d3092e445558816560745afbb94
#: ../../ref/unicode.txt:20
msgid ""
"MySQL users, refer to the `MySQL manual`_ (section 9.1.3.2 for MySQL 5.1) "
"for details on how to set or alter the database character set encoding."
msgstr ""

# e11b02d695e647cda0983e290158d9c8
#: ../../ref/unicode.txt:23
msgid ""
"PostgreSQL users, refer to the `PostgreSQL manual`_ (section 21.2.2 in "
"PostgreSQL 8) for details on creating databases with the correct encoding."
msgstr ""

# 8306b97a7a7c4e6880a66fc5ed33cc81
#: ../../ref/unicode.txt:26
msgid ""
"SQLite users, there is nothing you need to do. SQLite always uses UTF-8 for "
"internal encoding."
msgstr ""

# e23990a5f53449a2a813ff488008aacd
#: ../../ref/unicode.txt:32
msgid ""
"All of Django's database backends automatically convert Unicode strings into "
"the appropriate encoding for talking to the database. They also "
"automatically convert strings retrieved from the database into Python "
"Unicode strings. You don't even need to tell Django what encoding your "
"database uses: that is handled transparently."
msgstr ""

# eab1d0b9b61b425b9457971ee16a6444
#: ../../ref/unicode.txt:38
msgid "For more, see the section \"The database API\" below."
msgstr ""

# 9a14a888006149d0860a46272ba75878
#: ../../ref/unicode.txt:41
msgid "General string handling"
msgstr ""

# 768b8758dddf4c8da6eab556c190542e
#: ../../ref/unicode.txt:43
msgid ""
"Whenever you use strings with Django -- e.g., in database lookups, template "
"rendering or anywhere else -- you have two choices for encoding those "
"strings. You can use Unicode strings, or you can use normal strings "
"(sometimes called \"bytestrings\") that are encoded using UTF-8."
msgstr ""

# 2db0f0481007475f9dcee86efebb675f
#: ../../ref/unicode.txt:50
msgid ""
"A bytestring does not carry any information with it about its encoding. For "
"that reason, we have to make an assumption, and Django assumes that all "
"bytestrings are in UTF-8."
msgstr ""

# 14d5fdd89f4d475596ae30cb178767b9
#: ../../ref/unicode.txt:54
msgid ""
"If you pass a string to Django that has been encoded in some other format, "
"things will go wrong in interesting ways. Usually, Django will raise a "
"``UnicodeDecodeError`` at some point."
msgstr ""

# eddc640d69e048808d3fcb30ce2039f1
#: ../../ref/unicode.txt:58
msgid ""
"If your code only uses ASCII data, it's safe to use your normal strings, "
"passing them around at will, because ASCII is a subset of UTF-8."
msgstr ""

# 880129c83e594043bcd41e4088c397f3
#: ../../ref/unicode.txt:61
msgid ""
"Don't be fooled into thinking that if your :setting:`DEFAULT_CHARSET` "
"setting is set to something other than ``'utf-8'`` you can use that other "
"encoding in your bytestrings! :setting:`DEFAULT_CHARSET` only applies to the "
"strings generated as the result of template rendering (and email). Django "
"will always assume UTF-8 encoding for internal bytestrings. The reason for "
"this is that the :setting:`DEFAULT_CHARSET` setting is not actually under "
"your control (if you are the application developer). It's under the control "
"of the person installing and using your application -- and if that person "
"chooses a different setting, your code must still continue to work. Ergo, it "
"cannot rely on that setting."
msgstr ""

# 57fd85c3c954428fa6aa97cef36414fe
#: ../../ref/unicode.txt:71
msgid ""
"In most cases when Django is dealing with strings, it will convert them to "
"Unicode strings before doing anything else. So, as a general rule, if you "
"pass in a bytestring, be prepared to receive a Unicode string back in the "
"result."
msgstr ""

# 22c5650703114f1d858b8c1a856ce7d2
#: ../../ref/unicode.txt:76
msgid "Translated strings"
msgstr ""

# e1115c4d2f244b369ffd1b1059d4af5e
#: ../../ref/unicode.txt:78
msgid ""
"Aside from Unicode strings and bytestrings, there's a third type of string-"
"like object you may encounter when using Django. The framework's "
"internationalization features introduce the concept of a \"lazy translation"
"\" -- a string that has been marked as translated but whose actual "
"translation result isn't determined until the object is used in a string. "
"This feature is useful in cases where the translation locale is unknown "
"until the string is used, even though the string might have originally been "
"created when the code was first imported."
msgstr ""

# e7a51713cc334840b22dbe900d0dff76
#: ../../ref/unicode.txt:87
msgid ""
"Normally, you won't have to worry about lazy translations. Just be aware "
"that if you examine an object and it claims to be a ``django.utils."
"functional.__proxy__`` object, it is a lazy translation. Calling ``unicode()"
"`` with the lazy translation as the argument will generate a Unicode string "
"in the current locale."
msgstr ""

# dbd6cdb1cd4b4862985b9bbe0a91b991
#: ../../ref/unicode.txt:93
msgid ""
"For more details about lazy translation objects, refer to the :doc:"
"`internationalization </topics/i18n/index>` documentation."
msgstr ""

# 293ba1fdf4a04e1db896055e00345d42
#: ../../ref/unicode.txt:97
msgid "Useful utility functions"
msgstr ""

# e4308a2d8a4c4a3da7c4fa46f6c588d4
#: ../../ref/unicode.txt:99
msgid ""
"Because some string operations come up again and again, Django ships with a "
"few useful functions that should make working with Unicode and bytestring "
"objects a bit easier."
msgstr ""

# d923d7d1fff7490aafeae348531aaf60
#: ../../ref/unicode.txt:104
msgid "Conversion functions"
msgstr ""

# d1eb1b80adb64707946a6d28faf1acce
#: ../../ref/unicode.txt:106
msgid ""
"The ``django.utils.encoding`` module contains a few functions that are handy "
"for converting back and forth between Unicode and bytestrings."
msgstr ""

# 749f658b0c4e497bb3acd1c8484ccef8
#: ../../ref/unicode.txt:109
msgid ""
"``smart_unicode(s, encoding='utf-8', strings_only=False, errors='strict')`` "
"converts its input to a Unicode string. The ``encoding`` parameter specifies "
"the input encoding. (For example, Django uses this internally when "
"processing form input data, which might not be UTF-8 encoded.) The "
"``strings_only`` parameter, if set to True, will result in Python numbers, "
"booleans and ``None`` not being converted to a string (they keep their "
"original types). The ``errors`` parameter takes any of the values that are "
"accepted by Python's ``unicode()`` function for its error handling."
msgstr ""

# 6c5fef2ea48b47ce935bc788be946a2b
#: ../../ref/unicode.txt:119
msgid ""
"If you pass ``smart_unicode()`` an object that has a ``__unicode__`` method, "
"it will use that method to do the conversion."
msgstr ""

# dc0af366f0ad4c669ecfb6e3dd8d3249
#: ../../ref/unicode.txt:122
msgid ""
"``force_unicode(s, encoding='utf-8', strings_only=False, errors='strict')`` "
"is identical to ``smart_unicode()`` in almost all cases. The difference is "
"when the first argument is a :ref:`lazy translation <lazy-translations>` "
"instance. While ``smart_unicode()`` preserves lazy translations, "
"``force_unicode()`` forces those objects to a Unicode string (causing the "
"translation to occur). Normally, you'll want to use ``smart_unicode()``. "
"However, ``force_unicode()`` is useful in template tags and filters that "
"absolutely *must* have a string to work with, not just something that can be "
"converted to a string."
msgstr ""

# cdfa7e73f4fb4e84988da271a2331196
#: ../../ref/unicode.txt:132
msgid ""
"``smart_str(s, encoding='utf-8', strings_only=False, errors='strict')`` is "
"essentially the opposite of ``smart_unicode()``. It forces the first "
"argument to a bytestring. The ``strings_only`` parameter has the same "
"behavior as for ``smart_unicode()`` and ``force_unicode()``. This is "
"slightly different semantics from Python's builtin ``str()`` function, but "
"the difference is needed in a few places within Django's internals."
msgstr ""

# c579094caade4f9ca4b73fc29053f003
#: ../../ref/unicode.txt:139
msgid ""
"Normally, you'll only need to use ``smart_unicode()``. Call it as early as "
"possible on any input data that might be either Unicode or a bytestring, and "
"from then on, you can treat the result as always being Unicode."
msgstr ""

# efef2c02aa3d46c09a645ca91fd4c955
#: ../../ref/unicode.txt:146
msgid "URI and IRI handling"
msgstr ""

# 2904b37b22bb4413abf2b8995c166c36
#: ../../ref/unicode.txt:148
msgid ""
"Web frameworks have to deal with URLs (which are a type of IRI_). One "
"requirement of URLs is that they are encoded using only ASCII characters. "
"However, in an international environment, you might need to construct a URL "
"from an IRI_ -- very loosely speaking, a URI_ that can contain Unicode "
"characters. Quoting and converting an IRI to URI can be a little tricky, so "
"Django provides some assistance."
msgstr ""

# 05ecaff49e804275ab41ab4d3dc6a554
#: ../../ref/unicode.txt:155
msgid ""
"The function ``django.utils.encoding.iri_to_uri()`` implements the "
"conversion from IRI to URI as required by the specification (:rfc:`3987`)."
msgstr ""

# 2b8284a01e954b218fc7a9756fc75afe
#: ../../ref/unicode.txt:158
msgid ""
"The functions ``django.utils.http.urlquote()`` and ``django.utils.http."
"urlquote_plus()`` are versions of Python's standard ``urllib.quote()`` and "
"``urllib.quote_plus()`` that work with non-ASCII characters. (The data is "
"converted to UTF-8 prior to encoding.)"
msgstr ""

# 21e10f6d0e2d4c13afe38ae15fc0653b
#: ../../ref/unicode.txt:163
msgid ""
"These two groups of functions have slightly different purposes, and it's "
"important to keep them straight. Normally, you would use ``urlquote()`` on "
"the individual portions of the IRI or URI path so that any reserved "
"characters such as '&' or '%' are correctly encoded. Then, you apply "
"``iri_to_uri()`` to the full IRI and it converts any non-ASCII characters to "
"the correct encoded values."
msgstr ""

# 13fbf7aa995f46ecaf8dcc0df45e6bc4
#: ../../ref/unicode.txt:171
msgid ""
"Technically, it isn't correct to say that ``iri_to_uri()`` implements the "
"full algorithm in the IRI specification. It doesn't (yet) perform the "
"international domain name encoding portion of the algorithm."
msgstr ""

# 8df5909df3334d8caee8fb4a8bc254ad
#: ../../ref/unicode.txt:175
msgid ""
"The ``iri_to_uri()`` function will not change ASCII characters that are "
"otherwise permitted in a URL. So, for example, the character '%' is not "
"further encoded when passed to ``iri_to_uri()``. This means you can pass a "
"full URL to this function and it will not mess up the query string or "
"anything like that."
msgstr ""

# a40a398b856c4cd49d6af3f0665c52af
#: ../../ref/unicode.txt:181
msgid "An example might clarify things here::"
msgstr ""

# 9dd996895845431eaa34148aa7d231c6
#: ../../ref/unicode.txt:188
msgid ""
"If you look carefully, you can see that the portion that was generated by "
"``urlquote()`` in the second example was not double-quoted when passed to "
"``iri_to_uri()``. This is a very important and useful feature. It means that "
"you can construct your IRI without worrying about whether it contains non-"
"ASCII characters and then, right at the end, call ``iri_to_uri()`` on the "
"result."
msgstr ""

# 15e4b52d8eec4c70bba7394cf20522da
#: ../../ref/unicode.txt:195
msgid ""
"The ``iri_to_uri()`` function is also idempotent, which means the following "
"is always true::"
msgstr ""

# 64a0a41ddcc5486e8e6ebb2489f4a9e8
#: ../../ref/unicode.txt:200
msgid ""
"So you can safely call it multiple times on the same IRI without risking "
"double-quoting problems."
msgstr ""

# 38d03b539b8d4f1fba1594d175a0cd5a
#: ../../ref/unicode.txt:209
msgid ""
"Because all strings are returned from the database as Unicode strings, model "
"fields that are character based (CharField, TextField, URLField, etc) will "
"contain Unicode values when Django retrieves data from the database. This is "
"*always* the case, even if the data could fit into an ASCII bytestring."
msgstr ""

# 8e42973ff5a447f580db4b38612834c4
#: ../../ref/unicode.txt:214
msgid ""
"You can pass in bytestrings when creating a model or populating a field, and "
"Django will convert it to Unicode when it needs to."
msgstr ""

# a94bf317d6b147a5a7436800b86de181
#: ../../ref/unicode.txt:218
msgid "Choosing between ``__str__()`` and ``__unicode__()``"
msgstr ""

# a3cf55f456624c8898b04a3511aec997
#: ../../ref/unicode.txt:220
msgid ""
"One consequence of using Unicode by default is that you have to take some "
"care when printing data from the model."
msgstr ""

# aa2c7c64688845178983eb0d518d245f
#: ../../ref/unicode.txt:223
msgid ""
"In particular, rather than giving your model a ``__str__()`` method, we "
"recommended you implement a ``__unicode__()`` method. In the ``__unicode__()"
"`` method, you can quite safely return the values of all your fields without "
"having to worry about whether they fit into a bytestring or not. (The way "
"Python works, the result of ``__str__()`` is *always* a bytestring, even if "
"you accidentally try to return a Unicode object)."
msgstr ""

# 11500622b51a4d288cab48132dc42ef7
#: ../../ref/unicode.txt:230
msgid ""
"You can still create a ``__str__()`` method on your models if you want, of "
"course, but you shouldn't need to do this unless you have a good reason. "
"Django's ``Model`` base class automatically provides a ``__str__()`` "
"implementation that calls ``__unicode__()`` and encodes the result into "
"UTF-8. This means you'll normally only need to implement a ``__unicode__()`` "
"method and let Django handle the coercion to a bytestring when required."
msgstr ""

# 314ede25233c4b3ca71a63f5337a7dce
#: ../../ref/unicode.txt:238
msgid "Taking care in ``get_absolute_url()``"
msgstr ""

# b2404e504b884fd7b49bc8408f831226
#: ../../ref/unicode.txt:240
msgid ""
"URLs can only contain ASCII characters. If you're constructing a URL from "
"pieces of data that might be non-ASCII, be careful to encode the results in "
"a way that is suitable for a URL. The ``django.db.models.permalink()`` "
"decorator handles this for you automatically."
msgstr ""

# 2cf56593731f4e1c8818836a03da66bf
#: ../../ref/unicode.txt:245
msgid ""
"If you're constructing a URL manually (i.e., *not* using the ``permalink()`` "
"decorator), you'll need to take care of the encoding yourself. In this case, "
"use the ``iri_to_uri()`` and ``urlquote()`` functions that were documented "
"above_. For example::"
msgstr ""

# 91a92fa2e5b8447c8bff2aac7f7fbee8
#: ../../ref/unicode.txt:257
msgid ""
"This function returns a correctly encoded URL even if ``self.location`` is "
"something like \"Jack visited Paris & Orléans\". (In fact, the ``iri_to_uri()"
"`` call isn't strictly necessary in the above example, because all the non-"
"ASCII characters would have been removed in quoting in the first line.)"
msgstr ""

# f48d34e0988b4a3089c144fe402599fd
#: ../../ref/unicode.txt:265
msgid "The database API"
msgstr ""

# d60fb524f55f48938c54c1cc1d5bae7c
#: ../../ref/unicode.txt:267
msgid ""
"You can pass either Unicode strings or UTF-8 bytestrings as arguments to "
"``filter()`` methods and the like in the database API. The following two "
"querysets are identical::"
msgstr ""

# a7ae8904d57c4ab898da440fdbc7494f
#: ../../ref/unicode.txt:277
msgid ""
"You can use either Unicode or bytestrings when creating templates manually::"
msgstr ""

# e6755a2a19074d8db18b80bb7b2eb49f
#: ../../ref/unicode.txt:283
msgid ""
"But the common case is to read templates from the filesystem, and this "
"creates a slight complication: not all filesystems store their data encoded "
"as UTF-8. If your template files are not stored with a UTF-8 encoding, set "
"the :setting:`FILE_CHARSET` setting to the encoding of the files on disk. "
"When Django reads in a template file, it will convert the data from this "
"encoding to Unicode. (:setting:`FILE_CHARSET` is set to ``'utf-8'`` by "
"default.)"
msgstr ""

# 73f49d1229a94b11a86c37681e0cce22
#: ../../ref/unicode.txt:290
msgid ""
"The :setting:`DEFAULT_CHARSET` setting controls the encoding of rendered "
"templates. This is set to UTF-8 by default."
msgstr ""

# 54e980faff994425914091e3835bbad3
#: ../../ref/unicode.txt:294
msgid "Template tags and filters"
msgstr ""

# f4bb70f0ea514260ae944e66a9f11a57
#: ../../ref/unicode.txt:296
msgid ""
"A couple of tips to remember when writing your own template tags and filters:"
msgstr ""

# 9140c0c23354495c834be8cd41fe125b
#: ../../ref/unicode.txt:298
msgid ""
"Always return Unicode strings from a template tag's ``render()`` method and "
"from template filters."
msgstr ""

# e531f778545c408d91e584aece163f72
#: ../../ref/unicode.txt:301
msgid ""
"Use ``force_unicode()`` in preference to ``smart_unicode()`` in these "
"places. Tag rendering and filter calls occur as the template is being "
"rendered, so there is no advantage to postponing the conversion of lazy "
"translation objects into strings. It's easier to work solely with Unicode "
"strings at that point."
msgstr ""

# 6f57cf514b374bca8057c78b9c6daee3
#: ../../ref/unicode.txt:308
msgid "Email"
msgstr ""

# d6d4152dd58747c5bce8edf155bb0dad
#: ../../ref/unicode.txt:310
msgid ""
"Django's email framework (in ``django.core.mail``) supports Unicode "
"transparently. You can use Unicode data in the message bodies and any "
"headers. However, you're still obligated to respect the requirements of the "
"email specifications, so, for example, email addresses should use only ASCII "
"characters."
msgstr ""

# 0cc36ead7f284d4b956cd88052551811
#: ../../ref/unicode.txt:316
msgid ""
"The following code example demonstrates that everything except email "
"addresses can be non-ASCII::"
msgstr ""

# 68196e537e7244eca9147eadcef33bb0
#: ../../ref/unicode.txt:330
msgid "Form submission"
msgstr ""

# f9507057b2074944988259d93587f99f
#: ../../ref/unicode.txt:332
msgid ""
"HTML form submission is a tricky area. There's no guarantee that the "
"submission will include encoding information, which means the framework "
"might have to guess at the encoding of submitted data."
msgstr ""

# d48f4cdcfd7d4136b35bba24e8b6ef6a
#: ../../ref/unicode.txt:336
msgid ""
"Django adopts a \"lazy\" approach to decoding form data. The data in an "
"``HttpRequest`` object is only decoded when you access it. In fact, most of "
"the data is not decoded at all. Only the ``HttpRequest.GET`` and "
"``HttpRequest.POST`` data structures have any decoding applied to them. "
"Those two fields will return their members as Unicode data. All other "
"attributes and methods of ``HttpRequest`` return data exactly as it was "
"submitted by the client."
msgstr ""

# 423439d2c71a44ae8e6e0e2392fe88b6
#: ../../ref/unicode.txt:344
msgid ""
"By default, the :setting:`DEFAULT_CHARSET` setting is used as the assumed "
"encoding for form data. If you need to change this for a particular form, "
"you can set the ``encoding`` attribute on an ``HttpRequest`` instance. For "
"example::"
msgstr ""

# d05bd0c9ab8d4bec89c3f38e4e076ab0
#: ../../ref/unicode.txt:353
msgid ""
"You can even change the encoding after having accessed ``request.GET`` or "
"``request.POST``, and all subsequent accesses will use the new encoding."
msgstr ""

# 4797400bf7354418ae668dcd849faa29
#: ../../ref/unicode.txt:356
msgid ""
"Most developers won't need to worry about changing form encoding, but this "
"is a useful feature for applications that talk to legacy systems whose "
"encoding you cannot control."
msgstr ""

# 2e4d7f0216344e0f8bcfa5f0008f98a4
#: ../../ref/unicode.txt:360
msgid ""
"Django does not decode the data of file uploads, because that data is "
"normally treated as collections of bytes, rather than strings. Any automatic "
"decoding there would alter the meaning of the stream of bytes."
msgstr ""

# 1c2ff885cf584bb195dd8eed3d96168d
#: ../../ref/utils.txt:3
msgid "Django Utils"
msgstr ""

# 9a0e9a6d76704f938e7b01896cddd23d
#: ../../ref/utils.txt:8
msgid ""
"This document covers all stable modules in ``django.utils``. Most of the "
"modules in ``django.utils`` are designed for internal use and only the "
"following parts can be considered stable and thus backwards compatible as "
"per the :ref:`internal release deprecation policy <internal-release-"
"deprecation-policy>`."
msgstr ""

# bddb2cd6c69443588e5e6981ecb7e498
#: ../../ref/utils.txt:14
msgid "``django.utils.cache``"
msgstr ""

# 1d5decb8637746d3b0bc31cdb751dc10
#: ../../ref/utils.txt:19
msgid ""
"This module contains helper functions for controlling caching. It does so by "
"managing the ``Vary`` header of responses. It includes functions to patch "
"the header of response objects directly and decorators that change functions "
"to do that header-patching themselves."
msgstr ""

# 95863ad30a7e4a828e68ac38ac9c7823
#: ../../ref/utils.txt:24
msgid ""
"For information on the ``Vary`` header, see :rfc:`2616#section-14.44` "
"section 14.44."
msgstr ""

# ee3a30c9f6c349e59f5e5a8e351c9cad
#: ../../ref/utils.txt:27
msgid ""
"Essentially, the ``Vary`` HTTP header defines which headers a cache should "
"take into account when building its cache key. Requests with the same path "
"but different header content for headers named in ``Vary`` need to get "
"different cache keys to prevent delivery of wrong content."
msgstr ""

# 55ace8a3ad0a4cb6a068a2f47a279985
#: ../../ref/utils.txt:32
msgid ""
"For example, :doc:`internationalization </topics/i18n/index>` middleware "
"would need to distinguish caches by the ``Accept-language`` header."
msgstr ""

# 6055fcdbda014c8eb4f07670edc151a1
#: ../../ref/utils.txt:37
msgid ""
"This function patches the ``Cache-Control`` header by adding all keyword "
"arguments to it. The transformation is as follows:"
msgstr ""

# 7ac8acaa3c164a4dad86eb09968ca483
#: ../../ref/utils.txt:40
msgid ""
"All keyword parameter names are turned to lowercase, and underscores are "
"converted to hyphens."
msgstr ""

# d25915c28c2a420bb5962b89fe2e8385
#: ../../ref/utils.txt:42
msgid ""
"If the value of a parameter is ``True`` (exactly ``True``, not just a true "
"value), only the parameter name is added to the header."
msgstr ""

# 0086793b6a6a43a0803a0fdd43886057
#: ../../ref/utils.txt:44
msgid ""
"All other parameters are added with their value, after applying ``str()`` to "
"it."
msgstr ""

# a50930539dda4176b734d040873c02ec
#: ../../ref/utils.txt:49
msgid ""
"Returns the max-age from the response Cache-Control header as an integer (or "
"``None`` if it wasn't found or wasn't an integer)."
msgstr ""

# 5ad9247c2288433596ac5d841d3b376c
#: ../../ref/utils.txt:54
msgid "Adds some useful headers to the given ``HttpResponse`` object:"
msgstr ""

# ee1e1995ded049dc86e0c937ddb3fb11
#: ../../ref/utils.txt:56
msgid "``ETag``"
msgstr ""

# 9159b21a040a4b68b3f489416f493e55
#: ../../ref/utils.txt:57
msgid "``Last-Modified``"
msgstr ""

# 20061f6be3a546dc974860df148ff28c
#: ../../ref/utils.txt:58
msgid "``Expires``"
msgstr ""

# bbfc2fa2a5a742abbbfbced42f39b1b9
#: ../../ref/utils.txt:59
msgid "``Cache-Control``"
msgstr ""

# e1bbaa5e353f41c9a89dcef053508ca4
#: ../../ref/utils.txt:61
msgid "Each header is only added if it isn't already set."
msgstr ""

# 640b2be18fe1402c96c1702b720d563f
#: ../../ref/utils.txt:63
msgid ""
"``cache_timeout`` is in seconds. The :setting:`CACHE_MIDDLEWARE_SECONDS` "
"setting is used by default."
msgstr ""

# 1cd11050c6fb495ca91688b412ebdc3e
#: ../../ref/utils.txt:68
msgid ""
"Adds headers to a response to indicate that a page should never be cached."
msgstr ""

# 2b39b325f59f423da87501fb9821c66d
#: ../../ref/utils.txt:72
msgid ""
"Adds (or updates) the ``Vary`` header in the given ``HttpResponse`` object. "
"``newheaders`` is a list of header names that should be in ``Vary``. "
"Existing headers in ``Vary`` aren't removed."
msgstr ""

# b4c321ec3ab34bec92ee30f0b7229e3a
#: ../../ref/utils.txt:78
msgid ""
"Returns a cache key based on the request path. It can be used in the request "
"phase because it pulls the list of headers to take into account from the "
"global path registry and uses those to build a cache key to check against."
msgstr ""

# 547c1154aee44820a2d09d66068e117d
#: ../../ref/utils.txt:83
msgid ""
"If there is no headerlist stored, the page needs to be rebuilt, so this "
"function returns ``None``."
msgstr ""

# 266169d1cdde4296a0bbc7fd17edd022
#: ../../ref/utils.txt:88
msgid ""
"Learns what headers to take into account for some request path from the "
"response object. It stores those headers in a global path registry so that "
"later access to that path will know what headers to take into account "
"without building the response object itself. The headers are named in the "
"``Vary`` header of the response, but we want to prevent response generation."
msgstr ""

# f28896850fef4bd7abb46a3f13176805
#: ../../ref/utils.txt:95
msgid ""
"The list of headers to use for cache key generation is stored in the same "
"cache as the pages themselves. If the cache ages some data out of the cache, "
"this just means that we have to build the response once to get at the Vary "
"header and so at the list of headers to use for the cache key."
msgstr ""

# 296df3a9a76946f3bac0c4bdfeae67d9
#: ../../ref/utils.txt:101
msgid "``django.utils.datastructures``"
msgstr ""

# 8f6b0c66f1e241c1bc0fc053e9f4a744
#: ../../ref/utils.txt:108
msgid ""
"The :class:`django.utils.datastructures.SortedDict` class is a dictionary "
"that keeps its keys in the order in which they're inserted. ``SortedDict`` "
"adds two additional methods to the standard Python ``dict`` class:"
msgstr ""

# 1e653b7f4679414b81f66798be8a5e86
#: ../../ref/utils.txt:115
msgid "Inserts the key, value pair before the item with the given index."
msgstr ""

# 5da563f5412a4f03adddde0f5a6ace07
#: ../../ref/utils.txt:119
msgid "Returns the value of the item at the given zero-based index."
msgstr ""

# fb4b579b599a41c6916bdd89fe42573a
#: ../../ref/utils.txt:122
msgid "Creating a new SortedDict"
msgstr ""

# ff35ea804414455d8fcbdd4ec63080f5
#: ../../ref/utils.txt:124
msgid ""
"Creating a new ``SortedDict`` must be done in a way where ordering is "
"guaranteed. For example::"
msgstr ""

# b385f5da8f09463d9436e14c1ab54222
#: ../../ref/utils.txt:129
msgid ""
"will not work. Passing in a basic Python ``dict`` could produce unreliable "
"results. Instead do::"
msgstr ""

# 6652ef7ccc8b4bd887c376f2f74f0dbe
#: ../../ref/utils.txt:135
msgid "``django.utils.dateparse``"
msgstr ""

# 9992427eef6247cf8756aaec0a714024
#: ../../ref/utils.txt:142
msgid "The functions defined in this module share the following properties:"
msgstr ""

# 246105434d7546af8531b842f74250fe
#: ../../ref/utils.txt:144
msgid ""
"They raise :exc:`ValueError` if their input is well formatted but isn't a "
"valid date or time."
msgstr ""

# 47620ec1ce7b47708e8ea366c9bd58e2
#: ../../ref/utils.txt:146
msgid "They return ``None`` if it isn't well formatted at all."
msgstr ""

# 58cdfd23ddc14529a0719103f153e3df
#: ../../ref/utils.txt:147
msgid ""
"They accept up to picosecond resolution in input, but they truncate it to "
"microseconds, since that's what Python supports."
msgstr ""

# b84dbcc88c3f423fb98a62017192a61d
#: ../../ref/utils.txt:152
msgid "Parses a string and returns a :class:`datetime.date`."
msgstr ""

# 8d93f295fc674b2fae7308ef758b68d4
#: ../../ref/utils.txt:156
msgid "Parses a string and returns a :class:`datetime.time`."
msgstr ""

# 0a98e9af6bea4b939ecaf1a3a8bc5121
#: ../../ref/utils.txt:158
msgid ""
"UTC offsets aren't supported; if ``value`` describes one, the result is "
"``None``."
msgstr ""

# ee5605487a3145f5bfc098d422fde35e
#: ../../ref/utils.txt:163
msgid "Parses a string and returns a :class:`datetime.datetime`."
msgstr ""

# 4694e9b90bf34828a0847c14918d9b19
#: ../../ref/utils.txt:165
msgid ""
"UTC offsets are supported; if ``value`` describes one, the result's "
"``tzinfo`` attribute is a :class:`~django.utils.tzinfo.FixedOffset` instance."
msgstr ""

# 8d34721b91464b8c8abbbb7e9f88927a
#: ../../ref/utils.txt:170
msgid "``django.utils.encoding``"
msgstr ""

# 2277ffb2293e4ceebdee6c06fff2c22f
#: ../../ref/utils.txt:177
msgid ""
"A class whose ``__str__`` returns its ``__unicode__`` as a UTF-8 bytestring. "
"Useful as a mix-in."
msgstr ""

# e5e57653001e4cf7992b7d5203e6d438
#: ../../ref/utils.txt:182
msgid ""
"Returns a ``unicode`` object representing ``s``. Treats bytestrings using "
"the 'encoding' codec."
msgstr ""

# 96168a39bfea471a9e50487567d7e5bb
# 21e6e503801847558c7dbb81a9e9cccd
# ccf8b3be0ea844069968c7ddf981444a
#: ../../ref/utils.txt:185 ../../ref/utils.txt:200 ../../ref/utils.txt:208
msgid ""
"If ``strings_only`` is ``True``, don't convert (some) non-string-like "
"objects."
msgstr ""

# 99d8f9598a9448749ed58fe9b15ef8c2
#: ../../ref/utils.txt:190
msgid "Determine if the object instance is of a protected type."
msgstr ""

# 6138e1f0752248349f4a62e9dd3435fc
#: ../../ref/utils.txt:192
msgid ""
"Objects of protected types are preserved as-is when passed to ``force_unicode"
"(strings_only=True)``."
msgstr ""

# 523dbcd29455462a9137fc2c6db83671
#: ../../ref/utils.txt:197
msgid ""
"Similar to ``smart_unicode``, except that lazy instances are resolved to "
"strings, rather than kept as lazy objects."
msgstr ""

# 562e0b11987a4c2fa812b1b5ea8fe6f8
#: ../../ref/utils.txt:205
msgid ""
"Returns a bytestring version of ``s``, encoded as specified in ``encoding``."
msgstr ""

# a3475e68988c417cb60d262e5dbcc4f6
#: ../../ref/utils.txt:213
msgid ""
"Convert an Internationalized Resource Identifier (IRI) portion to a URI "
"portion that is suitable for inclusion in a URL."
msgstr ""

# f6b88d10d860406fa532e17c9df59f2f
#: ../../ref/utils.txt:216
msgid ""
"This is the algorithm from section 3.1 of :rfc:`3987#section-3.1`. However, "
"since we are assuming input is either UTF-8 or unicode already, we can "
"simplify things a little from the full method."
msgstr ""

# 8e7402a798c9499db4d75e747f9fb037
#: ../../ref/utils.txt:220
msgid "Returns an ASCII string containing the encoded result."
msgstr ""

# a3767d6ad1534f5ab5f733b31da4695f
#: ../../ref/utils.txt:223
msgid "``django.utils.feedgenerator``"
msgstr ""

# 5c2680b60c6348748caf22ca21d83b14
#: ../../ref/utils.txt:246
msgid ""
"For simplifying the selection of a generator use ``feedgenerator."
"DefaultFeed`` which is currently ``Rss201rev2Feed``"
msgstr ""

# 679710260140416fbfc46d86ac85f369
#: ../../ref/utils.txt:249
msgid ""
"For definitions of the different versions of RSS, see: http://diveintomark."
"org/archives/2004/02/04/incompatible-rss"
msgstr ""

# 037bb7352cf04873b6caf37727642626
#: ../../ref/utils.txt:254
msgid "Creates a TagURI."
msgstr ""

# 624a4b7d578e4c3f9afa1d0b1d55b662
#: ../../ref/utils.txt:256
msgid "See http://diveintomark.org/archives/2004/05/28/howto-atom-id"
msgstr ""

# 52258532b0904060b3aa14ee991fe990
#: ../../ref/utils.txt:259
msgid "SyndicationFeed"
msgstr ""

# d9dd96d636c94b0fa086e49eee1b8fb2
#: ../../ref/utils.txt:263
msgid ""
"Base class for all syndication feeds. Subclasses should provide write()."
msgstr ""

# ffe882db58cb44dcbefff2efa30132e7
#: ../../ref/utils.txt:267
msgid ""
"Initialize the feed with the given dictionary of metadata, which applies to "
"the entire feed."
msgstr ""

# fdbf384df4a84dc387b76a2d401faaea
#: ../../ref/utils.txt:270
msgid ""
"Any extra keyword arguments you pass to ``__init__`` will be stored in "
"``self.feed``."
msgstr ""

# b1f5a82d46eb4132bb999a9007e16e5d
#: ../../ref/utils.txt:278
msgid ""
"Adds an item to the feed. All args are expected to be Python ``unicode`` "
"objects except ``pubdate``, which is a ``datetime.datetime`` object, and "
"``enclosure``, which is an instance of the ``Enclosure`` class."
msgstr ""

# ba41883439654a228a583ccb8c386235
#: ../../ref/utils.txt:286
msgid ""
"Return extra attributes to place on the root (i.e. feed/channel) element. "
"Called from ``write()``."
msgstr ""

# 9e80580a1f434d07bc60405ed2acab74
#: ../../ref/utils.txt:291
msgid ""
"Add elements in the root (i.e. feed/channel) element. Called from ``write()"
"``."
msgstr ""

# 6a81a1235afa4599ab3256778b82a970
#: ../../ref/utils.txt:296
msgid ""
"Return extra attributes to place on each item (i.e. item/entry) element."
msgstr ""

# 54ff5437fc33410c9550622508c473bd
#: ../../ref/utils.txt:301
msgid "Add elements on each item (i.e. item/entry) element."
msgstr ""

# 2b0b2dbf4d0f4156b96d7136cbb68a3e
#: ../../ref/utils.txt:305
msgid ""
"Outputs the feed in the given encoding to ``outfile``, which is a file-like "
"object. Subclasses should override this."
msgstr ""

# 33d53af983714b5dad9081ef0ef685fc
#: ../../ref/utils.txt:310
msgid "Returns the feed in the given encoding as a string."
msgstr ""

# b4d485efdef8413a9da446994f065300
#: ../../ref/utils.txt:314
msgid ""
"Returns the latest item's ``pubdate``. If none of them have a ``pubdate``, "
"this returns the current date/time."
msgstr ""

# 0e5bc8dfeedd49f391aa22dd1fba8685
#: ../../ref/utils.txt:318
msgid "Enclosure"
msgstr ""

# 234048330e5247d2b24df83b896b9eac
#: ../../ref/utils.txt:322
msgid "Represents an RSS enclosure"
msgstr ""

# 0fd95fc9aed44999bcd1339dc5d89c25
#: ../../ref/utils.txt:325
msgid "RssFeed"
msgstr ""

# 7cafd8f45bb344e794031dc3d830e722
#: ../../ref/utils.txt:330
msgid "Rss201rev2Feed"
msgstr ""

# 051cbcd6b8164d0e811f0caa42bb2e44
#: ../../ref/utils.txt:334
msgid "Spec: http://blogs.law.harvard.edu/tech/rss"
msgstr ""

# 3850a691206a4c5ea4be02d4a589a016
#: ../../ref/utils.txt:337
msgid "RssUserland091Feed"
msgstr ""

# 26f4142ecc2f4209b476466e45c35349
#: ../../ref/utils.txt:341
msgid "Spec: http://backend.userland.com/rss091"
msgstr ""

# c3b6b30b48b44d0a908597053cc24185
#: ../../ref/utils.txt:344
msgid "Atom1Feed"
msgstr ""

# dc2fc7a5e9ee401d91ea49942106b83d
#: ../../ref/utils.txt:348
msgid ""
"Spec: http://www.atomenabled.org/developers/syndication/atom-format-spec.php"
msgstr ""

# 314573f887bb422ea261707b8f1d83b3
#: ../../ref/utils.txt:351
msgid "``django.utils.functional``"
msgstr ""

# a439404b7cb54cab8d2c53907b0cef97
#: ../../ref/utils.txt:358
msgid ""
"Django offers many utility functions (particularly in ``django.utils``) that "
"take a string as their first argument and do something to that string. These "
"functions are used by template filters as well as directly in other code."
msgstr ""

# 757eca35bd3e4c468a3d0dbebf6e2642
#: ../../ref/utils.txt:362
msgid ""
"If you write your own similar functions and deal with translations, you'll "
"face the problem of what to do when the first argument is a lazy translation "
"object. You don't want to convert it to a string immediately, because you "
"might be using this function outside of a view (and hence the current "
"thread's locale setting will not be correct)."
msgstr ""

# 7800ae558463439786b21e747a52301d
#: ../../ref/utils.txt:368
msgid ""
"For cases like this, use the ``django.utils.functional.allow_lazy()`` "
"decorator. It modifies the function so that *if* it's called with a lazy "
"translation as the first argument, the function evaluation is delayed until "
"it needs to be converted to a string."
msgstr ""

# e961f08fec6e4c7b94c814710d197511
#: ../../ref/utils.txt:382
msgid ""
"The ``allow_lazy()`` decorator takes, in addition to the function to "
"decorate, a number of extra arguments (``*args``) specifying the type(s) "
"that the original function can return. Usually, it's enough to include "
"``unicode`` here and ensure that your function returns only Unicode strings."
msgstr ""

# 880920bfd0444fe3a96e5dd33a06300b
#: ../../ref/utils.txt:387
msgid ""
"Using this decorator means you can write your function and assume that the "
"input is a proper string, then add support for lazy translation objects at "
"the end."
msgstr ""

# 044a1274d6144b64aaf0e9019e7fff45
#: ../../ref/utils.txt:393
msgid "``django.utils.http``"
msgstr ""

# c378240041e942b8adb7a986af2ec9d2
#: ../../ref/utils.txt:400
msgid ""
"A version of Python's ``urllib.quote()`` function that can operate on "
"unicode strings. The url is first UTF-8 encoded before quoting. The returned "
"string can safely be used as part of an argument to a subsequent ``iri_to_uri"
"()`` call without double-quoting occurring. Employs lazy execution."
msgstr ""

# d5d49b17a40c431f8f91c1c089de5cc8
#: ../../ref/utils.txt:408
msgid ""
"A version of Python's urllib.quote_plus() function that can operate on "
"unicode strings. The url is first UTF-8 encoded before quoting. The returned "
"string can safely be used as part of an argument to a subsequent ``iri_to_uri"
"()`` call without double-quoting occurring. Employs lazy execution."
msgstr ""

# 6a7a9574d68f4f419fe9122ef3634b6d
#: ../../ref/utils.txt:416
msgid ""
"A version of Python's urllib.urlencode() function that can operate on "
"unicode strings. The parameters are first case to UTF-8 encoded strings and "
"then encoded as per normal."
msgstr ""

# 76f8d9fb00d94365bbc4524288ef2334
#: ../../ref/utils.txt:422
msgid ""
"Formats the time to ensure compatibility with Netscape's cookie standard."
msgstr ""

# fc4fbf2a578f469087a54a3fffb8a3df
# d4065cf9d6dd45bcb5daf63b1cb00e67
#: ../../ref/utils.txt:424 ../../ref/utils.txt:435
msgid ""
"Accepts a floating point number expressed in seconds since the epoch in UTC--"
"such as that outputted by ``time.time()``. If set to ``None``, defaults to "
"the current time."
msgstr ""

# adea12e2423e41389b7265044271151a
#: ../../ref/utils.txt:428
msgid "Outputs a string in the format ``Wdy, DD-Mon-YYYY HH:MM:SS GMT``."
msgstr ""

# 919eed2d65b94e7aa2f9067b41d377ae
#: ../../ref/utils.txt:432
msgid ""
"Formats the time to match the :rfc:`1123` date format as specified by HTTP :"
"rfc:`2616#section-3.3.1` section 3.3.1."
msgstr ""

# eb2b4c2728e6444d9dfd71597aaff9b4
#: ../../ref/utils.txt:439
msgid "Outputs a string in the format ``Wdy, DD Mon YYYY HH:MM:SS GMT``."
msgstr ""

# d059a31a30a04c0da87e6c04cdcc2af0
#: ../../ref/utils.txt:443
msgid "Converts a base 36 string to an integer."
msgstr ""

# 628045586bac4efb804553e2be51d0aa
#: ../../ref/utils.txt:447
msgid "Converts a positive integer less than sys.maxint to a base 36 string."
msgstr ""

# 930e59b9ecec46f3b48a7a4c04b3caae
#: ../../ref/utils.txt:450
msgid "``django.utils.safestring``"
msgstr ""

# 123bb7d97b9e456684b3a4e66a315787
#: ../../ref/utils.txt:455
msgid ""
"Functions and classes for working with \"safe strings\": strings that can be "
"displayed safely without further escaping in HTML. Marking something as a "
"\"safe string\" means that the producer of the string has already turned "
"characters that should not be interpreted by the HTML engine (e.g. '<') into "
"the appropriate entities."
msgstr ""

# 996f0776bad44d8fb07ddfbf8ca7f40b
#: ../../ref/utils.txt:463
msgid ""
"A string subclass that has been specifically marked as \"safe\" (requires no "
"further escaping) for HTML output purposes."
msgstr ""

# 74f7b991471144a4a8712fa873c43543
#: ../../ref/utils.txt:468
msgid ""
"A unicode subclass that has been specifically marked as \"safe\" for HTML "
"output purposes."
msgstr ""

# 464f6ce23fb84e169cd58c661a8335cb
#: ../../ref/utils.txt:473
msgid ""
"Explicitly mark a string as safe for (HTML) output purposes. The returned "
"object can be used everywhere a string or unicode object is appropriate."
msgstr ""

# 0658ed6047f443fb9f91df0960fd60d1
#: ../../ref/utils.txt:476
msgid "Can be called multiple times on a single string."
msgstr ""

# ae96fa482b7b479aa51ee24968df6cd6
#: ../../ref/utils.txt:480
msgid ""
"Explicitly mark a string as requiring HTML escaping upon output. Has no "
"effect on ``SafeData`` subclasses."
msgstr ""

# e77fbe122e5d4795b294c87978d3e51c
#: ../../ref/utils.txt:483
msgid ""
"Can be called multiple times on a single string (the resulting escaping is "
"only applied once)."
msgstr ""

# dfe903ff34064e379f1cb71ff1ad1a0e
#: ../../ref/utils.txt:487
msgid "``django.utils.translation``"
msgstr ""

# 3b6333d4d4ba4ca28385a4ae3a792cc7
#: ../../ref/utils.txt:492
msgid ""
"For a complete discussion on the usage of the following see the :doc:"
"`translation documentation </topics/i18n/translation>`."
msgstr ""

# d8884e0461034cafbb9bea91cb9863d0
#: ../../ref/utils.txt:497
msgid "Translates ``message`` and returns it in a UTF-8 bytestring"
msgstr ""

# 269e0468e6c1415096992f017a276072
#: ../../ref/utils.txt:501
msgid "Translates ``message`` and returns it in a unicode string"
msgstr ""

# 450ead45f63e4391bebae289469009d6
#: ../../ref/utils.txt:505
msgid ""
"Translates ``message`` given the ``context`` and returns it in a unicode "
"string."
msgstr ""

# 1b64786bb96745ac9d37047842fd4607
#: ../../ref/utils.txt:508
msgid "For more information, see :ref:`contextual-markers`."
msgstr ""

# f5bf99a65ad646f695e54d72d0d4a30b
# 9c7951401e5f4878ae6ebe5a893fb955
#: ../../ref/utils.txt:514 ../../ref/utils.txt:545
msgid "Same as the non-lazy versions above, but using lazy execution."
msgstr ""

# 742f4b3250a2498f9505e5f40f2363a1
# 76dc57c0f7a5469fb11be4137b0fc8ae
#: ../../ref/utils.txt:516 ../../ref/utils.txt:547
msgid "See :ref:`lazy translations documentation <lazy-translations>`."
msgstr ""

# 7256b49ab9d44714a4282ffda48c4830
#: ../../ref/utils.txt:521
msgid ""
"Marks strings for translation but doesn't translate them now. This can be "
"used to store strings in global variables that should stay in the base "
"language (because they might be used externally) and will be translated "
"later."
msgstr ""

# 4da89cbb1e144558876952081c9dee0c
#: ../../ref/utils.txt:528
msgid ""
"Translates ``singular`` and ``plural`` and returns the appropriate string "
"based on ``number`` in a UTF-8 bytestring."
msgstr ""

# 1fd884647b5f4bfcb3b2a32c211ea690
#: ../../ref/utils.txt:533
msgid ""
"Translates ``singular`` and ``plural`` and returns the appropriate string "
"based on ``number`` in a unicode string."
msgstr ""

# 709b4c770fdc41dcbbe567461cd2c775
#: ../../ref/utils.txt:538
msgid ""
"Translates ``singular`` and ``plural`` and returns the appropriate string "
"based on ``number`` and the ``context`` in a unicode string."
msgstr ""

# 78fbb08164854dfda0dba98cd2bb9d81
#: ../../ref/utils.txt:551
msgid ""
"Lazy variant of string concatenation, needed for translations that are "
"constructed from multiple parts."
msgstr ""

# 5b92cd7325ea4e5389001e3f5b5c0dd5
#: ../../ref/utils.txt:556
msgid ""
"Fetches the translation object for a given language and installs it as the "
"current translation object for the current thread."
msgstr ""

# 827aaf7054564adba06a802e90491422
#: ../../ref/utils.txt:561
msgid ""
"De-installs the currently active translation object so that further _ calls "
"will resolve against the default translation object, again."
msgstr ""

# c0b1591258994182b0cd65e69dac4894
#: ../../ref/utils.txt:566
msgid ""
"Makes the active translation object a NullTranslations() instance. This is "
"useful when we want delayed translations to appear as the original string "
"for some reason."
msgstr ""

# ef65ecde6a684a6e922d801dcfb1381b
#: ../../ref/utils.txt:574
msgid ""
"A Python context manager that uses :func:`django.utils.translation.activate` "
"to fetch the translation object for a given language, installing it as the "
"translation object for the current thread and reinstall the previous active "
"language on exit. Optionally it can simply deinstall the temporary "
"translation on exit with :func:`django.utils.translation.deactivate` if the "
"deactivate argument is True. If you pass None as the language argument, a "
"NullTranslations() instance is installed while the context is active."
msgstr ""

# 782cff2e3dd540dcbc770feaad9ab460
#: ../../ref/utils.txt:585
msgid "Returns the currently selected language code."
msgstr ""

# e2a1e81a23834454995f84e562beb541
#: ../../ref/utils.txt:589
msgid "Returns selected language's BiDi layout:"
msgstr ""

# b9df498f419341e59a908909189f32b5
#: ../../ref/utils.txt:591
msgid "``False`` = left-to-right layout"
msgstr ""

# b6225ea51748465d89c0b8046f3fdd33
#: ../../ref/utils.txt:592
msgid "``True`` = right-to-left layout"
msgstr ""

# 24baa922cb05443aaeb8e9413efc104e
#: ../../ref/utils.txt:598
msgid ""
"Analyzes the request to find what language the user wants the system to "
"show. Only languages listed in settings.LANGUAGES are taken into account. If "
"the user requests a sublanguage where we have a main language, we send out "
"the main language."
msgstr ""

# 3b611fead2e84e58a0902c2c91b4ed4f
#: ../../ref/utils.txt:603
msgid ""
"If ``check_path`` is ``True``, the function first checks the requested URL "
"for whether its path begins with a language code listed in the :setting:"
"`LANGUAGES` setting."
msgstr ""

# 34a3b35ec88b45ff988bfe594c8b9a2c
#: ../../ref/utils.txt:609
msgid "Turns a language name (en-us) into a locale name (en_US)."
msgstr ""

# 897244f5b63b48918360634464b3d7dd
#: ../../ref/utils.txt:613
msgid ""
"Turns a Django template into something that is understood by xgettext. It "
"does so by translating the Django translation tags into standard gettext "
"function invocations."
msgstr ""

# a29ead701bb24afeacda5c9d1edaab14
#: ../../ref/utils.txt:620
msgid "``django.utils.timezone``"
msgstr ""

# 8597383abbd64d65907be4603ef890cf
#: ../../ref/utils.txt:629
msgid ":class:`~datetime.tzinfo` instance that represents UTC."
msgstr ""

# 8b11873d4028431c81c638e6d2bc0220
#: ../../ref/utils.txt:633
msgid ""
"Returns a :class:`~datetime.tzinfo` instance that represents the :ref:"
"`default time zone <default-current-time-zone>`."
msgstr ""

# c505149be1924391ba1302a74866873d
#: ../../ref/utils.txt:638
msgid ""
"Returns the name of the :ref:`default time zone <default-current-time-zone>`."
msgstr ""

# 43a8a380fa4f4cd18a941a6d39fbc178
#: ../../ref/utils.txt:643
msgid ""
"Returns a :class:`~datetime.tzinfo` instance that represents the :ref:"
"`current time zone <default-current-time-zone>`."
msgstr ""

# 16995c734ca6443cb457262938dd3a15
#: ../../ref/utils.txt:648
msgid ""
"Returns the name of the :ref:`current time zone <default-current-time-zone>`."
msgstr ""

# 87197098abf14e7d9b933591f095716c
#: ../../ref/utils.txt:653
msgid ""
"Sets the :ref:`current time zone <default-current-time-zone>`. The "
"``timezone`` argument must be an instance of a :class:`~datetime.tzinfo` "
"subclass or, if pytz_ is available, a time zone name."
msgstr ""

# 81909f345a6f46e3a628bc05a60991c9
#: ../../ref/utils.txt:659
msgid "Unsets the :ref:`current time zone <default-current-time-zone>`."
msgstr ""

# 1346995bfa144b34968f1ac1f797d6dc
#: ../../ref/utils.txt:663
msgid ""
"This is a Python context manager that sets the :ref:`current time zone "
"<default-current-time-zone>` on entry with :func:`activate()`, and restores "
"the previously active time zone on exit. If the ``timezone`` argument is "
"``None``, the :ref:`current time zone <default-current-time-zone>` is unset "
"on entry with :func:`deactivate()` instead."
msgstr ""

# c76587cc205c49c6a02fa059bbbff911
#: ../../ref/utils.txt:671
msgid ""
"Returns an aware or naive :class:`~datetime.datetime` that represents the "
"current point in time when :setting:`USE_TZ` is ``True`` or ``False`` "
"respectively."
msgstr ""

# bff215a64250423285afa7c08aece0b4
#: ../../ref/utils.txt:677
msgid ""
"Returns ``True`` if ``value`` is aware, ``False`` if it is naive. This "
"function assumes that ``value`` is a :class:`~datetime.datetime`."
msgstr ""

# a93711aac0e24c22973787bb950e5f3f
#: ../../ref/utils.txt:682
msgid ""
"Returns ``True`` if ``value`` is naive, ``False`` if it is aware. This "
"function assumes that ``value`` is a :class:`~datetime.datetime`."
msgstr ""

# d4652a8c0dcb4e62bb61a2ba403e469f
#: ../../ref/utils.txt:687
msgid ""
"Returns an aware :class:`~datetime.datetime` that represents the same point "
"in time as ``value`` in ``timezone``, ``value`` being a naive :class:"
"`~datetime.datetime`."
msgstr ""

# 81552a01798d4f1193feb2eede1cad60
#: ../../ref/utils.txt:691
msgid ""
"This function can raise an exception if ``value`` doesn't exist or is "
"ambiguous because of DST transitions."
msgstr ""

# 33e27d22275048feb73c4bbf22817a86
#: ../../ref/utils.txt:696
msgid ""
"Returns an naive :class:`~datetime.datetime` that represents in "
"``timezone``  the same point in time as ``value``, ``value`` being an aware :"
"class:`~datetime.datetime`"
msgstr ""

# 02a6239030e1459f8afe72982991dd0c
#: ../../ref/utils.txt:703
msgid "``django.utils.tzinfo``"
msgstr ""

# 2fbd766a1ae84d49a90c41e54035697c
#: ../../ref/utils.txt:710
msgid "Fixed offset in minutes east from UTC."
msgstr ""

# c8f977042de74c469861cabf81f55535
#: ../../ref/utils.txt:714
msgid "Proxy timezone information from time module."
msgstr ""

# 97e11c6457064642b8700252a956b0b7
#: ../../ref/validators.txt:3
msgid "Validators"
msgstr ""

# a19d77a6a75d4b65860ca85e2341e66e
#: ../../ref/validators.txt:10
msgid "Writing validators"
msgstr ""

# 8c9fe580836a4cb2bfcd9e57d8378bf9
#: ../../ref/validators.txt:12
msgid ""
"A validator is a callable that takes a value and raises a :exc:`~django.core."
"exceptions.ValidationError` if it doesn't meet some criteria. Validators can "
"be useful for re-using validation logic between different types of fields."
msgstr ""

# 73e85bd65ce6416bb88412fb1308fe1c
#: ../../ref/validators.txt:17
msgid "For example, here's a validator that only allows even numbers::"
msgstr ""

# 94cc18409e2c4c0fb94bb4d5ff3245a1
#: ../../ref/validators.txt:25
msgid ""
"You can add this to a model field via the field's :attr:`~django.db.models."
"Field.validators` argument::"
msgstr ""

# 8fdce19f7c664434b0ad4777c6c03690
#: ../../ref/validators.txt:33
msgid ""
"Because values are converted to Python before validators are run, you can "
"even use the same validator with forms::"
msgstr ""

# ad562fbb2e314f5d92ca39a0ee241de5
#: ../../ref/validators.txt:42
msgid "How validators are run"
msgstr ""

# 91d253c26f1f449c9fc777e6d109ab7e
#: ../../ref/validators.txt:44
msgid ""
"See the :doc:`form validation </ref/forms/validation>` for more information "
"on how validators are run in forms, and :ref:`Validating objects <validating-"
"objects>` for how they're run in models. Note that validators will not be "
"run automatically when you save a model, but if you are using a :class:"
"`~django.forms.ModelForm`, it will run your validators on any fields that "
"are included in your form. See the :doc:`ModelForm documentation </topics/"
"forms/modelforms>` for information on how model validation interacts with "
"forms."
msgstr ""

# 99a4298fb6ac426faa39a169924c942f
#: ../../ref/validators.txt:54
msgid "Built-in validators"
msgstr ""

# e9e1e18aa4ab40c5af517632bf956da1
#: ../../ref/validators.txt:56
msgid ""
"The :mod:`django.core.validators` module contains a collection of callable "
"validators for use with model and form fields. They're used internally but "
"are available for use with your own fields, too. They can be used in "
"addition to, or in lieu of custom ``field.clean()`` methods."
msgstr ""

# 77b9ad181623427eb42233a7acec4023
#: ../../ref/validators.txt:62
msgid "``RegexValidator``"
msgstr ""

# 8cd28c0746594cb8a6f0c3dd35354447
#: ../../ref/validators.txt:72
msgid ""
"The regular expression pattern to search for the provided ``value``, or a "
"pre-compiled regular expression. Raises a :exc:`~django.core.exceptions."
"ValidationError` with :attr:`message` and :attr:`code` if no match is found. "
"By default, matches any string (including an empty string)."
msgstr ""

# 0004d42e37154485a047e0b45539a763
#: ../../ref/validators.txt:80
msgid ""
"The error message used by :exc:`~django.core.exceptions.ValidationError` if "
"validation fails. Defaults to ``\"Enter a valid value\"``."
msgstr ""

# fbdc57b3305647c793912be20d944e52
#: ../../ref/validators.txt:86
msgid ""
"The error code used by :exc:`~django.core.exceptions.ValidationError` if "
"validation fails. Defaults to ``\"invalid\"``."
msgstr ""

# 6efe0e1360f149409b9f953c7e8c858b
#: ../../ref/validators.txt:90
msgid "``URLValidator``"
msgstr ""

# 06b7df46cc06454495188cee0385bf55
#: ../../ref/validators.txt:93
msgid ""
"A :class:`RegexValidator` that ensures a value looks like a URL and "
"optionally verifies that the URL actually exists (i.e., doesn't return a 404 "
"status code). Raises an error code of ``'invalid'`` if it doesn't look like "
"a URL, and a code of ``'invalid_link'`` if it doesn't exist."
msgstr ""

# 43c4c17290ad4a8f970f8268cec8e422
#: ../../ref/validators.txt:105
msgid "If set to ``True``, this validator checks that the URL actually exists."
msgstr ""

# b8559c792bb84d29b53c7ff0c2296dce
#: ../../ref/validators.txt:109
msgid ""
"If :attr:`verify_exists` is ``True``, Django uses this value as the \"User-"
"agent\" for the request."
msgstr ""

# e4abd33b0bdb4947930fa7bc5c51328b
#: ../../ref/validators.txt:113
msgid "``validate_email``"
msgstr ""

# c1b171346cce427f9c262e0ef3394741
#: ../../ref/validators.txt:116
msgid ""
"A :class:`RegexValidator` instance that ensures a value looks like an email "
"address."
msgstr ""

# 35a9ec8e32db4678a7da35d97c18849b
#: ../../ref/validators.txt:120
msgid "``validate_slug``"
msgstr ""

# 247226198f9e436182a17e9fb740930e
#: ../../ref/validators.txt:123
msgid ""
"A :class:`RegexValidator` instance that ensures a value consists of only "
"letters, numbers, underscores or hyphens."
msgstr ""

# be1337b89a7b4fe8b86565e8e2db7686
#: ../../ref/validators.txt:127
msgid "``validate_ipv4_address``"
msgstr ""

# 980739db2fdd4bf9bd8788d5852e84a5
#: ../../ref/validators.txt:130
msgid ""
"A :class:`RegexValidator` instance that ensures a value looks like an IPv4 "
"address."
msgstr ""

# f4023199eb1445ee9bf2f1b5e57cddc0
#: ../../ref/validators.txt:134
msgid "``validate_ipv6_address``"
msgstr ""

# 1a875f0df3144546a60f1aa45d3a9594
#: ../../ref/validators.txt:139
msgid "Uses :mod:`django.utils.ipv6` to check the validity of an IPv6 address."
msgstr ""

# a4051b6025814de39a3c429cbb0929a2
#: ../../ref/validators.txt:142
msgid "``validate_ipv46_address``"
msgstr ""

# e1b2d796e83f415580d393c6c0ec1b7a
#: ../../ref/validators.txt:147
msgid ""
"Uses both ``validate_ipv4_address`` and ``validate_ipv6_address`` to ensure "
"a value is either a valid IPv4 or IPv6 address."
msgstr ""

# b512807cfedc4a6f9acf2ec8c091025d
#: ../../ref/validators.txt:151
msgid "``validate_comma_separated_integer_list``"
msgstr ""

# a0acd9c8a87a423aa967fdd11440ee40
#: ../../ref/validators.txt:154
msgid ""
"A :class:`RegexValidator` instance that ensures a value is a comma-separated "
"list of integers."
msgstr ""

# 4dd822b46f184a56b8befe90a31c201f
#: ../../ref/validators.txt:158
msgid "``MaxValueValidator``"
msgstr ""

# 8f65b2069ce34e9696ecabd0c1700d43
#: ../../ref/validators.txt:161
msgid ""
"Raises a :exc:`~django.core.exceptions.ValidationError` with a code of "
"``'max_value'`` if ``value`` is greater than ``max_value``."
msgstr ""

# df98f25b0801484f9c6edfe8d2548aa8
#: ../../ref/validators.txt:165
msgid "``MinValueValidator``"
msgstr ""

# 0568138d73ae4c2da7bfca849fc3b8e2
#: ../../ref/validators.txt:168
msgid ""
"Raises a :exc:`~django.core.exceptions.ValidationError` with a code of "
"``'min_value'`` if ``value`` is less than ``min_value``."
msgstr ""

# f99fbb79011242f19303118d2894165a
#: ../../ref/validators.txt:172
msgid "``MaxLengthValidator``"
msgstr ""

# 179532d23ee64792aa5e0fc42505c870
#: ../../ref/validators.txt:175
msgid ""
"Raises a :exc:`~django.core.exceptions.ValidationError` with a code of "
"``'max_length'`` if the length of ``value`` is greater than ``max_length``."
msgstr ""

# 7a29291eb7a04493b4c3758714f505af
#: ../../ref/validators.txt:179
msgid "``MinLengthValidator``"
msgstr ""

# 088e8bdbc2b34a10878a121b875cef3f
#: ../../ref/validators.txt:182
msgid ""
"Raises a :exc:`~django.core.exceptions.ValidationError` with a code of "
"``'min_length'`` if the length of ``value`` is less than ``min_length``."
msgstr ""
