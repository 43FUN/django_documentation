# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-08-21 17:15\n"
"PO-Revision-Date: 2013-08-21 17:15\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 0bf9a2909b6b44668c808819dc9943e2
#: ../../intro/tutorial06.txt:3
msgid "Writing your first Django app, part 6"
msgstr ""

# 943c534d9b814a7382ba87a3cde39b0a
#: ../../intro/tutorial06.txt:5
msgid ""
"This tutorial begins where :doc:`Tutorial 5 </intro/tutorial05>` left off. "
"We've built a tested Web-poll application, and we'll now add a stylesheet "
"and an image."
msgstr ""

# 552f45ec6b824b1ab952fd9ccdcc917b
#: ../../intro/tutorial06.txt:9
msgid ""
"Aside from the HTML generated by the server, web applications generally need "
"to serve additional files — such as images, JavaScript, or CSS — necessary "
"to render the complete web page. In Django, we refer to these files as "
"\"static files\"."
msgstr ""

# 27e5c293859c4144a96c9d9752420a01
#: ../../intro/tutorial06.txt:14
msgid ""
"For small projects, this isn't a big deal, because you can just keep the "
"static files somewhere your web server can find it. However, in bigger "
"projects -- especially those comprised of multiple apps -- dealing with the "
"multiple sets of static files provided by each application starts to get "
"tricky."
msgstr ""

# 91b052b6cc0c4f3d9aad37f0d2d13042
#: ../../intro/tutorial06.txt:20
msgid ""
"That's what ``django.contrib.staticfiles`` is for: it collects static files "
"from each of your applications (and any other places you specify) into a "
"single location that can easily be served in production."
msgstr ""

# a2fa301ee6b946feb4b10e604b20870b
#: ../../intro/tutorial06.txt:25
msgid "Customize your *app's* look and feel"
msgstr ""

# ad5fcd970c62416b93d561eeb5127bf9
#: ../../intro/tutorial06.txt:27
msgid ""
"First, create a directory called ``static`` in your ``polls`` directory. "
"Django will look for static files there, similarly to how Django finds "
"templates inside ``polls/templates/``."
msgstr ""

# baeb5e4a6f974a46b26b7d23de950fca
#: ../../intro/tutorial06.txt:31
msgid ""
"Django's :setting:`STATICFILES_FINDERS` setting contains a list of finders "
"that know how to discover static files from various sources. One of the "
"defaults is ``AppDirectoriesFinder`` which looks for a \"static\" "
"subdirectory in each of the :setting:`INSTALLED_APPS`, like the one in "
"``polls`` we just created. The admin site uses the same directory structure "
"for its static files."
msgstr ""

# 0b4c9832adbf40b9b862a3c25184cd3a
#: ../../intro/tutorial06.txt:38
msgid ""
"Within the ``static`` directory you have just created, create another "
"directory called ``polls`` and within that create a file called ``style."
"css``. In other words, your stylesheet should be at ``polls/static/polls/"
"style.css``. Because of how the ``AppDirectoriesFinder`` staticfile finder "
"works, you can refer to this static file in Django simply as ``polls/style."
"css``, similar to how you reference the path for templates."
msgstr ""

# 4470edfc33f547639ffe507ecb8a1e68
#: ../../intro/tutorial06.txt:47
msgid ""
"Just like templates, we *might* be able to get away with putting our static "
"files directly in ``polls/static`` (rather than creating another ``polls`` "
"subdirectory), but it would actually be a bad idea. Django will choose the "
"first static file it finds whose name matches, and if you had a static file "
"with the same name in a *different* application, Django would be unable to "
"distinguish between them. We need to be able to point Django at the right "
"one, and the easiest way to ensure this is by *namespacing* them. That is, "
"by putting those static files inside *another* directory named for the "
"application itself."
msgstr ""

# 689ba8d14ffa4ef68cd02d0d6fe0a357
#: ../../intro/tutorial06.txt:57
msgid ""
"Put the following code in that stylesheet (``polls/static/polls/style.css``):"
msgstr ""

# 8472a6bbe37849cb8541de05468e3151
#: ../../intro/tutorial06.txt:65
msgid ""
"Next, add the following at the top of ``polls/templates/polls/index.html``:"
msgstr ""

# 5f6d2bc898424acf8a956f1dacb0f6f2
#: ../../intro/tutorial06.txt:73
msgid ""
"``{% load staticfiles %}`` loads the :ttag:`{% static %} <staticfiles-"
"static>` template tag from the ``staticfiles`` template library. The ``{% "
"static %}`` template tag generates the absolute URL of the static file."
msgstr ""

# 178a47aa75c6469d8c7532f3b0694287
#: ../../intro/tutorial06.txt:77
msgid ""
"That's all you need to do for development. Reload ``http://localhost:8000/"
"polls/`` and you should see that the poll links are green (Django style!) "
"which means that your stylesheet was properly loaded."
msgstr ""

# e486603580e14f55adfefcf978f4beab
#: ../../intro/tutorial06.txt:82
msgid "Adding a background-image"
msgstr ""

# a3a3ec7772514041910874d51c49d5b3
#: ../../intro/tutorial06.txt:84
msgid ""
"Next, we'll create a subdirectory for images. Create an ``images`` "
"subdirectory in the ``polls/static/polls/`` directory. Inside this "
"directory, put an image called ``background.gif``. In other words, put your "
"image in ``polls/static/polls/images/background.gif``."
msgstr ""

# 07f0ac099778448aa8640c3ded52e914
#: ../../intro/tutorial06.txt:89
msgid "Then, add to your stylesheet (``polls/static/polls/style.css``):"
msgstr ""

# 65b61dad79d649d996e6a50ceefa8533
#: ../../intro/tutorial06.txt:97
msgid ""
"Reload ``http://localhost:8000/polls/`` and you should see the background "
"loaded in the bottom right of the screen."
msgstr ""

# 69cf06e0cb6f4713b80cb800bb93e25f
#: ../../intro/tutorial06.txt:102
msgid ""
"Of course the ``{% static %}`` template tag is not available for use in "
"static files like your stylesheet which aren't generated by Django. You "
"should always use **relative paths** to link your static files between each "
"other, because then you can change :setting:`STATIC_URL` (used by the :ttag:"
"`static` template tag to generate its URLs) without having to modify a bunch "
"of paths in your static files as well."
msgstr ""

# 4ba7f88aa4cc40b7a07d17cd423328a0
#: ../../intro/tutorial06.txt:109
msgid ""
"These are the **basics**. For more details on settings and other bits "
"included with the framework see :doc:`the static files howto </howto/static-"
"files/index>` and :doc:`the staticfiles reference </ref/contrib/"
"staticfiles>`. :doc:`Deploying static files </howto/static-files/"
"deployment>` discusses how to use static files on a real server."
msgstr ""

# b65755684ea84a92a71c854910939fd2
#: ../../intro/tutorial06.txt:117
msgid "What's next?"
msgstr ""

# 90b386e6126d488a9db05d4210545484
#: ../../intro/tutorial06.txt:119
msgid ""
"The beginner tutorial ends here for the time being. In the meantime, you "
"might want to check out some pointers on :doc:`where to go from here </intro/"
"whatsnext>`."
msgstr ""

# fb69e4da9579411a8bb35ad9d29d3beb
#: ../../intro/tutorial06.txt:123
msgid ""
"If you are familiar with Python packaging and interested in learning how to "
"turn polls into a \"reusable app\", check out :doc:`Advanced tutorial: How "
"to write reusable apps</intro/reusable-apps>`."
msgstr ""
