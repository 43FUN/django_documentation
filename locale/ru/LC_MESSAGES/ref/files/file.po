# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-02-29 18:30\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 97aa0f47859c4f0caccf163b3b670dcf
#: ../../ref/files/file.txt:2
msgid "The ``File`` object"
msgstr ""

# de4003dee91c4b9ab8b1245a33485635
#: ../../ref/files/file.txt:4
msgid ""
"The :mod:`django.core.files` module and its submodules contain built-in "
"classes for basic file handling in Django."
msgstr ""

# 5fef4a78dc88486f91da007acd52baa1
#: ../../ref/files/file.txt:10
msgid "The ``File`` Class"
msgstr ""

# 4d307133fa8b40629113f7d1a1bbddeb
#: ../../ref/files/file.txt:14
msgid ""
"The :class:`File` is a thin wrapper around Python's built-in file object "
"with some Django-specific additions. Internally, Django uses this class any "
"time it needs to represent a file."
msgstr ""

# 0cf27fd9aba9491c8449e271598e155f
#: ../../ref/files/file.txt:18
msgid ":class:`File` objects have the following attributes and methods:"
msgstr ""

# 4c73d8a7e9a149d489d061a655fddf2c
#: ../../ref/files/file.txt:22
msgid ""
"The name of file including the relative path from :setting:`MEDIA_ROOT`."
msgstr ""

# ed4ab025c48e465187bb0a7831a046dc
#: ../../ref/files/file.txt:27
msgid "The size of the file in bytes."
msgstr ""

# da36dbc1fa0b4dfda7d09dacf90d250e
#: ../../ref/files/file.txt:31
msgid ""
"The underlying Python ``file`` object passed to :class:`~django.core.files."
"File`."
msgstr ""

# 1cbb2c96e06d44e289963d9d706bf555
#: ../../ref/files/file.txt:36
msgid "The read/write mode for the file."
msgstr ""

# e43c7254cde940fa8f81d71654883a38
#: ../../ref/files/file.txt:40
msgid ""
"Open or reopen the file (which by definition also does ``File.seek(0)``). "
"The ``mode`` argument allows the same values as Python's standard ``open()``."
msgstr ""

# dccc9c5b9c23440ab8db01ca9432f307
#: ../../ref/files/file.txt:44
msgid ""
"When reopening a file, ``mode`` will override whatever mode the file was "
"originally opened with; ``None`` means to reopen with the original mode."
msgstr ""

# 1207179b113543459b138919ba3a28f8
#: ../../ref/files/file.txt:50
msgid ""
"Read content from the file. The optional ``size`` is the number of bytes to "
"read; if not specified, the file will be read to the end."
msgstr ""

# bd2e2b143edc42db9216090b78189131
#: ../../ref/files/file.txt:55
msgid "Iterate over the file yielding one line at a time."
msgstr ""

# 0cde4f467e2b4daba1de7ac97f4b855e
#: ../../ref/files/file.txt:59
msgid ""
"Iterate over the file yielding \"chunks\" of a given size. ``chunk_size`` "
"defaults to 64 KB."
msgstr ""

# bafa9fd27f43477fa40ce924ca5209f0
#: ../../ref/files/file.txt:62
msgid ""
"This is especially useful with very large files since it allows them to be "
"streamed off disk and avoids storing the whole file in memory."
msgstr ""

# 52ce9238161647b3880e381d6c07d5c5
#: ../../ref/files/file.txt:67
msgid ""
"Returns ``True`` if the file is large enough to require multiple chunks to "
"access all of its content give some ``chunk_size``."
msgstr ""

# 2110fecf609b42f0a9004ec0f3656e7d
#: ../../ref/files/file.txt:72
msgid ""
"Writes the specified content string to the file. Depending on the storage "
"system behind the scenes, this content might not be fully committed until "
"``close()`` is called on the file."
msgstr ""

# 5ec8ac699bdf45fa8a9835b79742037b
#: ../../ref/files/file.txt:78
msgid "Close the file."
msgstr ""

# a1a677c8738b4c9ab70349e00ff3a665
#: ../../ref/files/file.txt:80
msgid ""
"In addition to the listed methods, :class:`~django.core.files.File` exposes "
"the following attributes and methods of the underlying ``file`` object: "
"``encoding``, ``fileno``, ``flush``, ``isatty``, ``newlines``, ``read``, "
"``readinto``, ``readlines``, ``seek``, ``softspace``, ``tell``, "
"``truncate``, ``writelines``, ``xreadlines``."
msgstr ""

# 4bd7f6bab5c64fd4b92500210f704221
#: ../../ref/files/file.txt:89
msgid "The ``ContentFile`` Class"
msgstr ""

# 36147f20ee0649f0aedee711d32b5cc8
#: ../../ref/files/file.txt:93
msgid ""
"The ``ContentFile`` class inherits from :class:`~django.core.files.File`, "
"but unlike :class:`~django.core.files.File` it operates on string content, "
"rather than an actual file. For example::"
msgstr ""

# 583c0f95aa6c4b11885fcab7d05a6916
#: ../../ref/files/file.txt:105
msgid "The ``ImageFile`` Class"
msgstr ""

# 546f720c4e944675975bc40a2dd4659f
#: ../../ref/files/file.txt:109
msgid ""
"Django provides a built-in class specifically for images. :class:`django."
"core.files.images.ImageFile` inherits all the attributes and methods of :"
"class:`~django.core.files.File`, and additionally provides the following:"
msgstr ""

# f5092054391c4c508dce2e1d18e617f8
#: ../../ref/files/file.txt:116
msgid "Width of the image in pixels."
msgstr ""

# dbfa0d8676114ebd96f701742938e33a
#: ../../ref/files/file.txt:120
msgid "Height of the image in pixels."
msgstr ""

# f07d5c26a9e84ab7b414b5cb6628e5e8
#: ../../ref/files/file.txt:125
msgid "Additional methods on files attached to objects"
msgstr ""

# 0f311165a733405482571431bd0f3674
#: ../../ref/files/file.txt:127
msgid ""
"Any :class:`File` that's associated with an object (as with ``Car.photo``, "
"below) will also have a couple of extra methods:"
msgstr ""

# eb4d143831a14e9fa721ae7dec108ff0
#: ../../ref/files/file.txt:132
msgid ""
"Saves a new file with the file name and contents provided. This will not "
"replace the existing file, but will create a new file and update the object "
"to point to it. If ``save`` is ``True``, the model's ``save()`` method will "
"be called once the file is saved. That is, these two lines::"
msgstr ""

# 4bbaa3e8f7594f239d0cf8ffeeb1c8f8
#: ../../ref/files/file.txt:140
msgid "are the same as this one line::"
msgstr ""

# ac5ecdbacf59445cba725cc8667de8da
#: ../../ref/files/file.txt:144
msgid ""
"Note that the ``content`` argument must be an instance of either :class:"
"`File` or of a subclass of :class:`File`, such as :class:`ContentFile`."
msgstr ""

# 2927e36e894346329de1bff1bc7b488f
#: ../../ref/files/file.txt:150
msgid ""
"Removes the file from the model instance and deletes the underlying file. If "
"``save`` is ``True``, the model's ``save()`` method will be called once the "
"file is deleted."
msgstr ""
