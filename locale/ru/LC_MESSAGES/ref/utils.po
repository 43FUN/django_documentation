# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-27 00:21\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 785183e08a1f4df7897b923f842fa50c
#: ../../ref/utils.txt:3
msgid "Django Utils"
msgstr ""

# 4cc153c64303424aa3ad32aeed46a00c
#: ../../ref/utils.txt:8
msgid ""
"This document covers all stable modules in ``django.utils``. Most of the "
"modules in ``django.utils`` are designed for internal use and only the "
"following parts can be considered stable and thus backwards compatible as "
"per the :ref:`internal release deprecation policy <internal-release-"
"deprecation-policy>`."
msgstr ""

# 75232a2214024719affbdc614ff40ba2
#: ../../ref/utils.txt:14
msgid "``django.utils.cache``"
msgstr ""

# 319e205359a6476eb6c52fef44fd117d
#: ../../ref/utils.txt:19
msgid ""
"This module contains helper functions for controlling caching. It does so by "
"managing the ``Vary`` header of responses. It includes functions to patch "
"the header of response objects directly and decorators that change functions "
"to do that header-patching themselves."
msgstr ""

# 492d145b75024ab3aa22602687f0de5a
#: ../../ref/utils.txt:24
msgid ""
"For information on the ``Vary`` header, see :rfc:`2616#section-14.44` "
"section 14.44."
msgstr ""

# 3208d473315a4cf8ada58c6562a19270
#: ../../ref/utils.txt:27
msgid ""
"Essentially, the ``Vary`` HTTP header defines which headers a cache should "
"take into account when building its cache key. Requests with the same path "
"but different header content for headers named in ``Vary`` need to get "
"different cache keys to prevent delivery of wrong content."
msgstr ""

# 784f202cc2ba4d3293ccc318a2ccf25f
#: ../../ref/utils.txt:32
msgid ""
"For example, :doc:`internationalization </topics/i18n/index>` middleware "
"would need to distinguish caches by the ``Accept-language`` header."
msgstr ""

# c2aad0c527e141f68aa8b37bfe18994c
#: ../../ref/utils.txt:37
msgid ""
"This function patches the ``Cache-Control`` header by adding all keyword "
"arguments to it. The transformation is as follows:"
msgstr ""

# 514c252f600f4a26b38594bf27ddbfd9
#: ../../ref/utils.txt:40
msgid ""
"All keyword parameter names are turned to lowercase, and underscores are "
"converted to hyphens."
msgstr ""

# b295363ab71a450bb35fcbbfa2bf2a83
#: ../../ref/utils.txt:42
msgid ""
"If the value of a parameter is ``True`` (exactly ``True``, not just a true "
"value), only the parameter name is added to the header."
msgstr ""

# 4f27f277c8c94bdf962f37cf7c51fd62
#: ../../ref/utils.txt:44
msgid ""
"All other parameters are added with their value, after applying ``str()`` to "
"it."
msgstr ""

# f1aa8e5d2a9046f982837ff0454f2ab1
#: ../../ref/utils.txt:49
msgid ""
"Returns the max-age from the response Cache-Control header as an integer (or "
"``None`` if it wasn't found or wasn't an integer)."
msgstr ""

# ee1b39ff90ce4144b1bdd396948f8bca
#: ../../ref/utils.txt:54
msgid "Adds some useful headers to the given ``HttpResponse`` object:"
msgstr ""

# 7eb15cb317dd455196df3fced00e4381
#: ../../ref/utils.txt:56
msgid "``ETag``"
msgstr ""

# fca2a2c643804605a7cd93f68f213cbf
#: ../../ref/utils.txt:57
msgid "``Last-Modified``"
msgstr ""

# 644c10db19b34c1989c88ac254d23406
#: ../../ref/utils.txt:58
msgid "``Expires``"
msgstr ""

# 13b454e6253743b59810d04b2e4077db
#: ../../ref/utils.txt:59
msgid "``Cache-Control``"
msgstr ""

# 8b0c7d46c1084608bfd4c1c436083d3e
#: ../../ref/utils.txt:61
msgid "Each header is only added if it isn't already set."
msgstr ""

# e4dd295718284faabe80fcdf67b942ce
#: ../../ref/utils.txt:63
msgid ""
"``cache_timeout`` is in seconds. The :setting:`CACHE_MIDDLEWARE_SECONDS` "
"setting is used by default."
msgstr ""

# 593dd419fb5f431fbb9f678125e12b9a
#: ../../ref/utils.txt:68
msgid ""
"Adds headers to a response to indicate that a page should never be cached."
msgstr ""

# d887566e0d5743958f9a68e81675e64f
#: ../../ref/utils.txt:72
msgid ""
"Adds (or updates) the ``Vary`` header in the given ``HttpResponse`` object. "
"``newheaders`` is a list of header names that should be in ``Vary``. "
"Existing headers in ``Vary`` aren't removed."
msgstr ""

# c952dc49007b4765843d3964e888debc
#: ../../ref/utils.txt:78
msgid ""
"Returns a cache key based on the request path. It can be used in the request "
"phase because it pulls the list of headers to take into account from the "
"global path registry and uses those to build a cache key to check against."
msgstr ""

# c4e13881d58941c290bec5dc1328aef4
#: ../../ref/utils.txt:83
msgid ""
"If there is no headerlist stored, the page needs to be rebuilt, so this "
"function returns ``None``."
msgstr ""

# 2a5f8c11fb9c4422844b63baef5441c6
#: ../../ref/utils.txt:88
msgid ""
"Learns what headers to take into account for some request path from the "
"response object. It stores those headers in a global path registry so that "
"later access to that path will know what headers to take into account "
"without building the response object itself. The headers are named in the "
"``Vary`` header of the response, but we want to prevent response generation."
msgstr ""

# 82c19aeefbc74f3dbd0c520c6bbaf0ef
#: ../../ref/utils.txt:95
msgid ""
"The list of headers to use for cache key generation is stored in the same "
"cache as the pages themselves. If the cache ages some data out of the cache, "
"this just means that we have to build the response once to get at the Vary "
"header and so at the list of headers to use for the cache key."
msgstr ""

# b81b4ad7f5054354b2092ae4f4b62f15
#: ../../ref/utils.txt:101
msgid "``django.utils.datastructures``"
msgstr ""

# 3c3f77413f714584a9ad52e173b4629b
#: ../../ref/utils.txt:108
msgid ""
"The :class:`django.utils.datastructures.SortedDict` class is a dictionary "
"that keeps its keys in the order in which they're inserted. ``SortedDict`` "
"adds two additional methods to the standard Python ``dict`` class:"
msgstr ""

# fdbcab98edb646d1b9ad9bd874f13233
#: ../../ref/utils.txt:117
msgid "Inserts the key, value pair before the item with the given index."
msgstr ""

# c831d856180845c2981fddd880dcb676
#: ../../ref/utils.txt:123
msgid "Returns the value of the item at the given zero-based index."
msgstr ""

# 92177af0ba8145fe8dc3fd32305e51c3
#: ../../ref/utils.txt:126
msgid "Creating a new SortedDict"
msgstr ""

# a5eb28d5c58442af915e6ff1642f1e87
#: ../../ref/utils.txt:128
msgid ""
"Creating a new ``SortedDict`` must be done in a way where ordering is "
"guaranteed. For example::"
msgstr ""

# bb085c1c2f96444f82191fe1bb631056
#: ../../ref/utils.txt:133
msgid ""
"will not work. Passing in a basic Python ``dict`` could produce unreliable "
"results. Instead do::"
msgstr ""

# 3c8770697709417f84e560c38420180a
#: ../../ref/utils.txt:139
msgid "``django.utils.dateparse``"
msgstr ""

# d92d481c9ae241a89c5f945ce08cc193
#: ../../ref/utils.txt:144
msgid "The functions defined in this module share the following properties:"
msgstr ""

# c70d4890d498416187efe45b0d8b9f54
#: ../../ref/utils.txt:146
msgid ""
"They raise :exc:`~exceptions.ValueError` if their input is well formatted "
"but isn't a valid date or time."
msgstr ""

# a216d780664b43d88f7900aeddde9eb8
#: ../../ref/utils.txt:148
msgid "They return ``None`` if it isn't well formatted at all."
msgstr ""

# 94bf1fe2c43a4358b3b0963b778fbfa6
#: ../../ref/utils.txt:149
msgid ""
"They accept up to picosecond resolution in input, but they truncate it to "
"microseconds, since that's what Python supports."
msgstr ""

# c8e9ac0745ad45339108267579e43a98
#: ../../ref/utils.txt:154
msgid "Parses a string and returns a :class:`datetime.date`."
msgstr ""

# 2dbe3c6e381b41fe9c9dcad1bec36985
#: ../../ref/utils.txt:158
msgid "Parses a string and returns a :class:`datetime.time`."
msgstr ""

# 54bb678c69e34fdba1f5d0730fd2bef4
#: ../../ref/utils.txt:160
msgid ""
"UTC offsets aren't supported; if ``value`` describes one, the result is "
"``None``."
msgstr ""

# 152611dfe9364aeea9a8bca307e6d95e
#: ../../ref/utils.txt:165
msgid "Parses a string and returns a :class:`datetime.datetime`."
msgstr ""

# 68fcd10b91634416abdf1c77f42ca518
#: ../../ref/utils.txt:167
msgid ""
"UTC offsets are supported; if ``value`` describes one, the result's "
"``tzinfo`` attribute is a :class:`~django.utils.tzinfo.FixedOffset` instance."
msgstr ""

# 5974d10c1e174bfc981ca4489d32104d
#: ../../ref/utils.txt:172
msgid "``django.utils.decorators``"
msgstr ""

# 68c9a98a3a6b4bd59e563430f8f4cc1c
#: ../../ref/utils.txt:179
msgid ""
"Converts a function decorator into a method decorator. See :ref:`decorating "
"class based views<decorating-class-based-views>` for example usage."
msgstr ""

# d7d3009e56c24f5185087c30d7b4ab9f
#: ../../ref/utils.txt:184
msgid ""
"Given a middleware class, returns a view decorator. This lets you use "
"middleware functionality on a per-view basis. The middleware is created with "
"no params passed."
msgstr ""

# 015d8cdc330b4e05b8fffbf8cd131d07
#: ../../ref/utils.txt:190
msgid ""
"Like ``decorator_from_middleware``, but returns a function that accepts the "
"arguments to be passed to the middleware_class. For example, the :func:"
"`~django.views.decorators.cache.cache_page` decorator is created from the "
"``CacheMiddleware`` like this::"
msgstr ""

# c66b3db794204a3c9acc853ab71eee6e
#: ../../ref/utils.txt:202
msgid "``django.utils.encoding``"
msgstr ""

# 5ff01d81833e4e868c3ed55d45ca983d
#: ../../ref/utils.txt:209
msgid "A class that derives ``__str__`` from ``__unicode__``."
msgstr ""

# b9bf22db36be463fa7f2cd18c982683a
#: ../../ref/utils.txt:211
msgid ""
"On Python 2, ``__str__`` returns the output of ``__unicode__`` encoded as a "
"UTF-8 bytestring. On Python 3, ``__str__`` returns the output of "
"``__unicode__``."
msgstr ""

# 76d3bf4af41d4cc49acc0a5e09075103
#: ../../ref/utils.txt:215
msgid ""
"Useful as a mix-in. If you support Python 2 and 3 with a single code base, "
"you can inherit this mix-in and just define ``__unicode__``."
msgstr ""

# 575a331d99f547b5a472e791b0558de6
#: ../../ref/utils.txt:220
msgid ""
"A decorator that defines ``__unicode__`` and ``__str__`` methods under "
"Python 2. Under Python 3 it does nothing."
msgstr ""

# 3c51b5ecc74f458da4f2d802c3d1492c
#: ../../ref/utils.txt:223
msgid ""
"To support Python 2 and 3 with a single code base, define a ``__str__`` "
"method returning text and apply this decorator to the class."
msgstr ""

# df5b1fc0b1fa4484ac868878ef5a74fe
#: ../../ref/utils.txt:230
msgid ""
"Returns a text object representing ``s`` -- ``unicode`` on Python 2 and "
"``str`` on Python 3. Treats bytestrings using the ``encoding`` codec."
msgstr ""

# 784dbf486b534934b4ba0a951b139580
# 887c040210aa4e10b59b2a6d2a60283d
# 8dcf81bab7dc4d83a3ecdc80741ef51f
#: ../../ref/utils.txt:233 ../../ref/utils.txt:254 ../../ref/utils.txt:268
#: ../../ref/utils.txt:278
msgid ""
"If ``strings_only`` is ``True``, don't convert (some) non-string-like "
"objects."
msgstr ""

# 7e4b297ff50040e99d6dc8c2f0ad9bb8
#: ../../ref/utils.txt:238
msgid "Historical name of :func:`smart_text`. Only available under Python 2."
msgstr ""

# 00b2c0354fc84656b897d5dd268c1caf
#: ../../ref/utils.txt:242
msgid "Determine if the object instance is of a protected type."
msgstr ""

# be69b52bc8854a7fa12a0c8cbbbb3b7f
#: ../../ref/utils.txt:244
msgid ""
"Objects of protected types are preserved as-is when passed to ``force_text"
"(strings_only=True)``."
msgstr ""

# dad6c7add885486da0405bc7520fdeec
#: ../../ref/utils.txt:251
msgid ""
"Similar to ``smart_text``, except that lazy instances are resolved to "
"strings, rather than kept as lazy objects."
msgstr ""

# e9d81349d89044f48919b640cabf4924
#: ../../ref/utils.txt:259
msgid "Historical name of :func:`force_text`. Only available under Python 2."
msgstr ""

# d9f1246ce84b41b08119ea9225206a21
#: ../../ref/utils.txt:265
msgid ""
"Returns a bytestring version of ``s``, encoded as specified in ``encoding``."
msgstr ""

# b4a335d634f342d8845638ff721793cf
#: ../../ref/utils.txt:275
msgid ""
"Similar to ``smart_bytes``, except that lazy instances are resolved to "
"bytestrings, rather than kept as lazy objects."
msgstr ""

# c5ddf6344509422ca53f4cddcf2ca805
#: ../../ref/utils.txt:283
msgid ""
"Alias of :func:`smart_bytes` on Python 2 and :func:`smart_text` on Python 3. "
"This function returns a ``str`` or a lazy string."
msgstr ""

# 79320f7a703a4efbaa71357b416dfbed
#: ../../ref/utils.txt:286
msgid ""
"For instance, this is  suitable for writing to :data:`sys.stdout` on Python "
"2 and 3."
msgstr ""

# 19d48c735e9a43ee8e1b64547f668753
#: ../../ref/utils.txt:291
msgid ""
"Alias of :func:`force_bytes` on Python 2 and :func:`force_text` on Python 3. "
"This function always returns a ``str``."
msgstr ""

# 7219eb9df18948c789efa1d528f77972
#: ../../ref/utils.txt:296
msgid ""
"Convert an Internationalized Resource Identifier (IRI) portion to a URI "
"portion that is suitable for inclusion in a URL."
msgstr ""

# 8317c98b422345e1bcbafa84f004d6e1
#: ../../ref/utils.txt:299
msgid ""
"This is the algorithm from section 3.1 of :rfc:`3987#section-3.1`. However, "
"since we are assuming input is either UTF-8 or unicode already, we can "
"simplify things a little from the full method."
msgstr ""

# 99ec73792a2a49bcbff248ec98a9c7fc
#: ../../ref/utils.txt:303 ../../ref/utils.txt:315
msgid "Returns an ASCII string containing the encoded result."
msgstr ""

# b7883f32c16c49b2bccf4da48a5daabb
#: ../../ref/utils.txt:307
msgid ""
"Convert a file system path to a URI portion that is suitable for inclusion "
"in a URL. The path is assumed to be either UTF-8 or unicode."
msgstr ""

# 3a1358b3fe404205a058f312827eaace
#: ../../ref/utils.txt:310
msgid ""
"This method will encode certain characters that would normally be recognized "
"as special characters for URIs.  Note that this method does not encode the ' "
"character, as it is a valid character within URIs. See ``encodeURIComponent()"
"`` JavaScript function for more details."
msgstr ""

# 10f3029f1be349eca5b823fa4a52b7d5
#: ../../ref/utils.txt:318
msgid "``django.utils.feedgenerator``"
msgstr ""

# a3c62ac81c7f431ea914346295491a13
#: ../../ref/utils.txt:323
msgid "Sample usage::"
msgstr ""

# 9c729ae464fe4bcbac992c7c73a3aae2
#: ../../ref/utils.txt:340
msgid ""
"For simplifying the selection of a generator use ``feedgenerator."
"DefaultFeed`` which is currently ``Rss201rev2Feed``"
msgstr ""

# da9e4143a41e4fc495818198822813b8
#: ../../ref/utils.txt:343
msgid ""
"For definitions of the different versions of RSS, see: http://web.archive."
"org/web/20110718035220/http://diveintomark.org/archives/2004/02/04/"
"incompatible-rss"
msgstr ""

# 7657dc2141234a66b8153208fd7f5a1c
#: ../../ref/utils.txt:348
msgid "Creates a TagURI."
msgstr ""

# 6d1c320bc6e04aa3b518e6b6c7769a6a
#: ../../ref/utils.txt:350
msgid ""
"See http://web.archive.org/web/20110514113830/http://diveintomark.org/"
"archives/2004/05/28/howto-atom-id"
msgstr ""

# a15bd945724941e3bccafd4a0bb2faf0
#: ../../ref/utils.txt:353
msgid "SyndicationFeed"
msgstr ""

# b1810d56e1ea450197ca5cd08b4470ae
#: ../../ref/utils.txt:357
msgid ""
"Base class for all syndication feeds. Subclasses should provide write()."
msgstr ""

# 365101e6a30040c48f56a6de4556d6cd
#: ../../ref/utils.txt:361
msgid ""
"Initialize the feed with the given dictionary of metadata, which applies to "
"the entire feed."
msgstr ""

# e472f99ff0304435a2e0fc8ad87d68f5
#: ../../ref/utils.txt:364
msgid ""
"Any extra keyword arguments you pass to ``__init__`` will be stored in "
"``self.feed``."
msgstr ""

# 17d5b934772a481a8d936869764d7f3c
#: ../../ref/utils.txt:367
msgid ""
"All parameters should be Unicode objects, except ``categories``, which "
"should be a sequence of Unicode objects."
msgstr ""

# 9a9917209da843d99e5f70ed1dd2739a
#: ../../ref/utils.txt:372
msgid ""
"Adds an item to the feed. All args are expected to be Python ``unicode`` "
"objects except ``pubdate``, which is a ``datetime.datetime`` object, and "
"``enclosure``, which is an instance of the ``Enclosure`` class."
msgstr ""

# 1e696675268341e3bda1245f3b9b2d61
#: ../../ref/utils.txt:380
msgid ""
"Return extra attributes to place on the root (i.e. feed/channel) element. "
"Called from ``write()``."
msgstr ""

# e62ae951b9b44e9491b75660ab0a3ef2
#: ../../ref/utils.txt:385
msgid ""
"Add elements in the root (i.e. feed/channel) element. Called from ``write()"
"``."
msgstr ""

# d39bbf71c40e4a6f9d3fccc2af00247a
#: ../../ref/utils.txt:390
msgid ""
"Return extra attributes to place on each item (i.e. item/entry) element."
msgstr ""

# 77aa8817832c4ce6870a2fd09ba35466
#: ../../ref/utils.txt:395
msgid "Add elements on each item (i.e. item/entry) element."
msgstr ""

# 34468310dad74ea790d4d9294b20115d
#: ../../ref/utils.txt:399
msgid ""
"Outputs the feed in the given encoding to ``outfile``, which is a file-like "
"object. Subclasses should override this."
msgstr ""

# 591d2c7324254aeea23652fc6462b98e
#: ../../ref/utils.txt:404
msgid "Returns the feed in the given encoding as a string."
msgstr ""

# 14af9a4498fb4d4a9881c352b900af4c
#: ../../ref/utils.txt:408
msgid ""
"Returns the latest item's ``pubdate``. If none of them have a ``pubdate``, "
"this returns the current date/time."
msgstr ""

# 82637ca97ccd44cfb7c5c3346b93d282
#: ../../ref/utils.txt:412
msgid "Enclosure"
msgstr ""

# e1cd9a5709ec4f07aad8b3333aef51e5
#: ../../ref/utils.txt:416
msgid "Represents an RSS enclosure"
msgstr ""

# f4097c93a7584a94b1994b72f3123ae1
#: ../../ref/utils.txt:419
msgid "RssFeed"
msgstr ""

# 0e91b7fd2f9246ca83b18557a0ac460c
#: ../../ref/utils.txt:424
msgid "Rss201rev2Feed"
msgstr ""

# f8e99044ee3f419db9f0b365f6d070bf
#: ../../ref/utils.txt:428
msgid "Spec: http://cyber.law.harvard.edu/rss/rss.html"
msgstr ""

# 18639e93a285435195b9581bf5b0fd4e
#: ../../ref/utils.txt:431
msgid "RssUserland091Feed"
msgstr ""

# 6c24055a75f348a8beabc6b7481787dd
#: ../../ref/utils.txt:435
msgid "Spec: http://backend.userland.com/rss091"
msgstr ""

# 2da184a8cc2e45799c8df0628f9653c9
#: ../../ref/utils.txt:438
msgid "Atom1Feed"
msgstr ""

# e18777ff9c714eeca26c932eda24c2e7
#: ../../ref/utils.txt:442
msgid ""
"Spec: http://www.atomenabled.org/developers/syndication/atom-format-spec.php"
msgstr ""

# b8129651f68b48538da1edf6c3d124d9
#: ../../ref/utils.txt:445
msgid "``django.utils.functional``"
msgstr ""

# 129b1b3e9ce34067a672257e75f33867
#: ../../ref/utils.txt:452
msgid ""
"Django offers many utility functions (particularly in ``django.utils``) that "
"take a string as their first argument and do something to that string. These "
"functions are used by template filters as well as directly in other code."
msgstr ""

# 56bc595c018b44de8af6216123b5e793
#: ../../ref/utils.txt:456
msgid ""
"If you write your own similar functions and deal with translations, you'll "
"face the problem of what to do when the first argument is a lazy translation "
"object. You don't want to convert it to a string immediately, because you "
"might be using this function outside of a view (and hence the current "
"thread's locale setting will not be correct)."
msgstr ""

# f4dbfb34bc1242c1bc4c24f8c0b4d484
#: ../../ref/utils.txt:462
msgid ""
"For cases like this, use the ``django.utils.functional.allow_lazy()`` "
"decorator. It modifies the function so that *if* it's called with a lazy "
"translation as the first argument, the function evaluation is delayed until "
"it needs to be converted to a string."
msgstr ""

# ddec12e51c36439482e2742159bde565
#: ../../ref/utils.txt:467 ../../ref/utils.txt:562 ../../ref/utils.txt:573
#: ../../ref/utils.txt:709
msgid "For example::"
msgstr ""

# 6a48f97cbad94ceebb53e56225881b35
#: ../../ref/utils.txt:476
msgid ""
"The ``allow_lazy()`` decorator takes, in addition to the function to "
"decorate, a number of extra arguments (``*args``) specifying the type(s) "
"that the original function can return. Usually, it's enough to include "
"``unicode`` here and ensure that your function returns only Unicode strings."
msgstr ""

# a75bfadfccb048cdaf0eccbc3c38a419
#: ../../ref/utils.txt:481
msgid ""
"Using this decorator means you can write your function and assume that the "
"input is a proper string, then add support for lazy translation objects at "
"the end."
msgstr ""

# 93488115d1074252bbd5d80cd2782ddb
#: ../../ref/utils.txt:486
msgid "``django.utils.html``"
msgstr ""

# 2ed70d84494548d58d494507005a9b59
#: ../../ref/utils.txt:491
msgid ""
"Usually you should build up HTML using Django's templates to make use of its "
"autoescape mechanism, using the utilities in :mod:`django.utils.safestring` "
"where appropriate. This module provides some additional low level "
"utilitiesfor escaping HTML."
msgstr ""

# 23d2ee2890094dfbbe0fd8fbc7d7b0ee
#: ../../ref/utils.txt:498
msgid ""
"Returns the given text with ampersands, quotes and angle brackets encoded "
"for use in HTML. The input is first passed through :func:`~django.utils."
"encoding.force_text` and the output has :func:`~django.utils.safestring."
"mark_safe` applied."
msgstr ""

# 28b62fdc50a34624bffcb58affbda570
#: ../../ref/utils.txt:505
msgid ""
"Similar to ``escape()``, except that it doesn't operate on pre-escaped "
"strings, so it will not double escape."
msgstr ""

# a1ed0ef9b15047128003d79d5aa1b93d
#: ../../ref/utils.txt:510
msgid ""
"This is similar to `str.format`_, except that it is appropriate for building "
"up HTML fragments. All args and kwargs are passed through :func:"
"`conditional_escape` before being passed to ``str.format``."
msgstr ""

# 3c1a2fea72dd4b4e82c6bdb06d657462
#: ../../ref/utils.txt:514
msgid ""
"For the case of building up small HTML fragments, this function is to be "
"preferred over string interpolation using ``%`` or ``str.format`` directly, "
"because it applies escaping to all arguments - just like the Template system "
"applies escaping by default."
msgstr ""

# aff14dc7591143eda50144aa54020c14
#: ../../ref/utils.txt:519
msgid "So, instead of writing:"
msgstr ""

# e285464d89674ac2b9302c370122c4d9
#: ../../ref/utils.txt:528
msgid "you should instead use:"
msgstr ""

# 8fce061108764ad39c0d3367368c899f
#: ../../ref/utils.txt:535
msgid ""
"This has the advantage that you don't need to apply :func:`escape` to each "
"argument and risk a bug and an XSS vulnerability if you forget one."
msgstr ""

# 0818505b000549389590a5c039bf1e60
#: ../../ref/utils.txt:538
msgid ""
"Note that although this function uses ``str.format`` to do the "
"interpolation, some of the formatting options provided by `str.format`_ (e."
"g. number formatting) will not work, since all arguments are passed through :"
"func:`conditional_escape` which (ultimately) calls :func:`~django.utils."
"encoding.force_text` on the values."
msgstr ""

# 2948398939ef4927971338582a269e44
#: ../../ref/utils.txt:546
msgid ""
"A wrapper of :func:`format_html`, for the common case of a group of "
"arguments that need to be formatted using the same format string, and then "
"joined using ``sep``. ``sep`` is also passed through :func:"
"`conditional_escape`."
msgstr ""

# 820ffc630b574301a6962c69b520aa43
#: ../../ref/utils.txt:551
msgid ""
"``args_generator`` should be an iterator that returns the sequence of "
"``args`` that will be passed to :func:`format_html`. For example::"
msgstr ""

# d9b40a64ed704732b365950c9cfe68b0
#: ../../ref/utils.txt:559
msgid ""
"Removes anything that looks like an html tag from the string, that is "
"anything contained within ``<>``."
msgstr ""

# f576af6634c04703a9e77b2d3b24c721
#: ../../ref/utils.txt:566
msgid ""
"If ``value`` is ``\"<b>Joel</b> <button>is</button> a <span>slug</span>\"`` "
"the return value will be ``\"Joel is a slug\"``."
msgstr ""

# d0a81f9c7fff40cbbf0ca702c46c3c41
#: ../../ref/utils.txt:571
msgid "Removes a list of [X]HTML tag names from the output."
msgstr ""

# dd440c8dca1d4176a63a006af5563a1b
#: ../../ref/utils.txt:577
msgid ""
"If ``value`` is ``\"<b>Joel</b> <button>is</button> a <span>slug</span>\"`` "
"the return value will be ``\"Joel <button>is</button> a slug\"``."
msgstr ""

# 99c1c9de59a845948014e9d8cff6a110
#: ../../ref/utils.txt:580
msgid "Note that this filter is case-sensitive."
msgstr ""

# 968eac1a7c2f4c7592e3b887217d1c20
#: ../../ref/utils.txt:582
msgid ""
"If ``value`` is ``\"<B>Joel</B> <button>is</button> a <span>slug</span>\"`` "
"the return value will be ``\"<B>Joel</B> <button>is</button> a slug\"``."
msgstr ""

# 73f503c50e5d450db3731b5b2eccf1e4
#: ../../ref/utils.txt:588
msgid "``django.utils.http``"
msgstr ""

# f4a8bb1d96d4426d9c39012ddf6388b8
#: ../../ref/utils.txt:595
msgid ""
"A version of Python's ``urllib.quote()`` function that can operate on "
"unicode strings. The url is first UTF-8 encoded before quoting. The returned "
"string can safely be used as part of an argument to a subsequent ``iri_to_uri"
"()`` call without double-quoting occurring. Employs lazy execution."
msgstr ""

# f4a0334763a742c581f6239747dd0c8a
#: ../../ref/utils.txt:603
msgid ""
"A version of Python's urllib.quote_plus() function that can operate on "
"unicode strings. The url is first UTF-8 encoded before quoting. The returned "
"string can safely be used as part of an argument to a subsequent ``iri_to_uri"
"()`` call without double-quoting occurring. Employs lazy execution."
msgstr ""

# 4bef13737ffe4cd4beaf24160fb8b4e3
#: ../../ref/utils.txt:611
msgid ""
"A version of Python's urllib.urlencode() function that can operate on "
"unicode strings. The parameters are first case to UTF-8 encoded strings and "
"then encoded as per normal."
msgstr ""

# 72d06d2c3866466ba956fd2d938d2d0c
#: ../../ref/utils.txt:617
msgid ""
"Formats the time to ensure compatibility with Netscape's cookie standard."
msgstr ""

# 458de638ea134ce4b00f1f69fa7a5af7
# c0ba4d7834cf45adab3a56979444ca6d
#: ../../ref/utils.txt:619 ../../ref/utils.txt:630
msgid ""
"Accepts a floating point number expressed in seconds since the epoch in UTC--"
"such as that outputted by ``time.time()``. If set to ``None``, defaults to "
"the current time."
msgstr ""

# 568a15390236428daf9be4c2a9f1f89a
#: ../../ref/utils.txt:623
msgid "Outputs a string in the format ``Wdy, DD-Mon-YYYY HH:MM:SS GMT``."
msgstr ""

# bd33f93a89db45988697c1c1f44637a5
#: ../../ref/utils.txt:627
msgid ""
"Formats the time to match the :rfc:`1123` date format as specified by HTTP :"
"rfc:`2616#section-3.3.1` section 3.3.1."
msgstr ""

# a91281aa5d8d46f58a3d260202d930e4
#: ../../ref/utils.txt:634
msgid "Outputs a string in the format ``Wdy, DD Mon YYYY HH:MM:SS GMT``."
msgstr ""

# a8932061969f435a90ce240a501f407a
#: ../../ref/utils.txt:638
msgid ""
"Converts a base 36 string to an integer. On Python 2 the output is "
"guaranteed to be an ``int`` and not a ``long``."
msgstr ""

# 304d170078f34a4887b1481f483ccdc7
#: ../../ref/utils.txt:643
msgid ""
"Converts a positive integer to a base 36 string. On Python 2 ``i`` must be "
"smaller than :data:`sys.maxint`."
msgstr ""

# cb51d2a7d46745c0b172aa8c0647a001
#: ../../ref/utils.txt:647
msgid "``django.utils.safestring``"
msgstr ""

# 4e7224e2669e4eb0a7752e1328bf32a7
#: ../../ref/utils.txt:652
msgid ""
"Functions and classes for working with \"safe strings\": strings that can be "
"displayed safely without further escaping in HTML. Marking something as a "
"\"safe string\" means that the producer of the string has already turned "
"characters that should not be interpreted by the HTML engine (e.g. '<') into "
"the appropriate entities."
msgstr ""

# acdbf4c24509443387919f7ccd8d4376
#: ../../ref/utils.txt:662
msgid ""
"A ``bytes`` subclass that has been specifically marked as \"safe\" (requires "
"no further escaping) for HTML output purposes."
msgstr ""

# 827bd31f125648bfb80162ac45a0c26a
#: ../../ref/utils.txt:667
msgid ""
"A ``str`` subclass that has been specifically marked as \"safe\" (requires "
"no further escaping) for HTML output purposes. This is :class:`SafeBytes` on "
"Python 2 and :class:`SafeText` on Python 3."
msgstr ""

# a16f9389d8c04a30b2d719a02bdac3b0
#: ../../ref/utils.txt:675
msgid ""
"A ``str`` (in Python 3) or ``unicode`` (in Python 2) subclass that has been "
"specifically marked as \"safe\" for HTML output purposes."
msgstr ""

# b0e6c5676a1f4ef4b82ce84bea121aa6
#: ../../ref/utils.txt:680
msgid "Historical name of :class:`SafeText`. Only available under Python 2."
msgstr ""

# 712173460b834e84a7206c91639830be
#: ../../ref/utils.txt:684
msgid ""
"Explicitly mark a string as safe for (HTML) output purposes. The returned "
"object can be used everywhere a string or unicode object is appropriate."
msgstr ""

# 45accc9025de4cc08e0166814833c5ad
#: ../../ref/utils.txt:687
msgid "Can be called multiple times on a single string."
msgstr ""

# c707e835c4764a82af2c33796c192591
#: ../../ref/utils.txt:691
msgid ""
"Explicitly mark a string as requiring HTML escaping upon output. Has no "
"effect on ``SafeData`` subclasses."
msgstr ""

# 9fb85b4b9d17425d939795bce9f7013e
#: ../../ref/utils.txt:694
msgid ""
"Can be called multiple times on a single string (the resulting escaping is "
"only applied once)."
msgstr ""

# c5bcecc1ab3a4bf888116fa6470366bb
#: ../../ref/utils.txt:698
msgid "``django.utils.text``"
msgstr ""

# 4b8592c1c58f436aa4d82dc2b04f14f5
#: ../../ref/utils.txt:705
msgid ""
"Converts to lowercase, removes non-word characters (alphanumerics and "
"underscores) and converts spaces to hyphens. Also strips leading and "
"trailing whitespace."
msgstr ""

# 2aa03eabd8084c2998fd4d2404e9221c
#: ../../ref/utils.txt:713
msgid ""
"If ``value`` is ``\"Joel is a slug\"``, the output will be ``\"joel-is-a-slug"
"\"``."
msgstr ""

# 9a3f2fca6a6c47d59ce660ad0fdd5023
#: ../../ref/utils.txt:716
msgid "``django.utils.translation``"
msgstr ""

# 8eecaf48faca4606a2845e119c3da916
#: ../../ref/utils.txt:721
msgid ""
"For a complete discussion on the usage of the following see the :doc:"
"`translation documentation </topics/i18n/translation>`."
msgstr ""

# 93fcaf2343814b5781c9587b1e30232f
#: ../../ref/utils.txt:726
msgid "Translates ``message`` and returns it in a UTF-8 bytestring"
msgstr ""

# f5d378df011f405b926b5dd782bb3e8d
#: ../../ref/utils.txt:730
msgid "Translates ``message`` and returns it in a unicode string"
msgstr ""

# 2e6e59baf84a49a087618838b9389509
#: ../../ref/utils.txt:734
msgid ""
"Translates ``message`` given the ``context`` and returns it in a unicode "
"string."
msgstr ""

# 42c7cb0489a5450cb90be2bf56783605
#: ../../ref/utils.txt:737
msgid "For more information, see :ref:`contextual-markers`."
msgstr ""

# 0be7edf0aec5412797eff6245a6acc6f
# ddb257bcf2c14de8a9097df3ac0b33fa
#: ../../ref/utils.txt:743 ../../ref/utils.txt:774
msgid "Same as the non-lazy versions above, but using lazy execution."
msgstr ""

# b5374c550ef34ee3ab8123e0f23ad04e
# 8a52d6f217a743cfb94cad038587ffaf
#: ../../ref/utils.txt:745 ../../ref/utils.txt:776
msgid "See :ref:`lazy translations documentation <lazy-translations>`."
msgstr ""

# b8d3c5fde1254ab0bfc6bbc4cb066850
#: ../../ref/utils.txt:750
msgid ""
"Marks strings for translation but doesn't translate them now. This can be "
"used to store strings in global variables that should stay in the base "
"language (because they might be used externally) and will be translated "
"later."
msgstr ""

# ee4c197f7d804f3e85d5eecf6088931f
#: ../../ref/utils.txt:757
msgid ""
"Translates ``singular`` and ``plural`` and returns the appropriate string "
"based on ``number`` in a UTF-8 bytestring."
msgstr ""

# 7bd2b04c99d64063b742fa6053c8c477
#: ../../ref/utils.txt:762
msgid ""
"Translates ``singular`` and ``plural`` and returns the appropriate string "
"based on ``number`` in a unicode string."
msgstr ""

# fb3924ac79ee4ea6a331cadae1017e8e
#: ../../ref/utils.txt:767
msgid ""
"Translates ``singular`` and ``plural`` and returns the appropriate string "
"based on ``number`` and the ``context`` in a unicode string."
msgstr ""

# 09578a5174ff4d549e1c7baec7b21fc6
#: ../../ref/utils.txt:780
msgid ""
"Lazy variant of string concatenation, needed for translations that are "
"constructed from multiple parts."
msgstr ""

# 538d63415cd44575903de22bb7ad6adc
#: ../../ref/utils.txt:785
msgid ""
"Fetches the translation object for a given language and installs it as the "
"current translation object for the current thread."
msgstr ""

# c73c6dc975f949f1bd3b9ec8a3d5b5dc
#: ../../ref/utils.txt:790
msgid ""
"De-installs the currently active translation object so that further _ calls "
"will resolve against the default translation object, again."
msgstr ""

# 70fcc4b5eeb0480db8db4428ba0b6b4d
#: ../../ref/utils.txt:795
msgid ""
"Makes the active translation object a NullTranslations() instance. This is "
"useful when we want delayed translations to appear as the original string "
"for some reason."
msgstr ""

# becc7105e54b4d90a2c58c6d6f46d1eb
#: ../../ref/utils.txt:801
msgid ""
"A Python context manager that uses :func:`django.utils.translation.activate` "
"to fetch the translation object for a given language, installing it as the "
"translation object for the current thread and reinstall the previous active "
"language on exit. Optionally it can simply deinstall the temporary "
"translation on exit with :func:`django.utils.translation.deactivate` if the "
"deactivate argument is True. If you pass None as the language argument, a "
"NullTranslations() instance is installed while the context is active."
msgstr ""

# ea799c746eb240dd96d1688c3a64edff
#: ../../ref/utils.txt:812
msgid "Returns the currently selected language code."
msgstr ""

# 60fe88bdfa744083b695baeff2e0ebb9
#: ../../ref/utils.txt:816
msgid "Returns selected language's BiDi layout:"
msgstr ""

# e3fe14ebbf42400a81f42f2388e5609e
#: ../../ref/utils.txt:818
msgid "``False`` = left-to-right layout"
msgstr ""

# e1c4acf0d40d40f683c17dd514bd191f
#: ../../ref/utils.txt:819
msgid "``True`` = right-to-left layout"
msgstr ""

# 48b0f14169794ec5a2e3efe6f497e928
#: ../../ref/utils.txt:823
msgid ""
"Analyzes the request to find what language the user wants the system to "
"show. Only languages listed in settings.LANGUAGES are taken into account. If "
"the user requests a sublanguage where we have a main language, we send out "
"the main language."
msgstr ""

# d54b2c988f494c07944821baf6ef6f84
#: ../../ref/utils.txt:828
msgid ""
"If ``check_path`` is ``True``, the function first checks the requested URL "
"for whether its path begins with a language code listed in the :setting:"
"`LANGUAGES` setting."
msgstr ""

# 752c071b995242aba39bd1b1426b6fb0
#: ../../ref/utils.txt:834
msgid "Turns a language name (en-us) into a locale name (en_US)."
msgstr ""

# 58b7d61154d447a7b4bf54ed4eb6af31
#: ../../ref/utils.txt:838
msgid ""
"Turns a Django template into something that is understood by xgettext. It "
"does so by translating the Django translation tags into standard gettext "
"function invocations."
msgstr ""

# d64e77ffdbbe4d3885cc0efa1095d2e0
#: ../../ref/utils.txt:845
msgid "``django.utils.timezone``"
msgstr ""

# 913dfd0231734c8894fd5865e1ae8668
#: ../../ref/utils.txt:852
msgid ":class:`~datetime.tzinfo` instance that represents UTC."
msgstr ""

# 4b2a06efb9cf48e2b8fb11545d0f56d3
#: ../../ref/utils.txt:856
msgid ""
"Returns a :class:`~datetime.tzinfo` instance that represents the :ref:"
"`default time zone <default-current-time-zone>`."
msgstr ""

# 41f8eaebde1149419df891fcb81f6cb9
#: ../../ref/utils.txt:861
msgid ""
"Returns the name of the :ref:`default time zone <default-current-time-zone>`."
msgstr ""

# 187ef4a72af943048f2557aa5b1c18e8
#: ../../ref/utils.txt:866
msgid ""
"Returns a :class:`~datetime.tzinfo` instance that represents the :ref:"
"`current time zone <default-current-time-zone>`."
msgstr ""

# 89344f2bd2d44805a78ea06982eb7b3e
#: ../../ref/utils.txt:871
msgid ""
"Returns the name of the :ref:`current time zone <default-current-time-zone>`."
msgstr ""

# 3163b7595cea42cbb45c17e0a8522d8a
#: ../../ref/utils.txt:876
msgid ""
"Sets the :ref:`current time zone <default-current-time-zone>`. The "
"``timezone`` argument must be an instance of a :class:`~datetime.tzinfo` "
"subclass or, if pytz_ is available, a time zone name."
msgstr ""

# e77f73e070454bba802683a6757c9bc6
#: ../../ref/utils.txt:882
msgid "Unsets the :ref:`current time zone <default-current-time-zone>`."
msgstr ""

# e364e41cc91648f19c1ccfaec98d3fb9
#: ../../ref/utils.txt:886
msgid ""
"This is a Python context manager that sets the :ref:`current time zone "
"<default-current-time-zone>` on entry with :func:`activate()`, and restores "
"the previously active time zone on exit. If the ``timezone`` argument is "
"``None``, the :ref:`current time zone <default-current-time-zone>` is unset "
"on entry with :func:`deactivate()` instead."
msgstr ""

# e6be2af934684f9780c45bdbbd487c73
#: ../../ref/utils.txt:896
msgid ""
"Converts an aware :class:`~datetime.datetime` to a different time zone, by "
"default the :ref:`current time zone <default-current-time-zone>`."
msgstr ""

# 018e8a82333f4307a6c13fbedde39375
#: ../../ref/utils.txt:899
msgid ""
"This function doesn't work on naive datetimes; use :func:`make_aware` "
"instead."
msgstr ""

# cb8bd41755ca4b8ba4e7fa2967a86864
#: ../../ref/utils.txt:904
msgid ""
"Returns an aware or naive :class:`~datetime.datetime` that represents the "
"current point in time when :setting:`USE_TZ` is ``True`` or ``False`` "
"respectively."
msgstr ""

# 9e34f1a291b84233a8d7221760613bb0
#: ../../ref/utils.txt:910
msgid ""
"Returns ``True`` if ``value`` is aware, ``False`` if it is naive. This "
"function assumes that ``value`` is a :class:`~datetime.datetime`."
msgstr ""

# aae84e4f6fe74907bbf02c3b1797694b
#: ../../ref/utils.txt:915
msgid ""
"Returns ``True`` if ``value`` is naive, ``False`` if it is aware. This "
"function assumes that ``value`` is a :class:`~datetime.datetime`."
msgstr ""

# efa94f3c026544b9be522be253bf6d0d
#: ../../ref/utils.txt:920
msgid ""
"Returns an aware :class:`~datetime.datetime` that represents the same point "
"in time as ``value`` in ``timezone``, ``value`` being a naive :class:"
"`~datetime.datetime`."
msgstr ""

# a4b0598099274f67ba40fb0658d511fd
#: ../../ref/utils.txt:924
msgid ""
"This function can raise an exception if ``value`` doesn't exist or is "
"ambiguous because of DST transitions."
msgstr ""

# 74888f2e6f4144a1b78e785b380f4e51
#: ../../ref/utils.txt:929
msgid ""
"Returns an naive :class:`~datetime.datetime` that represents in "
"``timezone``  the same point in time as ``value``, ``value`` being an aware :"
"class:`~datetime.datetime`"
msgstr ""

# ba17972e615b40d7b4a3f21d00bb5acd
#: ../../ref/utils.txt:936
msgid "``django.utils.tzinfo``"
msgstr ""

# 4c5afb66eaad4419b83f3d925f57ede1
#: ../../ref/utils.txt:943
msgid "Fixed offset in minutes east from UTC."
msgstr ""

# eadb54f8fb35420db278e5e12f59d4f9
#: ../../ref/utils.txt:947
msgid "Proxy timezone information from time module."
msgstr ""
