# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-02-15 15:13\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 785183e08a1f4df7897b923f842fa50c
#: ../../ref/utils.txt:3
msgid "Django Utils"
msgstr ""

# 4cc153c64303424aa3ad32aeed46a00c
#: ../../ref/utils.txt:8
msgid ""
"This document covers all stable modules in ``django.utils``. Most of the "
"modules in ``django.utils`` are designed for internal use and only the "
"following parts can be considered stable and thus backwards compatible as "
"per the :ref:`internal release deprecation policy <internal-release-"
"deprecation-policy>`."
msgstr ""

# 75232a2214024719affbdc614ff40ba2
#: ../../ref/utils.txt:14
msgid "``django.utils.cache``"
msgstr ""

# 319e205359a6476eb6c52fef44fd117d
#: ../../ref/utils.txt:19
msgid ""
"This module contains helper functions for controlling caching. It does so by "
"managing the ``Vary`` header of responses. It includes functions to patch "
"the header of response objects directly and decorators that change functions "
"to do that header-patching themselves."
msgstr ""

# 492d145b75024ab3aa22602687f0de5a
#: ../../ref/utils.txt:24
msgid ""
"For information on the ``Vary`` header, see :rfc:`2616#section-14.44` "
"section 14.44."
msgstr ""

# 3208d473315a4cf8ada58c6562a19270
#: ../../ref/utils.txt:27
msgid ""
"Essentially, the ``Vary`` HTTP header defines which headers a cache should "
"take into account when building its cache key. Requests with the same path "
"but different header content for headers named in ``Vary`` need to get "
"different cache keys to prevent delivery of wrong content."
msgstr ""

# 784f202cc2ba4d3293ccc318a2ccf25f
#: ../../ref/utils.txt:32
msgid ""
"For example, :doc:`internationalization </topics/i18n/index>` middleware "
"would need to distinguish caches by the ``Accept-language`` header."
msgstr ""

# c2aad0c527e141f68aa8b37bfe18994c
#: ../../ref/utils.txt:37
msgid ""
"This function patches the ``Cache-Control`` header by adding all keyword "
"arguments to it. The transformation is as follows:"
msgstr ""

# 514c252f600f4a26b38594bf27ddbfd9
#: ../../ref/utils.txt:40
msgid ""
"All keyword parameter names are turned to lowercase, and underscores are "
"converted to hyphens."
msgstr ""

# b295363ab71a450bb35fcbbfa2bf2a83
#: ../../ref/utils.txt:42
msgid ""
"If the value of a parameter is ``True`` (exactly ``True``, not just a true "
"value), only the parameter name is added to the header."
msgstr ""

# 4f27f277c8c94bdf962f37cf7c51fd62
#: ../../ref/utils.txt:44
msgid ""
"All other parameters are added with their value, after applying ``str()`` to "
"it."
msgstr ""

# f1aa8e5d2a9046f982837ff0454f2ab1
#: ../../ref/utils.txt:49
msgid ""
"Returns the max-age from the response Cache-Control header as an integer (or "
"``None`` if it wasn't found or wasn't an integer)."
msgstr ""

# ee1b39ff90ce4144b1bdd396948f8bca
#: ../../ref/utils.txt:54
msgid "Adds some useful headers to the given ``HttpResponse`` object:"
msgstr ""

# 7eb15cb317dd455196df3fced00e4381
#: ../../ref/utils.txt:56
msgid "``ETag``"
msgstr ""

# fca2a2c643804605a7cd93f68f213cbf
#: ../../ref/utils.txt:57
msgid "``Last-Modified``"
msgstr ""

# 644c10db19b34c1989c88ac254d23406
#: ../../ref/utils.txt:58
msgid "``Expires``"
msgstr ""

# 13b454e6253743b59810d04b2e4077db
#: ../../ref/utils.txt:59
msgid "``Cache-Control``"
msgstr ""

# 8b0c7d46c1084608bfd4c1c436083d3e
#: ../../ref/utils.txt:61
msgid "Each header is only added if it isn't already set."
msgstr ""

# e4dd295718284faabe80fcdf67b942ce
#: ../../ref/utils.txt:63
msgid ""
"``cache_timeout`` is in seconds. The :setting:`CACHE_MIDDLEWARE_SECONDS` "
"setting is used by default."
msgstr ""

# 593dd419fb5f431fbb9f678125e12b9a
#: ../../ref/utils.txt:68
msgid ""
"Adds headers to a response to indicate that a page should never be cached."
msgstr ""

# d887566e0d5743958f9a68e81675e64f
#: ../../ref/utils.txt:72
msgid ""
"Adds (or updates) the ``Vary`` header in the given ``HttpResponse`` object. "
"``newheaders`` is a list of header names that should be in ``Vary``. "
"Existing headers in ``Vary`` aren't removed."
msgstr ""

# c952dc49007b4765843d3964e888debc
#: ../../ref/utils.txt:78
msgid ""
"Returns a cache key based on the request path. It can be used in the request "
"phase because it pulls the list of headers to take into account from the "
"global path registry and uses those to build a cache key to check against."
msgstr ""

# c4e13881d58941c290bec5dc1328aef4
#: ../../ref/utils.txt:83
msgid ""
"If there is no headerlist stored, the page needs to be rebuilt, so this "
"function returns ``None``."
msgstr ""

# 2a5f8c11fb9c4422844b63baef5441c6
#: ../../ref/utils.txt:88
msgid ""
"Learns what headers to take into account for some request path from the "
"response object. It stores those headers in a global path registry so that "
"later access to that path will know what headers to take into account "
"without building the response object itself. The headers are named in the "
"``Vary`` header of the response, but we want to prevent response generation."
msgstr ""

# 82c19aeefbc74f3dbd0c520c6bbaf0ef
#: ../../ref/utils.txt:95
msgid ""
"The list of headers to use for cache key generation is stored in the same "
"cache as the pages themselves. If the cache ages some data out of the cache, "
"this just means that we have to build the response once to get at the Vary "
"header and so at the list of headers to use for the cache key."
msgstr ""

# b81b4ad7f5054354b2092ae4f4b62f15
#: ../../ref/utils.txt:101
msgid "``django.utils.datastructures``"
msgstr ""

# 3c3f77413f714584a9ad52e173b4629b
#: ../../ref/utils.txt:108
msgid ""
"The :class:`django.utils.datastructures.SortedDict` class is a dictionary "
"that keeps its keys in the order in which they're inserted. ``SortedDict`` "
"adds two additional methods to the standard Python ``dict`` class:"
msgstr ""

# fdbcab98edb646d1b9ad9bd874f13233
#: ../../ref/utils.txt:115
msgid "Inserts the key, value pair before the item with the given index."
msgstr ""

# c831d856180845c2981fddd880dcb676
#: ../../ref/utils.txt:119
msgid "Returns the value of the item at the given zero-based index."
msgstr ""

# 92177af0ba8145fe8dc3fd32305e51c3
#: ../../ref/utils.txt:122
msgid "Creating a new SortedDict"
msgstr ""

# a5eb28d5c58442af915e6ff1642f1e87
#: ../../ref/utils.txt:124
msgid ""
"Creating a new ``SortedDict`` must be done in a way where ordering is "
"guaranteed. For example::"
msgstr ""

# bb085c1c2f96444f82191fe1bb631056
#: ../../ref/utils.txt:129
msgid ""
"will not work. Passing in a basic Python ``dict`` could produce unreliable "
"results. Instead do::"
msgstr ""

# 3c8770697709417f84e560c38420180a
#: ../../ref/utils.txt:135
msgid "``django.utils.dateparse``"
msgstr ""

# d92d481c9ae241a89c5f945ce08cc193
#: ../../ref/utils.txt:142
msgid "The functions defined in this module share the following properties:"
msgstr ""

# c46581a3f64d40689800a7607aa17aef
#: ../../ref/utils.txt:144
msgid ""
"They raise :exc:`ValueError` if their input is well formatted but isn't a "
"valid date or time."
msgstr ""

# a216d780664b43d88f7900aeddde9eb8
#: ../../ref/utils.txt:146
msgid "They return ``None`` if it isn't well formatted at all."
msgstr ""

# 94bf1fe2c43a4358b3b0963b778fbfa6
#: ../../ref/utils.txt:147
msgid ""
"They accept up to picosecond resolution in input, but they truncate it to "
"microseconds, since that's what Python supports."
msgstr ""

# c8e9ac0745ad45339108267579e43a98
#: ../../ref/utils.txt:152
msgid "Parses a string and returns a :class:`datetime.date`."
msgstr ""

# 2dbe3c6e381b41fe9c9dcad1bec36985
#: ../../ref/utils.txt:156
msgid "Parses a string and returns a :class:`datetime.time`."
msgstr ""

# 54bb678c69e34fdba1f5d0730fd2bef4
#: ../../ref/utils.txt:158
msgid ""
"UTC offsets aren't supported; if ``value`` describes one, the result is "
"``None``."
msgstr ""

# 152611dfe9364aeea9a8bca307e6d95e
#: ../../ref/utils.txt:163
msgid "Parses a string and returns a :class:`datetime.datetime`."
msgstr ""

# 68fcd10b91634416abdf1c77f42ca518
#: ../../ref/utils.txt:165
msgid ""
"UTC offsets are supported; if ``value`` describes one, the result's "
"``tzinfo`` attribute is a :class:`~django.utils.tzinfo.FixedOffset` instance."
msgstr ""

# c66b3db794204a3c9acc853ab71eee6e
#: ../../ref/utils.txt:170
msgid "``django.utils.encoding``"
msgstr ""

# 1ed58b5f7a614915bc1227de6a828950
#: ../../ref/utils.txt:177
msgid ""
"A class whose ``__str__`` returns its ``__unicode__`` as a UTF-8 bytestring. "
"Useful as a mix-in."
msgstr ""

# 32de0f2498d84117aa0f46714cfb4ee1
#: ../../ref/utils.txt:182
msgid ""
"Returns a ``unicode`` object representing ``s``. Treats bytestrings using "
"the 'encoding' codec."
msgstr ""

# 784dbf486b534934b4ba0a951b139580
# 887c040210aa4e10b59b2a6d2a60283d
# 8dcf81bab7dc4d83a3ecdc80741ef51f
#: ../../ref/utils.txt:185 ../../ref/utils.txt:200 ../../ref/utils.txt:208
msgid ""
"If ``strings_only`` is ``True``, don't convert (some) non-string-like "
"objects."
msgstr ""

# 00b2c0354fc84656b897d5dd268c1caf
#: ../../ref/utils.txt:190
msgid "Determine if the object instance is of a protected type."
msgstr ""

# 851071e232134b44a340a8afa84ddde6
#: ../../ref/utils.txt:192
msgid ""
"Objects of protected types are preserved as-is when passed to ``force_unicode"
"(strings_only=True)``."
msgstr ""

# 5afe63a1fc8a4c42b0caf2e558021a4e
#: ../../ref/utils.txt:197
msgid ""
"Similar to ``smart_unicode``, except that lazy instances are resolved to "
"strings, rather than kept as lazy objects."
msgstr ""

# d9f1246ce84b41b08119ea9225206a21
#: ../../ref/utils.txt:205
msgid ""
"Returns a bytestring version of ``s``, encoded as specified in ``encoding``."
msgstr ""

# 7219eb9df18948c789efa1d528f77972
#: ../../ref/utils.txt:213
msgid ""
"Convert an Internationalized Resource Identifier (IRI) portion to a URI "
"portion that is suitable for inclusion in a URL."
msgstr ""

# 8317c98b422345e1bcbafa84f004d6e1
#: ../../ref/utils.txt:216
msgid ""
"This is the algorithm from section 3.1 of :rfc:`3987#section-3.1`. However, "
"since we are assuming input is either UTF-8 or unicode already, we can "
"simplify things a little from the full method."
msgstr ""

# 99ec73792a2a49bcbff248ec98a9c7fc
#: ../../ref/utils.txt:220
msgid "Returns an ASCII string containing the encoded result."
msgstr ""

# 10f3029f1be349eca5b823fa4a52b7d5
#: ../../ref/utils.txt:223
msgid "``django.utils.feedgenerator``"
msgstr ""

# a3c62ac81c7f431ea914346295491a13
#: ../../ref/utils.txt:228
msgid "Sample usage::"
msgstr ""

# 9c729ae464fe4bcbac992c7c73a3aae2
#: ../../ref/utils.txt:246
msgid ""
"For simplifying the selection of a generator use ``feedgenerator."
"DefaultFeed`` which is currently ``Rss201rev2Feed``"
msgstr ""

# 28aab86510d247e4921d49db515abba1
#: ../../ref/utils.txt:249
msgid ""
"For definitions of the different versions of RSS, see: http://diveintomark."
"org/archives/2004/02/04/incompatible-rss"
msgstr ""

# 7657dc2141234a66b8153208fd7f5a1c
#: ../../ref/utils.txt:254
msgid "Creates a TagURI."
msgstr ""

# afd0077a063c4e96a1e00ad4ec86682d
#: ../../ref/utils.txt:256
msgid "See http://diveintomark.org/archives/2004/05/28/howto-atom-id"
msgstr ""

# a15bd945724941e3bccafd4a0bb2faf0
#: ../../ref/utils.txt:259
msgid "SyndicationFeed"
msgstr ""

# b1810d56e1ea450197ca5cd08b4470ae
#: ../../ref/utils.txt:263
msgid ""
"Base class for all syndication feeds. Subclasses should provide write()."
msgstr ""

# 365101e6a30040c48f56a6de4556d6cd
#: ../../ref/utils.txt:267
msgid ""
"Initialize the feed with the given dictionary of metadata, which applies to "
"the entire feed."
msgstr ""

# e472f99ff0304435a2e0fc8ad87d68f5
#: ../../ref/utils.txt:270
msgid ""
"Any extra keyword arguments you pass to ``__init__`` will be stored in "
"``self.feed``."
msgstr ""

# 17d5b934772a481a8d936869764d7f3c
#: ../../ref/utils.txt:273
msgid ""
"All parameters should be Unicode objects, except ``categories``, which "
"should be a sequence of Unicode objects."
msgstr ""

# 9a9917209da843d99e5f70ed1dd2739a
#: ../../ref/utils.txt:278
msgid ""
"Adds an item to the feed. All args are expected to be Python ``unicode`` "
"objects except ``pubdate``, which is a ``datetime.datetime`` object, and "
"``enclosure``, which is an instance of the ``Enclosure`` class."
msgstr ""

# 1e696675268341e3bda1245f3b9b2d61
#: ../../ref/utils.txt:286
msgid ""
"Return extra attributes to place on the root (i.e. feed/channel) element. "
"Called from ``write()``."
msgstr ""

# e62ae951b9b44e9491b75660ab0a3ef2
#: ../../ref/utils.txt:291
msgid ""
"Add elements in the root (i.e. feed/channel) element. Called from ``write()"
"``."
msgstr ""

# d39bbf71c40e4a6f9d3fccc2af00247a
#: ../../ref/utils.txt:296
msgid ""
"Return extra attributes to place on each item (i.e. item/entry) element."
msgstr ""

# 77aa8817832c4ce6870a2fd09ba35466
#: ../../ref/utils.txt:301
msgid "Add elements on each item (i.e. item/entry) element."
msgstr ""

# 34468310dad74ea790d4d9294b20115d
#: ../../ref/utils.txt:305
msgid ""
"Outputs the feed in the given encoding to ``outfile``, which is a file-like "
"object. Subclasses should override this."
msgstr ""

# 591d2c7324254aeea23652fc6462b98e
#: ../../ref/utils.txt:310
msgid "Returns the feed in the given encoding as a string."
msgstr ""

# 14af9a4498fb4d4a9881c352b900af4c
#: ../../ref/utils.txt:314
msgid ""
"Returns the latest item's ``pubdate``. If none of them have a ``pubdate``, "
"this returns the current date/time."
msgstr ""

# 82637ca97ccd44cfb7c5c3346b93d282
#: ../../ref/utils.txt:318
msgid "Enclosure"
msgstr ""

# e1cd9a5709ec4f07aad8b3333aef51e5
#: ../../ref/utils.txt:322
msgid "Represents an RSS enclosure"
msgstr ""

# f4097c93a7584a94b1994b72f3123ae1
#: ../../ref/utils.txt:325
msgid "RssFeed"
msgstr ""

# 0e91b7fd2f9246ca83b18557a0ac460c
#: ../../ref/utils.txt:330
msgid "Rss201rev2Feed"
msgstr ""

# a565e8c2e05441448fb708a6c69db3c2
#: ../../ref/utils.txt:334
msgid "Spec: http://blogs.law.harvard.edu/tech/rss"
msgstr ""

# 18639e93a285435195b9581bf5b0fd4e
#: ../../ref/utils.txt:337
msgid "RssUserland091Feed"
msgstr ""

# 6c24055a75f348a8beabc6b7481787dd
#: ../../ref/utils.txt:341
msgid "Spec: http://backend.userland.com/rss091"
msgstr ""

# 2da184a8cc2e45799c8df0628f9653c9
#: ../../ref/utils.txt:344
msgid "Atom1Feed"
msgstr ""

# e18777ff9c714eeca26c932eda24c2e7
#: ../../ref/utils.txt:348
msgid ""
"Spec: http://www.atomenabled.org/developers/syndication/atom-format-spec.php"
msgstr ""

# b8129651f68b48538da1edf6c3d124d9
#: ../../ref/utils.txt:351
msgid "``django.utils.functional``"
msgstr ""

# 129b1b3e9ce34067a672257e75f33867
#: ../../ref/utils.txt:358
msgid ""
"Django offers many utility functions (particularly in ``django.utils``) that "
"take a string as their first argument and do something to that string. These "
"functions are used by template filters as well as directly in other code."
msgstr ""

# 56bc595c018b44de8af6216123b5e793
#: ../../ref/utils.txt:362
msgid ""
"If you write your own similar functions and deal with translations, you'll "
"face the problem of what to do when the first argument is a lazy translation "
"object. You don't want to convert it to a string immediately, because you "
"might be using this function outside of a view (and hence the current "
"thread's locale setting will not be correct)."
msgstr ""

# f4dbfb34bc1242c1bc4c24f8c0b4d484
#: ../../ref/utils.txt:368
msgid ""
"For cases like this, use the ``django.utils.functional.allow_lazy()`` "
"decorator. It modifies the function so that *if* it's called with a lazy "
"translation as the first argument, the function evaluation is delayed until "
"it needs to be converted to a string."
msgstr ""

# ddec12e51c36439482e2742159bde565
#: ../../ref/utils.txt:373
msgid "For example::"
msgstr ""

# 6a48f97cbad94ceebb53e56225881b35
#: ../../ref/utils.txt:382
msgid ""
"The ``allow_lazy()`` decorator takes, in addition to the function to "
"decorate, a number of extra arguments (``*args``) specifying the type(s) "
"that the original function can return. Usually, it's enough to include "
"``unicode`` here and ensure that your function returns only Unicode strings."
msgstr ""

# a75bfadfccb048cdaf0eccbc3c38a419
#: ../../ref/utils.txt:387
msgid ""
"Using this decorator means you can write your function and assume that the "
"input is a proper string, then add support for lazy translation objects at "
"the end."
msgstr ""

# 73f503c50e5d450db3731b5b2eccf1e4
#: ../../ref/utils.txt:393
msgid "``django.utils.http``"
msgstr ""

# f4a8bb1d96d4426d9c39012ddf6388b8
#: ../../ref/utils.txt:400
msgid ""
"A version of Python's ``urllib.quote()`` function that can operate on "
"unicode strings. The url is first UTF-8 encoded before quoting. The returned "
"string can safely be used as part of an argument to a subsequent ``iri_to_uri"
"()`` call without double-quoting occurring. Employs lazy execution."
msgstr ""

# f4a0334763a742c581f6239747dd0c8a
#: ../../ref/utils.txt:408
msgid ""
"A version of Python's urllib.quote_plus() function that can operate on "
"unicode strings. The url is first UTF-8 encoded before quoting. The returned "
"string can safely be used as part of an argument to a subsequent ``iri_to_uri"
"()`` call without double-quoting occurring. Employs lazy execution."
msgstr ""

# 4bef13737ffe4cd4beaf24160fb8b4e3
#: ../../ref/utils.txt:416
msgid ""
"A version of Python's urllib.urlencode() function that can operate on "
"unicode strings. The parameters are first case to UTF-8 encoded strings and "
"then encoded as per normal."
msgstr ""

# 72d06d2c3866466ba956fd2d938d2d0c
#: ../../ref/utils.txt:422
msgid ""
"Formats the time to ensure compatibility with Netscape's cookie standard."
msgstr ""

# 458de638ea134ce4b00f1f69fa7a5af7
# c0ba4d7834cf45adab3a56979444ca6d
#: ../../ref/utils.txt:424 ../../ref/utils.txt:435
msgid ""
"Accepts a floating point number expressed in seconds since the epoch in UTC--"
"such as that outputted by ``time.time()``. If set to ``None``, defaults to "
"the current time."
msgstr ""

# 568a15390236428daf9be4c2a9f1f89a
#: ../../ref/utils.txt:428
msgid "Outputs a string in the format ``Wdy, DD-Mon-YYYY HH:MM:SS GMT``."
msgstr ""

# bd33f93a89db45988697c1c1f44637a5
#: ../../ref/utils.txt:432
msgid ""
"Formats the time to match the :rfc:`1123` date format as specified by HTTP :"
"rfc:`2616#section-3.3.1` section 3.3.1."
msgstr ""

# a91281aa5d8d46f58a3d260202d930e4
#: ../../ref/utils.txt:439
msgid "Outputs a string in the format ``Wdy, DD Mon YYYY HH:MM:SS GMT``."
msgstr ""

# 841d0d83c6f94191915bc4bfe186c131
#: ../../ref/utils.txt:443
msgid "Converts a base 36 string to an integer."
msgstr ""

# 8ad73523b65f4aeab11f1d645bebd6a5
#: ../../ref/utils.txt:447
msgid "Converts an integer to a base 36 string."
msgstr ""

# cb51d2a7d46745c0b172aa8c0647a001
#: ../../ref/utils.txt:450
msgid "``django.utils.safestring``"
msgstr ""

# 4e7224e2669e4eb0a7752e1328bf32a7
#: ../../ref/utils.txt:455
msgid ""
"Functions and classes for working with \"safe strings\": strings that can be "
"displayed safely without further escaping in HTML. Marking something as a "
"\"safe string\" means that the producer of the string has already turned "
"characters that should not be interpreted by the HTML engine (e.g. '<') into "
"the appropriate entities."
msgstr ""

# e1ab1d81f3df41688d6b6526227360ac
#: ../../ref/utils.txt:463
msgid ""
"A string subclass that has been specifically marked as \"safe\" (requires no "
"further escaping) for HTML output purposes."
msgstr ""

# 7cc8ed907a4f478ea1137379667b3c8c
#: ../../ref/utils.txt:468
msgid ""
"A unicode subclass that has been specifically marked as \"safe\" for HTML "
"output purposes."
msgstr ""

# 712173460b834e84a7206c91639830be
#: ../../ref/utils.txt:473
msgid ""
"Explicitly mark a string as safe for (HTML) output purposes. The returned "
"object can be used everywhere a string or unicode object is appropriate."
msgstr ""

# 45accc9025de4cc08e0166814833c5ad
#: ../../ref/utils.txt:476
msgid "Can be called multiple times on a single string."
msgstr ""

# c707e835c4764a82af2c33796c192591
#: ../../ref/utils.txt:480
msgid ""
"Explicitly mark a string as requiring HTML escaping upon output. Has no "
"effect on ``SafeData`` subclasses."
msgstr ""

# 9fb85b4b9d17425d939795bce9f7013e
#: ../../ref/utils.txt:483
msgid ""
"Can be called multiple times on a single string (the resulting escaping is "
"only applied once)."
msgstr ""

# 9a3f2fca6a6c47d59ce660ad0fdd5023
#: ../../ref/utils.txt:487
msgid "``django.utils.translation``"
msgstr ""

# 8eecaf48faca4606a2845e119c3da916
#: ../../ref/utils.txt:492
msgid ""
"For a complete discussion on the usage of the following see the :doc:"
"`translation documentation </topics/i18n/translation>`."
msgstr ""

# 93fcaf2343814b5781c9587b1e30232f
#: ../../ref/utils.txt:497
msgid "Translates ``message`` and returns it in a UTF-8 bytestring"
msgstr ""

# f5d378df011f405b926b5dd782bb3e8d
#: ../../ref/utils.txt:501
msgid "Translates ``message`` and returns it in a unicode string"
msgstr ""

# 2e6e59baf84a49a087618838b9389509
#: ../../ref/utils.txt:505
msgid ""
"Translates ``message`` given the ``context`` and returns it in a unicode "
"string."
msgstr ""

# 42c7cb0489a5450cb90be2bf56783605
#: ../../ref/utils.txt:508
msgid "For more information, see :ref:`contextual-markers`."
msgstr ""

# 0be7edf0aec5412797eff6245a6acc6f
# ddb257bcf2c14de8a9097df3ac0b33fa
#: ../../ref/utils.txt:514 ../../ref/utils.txt:545
msgid "Same as the non-lazy versions above, but using lazy execution."
msgstr ""

# b5374c550ef34ee3ab8123e0f23ad04e
# 8a52d6f217a743cfb94cad038587ffaf
#: ../../ref/utils.txt:516 ../../ref/utils.txt:547
msgid "See :ref:`lazy translations documentation <lazy-translations>`."
msgstr ""

# b8d3c5fde1254ab0bfc6bbc4cb066850
#: ../../ref/utils.txt:521
msgid ""
"Marks strings for translation but doesn't translate them now. This can be "
"used to store strings in global variables that should stay in the base "
"language (because they might be used externally) and will be translated "
"later."
msgstr ""

# ee4c197f7d804f3e85d5eecf6088931f
#: ../../ref/utils.txt:528
msgid ""
"Translates ``singular`` and ``plural`` and returns the appropriate string "
"based on ``number`` in a UTF-8 bytestring."
msgstr ""

# 7bd2b04c99d64063b742fa6053c8c477
#: ../../ref/utils.txt:533
msgid ""
"Translates ``singular`` and ``plural`` and returns the appropriate string "
"based on ``number`` in a unicode string."
msgstr ""

# fb3924ac79ee4ea6a331cadae1017e8e
#: ../../ref/utils.txt:538
msgid ""
"Translates ``singular`` and ``plural`` and returns the appropriate string "
"based on ``number`` and the ``context`` in a unicode string."
msgstr ""

# 09578a5174ff4d549e1c7baec7b21fc6
#: ../../ref/utils.txt:551
msgid ""
"Lazy variant of string concatenation, needed for translations that are "
"constructed from multiple parts."
msgstr ""

# 538d63415cd44575903de22bb7ad6adc
#: ../../ref/utils.txt:556
msgid ""
"Fetches the translation object for a given language and installs it as the "
"current translation object for the current thread."
msgstr ""

# c73c6dc975f949f1bd3b9ec8a3d5b5dc
#: ../../ref/utils.txt:561
msgid ""
"De-installs the currently active translation object so that further _ calls "
"will resolve against the default translation object, again."
msgstr ""

# 70fcc4b5eeb0480db8db4428ba0b6b4d
#: ../../ref/utils.txt:566
msgid ""
"Makes the active translation object a NullTranslations() instance. This is "
"useful when we want delayed translations to appear as the original string "
"for some reason."
msgstr ""

# becc7105e54b4d90a2c58c6d6f46d1eb
#: ../../ref/utils.txt:574
msgid ""
"A Python context manager that uses :func:`django.utils.translation.activate` "
"to fetch the translation object for a given language, installing it as the "
"translation object for the current thread and reinstall the previous active "
"language on exit. Optionally it can simply deinstall the temporary "
"translation on exit with :func:`django.utils.translation.deactivate` if the "
"deactivate argument is True. If you pass None as the language argument, a "
"NullTranslations() instance is installed while the context is active."
msgstr ""

# ea799c746eb240dd96d1688c3a64edff
#: ../../ref/utils.txt:585
msgid "Returns the currently selected language code."
msgstr ""

# 60fe88bdfa744083b695baeff2e0ebb9
#: ../../ref/utils.txt:589
msgid "Returns selected language's BiDi layout:"
msgstr ""

# e3fe14ebbf42400a81f42f2388e5609e
#: ../../ref/utils.txt:591
msgid "``False`` = left-to-right layout"
msgstr ""

# e1c4acf0d40d40f683c17dd514bd191f
#: ../../ref/utils.txt:592
msgid "``True`` = right-to-left layout"
msgstr ""

# 48b0f14169794ec5a2e3efe6f497e928
#: ../../ref/utils.txt:596
msgid ""
"Analyzes the request to find what language the user wants the system to "
"show. Only languages listed in settings.LANGUAGES are taken into account. If "
"the user requests a sublanguage where we have a main language, we send out "
"the main language."
msgstr ""

# 752c071b995242aba39bd1b1426b6fb0
#: ../../ref/utils.txt:603
msgid "Turns a language name (en-us) into a locale name (en_US)."
msgstr ""

# 58b7d61154d447a7b4bf54ed4eb6af31
#: ../../ref/utils.txt:607
msgid ""
"Turns a Django template into something that is understood by xgettext. It "
"does so by translating the Django translation tags into standard gettext "
"function invocations."
msgstr ""

# d64e77ffdbbe4d3885cc0efa1095d2e0
#: ../../ref/utils.txt:614
msgid "``django.utils.timezone``"
msgstr ""

# 913dfd0231734c8894fd5865e1ae8668
#: ../../ref/utils.txt:623
msgid ":class:`~datetime.tzinfo` instance that represents UTC."
msgstr ""

# 4b2a06efb9cf48e2b8fb11545d0f56d3
#: ../../ref/utils.txt:627
msgid ""
"Returns a :class:`~datetime.tzinfo` instance that represents the :ref:"
"`default time zone <default-current-time-zone>`."
msgstr ""

# 41f8eaebde1149419df891fcb81f6cb9
#: ../../ref/utils.txt:632
msgid ""
"Returns the name of the :ref:`default time zone <default-current-time-zone>`."
msgstr ""

# 187ef4a72af943048f2557aa5b1c18e8
#: ../../ref/utils.txt:637
msgid ""
"Returns a :class:`~datetime.tzinfo` instance that represents the :ref:"
"`current time zone <default-current-time-zone>`."
msgstr ""

# 89344f2bd2d44805a78ea06982eb7b3e
#: ../../ref/utils.txt:642
msgid ""
"Returns the name of the :ref:`current time zone <default-current-time-zone>`."
msgstr ""

# 3163b7595cea42cbb45c17e0a8522d8a
#: ../../ref/utils.txt:647
msgid ""
"Sets the :ref:`current time zone <default-current-time-zone>`. The "
"``timezone`` argument must be an instance of a :class:`~datetime.tzinfo` "
"subclass or, if pytz_ is available, a time zone name."
msgstr ""

# e77f73e070454bba802683a6757c9bc6
#: ../../ref/utils.txt:653
msgid "Unsets the :ref:`current time zone <default-current-time-zone>`."
msgstr ""

# e364e41cc91648f19c1ccfaec98d3fb9
#: ../../ref/utils.txt:657
msgid ""
"This is a Python context manager that sets the :ref:`current time zone "
"<default-current-time-zone>` on entry with :func:`activate()`, and restores "
"the previously active time zone on exit. If the ``timezone`` argument is "
"``None``, the :ref:`current time zone <default-current-time-zone>` is unset "
"on entry with :func:`deactivate()` instead."
msgstr ""

# 83ece07b6d0d497692b94a40beb629a0
#: ../../ref/utils.txt:665
msgid ""
"This function is used by the template engine to convert datetimes to local "
"time where appropriate."
msgstr ""

# cb8bd41755ca4b8ba4e7fa2967a86864
#: ../../ref/utils.txt:670
msgid ""
"Returns an aware or naive :class:`~datetime.datetime` that represents the "
"current point in time when :setting:`USE_TZ` is ``True`` or ``False`` "
"respectively."
msgstr ""

# 9e34f1a291b84233a8d7221760613bb0
#: ../../ref/utils.txt:676
msgid ""
"Returns ``True`` if ``value`` is aware, ``False`` if it is naive. This "
"function assumes that ``value`` is a :class:`~datetime.datetime`."
msgstr ""

# aae84e4f6fe74907bbf02c3b1797694b
#: ../../ref/utils.txt:681
msgid ""
"Returns ``True`` if ``value`` is naive, ``False`` if it is aware. This "
"function assumes that ``value`` is a :class:`~datetime.datetime`."
msgstr ""

# efa94f3c026544b9be522be253bf6d0d
#: ../../ref/utils.txt:686
msgid ""
"Returns an aware :class:`~datetime.datetime` that represents the same point "
"in time as ``value`` in ``timezone``, ``value`` being a naive :class:"
"`~datetime.datetime`."
msgstr ""

# a4b0598099274f67ba40fb0658d511fd
#: ../../ref/utils.txt:690
msgid ""
"This function can raise an exception if ``value`` doesn't exist or is "
"ambiguous because of DST transitions."
msgstr ""

# 74888f2e6f4144a1b78e785b380f4e51
#: ../../ref/utils.txt:695
msgid ""
"Returns an naive :class:`~datetime.datetime` that represents in "
"``timezone``  the same point in time as ``value``, ``value`` being an aware :"
"class:`~datetime.datetime`"
msgstr ""

# ba17972e615b40d7b4a3f21d00bb5acd
#: ../../ref/utils.txt:702
msgid "``django.utils.tzinfo``"
msgstr ""

# 4c5afb66eaad4419b83f3d925f57ede1
#: ../../ref/utils.txt:709
msgid "Fixed offset in minutes east from UTC."
msgstr ""

# eadb54f8fb35420db278e5e12f59d4f9
#: ../../ref/utils.txt:713
msgid "Proxy timezone information from time module."
msgstr ""
