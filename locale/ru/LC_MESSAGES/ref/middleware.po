# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated <>, 2012, 2014.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-30 13:35+0300\n"
"PO-Revision-Date: 2014-10-20 18:28+0300\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Gtranslator 2.91.6\n"

# 9ab714fd1b364e149abef53dd88ed9f0
#: ../../ref/middleware.txt:3
msgid "Middleware"
msgstr "Промежуточный слой (Middleware)"

# a4b4fb4973b14dae82c0bdfb0d9604a8
#: ../../ref/middleware.txt:8
msgid ""
"This document explains all middleware components that come with Django. For "
"information on how to use them and how to write your own middleware, see "
"the :doc:`middleware usage guide </topics/http/middleware>`."
msgstr ""
"Этот раздел описывает промежуточные слои, которые предоставляет Django. Как "
"использовать и создавать свои промежуточные слои, смотрите :doc:"
"`соответствующий раздел </topics/http/middleware>`."

# 526ed97ef4a54a4bae160d10c94d4d80
#: ../../ref/middleware.txt:13
msgid "Available middleware"
msgstr "Доступные промежуточные слои"

# 84d27f523d884f749cda53bbe7fcd28e
#: ../../ref/middleware.txt:16
msgid "Cache middleware"
msgstr "Кэширующий промежуточный слой"

# 865142ad762040e3af0ab3dfb44b7335
#: ../../ref/middleware.txt:25
msgid ""
"Enable the site-wide cache. If these are enabled, each Django-powered page "
"will be cached for as long as the :setting:`CACHE_MIDDLEWARE_SECONDS` "
"setting defines. See the :doc:`cache documentation </topics/cache>`."
msgstr ""
"Активирует кэширование для всего сайта. При это все страницы, которые "
"генерируются Django, будут закэшированы на время, указанное в настройке :"
"setting:`CACHE_MIDDLEWARE_SECONDS`. Смотрите :doc:`раздел о кэшировании</"
"topics/cache>`."

# 3572fd4055d74fe9a0627f4eaa36525e
#: ../../ref/middleware.txt:30
msgid "\"Common\" middleware"
msgstr "\"Common\" промежуточный слой"

# 4d76534edbe54f379c1fad5bbbc9caa2
#: ../../ref/middleware.txt:37
msgid "Adds a few conveniences for perfectionists:"
msgstr "Добавляет несколько полезностей для перфекционистов:"

# 7d639094433b49e7859c8d93575fba95
#: ../../ref/middleware.txt:39
msgid ""
"Forbids access to user agents in the :setting:`DISALLOWED_USER_AGENTS` "
"setting, which should be a list of compiled regular expression objects."
msgstr ""
"Ограничивает доступ для клиентов, которые указанны в настройке :setting:"
"`DISALLOWED_USER_AGENTS`. Настройка должна содержать список скомпилированных "
"регулярных выражений."

# 0cbc29e00fa144a0bef39b7c8aab9a1a
#: ../../ref/middleware.txt:42
msgid ""
"Performs URL rewriting based on the :setting:`APPEND_SLASH` and :setting:"
"`PREPEND_WWW` settings."
msgstr ""
"Меняет URL в соответствии с настройками :setting:`APPEND_SLASH` и :setting:"
"`PREPEND_WWW`."

# 3d83e4724bc541a1ad9d5b2176c25c57
#: ../../ref/middleware.txt:45
msgid ""
"If :setting:`APPEND_SLASH` is ``True`` and the initial URL doesn't end with "
"a slash, and it is not found in the URLconf, then a new URL is formed by "
"appending a slash at the end. If this new URL is found in the URLconf, then "
"Django redirects the request to this new URL. Otherwise, the initial URL is "
"processed as usual."
msgstr ""
"Если :setting:`APPEND_SLASH` равна ``True`` и вызванный URL не оканчивается "
"на слеш, и он не найден в URLconf, создается новый URL путем добавления "
"слеша в конец. Если новый URL найден в URLconf, Django отправляет "
"перенаправление на этот URL. Иначе начальный URL обрабатывается как обычно."

# 791d6be53467448ba5dd69cc26f0ddde
#: ../../ref/middleware.txt:51
msgid ""
"For example, ``foo.com/bar`` will be redirected to ``foo.com/bar/`` if you "
"don't have a valid URL pattern for ``foo.com/bar`` but *do* have a valid "
"pattern for ``foo.com/bar/``."
msgstr ""
"Например, ``foo.com/bar`` будет перенаправлен на ``foo.com/bar/``, если нет "
"URL-шаблона для ``foo.com/bar``, но *есть* для ``foo.com/bar/``."

# 870a4f25aee441d6bda4c20addbcd456
#: ../../ref/middleware.txt:55
msgid ""
"If :setting:`PREPEND_WWW` is ``True``, URLs that lack a leading \"www.\" "
"will be redirected to the same URL with a leading \"www.\""
msgstr ""
"Если :setting:`PREPEND_WWW` равна ``True``, URL-ы без \"www.\" будут "
"перенаправлены на URL с добавлением \"www.\""

# ad519af5417649d595a5e33cdc4a0cf6
#: ../../ref/middleware.txt:58
msgid ""
"Both of these options are meant to normalize URLs. The philosophy is that "
"each URL should exist in one, and only one, place. Technically a URL ``foo."
"com/bar`` is distinct from ``foo.com/bar/`` -- a search-engine indexer would "
"treat them as separate URLs -- so it's best practice to normalize URLs."
msgstr ""
"Обе эти настройки предназначены для нормализации URL-ов. Философия такая -- "
"URL должен быть уникальным и единым. Технически URL ``foo.com/bar`` "
"отличается от ``foo.com/bar/`` -- поисковик проиндексирует их как отдельные "
"URL-ы -- по этому хорошей практикой является нормализация URL-ов."

# cf92223a2d12401f955d7d6a72f17437
#: ../../ref/middleware.txt:64
msgid ""
"Handles ETags based on the :setting:`USE_ETAGS` setting. If :setting:"
"`USE_ETAGS` is set to ``True``, Django will calculate an ETag for each "
"request by MD5-hashing the page content, and it'll take care of sending "
"``Not Modified`` responses, if appropriate."
msgstr ""
"Обрабатываете ETag с учетом настройки :setting:`USE_ETAGS`. Если :setting:"
"`USE_ETAGS` равна ``True``, Django вычислит ETag для каждого запроса, "
"используя MD5-хеш содержимого страницы, и отправит ответ ``Not Modified`` "
"при возможности."

# 696eda3aff3c435d83537341b253a020
#: ../../ref/middleware.txt:71
msgid ""
"Sends broken link notification emails to :setting:`MANAGERS` (see :doc:`/"
"howto/error-reporting`)."
msgstr ""
"Отсылает уведомления о сломанных ссылках на :setting:`MANAGERS` (смотрите :"
"doc:`/howto/error-reporting`)."

# 60f4baadd2ef4389ac9392416ed5b07b
#: ../../ref/middleware.txt:75
msgid "GZip middleware"
msgstr "GZip промежуточный слой"

# cc5f9dbf7fa647c599ce1fd619d01c81
#: ../../ref/middleware.txt:84
msgid ""
"Security researchers recently revealed that when compression techniques "
"(including ``GZipMiddleware``) are used on a website, the site becomes "
"exposed to a number of possible attacks. These approaches can be used to "
"compromise, among other things, Django's CSRF protection. Before using "
"``GZipMiddleware`` on your site, you should consider very carefully whether "
"you are subject to these attacks. If you're in *any* doubt about whether "
"you're affected, you should avoid using ``GZipMiddleware``. For more "
"details, see the `the BREACH paper (PDF)`_ and `breachattack.com`_."
msgstr ""
"Исследователи безопасности определили, что при применении сжатия на сайте "
"(включая ``GZipMiddleware``), ваш сайт становится уязвим к некоторым типам "
"атак. Они могут использоваться для обхода CSRF защиты. Перед использованием "
"``GZipMiddleware`` обдумайте на сколько это критично для вас. Если у вас "
"есть *малейшие* сомнений, не используйте ``GZipMiddleware``. Подробности "
"смотрите в `исследовании BREACH (PDF) <http://breachattack.com/resources/"
"BREACH%20-%20SSL,%20gone%20in%2030%20seconds.pdf>`_ и `breachattack.com "
"<http://breachattack.com/>`_."

# c7a10081ef354548a70c637f74fbdde2
#: ../../ref/middleware.txt:96
msgid ""
"Compresses content for browsers that understand GZip compression (all modern "
"browsers)."
msgstr ""
"Сжимает ответ для браузеров, которые поддерживают GZip (все современные "
"браузеры)."

# 461e3ae1b31b44dda63c2e9450bbbe3f
#: ../../ref/middleware.txt:99
msgid ""
"This middleware should be placed before any other middleware that need to "
"read or write the response body so that compression happens afterward."
msgstr ""
"Этот промежуточный слой должен находится перед любым другим промежуточный "
"слоем, который читает или пишет содержимое ответа, чтобы сжатие происходило "
"в самом конце."

# 555975971b0b4b8785bb20ac5e07e476
#: ../../ref/middleware.txt:102
msgid "It will NOT compress content if any of the following are true:"
msgstr "Содержимое ответа НЕ будет сжато при следующих условиях:"

# 25501ea892574b9ba352d83f22ae138f
#: ../../ref/middleware.txt:104
msgid "The content body is less than 200 bytes long."
msgstr "Содержимое ответа меньше 200 байтов."

# 65658c2a08c6478b9efb0a2f9580999c
#: ../../ref/middleware.txt:106
msgid "The response has already set the ``Content-Encoding`` header."
msgstr "Ответ уже содержит заголовок ``Content-Encoding``."

# 2bf00508daeb407badf9c64f979d4227
#: ../../ref/middleware.txt:108
msgid ""
"The request (the browser) hasn't sent an ``Accept-Encoding`` header "
"containing ``gzip``."
msgstr ""
"Браузер не отослал в запросе заголовок ``Accept-Encoding``, который содержит "
"``gzip``."

# 646dae2ba2144e2db03d7cd371e1ddcd
#: ../../ref/middleware.txt:111
msgid ""
"The request is from Internet Explorer and the ``Content-Type`` header "
"contains ``javascript`` or starts with anything other than ``text/``. We do "
"this to avoid a bug in early versions of IE that caused decompression not to "
"be performed on certain content types."
msgstr ""
"Запрос от Internet Explorer и заголовок ``Content-Type`` содержит "
"``javascript``, или начинается не с ``text/``. Это связано с багом в IE, "
"который приводит к неправильной обработке сжатого ответа для некоторых типов "
"ответа."

# 71fcd8d8fe684f568a505555e8615371
#: ../../ref/middleware.txt:116
msgid ""
"You can apply GZip compression to individual views using the :func:`~django."
"views.decorators.gzip.gzip_page()` decorator."
msgstr ""
"Вы можете добавить GZip сжатие для определенных представлений, используя "
"декоратор :func:`~django.views.decorators.gzip.gzip_page()`."

# ad30761246d44dcd9c30eed0ec182bcd
#: ../../ref/middleware.txt:120
msgid "Conditional GET middleware"
msgstr "Промежуточный слой для обработки условных GET-запросов"

# f7bf15ee1fdb40179e3361b91e370334
#: ../../ref/middleware.txt:127
msgid ""
"Handles conditional GET operations. If the response has a ``ETag`` or ``Last-"
"Modified`` header, and the request has ``If-None-Match`` or ``If-Modified-"
"Since``, the response is replaced by an :class:`~django.http."
"HttpResponseNotModified`."
msgstr ""
"Обрабатывает условные GET операции. Если ответ содержит заголовки ``ETag`` "
"или ``Last-Modified``, и запрос содержит ``If-None-Match`` или ``If-Modified-"
"Since``, ответ заменяется на :class:`~django.http.HttpResponseNotModified`."

# 65fae428adc84d54b21ba9a94b5794a6
#: ../../ref/middleware.txt:132
msgid "Also sets the ``Date`` and ``Content-Length`` response-headers."
msgstr ""
"Также устанавливает для ответа заголовки ``Date`` и ``Content-Length``."

# 41887ac5ff31457aabd29232dd43beec
#: ../../ref/middleware.txt:135
msgid "Locale middleware"
msgstr "Промежуточный слой локализации"

# 15c331900cbd4f27a221030cfda4749f
#: ../../ref/middleware.txt:142
msgid ""
"Enables language selection based on data from the request. It customizes "
"content for each user. See the :doc:`internationalization documentation </"
"topics/i18n/translation>`."
msgstr ""
"Выполняет выбор текущего языка на основе данных из запроса. Меняет "
"содержимое для каждого пользователя отдельно. Смотрите :doc:`раздел об "
"интернационализации </topics/i18n/translation>`."

# 50f26f259e3e45dbba3787cb3dcf1957
#: ../../ref/middleware.txt:148
msgid ""
"Defaults to :class:`~django.http.HttpResponseRedirect`. Subclass "
"``LocaleMiddleware`` and override the attribute to customize the redirects "
"issued by the middleware."
msgstr ""
"По умолчанию :class:`~django.http.HttpResponseRedirect`. Можете создать "
"класс наследник ``LocaleMiddleware`` и переопределить класс ответа, который "
"используется для перенаправления."

# 537e361f00a84de59134ec53e025381b
#: ../../ref/middleware.txt:153
msgid "Message middleware"
msgstr "Промежуточный слой сообщений"

# 3bd3782328c14c33809f67ea301d74d9
#: ../../ref/middleware.txt:160
msgid ""
"Enables cookie- and session-based message support. See the :doc:`messages "
"documentation </ref/contrib/messages>`."
msgstr ""
"Добавляет поддержку сообщений на основе кук или сессии. Смотрите :doc:"
"`раздел о сообщениях </ref/contrib/messages>`."

# 68000ca74f614849a26149ca86f2e6b1
#: ../../ref/middleware.txt:164
msgid "Session middleware"
msgstr "Промежуточный слой сессии"

# 045e1d81a5cc46edbd86a8d01d73a446
#: ../../ref/middleware.txt:171
msgid ""
"Enables session support. See the :doc:`session documentation </topics/http/"
"sessions>`."
msgstr ""
"Включает поддержку сессии. Смотрите :doc:`раздел о сессии </topics/http/"
"sessions>`."

# b1779e87aacc40be8f00ca11950b17c7
#: ../../ref/middleware.txt:175
msgid "Site middleware"
msgstr "Промежуточный слой определения текущего сайта"

# 19c8eafdeaa9425fa4d716e46e0a3219
#: ../../ref/middleware.txt:184
msgid ""
"Adds the ``site`` attribute representing the current site to every incoming "
"``HttpRequest`` object. See the :ref:`sites documentation <site-middleware>`."
msgstr ""
"Добавляет атрибут ``site``, который указывает текущий сайт для каждого "
"объекта ``HttpRequest``. Смотрите :ref:`раздел о поддержке нескольких сайтов "
"<site-middleware>`."

# c10995e4640b47b18072464cfa8c273f
#: ../../ref/middleware.txt:188
msgid "Authentication middleware"
msgstr "Промежуточный слой авторизации"

# 3ae3b9a115d846989edf2159f77fe7ad
#: ../../ref/middleware.txt:195
msgid ""
"Adds the ``user`` attribute, representing the currently-logged-in user, to "
"every incoming ``HttpRequest`` object. See :ref:`Authentication in Web "
"requests <auth-web-requests>`."
msgstr ""
"Добавляет атрибут ``user``, который указывает текущего авторизованного "
"пользователя, для каждого объекта ``HttpRequest``. Смотрите :ref:`раздел об "
"авторизации <auth-web-requests>`."

# 4a9b3c94fc894b60b677b55a81eff210
#: ../../ref/middleware.txt:201
msgid ""
"Middleware for utilizing Web server provided authentication. See :doc:`/"
"howto/auth-remote-user` for usage details."
msgstr ""
"Промежуточный слой для внешней авторизации. Смотрите :doc:`/howto/auth-"
"remote-user`."

# 0a488122a34c43e0b1e6227ba87f6f52
#: ../../ref/middleware.txt:208
msgid ""
"Allows a user's sessions to be invalidated when their password changes. See :"
"ref:`session-invalidation-on-password-change` for details. This middleware "
"must appear after :class:`django.contrib.auth.middleware."
"AuthenticationMiddleware` in :setting:`MIDDLEWARE_CLASSES`."
msgstr ""
"Позволяет удалить сессию пользователя при смене пароля. Смотрите :ref:"
"`session-invalidation-on-password-change`. Добавлять после :class:`django."
"contrib.auth.middleware.AuthenticationMiddleware` в :setting:"
"`MIDDLEWARE_CLASSES`."

# 2a37ba2f026b4c07ab5015ac0f938cdd
#: ../../ref/middleware.txt:214
msgid "CSRF protection middleware"
msgstr "Промежуточный слой для CSRF защиты"

# 775bbe24646f443e8c06d91081af8c83
#: ../../ref/middleware.txt:222
msgid ""
"Adds protection against Cross Site Request Forgeries by adding hidden form "
"fields to POST forms and checking requests for the correct value. See the :"
"doc:`Cross Site Request Forgery protection documentation </ref/contrib/"
"csrf>`."
msgstr ""
"Включает CSRF защиту, добавляя скрытое поле в POST формы и проверяя значение "
"при запросе. Смотрите раздел о :doc:`Cross Site Request Forgery защите </ref/"
"contrib/csrf>`."

# 92c679aabd294488a1c2dc9784dd187e
#: ../../ref/middleware.txt:227
msgid "Transaction middleware"
msgstr "Промежуточный слой транзакций"

# aba7dc0146984850b6c3f0ed790c5e06
#: ../../ref/middleware.txt:236
msgid ""
"``TransactionMiddleware`` is deprecated. The documentation of transactions "
"contains :ref:`upgrade instructions <transactions-upgrading-from-1.5>`."
msgstr ""
"``TransactionMiddleware`` устарел. В разделе о транзакциях можно найти :ref:"
"`инструкцию по обновлению <transactions-upgrading-from-1.5>`."

# 7bb02675bbc44b8a8bf74fa5bcd8c4cf
#: ../../ref/middleware.txt:239
msgid ""
"Binds commit and rollback of the default database to the request/response "
"phase. If a view function runs successfully, a commit is done. If it fails "
"with an exception, a rollback is done."
msgstr ""
"Оборачивает каждый запрос в транзакцию базы данных. Если запрос обработан "
"без исключений, изменения будут закоммичены в базу данных. Если произошла "
"ошибка, все изменения будут отменены."

# b8053becc1ef40cb8446aa7d85d04343
#: ../../ref/middleware.txt:243
msgid ""
"The order of this middleware in the stack is important: middleware modules "
"running outside of it run with commit-on-save - the default Django behavior. "
"Middleware modules running inside it (coming later in the stack) will be "
"under the same transaction control as the view functions."
msgstr ""
"Очень важен порядок выполнения этого промежуточного слоя: промежуточные "
"слои, которые идут перед этим, будут использовать стандартное поведение "
"Django \"commit-on-save\". Промежуточный слои после этого будут включены в "
"транзакцию, как и представления."

# 0f644bd17c864792b20fea76687abd7c
#: ../../ref/middleware.txt:248
msgid ""
"See the :doc:`transaction management documentation </topics/db/"
"transactions>`."
msgstr "Смотрите :doc:`раздел о транзакциях </topics/db/transactions>`."

# 1fcabda874a64ee698f7c492895944b3
#: ../../ref/middleware.txt:251
msgid "X-Frame-Options middleware"
msgstr "Промежуточный слой X-Frame-Options"

# 2041fcc139d74d848b9721685ae61cc0
#: ../../ref/middleware.txt:258
msgid ""
"Simple :doc:`clickjacking protection via the X-Frame-Options header </ref/"
"clickjacking/>`."
msgstr ""
"Добавляет простую :doc:`защиту от \"clickjacking\", используя заголовок X-"
"Frame-Options </ref/clickjacking/>`."

# ed30f134bb63434ca6d32f4b6f5b131e
#: ../../ref/middleware.txt:263
msgid "Middleware ordering"
msgstr "Порядок промежуточных слоёв"

# 46b505e4ff2a46baa401d510c2e4fe3c
#: ../../ref/middleware.txt:265
msgid ""
"Here are some hints about the ordering of various Django middleware classes:"
msgstr "Несколько советов о порядке промежуточных слоёв Django:"

# efaadf5654544e3fa0e6ffec99248da5
#: ../../ref/middleware.txt:267
msgid ":class:`~django.middleware.cache.UpdateCacheMiddleware`"
msgstr ":class:`~django.middleware.cache.UpdateCacheMiddleware`"

# 04bd1bf6d1524278ad6b156adc4e3d4d
#: ../../ref/middleware.txt:269
msgid ""
"Before those that modify the ``Vary`` header (``SessionMiddleware``, "
"``GZipMiddleware``, ``LocaleMiddleware``)."
msgstr ""
"Добавлять перед промежуточными слоями, которые могут изменить заголовок "
"``Vary`` (``SessionMiddleware``, ``GZipMiddleware``, ``LocaleMiddleware``)."

# 5304ee114f6542a2a1384e88f3a232e8
#: ../../ref/middleware.txt:272
msgid ":class:`~django.middleware.gzip.GZipMiddleware`"
msgstr ":class:`~django.middleware.gzip.GZipMiddleware`"

# d55c8f46769f46f49e4f619965789839
#: ../../ref/middleware.txt:274
msgid "Before any middleware that may change or use the response body."
msgstr ""
"Добавлять перед промежуточными слоями, которые могут изменять или читать "
"тело ответа."

# 7de9b290a3ec480da9b12a340ffc8637
# 3b49a5e9bcd3495eb43c2aa8286ab401
#: ../../ref/middleware.txt:276 ../../ref/middleware.txt:285
msgid "After ``UpdateCacheMiddleware``: Modifies ``Vary`` header."
msgstr "После ``UpdateCacheMiddleware``: изменяет заголовок ``Vary``."

# a5adaf079e5645e389ce2894696621b7
#: ../../ref/middleware.txt:278
msgid ":class:`~django.middleware.http.ConditionalGetMiddleware`"
msgstr ":class:`~django.middleware.http.ConditionalGetMiddleware`"

# fc43ff562311489c94cacdf56f66f4f9
#: ../../ref/middleware.txt:280
msgid ""
"Before ``CommonMiddleware``: uses its ``Etag`` header when :setting:"
"`USE_ETAGS` = ``True``."
msgstr ""
"Перед ``CommonMiddleware``: использует установленный заголовок ``Etag`` при :"
"setting:`USE_ETAGS` = ``True``."

# 6b89908af61b4f798e7c7d6aa734682e
#: ../../ref/middleware.txt:283
msgid ":class:`~django.contrib.sessions.middleware.SessionMiddleware`"
msgstr ":class:`~django.contrib.sessions.middleware.SessionMiddleware`"

# ebbcf57d96cd4a0ea69df3264291e857
#: ../../ref/middleware.txt:287
msgid ":class:`~django.middleware.locale.LocaleMiddleware`"
msgstr ":class:`~django.middleware.locale.LocaleMiddleware`"

# 4df6a31efddd4180b4a896fb78e0b479
#: ../../ref/middleware.txt:289
msgid ""
"One of the topmost, after ``SessionMiddleware`` (uses session data) and "
"``CacheMiddleware`` (modifies ``Vary`` header)."
msgstr ""
"После ``SessionMiddleware`` (использует сессию) и ``CacheMiddleware`` "
"(изменяет заголовок ``Vary``)."

# a8d6e8e9e6bd4f9f8755a4e4855dc6b4
#: ../../ref/middleware.txt:292
msgid ":class:`~django.middleware.common.CommonMiddleware`"
msgstr ":class:`~django.middleware.common.CommonMiddleware`"

# c1dec47be4d34c2c9494f620602cd442
#: ../../ref/middleware.txt:294
msgid ""
"Before any middleware that may change the response (it calculates ``ETags``)."
msgstr ""
"Перед любым промежуточным слоем, который может изменять ответ (вычисляет "
"``ETags``)."

# f1f27fb3f1ca4ef0a8e87cd9c9e658fd
#: ../../ref/middleware.txt:296
msgid ""
"After ``GZipMiddleware`` so it won't calculate an ``ETag`` header on gzipped "
"contents."
msgstr ""
"После ``GZipMiddleware``, чтобы заголовок ``ETag`` не вычислялся для сжатого "
"ответа."

# 1096461aa91645118c2b318e4cf0407e
#: ../../ref/middleware.txt:299
msgid ""
"Close to the top: it redirects when :setting:`APPEND_SLASH` or :setting:"
"`PREPEND_WWW` are set to ``True``."
msgstr ""
"Ближе к верху: выполняет перенаправление при :setting:`APPEND_SLASH` или :"
"setting:`PREPEND_WWW` равном ``True``."

# 8308f5bf51ab421dbf61d0ec381c569d
#: ../../ref/middleware.txt:302
msgid ":class:`~django.middleware.csrf.CsrfViewMiddleware`"
msgstr ":class:`~django.middleware.csrf.CsrfViewMiddleware`"

# b8fdf67fdad049bd88ed83a83928561c
#: ../../ref/middleware.txt:304
msgid ""
"Before any view middleware that assumes that CSRF attacks have been dealt "
"with."
msgstr ""
"Перед любым промежуточным слоем, который предполагает, что CSRF защита уже "
"выполнена."

# abfb76fe47004edb8774661005b2f1de
#: ../../ref/middleware.txt:307
msgid ":class:`~django.contrib.auth.middleware.AuthenticationMiddleware`"
msgstr ":class:`~django.contrib.auth.middleware.AuthenticationMiddleware`"

# d04061fd0da4429cba566ce9c5400563
#: ../../ref/middleware.txt:309
msgid "After ``SessionMiddleware``: uses session storage."
msgstr "После ``SessionMiddleware``: использует сессию."

# 655408277d7f4eb6bb1a3399940ebdae
#: ../../ref/middleware.txt:311
msgid ":class:`~django.contrib.messages.middleware.MessageMiddleware`"
msgstr ":class:`~django.contrib.messages.middleware.MessageMiddleware`"

# 781e81eb2b67405888aad00dd79069ab
#: ../../ref/middleware.txt:313
msgid "After ``SessionMiddleware``: can use session-based storage."
msgstr ""
"После ``SessionMiddleware``: может использовать сессию для хранения данных."

# 1806336234f447fb995c5cc636db0e9c
#: ../../ref/middleware.txt:315
msgid ":class:`~django.middleware.cache.FetchFromCacheMiddleware`"
msgstr ":class:`~django.middleware.cache.FetchFromCacheMiddleware`"

# 6676ff9883d443698ac9f058a07b6e3d
#: ../../ref/middleware.txt:317
msgid ""
"After any middleware that modifies the ``Vary`` header: that header is used "
"to pick a value for the cache hash-key."
msgstr ""
"После любого промежуточного слоя, который может изменить заголовок ``Vary``: "
"его значение используется для генерации ключа в кеше."

# a7df25520def407f87eabe9d0a03c91a
#: ../../ref/middleware.txt:320
msgid ""
":class:`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware`"
msgstr ""
":class:`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware`"

# 2c1e8c3d358f4f67b6b610ccee8b7c89
# 6d39be45fd364cbdb34cc7209289af81
#: ../../ref/middleware.txt:322 ../../ref/middleware.txt:326
msgid "Should be near the bottom as it's a last-resort type of middleware."
msgstr "Должен быть в низу."

# f74c826b97c64151acecfb739e1d1b1c
#: ../../ref/middleware.txt:324
msgid ""
":class:`~django.contrib.redirects.middleware.RedirectFallbackMiddleware`"
msgstr ""
":class:`~django.contrib.redirects.middleware.RedirectFallbackMiddleware`"
