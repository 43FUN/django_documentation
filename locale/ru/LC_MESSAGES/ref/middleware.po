# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-04-23 16:09\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 9ab714fd1b364e149abef53dd88ed9f0
#: ../../ref/middleware.txt:3
msgid "Middleware"
msgstr ""

# a4b4fb4973b14dae82c0bdfb0d9604a8
#: ../../ref/middleware.txt:8
msgid ""
"This document explains all middleware components that come with Django. For "
"information on how to use them and how to write your own middleware, see "
"the :doc:`middleware usage guide </topics/http/middleware>`."
msgstr ""

# 526ed97ef4a54a4bae160d10c94d4d80
#: ../../ref/middleware.txt:13
msgid "Available middleware"
msgstr ""

# 84d27f523d884f749cda53bbe7fcd28e
#: ../../ref/middleware.txt:16
msgid "Cache middleware"
msgstr ""

# 865142ad762040e3af0ab3dfb44b7335
#: ../../ref/middleware.txt:25
msgid ""
"Enable the site-wide cache. If these are enabled, each Django-powered page "
"will be cached for as long as the :setting:`CACHE_MIDDLEWARE_SECONDS` "
"setting defines. See the :doc:`cache documentation </topics/cache>`."
msgstr ""

# 3572fd4055d74fe9a0627f4eaa36525e
#: ../../ref/middleware.txt:30
msgid "\"Common\" middleware"
msgstr ""

# 4d76534edbe54f379c1fad5bbbc9caa2
#: ../../ref/middleware.txt:37
msgid "Adds a few conveniences for perfectionists:"
msgstr ""

# 017df25c64724266b6b9c39e59f662b6
#: ../../ref/middleware.txt:39
msgid ""
"Forbids access to user agents in the :setting:`DISALLOWED_USER_AGENTS` "
"setting, which should be a list of strings."
msgstr ""

# 0cbc29e00fa144a0bef39b7c8aab9a1a
#: ../../ref/middleware.txt:42
msgid ""
"Performs URL rewriting based on the :setting:`APPEND_SLASH` and :setting:"
"`PREPEND_WWW` settings."
msgstr ""

# 3d83e4724bc541a1ad9d5b2176c25c57
#: ../../ref/middleware.txt:45
msgid ""
"If :setting:`APPEND_SLASH` is ``True`` and the initial URL doesn't end with "
"a slash, and it is not found in the URLconf, then a new URL is formed by "
"appending a slash at the end. If this new URL is found in the URLconf, then "
"Django redirects the request to this new URL. Otherwise, the initial URL is "
"processed as usual."
msgstr ""

# 791d6be53467448ba5dd69cc26f0ddde
#: ../../ref/middleware.txt:51
msgid ""
"For example, ``foo.com/bar`` will be redirected to ``foo.com/bar/`` if you "
"don't have a valid URL pattern for ``foo.com/bar`` but *do* have a valid "
"pattern for ``foo.com/bar/``."
msgstr ""

# 870a4f25aee441d6bda4c20addbcd456
#: ../../ref/middleware.txt:55
msgid ""
"If :setting:`PREPEND_WWW` is ``True``, URLs that lack a leading \"www.\" "
"will be redirected to the same URL with a leading \"www.\""
msgstr ""

# ad519af5417649d595a5e33cdc4a0cf6
#: ../../ref/middleware.txt:58
msgid ""
"Both of these options are meant to normalize URLs. The philosophy is that "
"each URL should exist in one, and only one, place. Technically a URL ``foo."
"com/bar`` is distinct from ``foo.com/bar/`` -- a search-engine indexer would "
"treat them as separate URLs -- so it's best practice to normalize URLs."
msgstr ""

# a35d5e1a071f42fb8e72042a5e41d0a2
#: ../../ref/middleware.txt:64
msgid ""
"Sends broken link notification emails to :setting:`MANAGERS` if :setting:"
"`SEND_BROKEN_LINK_EMAILS` is set to ``True``."
msgstr ""

# cf92223a2d12401f955d7d6a72f17437
#: ../../ref/middleware.txt:67
msgid ""
"Handles ETags based on the :setting:`USE_ETAGS` setting. If :setting:"
"`USE_ETAGS` is set to ``True``, Django will calculate an ETag for each "
"request by MD5-hashing the page content, and it'll take care of sending "
"``Not Modified`` responses, if appropriate."
msgstr ""

# 31582d7b72cd44abb55a0d28d19c27bb
#: ../../ref/middleware.txt:73
msgid "View metadata middleware"
msgstr ""

# 01b10820318e41559097c88c5744a69c
#: ../../ref/middleware.txt:80
msgid ""
"Sends custom ``X-View`` HTTP headers to HEAD requests that come from IP "
"addresses defined in the :setting:`INTERNAL_IPS` setting. This is used by "
"Django's :doc:`automatic documentation system </ref/contrib/admin/"
"admindocs>`. Depends on :class:`~django.contrib.auth.middleware."
"AuthenticationMiddleware`."
msgstr ""

# 60f4baadd2ef4389ac9392416ed5b07b
#: ../../ref/middleware.txt:86
msgid "GZip middleware"
msgstr ""

# c7a10081ef354548a70c637f74fbdde2
#: ../../ref/middleware.txt:93
msgid ""
"Compresses content for browsers that understand GZip compression (all modern "
"browsers)."
msgstr ""

# 461e3ae1b31b44dda63c2e9450bbbe3f
#: ../../ref/middleware.txt:96
msgid ""
"This middleware should be placed before any other middleware that need to "
"read or write the response body so that compression happens afterward."
msgstr ""

# 555975971b0b4b8785bb20ac5e07e476
#: ../../ref/middleware.txt:99
msgid "It will NOT compress content if any of the following are true:"
msgstr ""

# 25501ea892574b9ba352d83f22ae138f
#: ../../ref/middleware.txt:101
msgid "The content body is less than 200 bytes long."
msgstr ""

# 65658c2a08c6478b9efb0a2f9580999c
#: ../../ref/middleware.txt:103
msgid "The response has already set the ``Content-Encoding`` header."
msgstr ""

# 2bf00508daeb407badf9c64f979d4227
#: ../../ref/middleware.txt:105
msgid ""
"The request (the browser) hasn't sent an ``Accept-Encoding`` header "
"containing ``gzip``."
msgstr ""

# 646dae2ba2144e2db03d7cd371e1ddcd
#: ../../ref/middleware.txt:108
msgid ""
"The request is from Internet Explorer and the ``Content-Type`` header "
"contains ``javascript`` or starts with anything other than ``text/``. We do "
"this to avoid a bug in early versions of IE that caused decompression not to "
"be performed on certain content types."
msgstr ""

# 71fcd8d8fe684f568a505555e8615371
#: ../../ref/middleware.txt:113
msgid ""
"You can apply GZip compression to individual views using the :func:`~django."
"views.decorators.gzip.gzip_page()` decorator."
msgstr ""

# ad30761246d44dcd9c30eed0ec182bcd
#: ../../ref/middleware.txt:117
msgid "Conditional GET middleware"
msgstr ""

# f7bf15ee1fdb40179e3361b91e370334
#: ../../ref/middleware.txt:124
msgid ""
"Handles conditional GET operations. If the response has a ``ETag`` or ``Last-"
"Modified`` header, and the request has ``If-None-Match`` or ``If-Modified-"
"Since``, the response is replaced by an :class:`~django.http."
"HttpResponseNotModified`."
msgstr ""

# 65fae428adc84d54b21ba9a94b5794a6
#: ../../ref/middleware.txt:129
msgid "Also sets the ``Date`` and ``Content-Length`` response-headers."
msgstr ""

# 7c1016d565564243a9b9363031ef6d82
#: ../../ref/middleware.txt:132
msgid "Reverse proxy middleware"
msgstr ""

# f16b04ccf19246918e75bc4d702af3ac
#: ../../ref/middleware.txt:136
msgid ""
"This middleware was removed in Django 1.1. See :ref:`the release notes "
"<removed-setremoteaddrfromforwardedfor-middleware>` for details."
msgstr ""

# 41887ac5ff31457aabd29232dd43beec
#: ../../ref/middleware.txt:140
msgid "Locale middleware"
msgstr ""

# 15c331900cbd4f27a221030cfda4749f
#: ../../ref/middleware.txt:147
msgid ""
"Enables language selection based on data from the request. It customizes "
"content for each user. See the :doc:`internationalization documentation </"
"topics/i18n/translation>`."
msgstr ""

# 537e361f00a84de59134ec53e025381b
#: ../../ref/middleware.txt:152
msgid "Message middleware"
msgstr ""

# 3bd3782328c14c33809f67ea301d74d9
#: ../../ref/middleware.txt:159
msgid ""
"Enables cookie- and session-based message support. See the :doc:`messages "
"documentation </ref/contrib/messages>`."
msgstr ""

# 68000ca74f614849a26149ca86f2e6b1
#: ../../ref/middleware.txt:163
msgid "Session middleware"
msgstr ""

# 045e1d81a5cc46edbd86a8d01d73a446
#: ../../ref/middleware.txt:170
msgid ""
"Enables session support. See the :doc:`session documentation </topics/http/"
"sessions>`."
msgstr ""

# c10995e4640b47b18072464cfa8c273f
#: ../../ref/middleware.txt:174
msgid "Authentication middleware"
msgstr ""

# 3ae3b9a115d846989edf2159f77fe7ad
#: ../../ref/middleware.txt:181
msgid ""
"Adds the ``user`` attribute, representing the currently-logged-in user, to "
"every incoming ``HttpRequest`` object. See :ref:`Authentication in Web "
"requests <auth-web-requests>`."
msgstr ""

# 2a37ba2f026b4c07ab5015ac0f938cdd
#: ../../ref/middleware.txt:186
msgid "CSRF protection middleware"
msgstr ""

# 775bbe24646f443e8c06d91081af8c83
#: ../../ref/middleware.txt:194
msgid ""
"Adds protection against Cross Site Request Forgeries by adding hidden form "
"fields to POST forms and checking requests for the correct value. See the :"
"doc:`Cross Site Request Forgery protection documentation </ref/contrib/"
"csrf>`."
msgstr ""

# 92c679aabd294488a1c2dc9784dd187e
#: ../../ref/middleware.txt:199
msgid "Transaction middleware"
msgstr ""

# 7bb02675bbc44b8a8bf74fa5bcd8c4cf
#: ../../ref/middleware.txt:206
msgid ""
"Binds commit and rollback of the default database to the request/response "
"phase. If a view function runs successfully, a commit is done. If it fails "
"with an exception, a rollback is done."
msgstr ""

# b8053becc1ef40cb8446aa7d85d04343
#: ../../ref/middleware.txt:210
msgid ""
"The order of this middleware in the stack is important: middleware modules "
"running outside of it run with commit-on-save - the default Django behavior. "
"Middleware modules running inside it (coming later in the stack) will be "
"under the same transaction control as the view functions."
msgstr ""

# 0f644bd17c864792b20fea76687abd7c
#: ../../ref/middleware.txt:215
msgid ""
"See the :doc:`transaction management documentation </topics/db/"
"transactions>`."
msgstr ""

# 1fcabda874a64ee698f7c492895944b3
#: ../../ref/middleware.txt:218
msgid "X-Frame-Options middleware"
msgstr ""

# 2041fcc139d74d848b9721685ae61cc0
#: ../../ref/middleware.txt:228
msgid ""
"Simple :doc:`clickjacking protection via the X-Frame-Options header </ref/"
"clickjacking/>`."
msgstr ""
