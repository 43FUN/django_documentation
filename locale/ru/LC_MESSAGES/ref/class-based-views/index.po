# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-30 13:35+0300\n"
"PO-Revision-Date: 2013-02-27 00:21\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# a1ebe1c5a8df4245a505bcd33d750052
#: ../../ref/class-based-views/index.txt:3
msgid "Class-based views API"
msgstr ""

# ffda1da03fb64e04be81d43f810e941c
#: ../../ref/class-based-views/index.txt:5
msgid ""
"Class-based views API reference. For introductory material, see :doc:`/"
"topics/class-based-views/index`."
msgstr ""

# 683cdaf976b34bcd9b18b104d4bdbc45
#: ../../ref/class-based-views/index.txt:19
msgid "Specification"
msgstr ""

# 6ebd63b6af434ffb969e88275b38a3b0
#: ../../ref/class-based-views/index.txt:21
msgid ""
"Each request served by a class-based view has an independent state; "
"therefore, it is safe to store state variables on the instance (i.e., ``self."
"foo = 3`` is a thread-safe operation)."
msgstr ""

# 6633769a395c42ee83187de290800cb2
#: ../../ref/class-based-views/index.txt:25
msgid ""
"A class-based view is deployed into a URL pattern using the :meth:`~django."
"views.generic.base.View.as_view()` classmethod::"
msgstr ""

# b5b575987c164a4ab3d0883fc4d87cf2
#: ../../ref/class-based-views/index.txt:0
msgid "Thread safety with view arguments"
msgstr ""

# fd4501bac70049a289004f97c0cf5748
#: ../../ref/class-based-views/index.txt:34
msgid ""
"Arguments passed to a view are shared between every instance of a view. This "
"means that you shouldn't use a list, dictionary, or any other mutable object "
"as an argument to a view. If you do and the shared object is modified, the "
"actions of one user visiting your view could have an effect on subsequent "
"users visiting the same view."
msgstr ""

# 963c02ab71d24e1a82e37cff439acf43
#: ../../ref/class-based-views/index.txt:40
msgid ""
"Arguments passed into :meth:`~django.views.generic.base.View.as_view()` will "
"be assigned onto the instance that is used to service a request. Using the "
"previous example, this means that every request on ``MyView`` is able to use "
"``self.size``. Arguments must correspond to attributes that already exist on "
"the class (return ``True`` on a ``hasattr`` check)."
msgstr ""

# c97cd784f99343b3bd5efd5166acf83f
#: ../../ref/class-based-views/index.txt:47
msgid "Base vs Generic views"
msgstr ""

# cc027913f9344689baaad588d3a9d7d6
#: ../../ref/class-based-views/index.txt:49
msgid ""
"Base class-based views can be thought of as *parent* views, which can be "
"used by themselves or inherited from. They may not provide all the "
"capabilities required for projects, in which case there are Mixins which "
"extend what base views can do."
msgstr ""

# 4162e1b946f24217be227dd521c9f23b
#: ../../ref/class-based-views/index.txt:54
msgid ""
"Djangoâ€™s generic views are built off of those base views, and were developed "
"as a shortcut for common usage patterns such as displaying the details of an "
"object. They take certain common idioms and patterns found in view "
"development and abstract them so that you can quickly write common views of "
"data without having to repeat yourself."
msgstr ""

# f0ba1e784648421a9208819a41053155
#: ../../ref/class-based-views/index.txt:60
msgid ""
"Most generic views require the ``queryset`` key, which is a ``QuerySet`` "
"instance; see :doc:`/topics/db/queries` for more information about "
"``QuerySet`` objects."
msgstr ""
