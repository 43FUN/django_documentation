# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-27 00:21\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# c796121878dd4e08aee13ba3b64b8e17
#: ../../ref/contrib/comments/custom.txt:3
msgid "Customizing the comments framework"
msgstr ""

# 37d0f2308e5541a79c483e0334d28759
#: ../../ref/contrib/comments/custom.txt:7
msgid ""
"If the built-in comment framework doesn't quite fit your needs, you can "
"extend the comment app's behavior to add custom data and logic. The comments "
"framework lets you extend the built-in comment model, the built-in comment "
"form, and the various comment views."
msgstr ""

# 03ddca9c4aae478e8d1afb3c97ed99f6
#: ../../ref/contrib/comments/custom.txt:12
msgid ""
"The :setting:`COMMENTS_APP` setting is where this customization begins. Set :"
"setting:`COMMENTS_APP` to the name of the app you'd like to use to provide "
"custom behavior. You'll use the same syntax as you'd use for :setting:"
"`INSTALLED_APPS`, and the app given must also be in the :setting:"
"`INSTALLED_APPS` list."
msgstr ""

# dbcf98c4908748849e16a308222137e1
#: ../../ref/contrib/comments/custom.txt:18
msgid ""
"For example, if you wanted to use an app named ``my_comment_app``, your "
"settings file would contain::"
msgstr ""

# d27158fb2c834f1db47ba569e62548e6
#: ../../ref/contrib/comments/custom.txt:29
msgid ""
"The app named in :setting:`COMMENTS_APP` provides its custom behavior by "
"defining some module-level functions in the app's ``__init__.py``. The :ref:"
"`complete list of these functions <custom-comment-app-api>` can be found "
"below, but first let's look at a quick example."
msgstr ""

# 4b02688b36114e65b0cc9ba0fbec4e99
#: ../../ref/contrib/comments/custom.txt:35
msgid "An example custom comments app"
msgstr ""

# f78f6c5d828a475899c24d590479473c
#: ../../ref/contrib/comments/custom.txt:37
msgid ""
"One of the most common types of customization is modifying the set of fields "
"provided on the built-in comment model. For example, some sites that allow "
"comments want the commentator to provide a title for their comment; the "
"built-in comment model has no field for that title."
msgstr ""

# 0ec0d3882d494216a1e5f24fe0956b65
#: ../../ref/contrib/comments/custom.txt:42
msgid "To make this kind of customization, we'll need to do three things:"
msgstr ""

# d568b0251fdb42bc82bcc4a75b4208f3
#: ../../ref/contrib/comments/custom.txt:44
msgid ""
"Create a custom comment :class:`~django.db.models.Model` that adds on the "
"\"title\" field."
msgstr ""

# af2f3aca848741c49c377faf1731d29e
#: ../../ref/contrib/comments/custom.txt:47
msgid ""
"Create a custom comment :class:`~django.forms.Form` that also adds this "
"\"title\" field."
msgstr ""

# 895630ef675a4d50b89e6262b137c8a8
#: ../../ref/contrib/comments/custom.txt:50
msgid ""
"Inform Django of these objects by defining a few functions in a custom :"
"setting:`COMMENTS_APP`."
msgstr ""

# ae56ab02469c4c30aadadac639cdb93e
#: ../../ref/contrib/comments/custom.txt:53
msgid ""
"So, carrying on the example above, we're dealing with a typical app "
"structure in the ``my_comment_app`` directory::"
msgstr ""

# 0613f5ab4cdb42e7bb1c34cbb28518ee
#: ../../ref/contrib/comments/custom.txt:61
msgid "In the ``models.py`` we'll define a ``CommentWithTitle`` model::"
msgstr ""

# 5363afbb2b8346aea480f0e583fc0611
#: ../../ref/contrib/comments/custom.txt:69
msgid ""
"Most custom comment models will subclass the :class:`~django.contrib."
"comments.models.Comment` model. However, if you want to substantially remove "
"or change the fields available in the :class:`~django.contrib.comments."
"models.Comment` model, but don't want to rewrite the templates, you could "
"try subclassing from ``BaseCommentAbstractModel``."
msgstr ""

# 0728b736bd404528b15a5abcaf9b1585
#: ../../ref/contrib/comments/custom.txt:76
msgid ""
"Next, we'll define a custom comment form in ``forms.py``. This is a little "
"more tricky: we have to both create a form and override ``CommentForm."
"get_comment_model()`` and ``CommentForm.get_comment_create_data()`` to "
"return deal with our custom title field::"
msgstr ""

# 1dd189aee29841c2b12800177b9313ee
#: ../../ref/contrib/comments/custom.txt:99
msgid ""
"Django provides a couple of \"helper\" classes to make writing certain types "
"of custom comment forms easier; see :mod:`django.contrib.comments.forms` for "
"more."
msgstr ""

# 2a3be8b33a7b43d88567ae3f9e28cbdf
#: ../../ref/contrib/comments/custom.txt:103
msgid ""
"Finally, we'll define a couple of methods in ``my_comment_app/__init__.py`` "
"to point Django at these classes we've created::"
msgstr ""

# 7e282a55b084433cb9279f02cae3ff63
#: ../../ref/contrib/comments/custom.txt:118
msgid ""
"Be careful not to create cyclic imports in your custom comments app. If you "
"feel your comment configuration isn't being used as defined -- for example, "
"if your comment moderation policy isn't being applied -- you may have a "
"cyclic import problem."
msgstr ""

# 8aa8099665ef41c78e1324dcefa64532
#: ../../ref/contrib/comments/custom.txt:123
msgid ""
"If you are having unexplained problems with comments behavior, check if your "
"custom comments application imports (even indirectly) any module that itself "
"imports Django's comments module."
msgstr ""

# 6da1f9d7847040d8a50dd4a8d58c1b20
#: ../../ref/contrib/comments/custom.txt:127
msgid ""
"The above process should take care of most common situations. For more "
"advanced usage, there are additional methods you can define. Those are "
"explained in the next section."
msgstr ""

# f69faab17f874361b9caaea45d3f5c23
#: ../../ref/contrib/comments/custom.txt:134
msgid "Custom comment app API"
msgstr ""

# 8a121f25b73d440ebed0bf234f8888d8
#: ../../ref/contrib/comments/custom.txt:136
msgid ""
"The :mod:`django.contrib.comments` app defines the following methods; any "
"custom comment app must define at least one of them. All are optional, "
"however."
msgstr ""

# 768afe687fd94d8e8a5bdf04c4b3b36e
#: ../../ref/contrib/comments/custom.txt:142
msgid ""
"Return the :class:`~django.db.models.Model` class to use for comments. This "
"model should inherit from ``django.contrib.comments.models."
"BaseCommentAbstractModel``, which defines necessary core fields."
msgstr ""

# f0e4d4ef9fd6467b9042f3d83ddfda10
#: ../../ref/contrib/comments/custom.txt:147
msgid ""
"The default implementation returns :class:`django.contrib.comments.models."
"Comment`."
msgstr ""

# 29f8ed51a6e641daa786717b60ebb88d
#: ../../ref/contrib/comments/custom.txt:152
msgid ""
"Return the :class:`~django.forms.Form` class you want to use for creating, "
"validating, and saving your comment model.  Your custom comment form should "
"accept an additional first argument, ``target_object``, which is the object "
"the comment will be attached to."
msgstr ""

# d58399fd05d840a399f4eee867728e0e
#: ../../ref/contrib/comments/custom.txt:158
msgid ""
"The default implementation returns :class:`django.contrib.comments.forms."
"CommentForm`."
msgstr ""

# 659c3becd63c47caa5328a8cb5eb60d1
#: ../../ref/contrib/comments/custom.txt:163
msgid ""
"The default comment form also includes a number of unobtrusive spam-"
"prevention features (see :ref:`notes-on-the-comment-form`).  If replacing it "
"with your own form, you may want to look at the source code for the built-in "
"form and consider incorporating similar features."
msgstr ""

# 6fd2292e842344f1ad55ed2cb1398720
#: ../../ref/contrib/comments/custom.txt:171
msgid ""
"Return the URL for POSTing comments. This will be the ``<form action>`` "
"attribute when rendering your comment form."
msgstr ""

# e9830779b5ea47649baad4c33c23e0cb
#: ../../ref/contrib/comments/custom.txt:174
msgid ""
"The default implementation returns a reverse-resolved URL pointing to the "
"``post_comment()`` view."
msgstr ""

# 4dd26755ab3a4f5d9d0c0961aade43ff
#: ../../ref/contrib/comments/custom.txt:179
msgid ""
"If you provide a custom comment model and/or form, but you want to use the "
"default ``post_comment()`` view, you will need to be aware that it requires "
"the model and form to have certain additional attributes and methods: see "
"the ``django.contrib.comments.views.post_comment()`` view for details."
msgstr ""

# 0f830f4ff99b4ec09209372cfeff70c8
#: ../../ref/contrib/comments/custom.txt:187
msgid "Return the URL for the \"flag this comment\" view."
msgstr ""

# 1074aa0f90384ebfb77925165052f99d
#: ../../ref/contrib/comments/custom.txt:189
msgid ""
"The default implementation returns a reverse-resolved URL pointing to the "
"``django.contrib.comments.views.moderation.flag()`` view."
msgstr ""

# 3df3cff8f7734f208fa36839e1a2b516
#: ../../ref/contrib/comments/custom.txt:194
msgid "Return the URL for the \"delete this comment\" view."
msgstr ""

# f5c5340e23b046989961eb648d90d10b
#: ../../ref/contrib/comments/custom.txt:196
msgid ""
"The default implementation returns a reverse-resolved URL pointing to the "
"``django.contrib.comments.views.moderation.delete()`` view."
msgstr ""

# 7c9582df78c94af89b7e3e8d2384809f
#: ../../ref/contrib/comments/custom.txt:201
msgid "Return the URL for the \"approve this comment from moderation\" view."
msgstr ""

# b17591d7039e406f820545188777dd9b
#: ../../ref/contrib/comments/custom.txt:203
msgid ""
"The default implementation returns a reverse-resolved URL pointing to the "
"``django.contrib.comments.views.moderation.approve()`` view."
msgstr ""
