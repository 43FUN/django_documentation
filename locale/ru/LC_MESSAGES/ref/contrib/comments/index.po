# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-11 11:43+0300\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 1568be5b72b64fc4aafbacc38787ab70
#: ../../ref/contrib/comments/index.txt:3
msgid "Django's comments framework"
msgstr ""

# 177120d679b44a6c980a73084d370ffe
#: ../../ref/contrib/comments/index.txt:12
msgid ""
"Django's comment framework has been deprecated and is no longer supported. "
"Most users will be better served with a custom solution, or a hosted product "
"like Disqus__."
msgstr ""

# ffb639e0c9ad4453abce4db1fec80cd9
#: ../../ref/contrib/comments/index.txt:16
msgid ""
"The code formerly known as ``django.contrib.comments`` is `still available "
"in an external repository`__."
msgstr ""

# b4077f345f20406a95f4695a78b58265
#: ../../ref/contrib/comments/index.txt:22
msgid ""
"Django includes a simple, yet customizable comments framework. The built-in "
"comments framework can be used to attach comments to any model, so you can "
"use it for comments on blog entries, photos, book chapters, or anything else."
msgstr ""

# d3a419348a604c8f84dd168ab68efd4d
#: ../../ref/contrib/comments/index.txt:27
msgid "Quick start guide"
msgstr ""

# ab663576165040aa8c145d077df859e1
#: ../../ref/contrib/comments/index.txt:29
msgid "To get started using the ``comments`` app, follow these steps:"
msgstr ""

# 2cbe1a3dd93044ab9a1e894cd77ccdce
#: ../../ref/contrib/comments/index.txt:31
msgid ""
"Install the comments framework by adding ``'django.contrib.comments'`` to :"
"setting:`INSTALLED_APPS`."
msgstr ""

# e981f0de2baf4db9a5939a8da4890b22
#: ../../ref/contrib/comments/index.txt:34
msgid ""
"Run ``manage.py migrate`` so that Django will create the comment tables."
msgstr ""

# 8d774bf9300c4e62ab55088bf847b1cc
#: ../../ref/contrib/comments/index.txt:36
msgid "Add the comment app's URLs to your project's ``urls.py``:"
msgstr ""

# 9755f5ec17af44db955636e9f4cd4bf7
#: ../../ref/contrib/comments/index.txt:46
msgid ""
"Use the `comment template tags`_ below to embed comments in your templates."
msgstr ""

# 9e9a0be24bad44ff9b89db38f78f7501
#: ../../ref/contrib/comments/index.txt:49
msgid ""
"You might also want to examine :ref:`the available settings <settings-"
"comments>`."
msgstr ""

# 8e0762da657046888a505245a0d297ed
#: ../../ref/contrib/comments/index.txt:53
msgid "Comment template tags"
msgstr ""

# ca0701e9ee3f480bb9eea2dfca8ceb0a
#: ../../ref/contrib/comments/index.txt:55
msgid ""
"You'll primarily interact with the comment system through a series of "
"template tags that let you embed comments and generate forms for your users "
"to post them."
msgstr ""

# 01b6b140e51e481198baa71d1a8c56f1
#: ../../ref/contrib/comments/index.txt:58
msgid ""
"Like all custom template tag libraries, you'll need to :ref:`load the custom "
"tags <loading-custom-template-libraries>` before you can use them::"
msgstr ""

# 56bd337ccd0f498ca007dd7154012714
#: ../../ref/contrib/comments/index.txt:63
msgid "Once loaded you can use the template tags below."
msgstr ""

# d1fff72779b14a55ad4a6a0efcda4f51
#: ../../ref/contrib/comments/index.txt:66
msgid "Specifying which object comments are attached to"
msgstr ""

# e27e1641e30543f597fde6b72be38f69
#: ../../ref/contrib/comments/index.txt:68
msgid ""
"Django's comments are all \"attached\" to some parent object. This can be "
"any instance of a Django model. Each of the tags below gives you a couple of "
"different ways you can specify which object to attach to:"
msgstr ""

# 26028929c6494bb3bc8fbb4715b8965a
#: ../../ref/contrib/comments/index.txt:72
msgid ""
"Refer to the object directly -- the more common method. Most of the time, "
"you'll have some object in the template's context you want to attach the "
"comment to; you can simply use that object."
msgstr ""

# a0f58020527145589d562f856ba000ce
#: ../../ref/contrib/comments/index.txt:76
msgid ""
"For example, in a blog entry page that has a variable named ``entry``, you "
"could use the following to load the number of comments::"
msgstr ""

# 0e87778c059f451bbd60ede0c0519669
#: ../../ref/contrib/comments/index.txt:81
msgid ""
"Refer to the object by content-type and object id. You'd use this method if "
"you, for some reason, don't actually have direct access to the object."
msgstr ""

# 26eb1ec9280743b2a64fe4f3aab5c2b1
#: ../../ref/contrib/comments/index.txt:84
msgid ""
"Following the above example, if you knew the object ID was ``14`` but didn't "
"have access to the actual object, you could do something like::"
msgstr ""

# 29ca79b73c6a48aeac6887ee27667955
#: ../../ref/contrib/comments/index.txt:89
msgid ""
"In the above, ``blog.entry`` is the app label and (lower-cased) model name "
"of the model class."
msgstr ""

# 486c097aa8cd4a2b97a5835fa521086f
#: ../../ref/contrib/comments/index.txt:93
msgid "Displaying comments"
msgstr ""

# 5b35e019f83b4ee69bc241410a718595
#: ../../ref/contrib/comments/index.txt:95
msgid ""
"To display a list of comments, you can use the template tags :ttag:"
"`render_comment_list` or :ttag:`get_comment_list`."
msgstr ""

# b99bcf6f8c5646c58d7a8f6c65d166e1
#: ../../ref/contrib/comments/index.txt:101
msgid "Quickly rendering a comment list"
msgstr ""

# 94634415d3dc4bb9b2b907fd7f1a53f3
#: ../../ref/contrib/comments/index.txt:103
msgid ""
"The easiest way to display a list of comments for some object is by using :"
"ttag:`render_comment_list`::"
msgstr ""

# 0992a2a99b9448d892ba32773522f4a8
# 389254c2fccf46a5b7c3c185bd179e44
# 6c02a84c317f4706b22fb5cb4dbe869f
# c2637f2ca5444f0d90b0136672b62ece
# 3a2278c74ac0442ea85a7ff70a9288a7
#: ../../ref/contrib/comments/index.txt:108
#: ../../ref/contrib/comments/index.txt:124
#: ../../ref/contrib/comments/index.txt:156
#: ../../ref/contrib/comments/index.txt:184
#: ../../ref/contrib/comments/index.txt:207
msgid "For example::"
msgstr ""

# 6e7bd288c94d49168daaf773c7473bac
#: ../../ref/contrib/comments/index.txt:112
msgid ""
"This will render comments using a template named ``comments/list.html``, a "
"default version of which is included with Django."
msgstr ""

# f1170ee4a01142e8b0bb2923df4c90a8
#: ../../ref/contrib/comments/index.txt:118
msgid "Rendering a custom comment list"
msgstr ""

# c7e0d786d26d42aa8d07a5f05383be38
#: ../../ref/contrib/comments/index.txt:120
msgid ""
"To get the list of comments for some object, use :ttag:`get_comment_list`::"
msgstr ""

# a7499a92e77d45f283542dae892321ce
#: ../../ref/contrib/comments/index.txt:131
msgid ""
"This returns a list of :class:`~django.contrib.comments.models.Comment` "
"objects; see :doc:`the comment model documentation </ref/contrib/comments/"
"models>` for details."
msgstr ""

# 3b128250d15e4dee9e11a3f7957ba5da
#: ../../ref/contrib/comments/index.txt:138
msgid "Linking to comments"
msgstr ""

# e1ecd5136f394e64b418326abfe5a5c2
#: ../../ref/contrib/comments/index.txt:140
msgid ""
"To provide a permalink to a specific comment, use :ttag:"
"`get_comment_permalink`::"
msgstr ""

# 0f285020190341d7bcb44375687278f1
#: ../../ref/contrib/comments/index.txt:144
msgid ""
"By default, the named anchor that will be appended to the URL will be the "
"letter 'c' followed by the comment id, for example 'c82'. You may specify a "
"custom format string if you wish to override this behavior::"
msgstr ""

# 0d996f901d4b4fe09daf29e812548708
#: ../../ref/contrib/comments/index.txt:150
msgid ""
"The format string is a standard python format string. Valid mapping keys "
"include any attributes of the comment object."
msgstr ""

# 2a65b3294c8346d993a5ccbdce041d57
#: ../../ref/contrib/comments/index.txt:153
msgid ""
"Regardless of whether you specify a custom anchor pattern, you must supply a "
"matching named anchor at a suitable place in your template."
msgstr ""

# 007ec0d2362d4ee2b62338f17b3514f0
#: ../../ref/contrib/comments/index.txt:168
msgid ""
"There's a `known bug`_ in Safari/WebKit which causes the named anchor to be "
"forgotten following a redirect. The practical impact for comments is that "
"the Safari/webkit browsers will arrive at the correct page but will not "
"scroll to the named anchor."
msgstr ""

# 03ffed51a6694251a9987c83b22d1749
#: ../../ref/contrib/comments/index.txt:178
msgid "Counting comments"
msgstr ""

# c8e70341bb7144778e5cccc2870f67c3
#: ../../ref/contrib/comments/index.txt:180
msgid ""
"To count comments attached to an object, use :ttag:`get_comment_count`::"
msgstr ""

# 00b73f4e64c84e75a9f13962b6ec2ea1
#: ../../ref/contrib/comments/index.txt:192
msgid "Displaying the comment post form"
msgstr ""

# a156474d602544449d013a20ed4c78b0
#: ../../ref/contrib/comments/index.txt:194
msgid ""
"To show the form that users will use to post a comment, you can use :ttag:"
"`render_comment_form` or :ttag:`get_comment_form`"
msgstr ""

# ce03cc37a3ed4eae9c0f4f62e6c5c0ab
#: ../../ref/contrib/comments/index.txt:200
msgid "Quickly rendering the comment form"
msgstr ""

# 921df17d6288450db825cef947b4c3f6
#: ../../ref/contrib/comments/index.txt:202
msgid ""
"The easiest way to display a comment form is by using :ttag:"
"`render_comment_form`::"
msgstr ""

# b971aea1b1b74b7baa9f826ba44dd7b7
#: ../../ref/contrib/comments/index.txt:211
msgid ""
"This will render comments using a template named ``comments/form.html``, a "
"default version of which is included with Django."
msgstr ""

# a926c03a37f74930a7af9bc5f5da1010
#: ../../ref/contrib/comments/index.txt:217
msgid "Rendering a custom comment form"
msgstr ""

# d6dd1f8866bf4554a7f29e4b1dd3f9b8
#: ../../ref/contrib/comments/index.txt:219
msgid ""
"If you want more control over the look and feel of the comment form, you may "
"use :ttag:`get_comment_form` to get a :doc:`form object </topics/forms/"
"index>` that you can use in the template::"
msgstr ""

# a302711e5dcb4e1482a80c0f7a47e525
#: ../../ref/contrib/comments/index.txt:225
msgid "A complete form might look like::"
msgstr ""

# cfe5cd34d44e4c4baf8b88cb836ed3a5
#: ../../ref/contrib/comments/index.txt:241
msgid ""
"Be sure to read the `notes on the comment form`_, below, for some special "
"considerations you'll need to make if you're using this approach."
msgstr ""

# a6425825099348f387e05cdaa9aa07a5
#: ../../ref/contrib/comments/index.txt:247
msgid "Getting the comment form target"
msgstr ""

# 4d531f3aef2649b58406883cc83db342
#: ../../ref/contrib/comments/index.txt:249
msgid ""
"You may have noticed that the above example uses another template tag -- :"
"ttag:`comment_form_target` -- to actually get the ``action`` attribute of "
"the form. This will always return the correct URL that comments should be "
"posted to; you'll always want to use it like above::"
msgstr ""

# 4c84a5854cba41908be145424e641209
#: ../../ref/contrib/comments/index.txt:257
msgid "Redirecting after the comment post"
msgstr ""

# 3158d533d5544e17b06980eb48b3a32b
#: ../../ref/contrib/comments/index.txt:259
msgid ""
"To specify the URL you want to redirect to after the comment has been "
"posted, you can include a hidden form input called ``next`` in your comment "
"form. For example::"
msgstr ""

# c5609cff75fb4022a7a794d4575aa155
#: ../../ref/contrib/comments/index.txt:265
msgid "Providing a comment form for authenticated users"
msgstr ""

# 60419ad5746b446da04137647f9d6292
#: ../../ref/contrib/comments/index.txt:267
msgid ""
"If a user is already authenticated, it makes little sense to display the "
"name, email, and URL fields, since these can already be retrieved from their "
"login data and profile. In addition, some sites will only accept comments "
"from authenticated users."
msgstr ""

# aedbdb0570384d8e9452bd37ee7e9f5e
#: ../../ref/contrib/comments/index.txt:272
msgid ""
"To provide a comment form for authenticated users, you can manually provide "
"the additional fields expected by the Django comments framework. For "
"example, assuming comments are attached to the model \"object\"::"
msgstr ""

# fb472976fe8c429ea67108f8808bd71e
#: ../../ref/contrib/comments/index.txt:293
msgid ""
"The honeypot, content_type, object_pk, timestamp, and security_hash fields "
"are fields that would have been created automatically if you had simply used "
"``{{ form }}`` in your template, and are referred to in `Notes on the "
"comment form`_ below."
msgstr ""

# cc560a2a35584cf8824df19a8a2b123b
#: ../../ref/contrib/comments/index.txt:298
msgid ""
"Note that we do not need to specify the user to be associated with comments "
"submitted by authenticated users. This is possible because the :doc:`Built-"
"in Comment Models</ref/contrib/comments/models>` that come with Django "
"associate comments with authenticated users by default."
msgstr ""

# a9c35dec2d014192a211cd6a419a6e96
#: ../../ref/contrib/comments/index.txt:303
msgid ""
"In this example, the honeypot field will still be visible to the user; "
"you'll need to hide that field in your CSS::"
msgstr ""

# 452a90ff499546639d8d164689edfe0c
#: ../../ref/contrib/comments/index.txt:310
msgid ""
"If you want to accept either anonymous or authenticated comments, replace "
"the contents of the \"else\" clause above with a standard comment form and "
"the right thing will happen whether a user is logged in or not."
msgstr ""

# e1f6a1f337e7489bbe884245f4a21e99
#: ../../ref/contrib/comments/index.txt:317
msgid "Notes on the comment form"
msgstr ""

# 6ec62c04a45f4c28bd52858ed109fc69
#: ../../ref/contrib/comments/index.txt:319
msgid ""
"The form used by the comment system has a few important anti-spam attributes "
"you should know about:"
msgstr ""

# cd3e3f2236d04abf99c2f0442997d180
#: ../../ref/contrib/comments/index.txt:322
msgid ""
"It contains a number of hidden fields that contain timestamps, information "
"about the object the comment should be attached to, and a \"security hash\" "
"used to validate this information. If someone tampers with this data -- "
"something comment spammers will try -- the comment submission will fail."
msgstr ""

# d3213f9e83df4edfbfb9f3a4e0e1abf8
#: ../../ref/contrib/comments/index.txt:327
msgid ""
"If you're rendering a custom comment form, you'll need to make sure to pass "
"these values through unchanged."
msgstr ""

# d74b8dbb1f804d20890492d671f3dbca
#: ../../ref/contrib/comments/index.txt:330
msgid ""
"The timestamp is used to ensure that \"reply attacks\" can't continue very "
"long. Users who wait too long between requesting the form and posting a "
"comment will have their submissions refused."
msgstr ""

# b55ac34e7f1446a09ea3fb9166d4800e
#: ../../ref/contrib/comments/index.txt:334
msgid ""
"The comment form includes a \"honeypot_\" field. It's a trap: if any data is "
"entered in that field, the comment will be considered spam (spammers often "
"automatically fill in all fields in an attempt to make valid submissions)."
msgstr ""

# ffeb5f6db67d49c9bf20bf641413b6ac
#: ../../ref/contrib/comments/index.txt:338
msgid ""
"The default form hides this field with a piece of CSS and further labels it "
"with a warning field; if you use the comment form with a custom template you "
"should be sure to do the same."
msgstr ""

# 446a3df2165d4b3cbfb4dd54f1f77116
#: ../../ref/contrib/comments/index.txt:342
msgid ""
"The comments app also depends on the more general :doc:`Cross Site Request "
"Forgery protection </ref/contrib/csrf>` that comes with Django.  As "
"described in the documentation, it is best to use ``CsrfViewMiddleware``.  "
"However, if you are not using that, you will need to use the "
"``csrf_protect`` decorator on any views that include the comment form, in "
"order for those views to be able to output the CSRF token and cookie."
msgstr ""

# e145f828e26b4d5f834f6bffb87f4438
#: ../../ref/contrib/comments/index.txt:353
msgid "Configuration"
msgstr ""

# b63050c4ecec48dbb8d1b8c057f758e4
#: ../../ref/contrib/comments/index.txt:355
msgid "See :ref:`comment settings <settings-comments>`."
msgstr ""

# 16c2ddacbc4f4822af87473c9d460f6a
#: ../../ref/contrib/comments/index.txt:359
msgid "More information"
msgstr ""
