# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-02-29 18:30\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 57702b7bc9d4473299c0e95e70b2e5aa
#: ../../ref/contrib/flatpages.txt:3
msgid "The flatpages app"
msgstr ""

# 2db10685b9b0427d92c8c3d640109622
#: ../../ref/contrib/flatpages.txt:8
msgid ""
"Django comes with an optional \"flatpages\" application. It lets you store "
"simple \"flat\" HTML content in a database and handles the management for "
"you via Django's admin interface and a Python API."
msgstr ""

# 751c5b80c1534bb197bc7200f6a8aba4
#: ../../ref/contrib/flatpages.txt:12
msgid ""
"A flatpage is a simple object with a URL, title and content. Use it for one-"
"off, special-case pages, such as \"About\" or \"Privacy Policy\" pages, that "
"you want to store in a database but for which you don't want to develop a "
"custom Django application."
msgstr ""

# 90f5f75602344c5595772bf51c98dc56
#: ../../ref/contrib/flatpages.txt:17
msgid ""
"A flatpage can use a custom template or a default, systemwide flatpage "
"template. It can be associated with one, or multiple, sites."
msgstr ""

# 39b214423170431eaae1cc5a612847d8
#: ../../ref/contrib/flatpages.txt:20
msgid ""
"The content field may optionally be left blank if you prefer to put your "
"content in a custom template."
msgstr ""

# 88b0df1fbdf1437aa192d570e62c0715
#: ../../ref/contrib/flatpages.txt:23
msgid "Here are some examples of flatpages on Django-powered sites:"
msgstr ""

# 4e63a8ec02844f3d813b544f0f4ca444
#: ../../ref/contrib/flatpages.txt:25
msgid "http://www.lawrence.com/about/contact/"
msgstr ""

# c00c0a011cb8402b8d77140f09a46d3d
#: ../../ref/contrib/flatpages.txt:26
msgid "http://www2.ljworld.com/site/rules/"
msgstr ""

# 4e434b3bb19046cb82f45499c1686069
#: ../../ref/contrib/flatpages.txt:29
msgid "Installation"
msgstr ""

# 151dbdc7883e44429e5b2fd74b2cbe7a
#: ../../ref/contrib/flatpages.txt:31
msgid "To install the flatpages app, follow these steps:"
msgstr ""

# acb2846f7a7346948b85a01bfdd9781a
#: ../../ref/contrib/flatpages.txt:33
msgid ""
"Install the :mod:`sites framework <django.contrib.sites>` by adding "
"``'django.contrib.sites'`` to your :setting:`INSTALLED_APPS` setting, if "
"it's not already in there."
msgstr ""

# d9e7251d72794d65af1c3c4c030ed48f
#: ../../ref/contrib/flatpages.txt:37
msgid ""
"Also make sure you've correctly set :setting:`SITE_ID` to the ID of the site "
"the settings file represents. This will usually be ``1`` (i.e. ``SITE_ID = "
"1``, but if you're using the sites framework to manage multiple sites, it "
"could be the ID of a different site."
msgstr ""

# 97ed741ef4884b6dba7a602dedb0cbe4
#: ../../ref/contrib/flatpages.txt:42
msgid ""
"Add ``'django.contrib.flatpages'`` to your :setting:`INSTALLED_APPS` setting."
msgstr ""

# 43bbe51a7f4844f69ab689322c417ea7
#: ../../ref/contrib/flatpages.txt:45
msgid ""
"Add ``'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware'`` to "
"your :setting:`MIDDLEWARE_CLASSES` setting."
msgstr ""

# 5b303c42e0864c9c80dc749307445981
#: ../../ref/contrib/flatpages.txt:48
msgid "Run the command :djadmin:`manage.py syncdb <syncdb>`."
msgstr ""

# c3793c49c5b545239eb31145508a1c2c
#: ../../ref/contrib/flatpages.txt:53
msgid "How it works"
msgstr ""

# 78cec7d307bc454a94eb0f8a62a17421
#: ../../ref/contrib/flatpages.txt:55
msgid ""
"``manage.py syncdb`` creates two tables in your database: "
"``django_flatpage`` and ``django_flatpage_sites``. ``django_flatpage`` is a "
"simple lookup table that simply maps a URL to a title and bunch of text "
"content. ``django_flatpage_sites`` associates a flatpage with a site."
msgstr ""

# e58a72fac6c84cec9e9c1559c95e8ed5
#: ../../ref/contrib/flatpages.txt:60
msgid ""
"The :class:`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware` "
"does all of the work."
msgstr ""

# 47d483552e9c47a490a614f81c27fe19
#: ../../ref/contrib/flatpages.txt:65
msgid ""
"Each time any Django application raises a 404 error, this middleware checks "
"the flatpages database for the requested URL as a last resort. Specifically, "
"it checks for a flatpage with the given URL with a site ID that corresponds "
"to the :setting:`SITE_ID` setting."
msgstr ""

# 22405b9e6d4b4f7989d0b6a8b1c3a1ea
#: ../../ref/contrib/flatpages.txt:70
msgid "If it finds a match, it follows this algorithm:"
msgstr ""

# 3fef9474bc5e46c391b624e201926302
#: ../../ref/contrib/flatpages.txt:72
msgid ""
"If the flatpage has a custom template, it loads that template. Otherwise, it "
"loads the template :file:`flatpages/default.html`."
msgstr ""

# a723e23d2fa041cca45651a97bcb36b9
#: ../../ref/contrib/flatpages.txt:75
msgid ""
"It passes that template a single context variable, ``flatpage``, which is "
"the flatpage object. It uses :class:`~django.template.RequestContext` in "
"rendering the template."
msgstr ""

# 0df71b610d664ef993165c489c17cdff
#: ../../ref/contrib/flatpages.txt:92
msgid ""
"If it doesn't find a match, the request continues to be processed as usual."
msgstr ""

# 5a28e0aa30f3435292e68a209ad7e6fb
#: ../../ref/contrib/flatpages.txt:94
msgid ""
"The middleware only gets activated for 404s -- not for 500s or responses of "
"any other status code."
msgstr ""

# 2d0e0fdfc8ed4435a88498454be45914
#: ../../ref/contrib/flatpages.txt:99
msgid ""
"Because the ``FlatpageFallbackMiddleware`` is applied only after URL "
"resolution has failed and produced a 404, the response it returns will not "
"apply any :ref:`view middleware <view-middleware>` methods. Only requests "
"which are successfully routed to a view via normal URL resolution apply view "
"middleware."
msgstr ""

# e3e4bf02bed24ac98f5ad0fc4505f232
#: ../../ref/contrib/flatpages.txt:105
msgid ""
"Note that the order of :setting:`MIDDLEWARE_CLASSES` matters. Generally, you "
"can put :class:`~django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware` at the end of the list. This means it will run "
"first when processing the response, and ensures that any other response-"
"processing middlewares see the real flatpage response rather than the 404."
msgstr ""

# 30e909fdeff143f694d2ee91dc023101
#: ../../ref/contrib/flatpages.txt:112
msgid ""
"For more on middleware, read the :doc:`middleware docs </topics/http/"
"middleware>`."
msgstr ""

# b78ecc1b10f74a7fa9d1dde767c26483
#: ../../ref/contrib/flatpages.txt:117
msgid ""
"Note that the :class:`~django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware` only steps in once another view has successfully "
"produced a 404 response. If another view or middleware class attempts to "
"produce a 404 but ends up raising an exception instead (such as a "
"``TemplateDoesNotExist`` exception if your site does not have an appropriate "
"template to use for HTTP 404 responses), the response will become an HTTP "
"500 (\"Internal Server Error\") and the :class:`~django.contrib.flatpages."
"middleware.FlatpageFallbackMiddleware` will not attempt to serve a flat page."
msgstr ""

# e81a5d56363d4098b4b71aa87829f82e
#: ../../ref/contrib/flatpages.txt:131
msgid "How to add, change and delete flatpages"
msgstr ""

# 40bf244adf6342b38fa438ffef48ff1f
#: ../../ref/contrib/flatpages.txt:134
msgid "Via the admin interface"
msgstr ""

# 0b515a44e4c6438fae0aa108ef92a641
#: ../../ref/contrib/flatpages.txt:136
msgid ""
"If you've activated the automatic Django admin interface, you should see a "
"\"Flatpages\" section on the admin index page. Edit flatpages as you edit "
"any other object in the system."
msgstr ""

# 40730d7629d3474fa7e6ff37a8dcdffc
#: ../../ref/contrib/flatpages.txt:141
msgid "Via the Python API"
msgstr ""

# cb8e5f692aac4b7fb6a42ed319496b2c
#: ../../ref/contrib/flatpages.txt:145
msgid ""
"Flatpages are represented by a standard :doc:`Django model </topics/db/"
"models>`, which lives in `django/contrib/flatpages/models.py`_. You can "
"access flatpage objects via the :doc:`Django database API </topics/db/"
"queries>`."
msgstr ""

# c970fb127a93405394b5038fa889953f
#: ../../ref/contrib/flatpages.txt:156
msgid ""
"If you add or modify flatpages via your own code, you will likely want to "
"check for duplicate flatpage URLs within the same site. The flatpage form "
"used in the admin performs this validation check, and can be imported from :"
"class:`django.contrib.flatpages.forms.FlatPageForm` and used in your own "
"views."
msgstr ""

# dc91d6a3dee84e0abbc7ebc5f9c3bc41
#: ../../ref/contrib/flatpages.txt:163
msgid "Flatpage templates"
msgstr ""

# efdef86ad45d425fadc334e1db8e977b
#: ../../ref/contrib/flatpages.txt:165
msgid ""
"By default, flatpages are rendered via the template :file:`flatpages/default."
"html`, but you can override that for a particular flatpage: in the admin, a "
"collapsed fieldset titled \"Advanced options\" (clicking will expand it) "
"contains a field for specifying a template name. If you're creating a flat "
"page via the Python API you can simply set the template name as the field "
"``template_name`` on the ``FlatPage`` object."
msgstr ""

# 2eb44cb20ca0401e8e0e2e2e10279447
#: ../../ref/contrib/flatpages.txt:173
msgid ""
"Creating the :file:`flatpages/default.html` template is your responsibility; "
"in your template directory, just create a :file:`flatpages` directory "
"containing a file :file:`default.html`."
msgstr ""

# dcd0aaeabb954bf1b4d725acfa5378b3
#: ../../ref/contrib/flatpages.txt:177
msgid ""
"Flatpage templates are passed a single context variable, ``flatpage``, which "
"is the flatpage object."
msgstr ""

# 4aa4fac3aa864467900dd1ff40127759
#: ../../ref/contrib/flatpages.txt:180
msgid "Here's a sample :file:`flatpages/default.html` template:"
msgstr ""

# 08a343071a9b4e06ab8a13519cc8c3cb
#: ../../ref/contrib/flatpages.txt:194
msgid ""
"Since you're already entering raw HTML into the admin page for a flatpage, "
"both ``flatpage.title`` and ``flatpage.content`` are marked as **not** "
"requiring :ref:`automatic HTML escaping <automatic-html-escaping>` in the "
"template."
msgstr ""

# a64af06abe4142da904f45f3be395a7a
#: ../../ref/contrib/flatpages.txt:200
msgid ""
"Getting a list of :class:`~django.contrib.flatpages.models.FlatPage` objects "
"in your templates"
msgstr ""

# a6cb04a9bc2e4f5eb72b4bc3e7a447f6
#: ../../ref/contrib/flatpages.txt:204
msgid ""
"The flatpages app provides a template tag that allows you to iterate over "
"all of the available flatpages on the :ref:`current site <hooking-into-"
"current-site-from-views>`."
msgstr ""

# 3a135c57530a4f1d9823b1211e28e3be
#: ../../ref/contrib/flatpages.txt:208
msgid ""
"Like all custom template tags, you'll need to :ref:`load its custom tag "
"library <loading-custom-template-libraries>` before you can use it. After "
"loading the library, you can retrieve all current flatpages via the :ttag:"
"`get_flatpages` tag:"
msgstr ""

# 42b21b820ab341d8adb59e2645372bf4
#: ../../ref/contrib/flatpages.txt:226
msgid "Displaying ``registration_required`` flatpages"
msgstr ""

# e2f42431f7014eb59e1509d8e25d2ac8
#: ../../ref/contrib/flatpages.txt:228
msgid ""
"By default, the :ttag:`get_flatpages` templatetag will only show flatpages "
"that are marked ``registration_required = False``. If you want to display "
"registration-protected flatpages, you need to specify an authenticated user "
"using a``for`` clause."
msgstr ""

# 9a92684d082844b29211a758110f9ca2
# 8c7ad37953b84c1bb99fb016ac97ef86
#: ../../ref/contrib/flatpages.txt:233 ../../ref/contrib/flatpages.txt:251
msgid "For example:"
msgstr ""

# 4b9864e52d154313915afe4a44a1d6b9
#: ../../ref/contrib/flatpages.txt:239
msgid ""
"If you provide an anonymous user, :ttag:`get_flatpages` will behave the same "
"as if you hadn't provided a user -- i.e., it will only show you public "
"flatpages."
msgstr ""

# 8d5b1fa277634a878a94c608dc1c2bdf
#: ../../ref/contrib/flatpages.txt:244
msgid "Limiting flatpages by base URL"
msgstr ""

# 8bc4a40494724d60bd6352f90ffbaebf
#: ../../ref/contrib/flatpages.txt:246
msgid ""
"An optional argument, ``starts_with``, can be applied to limit the returned "
"pages to those beginning with a particular base URL. This argument may be "
"passed as a string, or as a variable to be resolved from the context."
msgstr ""
