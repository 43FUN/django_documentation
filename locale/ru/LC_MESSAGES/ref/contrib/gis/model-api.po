# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-27 00:21\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 9d1832a78b584dcbbe492efbb3d1fac5
#: ../../ref/contrib/gis/model-api.txt:5
msgid "GeoDjango Model API"
msgstr ""

# 51e27e5cc0e44787807eddb4ee18d69d
#: ../../ref/contrib/gis/model-api.txt:10
msgid ""
"This document explores the details of the GeoDjango Model API.  Throughout "
"this section, we'll be using the following geographic model of a `ZIP "
"code`__ as our example::"
msgstr ""

# 36140958d0aa47ec9da4c7b4ad075526
#: ../../ref/contrib/gis/model-api.txt:24
msgid "Geometry Field Types"
msgstr ""

# ce6e2dd79dba40559298eebc5302f2d7
#: ../../ref/contrib/gis/model-api.txt:26
msgid ""
"Each of the following geometry field types correspond with the OpenGIS "
"Simple Features specification [#fnogc]_."
msgstr ""

# 4c286a09c42d47278b51b18d6f61b877
#: ../../ref/contrib/gis/model-api.txt:30
msgid "``GeometryField``"
msgstr ""

# e19cf79ec72f4814b5710c98fcd73254
#: ../../ref/contrib/gis/model-api.txt:35
msgid "``PointField``"
msgstr ""

# eb4208834a354bec922f8a5901df7523
#: ../../ref/contrib/gis/model-api.txt:40
msgid "``LineStringField``"
msgstr ""

# 483434b4028d4a70aba3505e587103bb
#: ../../ref/contrib/gis/model-api.txt:45
msgid "``PolygonField``"
msgstr ""

# 06aba71846c34abe84ca93346d81371c
#: ../../ref/contrib/gis/model-api.txt:50
msgid "``MultiPointField``"
msgstr ""

# 6f833ac6607f4541ba4a6924d7c05d00
#: ../../ref/contrib/gis/model-api.txt:55
msgid "``MultiLineStringField``"
msgstr ""

# 33a77c10194c4c4d9c9e9b949df8f671
#: ../../ref/contrib/gis/model-api.txt:60
msgid "``MultiPolygonField``"
msgstr ""

# a5c2054b757847a492f6c8cf0f199b0c
#: ../../ref/contrib/gis/model-api.txt:65
msgid "``GeometryCollectionField``"
msgstr ""

# a5b549f1b3b541b89274c6caed1b3b56
#: ../../ref/contrib/gis/model-api.txt:72
msgid "Geometry Field Options"
msgstr ""

# f7667853e9df4acca42136c764fd0266
#: ../../ref/contrib/gis/model-api.txt:74
msgid ""
"In addition to the regular :ref:`common-model-field-options` available for "
"Django model fields, geometry fields have the following additional options. "
"All are optional."
msgstr ""

# 352c1e878ba24a7391a388b7e822e25f
#: ../../ref/contrib/gis/model-api.txt:79
msgid "``srid``"
msgstr ""

# 6b9e26c76d7340cfa550ab66d51e1e39
#: ../../ref/contrib/gis/model-api.txt:83
msgid ""
"Sets the SRID [#fnogcsrid]_ (Spatial Reference System Identity) of the "
"geometry field to the given value. Defaults to 4326 (also known as "
"`WGS84`__, units are in degrees of longitude and latitude)."
msgstr ""

# 493202564b164c10bd425f7abc25329d
#: ../../ref/contrib/gis/model-api.txt:92
msgid "Selecting an SRID"
msgstr ""

# 75985cf561174aafa6a0afffb250bb60
#: ../../ref/contrib/gis/model-api.txt:94
msgid ""
"Choosing an appropriate SRID for your model is an important decision that "
"the developer should consider carefully.  The SRID is an integer specifier "
"that corresponds to the projection system that will be used to interpret the "
"data in the spatial database. [#fnsrid]_  Projection systems give the "
"context to the coordinates that specify a location.  Although the details of "
"`geodesy`__ are beyond the scope of this documentation, the general problem "
"is that the earth is spherical and representations of the earth (e.g., paper "
"maps, Web maps) are not."
msgstr ""

# 1df4bb147b9e4cebb5729abe99db714e
#: ../../ref/contrib/gis/model-api.txt:103
msgid ""
"Most people are familiar with using latitude and longitude to reference a "
"location on the earth's surface.  However, latitude and longitude are "
"angles, not distances. [#fnharvard]_  In other words, while the shortest "
"path between two points on a flat surface is a straight line, the shortest "
"path between two points on a curved surface (such as the earth) is an *arc* "
"of a `great circle`__. [#fnthematic]_  Thus, additional computation is "
"required to obtain distances in planar units (e.g., kilometers and miles).  "
"Using a geographic coordinate system may introduce complications for the "
"developer later on.  For example, PostGIS versions 1.4 and below do not have "
"the capability to perform distance calculations between non-point geometries "
"using geographic coordinate systems, e.g., constructing a query to  find all "
"points within 5 miles of a county boundary stored as WGS84. [#fndist]_"
msgstr ""

# aca405a515ad4f15a0f29ecdc9447e0d
#: ../../ref/contrib/gis/model-api.txt:116
msgid ""
"Portions of the earth's surface may projected onto a two-dimensional, or "
"Cartesian, plane.  Projected coordinate systems are especially convenient "
"for region-specific applications, e.g., if you know that your database will "
"only cover geometries in `North Kansas`__, then you may consider using "
"projection system specific to that region.  Moreover, projected coordinate "
"systems are defined in Cartesian units (such as meters or feet), easing "
"distance calculations."
msgstr ""

# 998c2df6c4e54a21921b50fbb010f90f
#: ../../ref/contrib/gis/model-api.txt:126
msgid ""
"If you wish to peform arbitrary distance queries using non-point geometries "
"in WGS84, consider upgrading to PostGIS 1.5. For better performance, enable "
"the :attr:`GeometryField.geography` keyword so that :ref:`geography database "
"type <geography-type>` is used instead."
msgstr ""

# 7256801092cd4b1b81618e30f43cf46b
#: ../../ref/contrib/gis/model-api.txt:132
msgid "Additional Resources:"
msgstr ""

# de595a15fc504e14a5d9664ab6e45278
#: ../../ref/contrib/gis/model-api.txt:134
msgid ""
"`spatialreference.org`__: A Django-powered database of spatial reference "
"systems."
msgstr ""

# 26880736af764a318d692457c0f07f2a
#: ../../ref/contrib/gis/model-api.txt:136
msgid ""
"`The State Plane Coordinate System`__: A Web site covering the various "
"projection systems used in the United States.  Much of the U.S. spatial data "
"encountered will be in one of these coordinate systems rather than in a "
"geographic coordinate system such as WGS84."
msgstr ""

# c9fb89a8e41640bf9b7b45b812028314
#: ../../ref/contrib/gis/model-api.txt:148
msgid "``spatial_index``"
msgstr ""

# e2e22c0770514fb998614df4acf1880a
#: ../../ref/contrib/gis/model-api.txt:152
msgid ""
"Defaults to ``True``.  Creates a spatial index for the given geometry field."
msgstr ""

# c3a9d6e6d5334f399b7180a5481e711e
#: ../../ref/contrib/gis/model-api.txt:157
msgid ""
"This is different from the ``db_index`` field option because spatial indexes "
"are created in a different manner than regular database indexes.  "
"Specifically, spatial indexes are typically created using a variant of the R-"
"Tree, while regular database indexes typically use B-Trees."
msgstr ""

# cf14e1a5128b41e2a0747d07be727d07
#: ../../ref/contrib/gis/model-api.txt:164
msgid "``dim``"
msgstr ""

# 1da9ad4481274a33946b41d58d42b676
#: ../../ref/contrib/gis/model-api.txt:168
msgid ""
"This option may be used for customizing the coordinate dimension of the "
"geometry field.  By default, it is set to 2, for representing two-"
"dimensional geometries.  For spatial backends that support it, it may be set "
"to 3 for three-dimensonal support."
msgstr ""

# 5fc973c2fcb6450086c2ab1b9a277d4c
#: ../../ref/contrib/gis/model-api.txt:175
msgid ""
"At this time 3D support requires that GEOS 3.1 be installed, and is limited "
"only to the PostGIS spatial backend."
msgstr ""

# 4b943c8794f1493a825a368e8ceed58b
#: ../../ref/contrib/gis/model-api.txt:179
msgid "``geography``"
msgstr ""

# c72d23a28ca044c6904a5185171aa7a1
#: ../../ref/contrib/gis/model-api.txt:183
msgid ""
"If set to ``True``, this option will create a database column of type "
"geography, rather than geometry.  Please refer to the :ref:`geography type "
"<geography-type>` section below for more details."
msgstr ""

# c4601c72e8024c1bad0fdbe5b2403cec
#: ../../ref/contrib/gis/model-api.txt:190
msgid ""
"Geography support is limited only to PostGIS 1.5+, and will force the SRID "
"to be 4326."
msgstr ""

# 9e2fdb115818425f907009ca8bfbdb35
#: ../../ref/contrib/gis/model-api.txt:196
msgid "Geography Type"
msgstr ""

# 4f4ee8114cb94f82bbba8590a9af307f
#: ../../ref/contrib/gis/model-api.txt:198
msgid ""
"In PostGIS 1.5, the geography type was introduced -- it provides native "
"support for spatial features represented with geographic coordinates (e.g., "
"WGS84 longitude/latitude). [#fngeography]_ Unlike the plane used by a "
"geometry type, the geography type uses a spherical representation of its "
"data.  Distance and measurement operations performed on a geography column "
"automatically employ great circle arc calculations and return linear units.  "
"In other words, when ``ST_Distance`` is called on two geographies, a value "
"in meters is returned (as opposed to degrees if called on a geometry column "
"in WGS84)."
msgstr ""

# b78e1f4be2534c39a8ee575524a95639
#: ../../ref/contrib/gis/model-api.txt:208
msgid ""
"Because geography calculations involve more mathematics, only a subset of "
"the PostGIS spatial lookups are available for the geography type. "
"Practically, this means that in addition to the :ref:`distance lookups "
"<distance-lookups>` only the following additional :ref:`spatial lookups "
"<spatial-lookups>` are available for geography columns:"
msgstr ""

# a041fa1551af4ba4a2afb2b4048b6e83
#: ../../ref/contrib/gis/model-api.txt:214
msgid ":lookup:`bboverlaps`"
msgstr ""

# cdbb1af522544aaf915e22f3f64bfc23
#: ../../ref/contrib/gis/model-api.txt:215
msgid ":lookup:`coveredby`"
msgstr ""

# 89137c2cab4440f7a01c606e66b981b8
#: ../../ref/contrib/gis/model-api.txt:216
msgid ":lookup:`covers`"
msgstr ""

# a230da8ebd0f44dd8cab9911ae666418
#: ../../ref/contrib/gis/model-api.txt:217
msgid ":lookup:`intersects`"
msgstr ""

# 9c88ac6e78f448c7a58ff33bad0c2890
#: ../../ref/contrib/gis/model-api.txt:219
msgid ""
"For more information, the PostGIS documentation contains a helpful section "
"on determining `when to use geography data type over geometry data type "
"<http://postgis.refractions.net/documentation/manual-1.5/ch04."
"html#PostGIS_GeographyVSGeometry>`_."
msgstr ""

# 4d5b361ee56d4fdd951fa95cd59a6545
#: ../../ref/contrib/gis/model-api.txt:224
msgid "``GeoManager``"
msgstr ""

# 5b965847b2e14bdc9546f1ae0f133c38
#: ../../ref/contrib/gis/model-api.txt:229
msgid ""
"In order to conduct geographic queries, each geographic model requires a "
"``GeoManager`` model manager.  This manager allows for the proper SQL "
"construction for geographic queries; thus, without it, all geographic "
"filters will fail.  It should also be noted that ``GeoManager`` is required "
"even if the model does not have a geographic field itself, e.g., in the case "
"of a ``ForeignKey`` relation to a model with a geographic field.  For "
"example, if we had an ``Address`` model with a ``ForeignKey`` to our "
"``Zipcode`` model::"
msgstr ""

# 921e64f284fe4fe0b5a67ad086a2f6ce
#: ../../ref/contrib/gis/model-api.txt:248
msgid ""
"The geographic manager is needed to do spatial queries on related "
"``Zipcode`` objects, for example::"
msgstr ""

# 429caf743c8c46858a4b25a1eb66b8d6
#: ../../ref/contrib/gis/model-api.txt:253
msgid "Footnotes"
msgstr ""

# cad500e101d447499014f16cbd86d8fc
#: ../../ref/contrib/gis/model-api.txt:254
msgid ""
"OpenGIS Consortium, Inc., `Simple Feature Specification For SQL <http://www."
"opengeospatial.org/standards/sfs>`_."
msgstr ""

# 8cb88041f72841eb95d227a9e64321ca
#: ../../ref/contrib/gis/model-api.txt:255
msgid ""
"*See id.* at Ch. 2.3.8, p. 39 (Geometry Values and Spatial Reference "
"Systems)."
msgstr ""

# eb8ea806594342dc8073d4e8b0a03de2
#: ../../ref/contrib/gis/model-api.txt:256
msgid ""
"Typically, SRID integer corresponds to an EPSG (`European Petroleum Survey "
"Group <http://www.epsg.org>`_) identifier.  However, it may also be "
"associated with custom projections defined in spatial database's spatial "
"reference systems table."
msgstr ""

# 0534ba22b7804caa837e7974cf085358
#: ../../ref/contrib/gis/model-api.txt:257
msgid ""
"Harvard Graduate School of Design, `An Overview of Geodesy and Geographic "
"Referencing Systems <http://www.gsd.harvard.edu/gis/manual/projections/"
"fundamentals/>`_.  This is an excellent resource for an overview of "
"principles relating to geographic and Cartesian coordinate systems."
msgstr ""

# 8532b385be054c4b973c3a10483d1418
#: ../../ref/contrib/gis/model-api.txt:258
msgid ""
"Terry A. Slocum, Robert B. McMaster, Fritz C. Kessler, & Hugh H. Howard, "
"*Thematic Cartography and Geographic Visualization* (Prentice Hall, 2nd "
"edition), at Ch. 7.1.3."
msgstr ""

# cd2e9346ca9f4c35a1055cd32f632ae4
#: ../../ref/contrib/gis/model-api.txt:259
msgid ""
"This limitation does not apply to PostGIS 1.5.  It should be noted that even "
"in previous versions of PostGIS, this isn't impossible using GeoDjango; you "
"could for example, take a known point in a projected coordinate system, "
"buffer it to the appropriate radius, and then perform an intersection "
"operation with the buffer transformed to the geographic coordinate system."
msgstr ""

# 3d568dac009044378f54df476f058edc
#: ../../ref/contrib/gis/model-api.txt:260
msgid ""
"Please refer to the `PostGIS Geography Type <http://postgis.refractions.net/"
"documentation/manual-1.5/ch04.html#PostGIS_Geography>`_ documentation for "
"more details."
msgstr ""
