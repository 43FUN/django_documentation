# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-11-17 10:48+0200\n"
"PO-Revision-Date: 2013-02-27 00:21\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# f6087460f8b84bebacbbc01001c46870
#: ../../ref/contrib/gis/install/postgis.txt:3
msgid "Installing PostGIS"
msgstr ""

# 56af883d3555490fbf6732fdbd63101c
#: ../../ref/contrib/gis/install/postgis.txt:5
msgid ""
"`PostGIS`__ adds geographic object support to PostgreSQL, turning it into a "
"spatial database. :ref:`geosbuild`, :ref:`proj4` and :ref:`gdalbuild` should "
"be installed prior to building PostGIS. You might also need additional "
"libraries, see `PostGIS requirements`_."
msgstr ""

# 7bf7188d738b4f1491ec4044a6c7899c
#: ../../ref/contrib/gis/install/postgis.txt:12
msgid ""
"The `psycopg2`_ module is required for use as the database adapter when "
"using GeoDjango with PostGIS."
msgstr ""

# f3db76f10bdb41e5839dfe839a5e5a09
#: ../../ref/contrib/gis/install/postgis.txt:18
msgid ""
"On Debian/Ubuntu, you are advised to install the following packages: "
"postgresql-x.x, postgresql-x.x-postgis, postgresql-server-dev-x.x, python-"
"psycopg2 (x.x matching the PostgreSQL version you want to install). Please "
"also consult platform-specific instructions if you are on :ref:`macosx` or :"
"ref:`windows`."
msgstr ""

# e1c7067886854c7bac4740d6bbafca51
#: ../../ref/contrib/gis/install/postgis.txt:25
msgid "Building from source"
msgstr ""

# 525f5f5e8c4549d3b3d1c0c1fe9f83bf
#: ../../ref/contrib/gis/install/postgis.txt:27
msgid "First download the source archive, and extract::"
msgstr ""

# e0298becea4844278f68750bfb078593
#: ../../ref/contrib/gis/install/postgis.txt:33
msgid "Next, configure, make and install PostGIS::"
msgstr ""

# bd82c4f5b73a49a091c0ca7e209e3daf
#: ../../ref/contrib/gis/install/postgis.txt:37
msgid "Finally, make and install::"
msgstr ""

#: ../../ref/contrib/gis/install/postgis.txt:45
msgid ""
"GeoDjango does not automatically create a spatial database.  Please consult "
"the section on :ref:`spatialdb_template91` for more information."
msgstr ""

# 9ccf80dd8a2c4ae3874008c888d3f76f
#: ../../ref/contrib/gis/install/postgis.txt:51
msgid "Post-installation"
msgstr ""

#: ../../ref/contrib/gis/install/postgis.txt:57
msgid "Creating a spatial database"
msgstr ""

# 118d1b25695e411cabde13a92101bdd7
#: ../../ref/contrib/gis/install/postgis.txt:59
msgid ""
"PostGIS 2 includes an extension for Postgres 9.1+ that can be used to enable "
"spatial functionality::"
msgstr ""

#: ../../ref/contrib/gis/install/postgis.txt:66
msgid ""
"The database user must be a superuser in order to run ``CREATE EXTENSION "
"postgis;``."
msgstr ""

#: ../../ref/contrib/gis/install/postgis.txt:69
msgid ""
"GeoDjango does not currently leverage any `PostGIS topology "
"functionality`__. If you plan to use those features at some point, you can "
"also install the ``postgis_topology`` extension by issuing ``CREATE "
"EXTENSION postgis_topology;``."
msgstr ""

#: ../../ref/contrib/gis/install/postgis.txt:78
msgid ""
"The ``CREATE EXTENSION postgis`` command is now automatically run during "
"the :djadmin:`migrate` process. You can still create it manually if you wish."
msgstr ""

# 0e7b9c2e4a3048a18a7b3364180fc170
#: ../../ref/contrib/gis/install/postgis.txt:83
msgid "Managing the database"
msgstr ""

# c1d06f43afae474e989c9220b9d80904
#: ../../ref/contrib/gis/install/postgis.txt:85
msgid ""
"To administer the database, you can either use the pgAdmin III program (:"
"menuselection:`Start --> PostgreSQL 9.x --> pgAdmin III`) or the SQL Shell (:"
"menuselection:`Start --> PostgreSQL 9.x --> SQL Shell`). For example, to "
"create a ``geodjango`` spatial database and user, the following may be "
"executed from the SQL Shell as the ``postgres`` user::"
msgstr ""
