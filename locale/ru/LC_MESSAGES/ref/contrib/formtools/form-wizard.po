# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated <>, 2012, 2013.
# Dmitriy Kostochko <alerion.um@gmail.com>, 2013, 2014.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-11 11:43+0300\n"
"PO-Revision-Date: 2014-04-06 22:03+0300\n"
"Last-Translator: Dmitriy Kostochko <alerion.um@gmail.com>\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 6da4df8a647d455e9bcb41134900677b
#: ../../ref/contrib/formtools/form-wizard.txt:3
msgid "Form wizard"
msgstr "Мастер форм"

# b8db9a32484d4c31b5cba7db4557b41c
#: ../../ref/contrib/formtools/form-wizard.txt:8
msgid ""
"Django comes with an optional \"form wizard\" application that splits :doc:"
"`forms </topics/forms/index>` across multiple Web pages. It maintains state "
"in one of the backends so that the full server-side processing can be "
"delayed until the submission of the final form."
msgstr ""
"Django поставляется с приложением «мастер форм», которое распределяет :doc:"
"`формы </topics/forms/index>` по нескольким страницам сайта. Приложение "
"хранит своё состояние в одном из бэкэндов, таким образом обработка введённой "
"информации может быть отложена до заполнения последней формы."

# 57253354f2a54f10a6e1d6f9be2dcfe2
#: ../../ref/contrib/formtools/form-wizard.txt:13
msgid ""
"You might want to use this if you have a lengthy form that would be too "
"unwieldy for display on a single page. The first page might ask the user for "
"core information, the second page might ask for less important information, "
"etc."
msgstr ""
"Вам может потребоваться это приложение для отображения длинной формы, "
"которая является слишком громоздкой для отображения на одной странице. "
"Первая страница может запрашивать основную информацию, а вторая страница "
"может спрашивать дополнительную информацию и так далее."

# 70af95c8500d40839b9ce6edb4a245f9
#: ../../ref/contrib/formtools/form-wizard.txt:18
msgid "The term \"wizard\", in this context, is `explained on Wikipedia`_."
msgstr ""
"Термин «мастер» в этом контексте `описан на Википедии <explained on "
"Wikipedia>`_."

# be4d2d2f5ab64781be8c2cb986171017
#: ../../ref/contrib/formtools/form-wizard.txt:23
msgid "How it works"
msgstr "Как это работает"

# 0837bbd7cd5f4b47b2386d7145a6d559
#: ../../ref/contrib/formtools/form-wizard.txt:25
msgid "Here's the basic workflow for how a user would use a wizard:"
msgstr "Рассмотрим основные шаги использования мастера пользователем:"

# baec6e9da4484c968f3ebd3d4e37c30d
#: ../../ref/contrib/formtools/form-wizard.txt:27
msgid ""
"The user visits the first page of the wizard, fills in the form and submits "
"it."
msgstr ""
"Пользователь открывает первую страницу мастера, заполняет форму и отправляет "
"её."

# 89955829e58144198426285d008a8b41
#: ../../ref/contrib/formtools/form-wizard.txt:29
msgid ""
"The server validates the data. If it's invalid, the form is displayed again, "
"with error messages. If it's valid, the server saves the current state of "
"the wizard in the backend and redirects to the next step."
msgstr ""
"Сервер проверяет данные. Если они содержат ошибку, то форма отображается "
"заново, показывая ошибки. Если данные прошли проверку, сервер сохраняет "
"текущее состояние мастера в бэкэнде и перенаправляет пользователя на "
"следующую страницу."

# 4a5112f7936848a0809f6169b706beeb
#: ../../ref/contrib/formtools/form-wizard.txt:32
msgid "Step 1 and 2 repeat, for every subsequent form in the wizard."
msgstr "Оба шага повторяются для каждой формы мастера."

# 1bae7250ce224a3485349dcb88c26e09
#: ../../ref/contrib/formtools/form-wizard.txt:33
msgid ""
"Once the user has submitted all the forms and all the data has been "
"validated, the wizard processes the data -- saving it to the database, "
"sending an email, or whatever the application needs to do."
msgstr ""
"После того, как пользователь заполнит все формы и все данные пройдут "
"проверку, мастер обрабатывает данные, сохраняя их в базе данных, отправляя "
"почту или производит другие требуемые действия."

# c40c7cf201e849dba7a5b491fc890c5b
#: ../../ref/contrib/formtools/form-wizard.txt:38
msgid "Usage"
msgstr "Использование"

# 74350fa2b6c748bc9b4d5dedf24c3f56
#: ../../ref/contrib/formtools/form-wizard.txt:40
msgid ""
"This application handles as much machinery for you as possible. Generally, "
"you just have to do these things:"
msgstr ""
"Это приложение максимально автоматизирует данный процесс. В общем случае, "
"вам надо сделать следующее:"

# 973c1debae0e4b9b83442ec5bf67b1fa
#: ../../ref/contrib/formtools/form-wizard.txt:43
msgid ""
"Define a number of :class:`~django.forms.Form` classes -- one per wizard "
"page."
msgstr ""
"Определить ряд классов :class:`~django.forms.Form`, по одному на каждую "
"страницу мастера."

# 2e2d069397b74c5caa6673b2422d7971
#: ../../ref/contrib/formtools/form-wizard.txt:46
msgid ""
"Create a :class:`WizardView` subclass that specifies what to do once all of "
"your forms have been submitted and validated. This also lets you override "
"some of the wizard's behavior."
msgstr ""
"Создать наследника класса :class:`WizardView`, который будет определять , "
"что надо сделать когда все формы будут заполнены и проверены. Класс также "
"позволяет изменить поведение мастера."

# 8b4435f42bd34de3a10d1767c7501e7a
#: ../../ref/contrib/formtools/form-wizard.txt:50
msgid ""
"Create some templates that render the forms. You can define a single, "
"generic template to handle every one of the forms, or you can define a "
"specific template for each form."
msgstr ""
"Создать несколько шаблонов, которые будут отображать формы. Вы можете "
"определить либо один общий шаблон для обработки каждой формы, либо создать "
"собственный шаблон для каждой формы."

# 238c6ef5ef3f4a029c4ffae097d602d7
#: ../../ref/contrib/formtools/form-wizard.txt:54
msgid ""
"Add ``django.contrib.formtools`` to your :setting:`INSTALLED_APPS` list in "
"your settings file."
msgstr ""
"Добавить ``django.contrib.formtools`` в параметр конфигурации :setting:"
"`INSTALLED_APPS`."

# c713e434219e40c384fc66413d125971
#: ../../ref/contrib/formtools/form-wizard.txt:57
msgid ""
"Point your URLconf at your :class:`WizardView` :meth:`~WizardView.as_view` "
"method."
msgstr ""
"Зарегистрировать URL, который будет вызывать метод :meth:`~WizardView."
"as_view` вашего класса :class:`WizardView`."

# bc1103745ca541df8755a9f3292b6e4e
#: ../../ref/contrib/formtools/form-wizard.txt:61
msgid "Defining ``Form`` classes"
msgstr "Определение классов ``Form``"

# 001724a6ef62416da75216d16d5db9fb
#: ../../ref/contrib/formtools/form-wizard.txt:63
msgid ""
"The first step in creating a form wizard is to create the :class:`~django."
"forms.Form` classes.  These should be standard :class:`django.forms.Form` "
"classes, covered in the :doc:`forms documentation </topics/forms/index>`.  "
"These classes can live anywhere in your codebase, but convention is to put "
"them in a file called :file:`forms.py` in your application."
msgstr ""
"Первым шагом создания мастера форм будет определение классов :class:`~django."
"forms.Form`. Это обычные классы :class:`django.forms.Form`, описанные в :doc:"
"`соответствующем разделе </topics/forms/index>`. Код этих классов может "
"располагаться в любом месте вашего проекта, но по принятым соглашениям лучше "
"его располагать в файле :file:`forms.py` вашего приложения."

# 92ea59485c80441da04bd2ef9b058f3b
#: ../../ref/contrib/formtools/form-wizard.txt:70
msgid ""
"For example, let's write a \"contact form\" wizard, where the first page's "
"form collects the sender's email address and subject, and the second page "
"collects the message itself. Here's what the :file:`forms.py` might look "
"like::"
msgstr ""
"Давайте для примера напишем мастер для «контактной формы», где на первой "
"странице будем запрашивать адрес электронной почты и тему, а на второй — "
"само тело сообщения. Вот как файл :file:`forms.py` может выглядеть::"

# 30f3870edea6497c8e69a40f9cc4c18c
#: ../../ref/contrib/formtools/form-wizard.txt:86
msgid ""
"In order to use :class:`~django.forms.FileField` in any form, see the "
"section :ref:`Handling files <wizard-files>` below to learn more about what "
"to do."
msgstr ""
"Для того, чтобы использовать класс :class:`~django.forms.FileField` на любой "
"форме, обратитесь к расположенному далее разделу :ref:` Обработка файлов "
"<wizard-files>`."

# 4093247f937c4d62951e1fc5b8c7ce9f
#: ../../ref/contrib/formtools/form-wizard.txt:91
msgid "Creating a ``WizardView`` subclass"
msgstr "Наследование ``WizardView``"

# 38462ecee3774800bb9404366d9d7679
#: ../../ref/contrib/formtools/form-wizard.txt:96
msgid ""
"The next step is to create a :class:`django.contrib.formtools.wizard.views."
"WizardView` subclass. You can also use the :class:`SessionWizardView` or :"
"class:`CookieWizardView` classes which preselect the backend used for "
"storing information during execution of the wizard (as their names indicate, "
"server-side sessions and browser cookies respectively)."
msgstr ""
"Следующим шагом будет создание класса :class:`django.contrib.formtools."
"wizard.views.WizardView`. Вы можете также использовать классы :class:"
"`SessionWizardView` или :class:`CookieWizardView`, которые используют "
"соответствующий бэкэнд для хранения информации во время работы мастера (как "
"видно по их именам, для хранения информации в сессии на сервере или в куках "
"браузера)."

# 35794c07d9434b15b61440e5f1098dba
#: ../../ref/contrib/formtools/form-wizard.txt:105
msgid ""
"To use the :class:`SessionWizardView` follow the instructions in the :doc:"
"`sessions documentation </topics/http/sessions>` on how to enable sessions."
msgstr ""
"Для использования класса :class:`SessionWizardView` следуйте инструкциям :"
"doc:`документации по сессиям </topics/http/sessions>` для активации "
"поддержки сессий."

# b40c4b9dd91c47a9a243c60bd835c1dc
#: ../../ref/contrib/formtools/form-wizard.txt:109
#, fuzzy
msgid ""
"We will use the :class:`SessionWizardView` in all examples but is completely "
"fine to use the :class:`CookieWizardView` instead. As with your :class:"
"`~django.forms.Form` classes, this :class:`WizardView` class can live "
"anywhere in your codebase, but convention is to put it in :file:`views.py`."
msgstr ""
"Мы будем использовать класс :class:`SessionWizardView` во всех примерах, но "
"легко могли бы использовать и класс :class:`CookieWizardView`. Как и в "
"случае с классами :class:`~django.forms.Form`, код класса :class:"
"`WizardView` может располагаться в любом месте проекта, но по соглашению его "
"надо размещать в файле :file:`views.py`."

# aa9f7f2a6ce14ddb91b4c00f992b86ae
#: ../../ref/contrib/formtools/form-wizard.txt:114
msgid ""
"The only requirement on this subclass is that it implement a :meth:"
"`~WizardView.done()` method."
msgstr ""
"Единственное требование к вашему классу — он должен реализовывать метод :"
"meth:`~WizardView.done()`."

# a6183050c1df456bae149ba3f1233a24
#: ../../ref/contrib/formtools/form-wizard.txt:119
#, fuzzy
msgid ""
"This method specifies what should happen when the data for *every* form is "
"submitted and validated. This method is passed a list and dictionary of "
"validated :class:`~django.forms.Form` instances."
msgstr ""
"Этот метод определяет, что должно происходить при отправке и проверке данных "
"*всех* формы. Этот метод принимает список проверенных экземпляров класса :"
"class:`~django.forms.Form`."

# 5649e2099f0345058b548dfe0f350d21
#: ../../ref/contrib/formtools/form-wizard.txt:123
msgid ""
"In this simplistic example, rather than performing any database operation, "
"the method simply renders a template of the validated data::"
msgstr ""
"Это упрощённый пример. Вместо выполнения всех операций с базой данных, метод "
"просто заполняет шаблон проверенными данными::"

# 45272456a65f4679a645aa242874ee40
#: ../../ref/contrib/formtools/form-wizard.txt:135
msgid ""
"Note that this method will be called via ``POST``, so it really ought to be "
"a good Web citizen and redirect after processing the data. Here's another "
"example::"
msgstr ""
"Следует отметить, что этот метод будет выполняться через ``POST``, поэтому "
"по правилам хорошего тона после обработки следует перенаправлять "
"пользователя на другую страницу. Вот другой пример::"

# be72150ff27145379da031451e658476
#: ../../ref/contrib/formtools/form-wizard.txt:147
msgid ""
"In addition to ``form_list``, the :meth:`~WizardView.done` method is passed "
"a ``form_dict``, which allows you to access the wizard's forms based on "
"their step names. This is especially useful when using :class:"
"`NamedUrlWizardView`, for example::"
msgstr ""

# 4f60b4b52cc1405e90a682f59ebcf058
#: ../../ref/contrib/formtools/form-wizard.txt:159
msgid ""
"Previously, the ``form_dict`` argument wasn't passed to the ``done`` method."
msgstr ""

# 57e8b04f0bd144c88c352d415c16807e
#: ../../ref/contrib/formtools/form-wizard.txt:162
msgid ""
"See the section :ref:`Advanced WizardView methods <wizardview-advanced-"
"methods>` below to learn about more :class:`WizardView` hooks."
msgstr ""
"Обратитесь к разделу :ref:`Дополнительные методы WizardView <wizardview-"
"advanced-methods>` для получения информации по обработчикам класса :class:"
"`WizardView`."

# 639e435141d9446a8c755e613fb84323
#: ../../ref/contrib/formtools/form-wizard.txt:166
msgid "Creating templates for the forms"
msgstr "Создание шаблонов для форм"

# 3038ed6debc3417da7bff360b9fbfdd0
#: ../../ref/contrib/formtools/form-wizard.txt:168
msgid ""
"Next, you'll need to create a template that renders the wizard's forms. By "
"default, every form uses a template called :file:`formtools/wizard/"
"wizard_form.html`. You can change this template name by overriding either "
"the :attr:`~django.views.generic.base.TemplateResponseMixin.template_name` "
"attribute or the :meth:`~django.views.generic.base.TemplateResponseMixin."
"get_template_names()` method, which are documented in the :class:`~django."
"views.generic.base.TemplateResponseMixin` documentation.  The latter one "
"allows you to use a different template for each form (:ref:`see the example "
"below <wizard-template-for-each-form>`)."
msgstr ""
"Далее, необходимо создать шаблон для отображения форм мастера. По умолчанию "
"каждая форма использует шаблон :file:`formtools/wizard/wizard_form.html`. Вы "
"можете изменить имя этого шаблона, переопределив либо атрибут :attr:`~django."
"views.generic.base.TemplateResponseMixin.template_name`, либо метод :meth:"
"`~django.views.generic.base.TemplateResponseMixin.get_template_names()`, "
"которые описаны в документации на класс :class:`~django.views.generic.base."
"TemplateResponseMixin`. Последний класс позволяет использовать отдельные "
"шаблоны для каждой формы (:ref:`см. примеры далее <wizard-template-for-each-"
"form>`)."

# f00b44a1334748758ea9c477327cad2b
#: ../../ref/contrib/formtools/form-wizard.txt:180
msgid ""
"This template expects a ``wizard`` object that has various items attached to "
"it:"
msgstr ""
"Шаблон ожидает объект ``wizard``, к которому привязаны различные элементы:"

# 0c2c7199c6d9414ba9bd7ddd0cfb5dfc
#: ../../ref/contrib/formtools/form-wizard.txt:183
msgid ""
"``form`` -- The :class:`~django.forms.Form` or :class:`~django.forms."
"formsets.BaseFormSet` instance for the current step (either empty or with "
"errors)."
msgstr ""
"``form`` -- это экземпляр классов :class:`~django.forms.Form` или :class:"
"`~django.forms.formset.BaseFormSet` для текущего шага мастера (либо пустой, "
"либо с ошибками)."

# 72c931cf109c4eb0a5c6f2968fd2ae21
#: ../../ref/contrib/formtools/form-wizard.txt:187
msgid "``steps`` -- A helper object to access the various steps related data:"
msgstr ""
"``steps`` -- вспомогательный объект для доступа к данным других шагов "
"мастера:"

# 6e76d701fa994f9eb57a30a8a40d14b6
#: ../../ref/contrib/formtools/form-wizard.txt:189
msgid "``step0`` -- The current step (zero-based)."
msgstr "``step0`` -- номер текущего шага (начинается с нуля)."

# a632bc27f7ad4c069ccb70e200203e94
#: ../../ref/contrib/formtools/form-wizard.txt:190
msgid "``step1`` -- The current step (one-based)."
msgstr "``step1`` -- номер текущего шага (начинается с единицы)."

# 3c5b06102eac40e1ab30ff8270a34234
#: ../../ref/contrib/formtools/form-wizard.txt:191
msgid "``count`` -- The total number of steps."
msgstr "``count`` -- общее количество шагов."

# d564a9e63447474bae09246ef77be28e
#: ../../ref/contrib/formtools/form-wizard.txt:192
msgid "``first`` -- The first step."
msgstr "``first`` -- признак первого шага."

# a5e557ccbf5d482480eaa64684a849c4
#: ../../ref/contrib/formtools/form-wizard.txt:193
msgid "``last`` -- The last step."
msgstr "``last`` -- признак последнего шага."

# 8fc942544ef74acebc4a86602329d5b5
#: ../../ref/contrib/formtools/form-wizard.txt:194
msgid "``current`` -- The current (or first) step."
msgstr "``current`` -- текущий (или первый) шаг."

# 08128853882d4ae18d1e0d171a87593b
#: ../../ref/contrib/formtools/form-wizard.txt:195
msgid "``next`` -- The next step."
msgstr "``next`` -- следующий шаг."

# 3d15ffdd194f426196017ab642d0fff1
#: ../../ref/contrib/formtools/form-wizard.txt:196
msgid "``prev`` -- The previous step."
msgstr "``prev`` -- предыдущий шаг."

# 75e9abb2554445dd99da3dc1dbeb1ade
#: ../../ref/contrib/formtools/form-wizard.txt:197
msgid "``index`` -- The index of the current step."
msgstr "``index`` -- индекс текущего шага."

# 5310d04dc19e48c3a2e2a54828a5dbbf
#: ../../ref/contrib/formtools/form-wizard.txt:198
msgid "``all`` -- A list of all steps of the wizard."
msgstr "``all`` -- список всех шагов мастера."

# 30c6304f7c8243038a964e1597bc1744
#: ../../ref/contrib/formtools/form-wizard.txt:200
msgid ""
"You can supply additional context variables by using the :meth:`~WizardView."
"get_context_data` method of your :class:`WizardView` subclass."
msgstr ""
"Вы можете добавлять в контекст дополнительные переменные с помощью метода :"
"meth:`~WizardView.get_context_data` вашего потомка класса :class:"
"`WizardView`."

# 2c7b9aadecc642e39bb5bfa1782b20e8
#: ../../ref/contrib/formtools/form-wizard.txt:204
msgid "Here's a full example template:"
msgstr "Вот полный пример шаблона:"

# 2892753d6f2641c88d3718f56ded1a44
#: ../../ref/contrib/formtools/form-wizard.txt:239
msgid ""
"Note that ``{{ wizard.management_form }}`` **must be used** for the wizard "
"to work properly."
msgstr ""
"Следует отметить, что тег ``{{ wizard.management_form }}`` должен "
"**обязательно присутствовать** в шаблоне, иначе мастер будет работать "
"неправильно."

# ddd5baa167a24ec8ae231bc230a0649b
#: ../../ref/contrib/formtools/form-wizard.txt:245
msgid "Hooking the wizard into a URLconf"
msgstr "Подключение мастера к URL"

# a457bc03ec2e454f8926625ab3ea54cb
#: ../../ref/contrib/formtools/form-wizard.txt:249
msgid ""
"Finally, we need to specify which forms to use in the wizard, and then "
"deploy the new :class:`WizardView` object at a URL in the ``urls.py``. The "
"wizard's ``as_view()`` method takes a list of your :class:`~django.forms."
"Form` classes as an argument during instantiation::"
msgstr ""
"Наконец, нам надо указать какие формы надо использовать в мастере и затем "
"подключить новый объект :class:`WizardView` к URL в файле ``urls.py``. Метод "
"мастера :meth:`as_view()` принимает список экземпляров класса :class:"
"`~django.forms.Form` в качестве аргумента::"

# 213c8975879749c58c7f90c2d3135bdb
#: ../../ref/contrib/formtools/form-wizard.txt:265
msgid ""
"You can also pass the form list as a class attribute named ``form_list``::"
msgstr ""
"Вы можете также передать список форм через атрибут класса ``form_list``::"

# 639e435141d9446a8c755e613fb84323
#: ../../ref/contrib/formtools/form-wizard.txt:273
msgid "Using a different template for each form"
msgstr "Использование различных шаблонов для каждой формы"

# e3fbf8ffeaef4c6eb5b16b2cb84fe7b7
#: ../../ref/contrib/formtools/form-wizard.txt:275
msgid ""
"As mentioned above, you may specify a different template for each form. "
"Consider an example using a form wizard to implement a multi-step checkout "
"process for an online store. In the first step, the user specifies a billing "
"and shipping address. In the second step, the user chooses payment type. If "
"they chose to pay by credit card, they will enter credit card information in "
"the next step. In the final step, they will confirm the purchase."
msgstr ""
"Как упоминалось ранее, вы можете указывать различные шаблоны для каждой "
"формы. Рассмотрим пример использования мастера для реализации многошагового "
"процесса покупки в интернет магазине. На первом шаге пользователь определяет "
"адреса оплаты и доставки. На втором шаге. пользователь выбирает тип платежа. "
"Если будет выбрана оплата с помощью кредитной карты, они введут информацию о "
"карте на следующем шаге. На последнем шаге производится подтверждение "
"покупки."

# d755cdfb93bd4cd3a35428a4f1c11740
#: ../../ref/contrib/formtools/form-wizard.txt:282
msgid "Here's what the view code might look like::"
msgstr "Вот так может выглядеть код подобного представления::"

# 79fe4e86924f442e9bc8667b08b8ffc5
#: ../../ref/contrib/formtools/form-wizard.txt:314
msgid "The ``urls.py`` file would contain something like::"
msgstr "Файл ``urls.py`` будет содержать нечто подобное::"

# b113f1ce75344b04ad2b292a0e6ba35d
#: ../../ref/contrib/formtools/form-wizard.txt:322
#, fuzzy
msgid ""
"The ``condition_dict`` can be passed as attribute for the ``as_view()` "
"method or as a class attribute named ``condition_dict``::"
msgstr ""
"Словарь ``condiction_dict`` может быть передан как атрибут метода "
"``as_view()` или как атрибут класса  ``condition_dict``::"

# b7435e0050364200b796f39d4af93a1a
#: ../../ref/contrib/formtools/form-wizard.txt:328
msgid ""
"Note that the ``OrderWizard`` object is initialized with a list of pairs. "
"The first element in the pair is a string that corresponds to the name of "
"the step and the second is the form class."
msgstr ""
"Следует отметить, что объект ``OrderWizard`` инициализируется списком пар. "
"Первым элементом пары является строка с именем шага, а вторая -- класс формы."

# ae335a0fa95c45fdb9b7eef301e03256
#: ../../ref/contrib/formtools/form-wizard.txt:332
msgid ""
"In this example, the :meth:`~django.views.generic.base.TemplateResponseMixin."
"get_template_names()` method returns a list containing a single template, "
"which is selected based on the name of the current step."
msgstr ""
"В данном примере метод :meth:`~django.views.generic.base."
"TemplateResponseMixin.get_template_names()` возвращает список единый шаблон, "
"который был выбран по имени текущего шага."

# 3980df84eb9c40e2893b91ae3946f443
#: ../../ref/contrib/formtools/form-wizard.txt:340
msgid "Advanced ``WizardView`` methods"
msgstr "Дополнительные методы ``WizardView``"

# e1cd9d867dba467c969f75ffda82e5be
#: ../../ref/contrib/formtools/form-wizard.txt:344
msgid ""
"Aside from the :meth:`~done()` method, :class:`WizardView` offers a few "
"advanced method hooks that let you customize how your wizard works."
msgstr ""
"Кроме метода :meth:`~done()`, класс :class:`WizardView` предоставляет "
"несколько дополнительных методов (обработчиков), которые позволяют настроить "
"поведение мастера."

# 24a5297418494052915349592baf91a8
#: ../../ref/contrib/formtools/form-wizard.txt:347
msgid ""
"Some of these methods take an argument ``step``, which is a zero-based "
"counter as string representing the current step of the wizard. (E.g., the "
"first form is ``'0'`` and the second form is ``'1'``)"
msgstr ""
"Некоторые из этих методов принимают аргумент ``step``, который является "
"начинающимся с нуля строковым значением текущего шага мастера. (Т.е., первая "
"форма — ``'0'``, а вторая — ``'1'``.)"

# a2e3db37fccf4f74b02763229c6f9557
#: ../../ref/contrib/formtools/form-wizard.txt:353
msgid ""
"Returns the prefix which will be used when calling the form for the given "
"step. ``step`` contains the step name, ``form`` the form class which will be "
"called with the returned prefix."
msgstr ""
"Возвращает префикс, который будет использоваться при вызове формы для "
"переданного шага. ``step`` содержит имя шага, ``form`` -- класс формы, "
"который будет вызван с использованием возвращённого префикса."

# 4e8017ac5c8047858fe7f6f85fed42cc
#: ../../ref/contrib/formtools/form-wizard.txt:357
msgid ""
"If no ``step`` is given, it will be determined automatically. By default, "
"this simply uses the step itself and the ``form`` parameter is not used."
msgstr ""
"Если ``step`` не передан, то будет определён автоматически. По умолчанию "
"будет использован сам шаг, а параметр ``form`` использоваться не будет."

# 18401f3243254fe38f091c82447d174a
#: ../../ref/contrib/formtools/form-wizard.txt:360
msgid "For more, see the :ref:`form prefix documentation <form-prefix>`."
msgstr ""
"Для подробностей обратитесь к :ref:`документации на префиксы форм <form-"
"prefix>`."

# 52e88e173ff741ebb26ec9401abef53e
#: ../../ref/contrib/formtools/form-wizard.txt:364
msgid ""
"Returns a dictionary which will be passed as the :attr:`~django.forms.Form."
"initial` argument when instantiating the Form instance for step ``step``. If "
"no initial data was provided while initializing the form wizard, an empty "
"dictionary should be returned."
msgstr ""
"Возвращает словарь, который будет передан в качестве аргумента :attr:"
"`~django.forms.Form.initial` при создании экземпляра формы для шага "
"``step``. Если во время создания мастера начальные данные не были "
"предоставлены, то возвращается пустой словарь."

# 334140d547734197a3271e562594527e
# adaf2a2abe454dcea4e6609645a0d70e
# 7bc52f93375c4c0386a71a8fce33614d
# 506f82c6295f4e1f91cdf3a66790d8a4
#: ../../ref/contrib/formtools/form-wizard.txt:369
#: ../../ref/contrib/formtools/form-wizard.txt:379
#: ../../ref/contrib/formtools/form-wizard.txt:394
#: ../../ref/contrib/formtools/form-wizard.txt:481
msgid "The default implementation::"
msgstr "Стандартная реализация::"

# 00689d4e1dfc47bd8d9367af6f5a2417
#: ../../ref/contrib/formtools/form-wizard.txt:376
msgid ""
"Returns a dictionary which will be used as the keyword arguments when "
"instantiating the form instance on given ``step``."
msgstr ""
"Возвращает словарь, который будет использоваться в качестве именованных "
"аргументов при создании экземпляра формы для шага ``step``."

# 81e03914b01b4804a31df04c2a7f219e
#: ../../ref/contrib/formtools/form-wizard.txt:386
msgid ""
"This method will be called only if a :class:`~django.forms.ModelForm` is "
"used as the form for step ``step``."
msgstr ""
"Этот метод применяется только при использовании класса :class:`~django.forms."
"ModelForm` для создания формы на шаге ``step``."

# d96824ad71b54906b1417c4e152c5bed
#: ../../ref/contrib/formtools/form-wizard.txt:389
msgid ""
"Returns an :class:`~django.db.models.Model` object which will be passed as "
"the ``instance`` argument when instantiating the ``ModelForm`` for step "
"``step``.  If no instance object was provided while initializing the form "
"wizard, ``None`` will be returned."
msgstr ""
"Возвращает объект :class:`~django.db.models.Model`, который передаётся в "
"качестве аргумента ``instance`` при создании модельной формы на шаге "
"``step``. Если при создании мастера не был передан экземпляр модели, то "
"возвращается ``None``."

# a556ef35cfb5427bab73d49320a3e18e
#: ../../ref/contrib/formtools/form-wizard.txt:401
msgid ""
"Returns the template context for a step. You can overwrite this method to "
"add more data for all or some steps. This method returns a dictionary "
"containing the rendered form step."
msgstr ""
"Возвращает шаблонный контекст для шага. Вы можете переопределить этот метод "
"для добавления дополнительных данных на всех или на определённых шагах "
"мастера. Этот метод возвращает словарь контекста для текущего шага."

# 0561fe24763247cab01f5de8eb5d9cdc
#: ../../ref/contrib/formtools/form-wizard.txt:405
msgid "The default template context variables are:"
msgstr "Стандартные контекстные переменные шаблона:"

# e7dddaed460a45efac53764e3b950eee
#: ../../ref/contrib/formtools/form-wizard.txt:407
msgid "Any extra data the storage backend has stored"
msgstr "Бэкэнд хранения сохраняет все дополнительные данные"

# 522df6dc437a40a98e7f3b60b3bd8dda
#: ../../ref/contrib/formtools/form-wizard.txt:408
msgid ""
"``wizard`` -- a dictionary representation of the wizard instance with the "
"following key/values:"
msgstr ""

# 0c2c7199c6d9414ba9bd7ddd0cfb5dfc
#: ../../ref/contrib/formtools/form-wizard.txt:411
#, fuzzy
msgid ""
"``form`` -- :class:`~django.forms.Form` or :class:`~django.forms.formsets."
"BaseFormSet` instance for the current step"
msgstr ""
"``form`` -- это экземпляр классов :class:`~django.forms.Form` или :class:"
"`~django.forms.formset.BaseFormSet` для текущего шага мастера (либо пустой, "
"либо с ошибками)."

# 72c931cf109c4eb0a5c6f2968fd2ae21
#: ../../ref/contrib/formtools/form-wizard.txt:413
#, fuzzy
msgid "``steps`` -- A helper object to access the various steps related data"
msgstr ""
"``steps`` -- вспомогательный объект для доступа к данным других шагов "
"мастера:"

# 49926137e04e41658fb2b6216e9c0224
#: ../../ref/contrib/formtools/form-wizard.txt:414
#, fuzzy
msgid "``management_form`` -- all the management data for the current step"
msgstr "``form`` -- экземпляр формы текущего шага."

# eac7ace694104eedaf244b950bf4c4a8
#: ../../ref/contrib/formtools/form-wizard.txt:416
msgid "Example to add extra variables for a specific step::"
msgstr "Пример добавления дополнительных переменных для указанного шага::"

# 8ce1951a4dfb499182b6296d720f57ca
#: ../../ref/contrib/formtools/form-wizard.txt:426
msgid ""
"This method returns a prefix for use by the storage backends. Backends use "
"the prefix as a mechanism to allow data to be stored separately for each "
"wizard. This allows wizards to store their data in a single backend without "
"overwriting each other."
msgstr ""
"Этот метод возвращает префикс, который использует хранилище. Бэкэнд "
"использует префикс для хранения данных нескольких мастеров в одном "
"хранилище. Это позволяет мастерам сохранять свои данные, не мешая друг другу."

# ff32848ee15e47a2bedd8a5774c8453a
#: ../../ref/contrib/formtools/form-wizard.txt:431
msgid ""
"You can change this method to make the wizard data prefix more unique to, e."
"g. have multiple instances of one wizard in one session."
msgstr ""
"Вы можете изменить этот метод, чтобы сделать префикс данных мастера более "
"уникальным, т.е., чтобы позволить работать нескольким экземплярам одного "
"мастера в рамках одной сессии."

# 6c68180fc19344a09e6d947e337e09bf
# e291256f3d034b20a4dfbca7c74002bc
# 887bc09bface47ba80760a5b583d7aba
# ecadc6f901664bca90cb2d6b290c0872
# e82ef81948e24024ae0b8600d18dc22b
# 76a59130a73447d08676ae2f8ebafbd6
# f095a6c0ea2a4c69b520bb8ea31fc374
#: ../../ref/contrib/formtools/form-wizard.txt:434
#: ../../ref/contrib/formtools/form-wizard.txt:494
#: ../../ref/contrib/formtools/form-wizard.txt:521
#: ../../ref/contrib/formtools/form-wizard.txt:533
#: ../../ref/contrib/formtools/form-wizard.txt:543
#: ../../ref/contrib/formtools/form-wizard.txt:553
#: ../../ref/contrib/formtools/form-wizard.txt:767
msgid "Default implementation::"
msgstr "Стандартная реализация::"

# a13e8a6704d04264b5d1101c0f214d67
#: ../../ref/contrib/formtools/form-wizard.txt:442
msgid ""
"This method constructs the form for a given ``step``. If no ``step`` is "
"defined, the current step will be determined automatically. If you override "
"``get_form``, however, you will need to set ``step`` yourself using ``self."
"steps.current`` as in the example below. The method gets three arguments:"
msgstr ""
"Этот метод создает форму для указанного шага ``step``. Если шаг не указан, "
"то текущий шаг определяется автоматически. Если вы переопределите "
"``get_form``, вам необходимо указать ``step`` самостоятельно, используя "
"``self.steps.current`` как показано ниже. Метод принимает три аргумента:"

# 717236a1545247f5994e04c764760519
#: ../../ref/contrib/formtools/form-wizard.txt:448
msgid "``step`` -- The step for which the form instance should be generated."
msgstr "``step`` -- шаг, для которого должен быть создан экземпляр формы."

# b121a86ab9784725acd6d78eb3ce2873
#: ../../ref/contrib/formtools/form-wizard.txt:449
msgid "``data`` -- Gets passed to the form's data argument"
msgstr "``data`` -- передаётся в аргумент данных формы."

# e4a6e4f574be4dfeaf14f6db41564caa
#: ../../ref/contrib/formtools/form-wizard.txt:450
msgid "``files`` -- Gets passed to the form's files argument"
msgstr "``files`` -- передаётся в аргумент файлов формы"

# 564d3df889ff467fb2d589e50f89fa80
#: ../../ref/contrib/formtools/form-wizard.txt:452
msgid ""
"You can override this method to add extra arguments to the form instance."
msgstr ""
"Вы можете переопределить этот метод для передачи дополнительных аргументов в "
"экземпляр формы."

# e03c327ceb20482e9f6ec27bf2502ecb
#: ../../ref/contrib/formtools/form-wizard.txt:454
msgid "Example code to add a user attribute to the form on step 2::"
msgstr ""
"Пример кода, который добавляет атрибут пользователя к форме на вопрос шаге."

# 4a4c681f1ef04638a39ffef637682406
#: ../../ref/contrib/formtools/form-wizard.txt:469
msgid ""
"Hook for modifying the wizard's internal state, given a fully validated :"
"class:`~django.forms.Form` object. The Form is guaranteed to have clean, "
"valid data."
msgstr ""
"Обработчик для изменения внутреннего состояния мастера, получающий полностью "
"проверенный объект :class:`~django.forms.Form`. Форма гарантированно "
"получает нормализованные и проверенные данные."

# b8dc021ec55346dc966142fa1f4d57d4
#: ../../ref/contrib/formtools/form-wizard.txt:473
msgid ""
"This method gives you a way to post-process the form data before the data "
"gets stored within the storage backend. By default it just returns the "
"``form.data`` dictionary. You should not manipulate the data here but you "
"can use it to do some extra work if needed (e.g. set storage extra data)."
msgstr ""
"Этот метод позволяет организовать обработку данных формы перед их помещением "
"в хранилище. По умолчанию метод просто возвращает словарь ``form.data``. Вы "
"не должны изменять полученные данные, но можете дополнять их."

# 4579e4fa31ff4f5cbe1eabaab0fc50a0
#: ../../ref/contrib/formtools/form-wizard.txt:478
msgid ""
"Note that this method is called every time a page is rendered for *all* "
"submitted steps."
msgstr ""
"Следует отметить, что этот метод вызывается при каждом отображении страницы "
"для *всех* выполненных шагов."

# a4ea0a911f8d41c6969d36f00b496707
#: ../../ref/contrib/formtools/form-wizard.txt:488
msgid ""
"This method gives you a way to post-process the form files before the files "
"gets stored within the storage backend. By default it just returns the "
"``form.files`` dictionary. You should not manipulate the data here but you "
"can use it to do some extra work if needed (e.g. set storage extra data)."
msgstr ""
"Этот метод предоставляет возможность организовать обработку файлов формы "
"перед их размещением в хранилище. По умолчанию метод просто возвращает "
"словарь ``form.files``. Вы не должны изменять полученные данные, но можете "
"дополнять их."

# 3a622ca283734b049ce3ad365b288c69
#: ../../ref/contrib/formtools/form-wizard.txt:503
msgid ""
"This method is called when the step should be changed to something else than "
"the next step. By default, this method just stores the requested step "
"``goto_step`` in the storage and then renders the new step."
msgstr ""
"Этот метод вызывается когда шаг должен быть изменён на любой другой, кроме "
"следующего. По-умолчанию, этот метод просто сохраняет запрошенный шаг "
"``goto_step`` в хранилище и затем отображает соответствующую форму."

# 71e83eda1cfb4c77b04c4d4af44f671c
#: ../../ref/contrib/formtools/form-wizard.txt:507
msgid ""
"If you want to store the entered data of the current step before rendering "
"the next step, you can overwrite this method."
msgstr ""
"Если требуется сохранить введённые данные текущего шага перед отображением "
"следующего, вы можете переопределить этот метод."

# 1c8323faefab49b7bca00e9d2e90fbf2
#: ../../ref/contrib/formtools/form-wizard.txt:512
msgid ""
"When the wizard thinks all steps have passed it revalidates all forms with "
"the data from the backend storage."
msgstr ""
"Как только мастер пройдёт все шаги, он заново проверяет все формы, используя "
"данные из хранилища."

# c302e9b6cbc74c3bb7744445734750d6
#: ../../ref/contrib/formtools/form-wizard.txt:515
msgid ""
"If any of the forms don't validate correctly, this method gets called. This "
"method expects two arguments, ``step`` and ``form``."
msgstr ""
"Если хоть одна из форм не пройдёт проверку, то будет вызван этот метод. "
"Метод принимает два аргумента, ``step`` и ``form``."

# 4a9619025c2a4e81a35db7286edbf23d
#: ../../ref/contrib/formtools/form-wizard.txt:518
msgid ""
"The default implementation resets the current step to the first failing form "
"and redirects the user to the invalid form."
msgstr ""
"Текущая реализация сбрасывает текущий шаг на первую из форм, которая не "
"прошла проверку,  и перенаправляет пользователя на неё."

# 1c20a15148aa4a5a9efdc6e067195f1a
#: ../../ref/contrib/formtools/form-wizard.txt:529
msgid ""
"This method fetches the data from the ``form`` Form instance and returns the "
"dictionary. You can use this method to manipulate the values before the data "
"gets stored in the storage backend."
msgstr ""
"Этот метод получает данные из экземпляра формы ``form`` и возвращает "
"словарь. Вы можете использовать этот метод для управления значениями перед "
"сохранением данных в хранилище."

# 766129fa29e44892ab085a2e9037d7aa
#: ../../ref/contrib/formtools/form-wizard.txt:540
msgid ""
"This method returns the form files. You can use this method to manipulate "
"the files before the data gets stored in the storage backend."
msgstr ""
"Этот метод возвращает файлы формы. Вы можете использовать этот метод для "
"управления файлами перед их размещением в хранилище."

# 3034eba47af94ec09a6014ec015eccae
#: ../../ref/contrib/formtools/form-wizard.txt:550
msgid ""
"This method gets called after the GET or POST request has been handled. You "
"can hook in this method to, e.g. change the type of HTTP response."
msgstr ""
"Этот метод вызывается после обработки POST или GET запроса. Вы можете "
"внедриться в этот метод, например, для изменения типа HTTP запроса."

# e55f090d8a544b4b86b5eeb18411a938
#: ../../ref/contrib/formtools/form-wizard.txt:562
msgid ""
"This method returns the cleaned data for a given ``step``. Before returning "
"the cleaned data, the stored values are revalidated through the form. If the "
"data doesn't validate, ``None`` will be returned."
msgstr ""
"Этот метод возвращает проверенные данный для указанного шага. Перед "
"возвращением проверенных данных, сохранённые данные проверяются с помощью "
"формы. Если данные не проходят проверку, то возвращается ``None``."

# 2c44724086da4dee8f723934b0776f3f
#: ../../ref/contrib/formtools/form-wizard.txt:568
msgid ""
"This method returns a merged dictionary of all form steps' ``cleaned_data`` "
"dictionaries. If a step contains a ``FormSet``, the key will be prefixed "
"with ``formset-`` and contain a list of the formset's ``cleaned_data`` "
"dictionaries. Note that if two or more steps have a field with the same "
"name, the value for that field from the latest step will overwrite the value "
"from any earlier steps."
msgstr ""
"Этот метод возвращает объединённый словарь с проверенными данными всех "
"шагов. Если шаг содержит набор форм, то его ключ будет иметь префикс "
"``formset-`` и содержать список словарей с проверенными данными. Следует "
"отметить, что если два или более шагов будут иметь поле с одинаковым именем, "
"значение этого поля из более позднего шага перезапишет значение более "
"раннего шага."

# 251a647334844f9488283cba0eb55cf2
#: ../../ref/contrib/formtools/form-wizard.txt:576
msgid "Providing initial data for the forms"
msgstr "Назначение начальных данных для форм"

# 05c26e5c2330426fbc00e7a725b1ebcf
#: ../../ref/contrib/formtools/form-wizard.txt:580
msgid ""
"Initial data for a wizard's :class:`~django.forms.Form` objects can be "
"provided using the optional :attr:`~WizardView.initial_dict` keyword "
"argument. This argument should be a dictionary mapping the steps to "
"dictionaries containing the initial data for each step. The dictionary of "
"initial data will be passed along to the constructor of the step's :class:"
"`~django.forms.Form`::"
msgstr ""
"Начальные данные для экземпляров форм :class:`~django.forms.Form` мастера "
"могут быть предоставлены с помощью необязательного именованного аргумента :"
"attr:`~Wizard.initial_dict`. Аргумент должен представлять собой словарь, "
"который связывает шаги со словарями начальных данных. Словарь начальных "
"данных будет передан конструктору формы :class:`~django.forms.Form` "
"соответствующего шага::"

# 47775d5d94454726b3e40cb1c7e556a4
#: ../../ref/contrib/formtools/form-wizard.txt:603
msgid ""
"The ``initial_dict`` can also take a list of dictionaries for a specific "
"step if the step is a ``FormSet``."
msgstr ""
"Аргумент ``initial_dict`` также может принимать список словарей для "
"определённого шага, если на этом шаге используется набор форм."

# 0bb8d46c752448b7936cbb4ca7c06a64
#: ../../ref/contrib/formtools/form-wizard.txt:608
msgid ""
"The ``initial_dict`` can also be added as a class attribute named "
"``initial_dict`` to avoid having the initial data in the ``urls.py``."
msgstr ""
"Словарь ``initial_dict`` также может быть добавлен в класс в виде атрибута "
"``initial_dict``, чтобы не определять начальные данные в ``urls.py``."

# 848110f83bb0425f97b937a300e54228
#: ../../ref/contrib/formtools/form-wizard.txt:614
msgid "Handling files"
msgstr "Обработка файлов"

# f91c04fdd54c4acba86f8d761b896146
#: ../../ref/contrib/formtools/form-wizard.txt:618
msgid ""
"To handle :class:`~django.forms.FileField` within any step form of the "
"wizard, you have to add a ``file_storage`` to your :class:`WizardView` "
"subclass."
msgstr ""
"Для того, чтобы обработать поле :class:`~django.forms.FileField` на любой "
"форме мастера, вам потребуется добавить атрибут :attr:`file_storage` в вашу "
"реализацию класса :class:`WizardView`."

# 403901f8940247b78d7a8fc06bad91b6
#: ../../ref/contrib/formtools/form-wizard.txt:621
msgid ""
"This storage will temporarily store the uploaded files for the wizard. The "
"``file_storage`` attribute should be a :class:`~django.core.files.storage."
"Storage` subclass."
msgstr ""
"Это хранилище будет временно хранить загруженные файлы мастера. Атрибут "
"``file_storage`` должен быть потомком класса :class:`~django.core.files."
"storage.Storage`."

# 5b46e667c1794f8fb93be1dde0b00c95
#: ../../ref/contrib/formtools/form-wizard.txt:625
msgid ""
"Django provides a built-in storage class (see :ref:`the built-in filesystem "
"storage class <builtin-fs-storage>`)::"
msgstr ""
"Django предоставляет встроенный класс хранилища (см. :ref:`классы встроенных "
"хранилищ <builtin-fs-storage>`)::"

# b85b5d2941574bf4b023b8a137696c4c
#: ../../ref/contrib/formtools/form-wizard.txt:637
#, fuzzy
msgid ""
"Please remember to take care of removing old temporary files, as the :class:"
"`WizardView` will only remove these files if the wizard finishes correctly."
msgstr ""
"Не забывайте удалять старые файлы, так как :class:`WizardView` не удаляет "
"файлы , независимо от того, удачно ли отработал мастер или нет."

# a642b29c48f74ff7b75a04f7869440a4
#: ../../ref/contrib/formtools/form-wizard.txt:642
msgid "Conditionally view/skip specific steps"
msgstr "Условная логика"

# 6f5810369b834c738c01ba1a85d10092
#: ../../ref/contrib/formtools/form-wizard.txt:646
msgid ""
"The :meth:`~WizardView.as_view` method accepts a ``condition_dict`` "
"argument. You can pass a dictionary of boolean values or callables. The key "
"should match the steps names (e.g. '0', '1')."
msgstr ""
"Метод :meth:`~WizardView.as_view` принимает аргумент ``condition_dict``. Вы "
"можете передать словарь булевых значений или вызываемых методов. Ключ должен "
"соответствовать имени шага (т.е. '0', '1')."

# acc8794362f94918a3e97c169005e5a5
#: ../../ref/contrib/formtools/form-wizard.txt:650
msgid ""
"If the value of a specific step is callable it will be called with the :"
"class:`WizardView` instance as the only argument. If the return value is "
"true, the step's form will be used."
msgstr ""
"Если значение определенного шага является функцией, она будет вызвана с "
"экземпляром :class:`WizardView` в качестве аргумента.Если эта функция вернёт "
"``true``, то будет использована форма шага."

# d831634d403e4451a5d951a0dc0cc33b
#: ../../ref/contrib/formtools/form-wizard.txt:654
msgid ""
"This example provides a contact form including a condition. The condition is "
"used to show a message form only if a checkbox in the first step was checked."
msgstr ""
"Этот пример показывает контактную форму со встроенным условием. Условие "
"используется для отображения на форме сообщения в случае, если чекбокс на "
"форме первого шага отмечен."

# 33874227ea124330b9e75a36c55078d6
#: ../../ref/contrib/formtools/form-wizard.txt:657
msgid "The steps are defined in a ``forms.py`` file::"
msgstr "Шаги определяются в файле ``forms.py``::"

# 9e2148d303f2492e84bae1f2c0e1c31a
#: ../../ref/contrib/formtools/form-wizard.txt:669
msgid "We define our wizard in a ``views.py``::"
msgstr "Мы определяем наш мастер в файле ``views.py``::"

# 97ae9eb9a960406a993d3a565f958424
#: ../../ref/contrib/formtools/form-wizard.txt:687
msgid "We need to add the ``ContactWizard`` to our ``urls.py`` file::"
msgstr "Теперь надо добавить ``ContactWizard`` в файл ``urls.py``::"

# 92420588a10344b8b0982de275de188a
#: ../../ref/contrib/formtools/form-wizard.txt:702
msgid ""
"As you can see, we defined a ``show_message_form_condition`` next to our :"
"class:`WizardView` subclass and added a ``condition_dict`` argument to the :"
"meth:`~WizardView.as_view` method. The key refers to the second wizard step "
"(because of the zero based step index)."
msgstr ""
"Как вы можете видеть, мы определили ``show_message_form_condition`` сразу за "
"нашей реализацией класса :class:`WizardView` и добавили аргумент "
"``condition_dict`` в метод :meth:`~WizardView.as_view`. Ключ ссылается на "
"второй шаг мастера, т.к индекс шагов начинается с нуля."

# 109adacdc0d44e3d8f8185b1d28acd2e
#: ../../ref/contrib/formtools/form-wizard.txt:708
msgid "How to work with ModelForm and ModelFormSet"
msgstr "Как работать с ``ModelForm`` и ``ModelFormSet``"

# 0d937ffc783c4ddcb5e032f5ddac7285
#: ../../ref/contrib/formtools/form-wizard.txt:712
msgid ""
"WizardView supports :doc:`ModelForms </topics/forms/modelforms>` and :ref:"
"`ModelFormSets <model-formsets>`. Additionally to :attr:`~WizardView."
"initial_dict`, the :meth:`~WizardView.as_view` method takes an "
"``instance_dict`` argument that should contain model instances for steps "
"based on ``ModelForm`` and querysets for steps based on ``ModelFormSet``."
msgstr ""
"Мастер может использовать :doc:`ModelForms </topics/forms/modelforms>` и :"
"ref:`ModelFormSets <model-formsets>`. В дополнение к атрибуту :attr:"
"`~WizardView.initial_dict`, метод :meth:`~WizardView.as_view` принимает "
"аргумент ``instance_dict``, который должен содержать экземпляры "
"``ModelForm`` и ``ModelFormSet``.  Аналогично атрибуту :attr:`~WizardView."
"initial_dict`, ключи этих словарей должны соответствовать номеру шага в "
"списке форм."

# 6cc0e3471b574d8d97997ac33cfa9f82
#: ../../ref/contrib/formtools/form-wizard.txt:719
msgid "Usage of ``NamedUrlWizardView``"
msgstr "Использование ``NamedUrlWizardView``"

# 38462ecee3774800bb9404366d9d7679
#: ../../ref/contrib/formtools/form-wizard.txt:725
#, fuzzy
msgid ""
"``NamedUrlWizardView`` is a :class:`WizardView` subclass which adds named-"
"urls support to the wizard. This allows you to have separate URLs for every "
"step. You can also use the :class:`NamedUrlSessionWizardView` or :class:"
"`NamedUrlCookieWizardView` classes which preselect the backend used for "
"storing information (Django sessions and browser cookies respectively)."
msgstr ""
"Существует потомок класса :class:`WizardView`, который добавляет в мастер "
"поддержку именованных URL. Используя его, вы можете иметь уникальный URL для "
"каждого шага мастера. Вы также можете использовать классы :class:"
"`NamedUrlSessionWizardView` или :class:`NamedUrlCookieWizardView`, которые "
"заранее выбирают бэкенд для хранения информации (сессии на стороне сервера и "
"куки браузера, соответственно)."

# 6f60435f2209459086e189163a921026
#: ../../ref/contrib/formtools/form-wizard.txt:731
msgid ""
"To use the named URLs, you should not only use the :class:"
"`NamedUrlWizardView` instead of :class:`WizardView`, but you will also have "
"to change your ``urls.py``."
msgstr ""

# 05e6ded4a60b49b7bad2cf9ab3d02d6a
#: ../../ref/contrib/formtools/form-wizard.txt:734
msgid "The :meth:`~WizardView.as_view` method takes two additional arguments:"
msgstr ""

# 470f1b9562324e218bc4967911a9ca32
#: ../../ref/contrib/formtools/form-wizard.txt:736
#, fuzzy
msgid ""
"a required ``url_name`` -- the name of the url (as provided in the ``urls."
"py``)"
msgstr "``url_name`` -- название URL (как указано в ``urls.py``)."

# af9fba1a12854797ae32cd6b5ae320e6
#: ../../ref/contrib/formtools/form-wizard.txt:737
#, fuzzy
msgid ""
"an optional ``done_step_name`` -- the name of the done step, to be used in "
"the URL"
msgstr "``done_step_name`` -- имя в URL для пройденного шага."

# 073869c393654b3d800ea02707843d70
#: ../../ref/contrib/formtools/form-wizard.txt:739
#, fuzzy
msgid ""
"This is an example of a ``urls.py`` for a contact wizard with two steps, "
"step 1 named ``contactdata`` and step 2 named ``leavemessage``::"
msgstr ""
"Ниже представлен пример мастера контактов с двумя шагами, первый шаг "
"называется «contactdata», а второй — «leavemessage»."

# cffc59aa36a7432986303c56349b69e5
#: ../../ref/contrib/formtools/form-wizard.txt:761
msgid "Advanced ``NamedUrlWizardView`` methods"
msgstr "Дополнительные методы ``NamedUrlWizardView``"

# 9835e0f5f46648939600fdc9232c52b6
#: ../../ref/contrib/formtools/form-wizard.txt:765
msgid "This method returns the URL for a specific step."
msgstr "Этот метод возвращает URL для указанного шага."

# 983d1ac000e84249b5ad60be12f3079e
#~ msgid "``wizard`` -- the wizard instance itself"
#~ msgstr "``wizard`` -- экземпляр самого мастера."

# 75a2383eb3fb45e0afeb38a1fe8f3090
#~ msgid "To use the named urls, you have to change the ``urls.py``."
#~ msgstr ""
#~ "Для использования именованных URL, потребуется внести изменения в файл "
#~ "``urls.py``."

# 42eef1d1724140de91e27c014f619e70
#~ msgid ""
#~ "Additionally you have to pass two more arguments to the :meth:"
#~ "`~WizardView.as_view` method:"
#~ msgstr ""
#~ "Дополнительно придётся передать два аргумента в метод :meth:`~WizardView."
#~ "as_view`:"

# b1606a80797b4d9998ed106d887c804b
#~ msgid "Example code for the changed ``urls.py`` file::"
#~ msgstr "Пример измененного файла ``urls.py``::"
