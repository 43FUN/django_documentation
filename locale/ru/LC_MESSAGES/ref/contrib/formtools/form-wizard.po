# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-02-15 15:13\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 6da4df8a647d455e9bcb41134900677b
#: ../../ref/contrib/formtools/form-wizard.txt:3
msgid "Form wizard"
msgstr ""

# b8db9a32484d4c31b5cba7db4557b41c
#: ../../ref/contrib/formtools/form-wizard.txt:8
msgid ""
"Django comes with an optional \"form wizard\" application that splits :doc:"
"`forms </topics/forms/index>` across multiple Web pages. It maintains state "
"in one of the backends so that the full server-side processing can be "
"delayed until the submission of the final form."
msgstr ""

# 57253354f2a54f10a6e1d6f9be2dcfe2
#: ../../ref/contrib/formtools/form-wizard.txt:13
msgid ""
"You might want to use this if you have a lengthy form that would be too "
"unwieldy for display on a single page. The first page might ask the user for "
"core information, the second page might ask for less important information, "
"etc."
msgstr ""

# 70af95c8500d40839b9ce6edb4a245f9
#: ../../ref/contrib/formtools/form-wizard.txt:18
msgid "The term \"wizard\", in this context, is `explained on Wikipedia`_."
msgstr ""

# be4d2d2f5ab64781be8c2cb986171017
#: ../../ref/contrib/formtools/form-wizard.txt:23
msgid "How it works"
msgstr ""

# 0837bbd7cd5f4b47b2386d7145a6d559
#: ../../ref/contrib/formtools/form-wizard.txt:25
msgid "Here's the basic workflow for how a user would use a wizard:"
msgstr ""

# baec6e9da4484c968f3ebd3d4e37c30d
#: ../../ref/contrib/formtools/form-wizard.txt:27
msgid ""
"The user visits the first page of the wizard, fills in the form and submits "
"it."
msgstr ""

# 89955829e58144198426285d008a8b41
#: ../../ref/contrib/formtools/form-wizard.txt:29
msgid ""
"The server validates the data. If it's invalid, the form is displayed again, "
"with error messages. If it's valid, the server saves the current state of "
"the wizard in the backend and redirects to the next step."
msgstr ""

# 4a5112f7936848a0809f6169b706beeb
#: ../../ref/contrib/formtools/form-wizard.txt:32
msgid "Step 1 and 2 repeat, for every subsequent form in the wizard."
msgstr ""

# 1bae7250ce224a3485349dcb88c26e09
#: ../../ref/contrib/formtools/form-wizard.txt:33
msgid ""
"Once the user has submitted all the forms and all the data has been "
"validated, the wizard processes the data -- saving it to the database, "
"sending an email, or whatever the application needs to do."
msgstr ""

# c40c7cf201e849dba7a5b491fc890c5b
#: ../../ref/contrib/formtools/form-wizard.txt:38
msgid "Usage"
msgstr ""

# 74350fa2b6c748bc9b4d5dedf24c3f56
#: ../../ref/contrib/formtools/form-wizard.txt:40
msgid ""
"This application handles as much machinery for you as possible. Generally, "
"you just have to do these things:"
msgstr ""

# 973c1debae0e4b9b83442ec5bf67b1fa
#: ../../ref/contrib/formtools/form-wizard.txt:43
msgid ""
"Define a number of :class:`~django.forms.Form` classes -- one per wizard "
"page."
msgstr ""

# 2e2d069397b74c5caa6673b2422d7971
#: ../../ref/contrib/formtools/form-wizard.txt:46
msgid ""
"Create a :class:`WizardView` subclass that specifies what to do once all of "
"your forms have been submitted and validated. This also lets you override "
"some of the wizard's behavior."
msgstr ""

# 8b4435f42bd34de3a10d1767c7501e7a
#: ../../ref/contrib/formtools/form-wizard.txt:50
msgid ""
"Create some templates that render the forms. You can define a single, "
"generic template to handle every one of the forms, or you can define a "
"specific template for each form."
msgstr ""

# 238c6ef5ef3f4a029c4ffae097d602d7
#: ../../ref/contrib/formtools/form-wizard.txt:54
msgid ""
"Add ``django.contrib.formtools`` to your :setting:`INSTALLED_APPS` list in "
"your settings file."
msgstr ""

# c713e434219e40c384fc66413d125971
#: ../../ref/contrib/formtools/form-wizard.txt:57
msgid ""
"Point your URLconf at your :class:`WizardView` :meth:`~WizardView.as_view` "
"method."
msgstr ""

# bc1103745ca541df8755a9f3292b6e4e
#: ../../ref/contrib/formtools/form-wizard.txt:60
msgid "Defining ``Form`` classes"
msgstr ""

# 001724a6ef62416da75216d16d5db9fb
#: ../../ref/contrib/formtools/form-wizard.txt:62
msgid ""
"The first step in creating a form wizard is to create the :class:`~django."
"forms.Form` classes.  These should be standard :class:`django.forms.Form` "
"classes, covered in the :doc:`forms documentation </topics/forms/index>`.  "
"These classes can live anywhere in your codebase, but convention is to put "
"them in a file called :file:`forms.py` in your application."
msgstr ""

# 92ea59485c80441da04bd2ef9b058f3b
#: ../../ref/contrib/formtools/form-wizard.txt:69
msgid ""
"For example, let's write a \"contact form\" wizard, where the first page's "
"form collects the sender's email address and subject, and the second page "
"collects the message itself. Here's what the :file:`forms.py` might look "
"like::"
msgstr ""

# 30f3870edea6497c8e69a40f9cc4c18c
#: ../../ref/contrib/formtools/form-wizard.txt:85
msgid ""
"In order to use :class:`~django.forms.FileField` in any form, see the "
"section :ref:`Handling files <wizard-files>` below to learn more about what "
"to do."
msgstr ""

# 4093247f937c4d62951e1fc5b8c7ce9f
#: ../../ref/contrib/formtools/form-wizard.txt:90
msgid "Creating a ``WizardView`` class"
msgstr ""

# 38462ecee3774800bb9404366d9d7679
#: ../../ref/contrib/formtools/form-wizard.txt:92
msgid ""
"The next step is to create a :class:`django.contrib.formtools.wizard.views."
"WizardView` subclass. You can also use the :class:`SessionWizardView` or :"
"class:`CookieWizardView` classes which preselect the backend used for "
"storing information during execution of the wizard (as their names indicate, "
"server-side sessions and browser cookies respectively)."
msgstr ""

# 35794c07d9434b15b61440e5f1098dba
#: ../../ref/contrib/formtools/form-wizard.txt:101
msgid ""
"To use the :class:`SessionWizardView` follow the instructions in the :doc:"
"`sessions documentation </topics/http/sessions>` on how to enable sessions."
msgstr ""

# b40c4b9dd91c47a9a243c60bd835c1dc
#: ../../ref/contrib/formtools/form-wizard.txt:105
msgid ""
"We will use the :class:`SessionWizardView` in all examples but is is "
"completely fine to use the :class:`CookieWizardView` instead. As with your :"
"class:`~django.forms.Form` classes, this :class:`WizardView` class can live "
"anywhere in your codebase, but convention is to put it in :file:`views.py`."
msgstr ""

# aa9f7f2a6ce14ddb91b4c00f992b86ae
#: ../../ref/contrib/formtools/form-wizard.txt:110
msgid ""
"The only requirement on this subclass is that it implement a :meth:"
"`~WizardView.done()` method."
msgstr ""

# a6183050c1df456bae149ba3f1233a24
#: ../../ref/contrib/formtools/form-wizard.txt:115
msgid ""
"This method specifies what should happen when the data for *every* form is "
"submitted and validated. This method is passed a list of validated :class:"
"`~django.forms.Form` instances."
msgstr ""

# 5649e2099f0345058b548dfe0f350d21
#: ../../ref/contrib/formtools/form-wizard.txt:119
msgid ""
"In this simplistic example, rather than performing any database operation, "
"the method simply renders a template of the validated data::"
msgstr ""

# 45272456a65f4679a645aa242874ee40
#: ../../ref/contrib/formtools/form-wizard.txt:131
msgid ""
"Note that this method will be called via ``POST``, so it really ought to be "
"a good Web citizen and redirect after processing the data. Here's another "
"example::"
msgstr ""

# 57e8b04f0bd144c88c352d415c16807e
#: ../../ref/contrib/formtools/form-wizard.txt:143
msgid ""
"See the section :ref:`Advanced WizardView methods <wizardview-advanced-"
"methods>` below to learn about more :class:`WizardView` hooks."
msgstr ""

# 639e435141d9446a8c755e613fb84323
#: ../../ref/contrib/formtools/form-wizard.txt:147
msgid "Creating templates for the forms"
msgstr ""

# 3038ed6debc3417da7bff360b9fbfdd0
#: ../../ref/contrib/formtools/form-wizard.txt:149
msgid ""
"Next, you'll need to create a template that renders the wizard's forms. By "
"default, every form uses a template called :file:`formtools/wizard/"
"wizard_form.html`. You can change this template name by overriding either "
"the :attr:`~django.views.generic.base.TemplateResponseMixin.template_name` "
"attribute or the :meth:`~django.views.generic.base.TemplateResponseMixin."
"get_template_names()` method, which are documented in the :class:`~django."
"views.generic.base.TemplateResponseMixin` documentation.  The latter one "
"allows you to use a different template for each form."
msgstr ""

# f00b44a1334748758ea9c477327cad2b
#: ../../ref/contrib/formtools/form-wizard.txt:160
msgid ""
"This template expects a ``wizard`` object that has various items attached to "
"it:"
msgstr ""

# 0c2c7199c6d9414ba9bd7ddd0cfb5dfc
#: ../../ref/contrib/formtools/form-wizard.txt:163
msgid ""
"``form`` -- The :class:`~django.forms.Form` or :class:`~django.forms.formset."
"BaseFormSet` instance for the current step (either empty or with errors)."
msgstr ""

# 72c931cf109c4eb0a5c6f2968fd2ae21
#: ../../ref/contrib/formtools/form-wizard.txt:167
msgid "``steps`` -- A helper object to access the various steps related data:"
msgstr ""

# 6e76d701fa994f9eb57a30a8a40d14b6
#: ../../ref/contrib/formtools/form-wizard.txt:169
msgid "``step0`` -- The current step (zero-based)."
msgstr ""

# a632bc27f7ad4c069ccb70e200203e94
#: ../../ref/contrib/formtools/form-wizard.txt:170
msgid "``step1`` -- The current step (one-based)."
msgstr ""

# 3c5b06102eac40e1ab30ff8270a34234
#: ../../ref/contrib/formtools/form-wizard.txt:171
msgid "``count`` -- The total number of steps."
msgstr ""

# d564a9e63447474bae09246ef77be28e
#: ../../ref/contrib/formtools/form-wizard.txt:172
msgid "``first`` -- The first step."
msgstr ""

# a5e557ccbf5d482480eaa64684a849c4
#: ../../ref/contrib/formtools/form-wizard.txt:173
msgid "``last`` -- The last step."
msgstr ""

# 8fc942544ef74acebc4a86602329d5b5
#: ../../ref/contrib/formtools/form-wizard.txt:174
msgid "``current`` -- The current (or first) step."
msgstr ""

# 08128853882d4ae18d1e0d171a87593b
#: ../../ref/contrib/formtools/form-wizard.txt:175
msgid "``next`` -- The next step."
msgstr ""

# 3d15ffdd194f426196017ab642d0fff1
#: ../../ref/contrib/formtools/form-wizard.txt:176
msgid "``prev`` -- The previous step."
msgstr ""

# 75e9abb2554445dd99da3dc1dbeb1ade
#: ../../ref/contrib/formtools/form-wizard.txt:177
msgid "``index`` -- The index of the current step."
msgstr ""

# 5310d04dc19e48c3a2e2a54828a5dbbf
#: ../../ref/contrib/formtools/form-wizard.txt:178
msgid "``all`` -- A list of all steps of the wizard."
msgstr ""

# 30c6304f7c8243038a964e1597bc1744
#: ../../ref/contrib/formtools/form-wizard.txt:180
msgid ""
"You can supply additional context variables by using the :meth:`~WizardView."
"get_context_data` method of your :class:`WizardView` subclass."
msgstr ""

# 2c7b9aadecc642e39bb5bfa1782b20e8
#: ../../ref/contrib/formtools/form-wizard.txt:184
msgid "Here's a full example template:"
msgstr ""

# 2892753d6f2641c88d3718f56ded1a44
#: ../../ref/contrib/formtools/form-wizard.txt:218
msgid ""
"Note that ``{{ wizard.management_form }}`` **must be used** for the wizard "
"to work properly."
msgstr ""

# ddd5baa167a24ec8ae231bc230a0649b
#: ../../ref/contrib/formtools/form-wizard.txt:224
msgid "Hooking the wizard into a URLconf"
msgstr ""

# a457bc03ec2e454f8926625ab3ea54cb
#: ../../ref/contrib/formtools/form-wizard.txt:226
msgid ""
"Finally, we need to specify which forms to use in the wizard, and then "
"deploy the new :class:`WizardView` object at an URL in the ``urls.py``. The "
"wizard's :meth:`as_view` method takes a list of your :class:`~django.forms."
"Form` classes as an argument during instantiation::"
msgstr ""

# 3980df84eb9c40e2893b91ae3946f443
#: ../../ref/contrib/formtools/form-wizard.txt:243
msgid "Advanced ``WizardView`` methods"
msgstr ""

# e1cd9d867dba467c969f75ffda82e5be
#: ../../ref/contrib/formtools/form-wizard.txt:247
msgid ""
"Aside from the :meth:`~done()` method, :class:`WizardView` offers a few "
"advanced method hooks that let you customize how your wizard works."
msgstr ""

# 24a5297418494052915349592baf91a8
#: ../../ref/contrib/formtools/form-wizard.txt:250
msgid ""
"Some of these methods take an argument ``step``, which is a zero-based "
"counter as string representing the current step of the wizard. (E.g., the "
"first form is ``'0'`` and the second form is ``'1'``)"
msgstr ""

# 9ccb56a7f4784a5f98bfcf33b82eb865
#: ../../ref/contrib/formtools/form-wizard.txt:256
msgid ""
"Given the step, returns a form prefix to use. By default, this simply uses "
"the step itself. For more, see the :ref:`form prefix documentation <form-"
"prefix>`."
msgstr ""

# 52e88e173ff741ebb26ec9401abef53e
#: ../../ref/contrib/formtools/form-wizard.txt:262
msgid ""
"Returns a dictionary which will be passed as the :attr:`~django.forms.Form."
"initial` argument when instantiating the Form instance for step ``step``. If "
"no initial data was provided while initializing the form wizard, an empty "
"dictionary should be returned."
msgstr ""

# 334140d547734197a3271e562594527e
# adaf2a2abe454dcea4e6609645a0d70e
# 7bc52f93375c4c0386a71a8fce33614d
# 506f82c6295f4e1f91cdf3a66790d8a4
#: ../../ref/contrib/formtools/form-wizard.txt:267
#: ../../ref/contrib/formtools/form-wizard.txt:277
#: ../../ref/contrib/formtools/form-wizard.txt:292
#: ../../ref/contrib/formtools/form-wizard.txt:367
msgid "The default implementation::"
msgstr ""

# 00689d4e1dfc47bd8d9367af6f5a2417
#: ../../ref/contrib/formtools/form-wizard.txt:274
msgid ""
"Returns a dictionary which will be used as the keyword arguments when "
"instantiating the form instance on given ``step``."
msgstr ""

# 81e03914b01b4804a31df04c2a7f219e
#: ../../ref/contrib/formtools/form-wizard.txt:284
msgid ""
"This method will be called only if a :class:`~django.forms.ModelForm` is "
"used as the form for step ``step``."
msgstr ""

# d96824ad71b54906b1417c4e152c5bed
#: ../../ref/contrib/formtools/form-wizard.txt:287
msgid ""
"Returns an :class:`~django.db.models.Model` object which will be passed as "
"the :attr:`~django.forms.ModelForm.instance` argument when instantiating the "
"ModelForm for step ``step``.  If no instance object was provided while "
"initializing the form wizard, ``None`` will be returned."
msgstr ""

# a556ef35cfb5427bab73d49320a3e18e
#: ../../ref/contrib/formtools/form-wizard.txt:299
msgid ""
"Returns the template context for a step. You can overwrite this method to "
"add more data for all or some steps. This method returns a dictionary "
"containing the rendered form step."
msgstr ""

# 0561fe24763247cab01f5de8eb5d9cdc
#: ../../ref/contrib/formtools/form-wizard.txt:303
msgid "The default template context variables are:"
msgstr ""

# e7dddaed460a45efac53764e3b950eee
#: ../../ref/contrib/formtools/form-wizard.txt:305
msgid "Any extra data the storage backend has stored"
msgstr ""

# 49926137e04e41658fb2b6216e9c0224
#: ../../ref/contrib/formtools/form-wizard.txt:306
msgid "``form`` -- form instance of the current step"
msgstr ""

# 983d1ac000e84249b5ad60be12f3079e
#: ../../ref/contrib/formtools/form-wizard.txt:307
msgid "``wizard`` -- the wizard instance itself"
msgstr ""

# eac7ace694104eedaf244b950bf4c4a8
#: ../../ref/contrib/formtools/form-wizard.txt:309
msgid "Example to add extra variables for a specific step::"
msgstr ""

# 8ce1951a4dfb499182b6296d720f57ca
#: ../../ref/contrib/formtools/form-wizard.txt:319
msgid ""
"This method returns a prefix for use by the storage backends. Backends use "
"the prefix as a mechanism to allow data to be stored separately for each "
"wizard. This allows wizards to store their data in a single backend without "
"overwriting each other."
msgstr ""

# ff32848ee15e47a2bedd8a5774c8453a
#: ../../ref/contrib/formtools/form-wizard.txt:324
msgid ""
"You can change this method to make the wizard data prefix more unique to, e."
"g. have multiple instances of one wizard in one session."
msgstr ""

# 6c68180fc19344a09e6d947e337e09bf
# e291256f3d034b20a4dfbca7c74002bc
# 887bc09bface47ba80760a5b583d7aba
# ecadc6f901664bca90cb2d6b290c0872
# e82ef81948e24024ae0b8600d18dc22b
# 76a59130a73447d08676ae2f8ebafbd6
# f095a6c0ea2a4c69b520bb8ea31fc374
#: ../../ref/contrib/formtools/form-wizard.txt:327
#: ../../ref/contrib/formtools/form-wizard.txt:380
#: ../../ref/contrib/formtools/form-wizard.txt:396
#: ../../ref/contrib/formtools/form-wizard.txt:408
#: ../../ref/contrib/formtools/form-wizard.txt:418
#: ../../ref/contrib/formtools/form-wizard.txt:428
#: ../../ref/contrib/formtools/form-wizard.txt:606
msgid "Default implementation::"
msgstr ""

# a13e8a6704d04264b5d1101c0f214d67
#: ../../ref/contrib/formtools/form-wizard.txt:335
msgid ""
"This method constructs the form for a given ``step``. If no ``step`` is "
"defined, the current step will be determined automatically. The method gets "
"three arguments:"
msgstr ""

# 717236a1545247f5994e04c764760519
#: ../../ref/contrib/formtools/form-wizard.txt:339
msgid "``step`` -- The step for which the form instance should be generated."
msgstr ""

# b121a86ab9784725acd6d78eb3ce2873
#: ../../ref/contrib/formtools/form-wizard.txt:340
msgid "``data`` -- Gets passed to the form's data argument"
msgstr ""

# e4a6e4f574be4dfeaf14f6db41564caa
#: ../../ref/contrib/formtools/form-wizard.txt:341
msgid "``files`` -- Gets passed to the form's files argument"
msgstr ""

# 564d3df889ff467fb2d589e50f89fa80
#: ../../ref/contrib/formtools/form-wizard.txt:343
msgid ""
"You can override this method to add extra arguments to the form instance."
msgstr ""

# e03c327ceb20482e9f6ec27bf2502ecb
#: ../../ref/contrib/formtools/form-wizard.txt:345
msgid "Example code to add a user attribute to the form on step 2::"
msgstr ""

# 4a4c681f1ef04638a39ffef637682406
#: ../../ref/contrib/formtools/form-wizard.txt:355
msgid ""
"Hook for modifying the wizard's internal state, given a fully validated :"
"class:`~django.forms.Form` object. The Form is guaranteed to have clean, "
"valid data."
msgstr ""

# b8dc021ec55346dc966142fa1f4d57d4
#: ../../ref/contrib/formtools/form-wizard.txt:359
msgid ""
"This method gives you a way to post-process the form data before the data "
"gets stored within the storage backend. By default it just returns the "
"``form.data`` dictionary. You should not manipulate the data here but you "
"can use it to do some extra work if needed (e.g. set storage extra data)."
msgstr ""

# 4579e4fa31ff4f5cbe1eabaab0fc50a0
#: ../../ref/contrib/formtools/form-wizard.txt:364
msgid ""
"Note that this method is called every time a page is rendered for *all* "
"submitted steps."
msgstr ""

# a4ea0a911f8d41c6969d36f00b496707
#: ../../ref/contrib/formtools/form-wizard.txt:374
msgid ""
"This method gives you a way to post-process the form files before the files "
"gets stored within the storage backend. By default it just returns the "
"``form.files`` dictionary. You should not manipulate the data here but you "
"can use it to do some extra work if needed (e.g. set storage extra data)."
msgstr ""

# 1c8323faefab49b7bca00e9d2e90fbf2
#: ../../ref/contrib/formtools/form-wizard.txt:387
msgid ""
"When the wizard thinks all steps have passed it revalidates all forms with "
"the data from the backend storage."
msgstr ""

# c302e9b6cbc74c3bb7744445734750d6
#: ../../ref/contrib/formtools/form-wizard.txt:390
msgid ""
"If any of the forms don't validate correctly, this method gets called. This "
"method expects two arguments, ``step`` and ``form``."
msgstr ""

# 4a9619025c2a4e81a35db7286edbf23d
#: ../../ref/contrib/formtools/form-wizard.txt:393
msgid ""
"The default implementation resets the current step to the first failing form "
"and redirects the user to the invalid form."
msgstr ""

# 1c20a15148aa4a5a9efdc6e067195f1a
#: ../../ref/contrib/formtools/form-wizard.txt:404
msgid ""
"This method fetches the data from the ``form`` Form instance and returns the "
"dictionary. You can use this method to manipulate the values before the data "
"gets stored in the storage backend."
msgstr ""

# 766129fa29e44892ab085a2e9037d7aa
#: ../../ref/contrib/formtools/form-wizard.txt:415
msgid ""
"This method returns the form files. You can use this method to manipulate "
"the files before the data gets stored in the storage backend."
msgstr ""

# 3034eba47af94ec09a6014ec015eccae
#: ../../ref/contrib/formtools/form-wizard.txt:425
msgid ""
"This method gets called after the GET or POST request has been handled. You "
"can hook in this method to, e.g. change the type of HTTP response."
msgstr ""

# 251a647334844f9488283cba0eb55cf2
#: ../../ref/contrib/formtools/form-wizard.txt:436
msgid "Providing initial data for the forms"
msgstr ""

# 05c26e5c2330426fbc00e7a725b1ebcf
#: ../../ref/contrib/formtools/form-wizard.txt:440
msgid ""
"Initial data for a wizard's :class:`~django.forms.Form` objects can be "
"provided using the optional :attr:`~Wizard.initial_dict` keyword argument. "
"This argument should be a dictionary mapping the steps to dictionaries "
"containing the initial data for each step. The dictionary of initial data "
"will be passed along to the constructor of the step's :class:`~django.forms."
"Form`::"
msgstr ""

# 47775d5d94454726b3e40cb1c7e556a4
#: ../../ref/contrib/formtools/form-wizard.txt:461
msgid ""
"The ``initial_dict`` can also take a list of dictionaries for a specific "
"step if the step is a ``FormSet``."
msgstr ""

# 848110f83bb0425f97b937a300e54228
#: ../../ref/contrib/formtools/form-wizard.txt:467
msgid "Handling files"
msgstr ""

# f91c04fdd54c4acba86f8d761b896146
#: ../../ref/contrib/formtools/form-wizard.txt:469
msgid ""
"To handle :class:`~django.forms.FileField` within any step form of the "
"wizard, you have to add a :attr:`file_storage` to your :class:`WizardView` "
"subclass."
msgstr ""

# 403901f8940247b78d7a8fc06bad91b6
#: ../../ref/contrib/formtools/form-wizard.txt:472
msgid ""
"This storage will temporarily store the uploaded files for the wizard. The :"
"attr:`file_storage` attribute should be a :class:`~django.core.files.storage."
"Storage` subclass."
msgstr ""

# b85b5d2941574bf4b023b8a137696c4c
#: ../../ref/contrib/formtools/form-wizard.txt:478
msgid ""
"Please remember to take care of removing old files as the :class:"
"`WizardView` won't remove any files, whether the wizard gets finished "
"correctly or not."
msgstr ""

# a642b29c48f74ff7b75a04f7869440a4
#: ../../ref/contrib/formtools/form-wizard.txt:483
msgid "Conditionally view/skip specific steps"
msgstr ""

# 6f5810369b834c738c01ba1a85d10092
#: ../../ref/contrib/formtools/form-wizard.txt:487
msgid ""
"The :meth:`~WizardView.as_view` method accepts a ``condition_dict`` "
"argument. You can pass a dictionary of boolean values or callables. The key "
"should match the steps names (e.g. '0', '1')."
msgstr ""

# acc8794362f94918a3e97c169005e5a5
#: ../../ref/contrib/formtools/form-wizard.txt:491
msgid ""
"If the value of a specific step is callable it will be called with the :"
"class:`WizardView` instance as the only argument. If the return value is "
"true, the step's form will be used."
msgstr ""

# d831634d403e4451a5d951a0dc0cc33b
#: ../../ref/contrib/formtools/form-wizard.txt:495
msgid ""
"This example provides a contact form including a condition. The condition is "
"used to show a message form only if a checkbox in the first step was checked."
msgstr ""

# 33874227ea124330b9e75a36c55078d6
#: ../../ref/contrib/formtools/form-wizard.txt:498
msgid "The steps are defined in a ``forms.py`` file::"
msgstr ""

# 9e2148d303f2492e84bae1f2c0e1c31a
#: ../../ref/contrib/formtools/form-wizard.txt:510
msgid "We define our wizard in a ``views.py``::"
msgstr ""

# 97ae9eb9a960406a993d3a565f958424
#: ../../ref/contrib/formtools/form-wizard.txt:528
msgid "We need to add the ``ContactWizard`` to our ``urls.py`` file::"
msgstr ""

# 92420588a10344b8b0982de275de188a
#: ../../ref/contrib/formtools/form-wizard.txt:543
msgid ""
"As you can see, we defined a ``show_message_form_condition`` next to our :"
"class:`WizardView` subclass and added a ``condition_dict`` argument to the :"
"meth:`~WizardView.as_view` method. The key refers to the second wizard step "
"(because of the zero based step index)."
msgstr ""

# 109adacdc0d44e3d8f8185b1d28acd2e
#: ../../ref/contrib/formtools/form-wizard.txt:549
msgid "How to work with ModelForm and ModelFormSet"
msgstr ""

# 0d937ffc783c4ddcb5e032f5ddac7285
#: ../../ref/contrib/formtools/form-wizard.txt:553
msgid ""
"WizardView supports :doc:`ModelForms </topics/forms/modelforms>` and :ref:"
"`ModelFormSets <model-formsets>`. Additionally to :attr:`~WizardView."
"initial_dict`, the :meth:`~WizardView.as_view` method takes an "
"``instance_dict`` argument that should contain instances of ``ModelForm`` "
"and ``ModelFormSet``.  Similarly to :attr:`~WizardView.initial_dict`, these "
"dictionary key values should be equal to the step number in the form list."
msgstr ""

# 6cc0e3471b574d8d97997ac33cfa9f82
#: ../../ref/contrib/formtools/form-wizard.txt:561
msgid "Usage of ``NamedUrlWizardView``"
msgstr ""

# 379fd7ffff4f454abffe5aab69e22cbf
#: ../../ref/contrib/formtools/form-wizard.txt:565
msgid ""
"There is a :class:`WizardView` subclass which adds named-urls support to the "
"wizard. By doing this, you can have single urls for every step."
msgstr ""

# 75a2383eb3fb45e0afeb38a1fe8f3090
#: ../../ref/contrib/formtools/form-wizard.txt:568
msgid "To use the named urls, you have to change the ``urls.py``."
msgstr ""

# 073869c393654b3d800ea02707843d70
#: ../../ref/contrib/formtools/form-wizard.txt:570
msgid ""
"Below you will see an example of a contact wizard with two steps, step 1 "
"with \"contactdata\" as its name and step 2 with \"leavemessage\" as its "
"name."
msgstr ""

# 42eef1d1724140de91e27c014f619e70
#: ../../ref/contrib/formtools/form-wizard.txt:573
msgid ""
"Additionally you have to pass two more arguments to the :meth:`~WizardView."
"as_view` method:"
msgstr ""

# 470f1b9562324e218bc4967911a9ca32
#: ../../ref/contrib/formtools/form-wizard.txt:576
msgid "``url_name`` -- the name of the url (as provided in the urls.py)"
msgstr ""

# af9fba1a12854797ae32cd6b5ae320e6
#: ../../ref/contrib/formtools/form-wizard.txt:577
msgid "``done_step_name`` -- the name in the url for the done step"
msgstr ""

# b1606a80797b4d9998ed106d887c804b
#: ../../ref/contrib/formtools/form-wizard.txt:579
msgid "Example code for the changed ``urls.py`` file::"
msgstr ""

# cffc59aa36a7432986303c56349b69e5
#: ../../ref/contrib/formtools/form-wizard.txt:600
msgid "Advanced ``NamedUrlWizardView`` methods"
msgstr ""

# 9835e0f5f46648939600fdc9232c52b6
#: ../../ref/contrib/formtools/form-wizard.txt:604
msgid "This method returns the URL for a specific step."
msgstr ""
