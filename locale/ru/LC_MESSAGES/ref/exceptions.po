# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated <>, 2012, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-27 00:21\n"
"PO-Revision-Date: 2013-03-08 03:24+0400\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 487dc73cd24a4edfac3051eeb4575dc3
#: ../../ref/exceptions.txt:3
msgid "Django Exceptions"
msgstr "Исключения Django"

# 8c2d62ae377746f1948698bb72c37481
#: ../../ref/exceptions.txt:6
msgid ""
"Django raises some Django specific exceptions as well as many standard "
"Python exceptions."
msgstr ""
"Django вызывает несколько собственных исключений на ряду со стандартными "
"исключениями Python."

# 194b5e4a29d1450eb9a13148c215bfb4
#: ../../ref/exceptions.txt:10
msgid "Django-specific Exceptions"
msgstr "Собственные исключения"

# ad67d11ef3f64c25aab2a94c4fa00093
#: ../../ref/exceptions.txt:16
msgid "ObjectDoesNotExist and DoesNotExist"
msgstr "ObjectDoesNotExist и DoesNotExist"

# 5f0a7245e91644559c02289ea6a52e88
#: ../../ref/exceptions.txt:20
msgid ""
"The :exc:`DoesNotExist` exception is raised when an object is not found for "
"the given parameters of a query."
msgstr ""
"Исключение :exc:`DoesNotExist` вызывается, если объект не найден при "
"использовании параметров, указанных в запросе."

# 7c2927bc091f4339936f15554201798d
#: ../../ref/exceptions.txt:23
msgid ""
":exc:`ObjectDoesNotExist` is defined in :mod:`django.core.exceptions`. :exc:"
"`DoesNotExist` is a subclass of the base :exc:`ObjectDoesNotExist` exception "
"that is provided on every model class as a way of identifying the specific "
"type of object that could not be found."
msgstr ""
"Исключение :exc:`ObjectDoesNotExist` определено в модуле :mod:`django.core."
"exceptions`. Класс :exc:`DoesNotExist` является подклассом базового "
"исключения :exc:`ObjectDoesNotExist`, которое предоставляется каждым классом "
"модели в качестве способа индикации объекта особого типа, который не может "
"быть найден."

# 079c1b35722945c2886433ce711bd3e9
#: ../../ref/exceptions.txt:28
msgid ""
"See :meth:`~django.db.models.query.QuerySet.get()` for further information "
"on :exc:`ObjectDoesNotExist` and :exc:`DoesNotExist`."
msgstr ""
"См. :meth:`~django.db.models.query.QuerySet.get()` для подробной информации "
"об исключениях :exc:`ObjectDoesNotExist` и :exc:`DoesNotExist`."

# 6cf2194073b1492085e79737a92410d2
#: ../../ref/exceptions.txt:32
msgid "MultipleObjectsReturned"
msgstr "MultipleObjectsReturned"

# 1d5216a0096b47e0948aadc060b773ba
#: ../../ref/exceptions.txt:35
msgid ""
"The :exc:`MultipleObjectsReturned` exception is raised by a query if only "
"one object is expected, but multiple objects are returned. A base version of "
"this exception is provided in :mod:`django.core.exceptions`; each model "
"class contains a subclassed version that can be used to identify the "
"specific object type that has returned multiple objects."
msgstr ""
"Исключение :exc:`MultipleObjectsReturned` вызывается запросом при получении "
"нескольких объектов в случае, когда ожидался один объект. Базовая версия "
"этого исключения предоставляется модулем :mod:`django.core.exceptions`; "
"каждый класс модели содержит версию подкласса, которая может использоваться "
"для идентификации особого объектного типа, который возвратил коллекцию "
"объектов."

# 270e5c2824ff459bac3b08366ae0bbc8
#: ../../ref/exceptions.txt:41
msgid ""
"See :meth:`~django.db.models.query.QuerySet.get()` for further information."
msgstr ""
"См. :meth:`~django.db.models.query.QuerySet.get()` для подробной информации."

# a95feca949344849854e2db28d06267e
#: ../../ref/exceptions.txt:44
msgid "SuspiciousOperation"
msgstr "SuspiciousOperation"

# 450315d03c5d4684bda266c0766de1a6
#: ../../ref/exceptions.txt:47
msgid ""
"The :exc:`SuspiciousOperation` exception is raised when a user has performed "
"an operation that should be considered suspicious from a security "
"perspective, such as tampering with a session cookie."
msgstr ""
"Исключение :exc:`SuspiciousOperation` вызывается когда пользователь выполнил "
"операцию, которая должна быть рассмотрена как подозрительная с точки зрения "
"безопасности, например, при подмене куки сессии."

# 10ee2bd4c715415c972c5741c5bf0550
#: ../../ref/exceptions.txt:52
msgid "PermissionDenied"
msgstr "PermissionDenied"

# 4005f1ff11ee4754bc4c64ba2988e58a
#: ../../ref/exceptions.txt:55
msgid ""
"The :exc:`PermissionDenied` exception is raised when a user does not have "
"permission to perform the action requested."
msgstr ""
"Исключение :exc:`PermissionDenied` вызывается если пользователь не имеет "
"права на выполнение запрошенного действия."

# 64f2412ef18d4ef492ab738b0f60cc6f
#: ../../ref/exceptions.txt:59
msgid "ViewDoesNotExist"
msgstr "ViewDoesNotExist"

# 6bd47993f8ff437fad5401a87fff7a25
#: ../../ref/exceptions.txt:62
msgid ""
"The :exc:`ViewDoesNotExist` exception is raised by :mod:`django.core."
"urlresolvers` when a requested view does not exist."
msgstr ""
"Исключение :exc:`ViewDoesNotExist` вызывается модулем :mod:`django.core."
"urlresolvers`, если запрошенное представление на найдено."

# 5e78d367cb23465fb9658d23fa773c52
#: ../../ref/exceptions.txt:66
msgid "MiddlewareNotUsed"
msgstr "MiddlewareNotUsed"

# 239330226cf346da807f58cd23ee4a4e
#: ../../ref/exceptions.txt:69
msgid ""
"The :exc:`MiddlewareNotUsed` exception is raised when a middleware is not "
"used in the server configuration."
msgstr ""
"Исключение :exc:`MiddlewareNotUsed` вызывается, если мидлвар не "
"используется в конфигурации сервера."

# 0fc584ac67084b6689c692ef8eea3fb4
#: ../../ref/exceptions.txt:73
msgid "ImproperlyConfigured"
msgstr "ImproperlyConfigured"

# baa9910fc34a4628b6fec750c26baee9
#: ../../ref/exceptions.txt:76
msgid ""
"The :exc:`ImproperlyConfigured` exception is raised when Django is somehow "
"improperly configured -- for example, if a value in ``settings.py`` is "
"incorrect or unparseable."
msgstr ""
"Исключение :exc:`ImproperlyConfigured` вызывается, если Django неправильно "
"сконфигурировано. Например, если значение в  ``settings.py`` неправильное."

# e8e204993d7e43f399ffe8eec38d74e8
#: ../../ref/exceptions.txt:81
msgid "FieldError"
msgstr "FieldError"

# e183750a05d54ff4993b71ed32d390ad
#: ../../ref/exceptions.txt:84
msgid ""
"The :exc:`FieldError` exception is raised when there is a problem with a "
"model field. This can happen for several reasons:"
msgstr ""
"Исключение :exc:`FieldError` вызывается, если существует проблема с полем "
"модели. Такое может произойти по следующим причинам:"

# a65849654456404f9739c5105f10349c
#: ../../ref/exceptions.txt:87
msgid ""
"A field in a model clashes with a field of the same name from an abstract "
"base class"
msgstr ""
"Поле в модели конфликтует с полем абстрактного класса, которое имеет такое "
"же имя."

# 079da16c76a748ae9ac9d258f641ec55
#: ../../ref/exceptions.txt:89
msgid "An infinite loop is caused by ordering"
msgstr "Бесконечный цикл, вызванный сортировкой."

# 210ef05a6d064a35a1ea38d13402d342
#: ../../ref/exceptions.txt:90
msgid "A keyword cannot be parsed from the filter parameters"
msgstr "Аргумент не может быть получен из параметров фильтра."

# 53a334e284474f06abaad3d741037984
#: ../../ref/exceptions.txt:91
msgid "A field cannot be determined from a keyword in the query parameters"
msgstr "Поле не может быть определено из аргумента в параметрах запроса."

# 5bbe8bcdd71048e69302b098b6a4be2c
#: ../../ref/exceptions.txt:93
msgid "A join is not permitted on the specified field"
msgstr "Объединение не разрешено для указанного поля."

# 8609793b1e8a4f03a8613aa2c002f136
#: ../../ref/exceptions.txt:94
msgid "A field name is invalid"
msgstr "Имя поля неверное."

# 9c8be2796f0541e0bd92a0531d8b387c
#: ../../ref/exceptions.txt:95
msgid "A query contains invalid order_by arguments"
msgstr "Запрос состоит из неверного порядка аргументов."

# ca791bcef96b48b79f6b5b227e4291f5
#: ../../ref/exceptions.txt:98
msgid "ValidationError"
msgstr "ValidationError"

# 7e737c7fcad147068935fc8389c79aeb
#: ../../ref/exceptions.txt:101
msgid ""
"The :exc:`ValidationError` exception is raised when data fails form or model "
"field validation. For more information about validation, see :doc:`Form and "
"Field Validation </ref/forms/validation>`, :ref:`Model Field Validation "
"<validating-objects>` and the :doc:`Validator Reference </ref/validators>`."
msgstr ""
"Исключение :exc:`ValidationError` вызывается, если происходит ошибка "
"проверки данных от формы или модели. Для подробностей о проверке данных, "
"см. :doc:`Проверка форм и полей </ref/forms/validation>`, :ref:`Проверка "
"поля модели <validating-objects>` и the :doc:`Справочник проверки </ref/"
"validators>`."

# e93d26d11b844b32afd595f53e3a4c69
#: ../../ref/exceptions.txt:110
msgid "NoReverseMatch"
msgstr "NoReverseMatch"

# 52987c524c8643c09462dd4af58adce7
#: ../../ref/exceptions.txt:113
msgid ""
"The :exc:`NoReverseMatch` exception is raised by :mod:`django.core."
"urlresolvers` when a matching URL in your URLconf cannot be identified based "
"on the parameters supplied."
msgstr ""
"Исключение :exc:`NoReverseMatch` вызывается модулем :mod:`django.core."
"urlresolvers`, если не получилось найти соответствующий URL по переданным "
"параметрам."

# beb6c161b861478d83ba81b636512e6d
#: ../../ref/exceptions.txt:120
msgid "Database Exceptions"
msgstr "Исключения базы данных"

# 0368c221f9cc4ffa9008ba3d067d5957
#: ../../ref/exceptions.txt:122
msgid ""
"Django wraps the standard database exceptions :exc:`DatabaseError` and :exc:"
"`IntegrityError` so that your Django code has a guaranteed common "
"implementation of these classes. These database exceptions are provided in :"
"mod:`django.db`."
msgstr ""
"Django оборачивает стандартные исключения базы данных :exc:`DatabaseError` "
"и :exc:`IntegrityError` таким образом, что код Django гарантирует "
"стандартную реализацию этих классов. Эти исключения базы данных "
"предоставляют модулем :mod:`django.db`."

# 9d29b10cac25474682e97a2e3f0ca6f1
#: ../../ref/exceptions.txt:130
msgid ""
"The Django wrappers for database exceptions behave exactly the same as the "
"underlying database exceptions. See :pep:`249`, the Python Database API "
"Specification v2.0, for further information."
msgstr ""
"Обёртка Django для исключений базы данных ведёт себя аналогично обёртываемым "
"исключениям. См. :pep:`249`, вторую версию Python Database API "
"Specification, для подробностей."

# 600f5ee11b1f442aa679c36b9da1a9cd
#: ../../ref/exceptions.txt:136
msgid ""
"Raised to prevent deletion of referenced objects when using :attr:`django.db."
"models.PROTECT`. Subclass of :exc:`IntegrityError`."
msgstr ""
"Выбрасывается для предотвращения удаления связанных объектов при "
"использовании :attr:`django.db.models.PROTECT`. Является дочерним классом :"
"exc:`IntegrityError`."

# 62a15275b1974f6aae883fe0fa338577
#: ../../ref/exceptions.txt:142
msgid "Http Exceptions"
msgstr "Исключения Http"

# e92cf6cb35484da4b7a32b0c65b369f3
#: ../../ref/exceptions.txt:146
msgid ""
"The :exc:`UnreadablePostError` is raised when a user cancels an upload. It "
"is available from :mod:`django.http`."
msgstr ""
"Исключение :exc:`UnreadablePostError` выбрасывается когда пользователь "
"прерывает закачку файла. Определено в модуле :mod:`django.http`."

# a69b4479ad3043318acbf840cc2910db
#: ../../ref/exceptions.txt:152
msgid "Transaction Exceptions"
msgstr "Исключения транзакций"

# e92cf6cb35484da4b7a32b0c65b369f3
#: ../../ref/exceptions.txt:156
msgid ""
"The :exc:`TransactionManagementError` is raised for any and all problems "
"related to database transactions. It is available from :mod:`django.db."
"transaction`."
msgstr ""
"Исключение :exc:`TransactionManagementError` вызывается для всех проблем с "
"транзакциями в базе данных. Оно доступно из модуля :mod:`django.db."
"transaction`."

# 62a15275b1974f6aae883fe0fa338577
#: ../../ref/exceptions.txt:161
msgid "Python Exceptions"
msgstr "Исключения Python"

# b3e2333f5d5b41b1a35afce7f03eada5
#: ../../ref/exceptions.txt:163
msgid ""
"Django raises built-in Python exceptions when appropriate as well. See the "
"Python documentation for further information on the built-in :mod:"
"`exceptions`."
msgstr ""
"Django вызывает встроенные исключения Python когда это требуется. Обратитесь "
"к документации Python для получения более подробной информации о :mod:"
"`exceptions`."
