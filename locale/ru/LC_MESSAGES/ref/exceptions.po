# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-02-15 15:13\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 487dc73cd24a4edfac3051eeb4575dc3
#: ../../ref/exceptions.txt:3
msgid "Django Exceptions"
msgstr ""

# 8c2d62ae377746f1948698bb72c37481
#: ../../ref/exceptions.txt:6
msgid ""
"Django raises some Django specific exceptions as well as many standard "
"Python exceptions."
msgstr ""

# 194b5e4a29d1450eb9a13148c215bfb4
#: ../../ref/exceptions.txt:10
msgid "Django-specific Exceptions"
msgstr ""

# ad67d11ef3f64c25aab2a94c4fa00093
#: ../../ref/exceptions.txt:16
msgid "ObjectDoesNotExist and DoesNotExist"
msgstr ""

# 5f0a7245e91644559c02289ea6a52e88
#: ../../ref/exceptions.txt:20
msgid ""
"The :exc:`DoesNotExist` exception is raised when an object is not found for "
"the given parameters of a query."
msgstr ""

# 7c2927bc091f4339936f15554201798d
#: ../../ref/exceptions.txt:23
msgid ""
":exc:`ObjectDoesNotExist` is defined in :mod:`django.core.exceptions`. :exc:"
"`DoesNotExist` is a subclass of the base :exc:`ObjectDoesNotExist` exception "
"that is provided on every model class as a way of identifying the specific "
"type of object that could not be found."
msgstr ""

# 079c1b35722945c2886433ce711bd3e9
#: ../../ref/exceptions.txt:28
msgid ""
"See :meth:`~django.db.models.query.QuerySet.get()` for further information "
"on :exc:`ObjectDoesNotExist` and :exc:`DoesNotExist`."
msgstr ""

# 6cf2194073b1492085e79737a92410d2
#: ../../ref/exceptions.txt:32
msgid "MultipleObjectsReturned"
msgstr ""

# 1d5216a0096b47e0948aadc060b773ba
#: ../../ref/exceptions.txt:35
msgid ""
"The :exc:`MultipleObjectsReturned` exception is raised by a query if only "
"one object is expected, but multiple objects are returned. A base version of "
"this exception is provided in :mod:`django.core.exceptions`; each model "
"class contains a subclassed version that can be used to identify the "
"specific object type that has returned multiple objects."
msgstr ""

# 270e5c2824ff459bac3b08366ae0bbc8
#: ../../ref/exceptions.txt:41
msgid ""
"See :meth:`~django.db.models.query.QuerySet.get()` for further information."
msgstr ""

# a95feca949344849854e2db28d06267e
#: ../../ref/exceptions.txt:44
msgid "SuspiciousOperation"
msgstr ""

# 450315d03c5d4684bda266c0766de1a6
#: ../../ref/exceptions.txt:47
msgid ""
"The :exc:`SuspiciousOperation` exception is raised when a user has performed "
"an operation that should be considered suspicious from a security "
"perspective, such as tampering with a session cookie."
msgstr ""

# 10ee2bd4c715415c972c5741c5bf0550
#: ../../ref/exceptions.txt:52
msgid "PermissionDenied"
msgstr ""

# 4005f1ff11ee4754bc4c64ba2988e58a
#: ../../ref/exceptions.txt:55
msgid ""
"The :exc:`PermissionDenied` exception is raised when a user does not have "
"permission to perform the action requested."
msgstr ""

# 64f2412ef18d4ef492ab738b0f60cc6f
#: ../../ref/exceptions.txt:59
msgid "ViewDoesNotExist"
msgstr ""

# 6bd47993f8ff437fad5401a87fff7a25
#: ../../ref/exceptions.txt:62
msgid ""
"The :exc:`ViewDoesNotExist` exception is raised by :mod:`django.core."
"urlresolvers` when a requested view does not exist."
msgstr ""

# 5e78d367cb23465fb9658d23fa773c52
#: ../../ref/exceptions.txt:66
msgid "MiddlewareNotUsed"
msgstr ""

# 239330226cf346da807f58cd23ee4a4e
#: ../../ref/exceptions.txt:69
msgid ""
"The :exc:`MiddlewareNotUsed` exception is raised when a middleware is not "
"used in the server configuration."
msgstr ""

# 0fc584ac67084b6689c692ef8eea3fb4
#: ../../ref/exceptions.txt:73
msgid "ImproperlyConfigured"
msgstr ""

# baa9910fc34a4628b6fec750c26baee9
#: ../../ref/exceptions.txt:76
msgid ""
"The :exc:`ImproperlyConfigured` exception is raised when Django is somehow "
"improperly configured -- for example, if a value in ``settings.py`` is "
"incorrect or unparseable."
msgstr ""

# e8e204993d7e43f399ffe8eec38d74e8
#: ../../ref/exceptions.txt:81
msgid "FieldError"
msgstr ""

# e183750a05d54ff4993b71ed32d390ad
#: ../../ref/exceptions.txt:84
msgid ""
"The :exc:`FieldError` exception is raised when there is a problem with a "
"model field. This can happen for several reasons:"
msgstr ""

# a65849654456404f9739c5105f10349c
#: ../../ref/exceptions.txt:87
msgid ""
"A field in a model clashes with a field of the same name from an abstract "
"base class"
msgstr ""

# 079da16c76a748ae9ac9d258f641ec55
#: ../../ref/exceptions.txt:89
msgid "An infinite loop is caused by ordering"
msgstr ""

# 210ef05a6d064a35a1ea38d13402d342
#: ../../ref/exceptions.txt:90
msgid "A keyword cannot be parsed from the filter parameters"
msgstr ""

# 53a334e284474f06abaad3d741037984
#: ../../ref/exceptions.txt:91
msgid "A field cannot be determined from a keyword in the query parameters"
msgstr ""

# 5bbe8bcdd71048e69302b098b6a4be2c
#: ../../ref/exceptions.txt:93
msgid "A join is not permitted on the specified field"
msgstr ""

# 8609793b1e8a4f03a8613aa2c002f136
#: ../../ref/exceptions.txt:94
msgid "A field name is invalid"
msgstr ""

# 9c8be2796f0541e0bd92a0531d8b387c
#: ../../ref/exceptions.txt:95
msgid "A query contains invalid order_by arguments"
msgstr ""

# ca791bcef96b48b79f6b5b227e4291f5
#: ../../ref/exceptions.txt:98
msgid "ValidationError"
msgstr ""

# 7e737c7fcad147068935fc8389c79aeb
#: ../../ref/exceptions.txt:101
msgid ""
"The :exc:`ValidationError` exception is raised when data fails form or model "
"field validation. For more information about validation, see :doc:`Form and "
"Field Validation </ref/forms/validation>`, :ref:`Model Field Validation "
"<validating-objects>` and the :doc:`Validator Reference </ref/validators>`."
msgstr ""

# e93d26d11b844b32afd595f53e3a4c69
#: ../../ref/exceptions.txt:110
msgid "NoReverseMatch"
msgstr ""

# 52987c524c8643c09462dd4af58adce7
#: ../../ref/exceptions.txt:113
msgid ""
"The :exc:`NoReverseMatch` exception is raised by :mod:`django.core."
"urlresolvers` when a matching URL in your URLconf cannot be identified based "
"on the parameters supplied."
msgstr ""

# beb6c161b861478d83ba81b636512e6d
#: ../../ref/exceptions.txt:120
msgid "Database Exceptions"
msgstr ""

# 0368c221f9cc4ffa9008ba3d067d5957
#: ../../ref/exceptions.txt:122
msgid ""
"Django wraps the standard database exceptions :exc:`DatabaseError` and :exc:"
"`IntegrityError` so that your Django code has a guaranteed common "
"implementation of these classes. These database exceptions are provided in :"
"mod:`django.db`."
msgstr ""

# 9d29b10cac25474682e97a2e3f0ca6f1
#: ../../ref/exceptions.txt:130
msgid ""
"The Django wrappers for database exceptions behave exactly the same as the "
"underlying database exceptions. See :pep:`249`, the Python Database API "
"Specification v2.0, for further information."
msgstr ""

# a69b4479ad3043318acbf840cc2910db
#: ../../ref/exceptions.txt:137
msgid "Transaction Exceptions"
msgstr ""

# e92cf6cb35484da4b7a32b0c65b369f3
#: ../../ref/exceptions.txt:141
msgid ""
"The :exc:`TransactionManagementError` is raised for any and all problems "
"related to database transactions. It is available from :mod:`django.db."
"transaction`."
msgstr ""

# 62a15275b1974f6aae883fe0fa338577
#: ../../ref/exceptions.txt:146
msgid "Python Exceptions"
msgstr ""

# b3e2333f5d5b41b1a35afce7f03eada5
#: ../../ref/exceptions.txt:148
msgid ""
"Django raises built-in Python exceptions when appropriate as well. See the "
"Python documentation for further information on the built-in :mod:"
"`exceptions`."
msgstr ""
