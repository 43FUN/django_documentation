# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-11 11:43+0300\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# f909bd885cd6454aae40037b3c025e6c
#: ../../howto/deployment/fastcgi.txt:3
msgid "How to use Django with FastCGI, SCGI, or AJP"
msgstr ""

# d569802f2fb44819b480b155f1f7ff0a
#: ../../howto/deployment/fastcgi.txt:5
msgid "FastCGI support is deprecated and will be removed in Django 1.9."
msgstr ""

# 7e04984268bd49ef8d9c3c3b27a9812c
#: ../../howto/deployment/fastcgi.txt:10
msgid ""
"Although :doc:`WSGI</howto/deployment/wsgi/index>` is the preferred "
"deployment platform for Django, many people use shared hosting, on which "
"protocols such as FastCGI, SCGI or AJP are the only viable options."
msgstr ""

# b6582d6b8d2146b78d52fe707d9248e4
# 88b0d5816e214cfe9a25702ca68e480f
# f9a661b84879470bad0e46e1f704030d
#: ../../howto/deployment/fastcgi.txt:0
msgid "Note"
msgstr ""

# 64822660357c43ad9a0d475be8fa7978
#: ../../howto/deployment/fastcgi.txt:16
msgid ""
"This document primarily focuses on FastCGI. Other protocols, such as SCGI "
"and AJP, are also supported, through the ``flup`` Python package. See the "
"Protocols_ section below for specifics about SCGI and AJP."
msgstr ""

# 03913dc2429d480f92b5ee99be0c6487
#: ../../howto/deployment/fastcgi.txt:20
msgid ""
"Essentially, FastCGI is an efficient way of letting an external application "
"serve pages to a Web server. The Web server delegates the incoming Web "
"requests (via a socket) to FastCGI, which executes the code and passes the "
"response back to the Web server, which, in turn, passes it back to the "
"client's Web browser."
msgstr ""

# bedcb91d9d5f4c5790a2066cfec1e144
#: ../../howto/deployment/fastcgi.txt:25
msgid ""
"Like WSGI, FastCGI allows code to stay in memory, allowing requests to be "
"served with no startup time. While e.g. :doc:`mod_wsgi</howto/deployment/"
"wsgi/modwsgi>` can either be configured embedded in the Apache Web server "
"process or as a separate daemon process, a FastCGI process never runs inside "
"the Web server process, always in a separate, persistent process."
msgstr ""

# 8399447fe74d44d0ba97b2dbf152b2d3
#: ../../howto/deployment/fastcgi.txt:0
msgid "Why run code in a separate process?"
msgstr ""

# 4b672e2917e84789b766fddcd74d9b6c
#: ../../howto/deployment/fastcgi.txt:36
msgid ""
"The traditional ``mod_*`` arrangements in Apache embed various scripting "
"languages (most notably PHP, Python and Perl) inside the process space of "
"your Web server. Although this lowers startup time -- because code doesn't "
"have to be read off disk for every request -- it comes at the cost of memory "
"use."
msgstr ""

# 5c7a09081c9242a49b854aad4da5277a
#: ../../howto/deployment/fastcgi.txt:42
msgid ""
"Due to the nature of FastCGI, it's even possible to have processes that run "
"under a different user account than the Web server process. That's a nice "
"security benefit on shared systems, because it means you can secure your "
"code from other users."
msgstr ""

# 74c0e7678aeb46afbd3318ee314775db
#: ../../howto/deployment/fastcgi.txt:48
msgid "Prerequisite: flup"
msgstr ""

# f364d43eb48e4a94b9d272ab77f31f4e
#: ../../howto/deployment/fastcgi.txt:50
msgid ""
"Before you can start using FastCGI with Django, you'll need to install "
"flup_, a Python library for dealing with FastCGI. Version 0.5 or newer "
"should work fine."
msgstr ""

# 1a9a129424104d7caef40b21642d07b5
#: ../../howto/deployment/fastcgi.txt:56
msgid "Starting your FastCGI server"
msgstr ""

# 8cc8ccfa7aac4c43840ae11a24967d8e
#: ../../howto/deployment/fastcgi.txt:58
msgid ""
"FastCGI operates on a client-server model, and in most cases you'll be "
"starting the FastCGI process on your own. Your Web server (be it Apache, "
"lighttpd, or otherwise) only contacts your Django-FastCGI process when the "
"server needs a dynamic page to be loaded. Because the daemon is already "
"running with the code in memory, it's able to serve the response very "
"quickly."
msgstr ""

# 11da432140454146b582cf5599110646
#: ../../howto/deployment/fastcgi.txt:66
msgid ""
"If you're on a shared hosting system, you'll probably be forced to use Web "
"server-managed FastCGI processes. See the section below on running Django "
"with Web server-managed processes for more information."
msgstr ""

# 8d31996094694cc6b5cd3617cfc71fed
#: ../../howto/deployment/fastcgi.txt:70
msgid ""
"A Web server can connect to a FastCGI server in one of two ways: It can use "
"either a Unix domain socket (a \"named pipe\" on Win32 systems), or it can "
"use a TCP socket. What you choose is a manner of preference; a TCP socket is "
"usually easier due to permissions issues."
msgstr ""

# 3f4b6394ec6040038d946961f3ac927e
#: ../../howto/deployment/fastcgi.txt:75
msgid ""
"To start your server, first change into the directory of your project "
"(wherever your :doc:`manage.py </ref/django-admin>` is), and then run the :"
"djadmin:`runfcgi` command::"
msgstr ""

# 6317efaeafed4ff59e65a588a4e8444e
#: ../../howto/deployment/fastcgi.txt:81
msgid ""
"If you specify ``help`` as the only option after :djadmin:`runfcgi`, it'll "
"display a list of all the available options."
msgstr ""

# 81ef717459044b5fa132e0442b19add8
#: ../../howto/deployment/fastcgi.txt:84
msgid ""
"You'll need to specify either a :djadminopt:`socket`, a :djadminopt:"
"`protocol` or both :djadminopt:`host` and :djadminopt:`port`. Then, when you "
"set up your Web server, you'll just need to point it at the host/port or "
"socket you specified when starting the FastCGI server. See the examples_, "
"below."
msgstr ""

# ce1432e7158547f3bbdb1af1f6018d5f
#: ../../howto/deployment/fastcgi.txt:90
msgid "Protocols"
msgstr ""

# dd49e5df58ba48bc835b6aa3c139d890
#: ../../howto/deployment/fastcgi.txt:92
msgid ""
"Django supports all the protocols that flup_ does, namely fastcgi_, `SCGI`_ "
"and `AJP1.3`_ (the Apache JServ Protocol, version 1.3). Select your "
"preferred protocol by using the :djadminopt:`protocol=\\<protocol_name\\> "
"<protocol>` option with ``./manage.py runfcgi`` -- where ``<protocol_name>`` "
"may be one of: ``fcgi`` (the default), ``scgi`` or ``ajp``. For example::"
msgstr ""

# 54323f44cf6e41bc8e983ea6ba3a4cad
#: ../../howto/deployment/fastcgi.txt:106
msgid "Examples"
msgstr ""

# 74177256e6db4172bde1411d45fadcfc
#: ../../howto/deployment/fastcgi.txt:108
msgid "Running a threaded server on a TCP port::"
msgstr ""

# 4010e2dae03a4836908bd13970d3e675
#: ../../howto/deployment/fastcgi.txt:112
msgid "Running a preforked server on a Unix domain socket::"
msgstr ""

# 1167cf0acc1a48839c86504452dece24
#: ../../howto/deployment/fastcgi.txt:0
msgid "Socket security"
msgstr ""

# 5b9c7d56a2af48239cf889b6b336449c
#: ../../howto/deployment/fastcgi.txt:118
msgid ""
"Django's default umask requires that the web server and the Django fastcgi "
"process be run with the same group **and** user. For increased security, you "
"can run them under the same group but as different users. If you do this, "
"you will need to set the umask to 0002 using the ``umask`` argument to "
"``runfcgi``."
msgstr ""

# 556b67f1818d43d5aa928ae5d266deca
#: ../../howto/deployment/fastcgi.txt:124
msgid ""
"Run without daemonizing (backgrounding) the process (good for debugging)::"
msgstr ""

# 6cf98055d83444a39f178029dbf5168f
#: ../../howto/deployment/fastcgi.txt:129
msgid "Stopping the FastCGI daemon"
msgstr ""

# b07b4ac1022b49878f377b30a2fb54cf
#: ../../howto/deployment/fastcgi.txt:131
msgid ""
"If you have the process running in the foreground, it's easy enough to stop "
"it: Simply hitting ``Ctrl-C`` will stop and quit the FastCGI server. "
"However, when you're dealing with background processes, you'll need to "
"resort to the Unix ``kill`` command."
msgstr ""

# 73d0cc1ffbef46e498011d5abdbf4a63
#: ../../howto/deployment/fastcgi.txt:136
msgid ""
"If you specify the :djadminopt:`pidfile` option to :djadmin:`runfcgi`, you "
"can kill the running FastCGI daemon like this::"
msgstr ""

# cee8c420d8ff4e48b46db038b17c9cbe
#: ../../howto/deployment/fastcgi.txt:141
msgid "...where ``$PIDFILE`` is the ``pidfile`` you specified."
msgstr ""

# b8aafeb45cfa41a3bdb8848304c2d653
#: ../../howto/deployment/fastcgi.txt:143
msgid ""
"To easily restart your FastCGI daemon on Unix, try this small shell script::"
msgstr ""

# 952a481db87a4f9badaed9386d7ebfa8
#: ../../howto/deployment/fastcgi.txt:163
msgid "Apache setup"
msgstr ""

# da5cf9c4b64f4cc09058074432e0948d
#: ../../howto/deployment/fastcgi.txt:165
msgid ""
"To use Django with Apache and FastCGI, you'll need Apache installed and "
"configured, with `mod_fastcgi`_ installed and enabled. Consult the Apache "
"documentation for instructions."
msgstr ""

# 41fced6dbd284df88606ce1ba3f3c9bc
#: ../../howto/deployment/fastcgi.txt:169
msgid ""
"Once you've got that set up, point Apache at your Django FastCGI instance by "
"editing the ``httpd.conf`` (Apache configuration) file. You'll need to do "
"two things:"
msgstr ""

# 9ca94eae2c1a464db0be773768e95ff7
#: ../../howto/deployment/fastcgi.txt:173
msgid ""
"Use the ``FastCGIExternalServer`` directive to specify the location of your "
"FastCGI server."
msgstr ""

# 1f7a763322144a4fb67bfa63adb752a8
#: ../../howto/deployment/fastcgi.txt:175
msgid "Use ``mod_rewrite`` to point URLs at FastCGI as appropriate."
msgstr ""

# f50e7e7999164957b58fcc2387e36b3c
#: ../../howto/deployment/fastcgi.txt:180
msgid "Specifying the location of the FastCGI server"
msgstr ""

# fc16e58f10f3484fbc7fd195755a34f0
#: ../../howto/deployment/fastcgi.txt:182
msgid ""
"The ``FastCGIExternalServer`` directive tells Apache how to find your "
"FastCGI server. As the `FastCGIExternalServer docs`_ explain, you can "
"specify either a ``socket`` or a ``host``. Here are examples of both:"
msgstr ""

# 5fbcdc982d074b36827c3d7936272099
#: ../../howto/deployment/fastcgi.txt:194
msgid ""
"In either case, the file ``/home/user/public_html/mysite.fcgi`` doesn't "
"actually have to exist. It's just a URL used by the Web server internally -- "
"a hook for signifying which requests at a URL should be handled by FastCGI. "
"(More on this in the next section.)"
msgstr ""

# 46338ab77e2148458aaa9e1dd4f34151
#: ../../howto/deployment/fastcgi.txt:202
msgid "Using mod_rewrite to point URLs at FastCGI"
msgstr ""

# 25f2f1832ffc4225b15c1621b7193b44
#: ../../howto/deployment/fastcgi.txt:204
msgid ""
"The second step is telling Apache to use FastCGI for URLs that match a "
"certain pattern. To do this, use the `mod_rewrite`_ module and rewrite URLs "
"to ``mysite.fcgi`` (or whatever you specified in the "
"``FastCGIExternalServer`` directive, as explained in the previous section)."
msgstr ""

# 5f4110f5dfa94c4fa5ee0bbe64937d56
#: ../../howto/deployment/fastcgi.txt:209
msgid ""
"In this example, we tell Apache to use FastCGI to handle any request that "
"doesn't represent a file on the filesystem and doesn't start with ``/media/"
"``. This is probably the most common case, if you're using Django's admin "
"site:"
msgstr ""

# 52ad5b49a0e44751b6f129b715b4025b
#: ../../howto/deployment/fastcgi.txt:227
msgid ""
"Django will automatically use the pre-rewrite version of the URL when "
"constructing URLs with the :ttag:`{% url %}<url>` template tag (and similar "
"methods)."
msgstr ""

# 4f60048818db481299df574e5df5dc5b
#: ../../howto/deployment/fastcgi.txt:232
msgid "Using mod_fcgid as alternative to mod_fastcgi"
msgstr ""

# 882cf446df0c4057b71bcb6bc60ec20c
#: ../../howto/deployment/fastcgi.txt:234
msgid ""
"Another way to serve applications through FastCGI is by using Apache's "
"`mod_fcgid`_ module. Compared to mod_fastcgi mod_fcgid handles FastCGI "
"applications differently in that it manages the spawning of worker processes "
"by itself and doesn't offer something like ``FastCGIExternalServer``. This "
"means that the configuration looks slightly different."
msgstr ""

# 4cf4a2ace8594afb975424de2fbd56d1
#: ../../howto/deployment/fastcgi.txt:240
msgid ""
"In effect, you have to go the way of adding a script handler similar to what "
"is described later on regarding running Django in a :ref:`shared-hosting "
"environment <apache_shared_hosting>`. For further details please refer to "
"the `mod_fcgid reference`_"
msgstr ""

# ae66f850c0db461e96ecff265d24ceb8
#: ../../howto/deployment/fastcgi.txt:249
msgid "lighttpd setup"
msgstr ""

# c789fe25794746dc865014475b75bbf6
#: ../../howto/deployment/fastcgi.txt:251
msgid ""
"lighttpd_ is a lightweight Web server commonly used for serving static "
"files. It supports FastCGI natively and, thus, is a good choice for serving "
"both static and dynamic pages, if your site doesn't have any Apache-specific "
"needs."
msgstr ""

# 7e9caf7654f9440ea1d8fabbfdb38de9
#: ../../howto/deployment/fastcgi.txt:257
msgid ""
"Make sure ``mod_fastcgi`` is in your modules list, somewhere after "
"``mod_rewrite`` and ``mod_access``, but not after ``mod_accesslog``. You'll "
"probably want ``mod_alias`` as well, for serving admin media."
msgstr ""

# a5034e3fff2a4a7ba1a58c217d3578ea
#: ../../howto/deployment/fastcgi.txt:261
msgid "Add the following to your lighttpd config file:"
msgstr ""

# 993b704f187043979411d1a355b63d74
#: ../../howto/deployment/fastcgi.txt:288
msgid "Running multiple Django sites on one lighttpd"
msgstr ""

# 0e8a06b750c847e3b79cbf1af6ddf12f
#: ../../howto/deployment/fastcgi.txt:290
msgid ""
"lighttpd lets you use \"conditional configuration\" to allow configuration "
"to be customized per host. To specify multiple FastCGI sites, just add a "
"conditional block around your FastCGI config for each site::"
msgstr ""

# 7c0a4e3fd3154cd68b2dabf6ee5b89ea
#: ../../howto/deployment/fastcgi.txt:312
msgid ""
"You can also run multiple Django installations on the same site simply by "
"specifying multiple entries in the ``fastcgi.server`` directive. Add one "
"FastCGI host for each."
msgstr ""

# 976aabb9696e4b9db61431106d3276d9
#: ../../howto/deployment/fastcgi.txt:317
msgid "Cherokee setup"
msgstr ""

# aed496d926eb41f1826ef2068ac4c0c5
#: ../../howto/deployment/fastcgi.txt:319
msgid ""
"Cherokee is a very fast, flexible and easy to configure Web Server. It "
"supports the widespread technologies nowadays: FastCGI, SCGI, PHP, CGI, SSI, "
"TLS and SSL encrypted connections, Virtual hosts, Authentication, on the fly "
"encoding, Load Balancing, Apache compatible log files, Data Base Balancer, "
"Reverse HTTP Proxy and much more."
msgstr ""

# c73fac179b1c409eaed887f856c09390
#: ../../howto/deployment/fastcgi.txt:325
msgid ""
"The Cherokee project provides a documentation to `setting up Django`_ with "
"Cherokee."
msgstr ""

# eeb4b82e327b4712b305b13ab7f6cb8b
#: ../../howto/deployment/fastcgi.txt:332
msgid "Running Django on a shared-hosting provider with Apache"
msgstr ""

# 0f71bca9f0ed45538442b5d0a2818298
#: ../../howto/deployment/fastcgi.txt:334
msgid ""
"Many shared-hosting providers don't allow you to run your own server daemons "
"or edit the ``httpd.conf`` file. In these cases, it's still possible to run "
"Django using Web server-spawned processes."
msgstr ""

# af1bfa2e385242f2a524b8330014cce1
#: ../../howto/deployment/fastcgi.txt:340
msgid ""
"If you're using Web server-spawned processes, as explained in this section, "
"there's no need for you to start the FastCGI server on your own. Apache will "
"spawn a number of processes, scaling as it needs to."
msgstr ""

# 1896a07f7e504e829fc7d294cf20334c
#: ../../howto/deployment/fastcgi.txt:344
msgid "In your Web root directory, add this to a file named ``.htaccess``:"
msgstr ""

# 6d86fc1aaa1b4689b12da2f63f724e19
#: ../../howto/deployment/fastcgi.txt:353
msgid ""
"Then, create a small script that tells Apache how to spawn your FastCGI "
"program. Create a file ``mysite.fcgi`` and place it in your Web directory, "
"and be sure to make it executable:"
msgstr ""

# 7c5e49bf74cb437494681e404e327ae6
#: ../../howto/deployment/fastcgi.txt:374
msgid ""
"This works if your server uses mod_fastcgi. If, on the other hand, you are "
"using mod_fcgid the setup is mostly the same except for a slight change in "
"the ``.htaccess`` file. Instead of adding a fastcgi-script handler, you have "
"to add a fcgid-handler:"
msgstr ""

# 955af7cb6fc5437f902c1314b1f8f9a6
#: ../../howto/deployment/fastcgi.txt:387
msgid "Restarting the spawned server"
msgstr ""

# 29a3509c4060492693e044d96d753919
#: ../../howto/deployment/fastcgi.txt:389
msgid ""
"If you change any Python code on your site, you'll need to tell FastCGI the "
"code has changed. But there's no need to restart Apache in this case. "
"Rather, just reupload ``mysite.fcgi``, or edit the file, so that the "
"timestamp on the file will change. When Apache sees the file has been "
"updated, it will restart your Django application for you."
msgstr ""

# 2152d8bd529d43cab5c2cf049779ba2e
#: ../../howto/deployment/fastcgi.txt:395
msgid ""
"If you have access to a command shell on a Unix system, you can accomplish "
"this easily by using the ``touch`` command::"
msgstr ""

# 68de8e804b524edcbcd700e79c5afe33
#: ../../howto/deployment/fastcgi.txt:401
msgid "Serving admin media files"
msgstr ""

# f992a4e0c30f4708ac44de8dddbd7e59
#: ../../howto/deployment/fastcgi.txt:403
msgid ""
"Regardless of the server and configuration you eventually decide to use, you "
"will also need to give some thought to how to serve the admin media files. "
"The advice given in the :ref:`mod_wsgi <serving-the-admin-files>` "
"documentation is also applicable in the setups detailed above."
msgstr ""

# 1d1f4763cd0348c3a4c2671933134682
#: ../../howto/deployment/fastcgi.txt:409
msgid "Forcing the URL prefix to a particular value"
msgstr ""

# a7fd9d42aba34cdf917617c8e751a689
#: ../../howto/deployment/fastcgi.txt:411
msgid ""
"Because many of these fastcgi-based solutions require rewriting the URL at "
"some point inside the Web server, the path information that Django sees may "
"not resemble the original URL that was passed in. This is a problem if the "
"Django application is being served from under a particular prefix and you "
"want your URLs from the :ttag:`{% url %}<url>` tag to look like the prefix, "
"rather than the rewritten version, which might contain, for example, "
"``mysite.fcgi``."
msgstr ""

# 15ab7af141c94a20919e430f6c43d379
#: ../../howto/deployment/fastcgi.txt:418
msgid ""
"Django makes a good attempt to work out what the real script name prefix "
"should be. In particular, if the Web server sets the ``SCRIPT_URL`` "
"(specific to Apache's mod_rewrite), or ``REDIRECT_URL`` (set by a few "
"servers, including Apache + mod_rewrite in some situations), Django will "
"work out the original prefix automatically."
msgstr ""

# 8521459e3c1841faa480bc65483bedf3
#: ../../howto/deployment/fastcgi.txt:424
msgid ""
"In the cases where Django cannot work out the prefix correctly and where you "
"want the original value to be used in URLs, you can set the :setting:"
"`FORCE_SCRIPT_NAME` setting in your main ``settings`` file. This sets the "
"script name uniformly for every URL served via that settings file. Thus "
"you'll need to use different settings files if you want different sets of "
"URLs to have different script names in this case, but that is a rare "
"situation."
msgstr ""

# a210d67788ee469ba8fb609546a8aee6
#: ../../howto/deployment/fastcgi.txt:431
msgid ""
"As an example of how to use it, if your Django configuration is serving all "
"of the URLs under ``'/'`` and you wanted to use this setting, you would set "
"``FORCE_SCRIPT_NAME = ''`` in your settings file."
msgstr ""
