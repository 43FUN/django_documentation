# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-02-29 18:30\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# f2185c832d0840d486a5ad9a68314df2
#: ../../howto/deployment/modpython.txt:3
msgid "How to use Django with Apache and mod_python"
msgstr ""

# 2331ca776d944df19de940e73fd80384
#: ../../howto/deployment/modpython.txt:7
msgid ""
"Support for mod_python has been deprecated, and will be removed in Django "
"1.5. If you are configuring a new deployment, you are strongly encouraged to "
"consider using :doc:`mod_wsgi </howto/deployment/wsgi/modwsgi>` or any of "
"the other :doc:`supported servers </howto/deployment/index>`."
msgstr ""

# 6109625ccfcf494b9fab23ddb43173cd
#: ../../howto/deployment/modpython.txt:15
msgid ""
"The `mod_python`_ module for Apache_ can be used to deploy Django to a "
"production server, although it has been mostly superseded by the simpler :"
"doc:`mod_wsgi deployment option </howto/deployment/wsgi/modwsgi>`."
msgstr ""

# 92bfb04ca0d3472e92d2559b88e17ac1
#: ../../howto/deployment/modpython.txt:19
msgid ""
"mod_python is similar to (and inspired by) `mod_perl`_ : It embeds Python "
"within Apache and loads Python code into memory when the server starts. Code "
"stays in memory throughout the life of an Apache process, which leads to "
"significant performance gains over other server arrangements."
msgstr ""

# 539db9671e5645328cd8f918249f1d5c
#: ../../howto/deployment/modpython.txt:24
msgid ""
"Django requires Apache 2.x and mod_python 3.x, and you should use Apache's "
"`prefork MPM`_, as opposed to the `worker MPM`_."
msgstr ""

# 2519b0e84fac4393ac7bc100e3e952cb
#: ../../howto/deployment/modpython.txt:29
msgid ""
"Apache is a big, complex animal, and this document only scratches the "
"surface of what Apache can do. If you need more advanced information about "
"Apache, there's no better source than `Apache's own official documentation`_"
msgstr ""

# 7a49fc6957cb4d0e94b78878abc25bdd
#: ../../howto/deployment/modpython.txt:34
msgid ""
"You may also be interested in :doc:`How to use Django with FastCGI, SCGI, or "
"AJP </howto/deployment/fastcgi>`."
msgstr ""

# 0b06d8bc94ca461fbd9177d994e913d4
#: ../../howto/deployment/modpython.txt:45
msgid "Basic configuration"
msgstr ""

# ce8df22fb93b4971be955fa1e5574205
#: ../../howto/deployment/modpython.txt:47
msgid ""
"To configure Django with mod_python, first make sure you have Apache "
"installed, with the mod_python module activated."
msgstr ""

# 580dcc15f2354f28a09243016b1505e1
#: ../../howto/deployment/modpython.txt:50
msgid "Then edit your ``httpd.conf`` file and add the following::"
msgstr ""

# 0798094ce1c64054b48818e5000682bd
#: ../../howto/deployment/modpython.txt:60
msgid ""
"...and replace ``mysite.settings`` with the Python import path to your "
"Django project's settings file."
msgstr ""

# cb0329ed444a499abe30a77747786457
#: ../../howto/deployment/modpython.txt:63
msgid ""
"This tells Apache: \"Use mod_python for any URL at or under '/mysite/', "
"using the Django mod_python handler.\" It passes the value of :ref:"
"`DJANGO_SETTINGS_MODULE <django-settings-module>` so mod_python knows which "
"settings to use."
msgstr ""

# cbefa2580c9c444e807caf21c5c05553
#: ../../howto/deployment/modpython.txt:67
msgid ""
"Because mod_python does not know we are serving this site from underneath "
"the ``/mysite/`` prefix, this value needs to be passed through to the "
"mod_python handler in Django, via the ``PythonOption django.root ...`` line. "
"The value set on that line (the last item) should match the string given in "
"the ``<Location ...>`` directive. The effect of this is that Django will "
"automatically strip the ``/mysite`` string from the front of any URLs before "
"matching them against your URLconf patterns. If you later move your site to "
"live under ``/mysite2``, you will not have to change anything except the "
"``django.root`` option in the config file."
msgstr ""

# dfea1d2342f04e82a75cfdbab67dcf19
#: ../../howto/deployment/modpython.txt:77
msgid ""
"When using ``django.root`` you should make sure that what's left, after the "
"prefix has been removed, begins with a slash. Your URLconf patterns that are "
"expecting an initial slash will then work correctly. In the above example, "
"since we want to send things like ``/mysite/admin/`` to ``/admin/``, we need "
"to remove the string ``/mysite`` from the beginning, so that is the ``django."
"root`` value. It would be an error to use ``/mysite/`` (with a trailing "
"slash) in this case."
msgstr ""

# e8b03b6376a4454c9b08693a34a98598
#: ../../howto/deployment/modpython.txt:85
msgid ""
"Note that we're using the ``<Location>`` directive, not the ``<Directory>`` "
"directive. The latter is used for pointing at places on your filesystem, "
"whereas ``<Location>`` points at places in the URL structure of a Web site. "
"``<Directory>`` would be meaningless here."
msgstr ""

# 8b520d923498465f99ea4b75d2096f53
#: ../../howto/deployment/modpython.txt:90
msgid ""
"Also, if your Django project is not on the default ``PYTHONPATH`` for your "
"computer, you'll have to tell mod_python where your project can be found:"
msgstr ""

# 14d0fe87dfd443fbaff639c9bfae99cd
#: ../../howto/deployment/modpython.txt:104
msgid ""
"The value you use for ``PythonPath`` should include the parent directories "
"of all the modules you are going to import in your application. It should "
"also include the parent directory of the :ref:`DJANGO_SETTINGS_MODULE "
"<django-settings-module>` location. This is exactly the same situation as "
"setting the Python path for interactive usage. Whenever you try to import "
"something, Python will run through all the directories in ``sys.path`` in "
"turn, from first to last, and try to import from each directory until one "
"succeeds."
msgstr ""

# 4283cee86a744d11aeba5d2562469c50
#: ../../howto/deployment/modpython.txt:112
msgid ""
"Make sure that your Python source files' permissions are set such that the "
"Apache user (usually named ``apache`` or ``httpd`` on most systems) will "
"have read access to the files."
msgstr ""

# 7b5b7e23e46b4bd4b3c202c831b5272e
#: ../../howto/deployment/modpython.txt:116
msgid ""
"An example might make this clearer. Suppose you have some applications under "
"``/usr/local/django-apps/`` (for example, ``/usr/local/django-apps/weblog/`` "
"and so forth), your settings file is at ``/var/www/mysite/settings.py`` and "
"you have specified :ref:`DJANGO_SETTINGS_MODULE <django-settings-module>` as "
"in the above example. In this case, you would need to write your "
"``PythonPath`` directive as::"
msgstr ""

# 8f5e2f8579b945ba93e19f303e56ffc9
#: ../../howto/deployment/modpython.txt:125
msgid ""
"With this path, ``import weblog`` and ``import mysite.settings`` will both "
"work. If you had ``import blogroll`` in your code somewhere and ``blogroll`` "
"lived under the ``weblog/`` directory, you would *also* need to add ``/usr/"
"local/django-apps/weblog/`` to your ``PythonPath``. Remember: the **parent "
"directories** of anything you import directly must be on the Python path."
msgstr ""

# 89a48b2933e542cfb6784c3316191b09
#: ../../howto/deployment/modpython.txt:134
msgid ""
"If you're using Windows, we still recommended that you use forward slashes "
"in the pathnames, even though Windows normally uses the backslash character "
"as its native separator. Apache knows how to convert from the forward slash "
"format to the native format, so this approach is portable and easier to "
"read. (It avoids tricky problems with having to double-escape backslashes.)"
msgstr ""

# fc77678cf7fc4044a92827515c80cabe
#: ../../howto/deployment/modpython.txt:141
msgid "This is valid even on a Windows system::"
msgstr ""

# 3ad2e94248784538a7f5e098021e6952
#: ../../howto/deployment/modpython.txt:145
msgid ""
"You can also add directives such as ``PythonAutoReload Off`` for "
"performance. See the `mod_python documentation`_ for a full list of options."
msgstr ""

# ecc69fa1f9c74a928022a8cc51d63d4c
#: ../../howto/deployment/modpython.txt:148
msgid ""
"Note that you should set ``PythonDebug Off`` on a production server. If you "
"leave ``PythonDebug On``, your users would see ugly (and revealing) Python "
"tracebacks if something goes wrong within mod_python."
msgstr ""

# 4de07d4dbc644870a145221550f5a666
#: ../../howto/deployment/modpython.txt:152
msgid ""
"Restart Apache, and any request to ``/mysite/`` or below will be served by "
"Django. Note that Django's URLconfs won't trim the \"/mysite/\" -- they get "
"passed the full URL."
msgstr ""

# 01fa096881ed4d67aef23ddaec300ab0
#: ../../howto/deployment/modpython.txt:156
msgid ""
"When deploying Django sites on mod_python, you'll need to restart Apache "
"each time you make changes to your Python code."
msgstr ""

# 53434f61f2fe4279a9346ae45721563d
#: ../../howto/deployment/modpython.txt:162
msgid "Multiple Django installations on the same Apache"
msgstr ""

# 23a91ca3afd346fe9eaca72716ab0eef
#: ../../howto/deployment/modpython.txt:164
msgid ""
"It's entirely possible to run multiple Django installations on the same "
"Apache instance. Just use ``VirtualHost`` for that, like so::"
msgstr ""

# 8b5bd5a0c8f244b3994283b4c9f2bca9
#: ../../howto/deployment/modpython.txt:181
msgid ""
"If you need to put two Django installations within the same ``VirtualHost`` "
"(or in different ``VirtualHost`` blocks that share the same server name), "
"you'll need to take a special precaution to ensure mod_python's cache "
"doesn't mess things up. Use the ``PythonInterpreter`` directive to give "
"different ``<Location>`` directives separate interpreters::"
msgstr ""

# 55ede5413dcc41dcb5965c42acae9cce
#: ../../howto/deployment/modpython.txt:201
msgid ""
"The values of ``PythonInterpreter`` don't really matter, as long as they're "
"different between the two ``Location`` blocks."
msgstr ""

# 24cfbfcc5137406a8c3c54b7cc01f5e3
#: ../../howto/deployment/modpython.txt:205
msgid "Running a development server with mod_python"
msgstr ""

# 22a34be4a0af4880924a06f9fe1ad39e
#: ../../howto/deployment/modpython.txt:207
msgid ""
"If you use mod_python for your development server, you can avoid the hassle "
"of having to restart the server each time you make code changes. Just set "
"``MaxRequestsPerChild 1`` in your ``httpd.conf`` file to force Apache to "
"reload everything for each request. But don't do that on a production "
"server, or we'll revoke your Django privileges."
msgstr ""

# 35b3dd476c9a4e55ad0b991734b889fa
#: ../../howto/deployment/modpython.txt:213
msgid ""
"If you're the type of programmer who debugs using scattered ``print`` "
"statements, note that output to ``stdout`` will not appear in the Apache log "
"and can even `cause response errors`_."
msgstr ""

# 9d06e59533624a73bfc1070aece4d537
#: ../../howto/deployment/modpython.txt:219
msgid ""
"If you have the need to print debugging information in a mod_python setup, "
"you have a few options. You can print to ``stderr`` explicitly, like so::"
msgstr ""

# 0a43bd3900eb4e77b43c29d801a6d197
#: ../../howto/deployment/modpython.txt:225
msgid ""
"(note that ``stderr`` is buffered, so calling ``flush`` is necessary if you "
"wish debugging information to be displayed promptly.)"
msgstr ""

# f17b815196164366b1991444018bfe58
#: ../../howto/deployment/modpython.txt:228
msgid "A more compact approach is to use an assertion::"
msgstr ""

# 8c8bffae79f44babac861a005738f795
#: ../../howto/deployment/modpython.txt:232
msgid ""
"Another alternative is to add debugging information to the template of your "
"page."
msgstr ""

# c27d817a94c848cab66561de8b6d4a4c
#: ../../howto/deployment/modpython.txt:235
msgid "Serving media files"
msgstr ""

# e29f34bf0f0e422bbf90daed61ab260b
#: ../../howto/deployment/modpython.txt:237
msgid ""
"Django doesn't serve media files itself; it leaves that job to whichever Web "
"server you choose."
msgstr ""

# 3f9d36b680974545b6f26266e9ea5e0c
#: ../../howto/deployment/modpython.txt:240
msgid ""
"We recommend using a separate Web server -- i.e., one that's not also "
"running Django -- for serving media. Here are some good choices:"
msgstr ""

# 12d41a8eeaba441e894d8ad91bce5274
#: ../../howto/deployment/modpython.txt:243
msgid "lighttpd_"
msgstr ""

# 3e6651dc7e3f4da7a89f1141ed459552
#: ../../howto/deployment/modpython.txt:244
msgid "Nginx_"
msgstr ""

# 7100a2e74f0c4a96953ce845c813ff20
#: ../../howto/deployment/modpython.txt:245
msgid "TUX_"
msgstr ""

# f8a43d3921b846e2b2d5e70d3622697b
#: ../../howto/deployment/modpython.txt:246
msgid "A stripped-down version of Apache_"
msgstr ""

# 8322a9bb2fb047cd8aa1c1e9e3d4c0f9
#: ../../howto/deployment/modpython.txt:247
msgid "Cherokee_"
msgstr ""

# b4ca7eee02d54e7a95f0efef09c221ce
#: ../../howto/deployment/modpython.txt:249
msgid ""
"If, however, you have no option but to serve media or static files on the "
"same Apache ``VirtualHost`` as Django, here's how you can turn off "
"mod_python for a particular part of the site::"
msgstr ""

# 6a1be5736a654053b67905f4334a42b2
#: ../../howto/deployment/modpython.txt:257
msgid ""
"Just change ``Location`` to the root URL of your media files. You can also "
"use ``<LocationMatch>`` to match a regular expression."
msgstr ""

# aa85651ecfb545aeb2cd3faa0cecef11
#: ../../howto/deployment/modpython.txt:260
msgid ""
"This example sets up Django at the site root but explicitly disables Django "
"for the ``media`` and ``static`` subdirectories and any URL that ends with "
"``.jpg``, ``.gif`` or ``.png``::"
msgstr ""

# c68ee85f02a04110b9cccdf933a91ec4
#: ../../howto/deployment/modpython.txt:289
msgid "Serving the admin files"
msgstr ""

# 3a481bc6c8e341f1b2cd0633a328a17c
#: ../../howto/deployment/modpython.txt:291
msgid ""
"Note that the Django development server automagically serves the static "
"files of the admin app, but this is not the case when you use any other "
"server arrangement. You're responsible for setting up Apache, or whichever "
"media server you're using, to serve the admin files."
msgstr ""

# 99ca4238b23149d693407981a4c59daa
#: ../../howto/deployment/modpython.txt:296
msgid ""
"The admin files live in (:file:`django/contrib/admin/static/admin`) of the "
"Django distribution."
msgstr ""

# e52f561ce21e43db92f806b775979a48
#: ../../howto/deployment/modpython.txt:299
msgid ""
"We **strongly** recommend using :mod:`django.contrib.staticfiles` to handle "
"the admin files (this means using the :djadmin:`collectstatic` management "
"command to collect the static files in :setting:`STATIC_ROOT`, and then "
"configuring your Web server to serve :setting:`STATIC_ROOT` at :setting:"
"`STATIC_URL`), but here are two other approaches:"
msgstr ""

# 555b7ce1e44947cd9dc5357e3de6774d
#: ../../howto/deployment/modpython.txt:305
msgid ""
"Create a symbolic link to the admin static files from within your document "
"root."
msgstr ""

# dc3dd210e7934b348de5e37b8a6bcef5
#: ../../howto/deployment/modpython.txt:308
msgid ""
"Or, copy the admin static files so that they live within your Apache "
"document root."
msgstr ""

# 4f499203d1084434afda31194761e4bb
#: ../../howto/deployment/modpython.txt:312
msgid "Using \"eggs\" with mod_python"
msgstr ""

# c47b69097c6442d599f3e264fdb87f65
#: ../../howto/deployment/modpython.txt:314
msgid ""
"If you installed Django from a Python egg_ or are using eggs in your Django "
"project, some extra configuration is required. Create an extra file in your "
"project (or somewhere else) that contains something like the following:"
msgstr ""

# 7d1639de348c4cda8b510303bd7c64fe
#: ../../howto/deployment/modpython.txt:323
msgid ""
"Here, ``/some/directory`` is a directory that the Apache Web server process "
"can write to. It will be used as the location for any unpacking of code the "
"eggs need to do."
msgstr ""

# 1b2acf0dd5cc481cb1ac4af4f582f66a
#: ../../howto/deployment/modpython.txt:327
msgid ""
"Then you have to tell mod_python to import this file before doing anything "
"else. This is done using the PythonImport_ directive to mod_python. You need "
"to ensure that you have specified the ``PythonInterpreter`` directive to "
"mod_python as described above__ (you need to do this even if you aren't "
"serving multiple installations in this case). Then add the ``PythonImport`` "
"line in the main server configuration (i.e., outside the ``Location`` or "
"``VirtualHost`` sections). For example::"
msgstr ""

# a88451978902495981b8cff04e502434
#: ../../howto/deployment/modpython.txt:338
msgid ""
"Note that you can use an absolute path here (or a normal dotted import "
"path), as described in the `mod_python manual`_. We use an absolute path in "
"the above example because if any Python path modifications are required to "
"access your project, they will not have been done at the time the "
"``PythonImport`` line is processed."
msgstr ""

# 55fbd96977014ea2995ec8176a579782
#: ../../howto/deployment/modpython.txt:350
msgid "Error handling"
msgstr ""

# 974278c72c444b5c8d80683206c0aaad
#: ../../howto/deployment/modpython.txt:352
msgid ""
"When you use Apache/mod_python, errors will be caught by Django -- in other "
"words, they won't propagate to the Apache level and won't appear in the "
"Apache ``error_log``."
msgstr ""

# 12ad6ed960f6469ca85c628627e06caa
#: ../../howto/deployment/modpython.txt:356
msgid ""
"The exception for this is if something is really wonky in your Django setup. "
"In that case, you'll see an \"Internal Server Error\" page in your browser "
"and the full Python traceback in your Apache ``error_log`` file. The "
"``error_log`` traceback is spread over multiple lines. (Yes, this is ugly "
"and rather hard to read, but it's how mod_python does things.)"
msgstr ""

# 959823abeb3141b8a59b02d5ec2317db
#: ../../howto/deployment/modpython.txt:363
msgid "If you get a segmentation fault"
msgstr ""

# 0cf290f00b6f49c5a0b45c46e35933a4
#: ../../howto/deployment/modpython.txt:365
msgid ""
"If Apache causes a segmentation fault, there are two probable causes, "
"neither of which has to do with Django itself."
msgstr ""

# fc929b227ff04e62bc041154e1d3195b
#: ../../howto/deployment/modpython.txt:368
msgid ""
"It may be because your Python code is importing the \"pyexpat\" module, "
"which may conflict with the version embedded in Apache. For full "
"information, see `Expat Causing Apache Crash`_."
msgstr ""

# 0327c62ab8394118896e8771dc56581f
#: ../../howto/deployment/modpython.txt:372
msgid ""
"It may be because you're running mod_python and mod_php in the same Apache "
"instance, with MySQL as your database backend. In some cases, this causes a "
"known mod_python issue due to version conflicts in PHP and the Python MySQL "
"backend. There's full information in the `mod_python FAQ entry`_."
msgstr ""

# 220512e8e7704f538867af5a5c0662c3
#: ../../howto/deployment/modpython.txt:378
msgid ""
"If you continue to have problems setting up mod_python, a good thing to do "
"is get a barebones mod_python site working, without the Django framework. "
"This is an easy way to isolate mod_python-specific problems. `Getting "
"mod_python Working`_ details this procedure."
msgstr ""

# d9a7c26869ec4311b626134d558c1f43
#: ../../howto/deployment/modpython.txt:383
msgid ""
"The next step should be to edit your test code and add an import of any "
"Django-specific code you're using -- your views, your models, your URLconf, "
"your RSS configuration, etc. Put these imports in your test handler function "
"and access your test URL in a browser. If this causes a crash, you've "
"confirmed it's the importing of Django code that causes the problem. "
"Gradually reduce the set of imports until it stops crashing, so as to find "
"the specific module that causes the problem. Drop down further into modules "
"and look into their imports, as necessary."
msgstr ""

# d811c44a377448b9993f732a2ef0acb7
#: ../../howto/deployment/modpython.txt:397
msgid "If you get a UnicodeEncodeError"
msgstr ""

# 9421b2f375ad43ef85b50f3b7c31c4e9
#: ../../howto/deployment/modpython.txt:399
msgid ""
"If you're taking advantage of the internationalization features of Django "
"(see :doc:`/topics/i18n/index`) and you intend to allow users to upload "
"files, you must ensure that the environment used to start Apache is "
"configured to accept non-ASCII file names. If your environment is not "
"correctly configured, you will trigger ``UnicodeEncodeError`` exceptions "
"when calling functions like ``os.path()`` on filenames that contain non-"
"ASCII characters."
msgstr ""

# 2ab993750398412abf21404a9f626239
#: ../../howto/deployment/modpython.txt:406
msgid ""
"To avoid these problems, the environment used to start Apache should contain "
"settings analogous to the following::"
msgstr ""

# c5bf48c76dc1470a83bce5463b3eb710
#: ../../howto/deployment/modpython.txt:412
msgid ""
"Consult the documentation for your operating system for the appropriate "
"syntax and location to put these configuration items; ``/etc/apache2/"
"envvars`` is a common location on Unix platforms. Once you have added these "
"statements to your environment, restart Apache."
msgstr ""
