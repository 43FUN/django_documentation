# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-27 00:21\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 5cf0ad3427524e579b257e9d6cef1a1c
#: ../../howto/deployment/wsgi/modwsgi.txt:3
msgid "How to use Django with Apache and mod_wsgi"
msgstr ""

# fd588e2ceb3e41ad80ca6e6c0dffc8df
#: ../../howto/deployment/wsgi/modwsgi.txt:5
msgid ""
"Deploying Django with Apache_ and `mod_wsgi`_ is a tried and tested way to "
"get Django into production."
msgstr ""

# 3c1f494c66974809aa4d76df376d2ab6
#: ../../howto/deployment/wsgi/modwsgi.txt:11
msgid ""
"mod_wsgi is an Apache module which can host any Python WSGI_ application, "
"including Django. Django will work with any version of Apache which supports "
"mod_wsgi."
msgstr ""

# 14551f85df6544aa9cba5ee475e71950
#: ../../howto/deployment/wsgi/modwsgi.txt:17
msgid ""
"The `official mod_wsgi documentation`_ is fantastic; it's your source for "
"all the details about how to use mod_wsgi. You'll probably want to start "
"with the `installation and configuration documentation`_."
msgstr ""

# 15f16acc7cf0483ca8d458025ef3afad
#: ../../howto/deployment/wsgi/modwsgi.txt:25
msgid "Basic configuration"
msgstr ""

# 3d3241a363bd4907a765f6f649f49140
#: ../../howto/deployment/wsgi/modwsgi.txt:27
msgid ""
"Once you've got mod_wsgi installed and activated, edit your Apache server's "
"``httpd.conf`` file and add"
msgstr ""

# d865e1b416404657aba06cc0ccfb3b6e
#: ../../howto/deployment/wsgi/modwsgi.txt:42
msgid ""
"The first bit in the ``WSGIScriptAlias`` line is the base URL path you want "
"to serve your application at (``/`` indicates the root url), and the second "
"is the location of a \"WSGI file\" -- see below -- on your system, usually "
"inside of your project package (``mysite`` in this example). This tells "
"Apache to serve any request below the given URL using the WSGI application "
"defined in that file."
msgstr ""

# 67c45d70148c48129e68fa4b28a72100
#: ../../howto/deployment/wsgi/modwsgi.txt:49
msgid ""
"The ``WSGIPythonPath`` line ensures that your project package is available "
"for import on the Python path; in other words, that ``import mysite`` works."
msgstr ""

# 42d51bc9ab65460c80803ec674802df6
#: ../../howto/deployment/wsgi/modwsgi.txt:52
msgid ""
"The ``<Directory>`` piece just ensures that Apache can access your :file:"
"`wsgi.py` file."
msgstr ""

# f21fbac8bca74db589950f760f5776a7
#: ../../howto/deployment/wsgi/modwsgi.txt:55
msgid ""
"Next we'll need to ensure this :file:`wsgi.py` with a WSGI application "
"object exists. As of Django version 1.4, :djadmin:`startproject` will have "
"created one for you; otherwise, you'll need to create it. See the :doc:`WSGI "
"overview documentation</howto/deployment/wsgi/index>` for the default "
"contents you should put in this file, and what else you can add to it."
msgstr ""

# ce6f442bec8849d094d881b3e990ca34
#: ../../howto/deployment/wsgi/modwsgi.txt:63
msgid ""
"If multiple Django sites are run in a single mod_wsgi process, all of them "
"will use the settings of whichever one happens to run first. This can be "
"solved with a minor edit to ``wsgi.py`` (see comment in the file for "
"details), or by :ref:`using mod_wsgi daemon mode<daemon-mode>` and ensuring "
"that each site runs in its own daemon process."
msgstr ""

# 76ed30d6ece94aecb6ba32b64b3976e4
#: ../../howto/deployment/wsgi/modwsgi.txt:71
msgid "Using a virtualenv"
msgstr ""

# ae59a117f09d4a2d9309a828f99dd06f
#: ../../howto/deployment/wsgi/modwsgi.txt:73
msgid ""
"If you install your project's Python dependencies inside a `virtualenv`_, "
"you'll need to add the path to this virtualenv's ``site-packages`` directory "
"to your Python path as well. To do this, add an additional path to your "
"`WSGIPythonPath` directive, with multiple paths separated by a colon::"
msgstr ""

# 5a3def3d738d4169b654d2ec78f99d87
#: ../../howto/deployment/wsgi/modwsgi.txt:80
msgid ""
"Make sure you give the correct path to your virtualenv, and replace "
"``python2.X`` with the correct Python version (e.g. ``python2.7``)."
msgstr ""

# 91c61077e72744ada9d373deca273473
#: ../../howto/deployment/wsgi/modwsgi.txt:88
msgid "Using mod_wsgi daemon mode"
msgstr ""

# 6ce752b518dc4f239d406d084a722f26
#: ../../howto/deployment/wsgi/modwsgi.txt:90
msgid ""
"\"Daemon mode\" is the recommended mode for running mod_wsgi (on non-Windows "
"platforms). To create the required daemon process group and delegate the "
"Django instance to run in it, you will need to add appropriate "
"``WSGIDaemonProcess`` and ``WSGIProcessGroup`` directives. A further change "
"required to the above configuration if you use daemon mode is that you can't "
"use ``WSGIPythonPath``; instead you should use the ``python-path`` option to "
"``WSGIDaemonProcess``, for example::"
msgstr ""

# f73775a4cca84772a5512cb68bea496a
#: ../../howto/deployment/wsgi/modwsgi.txt:101
msgid ""
"See the official mod_wsgi documentation for `details on setting up daemon "
"mode`_."
msgstr ""

# ad62ef849a2e41ae9329c6cdd6a2e0fa
#: ../../howto/deployment/wsgi/modwsgi.txt:109
msgid "Serving files"
msgstr ""

# 08841bd561a84c429896b8a551f784b1
#: ../../howto/deployment/wsgi/modwsgi.txt:111
msgid ""
"Django doesn't serve files itself; it leaves that job to whichever Web "
"server you choose."
msgstr ""

# 8682455694be4e68b52692574fc8e00d
#: ../../howto/deployment/wsgi/modwsgi.txt:114
msgid ""
"We recommend using a separate Web server -- i.e., one that's not also "
"running Django -- for serving media. Here are some good choices:"
msgstr ""

# 4d54c9893cc64f45a2b2743216dcd54c
#: ../../howto/deployment/wsgi/modwsgi.txt:117
msgid "lighttpd_"
msgstr ""

# 6ef36152306548e8999e32c60e577daa
#: ../../howto/deployment/wsgi/modwsgi.txt:118
msgid "Nginx_"
msgstr ""

# 3858805441b84a7d9485ea7c3a9a1f78
#: ../../howto/deployment/wsgi/modwsgi.txt:119
msgid "TUX_"
msgstr ""

# f8314908f5d5447ea46b86052262c74b
#: ../../howto/deployment/wsgi/modwsgi.txt:120
msgid "A stripped-down version of Apache_"
msgstr ""

# 4a46494873c44d22804938a90368b593
#: ../../howto/deployment/wsgi/modwsgi.txt:121
msgid "Cherokee_"
msgstr ""

# 9ea8a236b83b43729fbd2bb429767a46
#: ../../howto/deployment/wsgi/modwsgi.txt:123
msgid ""
"If, however, you have no option but to serve media files on the same Apache "
"``VirtualHost`` as Django, you can set up Apache to serve some URLs as "
"static media, and others using the mod_wsgi interface to Django."
msgstr ""

# 12edb3d249bd4676bad42435c0f63cfc
#: ../../howto/deployment/wsgi/modwsgi.txt:127
msgid ""
"This example sets up Django at the site root, but explicitly serves ``robots."
"txt``, ``favicon.ico``, any CSS file, and anything in the ``/static/`` and "
"``/media/`` URL space as a static file. All other URLs will be served using "
"mod_wsgi::"
msgstr ""

# 74b3ab9338e14eb9a647453dd00e7cb1
#: ../../howto/deployment/wsgi/modwsgi.txt:173
msgid "Serving the admin files"
msgstr ""

# 8f16574475304b9fbbd82e08ab5b5366
#: ../../howto/deployment/wsgi/modwsgi.txt:175
msgid ""
"Note that the Django development server automatically serves the static "
"files of the admin app (and any other installed apps), but this is not the "
"case when you use any other server arrangement. You're responsible for "
"setting up Apache, or whichever media server you're using, to serve the "
"admin files."
msgstr ""

# 589a36c876eb43d78d9b72560a7cdbb7
#: ../../howto/deployment/wsgi/modwsgi.txt:180
msgid ""
"The admin files live in (:file:`django/contrib/admin/static/admin`) of the "
"Django distribution."
msgstr ""

# eeba7d55ef9947fb8020d32e7a1560d4
#: ../../howto/deployment/wsgi/modwsgi.txt:183
msgid ""
"We **strongly** recommend using :mod:`django.contrib.staticfiles` to handle "
"the admin files (along with a Web server as outlined in the previous "
"section; this means using the :djadmin:`collectstatic` management command to "
"collect the static files in :setting:`STATIC_ROOT`, and then configuring "
"your Web server to serve :setting:`STATIC_ROOT` at :setting:`STATIC_URL`), "
"but here are three other approaches:"
msgstr ""

# 6d74e8c41d3c444286e2c93a519a6c74
#: ../../howto/deployment/wsgi/modwsgi.txt:190
msgid ""
"Create a symbolic link to the admin static files from within your document "
"root (this may require ``+FollowSymLinks`` in your Apache configuration)."
msgstr ""

# bd57e6bd97c947469f6efe3eedb790e6
#: ../../howto/deployment/wsgi/modwsgi.txt:194
msgid ""
"Use an ``Alias`` directive, as demonstrated above, to alias the appropriate "
"URL (probably :setting:`STATIC_URL` + `admin/`) to the actual location of "
"the admin files."
msgstr ""

# ca128b77a768430b80e5ed4ac6a409a1
#: ../../howto/deployment/wsgi/modwsgi.txt:198
msgid ""
"Copy the admin static files so that they live within your Apache document "
"root."
msgstr ""

# 677497efbd24415d8adeb4c45e07bffa
#: ../../howto/deployment/wsgi/modwsgi.txt:202
msgid "Authenticating against Django's user database from Apache"
msgstr ""

# dd9d5b736ce04e3a9a3a79035414fa58
#: ../../howto/deployment/wsgi/modwsgi.txt:204
msgid ""
"Django provides a handler to allow Apache to authenticate users directly "
"against Django's authentication backends. See the :doc:`mod_wsgi "
"authentication documentation </howto/deployment/wsgi/apache-auth>`."
msgstr ""

# 7bfdd77d667f4c1082144bba7bfd59c9
#: ../../howto/deployment/wsgi/modwsgi.txt:209
msgid "If you get a UnicodeEncodeError"
msgstr ""

# 26dff27dd7c34a9c989bead2a68356a5
#: ../../howto/deployment/wsgi/modwsgi.txt:211
msgid ""
"If you're taking advantage of the internationalization features of Django "
"(see :doc:`/topics/i18n/index`) and you intend to allow users to upload "
"files, you must ensure that the environment used to start Apache is "
"configured to accept non-ASCII file names. If your environment is not "
"correctly configured, you will trigger ``UnicodeEncodeError`` exceptions "
"when calling functions like ``os.path()`` on filenames that contain non-"
"ASCII characters."
msgstr ""

# e4f14df59a274b7da245b8642dbf4bc9
#: ../../howto/deployment/wsgi/modwsgi.txt:218
msgid ""
"To avoid these problems, the environment used to start Apache should contain "
"settings analogous to the following::"
msgstr ""

# 994e2ce251924f4b83d82cbd2221833a
#: ../../howto/deployment/wsgi/modwsgi.txt:224
msgid ""
"Consult the documentation for your operating system for the appropriate "
"syntax and location to put these configuration items; ``/etc/apache2/"
"envvars`` is a common location on Unix platforms. Once you have added these "
"statements to your environment, restart Apache."
msgstr ""
