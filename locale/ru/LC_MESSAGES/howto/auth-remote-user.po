# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-07 10:34\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 11709d8df403495ba6ebc8aa2562ec8f
#: ../../howto/auth-remote-user.txt:3
msgid "Authentication using ``REMOTE_USER``"
msgstr ""

# 64bb41ce69594461b0568cb1d314313c
#: ../../howto/auth-remote-user.txt:7
msgid ""
"This document describes how to make use of external authentication sources "
"(where the Web server sets the ``REMOTE_USER`` environment variable) in your "
"Django applications.  This type of authentication solution is typically seen "
"on intranet sites, with single sign-on solutions such as IIS and Integrated "
"Windows Authentication or Apache and `mod_authnz_ldap`_, `CAS`_, `Cosign`_, "
"`WebAuth`_, `mod_auth_sspi`_, etc."
msgstr ""

# 5f7bf4bf1a254a29a43d54445581439b
#: ../../howto/auth-remote-user.txt:20
msgid ""
"When the Web server takes care of authentication it typically sets the "
"``REMOTE_USER`` environment variable for use in the underlying application.  "
"In Django, ``REMOTE_USER`` is made available in the :attr:`request.META "
"<django.http.HttpRequest.META>` attribute.  Django can be configured to make "
"use of the ``REMOTE_USER`` value using the ``RemoteUserMiddleware`` and "
"``RemoteUserBackend`` classes found in :mod:`django.contrib.auth`."
msgstr ""

# 040a12c81e954f42842bea8391087f80
#: ../../howto/auth-remote-user.txt:28
msgid "Configuration"
msgstr ""

# a021ae7982a54f26b768aeda7764281e
#: ../../howto/auth-remote-user.txt:32
msgid ""
"First, you must add the :class:`django.contrib.auth.middleware."
"RemoteUserMiddleware` to the :setting:`MIDDLEWARE_CLASSES` setting **after** "
"the :class:`django.contrib.auth.middleware.AuthenticationMiddleware`::"
msgstr ""

# 1c22f3d498494efd9f826b7b8d9dedb5
#: ../../howto/auth-remote-user.txt:44
msgid ""
"Next, you must replace the :class:`~django.contrib.auth.backends."
"ModelBackend` with ``RemoteUserBackend`` in the :setting:"
"`AUTHENTICATION_BACKENDS` setting::"
msgstr ""

# cf9c4f03623d4cb7b87233a2e9c77238
#: ../../howto/auth-remote-user.txt:51
msgid ""
"With this setup, ``RemoteUserMiddleware`` will detect the username in "
"``request.META['REMOTE_USER']`` and will authenticate and auto-login that "
"user using the ``RemoteUserBackend``."
msgstr ""

# 3d84c4da77fb43048f645e03ee36c3cb
#: ../../howto/auth-remote-user.txt:56
msgid ""
"Since the ``RemoteUserBackend`` inherits from ``ModelBackend``, you will "
"still have all of the same permissions checking that is implemented in "
"``ModelBackend``."
msgstr ""

# 18d145f574c44ff696756021cd7ff272
#: ../../howto/auth-remote-user.txt:60
msgid ""
"If your authentication mechanism uses a custom HTTP header and not "
"``REMOTE_USER``, you can subclass ``RemoteUserMiddleware`` and set the "
"``header`` attribute to the desired ``request.META`` key.  For example::"
msgstr ""

# 878bfe56a60842bf9d17f1922c2a2bfa
#: ../../howto/auth-remote-user.txt:71
msgid "``RemoteUserBackend``"
msgstr ""

# 93264720e6484ab18d09007e510b9f9b
#: ../../howto/auth-remote-user.txt:75
msgid ""
"If you need more control, you can create your own authentication backend "
"that inherits from ``RemoteUserBackend`` and overrides certain parts:"
msgstr ""

# 8b3144ca37114d3ba2c989a0e67e3e9c
#: ../../howto/auth-remote-user.txt:79
msgid "Attributes"
msgstr ""

# feefec82946f4a8caf6f420af2fa2e65
#: ../../howto/auth-remote-user.txt:83
msgid ""
"``True`` or ``False``.  Determines whether or not a :class:`~django.contrib."
"auth.models.User` object is created if not already in the database.  "
"Defaults to ``True``."
msgstr ""

# 1306e7d7727a4ae8bec0b795b66e356b
#: ../../howto/auth-remote-user.txt:88
msgid "Methods"
msgstr ""

# 6b9f6d67c7224806924abeb673f0e655
#: ../../howto/auth-remote-user.txt:92
msgid ""
"The username passed as ``remote_user`` is considered trusted. This method "
"simply returns the ``User`` object with the given username, creating a new "
"``User`` object if :attr:`~RemoteUserBackend.create_unknown_user` is "
"``True``."
msgstr ""

# afe6d9abbc7f4db5afbe54a922e4514b
#: ../../howto/auth-remote-user.txt:97
msgid ""
"Returns ``None`` if :attr:`~RemoteUserBackend.create_unknown_user` is "
"``False`` and a ``User`` object with the given username is not found in the "
"database."
msgstr ""

# dc60de861f494b79b819a05c3aefe371
#: ../../howto/auth-remote-user.txt:103
msgid ""
"Performs any cleaning on the ``username`` (e.g. stripping LDAP DN "
"information) prior to using it to get or create a :class:`~django.contrib."
"auth.models.User` object.  Returns the cleaned username."
msgstr ""

# 4716c7ff4a3a40fbb2fa1b701994749a
#: ../../howto/auth-remote-user.txt:110
msgid ""
"Configures a newly created user.  This method is called immediately after a "
"new user is created, and can be used to perform custom setup actions, such "
"as setting the user's groups based on attributes in an LDAP directory. "
"Returns the user object."
msgstr ""
