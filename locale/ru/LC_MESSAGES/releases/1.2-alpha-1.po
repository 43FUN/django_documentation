# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-02-15 15:13\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# cfb277ef11d2419aac2e03d6c12ea0ee
#: ../../releases/1.2-alpha-1.txt:3
msgid "Django 1.2 alpha 1 release notes"
msgstr ""

# c8a24d46783d4e3ba36bff0bc477d7fe
#: ../../releases/1.2-alpha-1.txt:5
msgid "January 5, 2010"
msgstr ""

# 75beedf7762b4801be85dac770035556
#: ../../releases/1.2-alpha-1.txt:7
msgid "Welcome to Django 1.2 alpha 1!"
msgstr ""

# c02e78df76444970ba0cb783018ae6be
#: ../../releases/1.2-alpha-1.txt:9
msgid ""
"This is the first in a series of preview/development releases leading up to "
"the eventual release of Django 1.2, currently scheduled to take place in "
"March 2010. This release is primarily targeted at developers who are "
"interested in trying out new features and testing the Django codebase to "
"help identify and resolve bugs prior to the final 1.2 release."
msgstr ""

# b38d53a092304e2fbb1c1de67facc5ee
#: ../../releases/1.2-alpha-1.txt:15
msgid ""
"As such, this release is *not* intended for production use, and any such use "
"is discouraged."
msgstr ""

# 85245575819e4bc391b8724cec8c5b42
#: ../../releases/1.2-alpha-1.txt:20
msgid "Backwards-incompatible changes in 1.2"
msgstr ""

# 65c5465746b84ad8b98ae315ed1e709c
#: ../../releases/1.2-alpha-1.txt:23
msgid "CSRF Protection"
msgstr ""

# 5777ddb6cff2448aa46483270e5ae278
#: ../../releases/1.2-alpha-1.txt:25
msgid ""
"There have been large changes to the way that CSRF protection works, "
"detailed in :doc:`the CSRF documentation </ref/contrib/csrf>`.  The "
"following are the major changes that developers must be aware of:"
msgstr ""

# 69cf8e5ee9ce4d0c94feb4ad87e75813
#: ../../releases/1.2-alpha-1.txt:29
msgid ""
"``CsrfResponseMiddleware`` and ``CsrfMiddleware`` have been deprecated, and "
"**will be removed completely in Django 1.4**, in favor of a template tag "
"that should be inserted into forms."
msgstr ""

# d1de524872534ddfa27f5879a396851a
#: ../../releases/1.2-alpha-1.txt:33
msgid ""
"All contrib apps use a ``csrf_protect`` decorator to protect the view. This "
"requires the use of the ``csrf_token`` template tag in the template, so if "
"you have used custom templates for contrib views, you MUST READ THE UPGRADE "
"INSTRUCTIONS to fix those templates."
msgstr ""

# 2fb5135556fb4604a8131b39d42c22ad
# 1c2973d5d84d45b28217c535469d4cdc
#: ../../releases/1.2-alpha-1.txt:40 ../../releases/1.2-alpha-1.txt:208
msgid ""
"The upgrade notes have been removed in current Django docs. Please refer to "
"the docs for Django 1.3 or older to find these instructions."
msgstr ""

# 13b3b43dcd894fcf815c5c5d7160ef4d
#: ../../releases/1.2-alpha-1.txt:43
msgid ""
"``CsrfViewMiddleware`` is included in :setting:`MIDDLEWARE_CLASSES` by "
"default. This turns on CSRF protection by default, so that views that accept "
"POST requests need to be written to work with the middleware. Instructions "
"on how to do this are found in the CSRF docs."
msgstr ""

# ae177f5362714565b118e7a67cdaafa6
#: ../../releases/1.2-alpha-1.txt:48
msgid ""
"CSRF-related code has moved from ``contrib`` to ``core`` (with backwards "
"compatible imports in the old locations, which are deprecated)."
msgstr ""

# 98223cde6716405b839280c6e6d973a6
#: ../../releases/1.2-alpha-1.txt:53
msgid ":ttag:`if` tag changes"
msgstr ""

# 5fb624d26637477aa0be600a0c5354fc
#: ../../releases/1.2-alpha-1.txt:55
msgid ""
"Due to new features in the :ttag:`if` template tag, it no longer accepts "
"'and', 'or' and 'not' as valid **variable** names.  Previously that worked "
"in some cases even though these strings were normally treated as keywords.  "
"Now, the keyword status is always enforced, and template code like ``{% if "
"not %}`` or ``{% if and %}`` will throw a TemplateSyntaxError."
msgstr ""

# efcfccb334684e7faa0bce59be7b9fa9
#: ../../releases/1.2-alpha-1.txt:62
msgid "``LazyObject``"
msgstr ""

# 7150cfb3296947b6a26d860cb770ad4c
#: ../../releases/1.2-alpha-1.txt:64
msgid ""
"``LazyObject`` is an undocumented utility class used for lazily wrapping "
"other objects of unknown type.  In Django 1.1 and earlier, it handled "
"introspection in a non-standard way, depending on wrapped objects "
"implementing a public method ``get_all_members()``. Since this could easily "
"lead to name clashes, it has been changed to use the standard method, "
"involving ``__members__`` and ``__dir__()``. If you used ``LazyObject`` in "
"your own code, and implemented the ``get_all_members()`` method for wrapped "
"objects, you need to make the following changes:"
msgstr ""

# a8b00cbba94742c4980b1efc0a49da77
#: ../../releases/1.2-alpha-1.txt:73
msgid ""
"If your class does not have special requirements for introspection (i.e. you "
"have not implemented ``__getattr__()`` or other methods that allow for "
"attributes not discoverable by normal mechanisms), you can simply remove the "
"``get_all_members()`` method.  The default implementation on ``LazyObject`` "
"will do the right thing."
msgstr ""

# 28c5f34cd8c94344928b5f318d0b99b5
#: ../../releases/1.2-alpha-1.txt:79
msgid ""
"If you have more complex requirements for introspection, first rename the "
"``get_all_members()`` method to ``__dir__()``.  This is the standard method, "
"from Python 2.6 onwards, for supporting introspection.  If you are require "
"support for Python < 2.6, add the following code to the class::"
msgstr ""

# fb7b6a8dd9f4499db60e41783b184e6d
#: ../../releases/1.2-alpha-1.txt:87
msgid "``__dict__`` on Model instances"
msgstr ""

# b4a4ef6c36e243258188a13dd2522cb5
#: ../../releases/1.2-alpha-1.txt:89
msgid ""
"Historically, the ``__dict__`` attribute of a model instance has only "
"contained attributes corresponding to the fields on a model."
msgstr ""

# 310feba8c79d4036b85c33f633d2694e
#: ../../releases/1.2-alpha-1.txt:92
msgid ""
"In order to support multiple database configurations, Django 1.2 has added a "
"``_state`` attribute to object instances. This attribute will appear in "
"``__dict__`` for a model instance. If your code relies on iterating over "
"__dict__ to obtain a list of fields, you must now filter the ``_state`` "
"attribute of out ``__dict__``."
msgstr ""

# ed02c580192c4dfe9928ec9b1b67bf4f
#: ../../releases/1.2-alpha-1.txt:99
msgid "``get_db_prep_*()`` methods on Field"
msgstr ""

# fdd42a814feb4afeb9f7a869ab17e27b
#: ../../releases/1.2-alpha-1.txt:101
msgid ""
"Prior to v1.2, a custom field had the option of defining several functions "
"to support conversion of Python values into database-compatible values. A "
"custom field might look something like::"
msgstr ""

# 91513807450f4b8ea63b4a4bad36eac3
#: ../../releases/1.2-alpha-1.txt:117
msgid ""
"In 1.2, these three methods have undergone a change in prototype, and two "
"extra methods have been introduced::"
msgstr ""

# 8656b5049dcd4e16aafeb67186115db1
#: ../../releases/1.2-alpha-1.txt:138
msgid ""
"These changes are required to support multiple databases: ``get_db_prep_*`` "
"can no longer make any assumptions regarding the database for which it is "
"preparing. The ``connection`` argument now provides the preparation methods "
"with the specific connection for which the value is being prepared."
msgstr ""

# 5eeff8c981864d8892ce301ccb6bef0d
#: ../../releases/1.2-alpha-1.txt:144
msgid ""
"The two new methods exist to differentiate general data preparation "
"requirements, and requirements that are database-specific. The ``prepared`` "
"argument is used to indicate to the database preparation methods whether "
"generic value preparation has been performed. If an unprepared (i.e., "
"``prepared=False``) value is provided to the ``get_db_prep_*()`` calls, they "
"should invoke the corresponding ``get_prep_*()`` calls to perform generic "
"data preparation."
msgstr ""

# 9778caa58d7b4e68b042604f8b7d84d1
#: ../../releases/1.2-alpha-1.txt:152
msgid ""
"Conversion functions has been provided which will transparently convert "
"functions adhering to the old prototype into functions compatible with the "
"new prototype. However, this conversion function will be removed in Django "
"1.4, so you should upgrade your Field definitions to use the new prototype."
msgstr ""

# 6b9db924c14045769615159422e25d19
#: ../../releases/1.2-alpha-1.txt:158
msgid ""
"If your ``get_db_prep_*()`` methods made no use of the database connection, "
"you should be able to upgrade by renaming ``get_db_prep_value()`` to "
"``get_prep_value()`` and ``get_db_prep_lookup()`` to ``get_prep_lookup()`. "
"If you require database specific conversions, then you will need to provide "
"an implementation ``get_db_prep_*`` that uses the ``connection`` argument to "
"resolve database-specific values."
msgstr ""

# 08c0f351edb340eba6cba3b65664ad3b
#: ../../releases/1.2-alpha-1.txt:167
msgid "Stateful template tags"
msgstr ""

# fc512434c8c344738bba7f6f46961337
#: ../../releases/1.2-alpha-1.txt:169
msgid ""
"Template tags that store rendering state on the node itself may experience "
"problems if they are used with the new :ref:`cached template loader<template-"
"loaders>`."
msgstr ""

# c411835b141d45a8b8f01eec0eb7cbb9
#: ../../releases/1.2-alpha-1.txt:173
msgid ""
"All of the built-in Django template tags are safe to use with the cached "
"loader, but if you're using custom template tags that come from third party "
"packages, or that you wrote yourself, you should ensure that the ``Node`` "
"implementation for each tag is thread-safe. For more information, see :ref:"
"`template tag thread safety considerations<template_tag_thread_safety>`."
msgstr ""

# aa88133239fc4c7881818b399de565cf
#: ../../releases/1.2-alpha-1.txt:181
msgid "Test runner exit status code"
msgstr ""

# a9d1bfebca904bd884e23710a3315bc6
#: ../../releases/1.2-alpha-1.txt:183
msgid ""
"The exit status code of the test runners (``tests/runtests.py`` and ``python "
"manage.py test``) no longer represents the number of failed tests, since a "
"failure of 256 or more tests resulted in a wrong exit status code.  The exit "
"status code for the test runner is now 0 for success (no failing tests) and "
"1 for any number of test failures.  If needed, the number of test failures "
"can be found at the end of the test runner's output."
msgstr ""

# 8ceae32eb30846d6914b7a9dede34d49
#: ../../releases/1.2-alpha-1.txt:191
msgid "Features deprecated in 1.2"
msgstr ""

# 74bed47bd0484ccdbb365be2b475bcfe
#: ../../releases/1.2-alpha-1.txt:194
msgid "CSRF response rewriting middleware"
msgstr ""

# c96523bef607435b851e73debfba1abb
#: ../../releases/1.2-alpha-1.txt:196
msgid ""
"``CsrfResponseMiddleware``, the middleware that automatically inserted CSRF "
"tokens into POST forms in outgoing pages, has been deprecated in favor of a "
"template tag method (see above), and will be removed completely in Django "
"1.4. ``CsrfMiddleware``, which includes the functionality of "
"``CsrfResponseMiddleware`` and ``CsrfViewMiddleware`` has likewise been "
"deprecated."
msgstr ""

# d40e553a22074378a8d7f3f5076e4287
#: ../../releases/1.2-alpha-1.txt:203
msgid ""
"Also, the CSRF module has moved from contrib to core, and the old imports "
"are deprecated, as described in the upgrading notes."
msgstr ""

# a2e59b5f04be43b2936c57e3a796bb46
#: ../../releases/1.2-alpha-1.txt:212
msgid "``SMTPConnection``"
msgstr ""

# 31a6651744cb49f695df234d83fe7016
#: ../../releases/1.2-alpha-1.txt:214
msgid ""
"The ``SMTPConnection`` class has been deprecated in favor of a generic Email "
"backend API. Old code that explicitly instantiated an instance of an "
"SMTPConnection::"
msgstr ""

# 138ad6cd4cd64f0e96a23024ceeef16e
#: ../../releases/1.2-alpha-1.txt:223
msgid ""
"should now call :meth:`~django.core.mail.get_connection()` to instantiate a "
"generic email connection::"
msgstr ""

# f4f408a58b1744ccbbef858a8e0a05b0
#: ../../releases/1.2-alpha-1.txt:231
msgid ""
"Depending on the value of the :setting:`EMAIL_BACKEND` setting, this may not "
"return an SMTP connection. If you explicitly require an SMTP connection with "
"which to send email, you can explicitly request an SMTP connection::"
msgstr ""

# 208735fd57df4c6fa82a065e8fc4c1c3
#: ../../releases/1.2-alpha-1.txt:241
msgid ""
"If your call to construct an instance of ``SMTPConnection`` required "
"additional arguments, those arguments can be passed to the :meth:`~django."
"core.mail.get_connection()` call::"
msgstr ""

# 7d79729109544e1683fa27a794fe7c54
#: ../../releases/1.2-alpha-1.txt:248
msgid "Specifying databases"
msgstr ""

# 04706d783e7f4f9497c3d354e7a020ff
#: ../../releases/1.2-alpha-1.txt:250
msgid ""
"Prior to Django 1.1, Django used a number of settings to control access to a "
"single database. Django 1.2 introduces support for multiple databases, and "
"as a result, the way you define database settings has changed."
msgstr ""

# 15f53416536d4e4d9eb950170dcbdff6
#: ../../releases/1.2-alpha-1.txt:254
msgid ""
"**Any existing Django settings file will continue to work as expected until "
"Django 1.4.** Old-style database settings will be automatically translated "
"to the new-style format."
msgstr ""

# cec73dbf910b486bad87578167bf5c7d
#: ../../releases/1.2-alpha-1.txt:258
msgid ""
"In the old-style (pre 1.2) format, there were a number of ``DATABASE_`` "
"settings at the top level of your settings file. For example::"
msgstr ""

# 647ab914c4064fcba6533b46360d3aa3
#: ../../releases/1.2-alpha-1.txt:267
msgid ""
"These settings are now contained inside a dictionary named :setting:"
"`DATABASES`. Each item in the dictionary corresponds to a single database "
"connection, with the name ``'default'`` describing the default database "
"connection. The setting names have also been shortened to reflect the fact "
"that they are stored in a dictionary. The sample settings given previously "
"would now be stored using::"
msgstr ""

# 2cf4494491684ca49ed4652c19b34fd5
#: ../../releases/1.2-alpha-1.txt:283
msgid "This affects the following settings:"
msgstr ""

# 5f42acd18f234159b18b9ee039ddad42
#: ../../releases/1.2-alpha-1.txt:286
msgid "Old setting"
msgstr ""

# f8f40e689db94171a5f70029b50f42e3
#: ../../releases/1.2-alpha-1.txt:286
msgid "New Setting"
msgstr ""

# 67ebe97393f241da9b6a1618d6f2d818
#: ../../releases/1.2-alpha-1.txt:288
msgid ":setting:`DATABASE_ENGINE`"
msgstr ""

# 7b27d673f9684ad4a0e7349386c03ad1
#: ../../releases/1.2-alpha-1.txt:288
msgid ":setting:`ENGINE`"
msgstr ""

# 240dab3f5150469bae7d1f046793ddcf
#: ../../releases/1.2-alpha-1.txt:289
msgid ":setting:`DATABASE_HOST`"
msgstr ""

# b688726dcd26492ba5abfc58da60681c
#: ../../releases/1.2-alpha-1.txt:289
msgid ":setting:`HOST`"
msgstr ""

# 9c776776beca445bb1ac10881b006b15
#: ../../releases/1.2-alpha-1.txt:290
msgid ":setting:`DATABASE_NAME`"
msgstr ""

# 25c8b311c98f49f68e280f16d63f4fa1
#: ../../releases/1.2-alpha-1.txt:290
msgid ":setting:`NAME`"
msgstr ""

# 804e39d009114b518434489ce4f5a2f4
#: ../../releases/1.2-alpha-1.txt:291
msgid ":setting:`DATABASE_OPTIONS`"
msgstr ""

# 66518991f034401abbbfd2ba57db9c0b
#: ../../releases/1.2-alpha-1.txt:291
msgid ":setting:`OPTIONS`"
msgstr ""

# 8d5aaaa267474a8799f8337640f9f4ae
#: ../../releases/1.2-alpha-1.txt:292
msgid ":setting:`DATABASE_PASSWORD`"
msgstr ""

# 385c3289afb64dfbae0ecca6187a58b5
#: ../../releases/1.2-alpha-1.txt:292
msgid ":setting:`PASSWORD`"
msgstr ""

# f2c49f39ed054e30bdb29bf086faad1a
#: ../../releases/1.2-alpha-1.txt:293
msgid ":setting:`DATABASE_PORT`"
msgstr ""

# f7c419743ca242b094e25ce0cb41afd0
#: ../../releases/1.2-alpha-1.txt:293
msgid ":setting:`PORT`"
msgstr ""

# 6bef7849ea5b4614b5cfa6fa369adc2d
#: ../../releases/1.2-alpha-1.txt:294
msgid ":setting:`DATABASE_USER`"
msgstr ""

# e1481cf6ab944885999c3da45417fcd6
#: ../../releases/1.2-alpha-1.txt:294
msgid ":setting:`USER`"
msgstr ""

# d39200c04b154d0eb81c51d17ebb7c11
#: ../../releases/1.2-alpha-1.txt:295
msgid ":setting:`TEST_DATABASE_CHARSET`"
msgstr ""

# b245909fa05440ee8a8b37574766ddc0
#: ../../releases/1.2-alpha-1.txt:295
msgid ":setting:`TEST_CHARSET`"
msgstr ""

# 0b1135a99e904f3c9989a67220090029
#: ../../releases/1.2-alpha-1.txt:296
msgid ":setting:`TEST_DATABASE_COLLATION`"
msgstr ""

# bbec7941a42745d8a1e574ea6433cb82
#: ../../releases/1.2-alpha-1.txt:296
msgid ":setting:`TEST_COLLATION`"
msgstr ""

# 7a3a374ccdae4138bec4be207569c16c
#: ../../releases/1.2-alpha-1.txt:297
msgid ":setting:`TEST_DATABASE_NAME`"
msgstr ""

# f67afbe3a5794215b8fc502a320d93d2
#: ../../releases/1.2-alpha-1.txt:297
msgid ":setting:`TEST_NAME`"
msgstr ""

# 7e4b8427ba4146519ab161960ca75123
#: ../../releases/1.2-alpha-1.txt:300
msgid ""
"These changes are also required if you have manually created a database "
"connection using ``DatabaseWrapper()`` from your database backend of choice."
msgstr ""

# 4b6451300c514866af422142e70bc824
#: ../../releases/1.2-alpha-1.txt:303
msgid ""
"In addition to the change in structure, Django 1.2 removes the special "
"handling for the built-in database backends. All database backends must now "
"be specified by a fully qualified module name (i.e., ``django.db.backends."
"postgresql_psycopg2``, rather than just ``postgresql_psycopg2``)."
msgstr ""

# 5fc1ef7542fd4aa69e9be44ac826c540
#: ../../releases/1.2-alpha-1.txt:310
msgid "User Messages API"
msgstr ""

# 710881814762461497e00c43480376a6
#: ../../releases/1.2-alpha-1.txt:312
msgid ""
"The API for storing messages in the user ``Message`` model (via ``user."
"message_set.create``) is now deprecated and will be removed in Django 1.4 "
"according to the standard :doc:`release process </internals/release-"
"process>`."
msgstr ""

# 0eae9f6036ac4bddac9a08edfddebe70
#: ../../releases/1.2-alpha-1.txt:316
msgid "To upgrade your code, you need to replace any instances of::"
msgstr ""

# 8c01889d50b3449db42d9c9d0b626414
#: ../../releases/1.2-alpha-1.txt:320
msgid "with the following::"
msgstr ""

# 8b7b072f8aca4912bccf6acfb54d0392
#: ../../releases/1.2-alpha-1.txt:325
msgid ""
"Additionally, if you make use of the method, you need to replace the "
"following::"
msgstr ""

# b206801f06054789bdad24206d1cd76d
#: ../../releases/1.2-alpha-1.txt:331
msgid "with::"
msgstr ""

# aa82b151b1dd4a938f7ebd6352eb5557
#: ../../releases/1.2-alpha-1.txt:337
msgid ""
"For more information, see the full :doc:`messages documentation </ref/"
"contrib/messages>`. You should begin to update your code to use the new API "
"immediately."
msgstr ""

# fb123188e8804ddfb6192d71d9463cee
#: ../../releases/1.2-alpha-1.txt:342
msgid "Date format helper functions"
msgstr ""

# 6ecadda4aa134a049456ea9f57a46c15
#: ../../releases/1.2-alpha-1.txt:344
msgid ""
"``django.utils.translation.get_date_formats()`` and ``django.utils."
"translation.get_partial_date_formats()`` have been deprecated in favor of "
"the appropriate calls to ``django.utils.formats.get_format()`` which is "
"locale aware when :setting:`USE_L10N` is set to ``True``, and falls back to "
"default settings if set to ``False``."
msgstr ""

# d959aa26c8f64cba959577a4414a4537
#: ../../releases/1.2-alpha-1.txt:350
msgid "To get the different date formats, instead of writing::"
msgstr ""

# 30b6a7754a1644319d03ca7111473ba1
#: ../../releases/1.2-alpha-1.txt:355
msgid "use::"
msgstr ""

# 17eeeee1b6744fd5965285a606f343c6
#: ../../releases/1.2-alpha-1.txt:363
msgid "or, when directly formatting a date value::"
msgstr ""

# 4711f08b9ddd4c49b5aaaac3dacb287f
#: ../../releases/1.2-alpha-1.txt:368
msgid "The same applies to the globals found in ``django.forms.fields``:"
msgstr ""

# e1df0d312eb94c50b06dc0b0d3085e36
#: ../../releases/1.2-alpha-1.txt:370
msgid "``DEFAULT_DATE_INPUT_FORMATS``"
msgstr ""

# e15315fb6d58438a83bb8555c9b3caae
#: ../../releases/1.2-alpha-1.txt:371
msgid "``DEFAULT_TIME_INPUT_FORMATS``"
msgstr ""

# 8eccedad10fc4101959646f424d35c6a
#: ../../releases/1.2-alpha-1.txt:372
msgid "``DEFAULT_DATETIME_INPUT_FORMATS``"
msgstr ""

# 2eba8002b0bc4570840c2bb83f072a1f
#: ../../releases/1.2-alpha-1.txt:374
msgid ""
"Use ``django.utils.formats.get_format()`` to get the appropriate formats."
msgstr ""

# 304d1e92161d4e0b930040ef5cdbfe1f
#: ../../releases/1.2-alpha-1.txt:378
msgid "What's new in Django 1.2 alpha 1"
msgstr ""

# ffdc99fb2c7c415ba18aaf074cbe3430
#: ../../releases/1.2-alpha-1.txt:380
msgid ""
"The following new features are present as of this alpha release; this "
"release also marks the end of major feature development for the 1.2 release "
"cycle. Some minor features will continue development until the 1.2 beta "
"release, however."
msgstr ""

# 77bb726e017d453698dd4f2351c04804
#: ../../releases/1.2-alpha-1.txt:387
msgid "CSRF support"
msgstr ""

# 3490daedb9b640e3bdc1c2d6ff66d57f
#: ../../releases/1.2-alpha-1.txt:389
msgid ""
"Django now has much improved protection against :doc:`Cross-Site Request "
"Forgery (CSRF) attacks</ref/contrib/csrf>`. This type of attack occurs when "
"a malicious Web site contains a link, a form button or some javascript that "
"is intended to perform some action on your Web site, using the credentials "
"of a logged-in user who visits the malicious site in their browser. A "
"related type of attack, 'login CSRF', where an attacking site tricks a "
"user's browser into logging into a site with someone else's credentials, is "
"also covered."
msgstr ""

# 57c75c39ce72400199c36a8164661e40
#: ../../releases/1.2-alpha-1.txt:399
msgid "Email Backends"
msgstr ""

# fe5b43700b5c4b0c84edec5cc56f4dc0
#: ../../releases/1.2-alpha-1.txt:401
msgid ""
"You can now :ref:`configure the way that Django sends email <topic-email-"
"backends>`. Instead of using SMTP to send all email, you can now choose a "
"configurable email backend to send messages. If your hosting provider uses a "
"sandbox or some other non-SMTP technique for sending mail, you can now "
"construct an email backend that will allow Django's standard :doc:`mail "
"sending methods</topics/email>` to use those facilities."
msgstr ""

# 55bcf4a766b547a182892e18f6b38326
#: ../../releases/1.2-alpha-1.txt:409
msgid ""
"This also makes it easier to debug mail sending - Django ships with backend "
"implementations that allow you to send email to a :ref:`file<topic-email-"
"file-backend>`, to the :ref:`console<topic-email-console-backend>`, or to :"
"ref:`memory<topic-email-memory-backend>` - you can even configure all email "
"to be :ref:`thrown away<topic-email-dummy-backend>`."
msgstr ""

# f21d51d4e3ed4adc96cc5aa2c7b8080f
#: ../../releases/1.2-alpha-1.txt:417
msgid "Messages Framework"
msgstr ""

# 3a979c2334c842e69f9a64ca4a24aa48
#: ../../releases/1.2-alpha-1.txt:419
msgid ""
"Django now includes a robust and configurable :doc:`messages framework </ref/"
"contrib/messages>` with built-in support for cookie- and session-based "
"messaging, for both anonymous and authenticated clients. The messages "
"framework replaces the deprecated user message API and allows you to "
"temporarily store messages in one request and retrieve them for display in a "
"subsequent request (usually the next one)."
msgstr ""

# fd2a651f64e14c048e0c6b93fb82ba9c
#: ../../releases/1.2-alpha-1.txt:427
msgid "Support for multiple databases"
msgstr ""

# 10de5388c3f84f9c872192cc662d70bc
#: ../../releases/1.2-alpha-1.txt:429
msgid ""
"Django 1.2 adds the ability to use :doc:`more than one database </topics/db/"
"multi-db>` in your Django project. Queries can be issued at a specific "
"database with the `using()` method on querysets; individual objects can be "
"saved to a specific database by providing a ``using`` argument when you save "
"the instance."
msgstr ""

# b4626d73972d4e539a923332a75f14e4
#: ../../releases/1.2-alpha-1.txt:436
msgid "'Smart' if tag"
msgstr ""

# 75168ca90db9481fa7e066436906842f
#: ../../releases/1.2-alpha-1.txt:438
msgid ""
"The :ttag:`if` tag has been upgraded to be much more powerful.  First, "
"support for comparison operators has been added. No longer will you have to "
"type:"
msgstr ""

# e30b34f0fcca459fac6ee31a9e84e66e
#: ../../releases/1.2-alpha-1.txt:447
msgid "...as you can now do:"
msgstr ""

# 5bd54df27c274bb3b6ce836c02669c3e
#: ../../releases/1.2-alpha-1.txt:455
msgid ""
"The operators supported are ``==``, ``!=``, ``<``, ``>``, ``<=``, ``>=`` and "
"``in``, all of which work like the Python operators, in addition to ``and``, "
"``or`` and ``not`` which were already supported."
msgstr ""

# 45675de4ea11409591d6d88e592c9c3e
#: ../../releases/1.2-alpha-1.txt:459
msgid "Also, filters may now be used in the ``if`` expression. For example:"
msgstr ""

# c0003503616348d49b7109171d60a2ec
#: ../../releases/1.2-alpha-1.txt:470
msgid "Template caching"
msgstr ""

# 336793d24c3b47f5a74e8f3b47d50221
#: ../../releases/1.2-alpha-1.txt:472
msgid ""
"In previous versions of Django, every time you rendered a template it would "
"be reloaded from disk. In Django 1.2, you can use a :ref:`cached template "
"loader <template-loaders>` to load templates once, then use the cached "
"result for every subsequent render. This can lead to a significant "
"performance improvement if your templates are broken into lots of smaller "
"subtemplates (using the ``{% extends %}`` or ``{% include %}`` tags)."
msgstr ""

# ab6f89910940417f9b15f604a77fdcaf
#: ../../releases/1.2-alpha-1.txt:480
msgid ""
"As a side effect, it is now much easier to support non-Django template "
"languages. For more details, see the :ref:`notes on supporting non-Django "
"template languages<topic-template-alternate-language>`."
msgstr ""

# b22af9b3d6444aed84873611c57109e4
#: ../../releases/1.2-alpha-1.txt:485
msgid "Natural keys in fixtures"
msgstr ""

# 7b4fcf5dfb4a4e7c83500e8f0bd14485
#: ../../releases/1.2-alpha-1.txt:487
msgid ""
"Fixtures can refer to remote objects using :ref:`topics-serialization-"
"natural-keys`. This lookup scheme is an alternative to the normal primary-"
"key based object references in a fixture, improving readability, and "
"resolving problems referring to objects whose primary key value may not be "
"predictable or known."
msgstr ""

# 69b359bb61ae46b7ab3fd46963aaa742
#: ../../releases/1.2-alpha-1.txt:494
msgid "``BigIntegerField``"
msgstr ""

# c20e4d93db92411b82b21c02fb0b9af4
#: ../../releases/1.2-alpha-1.txt:496
msgid ""
"Models can now use a 64 bit :class:`~django.db.models.BigIntegerField` type."
msgstr ""

# e57f4b9486144d0e911c0c4748d8e2d9
#: ../../releases/1.2-alpha-1.txt:499
msgid "Fast Failure for Tests"
msgstr ""

# 7fb51941589746ff8ee97530d130bbff
#: ../../releases/1.2-alpha-1.txt:501
msgid ""
"The :djadmin:`test` subcommand of ``django-admin.py``, and the ``runtests."
"py`` script used to run Django's own test suite, support a new ``--"
"failfast`` option. When specified, this option causes the test runner to "
"exit after encountering a failure instead of continuing with the test run.  "
"In addition, the handling of ``Ctrl-C`` during a test run has been improved "
"to trigger a graceful exit from the test run that reports details of the "
"tests run before the interruption."
msgstr ""

# 1c6e419aaa7a464fad77461022ab5aa5
#: ../../releases/1.2-alpha-1.txt:509
msgid "Improved localization"
msgstr ""

# a9ff6b1ae8814f41bbb3d5f6319b59ee
#: ../../releases/1.2-alpha-1.txt:511
msgid ""
"Django's :doc:`internationalization framework </topics/i18n/index>` has been "
"expanded by locale aware formatting and form processing. That means, if "
"enabled, dates and numbers on templates will be displayed using the format "
"specified for the current locale. Django will also use localized formats "
"when parsing data in forms. See :ref:`Format localization <format-"
"localization>` for more details."
msgstr ""

# f0057c0517fc4323aeb1a3efff7ec028
#: ../../releases/1.2-alpha-1.txt:519
msgid "Added ``readonly_fields`` to ``ModelAdmin``"
msgstr ""

# 5fae1623061241ab89a1edb335e5ee9f
#: ../../releases/1.2-alpha-1.txt:521
msgid ""
":attr:`django.contrib.admin.ModelAdmin.readonly_fields` has been added to "
"enable non-editable fields in add/change pages for models and inlines. Field "
"and calculated values can be displayed along side editable fields."
msgstr ""

# 2cb96de5555f4f2583396ec5c16bc655
#: ../../releases/1.2-alpha-1.txt:526
msgid "Customizable syntax highlighting"
msgstr ""

# 00d5daa301174ff59cb0079e1c0d347b
#: ../../releases/1.2-alpha-1.txt:528
msgid ""
"You can now use the ``DJANGO_COLORS`` environment variable to modify or "
"disable the colors used by ``django-admin.py`` to provide :ref:`syntax "
"highlighting <syntax-coloring>`."
msgstr ""

# e57cfaf6dd8846f7a63cff17eeace202
#: ../../releases/1.2-alpha-1.txt:534
msgid "The Django 1.2 roadmap"
msgstr ""

# 4e34924fb0a64dbc95f53616a847a4c3
#: ../../releases/1.2-alpha-1.txt:536
msgid ""
"Before the final Django 1.2 release, several other preview/development "
"releases will be made available. The current schedule consists of at least "
"the following:"
msgstr ""

# 3299515ca8ba419598d1e5b120851ed7
#: ../../releases/1.2-alpha-1.txt:540
msgid ""
"Week of **January 26, 2010**: First Django 1.2 beta release. Final feature "
"freeze for Django 1.2."
msgstr ""

# 115e5958fa4d4de4a7b3cecce1ac616c
#: ../../releases/1.2-alpha-1.txt:543
msgid ""
"Week of **March 2, 2010**: First Django 1.2 release candidate. String freeze "
"for translations."
msgstr ""

# 942ad22da88844919b65c7e1bf378474
#: ../../releases/1.2-alpha-1.txt:546
msgid "Week of **March 9, 2010**: Django 1.2 final release."
msgstr ""

# ef3e24027cfd488690250a5be6c28793
#: ../../releases/1.2-alpha-1.txt:548
msgid ""
"If necessary, additional alpha, beta or release-candidate packages will be "
"issued prior to the final 1.2 release. Django 1.2 will be released "
"approximately one week after the final release candidate."
msgstr ""

# e2b5931c7d304b4ea09408111be2d480
#: ../../releases/1.2-alpha-1.txt:554
msgid "What you can do to help"
msgstr ""

# d100fbef597c4f9aae7ed069c8ea4b56
#: ../../releases/1.2-alpha-1.txt:556
msgid ""
"In order to provide a high-quality 1.2 release, we need your help. Although "
"this alpha release is, again, *not* intended for production use, you can "
"help the Django team by trying out the alpha codebase in a safe test "
"environment and reporting any bugs or issues you encounter. The Django "
"ticket tracker is the central place to search for open issues:"
msgstr ""

# 368758a2413d4772a1a20c0ceda7d7cd
#: ../../releases/1.2-alpha-1.txt:562
msgid "http://code.djangoproject.com/timeline"
msgstr ""

# 734d7b8f77484eaba965d13838668217
#: ../../releases/1.2-alpha-1.txt:564
msgid ""
"Please open new tickets if no existing ticket corresponds to a problem "
"you're running into."
msgstr ""

# 5c9d6247c2244515aacadb283707e42c
#: ../../releases/1.2-alpha-1.txt:567
msgid ""
"Additionally, discussion of Django development, including progress toward "
"the 1.2 release, takes place daily on the django-developers mailing list:"
msgstr ""

# 93dca708e6c846f0b1214496cc3812c9
#: ../../releases/1.2-alpha-1.txt:570
msgid "http://groups.google.com/group/django-developers"
msgstr ""

# 16734c4bff2e4e53a02f700addb31d26
#: ../../releases/1.2-alpha-1.txt:572
msgid ""
"... and in the ``#django-dev`` IRC channel on ``irc.freenode.net``. If "
"you're interested in helping out with Django's development, feel free to "
"join the discussions there."
msgstr ""

# 1fb4c44812dd4c34aabbf6862c6c75f3
#: ../../releases/1.2-alpha-1.txt:576
msgid ""
"Django's online documentation also includes pointers on how to contribute to "
"Django:"
msgstr ""

# e4c96aae72db4743bd13513bb73e08af
#: ../../releases/1.2-alpha-1.txt:579
msgid ":doc:`How to contribute to Django </internals/contributing/index>`"
msgstr ""

# 633f3f9c6a3842b4923aff468e11e879
#: ../../releases/1.2-alpha-1.txt:581
msgid ""
"Contributions on any level -- developing code, writing documentation or "
"simply triaging tickets and helping to test proposed bugfixes -- are always "
"welcome and appreciated."
msgstr ""

# 5066e12313c44ac3b52d4eaa5cb81466
#: ../../releases/1.2-alpha-1.txt:585
msgid ""
"Development sprints for Django 1.2 will also be taking place at PyCon US "
"2010, on the dedicated sprint days (February 22 through 25), and anyone who "
"wants to help out is welcome to join in, either in person at PyCon or "
"virtually in the IRC channel or on the mailing list."
msgstr ""
