# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2015.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-11-17 10:48+0200\n"
"PO-Revision-Date: 2015-11-17 10:48+0200\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#: ../../releases/1.8.2.txt:3
msgid "Django 1.8.2 release notes"
msgstr ""

#: ../../releases/1.8.2.txt:5
msgid "*May 20, 2015*"
msgstr ""

#: ../../releases/1.8.2.txt:7
msgid "Django 1.8.2 fixes a security issue and several bugs in 1.8.1."
msgstr ""

#: ../../releases/1.8.2.txt:10
msgid "Fixed session flushing in the ``cached_db`` backend"
msgstr ""

#: ../../releases/1.8.2.txt:12
msgid ""
"A change to ``session.flush()`` in the ``cached_db`` session backend in "
"Django 1.8 mistakenly sets the session key to an empty string rather than "
"``None``. An empty string is treated as a valid session key and the session "
"cookie is set accordingly. Any users with an empty string in their session "
"cookie will use the same session store. ``session.flush()`` is called by "
"``django.contrib.auth.logout()`` and, more seriously, by ``django.contrib."
"auth.login()`` when a user switches accounts. If a user is logged in and "
"logs in again to a different account (without logging out) the session is "
"flushed to avoid reuse. After the session is flushed (and its session key "
"becomes ``''``) the account details are set on the session and the session "
"is saved. Any users with an empty string in their session cookie will now be "
"logged into that account."
msgstr ""

#: ../../releases/1.8.2.txt:26
msgid "Bugfixes"
msgstr ""

#: ../../releases/1.8.2.txt:28
msgid "Fixed check for template engine alias uniqueness (:ticket:`24685`)."
msgstr ""

#: ../../releases/1.8.2.txt:30
msgid ""
"Fixed crash when reusing the same ``Case`` instance in a query (:ticket:"
"`24752`)."
msgstr ""

#: ../../releases/1.8.2.txt:33
msgid ""
"Corrected join promotion for ``Case`` expressions. For example, annotating a "
"query with a  ``Case`` expression could unexpectedly filter out results (:"
"ticket:`24766`)."
msgstr ""

#: ../../releases/1.8.2.txt:37
msgid ""
"Fixed negated ``Q`` objects in expressions. Cases like "
"``Case(When(~Q(friends__age__lte=30)))`` tried to generate a subquery which "
"resulted in a crash (:ticket:`24705`)."
msgstr ""

#: ../../releases/1.8.2.txt:41
msgid ""
"Fixed incorrect GROUP BY clause generation on MySQL when the query's model "
"has a self-referential foreign key (:ticket:`24748`)."
msgstr ""

#: ../../releases/1.8.2.txt:44
msgid ""
"Implemented ``ForeignKey.get_db_prep_value()`` so that ``ForeignKey``\\s "
"pointing to :class:`~django.db.models.UUIDField` and inheritance on models "
"with ``UUIDField`` primary keys work correctly (:ticket:`24698`, :ticket:"
"`24712`)."
msgstr ""

#: ../../releases/1.8.2.txt:49
msgid "Fixed ``isnull`` lookup for ``HStoreField`` (:ticket:`24751`)."
msgstr ""

#: ../../releases/1.8.2.txt:51
msgid ""
"Fixed a MySQL crash when a migration removes a combined index "
"(unique_together or index_together) containing a foreign key (:ticket:"
"`24757`)."
msgstr ""

#: ../../releases/1.8.2.txt:54
msgid ""
"Fixed session cookie deletion when using :setting:`SESSION_COOKIE_DOMAIN` (:"
"ticket:`24799`)."
msgstr ""

#: ../../releases/1.8.2.txt:57
msgid ""
"On PostgreSQL, when no access is granted for the ``postgres`` database, "
"Django now falls back to the default database when it normally requires a "
"\"no database\" connection (:ticket:`24791`)."
msgstr ""

#: ../../releases/1.8.2.txt:61
msgid ""
"Fixed display of ``contrib.admin``â€™s ``ForeignKey`` widget when it's used in "
"a row with other fields (:ticket:`24784`)."
msgstr ""
