# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-02-15 15:13\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 4de47ae0744e49b7825c45c8906f0c20
#: ../../releases/1.3-alpha-1.txt:3
msgid "Django 1.3 alpha 1 release notes"
msgstr ""

# 64bc6f9ae9da487585cd62a4761b43c8
#: ../../releases/1.3-alpha-1.txt:5
msgid "November 11, 2010"
msgstr ""

# daa067680e72464aacff3d714f63c6e9
#: ../../releases/1.3-alpha-1.txt:7
msgid "Welcome to Django 1.3 alpha 1!"
msgstr ""

# 074184ebfe1f44a2954f5f52cafa61c6
#: ../../releases/1.3-alpha-1.txt:9
msgid ""
"This is the first in a series of preview/development releases leading up to "
"the eventual release of Django 1.3. This release is primarily targeted at "
"developers who are interested in trying out new features and testing the "
"Django codebase to help identify and resolve bugs prior to the final 1.3 "
"release."
msgstr ""

# 8a880f84f88c44608959eb8bdaa062e0
#: ../../releases/1.3-alpha-1.txt:15
msgid ""
"As such, this release is *not* intended for production use, and any such use "
"is discouraged."
msgstr ""

# f60481fa9fc4426f99f487ca1a8f2e4a
#: ../../releases/1.3-alpha-1.txt:18
msgid ""
"As of this alpha release, Django 1.3 contains a number of nifty `new "
"features`_, lots of bug fixes, some minor `backwards incompatible changes`_ "
"and an easy upgrade path from Django 1.2."
msgstr ""

# d5288fa01135410088218efa755d8522
#: ../../releases/1.3-alpha-1.txt:27
msgid "What's new in Django 1.3 alpha 1"
msgstr ""

# 928fcd2411fd47218b6234cd60b99be7
#: ../../releases/1.3-alpha-1.txt:30
msgid "Class-based views"
msgstr ""

# d8541cf2e5db40f9ac8d6d22d042f35e
#: ../../releases/1.3-alpha-1.txt:32
msgid ""
"Django 1.3 adds a framework that allows you to use a class as a view. This "
"means you can compose a view out of a collection of methods that can be "
"subclassed and overridden to provide common views of data without having to "
"write too much code."
msgstr ""

# bd80db722ae54f6abdca220d86195ec3
#: ../../releases/1.3-alpha-1.txt:37
msgid ""
"Analogs of all the old function-based generic views have been provided, "
"along with a completely generic view base class that can be used as the "
"basis for reusable applications that can be easily extended."
msgstr ""

# 3db5b5fe3ed84908a02c0826e7d8e7ec
#: ../../releases/1.3-alpha-1.txt:41
msgid ""
"See :doc:`the documentation on Class-based Generic Views </topics/class-"
"based-views>` for more details. There is also a document to help you :doc:"
"`convert your function-based generic views to class-based views</topics/"
"generic-views-migration>`."
msgstr ""

# 78611d75b83d4220a4f014282d4aaac1
#: ../../releases/1.3-alpha-1.txt:47
msgid "Logging"
msgstr ""

# 89da9e1140af4371a3300be278ebcba0
#: ../../releases/1.3-alpha-1.txt:49
msgid ""
"Django 1.3 adds framework-level support for Python's logging module. This "
"means you can now easily configure and control logging as part of your "
"Django project. A number of logging handlers and logging calls have been "
"added to Django's own code as well -- most notably, the error emails sent on "
"a HTTP 500 server error are now handled as a logging activity. See :doc:`the "
"documentation on Django's logging interface </topics/logging>` for more "
"details."
msgstr ""

# 1c70630d3db346e78c7d9421c6efe401
#: ../../releases/1.3-alpha-1.txt:58
msgid "Extended static files handling"
msgstr ""

# 488feea4372742a799506d9555c3ca86
#: ../../releases/1.3-alpha-1.txt:60
msgid ""
"Django 1.3 ships with a new contrib app ``'django.contrib.staticfiles'`` to "
"help developers handle the static media files (images, CSS, Javascript, "
"etc.) that are needed to render a complete web page."
msgstr ""

# 5136c2e9b261474ab8d06a2706b44f39
#: ../../releases/1.3-alpha-1.txt:64
msgid ""
"In previous versions of Django, it was common to place static assets in :"
"setting:`MEDIA_ROOT` along with user-uploaded files, and serve them both at :"
"setting:`MEDIA_URL`. Part of the purpose of introducing the ``staticfiles`` "
"app is to make it easier to keep static files separate from user-uploaded "
"files. For this reason, you will probably want to make your :setting:"
"`MEDIA_ROOT` and :setting:`MEDIA_URL` different from your :setting:"
"`STATICFILES_ROOT` and :setting:`STATICFILES_URL`. You will need to arrange "
"for serving of files in :setting:`MEDIA_ROOT` yourself; ``staticfiles`` does "
"not deal with user-uploaded media at all."
msgstr ""

# f9a109209ecc461792b1e6e46561a269
#: ../../releases/1.3-alpha-1.txt:74
msgid ""
"See the :doc:`reference documentation of the app </ref/contrib/staticfiles>` "
"for more details or learn how to :doc:`manage static files </howto/static-"
"files>`."
msgstr ""

# 2fa3c42829be4149af1e02793045d141
#: ../../releases/1.3-alpha-1.txt:79
msgid "``unittest2`` support"
msgstr ""

# bb21d5c35b8847a5ad63eabe434802c5
#: ../../releases/1.3-alpha-1.txt:81
msgid ""
"Python 2.7 introduced some major changes to the unittest library, adding "
"some extremely useful features. To ensure that every Django project can "
"benefit from these new features, Django ships with a copy of unittest2_, a "
"copy of the Python 2.7 unittest library, backported for Python 2.4 "
"compatibility."
msgstr ""

# 1124ddc74ba341dd8dc5be4ae3574d46
#: ../../releases/1.3-alpha-1.txt:87
msgid ""
"To access this library, Django provides the ``django.utils.unittest`` module "
"alias. If you are using Python 2.7, or you have installed unittest2 locally, "
"Django will map the alias to the installed version of the unittest library. "
"Otherwise, Django will use it's own bundled version of unittest2."
msgstr ""

# 2e94002a461c40aab62b3c6984661e33
#: ../../releases/1.3-alpha-1.txt:93
msgid "To use this alias, simply use::"
msgstr ""

# f049961e07264520af23654c6d06be58
#: ../../releases/1.3-alpha-1.txt:97
msgid "wherever you would have historically used::"
msgstr ""

# 2876a4628d7b474ab0834cba0295b72f
#: ../../releases/1.3-alpha-1.txt:101
msgid ""
"If you want to continue to use the base unittest libary, you can -- you just "
"won't get any of the nice new unittest2 features."
msgstr ""

# 87180a131aa548d8b73f6944b09d95de
#: ../../releases/1.3-alpha-1.txt:107
msgid "Transaction context managers"
msgstr ""

# ca77c77c955e4fe1a774da8783e3b0f0
#: ../../releases/1.3-alpha-1.txt:109
msgid ""
"Users of Python 2.5 and above may now use :ref:`transaction management "
"functions <transaction-management-functions>` as `context managers`_. For "
"example::"
msgstr ""

# d3073a1a1f164fc68e591134bc6a34a7
#: ../../releases/1.3-alpha-1.txt:117
msgid "For more information, see :ref:`transaction-management-functions`."
msgstr ""

# f93d1e8142284d72bd198010bd53c367
#: ../../releases/1.3-alpha-1.txt:120
msgid "Configurable delete-cascade"
msgstr ""

# 33b0d447de8a43f391b3e223a8bdc75b
#: ../../releases/1.3-alpha-1.txt:122
msgid ""
":class:`~django.db.models.ForeignKey` and :class:`~django.db.models."
"OneToOneField` now accept an :attr:`~django.db.models.ForeignKey.on_delete` "
"argument to customize behavior when the referenced object is deleted. "
"Previously, deletes were always cascaded; available alternatives now include "
"set null, set default, set to any value, protect, or do nothing."
msgstr ""

# 92f80d13b9864781b3be91f30ee54525
#: ../../releases/1.3-alpha-1.txt:129
msgid ""
"For more information, see the :attr:`~django.db.models.ForeignKey.on_delete` "
"documentation."
msgstr ""

# f6e782de3ec2424eb35844f526348cb0
#: ../../releases/1.3-alpha-1.txt:133
msgid "Contextual markers in translatable strings"
msgstr ""

# 75bd45dc6a604d72a3ef1721de65cd19
#: ../../releases/1.3-alpha-1.txt:135
msgid ""
"For translation strings with ambiguous meaning, you can now use the "
"``pgettext`` function to specify the context of the string."
msgstr ""

# ea4d3cd52b064766a831c0c8336a3bda
#: ../../releases/1.3-alpha-1.txt:138
msgid "For more information, see :ref:`contextual-markers`"
msgstr ""

# d10b80d909174f51a8d856aa5ed80f4b
#: ../../releases/1.3-alpha-1.txt:141
msgid "Everything else"
msgstr ""

# 3ff6bfb83dfa440689f38227df146eee
#: ../../releases/1.3-alpha-1.txt:143
msgid ""
"Django :doc:`1.1 <1.1>` and :doc:`1.2 <1.2>` added lots of big ticket items "
"to Django, like multiple-database support, model validation, and a session-"
"based messages framework. However, this focus on big features came at the "
"cost of lots of smaller features."
msgstr ""

# ce018209edf444a7863b6b5e39285314
#: ../../releases/1.3-alpha-1.txt:149
msgid ""
"To compensate for this, the focus of the Django 1.3 development process has "
"been on adding lots of smaller, long standing feature requests. These "
"include:"
msgstr ""

# 00b115d544de4b5f9a569259b13dcee1
#: ../../releases/1.3-alpha-1.txt:153
msgid ""
"Improved tools for accessing and manipulating the current Site via :func:"
"`django.contrib.sites.models.get_current_site`."
msgstr ""

# 84a2e8c33ec94520b7f9b510e7b42c57
#: ../../releases/1.3-alpha-1.txt:156
msgid ""
"A :class:`~django.test.client.RequestFactory` for mocking requests in tests."
msgstr ""

# 8ccaf452b1cb48fd9b83e8090dfd39ea
#: ../../releases/1.3-alpha-1.txt:159
msgid ""
"A new test assertion -- :meth:`~django.test.client.Client.assertNumQueries` "
"-- making it easier to test the database activity associated with a view."
msgstr ""

# 93b0b6867d4041f7aa9a3a35840f77b8
#: ../../releases/1.3-alpha-1.txt:167
msgid "Backwards-incompatible changes in 1.3 alpha 1"
msgstr ""

# 39d3b7e557584891809c251085d32d0a
#: ../../releases/1.3-alpha-1.txt:170
msgid "PasswordInput default rendering behavior"
msgstr ""

# 63761a1dd4d847d5943a7cb2823f0313
#: ../../releases/1.3-alpha-1.txt:172
msgid ""
"The :class:`~django.forms.PasswordInput` form widget, intended for use with "
"form fields which represent passwords, accepts a boolean keyword argument "
"``render_value`` indicating whether to send its data back to the browser "
"when displaying a submitted form with errors. Prior to Django 1.3, this "
"argument defaulted to ``True``, meaning that the submitted password would be "
"sent back to the browser as part of the form. Developers who wished to add a "
"bit of additional security by excluding that value from the redisplayed form "
"could instantiate a :class:`~django.forms.PasswordInput` passing "
"``render_value=False`` ."
msgstr ""

# 0fb64537f5594d03b220e0589e8ab62a
#: ../../releases/1.3-alpha-1.txt:182
msgid ""
"Due to the sensitive nature of passwords, however, Django 1.3 takes this "
"step automatically; the default value of ``render_value`` is now ``False``, "
"and developers who want the password value returned to the browser on a "
"submission with errors (the previous behavior) must now explicitly indicate "
"this. For example::"
msgstr ""

# 30fd119be4f24d95afcaf0526d92c7c7
#: ../../releases/1.3-alpha-1.txt:194
msgid "Clearable default widget for FileField"
msgstr ""

# 3dc661b2694647ae9603330651399f73
#: ../../releases/1.3-alpha-1.txt:196
msgid ""
"Django 1.3 now includes a ``ClearableFileInput`` form widget in addition to "
"``FileInput``. ``ClearableFileInput`` renders with a checkbox to clear the "
"field's value (if the field has a value and is not required); ``FileInput`` "
"provided no means for clearing an existing file from a ``FileField``."
msgstr ""

# 55d7af201bdc45f7bdbe2b1bef31f46a
#: ../../releases/1.3-alpha-1.txt:201
msgid ""
"``ClearableFileInput`` is now the default widget for a ``FileField``, so "
"existing forms including ``FileField`` without assigning a custom widget "
"will need to account for the possible extra checkbox in the rendered form "
"output."
msgstr ""

# e3834e922e984f59b7465d618d764480
#: ../../releases/1.3-alpha-1.txt:205
msgid ""
"To return to the previous rendering (without the ability to clear the "
"``FileField``), use the ``FileInput`` widget in place of "
"``ClearableFileInput``. For instance, in a ``ModelForm`` for a hypothetical "
"``Document`` model with a ``FileField`` named ``document``::"
msgstr ""

# 8fb12d4accc74bf4a591c550f9ed89d9
#: ../../releases/1.3-alpha-1.txt:219
msgid "New index on database session table"
msgstr ""

# c06b112b71b847cca3c59e3403d0d880
#: ../../releases/1.3-alpha-1.txt:221
msgid ""
"Prior to Django 1.3, the database table used by the database backend for "
"the :doc:`sessions </topics/http/sessions>` app had no index on the "
"``expire_date`` column. As a result, date-based queries on the session table "
"-- such as the query that is needed to purge old sessions -- would be very "
"slow if there were lots of sessions."
msgstr ""

# f949bb0d006f4c3c9fcc2740aad83010
#: ../../releases/1.3-alpha-1.txt:227
msgid ""
"If you have an existing project that is using the database session backend, "
"you don't have to do anything to accommodate this change. However, you may "
"get a significant performance boost if you manually add the new index to the "
"session table. The SQL that will add the index can be found by running the :"
"djadmin:`sqlindexes` admin command::"
msgstr ""

# 6eed36c82c7845aaa88bb7754c3e417d
#: ../../releases/1.3-alpha-1.txt:237
msgid "No more naughty words"
msgstr ""

# d4b7991c8c084e13b8676f6c163d12a8
#: ../../releases/1.3-alpha-1.txt:239
msgid ""
"Django has historically provided (and enforced) a list of profanities. The :"
"doc:`comments app </ref/contrib/comments/index>` has enforced this list of "
"profanities, preventing people from submitting comments that contained one "
"of those profanities."
msgstr ""

# 4f23f7588db54c6cad341f1d7aaf0399
#: ../../releases/1.3-alpha-1.txt:244
msgid ""
"Unfortunately, the technique used to implement this profanities list was "
"woefully naive, and prone to the `Scunthorpe problem`_. Fixing the built in "
"filter to fix this problem would require significant effort, and since "
"natural language processing isn't the normal domain of a web framework, we "
"have \"fixed\" the problem by making the list of prohibited words an empty "
"list."
msgstr ""

# a8075a2c7dfa409087dbf0b2fb2fe7c2
#: ../../releases/1.3-alpha-1.txt:251
msgid ""
"If you want to restore the old behavior, simply put a :setting:"
"`PROFANITIES_LIST` setting in your settings file that includes the words "
"that you want to prohibit (see the `commit that implemented this change`_ if "
"you want to see the list of words that was historically prohibited). "
"However, if avoiding profanities is important to you, you would be well "
"advised to seek out a better, less naive approach to the problem."
msgstr ""

# a757af13a4fe4d6bb707917da768eb15
#: ../../releases/1.3-alpha-1.txt:263
msgid "Localflavor changes"
msgstr ""

# c82ccb91dee24da490dcf004d809a53a
#: ../../releases/1.3-alpha-1.txt:265
msgid ""
"Django 1.3 introduces the following backwards-incompatible changes to local "
"flavors:"
msgstr ""

# c06b9adf372b48609a8fd8f80ffffba2
#: ../../releases/1.3-alpha-1.txt:268
msgid ""
"Indonesia (id) -- The province \"Nanggroe Aceh Darussalam (NAD)\" has been "
"removed from the province list in favor of the new official designation "
"\"Aceh (ACE)\"."
msgstr ""

# 1603611a7cb7440484f8e5aa313befc0
#: ../../releases/1.3-alpha-1.txt:274
msgid "Features deprecated in 1.3"
msgstr ""

# 55e6011a25844f98bc9b1db2a835d57a
#: ../../releases/1.3-alpha-1.txt:276
msgid ""
"Django 1.3 deprecates some features from earlier releases. These features "
"are still supported, but will be gradually phased out over the next few "
"release cycles."
msgstr ""

# 64435c459ab44e5389991ee4a9141c7c
#: ../../releases/1.3-alpha-1.txt:280
msgid ""
"Code taking advantage of any of the features below will raise a "
"``PendingDeprecationWarning`` in Django 1.3. This warning will be silent by "
"default, but may be turned on using Python's :mod:`warnings` module, or by "
"running Python with a ``-Wd`` or `-Wall` flag."
msgstr ""

# 6508a676db9b40f2942d7c3945771777
#: ../../releases/1.3-alpha-1.txt:285
msgid ""
"In Django 1.4, these warnings will become a ``DeprecationWarning``, which is "
"*not* silent. In Django 1.5 support for these features will be removed "
"entirely."
msgstr ""

# 21fcc38c074d428b83b4ccb3e353ea53
#: ../../releases/1.3-alpha-1.txt:291
msgid ""
"For more details, see the documentation :doc:`Django's release process </"
"internals/release-process>` and our :doc:`deprecation timeline </internals/"
"deprecation>`."
msgstr ""

# ae4ea796f5e449e6b3af33064e01c05c
#: ../../releases/1.3-alpha-1.txt:296
msgid "``mod_python`` support"
msgstr ""

# 646d3899525e4705874ae7701af0c31a
#: ../../releases/1.3-alpha-1.txt:298
msgid ""
"The ``mod_python`` library has not had a release since 2007 or a commit "
"since 2008. The Apache Foundation board voted to remove ``mod_python`` from "
"the set of active projects in its version control repositories, and its lead "
"developer has shifted all of his efforts toward the lighter, slimmer, more "
"stable, and more flexible ``mod_wsgi`` backend."
msgstr ""

# cda546bce6e746ebb1a942f2c64154cd
#: ../../releases/1.3-alpha-1.txt:304
msgid ""
"If you are currently using the ``mod_python`` request handler, you are "
"strongly encouraged to redeploy your Django instances using :doc:`mod_wsgi </"
"howto/deployment/wsgi/modwsgi>`."
msgstr ""

# 3eddc0df501c458cadcc6b3ecc03680f
#: ../../releases/1.3-alpha-1.txt:309
msgid "Function-based generic views"
msgstr ""

# f9d162af7756420fa8f43eb3586a6718
#: ../../releases/1.3-alpha-1.txt:311
msgid ""
"As a result of the introduction of class-based generic views, the function-"
"based generic views provided by Django have been deprecated. The following "
"modules and the views they contain have been deprecated:"
msgstr ""

# 07e5835db58041d8934ef40de7a73bc9
#: ../../releases/1.3-alpha-1.txt:315
msgid ":mod:`django.views.generic.create_update`"
msgstr ""

# 24f3c315f8614219a7af7eab1290f537
#: ../../releases/1.3-alpha-1.txt:316
msgid ":mod:`django.views.generic.date_based`"
msgstr ""

# fed5f021201944b284831e07d7d901c6
#: ../../releases/1.3-alpha-1.txt:317
msgid ":mod:`django.views.generic.list_detail`"
msgstr ""

# 310c63a133604acc9ac92fcd5475b19e
#: ../../releases/1.3-alpha-1.txt:318
msgid ":mod:`django.views.generic.simple`"
msgstr ""

# 55b46d664c6b4f45a7d88a56725c47a4
#: ../../releases/1.3-alpha-1.txt:321
msgid "Test client response ``template`` attribute"
msgstr ""

# ee49fcde36df42b9a1a44fde2add5950
#: ../../releases/1.3-alpha-1.txt:323
msgid ""
"Django's :ref:`test client <test-client>` returns :class:`~django.test."
"client.Response` objects annotated with extra testing information. In Django "
"versions prior to 1.3, this included a :attr:`~django.test.client.Response."
"template` attribute containing information about templates rendered in "
"generating the response: either None, a single :class:`~django.template."
"Template` object, or a list of :class:`~django.template.Template` objects. "
"This inconsistency in return values (sometimes a list, sometimes not) made "
"the attribute difficult to work with."
msgstr ""

# 57d49f12db3d48c89cf67abfca5b4b7a
#: ../../releases/1.3-alpha-1.txt:332
msgid ""
"In Django 1.3 the :attr:`~django.test.client.Response.template` attribute is "
"deprecated in favor of a new :attr:`~django.test.client.Response.templates` "
"attribute, which is always a list, even if it has only a single element or "
"no elements."
msgstr ""

# a24b23471b19485b8285af359eb67df2
#: ../../releases/1.3-alpha-1.txt:338
msgid "``DjangoTestRunner``"
msgstr ""

# 71c6431f9081457d94475e92c1f0867e
#: ../../releases/1.3-alpha-1.txt:340
msgid ""
"As a result of the introduction of support for unittest2, the features of :"
"class:`django.test.simple.DjangoTestRunner` (including fail-fast and Ctrl-C "
"test termination) have been made redundant. In view of this redundancy, :"
"class:`~django.test.simple.DjangoTestRunner` has been turned into an empty "
"placeholder class, and will be removed entirely in Django 1.5."
msgstr ""

# 69208bd1fa59467d8d2d9a282a50b0a8
#: ../../releases/1.3-alpha-1.txt:348
msgid "The Django 1.3 roadmap"
msgstr ""

# 1d86fb107ac54971bcd0855f972f5701
#: ../../releases/1.3-alpha-1.txt:350
msgid ""
"Before the final Django 1.3 release, several other preview/development "
"releases will be made available. The current schedule consists of at least "
"the following:"
msgstr ""

# b4e20d4ac9cb42f7b2eaf6363d1dd84a
#: ../../releases/1.3-alpha-1.txt:354
msgid ""
"Week of **November 29, 2010**: First Django 1.3 beta release. Final feature "
"freeze for Django 1.3."
msgstr ""

# 645d9fa483a645e49d50dce2eacf93f7
#: ../../releases/1.3-alpha-1.txt:357
msgid ""
"Week of **January 10, 2011**: First Django 1.3 release candidate. String "
"freeze for translations."
msgstr ""

# b6ca7d10424a4e719a628e5a0e0b8e49
#: ../../releases/1.3-alpha-1.txt:360
msgid "Week of **January 17, 2011**: Django 1.3 final release."
msgstr ""

# f1c438f3e1e74968826fe91b63bf5f05
#: ../../releases/1.3-alpha-1.txt:362
msgid ""
"If necessary, additional alpha, beta or release-candidate packages will be "
"issued prior to the final 1.3 release. Django 1.3 will be released "
"approximately one week after the final release candidate."
msgstr ""

# 9bff45b575564e65a4bd41bc0191c5ed
#: ../../releases/1.3-alpha-1.txt:368
msgid "What you can do to help"
msgstr ""

# 87a79674ce154b8780f1feaf9101e4cf
#: ../../releases/1.3-alpha-1.txt:370
msgid ""
"In order to provide a high-quality 1.3 release, we need your help. Although "
"this alpha release is, again, *not* intended for production use, you can "
"help the Django team by trying out the alpha codebase in a safe test "
"environment and reporting any bugs or issues you encounter. The Django "
"ticket tracker is the central place to search for open issues:"
msgstr ""

# 095bccf7a8374a238a49262a1d6e6e42
#: ../../releases/1.3-alpha-1.txt:376
msgid "http://code.djangoproject.com/timeline"
msgstr ""

# e06b91d42a234e38a0904de4caa09c75
#: ../../releases/1.3-alpha-1.txt:378
msgid ""
"Please open new tickets if no existing ticket corresponds to a problem "
"you're running into."
msgstr ""

# 797a07d9fe084d76be6ace7ae4229860
#: ../../releases/1.3-alpha-1.txt:381
msgid ""
"Additionally, discussion of Django development, including progress toward "
"the 1.3 release, takes place daily on the django-developers mailing list:"
msgstr ""

# d2807c303cf64da384a0863e40c0a629
#: ../../releases/1.3-alpha-1.txt:384
msgid "http://groups.google.com/group/django-developers"
msgstr ""

# f0f716a3670e4fb98567d9c3896bbb56
#: ../../releases/1.3-alpha-1.txt:386
msgid ""
"... and in the ``#django-dev`` IRC channel on ``irc.freenode.net``. If "
"you're interested in helping out with Django's development, feel free to "
"join the discussions there."
msgstr ""

# 455b8fcb299b480592c808ce93ef8bb0
#: ../../releases/1.3-alpha-1.txt:390
msgid ""
"Django's online documentation also includes pointers on how to contribute to "
"Django:"
msgstr ""

# 1a8c09ac5e3d4a1cb4575f96c72632fc
#: ../../releases/1.3-alpha-1.txt:393
msgid ":doc:`How to contribute to Django </internals/contributing/index>`"
msgstr ""

# 95f8fe12978943febd4e6b2a68547896
#: ../../releases/1.3-alpha-1.txt:395
msgid ""
"Contributions on any level -- developing code, writing documentation or "
"simply triaging tickets and helping to test proposed bugfixes -- are always "
"welcome and appreciated."
msgstr ""

# 54cafce9a2104f56ad049e28f30ce5ab
#: ../../releases/1.3-alpha-1.txt:399
msgid ""
"Several development sprints will also be taking place before the 1.3 "
"release; these will typically be announced in advance on the django-"
"developers mailing list, and anyone who wants to help is welcome to join in."
msgstr ""
