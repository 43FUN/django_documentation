# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-27 00:21\n"
"PO-Revision-Date: 2013-02-27 00:21\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# dcaaeb8e47364436ba077ff187f4cb97
#: ../../releases/1.6.txt:3
msgid "Django 1.6 release notes - UNDER DEVELOPMENT"
msgstr ""

# bdf6a37928fa4aa9a26811e470e66ee9
#: ../../releases/1.6.txt:5
msgid "Welcome to Django 1.6!"
msgstr ""

# bc9dc784986f4e2d80a53f633145a7aa
#: ../../releases/1.6.txt:7
msgid ""
"These release notes cover the `new features`_, as well as some `backwards "
"incompatible changes`_ you'll want to be aware of when upgrading from Django "
"1.5 or older versions. We've also dropped some features, which are detailed "
"in :doc:`our deprecation plan </internals/deprecation>`, and we've `begun "
"the deprecation process for some features`_."
msgstr ""

# 3dd4d3f8120b44c3bf566fb82ecb6b1c
#: ../../releases/1.6.txt:18
msgid "What's new in Django 1.6"
msgstr ""

# b86fda69f2f243efbb0407371daa8c92
#: ../../releases/1.6.txt:21
msgid "Simplified default project and app templates"
msgstr ""

# 67da2eae68084db0ae6e674959707a4c
#: ../../releases/1.6.txt:23
msgid ""
"The default templates used by :djadmin:`startproject` and :djadmin:"
"`startapp` have been simplified and modernized. The :doc:`admin </ref/"
"contrib/admin/index>` is now enabled by default in new projects; the :doc:"
"`sites </ref/contrib/sites>` framework no longer is. :ref:`Language "
"detection <how-django-discovers-language-preference>` and :ref:`clickjacking "
"prevention <clickjacking-prevention>` are turned on."
msgstr ""

# 2ab2de0a5f414339b26e66e9a22bd46e
#: ../../releases/1.6.txt:30
msgid ""
"If the default templates don't suit your tastes, you can use :ref:`custom "
"project and app templates <custom-app-and-project-templates>`."
msgstr ""

# 8f215878ce56478d9e648a620807da0c
#: ../../releases/1.6.txt:34
msgid "Time zone aware aggregation"
msgstr ""

# 52f70e79b67c41218f4828adfe83b48a
#: ../../releases/1.6.txt:36
msgid ""
"The support for :doc:`time zones </topics/i18n/timezones>` introduced in "
"Django 1.4 didn't work well with :meth:`QuerySet.dates() <django.db.models."
"query.QuerySet.dates>`: aggregation was always performed in UTC. This "
"limitation was lifted in Django 1.6. Use :meth:`QuerySet.datetimes() <django."
"db.models.query.QuerySet.datetimes>` to perform time zone aware aggregation "
"on a :class:`~django.db.models.DateTimeField`."
msgstr ""

# d3535f008c4e430fa6c02ebb627d83c7
#: ../../releases/1.6.txt:44
msgid "Minor features"
msgstr ""

# 1c3e1a26eba24ea7a409904be02d2a43
#: ../../releases/1.6.txt:46
msgid ""
"Authentication backends can raise ``PermissionDenied`` to immediately fail "
"the authentication chain."
msgstr ""

# 98edb2bbcfe74f6da99deedaecf7ce0b
#: ../../releases/1.6.txt:49
msgid ""
"The HttpOnly flag can be set on the CSRF cookie with :setting:"
"`CSRF_COOKIE_HTTPONLY`."
msgstr ""

# d1dab9ee44a44d10868403d964786a88
#: ../../releases/1.6.txt:52
msgid ""
"The ``assertQuerysetEqual()`` now checks for undefined order and raises "
"``ValueError`` if undefined order is spotted. The order is seen as undefined "
"if the given ``QuerySet`` isn't ordered and there are more than one ordered "
"values to compare against."
msgstr ""

# d1836703a4f048159331ab70f0447ce4
#: ../../releases/1.6.txt:57
msgid ""
"Added :meth:`~django.db.models.query.QuerySet.earliest` for symmetry with :"
"meth:`~django.db.models.query.QuerySet.latest`."
msgstr ""

# 18c6b0555cc74105a5c0373eb39a963c
#: ../../releases/1.6.txt:60
msgid ""
"In addition to :lookup:`year`, :lookup:`month` and :lookup:`day`, the ORM "
"now supports :lookup:`hour`, :lookup:`minute` and :lookup:`second` lookups."
msgstr ""

# 61e4278f34874d09870782e5aaef0f17
#: ../../releases/1.6.txt:63
msgid ""
"The default widgets for :class:`~django.forms.EmailField`, :class:`~django."
"forms.URLField`, :class:`~django.forms.IntegerField`, :class:`~django.forms."
"FloatField` and :class:`~django.forms.DecimalField` use the new type "
"attributes available in HTML5 (type='email', type='url', type='number'). "
"Note that due to erratic support of the ``number`` input type with localized "
"numbers in current browsers, Django only uses it when numeric fields are not "
"localized."
msgstr ""

# 58d042a2fd6642e6bbfca9d291d0e18a
#: ../../releases/1.6.txt:71
msgid ""
"The ``number`` argument for :ref:`lazy plural translations <lazy-plural-"
"translations>` can be provided at translation time rather than at definition "
"time."
msgstr ""

# 56eb295f40b24cd690da5c5b845351d3
#: ../../releases/1.6.txt:75
msgid ""
"For custom management commands: Verification of the presence of valid "
"settings in commands that ask for it by using the :attr:`~django.core."
"management.BaseCommand.can_import_settings` internal option is now performed "
"independently from handling of the locale that should be active during the "
"execution of the command. The latter can now be influenced by the new :attr:"
"`~django.core.management.BaseCommand.leave_locale_alone` internal option. "
"See :ref:`management-commands-and-locales` for more details."
msgstr ""

# 485b67d6070c4ef8af7ab7cbd0d3ed50
#: ../../releases/1.6.txt:84
msgid ""
"The :attr:`~django.views.generic.edit.DeletionMixin.success_url` of :class:"
"`~django.views.generic.edit.DeletionMixin` is now interpolated with its "
"``object``\\'s ``__dict__``."
msgstr ""

# 499ebb65daf344a6ae4ae29804c3f2a8
#: ../../releases/1.6.txt:88
msgid ""
":class:`~django.http.HttpResponseRedirect` and :class:`~django.http."
"HttpResponsePermanentRedirect` now provide an ``url`` attribute (equivalent "
"to the URL the response will redirect to)."
msgstr ""

# ea8f19158c4842239e86695b616f2d30
#: ../../releases/1.6.txt:92
msgid ""
"The ``MemcachedCache`` cache backend now uses the latest :mod:`pickle` "
"protocol available."
msgstr ""

# 19de4520b531495a9fd70247c33f280c
#: ../../releases/1.6.txt:95
msgid "Added the :attr:`django.db.models.ForeignKey.db_constraint` option."
msgstr ""

# d0934217294c4d1c99dff2a4d35a70e7
#: ../../releases/1.6.txt:98
msgid ""
"The jQuery library embedded in the admin has been upgraded to version 1.9.1."
msgstr ""

# 2d7d6f7c62df4e18ab377d7f3b46440a
#: ../../releases/1.6.txt:100
msgid ""
"Syndication feeds (:mod:`django.contrib.syndication`) can now pass extra "
"context through to feed templates using a new `Feed.get_context_data()` "
"callback."
msgstr ""

# c713a53bccaa48bba1a2f7376a4d2c94
#: ../../releases/1.6.txt:104
msgid ""
"The admin list columns have a ``column-<field_name>`` class in the HTML so "
"the columns header can be styled with CSS, e.g. to set a column width."
msgstr ""

# 3ecdf19e5b024c3484fbdd247053a99d
#: ../../releases/1.6.txt:108
msgid "Backwards incompatible changes in 1.6"
msgstr ""

# 9679adab1d624b0e9bba3deb5824f452
#: ../../releases/1.6.txt:110
msgid ""
"The ``django.db.models.query.EmptyQuerySet`` can't be instantiated any more "
"- it is only usable as a marker class for checking if :meth:`~django.db."
"models.query.QuerySet.none` has been called: ``isinstance(qs.none(), "
"EmptyQuerySet)``"
msgstr ""

# 55d1ac2c1cb646ffa3a957e7fbb00144
#: ../../releases/1.6.txt:115
msgid ""
":meth:`QuerySet.dates() <django.db.models.query.QuerySet.dates>` raises an "
"error if it's used on :class:`~django.db.models.DateTimeField` when time "
"zone support is active. Use :meth:`QuerySet.datetimes() <django.db.models."
"query.QuerySet.datetimes>` instead."
msgstr ""

# dd39d60da06b43778b708f27866ec782
#: ../../releases/1.6.txt:120
msgid ""
":meth:`QuerySet.dates() <django.db.models.query.QuerySet.dates>` returns a "
"list of :class:`~datetime.date`. It used to return a list of :class:"
"`~datetime.datetime`."
msgstr ""

# 19ed41b7fd5a4782a2aa2ff5357fd692
#: ../../releases/1.6.txt:124
msgid ""
"The :attr:`~django.contrib.admin.ModelAdmin.date_hierarchy` feature of the "
"admin on a :class:`~django.db.models.DateTimeField` requires time zone "
"definitions in the database when :setting:`USE_TZ` is ``True``. :ref:`Learn "
"more <database-time-zone-definitions>`."
msgstr ""

# 03fff95470754ec8a87df1eadf5f1946
#: ../../releases/1.6.txt:129
msgid ""
"Accessing ``date_list`` in the context of a date-based generic view requires "
"time zone definitions in the database when the view is based on a :class:"
"`~django.db.models.DateTimeField` and :setting:`USE_TZ` is ``True``. :ref:"
"`Learn more <database-time-zone-definitions>`."
msgstr ""

# 657398f139884240b905fe16e0db6d01
#: ../../releases/1.6.txt:134
msgid ""
"Model fields named ``hour``, ``minute`` or ``second`` may clash with the new "
"lookups. Append an explicit :lookup:`exact` lookup if this is an issue."
msgstr ""

# 89effa384a08416eac0bc5e85763cacc
#: ../../releases/1.6.txt:137
msgid ""
"If your CSS/Javascript code used to access HTML input widgets by type, you "
"should review it as ``type='text'`` widgets might be now output as "
"``type='email'``, ``type='url'`` or ``type='number'`` depending on their "
"corresponding field type."
msgstr ""

# d8870c3a94214df987a113bf5a5dadae
#: ../../releases/1.6.txt:142
msgid ""
"Extraction of translatable literals from templates with the :djadmin:"
"`makemessages` command now correctly detects i18n constructs when they are "
"located after a ``{#`` / ``#}``-type comment on the same line. E.g.:"
msgstr ""

# e83214a372da4483971b65f05e8835a6
#: ../../releases/1.6.txt:150
msgid ""
"(Related to the above item.) Validation of the placement of :ref:`translator-"
"comments-in-templates` specified using ``{#`` / ``#}`` is now stricter. All "
"translator comments not located at the end of their respective lines in a "
"template are ignored and a warning is generated by :djadmin:`makemessages` "
"when it finds them. E.g.:"
msgstr ""

# 2e41efbab4a74e3daf06165d5ddbda19
#: ../../releases/1.6.txt:162
msgid ""
"The :doc:`comments </ref/contrib/comments/index>` app now uses a "
"``GenericIPAddressField`` for storing commenters' IP addresses, to support "
"comments submitted from IPv6 addresses. Until now, it stored them in an "
"``IPAddressField``, which is only meant to support IPv4. When saving a "
"comment made from an IPv6 address, the address would be silently truncated "
"on MySQL databases, and raise an exception on Oracle. You will need to "
"change the column type in your database to benefit from this change."
msgstr ""

# c69e2f4f62ee4cbe9b776ac023754d28
#: ../../releases/1.6.txt:169
msgid "For MySQL, execute this query on your project's database:"
msgstr ""

# cb98eda7e7344c79a7253204f9e5a57f
#: ../../releases/1.6.txt:175
msgid "For Oracle, execute this query:"
msgstr ""

# e0126d65241d49179332328928eadcb4
#: ../../releases/1.6.txt:181
msgid ""
"If you do not apply this change, the behaviour is unchanged: on MySQL, IPv6 "
"addresses are silently truncated; on Oracle, an exception is generated. No "
"database change is needed for SQLite or PostgreSQL databases."
msgstr ""

# 020e720decfb4ff99da80fc94d715f4f
#: ../../releases/1.6.txt:188
msgid ""
"In addition to the changes outlined in this section, be sure to review the :"
"doc:`deprecation plan </internals/deprecation>` for any features that have "
"been removed. If you haven't updated your code within the deprecation "
"timeline for a given feature, its removal may appear as a backwards "
"incompatible change."
msgstr ""

# fc2724b051bd4d48a6f42796a6f2dda9
#: ../../releases/1.6.txt:195
msgid "Features deprecated in 1.6"
msgstr ""

# aa46321526494e90aa8136fd427c9bdb
#: ../../releases/1.6.txt:198
msgid "Changes to :ttag:`cycle` and :ttag:`firstof`"
msgstr ""

# 3a83f30ec56845149f6d6d8d505641cb
#: ../../releases/1.6.txt:200
msgid ""
"The template system generally escapes all variables to avoid XSS attacks. "
"However, due to an accident of history, the :ttag:`cycle` and :ttag:"
"`firstof` tags render their arguments as-is."
msgstr ""

# 9985813b0aed48fc9732dbe6b2dbc173
#: ../../releases/1.6.txt:204
msgid ""
"Django 1.6 starts a process to correct this inconsistency. The ``future`` "
"template library provides alternate implementations of :ttag:`cycle` and :"
"ttag:`firstof` that autoescape their inputs. If you're using these tags, "
"you're encourage to include the following line at the top of your templates "
"to enable the new behavior::"
msgstr ""

# 0c1055beadc74b11a22cef117c2dc050
#: ../../releases/1.6.txt:212
msgid "or::"
msgstr ""

# 9fd2d01f3bac43079d2a1f2ca46f091d
#: ../../releases/1.6.txt:216
msgid ""
"The tags implementing the old behavior have been deprecated, and in Django "
"1.8, the old behavior will be replaced with the new behavior. To ensure "
"compatibility with future versions of Django, existing templates should be "
"modified to use the ``future`` versions."
msgstr ""

# a7d2ab3482034aaf98fd5a57dcdb1793
#: ../../releases/1.6.txt:221
msgid ""
"If necessary, you can temporarily disable auto-escaping with :func:`~django."
"utils.safestring.mark_safe` or :ttag:`{% autoescape off %} <autoescape>`."
msgstr ""

# e42cab7a2ac2412b81749cde32ebea02
#: ../../releases/1.6.txt:226
msgid "``SEND_BROKEN_LINK_EMAILS`` setting"
msgstr ""

# 5ad6fb422a1b469ba2eb2886ba2a5727
#: ../../releases/1.6.txt:228
msgid ""
":class:`~django.middleware.common.CommonMiddleware` used to provide basic "
"reporting of broken links by email when ``SEND_BROKEN_LINK_EMAILS`` is set "
"to ``True``."
msgstr ""

# ab33c26d881a47ac95f3e30708b5f55a
#: ../../releases/1.6.txt:232
msgid ""
"Because of intractable ordering problems between :class:`~django.middleware."
"common.CommonMiddleware` and :class:`~django.middleware.locale."
"LocaleMiddleware`, this feature was split out into a new middleware: :class:"
"`~django.middleware.common.BrokenLinkEmailsMiddleware`."
msgstr ""

# 256d5ab6af8b4dd2a11f49bf3fade612
#: ../../releases/1.6.txt:238
msgid ""
"If you're relying on this feature, you should add ``'django.middleware."
"common.BrokenLinkEmailsMiddleware'`` to your :setting:`MIDDLEWARE_CLASSES` "
"setting and remove ``SEND_BROKEN_LINK_EMAILS`` from your settings."
msgstr ""

# 658311b5b7e449b680755e7af431487d
#: ../../releases/1.6.txt:244
msgid "``_has_changed`` method on widgets"
msgstr ""

# 656936d5643d4840837fe9054726273d
#: ../../releases/1.6.txt:246
msgid ""
"If you defined your own form widgets and defined the ``_has_changed`` method "
"on a widget, you should now define this method on the form field itself."
msgstr ""

# 2cbb17b0e85d4595ac8883c70a9bbc64
#: ../../releases/1.6.txt:250
msgid "``module_name`` model meta attribute"
msgstr ""

# 658919ac4784406587b2d88c23dfaa77
#: ../../releases/1.6.txt:252
msgid ""
"``Model._meta.module_name`` was renamed to ``model_name``. Despite being a "
"private API, it will go through a regular deprecation path."
msgstr ""
