# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2015.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-12-02 11:18+0200\n"
"PO-Revision-Date: 2015-11-17 10:48+0200\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#: ../../releases/1.7.9.txt:3
msgid "Django 1.7.9 release notes"
msgstr ""

#: ../../releases/1.7.9.txt:5
msgid "*July 8, 2015*"
msgstr ""

#: ../../releases/1.7.9.txt:7
msgid "Django 1.7.9 fixes several security issues and bugs in 1.7.8."
msgstr ""

#: ../../releases/1.7.9.txt:10
msgid "Denial-of-service possibility by filling session store"
msgstr ""

#: ../../releases/1.7.9.txt:12
msgid ""
"In previous versions of Django, the session backends created a new empty "
"record in the session storage anytime ``request.session`` was accessed and "
"there was a session key provided in the request cookies that didn't already "
"have a session record. This could allow an attacker to easily create many "
"new session records simply by sending repeated requests with unknown session "
"keys, potentially filling up the session store or causing other users' "
"session records to be evicted."
msgstr ""

#: ../../releases/1.7.9.txt:20
msgid ""
"The built-in session backends now create a session record only if the "
"session is actually modified; empty session records are not created. Thus "
"this potential DoS is now only possible if the site chooses to expose a "
"session-modifying view to anonymous users."
msgstr ""

#: ../../releases/1.7.9.txt:25
msgid ""
"As each built-in session backend was fixed separately (rather than a fix in "
"the core sessions framework), maintainers of third-party session backends "
"should check whether the same vulnerability is present in their backend and "
"correct it if so."
msgstr ""

#: ../../releases/1.7.9.txt:31
msgid "Header injection possibility since validators accept newlines in input"
msgstr ""

#: ../../releases/1.7.9.txt:33
msgid ""
"Some of Django's built-in validators (:class:`~django.core.validators."
"EmailValidator`, most seriously) didn't prohibit newline characters (due to "
"the usage of ``$`` instead of ``\\Z`` in the regular expressions). If you "
"use values with newlines in HTTP response or email headers, you can suffer "
"from header injection attacks. Django itself isn't vulnerable because :class:"
"`~django.http.HttpResponse` and the mail sending utilities in :mod:`django."
"core.mail` prohibit newlines in HTTP and SMTP headers, respectively. While "
"the validators have been fixed in Django, if you're creating HTTP responses "
"or email messages in other ways, it's a good idea to ensure that those "
"methods prohibit newlines as well. You might also want to validate that any "
"existing data in your application doesn't contain unexpected newlines."
msgstr ""

#: ../../releases/1.7.9.txt:46
msgid ""
":func:`~django.core.validators.validate_ipv4_address`, :func:`~django.core."
"validators.validate_slug`, and :class:`~django.core.validators.URLValidator` "
"are also affected, however, as of Django 1.6 the ``GenericIPAddresseField``, "
"``IPAddressField``, ``SlugField``, and ``URLField`` form fields which use "
"these validators all strip the input, so the possibility of newlines "
"entering your data only exists if you are using these validators outside of "
"the form fields."
msgstr ""

#: ../../releases/1.7.9.txt:54
msgid ""
"The undocumented, internally unused ``validate_integer()`` function is now "
"stricter as it validates using a regular expression instead of simply "
"casting the value using ``int()`` and checking if an exception was raised."
msgstr ""

#: ../../releases/1.7.9.txt:59
msgid "Bugfixes"
msgstr ""

#: ../../releases/1.7.9.txt:61
msgid ""
"Prevented the loss of ``null``/``not null`` column properties during field "
"renaming of MySQL databases (:ticket:`24817`)."
msgstr ""

#: ../../releases/1.7.9.txt:64
msgid ""
"Fixed ``SimpleTestCase.assertRaisesMessage()`` on Python 2.7.10 (:ticket:"
"`24903`)."
msgstr ""
