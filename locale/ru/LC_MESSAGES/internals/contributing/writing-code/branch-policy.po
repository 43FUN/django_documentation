# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-02-15 15:13\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 4c507582c04a4c12905ad4a6b4dc5711
#: ../../internals/contributing/writing-code/branch-policy.txt:3
msgid "Branch policy"
msgstr ""

# b23cc654706c4ad99ceb7c7a228bd4a6
#: ../../internals/contributing/writing-code/branch-policy.txt:5
msgid ""
"In general, the trunk must be kept stable. People should be able to run "
"production sites against the trunk at any time. Additionally, commits to "
"trunk ought to be as atomic as possible -- smaller changes are better. Thus, "
"large feature changes -- that is, changes too large to be encapsulated in a "
"single patch, or changes that need multiple eyes on them -- must happen on "
"dedicated branches."
msgstr ""

# 249e17d87c5c4ced8b628c5fe5be6dd4
#: ../../internals/contributing/writing-code/branch-policy.txt:12
msgid ""
"This means that if you want to work on a large feature -- anything that "
"would take more than a single patch, or requires large-scale refactoring -- "
"you need to do it on a feature branch. Our development process recognizes "
"two options for feature branches:"
msgstr ""

# 69539a31ae50435fa733931aa7802475
#: ../../internals/contributing/writing-code/branch-policy.txt:17
msgid ""
"Feature branches using a distributed revision control system like Git_, "
"Mercurial_, Bazaar_, etc."
msgstr ""

# 23e99717f6e147cc86280c7b29758a44
#: ../../internals/contributing/writing-code/branch-policy.txt:20
msgid ""
"If you're familiar with one of these tools, this is probably your best "
"option since it doesn't require any support or buy-in from the Django core "
"developers."
msgstr ""

# 7eecd2d16ee14d3fa36b5179766e3ee0
#: ../../internals/contributing/writing-code/branch-policy.txt:24
msgid ""
"However, do keep in mind that Django will continue to use Subversion for the "
"foreseeable future, and this will naturally limit the recognition of your "
"branch. Further, if your branch becomes eligible for merging to trunk you'll "
"need to find a core developer familiar with your DVCS of choice who'll "
"actually perform the merge."
msgstr ""

# 8799334aba1f4b91af068dbcbfa1d5c7
#: ../../internals/contributing/writing-code/branch-policy.txt:30
msgid ""
"If you do decided to start a distributed branch of Django and choose to make "
"it public, please add the branch to the `Django branches`_ wiki page."
msgstr ""

# 6d3b89d61c874e459af886cf461af927
#: ../../internals/contributing/writing-code/branch-policy.txt:34
msgid ""
"Feature branches using SVN have a higher bar. If you want a branch in SVN "
"itself, you'll need a \"mentor\" among the :doc:`core committers </internals/"
"committers>`. This person is responsible for actually creating the branch, "
"monitoring your process (see below), and ultimately merging the branch into "
"trunk."
msgstr ""

# 2b711b1972484310abf496d36da2d0cf
#: ../../internals/contributing/writing-code/branch-policy.txt:40
msgid ""
"If you want a feature branch in SVN, you'll need to ask in `django-"
"developers`_ for a mentor."
msgstr ""

# 4a36f53cf9684621a968cbae9c509999
#: ../../internals/contributing/writing-code/branch-policy.txt:49
msgid "Branch rules"
msgstr ""

# eede3d15e0424bb1a8c8cf0907444ad8
#: ../../internals/contributing/writing-code/branch-policy.txt:51
msgid ""
"We've got a few rules for branches born out of experience with what makes a "
"successful Django branch."
msgstr ""

# 14d72d35c7514ca6972bd41c507b6430
#: ../../internals/contributing/writing-code/branch-policy.txt:54
msgid ""
"DVCS branches are obviously not under central control, so we have no way of "
"enforcing these rules. However, if you're using a DVCS, following these "
"rules will give you the best chance of having a successful branch (read: "
"merged back to trunk)."
msgstr ""

# 966bf7850ba943b2898c7de4de351b77
#: ../../internals/contributing/writing-code/branch-policy.txt:59
msgid ""
"Developers with branches in SVN, however, **must** follow these rules. The "
"branch mentor will keep on eye on the branch and **will delete it** if these "
"rules are broken."
msgstr ""

# cc8ac0ecee2a4005842441df5b0c090b
#: ../../internals/contributing/writing-code/branch-policy.txt:63
msgid ""
"Only branch entire copies of the Django tree, even if work is only happening "
"on part of that tree. This makes it painless to switch to a branch."
msgstr ""

# 946bed1582ff4211ad3d008a738668a4
#: ../../internals/contributing/writing-code/branch-policy.txt:67
msgid ""
"Merge changes from trunk no less than once a week, and preferably every "
"couple-three days."
msgstr ""

# 762ce1cf54e746118b00a282d66e65d5
#: ../../internals/contributing/writing-code/branch-policy.txt:70
msgid ""
"In our experience, doing regular trunk merges is often the difference "
"between a successful branch and one that fizzles and dies."
msgstr ""

# b39eea54d9a14652b794f40d98cc0e6e
#: ../../internals/contributing/writing-code/branch-policy.txt:73
msgid ""
"If you're working on an SVN branch, you should be using `svnmerge.py`_ to "
"track merges from trunk."
msgstr ""

# f12f4987edfd476ca1f1ebf40f0337f2
#: ../../internals/contributing/writing-code/branch-policy.txt:76
msgid ""
"Keep tests passing and documentation up-to-date. As with patches, we'll only "
"merge a branch that comes with tests and documentation."
msgstr ""

# 4bd56e2f304047a0b97f3bb6ae79b1b5
#: ../../internals/contributing/writing-code/branch-policy.txt:81
msgid ""
"Once the branch is stable and ready to be merged into the trunk, alert "
"`django-developers`_."
msgstr ""

# a4a4c95bb5324807b6707ba933191357
#: ../../internals/contributing/writing-code/branch-policy.txt:84
msgid ""
"After a branch has been merged, it should be considered \"dead\"; write "
"access to it will be disabled, and old branches will be periodically "
"\"trimmed.\" To keep our SVN wrangling to a minimum, we won't be merging "
"from a given branch into the trunk more than once."
msgstr ""

# d92dca4de976476a8701ed41a6394563
#: ../../internals/contributing/writing-code/branch-policy.txt:90
msgid "Using branches"
msgstr ""

# 83866bcb83374cfa8c8e3df96f3a545d
#: ../../internals/contributing/writing-code/branch-policy.txt:92
msgid "To use a branch, you'll need to do two things:"
msgstr ""

# b2f00d2f938a42789cee21e5303b4084
#: ../../internals/contributing/writing-code/branch-policy.txt:94
msgid "Get the branch's code through Subversion."
msgstr ""

# a3f79e7fd1124220a08d2c70be94c4c6
#: ../../internals/contributing/writing-code/branch-policy.txt:96
msgid ""
"Point your Python ``site-packages`` directory at the branch's version of the "
"``django`` package rather than the version you already have installed."
msgstr ""

# c35155e87ab4448a9b51f296daf4a299
#: ../../internals/contributing/writing-code/branch-policy.txt:101
msgid "Getting the code from Subversion"
msgstr ""

# e6187c09e21c44319a78efeb6260d149
#: ../../internals/contributing/writing-code/branch-policy.txt:103
msgid ""
"To get the latest version of a branch's code, check it out using Subversion:"
msgstr ""

# 35a41ccc4a6047b28d7a17369898ccb3
#: ../../internals/contributing/writing-code/branch-policy.txt:109
msgid ""
"...where ``<branch>`` is the branch's name. See the `list of branch names`_."
msgstr ""

# 91eb55e03419492b8acc08dddbf540aa
#: ../../internals/contributing/writing-code/branch-policy.txt:111
msgid ""
"Alternatively, you can automatically convert an existing directory of the "
"Django source code as long as you've checked it out via Subversion. To do "
"the conversion, execute this command from within your ``django`` directory:"
msgstr ""

# d9bc1e5fe85345abae57ed03de47fd5e
#: ../../internals/contributing/writing-code/branch-policy.txt:119
msgid ""
"The advantage of using ``svn switch`` instead of ``svn co`` is that the "
"``switch`` command retains any changes you might have made to your local "
"copy of the code. It attempts to merge those changes into the \"switched\" "
"code. The disadvantage is that it may cause conflicts with your local "
"changes if the \"switched\" code has altered the same lines of code."
msgstr ""

# 53c49816136448a9b8950e6fe536fa2e
#: ../../internals/contributing/writing-code/branch-policy.txt:125
msgid ""
"(Note that if you use ``svn switch``, you don't need to point Python at the "
"new version, as explained in the next section.)"
msgstr ""

# 706d645a9a394236b0e3b7f4d036c8bf
#: ../../internals/contributing/writing-code/branch-policy.txt:133
msgid "Pointing Python at the new Django version"
msgstr ""

# a1dbc63f3fd8425fa5c867a0e571207b
#: ../../internals/contributing/writing-code/branch-policy.txt:135
msgid ""
"Once you've retrieved the branch's code, you'll need to change your Python "
"``site-packages`` directory so that it points to the branch version of the "
"``django`` directory. (The ``site-packages`` directory is somewhere such as "
"``/usr/lib/python2.7/site-packages`` or ``/usr/local/lib/python2.7/site-"
"packages`` or ``C:\\Python\\site-packages``.)"
msgstr ""

# a8a40724b9dd47aa8ead818c669d1c6a
#: ../../internals/contributing/writing-code/branch-policy.txt:141
msgid ""
"The simplest way to do this is by renaming the old ``django`` directory to "
"``django.OLD`` and moving the trunk version of the code into the directory "
"and calling it ``django``."
msgstr ""

# 818204479fe84062ab2dbed7b4c98237
#: ../../internals/contributing/writing-code/branch-policy.txt:145
msgid ""
"Alternatively, you can use a symlink called ``django`` that points to the "
"location of the branch's ``django`` package. If you want to switch back, "
"just change the symlink to point to the old code."
msgstr ""

# 9be46c46fcd8476ebfb38b030aa9dcf7
#: ../../internals/contributing/writing-code/branch-policy.txt:149
msgid ""
"A third option is to use a path file (``<something>.pth``). This is a "
"feature of the :mod:`site` module. First, make sure there are no files, "
"directories or symlinks named ``django`` in your ``site-packages`` "
"directory. Then create a text file named ``django.pth`` and save it to your "
"``site-packages`` directory. That file should contain a path to your copy of "
"Django on a single line and optional comments. Here is an example that "
"points to multiple branches. Just uncomment the line for the branch you want "
"to use ('trunk' in this example) and make sure all other lines are "
"commented::"
msgstr ""
