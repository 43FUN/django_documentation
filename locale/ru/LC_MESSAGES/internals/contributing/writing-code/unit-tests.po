# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-07 10:34\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 0247e52a541f41649e6254a09a5e6109
#: ../../internals/contributing/writing-code/unit-tests.txt:3
msgid "Unit tests"
msgstr ""

# f3c0f2d3e10b4f4a962afb46ee97d996
#: ../../internals/contributing/writing-code/unit-tests.txt:5
msgid ""
"Django comes with a test suite of its own, in the ``tests`` directory of the "
"code base. It's our policy to make sure all tests pass at all times."
msgstr ""

# 261474fda4de4563b77c363f15d2d8d8
#: ../../internals/contributing/writing-code/unit-tests.txt:8
msgid "The tests cover:"
msgstr ""

# d2f3d859ccdc4d268c7821a4d13ab8cf
#: ../../internals/contributing/writing-code/unit-tests.txt:10
msgid ""
"Models, the database API and everything else in core Django core (``tests/"
"``),"
msgstr ""

# 2f550d629aad4a65995b32a70be61fff
#: ../../internals/contributing/writing-code/unit-tests.txt:11
msgid ""
":ref:`contrib-apps` (``django/contrib/<app>/tests`` or ``tests/<app>_...``)."
msgstr ""

# 7f6ff129113b4997aac9c203e73d5c01
#: ../../internals/contributing/writing-code/unit-tests.txt:13
msgid "We appreciate any and all contributions to the test suite!"
msgstr ""

# be9ca7014a554d95b683dbdd0ddd88ec
#: ../../internals/contributing/writing-code/unit-tests.txt:15
msgid ""
"The Django tests all use the testing infrastructure that ships with Django "
"for testing applications. See :doc:`Testing Django applications </topics/"
"testing/overview>` for an explanation of how to write new tests."
msgstr ""

# bccd108e0b9c46afbf78b6cc241a991a
#: ../../internals/contributing/writing-code/unit-tests.txt:22
msgid "Running the unit tests"
msgstr ""

# afa7d82f79f74bffb57b7ef142294e12
#: ../../internals/contributing/writing-code/unit-tests.txt:25
msgid "Quickstart"
msgstr ""

# 369eea77fc2840dfa1972df305efcd27
#: ../../internals/contributing/writing-code/unit-tests.txt:27
msgid ""
"Running the tests requires a Django settings module that defines the "
"databases to use. To make it easy to get started, Django provides a sample "
"settings module that uses the SQLite database. To run the tests with this "
"sample ``settings`` module:"
msgstr ""

# ef234fbfcd7d4bbfb65aadd53ad24a1a
#: ../../internals/contributing/writing-code/unit-tests.txt:41
msgid "Using another ``settings`` module"
msgstr ""

# 3253a2612f254d1ea64b46aca5dcf83a
#: ../../internals/contributing/writing-code/unit-tests.txt:43
msgid ""
"The included settings module allows you to run the test suite using SQLite. "
"If you want to test behavior using a different database (and if you're "
"proposing patches for Django, it's a good idea to test across databases), "
"you may need to define your own settings file."
msgstr ""

# e124829e407e456485e0ef9cc9093577
#: ../../internals/contributing/writing-code/unit-tests.txt:48
msgid ""
"To run the tests with different settings, ensure that the module is on your "
"``PYTHONPATH`` and pass the module with ``--settings``."
msgstr ""

# 3073f0ac8cba4fd6a2ab695d229004b4
#: ../../internals/contributing/writing-code/unit-tests.txt:51
msgid ""
"The :setting:`DATABASES` setting in any test settings module needs to define "
"two databases:"
msgstr ""

# 894570fd32c545d0b3253b44539ee4fb
#: ../../internals/contributing/writing-code/unit-tests.txt:54
msgid ""
"A ``default`` database. This database should use the backend that you want "
"to use for primary testing"
msgstr ""

# 994f83264b61426faa8deaa9d844b124
#: ../../internals/contributing/writing-code/unit-tests.txt:57
msgid ""
"A database with the alias ``other``. The ``other`` database is used to "
"establish that queries can be directed to different databases. As a result, "
"this database can use any backend you want. It doesn't need to use the same "
"backend as the ``default`` database (although it can use the same backend if "
"you want to)."
msgstr ""

# c068275419c641f79f922df6259c3934
#: ../../internals/contributing/writing-code/unit-tests.txt:63
msgid ""
"If you're using a backend that isn't SQLite, you will need to provide other "
"details for each database:"
msgstr ""

# 165db053d7da419ab66473178018c418
#: ../../internals/contributing/writing-code/unit-tests.txt:66
msgid ""
"The :setting:`USER` option needs to specify an existing user account for the "
"database."
msgstr ""

# 7509d45e119643c5bc4ce0b94abafeb2
#: ../../internals/contributing/writing-code/unit-tests.txt:69
msgid ""
"The :setting:`PASSWORD` option needs to provide the password for the :"
"setting:`USER` that has been specified."
msgstr ""

# 668c6656ef31449987f412f100be8703
#: ../../internals/contributing/writing-code/unit-tests.txt:72
msgid ""
"The :setting:`NAME` option must be the name of an existing database to which "
"the given user has permission to connect. The unit tests will not touch this "
"database; the test runner creates a new database whose name is :setting:"
"`NAME` prefixed with ``test_``, and this test database is deleted when the "
"tests are finished. This means your user account needs permission to execute "
"``CREATE DATABASE``."
msgstr ""

# ab46b98dc39e4dea9464b0eb96f46497
#: ../../internals/contributing/writing-code/unit-tests.txt:79
msgid ""
"You will also need to ensure that your database uses UTF-8 as the default "
"character set. If your database server doesn't use UTF-8 as a default "
"charset, you will need to include a value for :setting:`TEST_CHARSET` in the "
"settings dictionary for the applicable database."
msgstr ""

# 4a0335ab1ebe45c28dfb7ee71f18b7b0
#: ../../internals/contributing/writing-code/unit-tests.txt:85
msgid "Running only some of the tests"
msgstr ""

# ea053a8beae34339a84a8c7641e20cc4
#: ../../internals/contributing/writing-code/unit-tests.txt:87
msgid ""
"Django's entire test suite takes a while to run, and running every single "
"test could be redundant if, say, you just added a test to Django that you "
"want to run quickly without running everything else. You can run a subset of "
"the unit tests by appending the names of the test modules to ``runtests.py`` "
"on the command line."
msgstr ""

# 75ef9a158e264a728a2b033e9191411d
#: ../../internals/contributing/writing-code/unit-tests.txt:93
msgid ""
"For example, if you'd like to run tests only for generic relations and "
"internationalization, type:"
msgstr ""

# 71cc065c8ac94af78a38b3700b87b03e
#: ../../internals/contributing/writing-code/unit-tests.txt:100
msgid ""
"How do you find out the names of individual tests? Look in ``tests/`` â€” each "
"directory name there is the name of a test. Contrib app names are also valid "
"test names."
msgstr ""

# 5b8f1abe905344ef83bdce52748e50f9
#: ../../internals/contributing/writing-code/unit-tests.txt:104
msgid ""
"If you just want to run a particular class of tests, you can specify a list "
"of paths to individual test classes. For example, to run the "
"``TranslationTests`` of the ``i18n`` module, type:"
msgstr ""

# a3ae486f10a44d1e8d24887179da2fa6
#: ../../internals/contributing/writing-code/unit-tests.txt:112
msgid "Going beyond that, you can specify an individual test method like this:"
msgstr ""

# 2b5783bf7f9d4eb498dabd1ab0987cfd
#: ../../internals/contributing/writing-code/unit-tests.txt:119
msgid "Running the Selenium tests"
msgstr ""

# b7bbbc3933744231b8dd8ded972f9857
#: ../../internals/contributing/writing-code/unit-tests.txt:121
msgid ""
"Some admin tests require Selenium 2, Firefox and Python >= 2.6 to work via a "
"real Web browser. To allow those tests to run and not be skipped, you must "
"install the selenium_ package (version > 2.13) into your Python path and run "
"the tests with the ``--selenium`` option:"
msgstr ""

# 51ddc4d63958491fa20595ea0c4a0b6d
#: ../../internals/contributing/writing-code/unit-tests.txt:134
msgid "Running all the tests"
msgstr ""

# ed809e0a8f7845b0a41463907306c47f
#: ../../internals/contributing/writing-code/unit-tests.txt:136
msgid ""
"If you want to run the full suite of tests, you'll need to install a number "
"of dependencies:"
msgstr ""

# cf4953fa34434bd98607823acbdca5b9
#: ../../internals/contributing/writing-code/unit-tests.txt:139
msgid "bcrypt_"
msgstr ""

# 450c4ab6d86f4ee793845c2d4d537f0c
#: ../../internals/contributing/writing-code/unit-tests.txt:140
msgid "docutils_"
msgstr ""

# 5ae1cc2741784cbab149bbd656cccc68
#: ../../internals/contributing/writing-code/unit-tests.txt:141
msgid "Pillow_"
msgstr ""

# e5b45162283043aba59f6455959c0a1e
#: ../../internals/contributing/writing-code/unit-tests.txt:142
msgid "PyYAML_"
msgstr ""

# 6a4528996e91415298e5cb65b1250c6e
#: ../../internals/contributing/writing-code/unit-tests.txt:143
msgid "pytz_"
msgstr ""

# e5f1f6413085443494b60687677dc34a
#: ../../internals/contributing/writing-code/unit-tests.txt:144
msgid "setuptools_"
msgstr ""

# 2d2310f2f7f945ecbf8120f224eb85a7
#: ../../internals/contributing/writing-code/unit-tests.txt:145
msgid "memcached_, plus a :ref:`supported Python binding <memcached>`"
msgstr ""

# 0e44a578c09f4424babf3890177abbc3
#: ../../internals/contributing/writing-code/unit-tests.txt:146
msgid "gettext_ (:ref:`gettext_on_windows`)"
msgstr ""

# f1b694a9c6ac43a4b3c94f8ab0d3f5a8
#: ../../internals/contributing/writing-code/unit-tests.txt:147
msgid "selenium_"
msgstr ""

# e052932722c344ffb3fa8efa1c460b5b
#: ../../internals/contributing/writing-code/unit-tests.txt:149
msgid ""
"You can find these dependencies in `pip requirements files`_ inside the "
"``tests/requirements`` directory of the Django source tree and install them "
"like so::"
msgstr ""

# 9a65bbd24798451b896d8f5e54b7fc92
#: ../../internals/contributing/writing-code/unit-tests.txt:155
msgid ""
"You can also install the database adapter(s) of your choice using ``oracle."
"txt``, ``mysql.txt``, or ``postgres.txt``."
msgstr ""

# 25156f7691584645a8e54ce3d1345a5e
#: ../../internals/contributing/writing-code/unit-tests.txt:158
msgid ""
"If you want to test the memcached cache backend, you'll also need to define "
"a :setting:`CACHES` setting that points at your memcached instance."
msgstr ""

# 0af84f879705482cbe8c54c50ff96e3c
#: ../../internals/contributing/writing-code/unit-tests.txt:161
msgid ""
"To run the GeoDjango tests, you will need to :doc:`setup a spatial database "
"and install the Geospatial libraries</ref/contrib/gis/install/index>`."
msgstr ""

# 83e53172de334482ad19920fc908f65c
#: ../../internals/contributing/writing-code/unit-tests.txt:164
msgid ""
"Each of these dependencies is optional. If you're missing any of them, the "
"associated tests will be skipped."
msgstr ""

# 50b73dbd4de54cc3a9219d4ed1f62756
#: ../../internals/contributing/writing-code/unit-tests.txt:179
msgid "Code coverage"
msgstr ""

# be14d98212fe4462a0e80ecb788c2568
#: ../../internals/contributing/writing-code/unit-tests.txt:181
msgid ""
"Contributors are encouraged to run coverage on the test suite to identify "
"areas that need additional tests. The coverage tool installation and use is "
"described in :ref:`testing code coverage<topics-testing-code-coverage>`."
msgstr ""

# 65aefa915c924c478513302d385e9917
#: ../../internals/contributing/writing-code/unit-tests.txt:185
msgid ""
"To run coverage on the Django test suite using the standard test settings::"
msgstr ""

# e87ff361975949feb5f1451984d39dd6
#: ../../internals/contributing/writing-code/unit-tests.txt:189
msgid "After running coverage, generate the html report by running::"
msgstr ""

# 82149140a35e4ad7a1ab7142a0955992
#: ../../internals/contributing/writing-code/unit-tests.txt:193
msgid ""
"When running coverage for the Django tests, the included ``.coveragerc`` "
"settings file  defines ``coverage_html`` as the output directory for the "
"report and also excludes several directories not relevant to the results "
"(test code or external code included in Django)."
msgstr ""

# 079c1a9b6caf40f5ababb6bbee062616
#: ../../internals/contributing/writing-code/unit-tests.txt:201
msgid "Contrib apps"
msgstr ""

# 804c7debcf1e404d830bb5e8b2decc6c
#: ../../internals/contributing/writing-code/unit-tests.txt:203
msgid ""
"Tests for contrib apps go in their respective directories under ``django/"
"contrib``, in a ``tests.py`` file. You can split the tests over multiple "
"modules by using a ``tests`` directory in the normal Python way."
msgstr ""

# c1e7a238d0804feabf646f37d3fae3d6
#: ../../internals/contributing/writing-code/unit-tests.txt:207
msgid ""
"For the tests to be found, a ``models.py`` file must exist, even if it's "
"empty. If you have URLs that need to be mapped, put them in ``tests/urls."
"py``."
msgstr ""

# d3754c28773d4aadb3a9cb0d87e9ee30
#: ../../internals/contributing/writing-code/unit-tests.txt:210
msgid ""
"To run tests for just one contrib app (e.g. ``auth``), use the same method "
"as above::"
msgstr ""
