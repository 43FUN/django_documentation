# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-02-29 18:30\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 0247e52a541f41649e6254a09a5e6109
#: ../../internals/contributing/writing-code/unit-tests.txt:3
msgid "Unit tests"
msgstr ""

# f3c0f2d3e10b4f4a962afb46ee97d996
#: ../../internals/contributing/writing-code/unit-tests.txt:5
msgid ""
"Django comes with a test suite of its own, in the ``tests`` directory of the "
"code base. It's our policy to make sure all tests pass at all times."
msgstr ""

# 261474fda4de4563b77c363f15d2d8d8
#: ../../internals/contributing/writing-code/unit-tests.txt:8
msgid "The tests cover:"
msgstr ""

# afc7054c3681417891b38b3a07aae345
#: ../../internals/contributing/writing-code/unit-tests.txt:10
msgid "Models and the database API (``tests/modeltests``),"
msgstr ""

# 81adda6eed814386899364f0981d616a
#: ../../internals/contributing/writing-code/unit-tests.txt:11
msgid "Everything else in core Django code (``tests/regressiontests``),"
msgstr ""

# a3019075275b49fa902ae99eac4e26ac
#: ../../internals/contributing/writing-code/unit-tests.txt:12
msgid ":ref:`contrib-apps` (``django/contrib/<app>/tests``)."
msgstr ""

# 7f6ff129113b4997aac9c203e73d5c01
#: ../../internals/contributing/writing-code/unit-tests.txt:14
msgid "We appreciate any and all contributions to the test suite!"
msgstr ""

# 6e7358d13a764473926d409363a20ea1
#: ../../internals/contributing/writing-code/unit-tests.txt:16
msgid ""
"The Django tests all use the testing infrastructure that ships with Django "
"for testing applications. See :doc:`Testing Django applications </topics/"
"testing>` for an explanation of how to write new tests."
msgstr ""

# bccd108e0b9c46afbf78b6cc241a991a
#: ../../internals/contributing/writing-code/unit-tests.txt:23
msgid "Running the unit tests"
msgstr ""

# afa7d82f79f74bffb57b7ef142294e12
#: ../../internals/contributing/writing-code/unit-tests.txt:26
msgid "Quickstart"
msgstr ""

# a03381d869e24d36bea297c10c25bd50
#: ../../internals/contributing/writing-code/unit-tests.txt:28
msgid ""
"Running the tests requires a Django settings module that defines the "
"databases to use. To make it easy to get started, Django provides a sample "
"settings module that uses the SQLite database. To run the tests with this "
"sample ``settings`` module, ``cd`` into the Django ``tests/`` directory and "
"run:"
msgstr ""

# 590aa7e911894e38b7e41e71a088ec26
#: ../../internals/contributing/writing-code/unit-tests.txt:38
msgid ""
"If you get an ``ImportError: No module named django.contrib`` error, you "
"need to add your install of Django to your ``PYTHONPATH``. For more details "
"on how to do this, read :ref:`pointing-python-at-the-new-django-version`."
msgstr ""

# ef234fbfcd7d4bbfb65aadd53ad24a1a
#: ../../internals/contributing/writing-code/unit-tests.txt:44
msgid "Using another ``settings`` module"
msgstr ""

# 3253a2612f254d1ea64b46aca5dcf83a
#: ../../internals/contributing/writing-code/unit-tests.txt:46
msgid ""
"The included settings module allows you to run the test suite using SQLite. "
"If you want to test behavior using a different database (and if you're "
"proposing patches for Django, it's a good idea to test across databases), "
"you may need to define your own settings file."
msgstr ""

# 9852dcb632b644c0b52b036662a8b96d
#: ../../internals/contributing/writing-code/unit-tests.txt:51
msgid ""
"To run the tests with different settings, ``cd`` to the ``tests/`` directory "
"and type:"
msgstr ""

# c0c0a754f2574ec2b6df3ecdb5b9ed6d
#: ../../internals/contributing/writing-code/unit-tests.txt:58
msgid ""
"The :setting:`DATABASES` setting in this test settings module needs to "
"define two databases:"
msgstr ""

# 894570fd32c545d0b3253b44539ee4fb
#: ../../internals/contributing/writing-code/unit-tests.txt:61
msgid ""
"A ``default`` database. This database should use the backend that you want "
"to use for primary testing"
msgstr ""

# 994f83264b61426faa8deaa9d844b124
#: ../../internals/contributing/writing-code/unit-tests.txt:64
msgid ""
"A database with the alias ``other``. The ``other`` database is used to "
"establish that queries can be directed to different databases. As a result, "
"this database can use any backend you want. It doesn't need to use the same "
"backend as the ``default`` database (although it can use the same backend if "
"you want to)."
msgstr ""

# c068275419c641f79f922df6259c3934
#: ../../internals/contributing/writing-code/unit-tests.txt:70
msgid ""
"If you're using a backend that isn't SQLite, you will need to provide other "
"details for each database:"
msgstr ""

# a87bf88df68e43a6873876b3187f8a3a
#: ../../internals/contributing/writing-code/unit-tests.txt:73
msgid ""
"The :setting:`USER` option for each of your databases needs to specify an "
"existing user account for the database."
msgstr ""

# 7509d45e119643c5bc4ce0b94abafeb2
#: ../../internals/contributing/writing-code/unit-tests.txt:76
msgid ""
"The :setting:`PASSWORD` option needs to provide the password for the :"
"setting:`USER` that has been specified."
msgstr ""

# 668c6656ef31449987f412f100be8703
#: ../../internals/contributing/writing-code/unit-tests.txt:79
msgid ""
"The :setting:`NAME` option must be the name of an existing database to which "
"the given user has permission to connect. The unit tests will not touch this "
"database; the test runner creates a new database whose name is :setting:"
"`NAME` prefixed with ``test_``, and this test database is deleted when the "
"tests are finished. This means your user account needs permission to execute "
"``CREATE DATABASE``."
msgstr ""

# ab46b98dc39e4dea9464b0eb96f46497
#: ../../internals/contributing/writing-code/unit-tests.txt:86
msgid ""
"You will also need to ensure that your database uses UTF-8 as the default "
"character set. If your database server doesn't use UTF-8 as a default "
"charset, you will need to include a value for :setting:`TEST_CHARSET` in the "
"settings dictionary for the applicable database."
msgstr ""

# 4a0335ab1ebe45c28dfb7ee71f18b7b0
#: ../../internals/contributing/writing-code/unit-tests.txt:92
msgid "Running only some of the tests"
msgstr ""

# ea053a8beae34339a84a8c7641e20cc4
#: ../../internals/contributing/writing-code/unit-tests.txt:94
msgid ""
"Django's entire test suite takes a while to run, and running every single "
"test could be redundant if, say, you just added a test to Django that you "
"want to run quickly without running everything else. You can run a subset of "
"the unit tests by appending the names of the test modules to ``runtests.py`` "
"on the command line."
msgstr ""

# 75ef9a158e264a728a2b033e9191411d
#: ../../internals/contributing/writing-code/unit-tests.txt:100
msgid ""
"For example, if you'd like to run tests only for generic relations and "
"internationalization, type:"
msgstr ""

# edd07c75fe264476b210afbab7fb5573
#: ../../internals/contributing/writing-code/unit-tests.txt:107
msgid ""
"How do you find out the names of individual tests? Look in ``tests/"
"modeltests`` and ``tests/regressiontests`` â€” each directory name there is "
"the name of a test. Contrib app names are also valid test names."
msgstr ""

# 5b8f1abe905344ef83bdce52748e50f9
#: ../../internals/contributing/writing-code/unit-tests.txt:111
msgid ""
"If you just want to run a particular class of tests, you can specify a list "
"of paths to individual test classes. For example, to run the "
"``TranslationTests`` of the ``i18n`` module, type:"
msgstr ""

# a3ae486f10a44d1e8d24887179da2fa6
#: ../../internals/contributing/writing-code/unit-tests.txt:119
msgid "Going beyond that, you can specify an individual test method like this:"
msgstr ""

# 2b5783bf7f9d4eb498dabd1ab0987cfd
#: ../../internals/contributing/writing-code/unit-tests.txt:126
msgid "Running the Selenium tests"
msgstr ""

# 6ea68c76cc89494c90d6c13cf64f5d0e
#: ../../internals/contributing/writing-code/unit-tests.txt:128
msgid ""
"Some admin tests require Selenium 2, Firefox and Python >= 2.6 to work via a "
"real Web browser. To allow those tests to run and not be skipped, you must "
"install the selenium_ package (version > 2.13) into your Python path."
msgstr ""

# 69ca07f18e864788b635fcd68cf6885f
#: ../../internals/contributing/writing-code/unit-tests.txt:132
msgid "Then, run the tests normally, for example:"
msgstr ""

# 51ddc4d63958491fa20595ea0c4a0b6d
#: ../../internals/contributing/writing-code/unit-tests.txt:139
msgid "Running all the tests"
msgstr ""

# ed809e0a8f7845b0a41463907306c47f
#: ../../internals/contributing/writing-code/unit-tests.txt:141
msgid ""
"If you want to run the full suite of tests, you'll need to install a number "
"of dependencies:"
msgstr ""

# e5b45162283043aba59f6455959c0a1e
#: ../../internals/contributing/writing-code/unit-tests.txt:144
msgid "PyYAML_"
msgstr ""

# 6879f4523beb4e0f95b9e1003b4af90a
#: ../../internals/contributing/writing-code/unit-tests.txt:145
msgid "Markdown_"
msgstr ""

# 925d6a01498e4dbb9c9b822503aaea18
#: ../../internals/contributing/writing-code/unit-tests.txt:146
msgid "Textile_"
msgstr ""

# 82e43372afa746d49b1cb9ee367da68f
#: ../../internals/contributing/writing-code/unit-tests.txt:147
msgid "Docutils_"
msgstr ""

# e5f1f6413085443494b60687677dc34a
#: ../../internals/contributing/writing-code/unit-tests.txt:148
msgid "setuptools_"
msgstr ""

# 2d2310f2f7f945ecbf8120f224eb85a7
#: ../../internals/contributing/writing-code/unit-tests.txt:149
msgid "memcached_, plus a :ref:`supported Python binding <memcached>`"
msgstr ""

# 0e44a578c09f4424babf3890177abbc3
#: ../../internals/contributing/writing-code/unit-tests.txt:150
msgid "gettext_ (:ref:`gettext_on_windows`)"
msgstr ""

# 3b8baedcc9e94f368c14b760a36b4ea4
#: ../../internals/contributing/writing-code/unit-tests.txt:151
msgid "selenium_ (if also using Python >= 2.6)"
msgstr ""

# 25156f7691584645a8e54ce3d1345a5e
#: ../../internals/contributing/writing-code/unit-tests.txt:153
msgid ""
"If you want to test the memcached cache backend, you'll also need to define "
"a :setting:`CACHES` setting that points at your memcached instance."
msgstr ""

# 83e53172de334482ad19920fc908f65c
#: ../../internals/contributing/writing-code/unit-tests.txt:156
msgid ""
"Each of these dependencies is optional. If you're missing any of them, the "
"associated tests will be skipped."
msgstr ""

# 079c1a9b6caf40f5ababb6bbee062616
#: ../../internals/contributing/writing-code/unit-tests.txt:171
msgid "Contrib apps"
msgstr ""

# 804c7debcf1e404d830bb5e8b2decc6c
#: ../../internals/contributing/writing-code/unit-tests.txt:173
msgid ""
"Tests for contrib apps go in their respective directories under ``django/"
"contrib``, in a ``tests.py`` file. You can split the tests over multiple "
"modules by using a ``tests`` directory in the normal Python way."
msgstr ""

# c1e7a238d0804feabf646f37d3fae3d6
#: ../../internals/contributing/writing-code/unit-tests.txt:177
msgid ""
"For the tests to be found, a ``models.py`` file must exist, even if it's "
"empty. If you have URLs that need to be mapped, put them in ``tests/urls."
"py``."
msgstr ""

# 17b98df594db45d59e89259231d724d0
#: ../../internals/contributing/writing-code/unit-tests.txt:180
msgid ""
"To run tests for just one contrib app (e.g. ``markup``), use the same method "
"as above::"
msgstr ""
