# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-02-29 18:30\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# d8ddc663b6a54731aa8e9428b8409649
#: ../../internals/release-process.txt:3
msgid "Django's release process"
msgstr ""

# 9496e6425c454e36af554f7c1466f325
#: ../../internals/release-process.txt:8
msgid "Official releases"
msgstr ""

# fdba64e5d15f4901b534f9bed53cfb69
#: ../../internals/release-process.txt:10
msgid "Since version 1.0, Django's release numbering works as follows:"
msgstr ""

# f86349cbc8d547919ca14d508e39cf88
#: ../../internals/release-process.txt:12
msgid "Versions are numbered in the form ``A.B`` or ``A.B.C``."
msgstr ""

# 96930805719c493e82f61ba67b51ab1f
#: ../../internals/release-process.txt:14
msgid ""
"``A`` is the *major version* number, which is only incremented for major "
"changes to Django, and these changes are not necessarily backwards-"
"compatible. That is, code you wrote for Django 1.2 may break when we release "
"Django 2.0."
msgstr ""

# ce16c3327fd14e728d3458876b515ea2
#: ../../internals/release-process.txt:19
msgid ""
"``B`` is the *minor version* number, which is incremented for large yet "
"backwards compatible changes.  Code written for Django 1.2 will continue to "
"work under Django 1.3. Exceptions to this rule will be listed in the release "
"notes."
msgstr ""

# 670a3826f0b547028f0c9d47fd88f211
#: ../../internals/release-process.txt:24
msgid ""
"``C`` is the *micro version* number, which is incremented for bug and "
"security fixes. A new micro-release will be 100% backwards-compatible with "
"the previous micro-release. The only exception is when a security issue "
"can't be fixed without breaking backwards-compatibility. If this happens, "
"the release notes will provide detailed upgrade instructions."
msgstr ""

# c54887512601444980ae0238795f65f4
#: ../../internals/release-process.txt:30
msgid ""
"In some cases, we'll make alpha, beta, or release candidate releases. These "
"are of the form ``A.B alpha/beta/rc N``, which means the ``Nth`` alpha/beta/"
"release candidate of version ``A.B``."
msgstr ""

# 9b8a8291412e46ef92d40e7a987943b9
#: ../../internals/release-process.txt:34
msgid ""
"In Subversion, each Django release will be tagged under ``tags/releases``.  "
"If it's necessary to release a bug fix release or a security release that "
"doesn't come from the trunk, we'll copy that tag to ``branches/releases`` to "
"make the bug fix release."
msgstr ""

# 5c6beeeb74504e789e20bc20702bb931
#: ../../internals/release-process.txt:40
msgid "Major releases"
msgstr ""

# 3281f8407f3f408bb20cc42ac9dab5e4
#: ../../internals/release-process.txt:42
msgid ""
"Major releases (1.0, 2.0, etc.) will happen very infrequently (think \"years"
"\", not \"months\"), and will probably represent major, sweeping changes to "
"Django."
msgstr ""

# 9754302bd9e24dd9a844b33fe1a815c1
#: ../../internals/release-process.txt:46
msgid "Minor releases"
msgstr ""

# d400b54375c64459806ba6de95ead21f
#: ../../internals/release-process.txt:48
msgid ""
"Minor release (1.1, 1.2, etc.) will happen roughly every nine months -- see "
"`release process`_, below for details."
msgstr ""

# 3fe480a7afe84cdf8894c968f76a7eeb
#: ../../internals/release-process.txt:53
msgid ""
"These releases will contain new features, improvements to existing features, "
"and such. A minor release may deprecate certain features from previous "
"releases. If a feature in version ``A.B`` is deprecated, it will continue to "
"work in version ``A.B+1``. In version ``A.B+2``, use of the feature will "
"raise a ``DeprecationWarning`` but will continue to work. Version ``A.B+3`` "
"will remove the feature entirely."
msgstr ""

# d52f72de5de843b4912d63778e70cf1f
#: ../../internals/release-process.txt:60
msgid ""
"So, for example, if we decided to remove a function that existed in Django "
"1.0:"
msgstr ""

# 6d0d2335945f4445a07b041f80f6e00f
#: ../../internals/release-process.txt:62
msgid ""
"Django 1.1 will contain a backwards-compatible replica of the function which "
"will raise a ``PendingDeprecationWarning``. This warning is silent by "
"default; you need to explicitly turn on display of these warnings."
msgstr ""

# 4ffe5725f91746caafaadd49c10614f8
#: ../../internals/release-process.txt:66
msgid ""
"Django 1.2 will contain the backwards-compatible replica, but the warning "
"will be promoted to a full-fledged ``DeprecationWarning``. This warning is "
"*loud* by default, and will likely be quite annoying."
msgstr ""

# 8b076a40315d4b4a8ec419512285a4e7
#: ../../internals/release-process.txt:70
msgid "Django 1.3 will remove the feature outright."
msgstr ""

# ca9e25af842344df9232776216f92da1
#: ../../internals/release-process.txt:73
msgid "Micro releases"
msgstr ""

# d9e441f22df4442aaaee2b4f516f9eb0
#: ../../internals/release-process.txt:75
msgid ""
"Micro releases (1.0.1, 1.0.2, 1.1.1, etc.) will be issued at least once half-"
"way between minor releases, and probably more often as needed."
msgstr ""

# 98e6af1616ff4d0abfc8bf35ffa330a0
#: ../../internals/release-process.txt:78
msgid ""
"These releases will be 100% compatible with the associated minor release, "
"unless this is impossible for security reasons. So the answer to \"should I "
"upgrade to the latest micro release?\" will always be \"yes.\""
msgstr ""

# 06f56db689fb493c9afa60f7aebd17b8
#: ../../internals/release-process.txt:82
msgid ""
"Each minor release of Django will have a \"release maintainer\" appointed. "
"This person will be responsible for making sure that bug fixes are applied "
"to both trunk and the maintained micro-release branch. This person will also "
"work with the release manager to decide when to release the micro releases."
msgstr ""

# 3583365135d1489aa7c3e321c438d745
#: ../../internals/release-process.txt:88
msgid "Supported versions"
msgstr ""

# 97b4c7e51f44433987fed1907803051f
#: ../../internals/release-process.txt:90
msgid ""
"At any moment in time, Django's developer team will support a set of "
"releases to varying levels:"
msgstr ""

# 3d4f2c09b95b48458ee6cb969da7f91b
#: ../../internals/release-process.txt:93
msgid ""
"The current development trunk will get new features and bug fixes requiring "
"major refactoring."
msgstr ""

# b16dae0f4d30439ea4e678e53d43a4e4
#: ../../internals/release-process.txt:96
msgid ""
"Patches applied to the trunk will also be applied to the last minor release, "
"to be released as the next micro release, when they fix critical problems:"
msgstr ""

# c4e315e1776a48f5a0421dd15e0df63d
#: ../../internals/release-process.txt:100
msgid "Security issues."
msgstr ""

# a0d5d6e06a4d4a148c24c6234dd8ba05
#: ../../internals/release-process.txt:102
msgid "Data-loss bugs."
msgstr ""

# 34c7bfd7b128497ea2880a29e149d86b
#: ../../internals/release-process.txt:104
msgid "Crashing bugs."
msgstr ""

# 2a658571aac74a00a44c1fbe0c16f8ae
#: ../../internals/release-process.txt:106
msgid "Major functionality bugs in newly-introduced features."
msgstr ""

# 73b1d12315d247dc9540a5296fa93511
#: ../../internals/release-process.txt:108
msgid ""
"The rule of thumb is that fixes will be backported to the last minor release "
"for bugs that would have prevented a release in the first place."
msgstr ""

# aa2df2c8d2cd4eb4b0cd17ab893323e2
#: ../../internals/release-process.txt:111
msgid ""
"Security fixes will be applied to the current trunk and the previous two "
"minor releases."
msgstr ""

# 5e5e116ecc1c44898ec2cd212c44c9ba
#: ../../internals/release-process.txt:114
msgid ""
"Documentation fixes generally will be more freely backported to the last "
"release branch, at the discretion of the committer, and they don't need to "
"meet the \"critical fixes only\" bar. That's because it's highly "
"advantageous to have the docs for the last release be up-to-date and "
"correct, and the downside of backporting (risk of introducing regressions) "
"is much less of a concern."
msgstr ""

# 7e09210d617c4e11b09d077230612d3a
#: ../../internals/release-process.txt:121
msgid ""
"As a concrete example, consider a moment in time halfway between the release "
"of Django 1.3 and 1.4. At this point in time:"
msgstr ""

# 80f60b065daa42ad842126aa2ddf48bd
#: ../../internals/release-process.txt:124
msgid ""
"Features will be added to development trunk, to be released as Django 1.4."
msgstr ""

# 3cedb813ed5d4145ad5ee7ec913b59f5
#: ../../internals/release-process.txt:126
msgid ""
"Critical bug fixes will be applied to a ``1.3.X`` branch, and released as "
"1.3.1, 1.3.2, etc."
msgstr ""

# b40b444bfe2b41ed831dc6e7f665538f
#: ../../internals/release-process.txt:129
msgid ""
"Security fixes will be applied to trunk, a ``1.3.X`` branch and a ``1.2.X`` "
"branch. They will trigger the release of ``1.3.1``, ``1.2.1``, etc."
msgstr ""

# 4c57a0e288e24270877a768261c25383
#: ../../internals/release-process.txt:133
msgid ""
"Documentation fixes will be applied to trunk, and, if easily backported, to "
"the ``1.3.X`` branch."
msgstr ""

# 77e16e8a9efe40e682a1cf880080230c
#: ../../internals/release-process.txt:139
msgid "Release process"
msgstr ""

# a15c4540e0524735821eb263f81fe12f
#: ../../internals/release-process.txt:141
msgid ""
"Django uses a time-based release schedule, with minor (i.e. 1.1, 1.2, etc.) "
"releases every nine months, or more, depending on features."
msgstr ""

# 3c391c09ef1c41a88d225e2a736a2110
#: ../../internals/release-process.txt:144
msgid ""
"After each release, and after a suitable cooling-off period of a few weeks, "
"the core development team will examine the landscape and announce a timeline "
"for the next release. Most releases will be scheduled in the 6-9 month "
"range, but if we have bigger features to development we might schedule a "
"longer period to allow for more ambitious work."
msgstr ""

# 0373bc238ecd4cefbe2155bf8fe52bdd
#: ../../internals/release-process.txt:151
msgid "Release cycle"
msgstr ""

# d272187f6e7844f1ac784174a3b8f52b
#: ../../internals/release-process.txt:153
msgid ""
"Each release cycle will be split into three periods, each lasting roughly "
"one-third of the cycle:"
msgstr ""

# c8259680623e4ba9b3cb5e21baebc038
#: ../../internals/release-process.txt:157
msgid "Phase one: feature proposal"
msgstr ""

# 74aae02fbea942c6b0a1b10440616a19
#: ../../internals/release-process.txt:159
msgid ""
"The first phase of the release process will be devoted to figuring out what "
"features to include in the next version. This should include a good deal of "
"preliminary work on those features -- working code trumps grand design."
msgstr ""

# 4eaeb43af2fd4e0db4aa34dfe2260e24
#: ../../internals/release-process.txt:163
msgid ""
"At the end of part one, the core developers will propose a feature list for "
"the upcoming release. This will be broken into:"
msgstr ""

# 77dc09bb1ad44dcba3851eb52e03dd6b
#: ../../internals/release-process.txt:166
msgid ""
"\"Must-have\": critical features that will delay the release if not finished"
msgstr ""

# dd19fc7bbc5d425ba452f16046592481
#: ../../internals/release-process.txt:167
msgid ""
"\"Maybe\" features: that will be pushed to the next release if not finished"
msgstr ""

# 78f464f1ea314d318afd2df3a11f4bf2
#: ../../internals/release-process.txt:168
msgid ""
"\"Not going to happen\": features explicitly deferred to a later release."
msgstr ""

# 41d63bef51744fedad1af432c827ab85
#: ../../internals/release-process.txt:170
msgid ""
"Anything that hasn't got at least some work done by the end of the first "
"third isn't eligible for the next release; a design alone isn't sufficient."
msgstr ""

# 34c66dee55954cbbaa4d1f54b4ccca4c
#: ../../internals/release-process.txt:174
msgid "Phase two: development"
msgstr ""

# b381c9623d464fdfa6407520953d5af8
#: ../../internals/release-process.txt:176
msgid ""
"The second third of the release schedule is the \"heads-down\" working "
"period. Using the roadmap produced at the end of phase one, we'll all work "
"very hard to get everything on it done."
msgstr ""

# 718498c82da7464ea7977aa440738bfc
#: ../../internals/release-process.txt:180
msgid ""
"Longer release schedules will likely spend more than a third of the time in "
"this phase."
msgstr ""

# ba34dcfb8a7f477abf6c8ec7809a4e53
#: ../../internals/release-process.txt:183
msgid ""
"At the end of phase two, any unfinished \"maybe\" features will be postponed "
"until the next release. Though it shouldn't happen, any \"must-have\" "
"features will extend phase two, and thus postpone the final release."
msgstr ""

# 3589576eff07411ca1fc5834bc0ab22e
#: ../../internals/release-process.txt:187
msgid "Phase two will culminate with an alpha release."
msgstr ""

# 9fdb5fd9dcd64088b223048a5d891b73
#: ../../internals/release-process.txt:190
msgid "Phase three: bugfixes"
msgstr ""

# 66b0a42957f64bfcb980db6d70ab5a39
#: ../../internals/release-process.txt:192
msgid ""
"The last third of a release is spent fixing bugs -- no new features will be "
"accepted during this time. We'll release a beta release about halfway "
"through, and an rc complete with string freeze two weeks before the end of "
"the schedule."
msgstr ""

# af8b50bf68ca4739866177b20780143d
#: ../../internals/release-process.txt:197
msgid "Bug-fix releases"
msgstr ""

# b1e8af96ce6a40828dbd104fa4eef7f7
#: ../../internals/release-process.txt:199
msgid ""
"After a minor release (e.g. 1.1), the previous release will go into bug-fix "
"mode."
msgstr ""

# 2c9985b178fc49c89ce645e5c513fa9f
#: ../../internals/release-process.txt:202
msgid ""
"A branch will be created of the form ``branches/releases/1.0.X`` to track "
"bug-fixes to the previous release. Critical bugs fixed on trunk must *also* "
"be fixed on the bug-fix branch; this means that commits need to cleanly "
"separate bug fixes from feature additions. The developer who commits a fix "
"to trunk will be responsible for also applying the fix to the current bug-"
"fix branch.  Each bug-fix branch will have a maintainer who will work with "
"the committers to keep them honest on backporting bug fixes."
msgstr ""

# 25ac3a46b5684d9eb4d5d6b6b71cf489
#: ../../internals/release-process.txt:211
msgid "How this all fits together"
msgstr ""

# 054b541d92024d3fa0f7137cd50bdc5a
#: ../../internals/release-process.txt:213
msgid ""
"Let's look at a hypothetical example for how this all first together. "
"Imagine, if you will, a point about halfway between 1.1 and 1.2. At this "
"point, development will be happening in a bunch of places:"
msgstr ""

# a2aeb48b4f65453383bce252f0289034
#: ../../internals/release-process.txt:217
msgid ""
"On trunk, development towards 1.2 proceeds with small additions, bugs fixes, "
"etc. being checked in daily."
msgstr ""

# df4ce7c3fdb54e7f924597106f0dc3d6
#: ../../internals/release-process.txt:220
msgid ""
"On the branch \"branches/releases/1.1.X\", fixes for critical bugs found in "
"the 1.1 release are checked in as needed. At some point, this branch will be "
"released as \"1.1.1\", \"1.1.2\", etc."
msgstr ""

# b0e63aa180a74c54b3121ed44504e95f
#: ../../internals/release-process.txt:224
msgid ""
"On the branch \"branches/releases/1.0.X\", security fixes are made if needed "
"and released as \"1.0.2\", \"1.0.3\", etc."
msgstr ""

# da42b9dafb3c4729915f4e3bd450452c
#: ../../internals/release-process.txt:227
msgid ""
"On feature branches, development of major features is done. These branches "
"will be merged into trunk before the end of phase two."
msgstr ""
