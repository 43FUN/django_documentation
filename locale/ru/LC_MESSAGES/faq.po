# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-03-12 13:35\n"
"PO-Revision-Date: 2012-03-12 13:35\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 00c79036bbe94bc396f40a0045684dc7
#: ../../faq/admin.txt:2
msgid "FAQ: The admin"
msgstr ""

# e309a36e41574888ba5c6dc8c2f38f65
#: ../../faq/admin.txt:5
msgid ""
"I can't log in. When I enter a valid username and password, it just brings "
"up the login page again, with no error messages."
msgstr ""

# 4bb3bd6cb05f42bb92a3db9ded186ecb
#: ../../faq/admin.txt:7
msgid ""
"The login cookie isn't being set correctly, because the domain of the cookie "
"sent out by Django doesn't match the domain in your browser. Try these two "
"things:"
msgstr ""

# 9345a2e583904bef9d033e4e96002bf3
#: ../../faq/admin.txt:11
msgid ""
"Set the :setting:`SESSION_COOKIE_DOMAIN` setting in your admin config file "
"to match your domain. For example, if you're going to \"http://www.example."
"com/admin/\" in your browser, in \"myproject.settings\" you should set "
"``SESSION_COOKIE_DOMAIN = 'www.example.com'``."
msgstr ""

# 7320f47f5fbf4eb1bfced743deadd999
#: ../../faq/admin.txt:16
msgid ""
"Some browsers (Firefox?) don't like to accept cookies from domains that "
"don't have dots in them. If you're running the admin site on \"localhost\" "
"or another domain that doesn't have a dot in it, try going to \"localhost."
"localdomain\" or \"127.0.0.1\". And set :setting:`SESSION_COOKIE_DOMAIN` "
"accordingly."
msgstr ""

# 0d6020de02a14f2ca1c3f79d574aad40
#: ../../faq/admin.txt:23
msgid ""
"I can't log in. When I enter a valid username and password, it brings up the "
"login page again, with a \"Please enter a correct username and password\" "
"error."
msgstr ""

# b77b9d8509ae46e5b0a2776b1f53f594
#: ../../faq/admin.txt:25
msgid ""
"If you're sure your username and password are correct, make sure your user "
"account has ``is_active`` and ``is_staff`` set to True. The admin site only "
"allows access to users with those two fields both set to True."
msgstr ""

# 224a8c50b3ff489b9192d759c0cc33ce
#: ../../faq/admin.txt:30
msgid "How can I prevent the cache middleware from caching the admin site?"
msgstr ""

# 63d8612984f54d92a2519a89f541b641
#: ../../faq/admin.txt:32
msgid ""
"Set the :setting:`CACHE_MIDDLEWARE_ANONYMOUS_ONLY` setting to ``True``. See "
"the :doc:`cache documentation </topics/cache>` for more information."
msgstr ""

# 35028c6966b84b43b3dd4c5f1f682738
#: ../../faq/admin.txt:36
msgid ""
"How do I automatically set a field's value to the user who last edited the "
"object in the admin?"
msgstr ""

# 1741bed0e3744109b48db4797ff7a0ec
#: ../../faq/admin.txt:38
msgid ""
"The :class:`~django.contrib.admin.ModelAdmin` class provides customization "
"hooks that allow you to transform an object as it saved, using details from "
"the request. By extracting the current user from the request, and "
"customizing the :meth:`~django.contrib.admin.ModelAdmin.save_model` hook, "
"you can update an object to reflect the user that edited it. See :ref:`the "
"documentation on ModelAdmin methods <model-admin-methods>` for an example."
msgstr ""

# 4b6e3896e4154e0895c88d5111def455
#: ../../faq/admin.txt:46
msgid ""
"How do I limit admin access so that objects can only be edited by the users "
"who created them?"
msgstr ""

# 93cfe7fc1ab94bb0b181cbaf04c74a08
#: ../../faq/admin.txt:48
msgid ""
"The :class:`~django.contrib.admin.ModelAdmin` class also provides "
"customization hooks that allow you to control the visibility and editability "
"of objects in the admin. Using the same trick of extracting the user from "
"the request, the :meth:`~django.contrib.admin.ModelAdmin.queryset` and :meth:"
"`~django.contrib.admin.ModelAdmin.has_change_permission` can be used to "
"control the visibility and editability of objects in the admin."
msgstr ""

# 458bdb7ed37a44668a97839307c897c7
#: ../../faq/admin.txt:56
msgid ""
"My admin-site CSS and images showed up fine using the development server, "
"but they're not displaying when using mod_wsgi."
msgstr ""

# af17ca9ea23941e9b06f0170376d0950
#: ../../faq/admin.txt:58
msgid ""
"See :ref:`serving the admin files <serving-the-admin-files>` in the \"How to "
"use Django with mod_wsgi\" documentation."
msgstr ""

# 8e1d0f181e564e3092ed8f78b21d4040
#: ../../faq/admin.txt:62
msgid ""
"My \"list_filter\" contains a ManyToManyField, but the filter doesn't "
"display."
msgstr ""

# 7c6e242ddab141b9957b848206525b91
#: ../../faq/admin.txt:64
msgid ""
"Django won't bother displaying the filter for a ``ManyToManyField`` if there "
"are fewer than two related objects."
msgstr ""

# 49d29396d5ab4b2a924cf7256fb32002
#: ../../faq/admin.txt:67
msgid ""
"For example, if your ``list_filter`` includes ``sites``, and there's only "
"one site in your database, it won't display a \"Site\" filter. In that case, "
"filtering by site would be meaningless."
msgstr ""

# 879677c57245490aa8ab1884b7f73301
#: ../../faq/admin.txt:72
msgid "How can I customize the functionality of the admin interface?"
msgstr ""

# 2bf26b0f20c944a8b6c81234999c31ab
#: ../../faq/admin.txt:74
msgid ""
"You've got several options. If you want to piggyback on top of an add/change "
"form that Django automatically generates, you can attach arbitrary "
"JavaScript modules to the page via the model's ``class Admin`` ``js`` "
"parameter. That parameter is a list of URLs, as strings, pointing to "
"JavaScript modules that will be included within the admin form via a "
"``<script>`` tag."
msgstr ""

# 5b1daa07b6bf4255bc4514c684365dea
#: ../../faq/admin.txt:80
msgid ""
"If you want more flexibility than simply tweaking the auto-generated forms, "
"feel free to write custom views for the admin. The admin is powered by "
"Django itself, and you can write custom views that hook into the "
"authentication system, check permissions and do whatever else they need to "
"do."
msgstr ""

# 23e9c3e2aad74f5c8c24ccb55340dbcb
#: ../../faq/admin.txt:85
msgid ""
"If you want to customize the look-and-feel of the admin interface, read the "
"next question."
msgstr ""

# d0952142e5b84a7691353bca6e917a03
#: ../../faq/admin.txt:89
msgid "The dynamically-generated admin site is ugly! How can I change it?"
msgstr ""

# 3ad6a9fd9a4e47908a93244207dbf7b4
#: ../../faq/admin.txt:91
msgid ""
"We like it, but if you don't agree, you can modify the admin site's "
"presentation by editing the CSS stylesheet and/or associated image files. "
"The site is built using semantic HTML and plenty of CSS hooks, so any "
"changes you'd like to make should be possible by editing the stylesheet. "
"We've got a :doc:`guide to the CSS used in the admin </obsolete/admin-css>` "
"to get you started."
msgstr ""

# 5a48529515314aef8134beace836728b
#: ../../faq/admin.txt:98
msgid "What browsers are supported for using the admin?"
msgstr ""

# cdd35f590a424ec48ff2c51b8a71c5ec
#: ../../faq/admin.txt:100
msgid ""
"The admin provides a fully-functional experience to `YUI's A-grade`_ "
"browsers, with the notable exception of IE6, which is not supported."
msgstr ""

# d1dc793888ee43f88934cfeda8bcbe0d
#: ../../faq/admin.txt:103
msgid ""
"There *may* be minor stylistic differences between supported browsersâ€”for "
"example, some browsers may not support rounded corners. These are considered "
"acceptable variations in rendering."
msgstr ""

# c8709b4830bc4218be89c5eb6cc39ffe
#: ../../faq/contributing.txt:2
msgid "FAQ: Contributing code"
msgstr ""

# a3c29e5ac7fe44099b322dbd4126657e
#: ../../faq/contributing.txt:5
msgid "How can I get started contributing code to Django?"
msgstr ""

# e1f3d922d0684a089209338f706566b1
#: ../../faq/contributing.txt:7
msgid ""
"Thanks for asking! We've written an entire document devoted to this "
"question. It's titled :doc:`Contributing to Django </internals/contributing/"
"index>`."
msgstr ""

# b333a0ebb9ad4bf087dbb06f80432834
#: ../../faq/contributing.txt:11
msgid ""
"I submitted a bug fix in the ticket system several weeks ago. Why are you "
"ignoring my patch?"
msgstr ""

# 73b1fe727f154be699347ba60a0b3b63
#: ../../faq/contributing.txt:13
msgid "Don't worry: We're not ignoring you!"
msgstr ""

# 0d441f0e2dec472cb92c8e8c4c90b94a
#: ../../faq/contributing.txt:15
msgid ""
"It's important to understand there is a difference between \"a ticket is "
"being ignored\" and \"a ticket has not been attended to yet.\" Django's "
"ticket system contains hundreds of open tickets, of various degrees of "
"impact on end-user functionality, and Django's developers have to review and "
"prioritize."
msgstr ""

# 65798b2008f94a0181519d9e34f7b794
#: ../../faq/contributing.txt:20
msgid ""
"On top of that: the people who work on Django are all volunteers. As a "
"result, the amount of time that we have to work on the framework is limited "
"and will vary from week to week depending on our spare time. If we're busy, "
"we may not be able to spend as much time on Django as we might want."
msgstr ""

# a6540e1d5b5d4e83ad6087fe44bb70dc
#: ../../faq/contributing.txt:25
msgid ""
"The best way to make sure tickets do not get hung up on the way to checkin "
"is to make it dead easy, even for someone who may not be intimately familiar "
"with that area of the code, to understand the problem and verify the fix:"
msgstr ""

# 1dd05e9dca734c43b67cd95c281440f6
#: ../../faq/contributing.txt:29
msgid ""
"Are there clear instructions on how to reproduce the bug? If this touches a "
"dependency (such as PIL), a contrib module, or a specific database, are "
"those instructions clear enough even for someone not familiar with it?"
msgstr ""

# 949cc7a56b9740b9a00265e75a871ef6
#: ../../faq/contributing.txt:34
msgid ""
"If there are several patches attached to the ticket, is it clear what each "
"one does, which ones can be ignored and which matter?"
msgstr ""

# e546f7094a204f37ba70c605ce5b1526
#: ../../faq/contributing.txt:37
msgid ""
"Does the patch include a unit test? If not, is there a very clear "
"explanation why not? A test expresses succinctly what the problem is, and "
"shows that the patch actually fixes it."
msgstr ""

# 6af7e6b02e2b476b9d091b1e8935e7e9
#: ../../faq/contributing.txt:41
msgid ""
"If your patch stands no chance of inclusion in Django, we won't ignore it -- "
"we'll just close the ticket. So if your ticket is still open, it doesn't "
"mean we're ignoring you; it just means we haven't had time to look at it yet."
msgstr ""

# 7f0c51981daf4c4f9ad62736357ecc00
#: ../../faq/contributing.txt:46
msgid "When and how might I remind the core team of a patch I care about?"
msgstr ""

# d14fe06e20b1445a9e7b761ccfb8cf9d
#: ../../faq/contributing.txt:48
msgid ""
"A polite, well-timed message to the mailing list is one way to get "
"attention. To determine the right time, you need to keep an eye on the "
"schedule. If you post your message when the core developers are trying to "
"hit a feature deadline or manage a planning phase, you're not going to get "
"the sort of attention you require. However, if you draw attention to a "
"ticket when the core developers are paying particular attention to bugs -- "
"just before a bug fixing sprint, or in the lead up to a beta release for "
"example -- you're much more likely to get a productive response."
msgstr ""

# 24d35bbb94ee486e9fba65853a16039a
#: ../../faq/contributing.txt:57
msgid ""
"Gentle IRC reminders can also work -- again, strategically timed if "
"possible. During a bug sprint would be a very good time, for example."
msgstr ""

# bbad0d95ee58434690bb936f31446cc9
#: ../../faq/contributing.txt:60
msgid ""
"Another way to get traction is to pull several related tickets together. "
"When the core developers sit down to fix a bug in an area they haven't "
"touched for a while, it can take a few minutes to remember all the fine "
"details of how that area of code works. If you collect several minor bug "
"fixes together into a similarly themed group, you make an attractive target, "
"as the cost of coming up to speed on an area of code can be spread over "
"multiple tickets."
msgstr ""

# c1135bc02b2041988dd0ce31e2b67a3a
#: ../../faq/contributing.txt:67
msgid ""
"Please refrain from emailing core developers personally, or repeatedly "
"raising the same issue over and over. This sort of behavior will not gain "
"you any additional attention -- certainly not the attention that you need in "
"order to get your pet bug addressed."
msgstr ""

# 4a385ed6dddc488fb0b03a59cfe4b7e0
#: ../../faq/contributing.txt:73
msgid "But I've reminded you several times and you keep ignoring my patch!"
msgstr ""

# ee6d814ae509444eb591babbfd82a227
#: ../../faq/contributing.txt:75
msgid ""
"Seriously - we're not ignoring you. If your patch stands no chance of "
"inclusion in Django, we'll close the ticket. For all the other tickets, we "
"need to prioritize our efforts, which means that some tickets will be "
"addressed before others."
msgstr ""

# 50afa817716846ec82303b2042c08d08
#: ../../faq/contributing.txt:80
msgid ""
"One of the criteria that is used to prioritize bug fixes is the number of "
"people that will likely be affected by a given bug. Bugs that have the "
"potential to affect many people will generally get priority over those that "
"are edge cases."
msgstr ""

# 1db35a40f1a44e0fbb622e9105060206
#: ../../faq/contributing.txt:85
msgid ""
"Another reason that bugs might be ignored for while is if the bug is a "
"symptom of a larger problem. While we can spend time writing, testing and "
"applying lots of little patches, sometimes the right solution is to rebuild. "
"If a rebuild or refactor of a particular component has been proposed or is "
"underway, you may find that bugs affecting that component will not get as "
"much attention. Again, this is just a matter of prioritizing scarce "
"resources. By concentrating on the rebuild, we can close all the little bugs "
"at once, and hopefully prevent other little bugs from appearing in the "
"future."
msgstr ""

# dc2d2d75ae48495cad49fbf17e4a6800
#: ../../faq/contributing.txt:94
msgid ""
"Whatever the reason, please keep in mind that while you may hit a particular "
"bug regularly, it doesn't necessarily follow that every single Django user "
"will hit the same bug. Different users use Django in different ways, "
"stressing different parts of the code under different conditions. When we "
"evaluate the relative priorities, we are generally trying to consider the "
"needs of the entire community, not just the severity for one particular "
"user. This doesn't mean that we think your problem is unimportant -- just "
"that in the limited time we have available, we will always err on the side "
"of making 10 people happy rather than making 1 person happy."
msgstr ""

# 88460a48fb3d4ec08c6ab24776ecf0be
#: ../../faq/general.txt:2
msgid "FAQ: General"
msgstr ""

# dbb2102beb7e4f81942919782d35c293
#: ../../faq/general.txt:5
msgid "Why does this project exist?"
msgstr ""

# 8ed6eff307fa414395d4710449525f9a
#: ../../faq/general.txt:7
msgid ""
"Django grew from a very practical need: World Online, a newspaper Web "
"operation, is responsible for building intensive Web applications on "
"journalism deadlines. In the fast-paced newsroom, World Online often has "
"only a matter of hours to take a complicated Web application from concept to "
"public launch."
msgstr ""

# 6c38330627cd404a9f07fbc2b122a1b7
#: ../../faq/general.txt:12
msgid ""
"At the same time, the World Online Web developers have consistently been "
"perfectionists when it comes to following best practices of Web development."
msgstr ""

# 07341d61b32841ff912490a296399456
#: ../../faq/general.txt:15
msgid ""
"In fall 2003, the World Online developers (Adrian Holovaty and Simon "
"Willison) ditched PHP and began using Python to develop its Web sites. As "
"they built intensive, richly interactive sites such as Lawrence.com, they "
"began to extract a generic Web development framework that let them build Web "
"applications more and more quickly. They tweaked this framework constantly, "
"adding improvements over two years."
msgstr ""

# 9f0e70ce7c46432e9b34c40aec1d0611
#: ../../faq/general.txt:22
msgid ""
"In summer 2005, World Online decided to open-source the resulting software, "
"Django. Django would not be possible without a whole host of open-source "
"projects -- `Apache`_, `Python`_, and `PostgreSQL`_ to name a few -- and "
"we're thrilled to be able to give something back to the open-source "
"community."
msgstr ""

# d00697593ea148429f7f94b7785266aa
#: ../../faq/general.txt:32
msgid "What does \"Django\" mean, and how do you pronounce it?"
msgstr ""

# 44a6e3e4b4954ea290b28d20b989456e
#: ../../faq/general.txt:34
msgid ""
"Django is named after `Django Reinhardt`_, a gypsy jazz guitarist from the "
"1930s to early 1950s. To this day, he's considered one of the best "
"guitarists of all time."
msgstr ""

# 7f37a9566fb44f3a8dbce82ecb732461
#: ../../faq/general.txt:37
msgid "Listen to his music. You'll like it."
msgstr ""

# 6d86a2494fb7465c8df4369d93578007
#: ../../faq/general.txt:39
msgid ""
"Django is pronounced **JANG**-oh. Rhymes with FANG-oh. The \"D\" is silent."
msgstr ""

# 293e32b4834b4dba8388e3cbb1a6b51f
#: ../../faq/general.txt:41
msgid "We've also recorded an `audio clip of the pronunciation`_."
msgstr ""

# 4f0dfd3c06244ff884d83f5f8532d742
#: ../../faq/general.txt:47
msgid "Is Django stable?"
msgstr ""

# 8d399206fac547d69e15be6299a422eb
#: ../../faq/general.txt:49
msgid ""
"Yes. World Online has been using Django for more than three years. Sites "
"built on Django have weathered traffic spikes of over one million hits an "
"hour and a number of Slashdottings. Yes, it's quite stable."
msgstr ""

# 4ad90b61b0af463185077c2cb0656854
#: ../../faq/general.txt:54
msgid "Does Django scale?"
msgstr ""

# 57b433738f1b41358a18bf368fd4e4a0
#: ../../faq/general.txt:56
msgid ""
"Yes. Compared to development time, hardware is cheap, and so Django is "
"designed to take advantage of as much hardware as you can throw at it."
msgstr ""

# 8e71285b07784c9dadcfcb259ee2ac2f
#: ../../faq/general.txt:59
msgid ""
"Django uses a \"shared-nothing\" architecture, which means you can add "
"hardware at any level -- database servers, caching servers or Web/"
"application servers."
msgstr ""

# 2bc5874173cd4000b86f012f99501437
#: ../../faq/general.txt:62
msgid ""
"The framework cleanly separates components such as its database layer and "
"application layer. And it ships with a simple-yet-powerful :doc:`cache "
"framework </topics/cache>`."
msgstr ""

# 42079e9c820641d0b77024e02476b224
#: ../../faq/general.txt:67
msgid "Who's behind this?"
msgstr ""

# e71eb4fbb75b45619ff3764c9806fa6b
#: ../../faq/general.txt:69
msgid ""
"Django was originally developed at World Online, the Web department of a "
"newspaper in Lawrence, Kansas, USA. Django's now run by an international "
"team of volunteers; you can read all about them over at the :doc:`list of "
"committers </internals/committers>`"
msgstr ""

# 97af82d3ddaf4f3eaa17535402399649
#: ../../faq/general.txt:75
msgid "Which sites use Django?"
msgstr ""

# 57f5446621a44a9bb94c2ae710acf1ed
#: ../../faq/general.txt:77
msgid ""
"`DjangoSites.org`_ features a constantly growing list of Django-powered "
"sites."
msgstr ""

# 2470103c6d7847e596c5c1e28c9cfb5b
#: ../../faq/general.txt:84
msgid ""
"Django appears to be a MVC framework, but you call the Controller the \"view"
"\", and the View the \"template\". How come you don't use the standard names?"
msgstr ""

# cb6da1539f4a4c459f00dceae54882b4
#: ../../faq/general.txt:86
msgid "Well, the standard names are debatable."
msgstr ""

# cfa827dd49c94bd79e220d669e25dc5b
#: ../../faq/general.txt:88
msgid ""
"In our interpretation of MVC, the \"view\" describes the data that gets "
"presented to the user. It's not necessarily *how* the data *looks*, but "
"*which* data is presented. The view describes *which data you see*, not *how "
"you see it.* It's a subtle distinction."
msgstr ""

# 99273a5bd58b4f5ead5feb9208848083
#: ../../faq/general.txt:93
msgid ""
"So, in our case, a \"view\" is the Python callback function for a particular "
"URL, because that callback function describes which data is presented."
msgstr ""

# dc84f7053f27476eb870b28a0269c557
#: ../../faq/general.txt:96
msgid ""
"Furthermore, it's sensible to separate content from presentation -- which is "
"where templates come in. In Django, a \"view\" describes which data is "
"presented, but a view normally delegates to a template, which describes "
"*how* the data is presented."
msgstr ""

# ba9156bce7314a53b0babdab3ecbe3a4
#: ../../faq/general.txt:101
msgid ""
"Where does the \"controller\" fit in, then? In Django's case, it's probably "
"the framework itself: the machinery that sends a request to the appropriate "
"view, according to the Django URL configuration."
msgstr ""

# ab95b80503484fe0971f7ef1982b2332
#: ../../faq/general.txt:105
msgid ""
"If you're hungry for acronyms, you might say that Django is a \"MTV\" "
"framework -- that is, \"model\", \"template\", and \"view.\" That breakdown "
"makes much more sense."
msgstr ""

# dc234bb09da948b1ab284f2d58329604
#: ../../faq/general.txt:109
msgid ""
"At the end of the day, of course, it comes down to getting stuff done. And, "
"regardless of how things are named, Django gets stuff done in a way that's "
"most logical to us."
msgstr ""

# 785ee468e7a64c2a854f53565017bb49
#: ../../faq/general.txt:114
msgid "<Framework X> does <feature Y> -- why doesn't Django?"
msgstr ""

# e1d1db06707040fe8632186b4223158c
#: ../../faq/general.txt:116
msgid ""
"We're well aware that there are other awesome Web frameworks out there, and "
"we're not averse to borrowing ideas where appropriate. However, Django was "
"developed precisely because we were unhappy with the status quo, so please "
"be aware that \"because <Framework X> does it\" is not going to be "
"sufficient reason to add a given feature to Django."
msgstr ""

# cbf0cfc024ab4706ad88bb3521959731
#: ../../faq/general.txt:123
msgid ""
"Why did you write all of Django from scratch, instead of using other Python "
"libraries?"
msgstr ""

# fc4a58ca33c04a41bd55e13580a11e1c
#: ../../faq/general.txt:125
msgid ""
"When Django was originally written a couple of years ago, Adrian and Simon "
"spent quite a bit of time exploring the various Python Web frameworks "
"available."
msgstr ""

# 4c0624fb66144228acc672c017328cb9
#: ../../faq/general.txt:129
msgid "In our opinion, none of them were completely up to snuff."
msgstr ""

# 5bf6af9d13b64908aebf5d3a6d40a768
#: ../../faq/general.txt:131
msgid "We're picky. You might even call us perfectionists. (With deadlines.)"
msgstr ""

# 4e4bcdd11152447f8ee441c8346813c5
#: ../../faq/general.txt:133
msgid ""
"Over time, we stumbled across open-source libraries that did things we'd "
"already implemented. It was reassuring to see other people solving similar "
"problems in similar ways, but it was too late to integrate outside code: "
"We'd already written, tested and implemented our own framework bits in "
"several production settings -- and our own code met our needs delightfully."
msgstr ""

# 70ddd762555444a8b6156c94ff20c8cb
#: ../../faq/general.txt:139
msgid ""
"In most cases, however, we found that existing frameworks/tools inevitably "
"had some sort of fundamental, fatal flaw that made us squeamish. No tool fit "
"our philosophies 100%."
msgstr ""

# 38d5d6317cef4c8686c59725fec753c5
#: ../../faq/general.txt:143
msgid "Like we said: We're picky."
msgstr ""

# e832e7e782774897add242524fe51cac
#: ../../faq/general.txt:145
msgid ""
"We've documented our philosophies on the :doc:`design philosophies page </"
"misc/design-philosophies>`."
msgstr ""

# 9d7e7b8c08f549a49ac98d068d6e5f32
#: ../../faq/general.txt:149
msgid "Is Django a content-management-system (CMS)?"
msgstr ""

# c64b82acaeda4e42a7c79dcd7f359251
#: ../../faq/general.txt:151
msgid ""
"No, Django is not a CMS, or any sort of \"turnkey product\" in and of "
"itself. It's a Web framework; it's a programming tool that lets you build "
"Web sites."
msgstr ""

# 9d843288112c4cd0a1adcd2612d241c4
#: ../../faq/general.txt:154
msgid ""
"For example, it doesn't make much sense to compare Django to something like "
"Drupal_, because Django is something you use to *create* things like Drupal."
msgstr ""

# 79ba097d545944339cd8e86d4f36235f
#: ../../faq/general.txt:157
msgid ""
"Of course, Django's automatic admin site is fantastic and timesaving -- but "
"the admin site is one module of Django the framework. Furthermore, although "
"Django has special conveniences for building \"CMS-y\" apps, that doesn't "
"mean it's not just as appropriate for building \"non-CMS-y\" apps (whatever "
"that means!)."
msgstr ""

# ac450810b3b94c24ba1b2fa3d15b3421
#: ../../faq/general.txt:166
msgid "How can I download the Django documentation to read it offline?"
msgstr ""

# c83b1bc90496468a997cb00c198db529
#: ../../faq/general.txt:168
msgid ""
"The Django docs are available in the ``docs`` directory of each Django "
"tarball release. These docs are in reST (reStructuredText) format, and each "
"text file corresponds to a Web page on the official Django site."
msgstr ""

# f7b210a301b440b18710a5eff5053af5
#: ../../faq/general.txt:172
msgid ""
"Because the documentation is `stored in revision control`_, you can browse "
"documentation changes just like you can browse code changes."
msgstr ""

# fb7a089fd4ee474580d29d77c0b1580d
#: ../../faq/general.txt:175
msgid ""
"Technically, the docs on Django's site are generated from the latest "
"development versions of those reST documents, so the docs on the Django site "
"may offer more information than the docs that come with the latest Django "
"release."
msgstr ""

# 32f17291e870407694adb4138daceeed
#: ../../faq/general.txt:182
msgid "Where can I find Django developers for hire?"
msgstr ""

# d8e75e2e73c04e0ba1cd67b0fe60fc41
#: ../../faq/general.txt:184
msgid ""
"Consult our `developers for hire page`_ for a list of Django developers who "
"would be happy to help you."
msgstr ""

# aaaa78497fa64996a90c1965aeb515cb
#: ../../faq/general.txt:187
msgid ""
"You might also be interested in posting a job to http://djangogigs.com/ . If "
"you want to find Django-capable people in your local area, try http://"
"djangopeople.net/ ."
msgstr ""

# 2b878e773ea241c8912fd8cdd11f39ed
#: ../../faq/help.txt:2
msgid "FAQ: Getting Help"
msgstr ""

# 4121f005ffab4c3b9e811a9b3b962898
#: ../../faq/help.txt:5
msgid "How do I do X? Why doesn't Y work? Where can I go to get help?"
msgstr ""

# 46c7760bb1954c7c8f4c93330881e4d5
#: ../../faq/help.txt:7
msgid ""
"If this FAQ doesn't contain an answer to your question, you might want to "
"try the `django-users mailing list`_. Feel free to ask any question related "
"to installing, using, or debugging Django."
msgstr ""

# f434ef0c133944c8b7a7f28db2490bfc
#: ../../faq/help.txt:11
msgid ""
"If you prefer IRC, the `#django IRC channel`_ on the Freenode IRC network is "
"an active community of helpful individuals who may be able to solve your "
"problem."
msgstr ""

# 690fdd75d3f54e11ae7dd11d6d7fec6c
#: ../../faq/help.txt:18
msgid "Why hasn't my message appeared on django-users?"
msgstr ""

# e00d354d033549e18f74f45214930b26
#: ../../faq/help.txt:20
msgid ""
"django-users_ has a lot of subscribers. This is good for the community, as "
"it means many people are available to contribute answers to questions. "
"Unfortunately, it also means that django-users_ is an attractive target for "
"spammers."
msgstr ""

# 43246b8388b44d62ab67c0e42f04800b
#: ../../faq/help.txt:25
msgid ""
"In order to combat the spam problem, when you join the django-users_ mailing "
"list, we manually moderate the first message you send to the list. This "
"means that spammers get caught, but it also means that your first question "
"to the list might take a little longer to get answered. We apologize for any "
"inconvenience that this policy may cause."
msgstr ""

# 0664f5d05a1240c69fee5909955c2113
#: ../../faq/help.txt:34
msgid "Nobody on django-users answered my question! What should I do?"
msgstr ""

# be25b554634b4bffafb77e882c2adad3
#: ../../faq/help.txt:36
msgid ""
"Try making your question more specific, or provide a better example of your "
"problem."
msgstr ""

# c5852a3a4804403b89682ad77a1d2a69
#: ../../faq/help.txt:39
msgid ""
"As with most open-source mailing lists, the folks on django-users_ are "
"volunteers. If nobody has answered your question, it may be because nobody "
"knows the answer, it may be because nobody can understand the question, or "
"it may be that everybody that can help is busy. One thing you might try is "
"to ask the question on IRC -- visit the `#django IRC channel`_ on the "
"Freenode IRC network."
msgstr ""

# c89d57fe48cc43dab217eeffab4d7a78
#: ../../faq/help.txt:46
msgid ""
"You might notice we have a second mailing list, called django-developers_ -- "
"but please don't email support questions to this mailing list. This list is "
"for discussion of the development of Django itself. Asking a tech support "
"question there is considered quite impolite."
msgstr ""

# eec5fe4e145343eba956e08fc24fb012
#: ../../faq/help.txt:54
msgid "I think I've found a bug! What should I do?"
msgstr ""

# a9936ba615a74d3cbc7f370749a010e7
#: ../../faq/help.txt:56
msgid ""
"Detailed instructions on how to handle a potential bug can be found in our :"
"ref:`Guide to contributing to Django <reporting-bugs>`."
msgstr ""

# 90ca5d4c3c04422992ef575f4eea67cd
#: ../../faq/help.txt:60
msgid "I think I've found a security problem! What should I do?"
msgstr ""

# a79d65e4d2ac4e8c9f2fc569e4d7d376
#: ../../faq/help.txt:62
msgid ""
"If you think you've found a security problem with Django, please send a "
"message to security@djangoproject.com. This is a private list only open to "
"long-time, highly trusted Django developers, and its archives are not "
"publicly readable."
msgstr ""

# 68dc6ad7698b48938e73534bad2a41cd
#: ../../faq/help.txt:66
msgid ""
"Due to the sensitive nature of security issues, we ask that if you think you "
"have found a security problem, *please* don't send a message to one of the "
"public mailing lists. Django has a :ref:`policy for handling security issues "
"<reporting-security-issues>`; while a defect is outstanding, we would like "
"to minimize any damage that could be inflicted through public knowledge of "
"that defect."
msgstr ""

# 855e8320474644748fcb5a189db30e72
#: ../../faq/index.txt:3
msgid "Django FAQ"
msgstr ""

# 6dde66484d4d46839e83ec0051797565
#: ../../faq/install.txt:2
msgid "FAQ: Installation"
msgstr ""

# d351aa7ce4484930b110f980024ff03a
#: ../../faq/install.txt:5
msgid "How do I get started?"
msgstr ""

# a5c83211d25648b7963a2a8f3e1e44c9
#: ../../faq/install.txt:7
msgid "`Download the code`_."
msgstr ""

# 512010aa26c4432591d9eee3db608375
#: ../../faq/install.txt:8
msgid "Install Django (read the :doc:`installation guide </intro/install>`)."
msgstr ""

# 0c92373e911145e095409f36769217a1
#: ../../faq/install.txt:9
msgid "Walk through the :doc:`tutorial </intro/tutorial01>`."
msgstr ""

# bdede8dfce24451881fdbf823966e259
#: ../../faq/install.txt:10
msgid ""
"Check out the rest of the :doc:`documentation </index>`, and `ask "
"questions`_ if you run into trouble."
msgstr ""

# 1d358a988f444d3abc7a29b94202f501
#: ../../faq/install.txt:17
msgid "What are Django's prerequisites?"
msgstr ""

# 79725b7cf86a4a99b84409ca3a61208e
#: ../../faq/install.txt:19
msgid ""
"Django requires Python_, specifically any version of Python from 2.5 through "
"2.7. No other Python libraries are required for basic Django usage."
msgstr ""

# d7f907d1b2da4cb88db1eda990680451
#: ../../faq/install.txt:23
msgid ""
"For a development environment -- if you just want to experiment with Django "
"-- you don't need to have a separate Web server installed; Django comes with "
"its own lightweight development server. For a production environment, Django "
"follows the WSGI spec, :pep:`3333`, which means it can run on a variety of "
"server platforms. See :doc:`Deploying Django </howto/deployment/index>` for "
"some popular alternatives. Also, the `server arrangements wiki page`_ "
"contains details for several deployment strategies."
msgstr ""

# ead8815914f54529a7b1aa5186d70f5a
#: ../../faq/install.txt:31
msgid ""
"If you want to use Django with a database, which is probably the case, "
"you'll also need a database engine. PostgreSQL_ is recommended, because "
"we're PostgreSQL fans, and MySQL_, `SQLite 3`_, and Oracle_ are also "
"supported."
msgstr ""

# 2d6d2b282439431aad7297487e79f606
#: ../../faq/install.txt:43
msgid ""
"Do I lose anything by using Python 2.5 versus newer Python versions, such as "
"Python 2.6 or 2.7?"
msgstr ""

# 7cecffa8b56e410fa577e48bc01af296
#: ../../faq/install.txt:45
msgid ""
"Not in the core framework. Currently, Django itself officially supports any "
"version of Python from 2.5 through 2.7, inclusive. However, newer versions "
"of Python are often faster, have more features, and are better supported. If "
"you use a newer version of Python you will also have access to some APIs "
"that aren't available under older versions of Python. For example, since "
"Python 2.6, you can use the advanced string formatting described in :pep:"
"`3101`."
msgstr ""

# 2ab09edd4a214a4a9debaf45df3a38a2
#: ../../faq/install.txt:52
msgid ""
"Third-party applications for use with Django are, of course, free to set "
"their own version requirements."
msgstr ""

# af7a7d991a89423b9ab70f2acfc3fa36
#: ../../faq/install.txt:55
msgid ""
"Over the next year or two Django will begin dropping support for older "
"Python versions as part of a migration which will end with Django running on "
"Python 3 (see below for details)."
msgstr ""

# b18acc37c88549b289352f4aa4ac811b
#: ../../faq/install.txt:59
msgid ""
"All else being equal, we recommend that you use the latest 2.x release "
"(currently Python 2.7). This will let you take advantage of the numerous "
"improvements and optimizations to the Python language since version 2.5, and "
"will help ease the process of dropping support for older Python versions on "
"the road to Python 3."
msgstr ""

# e99565e5ab9c4615a8f4223f1c678e5a
#: ../../faq/install.txt:66
msgid "Can I use Django with Python 2.4?"
msgstr ""

# 56075dc6cb82499bb5027eb00229be41
#: ../../faq/install.txt:68
msgid "As of Django 1.4, no."
msgstr ""

# 8620edd6df5945408ce3fb54cea1fd2c
#: ../../faq/install.txt:70
msgid ""
"Django 1.3 and earlier supported Python 2.4. Django 1.4 (the current "
"development version, which hasn't been officially released) and newer "
"version require Python 2.5 or greater (but not 3.x; see the next question.)"
msgstr ""

# 3177d7aaa0724ca1a508c521c2c78297
#: ../../faq/install.txt:74
msgid ""
"We highly recommend you upgrade Python if possible, but Django 1.3.x will "
"continue to support Python 2.4."
msgstr ""

# 4426cd37563742c7bb8aaf82554b5652
#: ../../faq/install.txt:78
msgid "Can I use Django with Python 3?"
msgstr ""

# 5be2d1dbf6f34648bd912446bedcb8be
#: ../../faq/install.txt:80
msgid ""
"Not at the moment. Python 3.0 introduced a number of backwards-incompatible "
"changes to the Python language, and although these changes are generally a "
"good thing for Python's future, it will be a while before most Python "
"software catches up and is able to run on Python 3.0. For larger Python-"
"based software like Django, the transition is expected to take at least a "
"year or two (since it involves dropping support for older Python releases "
"and so must be done gradually)."
msgstr ""

# 3753d5ad5fca45d7ac32dd5319825bc0
#: ../../faq/install.txt:89
msgid ""
"In the meantime, Python 2.x releases will be supported and provided with bug "
"fixes and security updates by the Python development team, so continuing to "
"use a Python 2.x release during the transition should not present any risk."
msgstr ""

# c7ab9adcffc645a4a908dc0f02ad0f23
#: ../../faq/install.txt:95
msgid "Will Django run under shared hosting (like TextDrive or Dreamhost)?"
msgstr ""

# ffb6121a559441a69f9b4950e8943f02
#: ../../faq/install.txt:97
msgid "See our `Django-friendly Web hosts`_ page."
msgstr ""

# ece516723ef94a4f8cb6e9f505f0ed4e
#: ../../faq/install.txt:102
msgid "Should I use the stable version or development version?"
msgstr ""

# b7cfd99de539457495979665f1ee05a5
#: ../../faq/install.txt:104
msgid ""
"Generally, if you're using code in production, you should be using a stable "
"release. The Django project publishes a full stable release every nine "
"months or so, with bugfix updates in between. These stable releases contain "
"the API that is covered by our backwards compatibility guarantees; if you "
"write code against stable releases, you shouldn't have any problems "
"upgrading when the next official version is released."
msgstr ""

# efab6fdd50424c5b9ff3f3876d7b91e7
#: ../../faq/models.txt:2
msgid "FAQ: Databases and models"
msgstr ""

# 908f1e7863fd4989b8fe831e7deb9dcb
#: ../../faq/models.txt:7
msgid "How can I see the raw SQL queries Django is running?"
msgstr ""

# 1b1ef713327e4c91b2fada475adbacad
#: ../../faq/models.txt:9
msgid ""
"Make sure your Django :setting:`DEBUG` setting is set to ``True``. Then, "
"just do this::"
msgstr ""

# 1ea77f48040c42d28312cb50a6f9026b
#: ../../faq/models.txt:17
msgid ""
"``connection.queries`` is only available if :setting:`DEBUG` is ``True``. "
"It's a list of dictionaries in order of query execution. Each dictionary has "
"the following::"
msgstr ""

# 92c5804b4d2549f79046700bdd6f5c2f
#: ../../faq/models.txt:24
msgid ""
"``connection.queries`` includes all SQL statements -- INSERTs, UPDATES, "
"SELECTs, etc. Each time your app hits the database, the query will be "
"recorded. Note that the SQL recorded here may be :ref:`incorrectly quoted "
"under SQLite <sqlite-connection-queries>`."
msgstr ""

# 24ca9edd5bd8452a920261da752a2237
#: ../../faq/models.txt:31
msgid ""
"If you are using :doc:`multiple databases</topics/db/multi-db>`, you can use "
"the same interface on each member of the ``connections`` dictionary::"
msgstr ""

# c41639c7b8c84ad098480f28f73da600
#: ../../faq/models.txt:38
msgid "Can I use Django with a pre-existing database?"
msgstr ""

# 4047f6b7922c4ac3819b4ce1ad8d6206
#: ../../faq/models.txt:40
msgid ""
"Yes. See :doc:`Integrating with a legacy database </howto/legacy-databases>`."
msgstr ""

# d9609f7729ba4a3dbc6bf242bdfb9b3e
#: ../../faq/models.txt:43
msgid "If I make changes to a model, how do I update the database?"
msgstr ""

# baa45354299446debcd7a853ef8a7770
#: ../../faq/models.txt:45
msgid ""
"If you don't mind clearing data, your project's ``manage.py`` utility has an "
"option to reset the SQL for a particular application::"
msgstr ""

# 2ee1ed14859e43a2a1fbd2bda922d48a
#: ../../faq/models.txt:50
msgid "This drops any tables associated with ``appname`` and recreates them."
msgstr ""

# 4c0d51187543412cb274b7480d01ece6
#: ../../faq/models.txt:52
msgid ""
"If you do care about deleting data, you'll have to execute the ``ALTER "
"TABLE`` statements manually in your database."
msgstr ""

# 93cb1215174f406c861d51ac2fbf5fab
#: ../../faq/models.txt:55
msgid ""
"There are `external projects which handle schema updates <http://"
"djangopackages.com/grids/g/database-migration/>`_, of which the current "
"defacto standard is `south <http://south.aeracode.org/>`_."
msgstr ""

# b908cceaa8224965a836da0a9dcf0c47
#: ../../faq/models.txt:60
msgid "Do Django models support multiple-column primary keys?"
msgstr ""

# 343189fd8f2f46169ddbc2b0774d865d
#: ../../faq/models.txt:62
msgid "No. Only single-column primary keys are supported."
msgstr ""

# 0be0828d23a94259b1bf3e32c74b6dd7
#: ../../faq/models.txt:64
msgid ""
"But this isn't an issue in practice, because there's nothing stopping you "
"from adding other constraints (using the ``unique_together`` model option or "
"creating the constraint directly in your database), and enforcing the "
"uniqueness at that level. Single-column primary keys are needed for things "
"such as the admin interface to work; e.g., you need a simple way of being "
"able to specify an object to edit or delete."
msgstr ""

# 596f80ac5aaf4e22bb73479ad93a6000
#: ../../faq/models.txt:72
msgid ""
"How do I add database-specific options to my CREATE TABLE statements, such "
"as specifying MyISAM as the table type?"
msgstr ""

# a1316cd5ac7642709fe1cd988e70666a
#: ../../faq/models.txt:74
msgid ""
"We try to avoid adding special cases in the Django code to accommodate all "
"the database-specific options such as table type, etc. If you'd like to use "
"any of these options, create an :ref:`SQL initial data file <initial-sql>` "
"that contains ``ALTER TABLE`` statements that do what you want to do. The "
"initial data files are executed in your database after the ``CREATE TABLE`` "
"statements."
msgstr ""

# 982b20e933ee4353b01f0ea356f56c1c
#: ../../faq/models.txt:80
msgid ""
"For example, if you're using MySQL and want your tables to use the MyISAM "
"table type, create an initial data file and put something like this in it::"
msgstr ""

# eabf37bdda61484e86e77f4a267c4a8a
#: ../../faq/models.txt:85
msgid ""
"As explained in the :ref:`SQL initial data file <initial-sql>` "
"documentation, this SQL file can contain arbitrary SQL, so you can make any "
"sorts of changes you need to make."
msgstr ""

# 9febf6024fd04ee4b781169df04ec51e
#: ../../faq/models.txt:90
msgid "Why is Django leaking memory?"
msgstr ""

# ad42a8ea63f14364837d48d593fdae9e
#: ../../faq/models.txt:92
msgid ""
"Django isn't known to leak memory. If you find your Django processes are "
"allocating more and more memory, with no sign of releasing it, check to make "
"sure your :setting:`DEBUG` setting is set to ``False``. If :setting:`DEBUG` "
"is ``True``, then Django saves a copy of every SQL statement it has executed."
msgstr ""

# 21da74bec7c9440b927e7d107685b9d0
#: ../../faq/models.txt:97
msgid ""
"(The queries are saved in ``django.db.connection.queries``. See `How can I "
"see the raw SQL queries Django is running?`_.)"
msgstr ""

# 8f9d3e70007f4970b1f882b5dd016897
#: ../../faq/models.txt:100
msgid "To fix the problem, set :setting:`DEBUG` to ``False``."
msgstr ""

# 766c614500dd4c4eb3280cd410913b68
#: ../../faq/models.txt:102
msgid ""
"If you need to clear the query list manually at any point in your functions, "
"just call ``reset_queries()``, like this::"
msgstr ""

# 23d27372195b4434bc767c4f6c1934e4
#: ../../faq/usage.txt:2
msgid "FAQ: Using Django"
msgstr ""

# b999534999fb4ea599feb05e484bf0f4
#: ../../faq/usage.txt:5
msgid "Why do I get an error about importing DJANGO_SETTINGS_MODULE?"
msgstr ""

# dad87a5a51b948f8832127f93653c64d
#: ../../faq/usage.txt:7
msgid "Make sure that:"
msgstr ""

# 9ac14e26daa14699aae30ff0d12ff0e7
#: ../../faq/usage.txt:9
msgid ""
"The environment variable DJANGO_SETTINGS_MODULE is set to a fully-qualified "
"Python module (i.e. \"mysite.settings\")."
msgstr ""

# c387cef8edd742218a9c26f399be4157
#: ../../faq/usage.txt:12
msgid ""
"Said module is on ``sys.path`` (``import mysite.settings`` should work)."
msgstr ""

# eecad9d09c61435b81a2dfe18634262c
#: ../../faq/usage.txt:14
msgid "The module doesn't contain syntax errors (of course)."
msgstr ""

# 06a52ff192634683b459a3af42f15532
#: ../../faq/usage.txt:16
msgid ""
"If you're using mod_python but *not* using Django's request handler, you'll "
"need to work around a mod_python bug related to the use of ``SetEnv``; "
"before you import anything from Django you'll need to do the following::"
msgstr ""

# 2a9875bd4a8f40cbaa96da9b03b222fa
#: ../../faq/usage.txt:23
msgid "(where ``req`` is the mod_python request object)."
msgstr ""

# 72636ac322364020a3ca521fcb7bbee0
#: ../../faq/usage.txt:26
msgid "I can't stand your template language. Do I have to use it?"
msgstr ""

# ddc10685da864fb9811ba76fdc80f51d
#: ../../faq/usage.txt:28
msgid ""
"We happen to think our template engine is the best thing since chunky bacon, "
"but we recognize that choosing a template language runs close to religion. "
"There's nothing about Django that requires using the template language, so "
"if you're attached to ZPT, Cheetah, or whatever, feel free to use those."
msgstr ""

# 1e51ef92acdd402ab0e739e69156e4d8
#: ../../faq/usage.txt:34
msgid "Do I have to use your model/database layer?"
msgstr ""

# 9bbe7deb455e4b1cabb157c546f88509
#: ../../faq/usage.txt:36
msgid ""
"Nope. Just like the template system, the model/database layer is decoupled "
"from the rest of the framework."
msgstr ""

# 2139bf0eec3644339a1b4cf954a31c6e
#: ../../faq/usage.txt:39
msgid ""
"The one exception is: If you use a different database library, you won't get "
"to use Django's automatically-generated admin site. That app is coupled to "
"the Django database layer."
msgstr ""

# ea5e70a79a9f43ada3a5d243ac4d8470
#: ../../faq/usage.txt:44
msgid "How do I use image and file fields?"
msgstr ""

# 4bd668a88c784d6a88664e3bd9f62f02
#: ../../faq/usage.txt:46
msgid ""
"Using a :class:`~django.db.models.FileField` or an :class:`~django.db.models."
"ImageField` in a model takes a few steps:"
msgstr ""

# 2530a9044c7f41619e0ce08be78ad1f5
#: ../../faq/usage.txt:49
msgid ""
"In your settings file, you'll need to define :setting:`MEDIA_ROOT` as the "
"full path to a directory where you'd like Django to store uploaded files. "
"(For performance, these files are not stored in the database.) Define :"
"setting:`MEDIA_URL` as the base public URL of that directory. Make sure that "
"this directory is writable by the Web server's user account."
msgstr ""

# 01c6e54a1b93422984b76bc3e00d9664
#: ../../faq/usage.txt:56
msgid ""
"Add the :class:`~django.db.models.FileField` or :class:`~django.db.models."
"ImageField` to your model, making sure to define the :attr:`~django.db."
"models.FileField.upload_to` option to tell Django to which subdirectory of :"
"setting:`MEDIA_ROOT` it should upload files."
msgstr ""

# dc57779b18794e5180cbec43b150f657
#: ../../faq/usage.txt:62
msgid ""
"All that will be stored in your database is a path to the file (relative to :"
"setting:`MEDIA_ROOT`). You'll most likely want to use the convenience :attr:"
"`~django.core.files.File.url` attribute provided by Django. For example, if "
"your :class:`~django.db.models.ImageField` is called ``mug_shot``, you can "
"get the absolute path to your image in a template with ``{{ object.mug_shot."
"url }}``."
msgstr ""

# 5d92868cfb7e4b56940ee0c852c4bee5
#: ../../faq/usage.txt:70
msgid "How do I make a variable available to all my templates?"
msgstr ""

# d370b7f2ea2e4e6280f4ffccc15729a2
#: ../../faq/usage.txt:72
msgid ""
"Sometimes your templates just all need the same thing. A common example "
"would be dynamically-generated menus. At first glance, it seems logical to "
"simply add a common dictionary to the template context."
msgstr ""

# b294a7a9821b447bb19d1f8f6912311e
#: ../../faq/usage.txt:76
msgid ""
"The correct solution is to use a ``RequestContext``. Details on how to do "
"this are here: :ref:`subclassing-context-requestcontext`."
msgstr ""
