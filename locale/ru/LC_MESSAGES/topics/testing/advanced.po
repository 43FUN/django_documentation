# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-07 10:34\n"
"PO-Revision-Date: 2013-02-27 00:21\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# e3f9612cfea54fcea4bf3b168a1d5793
#: ../../topics/testing/advanced.txt:3
msgid "Advanced testing topics"
msgstr ""

# 2ab9958d09ff49d9a01f53f296434cb9
#: ../../topics/testing/advanced.txt:6
msgid "The request factory"
msgstr ""

# a058d0ad56cb4725a428aa2e9bd4041d
#: ../../topics/testing/advanced.txt:12
msgid ""
"The :class:`~django.test.client.RequestFactory` shares the same API as the "
"test client. However, instead of behaving like a browser, the RequestFactory "
"provides a way to generate a request instance that can be used as the first "
"argument to any view. This means you can test a view function the same way "
"as you would test any other function -- as a black box, with exactly known "
"inputs, testing for specific outputs."
msgstr ""

# 3c473f64bbb749b8812cbcd4049d45ea
#: ../../topics/testing/advanced.txt:19
msgid ""
"The API for the :class:`~django.test.client.RequestFactory` is a slightly "
"restricted subset of the test client API:"
msgstr ""

# acd02437394b4d57909a8674198a7235
#: ../../topics/testing/advanced.txt:22
msgid ""
"It only has access to the HTTP methods :meth:`~Client.get()`, :meth:`~Client."
"post()`, :meth:`~Client.put()`, :meth:`~Client.delete()`, :meth:`~Client.head"
"()` and :meth:`~Client.options()`."
msgstr ""

# 394a627f0d15409ab7bbbca3fda15fef
#: ../../topics/testing/advanced.txt:27
msgid ""
"These methods accept all the same arguments *except* for ``follows``. Since "
"this is just a factory for producing requests, it's up to you to handle the "
"response."
msgstr ""

# 485a181c898b4a29a4207b0a17511288
#: ../../topics/testing/advanced.txt:31
msgid ""
"It does not support middleware. Session and authentication attributes must "
"be supplied by the test itself if required for the view to function properly."
msgstr ""

# 17a0aa53376240459afbd5fb23f0abf7
#: ../../topics/testing/advanced.txt:36
msgid "Example"
msgstr ""

# fd52a3c3ff0346f49fe74f57fa73a02c
#: ../../topics/testing/advanced.txt:38
msgid "The following is a simple unit test using the request factory::"
msgstr ""

# 6d8ca4678e2143a69131a818d8a80229
#: ../../topics/testing/advanced.txt:66
msgid "Tests and multiple databases"
msgstr ""

# f5a0ff6143274db7b622181e96c4b824
#: ../../topics/testing/advanced.txt:71
msgid "Testing master/slave configurations"
msgstr ""

# ce57b4ccbdfb4a39b79436ecd3c6a14a
#: ../../topics/testing/advanced.txt:73
msgid ""
"If you're testing a multiple database configuration with master/slave "
"replication, this strategy of creating test databases poses a problem. When "
"the test databases are created, there won't be any replication, and as a "
"result, data created on the master won't be seen on the slave."
msgstr ""

# 4798cd6aed4748088cdbfb9eb288a6fa
#: ../../topics/testing/advanced.txt:79
msgid ""
"To compensate for this, Django allows you to define that a database is a "
"*test mirror*. Consider the following (simplified) example database "
"configuration::"
msgstr ""

# 3b486ebd4d6d4cd7aabfe8db6d39d5b6
#: ../../topics/testing/advanced.txt:99
msgid ""
"In this setup, we have two database servers: ``dbmaster``, described by the "
"database alias ``default``, and ``dbslave`` described by the alias "
"``slave``. As you might expect, ``dbslave`` has been configured by the "
"database administrator as a read slave of ``dbmaster``, so in normal "
"activity, any write to ``default`` will appear on ``slave``."
msgstr ""

# 8087f07c475c46508759ed4e73974ed7
#: ../../topics/testing/advanced.txt:105
msgid ""
"If Django created two independent test databases, this would break any tests "
"that expected replication to occur. However, the ``slave`` database has been "
"configured as a test mirror (using the :setting:`TEST_MIRROR` setting), "
"indicating that under testing, ``slave`` should be treated as a mirror of "
"``default``."
msgstr ""

# fefe437fd80041c68ed9a9b01bdb7d20
#: ../../topics/testing/advanced.txt:111
msgid ""
"When the test environment is configured, a test version of ``slave`` will "
"*not* be created. Instead the connection to ``slave`` will be redirected to "
"point at ``default``. As a result, writes to ``default`` will appear on "
"``slave`` -- but because they are actually the same database, not because "
"there is data replication between the two databases."
msgstr ""

# d6638d4079824e868ec40c98f4391284
#: ../../topics/testing/advanced.txt:121
msgid "Controlling creation order for test databases"
msgstr ""

# 101f81907ad14f16b0b726cf503e5fe1
#: ../../topics/testing/advanced.txt:123
msgid ""
"By default, Django will assume all databases depend on the ``default`` "
"database and therefore always create the ``default`` database first. "
"However, no guarantees are made on the creation order of any other databases "
"in your test setup."
msgstr ""

# 5bb6d03057d04bf981b424844579cf22
#: ../../topics/testing/advanced.txt:128
msgid ""
"If your database configuration requires a specific creation order, you can "
"specify the dependencies that exist using the :setting:`TEST_DEPENDENCIES` "
"setting. Consider the following (simplified) example database configuration::"
msgstr ""

# 69cd40e838fd458bbfdf7fbea171548b
#: ../../topics/testing/advanced.txt:156
msgid ""
"Under this configuration, the ``diamonds`` database will be created first, "
"as it is the only database alias without dependencies. The ``default`` and "
"``clubs`` alias will be created next (although the order of creation of this "
"pair is not guaranteed); then ``hearts``; and finally ``spades``."
msgstr ""

# b53f5f74a7704a8ea59718a3b518207a
#: ../../topics/testing/advanced.txt:161
msgid ""
"If there are any circular dependencies in the :setting:`TEST_DEPENDENCIES` "
"definition, an ``ImproperlyConfigured`` exception will be raised."
msgstr ""

# e2c9850a202742eeb6bbd4bb93538483
#: ../../topics/testing/advanced.txt:166
msgid "Advanced features of ``TransactionTestCase``"
msgstr ""

# 861073a9ad8840298560e18b062b037f
#: ../../topics/testing/advanced.txt:176
msgid ""
"This attribute is a private API. It may be changed or removed without a "
"deprecation period in the future, for instance to accomodate changes in "
"application loading."
msgstr ""

# a5bd23649dd841758549b474b1951d0b
#: ../../topics/testing/advanced.txt:180
msgid ""
"It's used to optimize Django's own test suite, which contains hundreds of "
"models but no relations between models in different applications."
msgstr ""

# 7e49233eb442445094caf6845ab1575d
#: ../../topics/testing/advanced.txt:183
msgid ""
"By default, ``available_apps`` is set to ``None``. After each test, Django "
"calls :djadmin:`flush` to reset the database state. This empties all tables "
"and emits the :data:`~django.db.models.signals.post_syncdb` signal, which re-"
"creates one content type and three permissions for each model. This "
"operation gets expensive proportionally to the number of models."
msgstr ""

# e6f23b56ec5a4158a3e92b48e6be5325
#: ../../topics/testing/advanced.txt:189
msgid ""
"Setting ``available_apps`` to a list of applications instructs Django to "
"behave as if only the models from these applications were available. The "
"behavior of ``TransactionTestCase`` changes as follows:"
msgstr ""

# e8fe97ba93ca4d4591764ac6ceb0ca55
#: ../../topics/testing/advanced.txt:193
msgid ""
":data:`~django.db.models.signals.post_syncdb` is fired before each test to "
"create the content types and permissions for each model in available apps, "
"in case they're missing."
msgstr ""

# f3d9ecaa00eb44f8adf09d0f6821bb5a
#: ../../topics/testing/advanced.txt:196
msgid ""
"After each test, Django empties only tables corresponding to models in "
"available apps. However, at the database level, truncation may cascade to "
"related models in unavailable apps. Furthermore :data:`~django.db.models."
"signals.post_syncdb` isn't fired; it will be fired by the next "
"``TransactionTestCase``, after the correct set of applications is selected."
msgstr ""

# 32f153bda6114105af81b251d455b8d2
#: ../../topics/testing/advanced.txt:203
msgid ""
"Since the database isn't fully flushed, if a test creates instances of "
"models not included in ``available_apps``, they will leak and they may cause "
"unrelated tests to fail. Be careful with tests that use sessions; the "
"default session engine stores them in the database."
msgstr ""

# d437362911e84259820d118ac388b2a8
#: ../../topics/testing/advanced.txt:208
msgid ""
"Since :data:`~django.db.models.signals.post_syncdb` isn't emitted after "
"flushing the database, its state after a ``TransactionTestCase`` isn't the "
"same as after a ``TestCase``: it's missing the rows created by listeners to :"
"data:`~django.db.models.signals.post_syncdb`. Considering the :ref:`order in "
"which tests are executed <order-of-tests>`, this isn't an issue, provided "
"either all ``TransactionTestCase`` in a given test suite declare "
"``available_apps``, or none of them."
msgstr ""

# c8785538f5c649109fa75fb23b061f4d
#: ../../topics/testing/advanced.txt:216
msgid "``available_apps`` is mandatory in Django's own test suite."
msgstr ""

# 06aa9006d3b94bbb8f8da968f364a9e0
#: ../../topics/testing/advanced.txt:222
msgid ""
"Setting ``reset_sequences = True`` on a ``TransactionTestCase`` will make "
"sure sequences are always reset before the test run::"
msgstr ""

# facf43b67e21443fb9c7bed11cc01e31
#: ../../topics/testing/advanced.txt:233
msgid ""
"Unless you are explicitly testing primary keys sequence numbers, it is "
"recommended that you do not hard code primary key values in tests."
msgstr ""

# d188f83b8b2f4024b93563986de88aea
#: ../../topics/testing/advanced.txt:236
msgid ""
"Using ``reset_sequences = True`` will slow down the test, since the primary "
"key reset is an relatively expensive database operation."
msgstr ""

# b2450adeb92a4a48b1a306332f68c16c
#: ../../topics/testing/advanced.txt:240
msgid "Running tests outside the test runner"
msgstr ""

# a56f4f80530642f589b221456548b3df
#: ../../topics/testing/advanced.txt:242
msgid ""
"If you want to run tests outside of ``./manage.py test`` -- for example, "
"from a shell prompt -- you will need to set up the test environment first. "
"Django provides a convenience method to do this::"
msgstr ""

# c45a98baed844ab9a47e817f9a3d77f8
#: ../../topics/testing/advanced.txt:249
msgid ""
":func:`~django.test.utils.setup_test_environment` puts several Django "
"features into modes that allow for repeatable testing, but does not create "
"the test databases; :func:`django.test.runner.DiscoverRunner."
"setup_databases` takes care of that."
msgstr ""

# 1a3be3dc09554c2aa18bb337dcbbfe31
#: ../../topics/testing/advanced.txt:254
msgid ""
"The call to :func:`~django.test.utils.setup_test_environment` is made "
"automatically as part of the setup of ``./manage.py test``. You only need to "
"manually invoke this method if you're not using running your tests via "
"Django's test runner."
msgstr ""

# 1da6ec861dc243399ed539c674c2d0ee
#: ../../topics/testing/advanced.txt:262
msgid "Using different testing frameworks"
msgstr ""

# bfdb8538d9c34ec5bb8f936a10edc1b0
#: ../../topics/testing/advanced.txt:264
msgid ""
"Clearly, :mod:`unittest` is not the only Python testing framework. While "
"Django doesn't provide explicit support for alternative frameworks, it does "
"provide a way to invoke tests constructed for an alternative framework as if "
"they were normal Django tests."
msgstr ""

# 5be94f80059d42ebbf4cb34a5e98abca
#: ../../topics/testing/advanced.txt:269
msgid ""
"When you run ``./manage.py test``, Django looks at the :setting:"
"`TEST_RUNNER` setting to determine what to do. By default, :setting:"
"`TEST_RUNNER` points to ``'django.test.runner.DiscoverRunner'``. This class "
"defines the default Django testing behavior. This behavior involves:"
msgstr ""

# 95962869b2164509a3e741cea8812c2b
#: ../../topics/testing/advanced.txt:274
msgid "Performing global pre-test setup."
msgstr ""

# 9bec446fa4854745bd528d3f48696d05
#: ../../topics/testing/advanced.txt:276
msgid ""
"Looking for tests in any file below the current directory whose name matches "
"the pattern ``test*.py``."
msgstr ""

# 50c25f76ff384c7e9df67e2687df6b34
#: ../../topics/testing/advanced.txt:279
msgid "Creating the test databases."
msgstr ""

# 920c7b31e37d43e6b93e39b74f4a812f
#: ../../topics/testing/advanced.txt:281
msgid ""
"Running ``syncdb`` to install models and initial data into the test "
"databases."
msgstr ""

# 54cf4dc6126d430f96e302d82bee643a
#: ../../topics/testing/advanced.txt:284
msgid "Running the tests that were found."
msgstr ""

# 44a4d66d9ddf4c7296872c916da70416
#: ../../topics/testing/advanced.txt:286
msgid "Destroying the test databases."
msgstr ""

# bf748052f92e426aa26ae1fc2767c82b
#: ../../topics/testing/advanced.txt:288
msgid "Performing global post-test teardown."
msgstr ""

# c3cbfcb8811743758fe662627a2da782
#: ../../topics/testing/advanced.txt:290
msgid ""
"If you define your own test runner class and point :setting:`TEST_RUNNER` at "
"that class, Django will execute your test runner whenever you run ``./manage."
"py test``. In this way, it is possible to use any test framework that can be "
"executed from Python code, or to modify the Django test execution process to "
"satisfy whatever testing requirements you may have."
msgstr ""

# 837000f3879b4e768931a28604226240
#: ../../topics/testing/advanced.txt:299
msgid "Defining a test runner"
msgstr ""

# 3cc676787d5a4be3befdbd908576d418
#: ../../topics/testing/advanced.txt:305
msgid ""
"A test runner is a class defining a ``run_tests()`` method. Django ships "
"with a ``DiscoverRunner`` class that defines the default Django testing "
"behavior. This class defines the ``run_tests()`` entry point, plus a "
"selection of other methods that are used to by ``run_tests()`` to set up, "
"execute and tear down the test suite."
msgstr ""

# 09b3e6d993df4054879e44917cc38684
#: ../../topics/testing/advanced.txt:313
msgid ""
"``DiscoverRunner`` will search for tests in any file matching ``pattern``."
msgstr ""

# dd1da6deebdc47aa882bf68c3f2d84d4
#: ../../topics/testing/advanced.txt:315
msgid ""
"``top_level`` can be used to specify the directory containing your top-level "
"Python modules. Usually Django can figure this out automatically, so it's "
"not necessary to specify this option. If specified, it should generally be "
"the directory containing your ``manage.py`` file."
msgstr ""

# 1fb65d5d04894f7190a09e920b71a5fe
#: ../../topics/testing/advanced.txt:320
msgid ""
"``verbosity`` determines the amount of notification and debug information "
"that will be printed to the console; ``0`` is no output, ``1`` is normal "
"output, and ``2`` is verbose output."
msgstr ""

# 19e3c450816b4e70a8c49de15cfafc1f
#: ../../topics/testing/advanced.txt:324
msgid ""
"If ``interactive`` is ``True``, the test suite has permission to ask the "
"user for instructions when the test suite is executed. An example of this "
"behavior would be asking for permission to delete an existing test database. "
"If ``interactive`` is ``False``, the test suite must be able to run without "
"any manual intervention."
msgstr ""

# aab2a32c725a4a1fb19e90119b1b4f9c
#: ../../topics/testing/advanced.txt:330
msgid ""
"If ``failfast`` is ``True``, the test suite will stop running after the "
"first test failure is detected."
msgstr ""

# ede46913b58143758f9475346ada9530
#: ../../topics/testing/advanced.txt:333
msgid ""
"Django may, from time to time, extend the capabilities of the test runner by "
"adding new arguments. The ``**kwargs`` declaration allows for this "
"expansion. If you subclass ``DiscoverRunner`` or write your own test runner, "
"ensure it accepts ``**kwargs``."
msgstr ""

# 8be0ee371bf54672898eec1465eabdfb
#: ../../topics/testing/advanced.txt:338
msgid ""
"Your test runner may also define additional command-line options. If you add "
"an ``option_list`` attribute to a subclassed test runner, those options will "
"be added to the list of command-line options that the :djadmin:`test` "
"command can use."
msgstr ""

# b8a642df06234a28a52b91faad96996c
#: ../../topics/testing/advanced.txt:344
msgid "Attributes"
msgstr ""

# b4c238c7e72c45279dfb16a00a744543
#: ../../topics/testing/advanced.txt:348
msgid ""
"This is the class that loads tests, whether from TestCases or modules or "
"otherwise and bundles them into test suites for the runner to execute. By "
"default it is set to ``unittest.defaultTestLoader``. You can override this "
"attribute if your tests are going to be loaded in unusual ways."
msgstr ""

# 388c28c0202348af928f1baad629f305
#: ../../topics/testing/advanced.txt:355
msgid ""
"This is the tuple of ``optparse`` options which will be fed into the "
"management command's ``OptionParser`` for parsing arguments. See the "
"documentation for Python's ``optparse`` module for more details."
msgstr ""

# 7e013f17d22b42bf914cb11be7331001
#: ../../topics/testing/advanced.txt:360
msgid "Methods"
msgstr ""

# 58bb6f675d294b50a1f35122d60bb709
#: ../../topics/testing/advanced.txt:364
msgid "Run the test suite."
msgstr ""

# 460bfd1f749a4caa80453d7c41653473
#: ../../topics/testing/advanced.txt:366
msgid ""
"``test_labels`` is a list of strings describing the tests to be run. A test "
"label can take one of four forms:"
msgstr ""

# e3c3702e761d4ee197fca3a632dc20a7
#: ../../topics/testing/advanced.txt:369
msgid ""
"``path.to.test_module.TestCase.test_method`` -- Run a single test method in "
"a test case."
msgstr ""

# 32aba3a9010e4d7682dca8fd26693c1b
#: ../../topics/testing/advanced.txt:371
msgid ""
"``path.to.test_module.TestCase`` -- Run all the test methods in a test case."
msgstr ""

# 1f1e039592e94b1f8dea54d47371082f
#: ../../topics/testing/advanced.txt:373
msgid ""
"``path.to.module`` -- Search for and run all tests in the named Python "
"package or module."
msgstr ""

# 1caab19158004d679becc39c7d7a1204
#: ../../topics/testing/advanced.txt:375
msgid ""
"``path/to/directory`` -- Search for and run all tests below the named "
"directory."
msgstr ""

# 64805d3f12f540cda5c5722665feefdc
#: ../../topics/testing/advanced.txt:378
msgid ""
"If ``test_labels`` has a value of ``None``, the test runner will search for "
"tests in all files below the current directory whose names match its "
"``pattern`` (see above)."
msgstr ""

# 6d44ee50fb104fb387e4ef49b99821e3
# 0000ada82f1f4923a4f92946f8549c9c
#: ../../topics/testing/advanced.txt:382 ../../topics/testing/advanced.txt:409
msgid ""
"``extra_tests`` is a list of extra ``TestCase`` instances to add to the "
"suite that is executed by the test runner. These extra tests are run in "
"addition to those discovered in the modules listed in ``test_labels``."
msgstr ""

# 1c86556aa5f0401b9a63cd9a8a7a970b
#: ../../topics/testing/advanced.txt:386
msgid "This method should return the number of tests that failed."
msgstr ""

# b4f503d825bf413982e3d7c48e0ed597
#: ../../topics/testing/advanced.txt:390
msgid ""
"Sets up the test environment by calling :func:`~django.test.utils."
"setup_test_environment` and setting :setting:`DEBUG` to ``False``."
msgstr ""

# fdefadebcc404564a58127d166c59194
#: ../../topics/testing/advanced.txt:396
msgid "Constructs a test suite that matches the test labels provided."
msgstr ""

# 342a233b48d240ed8f2338ee5b5a7ba1
# 0bad855a5af449f899fcdf5d65decc63
#: ../../topics/testing/advanced.txt:398
msgid ""
"``test_labels`` is a list of strings describing the tests to be run. A test "
"label can take one of three forms:"
msgstr ""

# d8c73e5538e14d63b61f5375408d7692
# d404fa0c1b8042a6be502568714abaed
#: ../../topics/testing/advanced.txt:401
msgid ""
"``app.TestCase.test_method`` -- Run a single test method in a test case."
msgstr ""

# 185ef9ba30d94311b4c0943f36137107
# e25f20f290114845aa64e237311f7c68
#: ../../topics/testing/advanced.txt:403
msgid "``app.TestCase`` -- Run all the test methods in a test case."
msgstr ""

# 824f42d3a33f44a89035239bc5d5bdc7
# 35630131491c4a03b45beb559f8ff329
#: ../../topics/testing/advanced.txt:404
msgid "``app`` -- Search for and run all tests in the named application."
msgstr ""

# f4dac33e548749649f9799a06b5bff37
# b5953ce88abe4e8a91bebfe61431a8a6
#: ../../topics/testing/advanced.txt:406
msgid ""
"If ``test_labels`` has a value of ``None``, the test runner should run "
"search for tests in all the applications in :setting:`INSTALLED_APPS`."
msgstr ""

# acc5a757c9ba451395ca2a9fdf4054a7
#: ../../topics/testing/advanced.txt:413
msgid "Returns a ``TestSuite`` instance ready to be run."
msgstr ""

# a8227b580a864c3ba410a599896575a8
#: ../../topics/testing/advanced.txt:417
msgid "Creates the test databases."
msgstr ""

# d6be35a5b9d042e6ba21c9d471ca33d4
#: ../../topics/testing/advanced.txt:419
msgid ""
"Returns a data structure that provides enough detail to undo the changes "
"that have been made. This data will be provided to the ``teardown_databases()"
"`` function at the conclusion of testing."
msgstr ""

# 8c02111cc3c04c04964267b88add0939
#: ../../topics/testing/advanced.txt:425
msgid "Runs the test suite."
msgstr ""

# a2a24e91bc384b96b2a3b2874131d771
#: ../../topics/testing/advanced.txt:427
msgid "Returns the result produced by the running the test suite."
msgstr ""

# cf8f173b8790446187ffbfa19e4bfcea
#: ../../topics/testing/advanced.txt:431
msgid "Destroys the test databases, restoring pre-test conditions."
msgstr ""

# a327b76fb00c4ee2802824572f4649f4
#: ../../topics/testing/advanced.txt:433
msgid ""
"``old_config`` is a data structure defining the changes in the database "
"configuration that need to be reversed. It is the return value of the "
"``setup_databases()`` method."
msgstr ""

# 5d253ba81e904648aaa46dde38f27493
#: ../../topics/testing/advanced.txt:439
msgid "Restores the pre-test environment."
msgstr ""

# d8f6a6aaca49485e818098b7cdd012bb
#: ../../topics/testing/advanced.txt:443
msgid ""
"Computes and returns a return code based on a test suite, and the result "
"from that test suite."
msgstr ""

# 8b84d4bc171c47689cdb95065bc99ec0
#: ../../topics/testing/advanced.txt:448
msgid "Testing utilities"
msgstr ""

# dd5c7018711446549512aacec5ad767d
#: ../../topics/testing/advanced.txt:451
msgid "django.test.utils"
msgstr ""

# c20f62cf13364d4bbad4671d9c2704dc
#: ../../topics/testing/advanced.txt:456
msgid ""
"To assist in the creation of your own test runner, Django provides a number "
"of utility methods in the ``django.test.utils`` module."
msgstr ""

# 4ce85411b83e4cf7bc30531d8c086704
#: ../../topics/testing/advanced.txt:461
msgid ""
"Performs any global pre-test setup, such as the installing the "
"instrumentation of the template rendering system and setting up the dummy "
"email outbox."
msgstr ""

# a45df78dfc594a0d93b2ff3146d17459
#: ../../topics/testing/advanced.txt:467
msgid ""
"Performs any global post-test teardown, such as removing the black magic "
"hooks into the template system and restoring normal email services."
msgstr ""

# c187efa23773468794eeaaa0b213cd78
#: ../../topics/testing/advanced.txt:472
msgid "django.db.connection.creation"
msgstr ""

# 593578b5654242a3bb34827cd194b1e1
#: ../../topics/testing/advanced.txt:476
msgid ""
"The creation module of the database backend also provides some utilities "
"that can be useful during testing."
msgstr ""

# 21874849fb584c2cb7b0c5746c28a265
#: ../../topics/testing/advanced.txt:481
msgid "Creates a new test database and runs ``syncdb`` against it."
msgstr ""

# 921d97db317447c3a09cd73f2e42c6f7
#: ../../topics/testing/advanced.txt:483
msgid "``verbosity`` has the same behavior as in ``run_tests()``."
msgstr ""

# 25dc7a795b6e4c1db381c6de5f61db80
#: ../../topics/testing/advanced.txt:485
msgid ""
"``autoclobber`` describes the behavior that will occur if a database with "
"the same name as the test database is discovered:"
msgstr ""

# d99c30ade6b14c71ace4ae31f02d7be2
#: ../../topics/testing/advanced.txt:488
msgid ""
"If ``autoclobber`` is ``False``, the user will be asked to approve "
"destroying the existing database. ``sys.exit`` is called if the user does "
"not approve."
msgstr ""

# 2e54ea4ecdfc4664b7819d24407a698d
#: ../../topics/testing/advanced.txt:492
msgid ""
"If autoclobber is ``True``, the database will be destroyed without "
"consulting the user."
msgstr ""

# b15b97455c2d471aa352680b17e68227
#: ../../topics/testing/advanced.txt:495
msgid "Returns the name of the test database that it created."
msgstr ""

# 2ac630952c974e3db5e6789e1ce0c168
#: ../../topics/testing/advanced.txt:497
msgid ""
"``create_test_db()`` has the side effect of modifying the value of :setting:"
"`NAME` in :setting:`DATABASES` to match the name of the test database."
msgstr ""

# 18805b6da752427999445d59af13a626
#: ../../topics/testing/advanced.txt:503
msgid ""
"Destroys the database whose name is the value of :setting:`NAME` in :setting:"
"`DATABASES`, and sets :setting:`NAME` to the value of ``old_database_name``."
msgstr ""

# 8d7d02e3cfec429882ca613ce0b1bacc
#: ../../topics/testing/advanced.txt:507
msgid ""
"The ``verbosity`` argument has the same behavior as for :class:`~django.test."
"runner.DiscoverRunner`."
msgstr ""

# dc29877901bb453480d7ad6cf21d8913
#: ../../topics/testing/advanced.txt:513
msgid "Integration with coverage.py"
msgstr ""

# cf5d075211714b3c8d25cf8a00c4b15e
#: ../../topics/testing/advanced.txt:515
msgid ""
"Code coverage describes how much source code has been tested. It shows which "
"parts of your code are being exercised by tests and which are not. It's an "
"important part of testing applications, so it's strongly recommended to "
"check the coverage of your tests."
msgstr ""

# d4f3c27f2b3744028d49869efaafe4da
#: ../../topics/testing/advanced.txt:520
msgid ""
"Django can be easily integrated with `coverage.py`_, a tool for measuring "
"code coverage of Python programs. First, `install coverage.py`_. Next, run "
"the following from your project folder containing ``manage.py``::"
msgstr ""

# 874e59fd52df436b93439d83d90bba95
#: ../../topics/testing/advanced.txt:526
msgid ""
"This runs your tests and collects coverage data of the executed files in "
"your project. You can see a report of this data by typing following command::"
msgstr ""

# 5c05074376404364965ae9b7b005f893
#: ../../topics/testing/advanced.txt:531
msgid ""
"Note that some Django code was executed while running tests, but it is not "
"listed here because of the ``source`` flag passed to the previous command."
msgstr ""

# 1153b524671f4f77813d51f31f371aa1
#: ../../topics/testing/advanced.txt:534
msgid ""
"For more options like annotated HTML listings detailing missed lines, see "
"the `coverage.py`_ docs."
msgstr ""
