# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated <>, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-02-29 18:30\n"
"PO-Revision-Date: 2012-03-23 08:59+0400\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# f19097c7651a4773bc1743a4af0e344c
#: ../../topics/forms/modelforms.txt:3
msgid "Creating forms from models"
msgstr "Настройка интерфейса администратора"

# 23481b3edd2e4e76b68ee59d27281619
#: ../../topics/forms/modelforms.txt:11
msgid "``ModelForm``"
msgstr "``ModelForm``"

# 389750e491074638ba7cb8391c308e6e
#: ../../topics/forms/modelforms.txt:14
msgid ""
"If you're building a database-driven app, chances are you'll have forms that "
"map closely to Django models. For instance, you might have a ``BlogComment`` "
"model, and you want to create a form that lets people submit comments. In "
"this case, it would be redundant to define the field types in your form, "
"because you've already defined the fields in your model."
msgstr ""
"При разработке приложения, использующего базу данных, чаще всего вы будете "
"работать с формами, которые аналогичны моделям. Например, имея модель "
"``BlogComment``, вам может потребоваться создать форму, которая позволит "
"людям отправлять комментарии. В этом случае явное определение полей формы "
"будет дублировать код, так как все поля уже описаны в модели."

# e3778fa8f08648b0acb38ee97239dffb
#: ../../topics/forms/modelforms.txt:20
msgid ""
"For this reason, Django provides a helper class that let you create a "
"``Form`` class from a Django model."
msgstr ""
"По этой причине Django предоставляет вспомогательный класс, который позволит "
"вам создать класс ``Form`` по имеющейся модели."

# 91cf650492b344f6aa1cbf80ce1ffd42
#: ../../topics/forms/modelforms.txt:23
msgid "For example::"
msgstr "Например::"

# 84c8756e6e034261adfa30d11e7e658d
#: ../../topics/forms/modelforms.txt:40
msgid "Field types"
msgstr "Типы полей"

# 563266d5d37744ca92e383fb4c205bce
#: ../../topics/forms/modelforms.txt:42
msgid ""
"The generated ``Form`` class will have a form field for every model field. "
"Each model field has a corresponding default form field. For example, a "
"``CharField`` on a model is represented as a ``CharField`` on a form. A "
"model ``ManyToManyField`` is represented as a ``MultipleChoiceField``. Here "
"is the full list of conversions:"
msgstr ""
"Созданный экземпляр класса ``Form`` будет иметь поля для каждого поля "
"модели. Каждому полю модели соответствует стандартное поле формы. Например, "
"``CharField`` поле модели будет представлено на форме как ``CharField``, а "
"``ManyToManyField`` поле модели будет представлено как "
"``MultipleChoiceField``. Ниже представлен полный список соответствия полей "
"модели и формы:"

# 2c7bee9383014239874a7fbccba8cba8
#: ../../topics/forms/modelforms.txt:49
msgid "Model field"
msgstr "Поле модели"

# a29f18685e654e64941d9ae477c54599
#: ../../topics/forms/modelforms.txt:49
msgid "Form field"
msgstr "Поле формы"

# 0383424e631b4a938863b64a7cefb65d
#: ../../topics/forms/modelforms.txt:51
msgid "``AutoField``"
msgstr "``AutoField``"

# 55696cc2f2994241baa1da3ff490b48f
#: ../../topics/forms/modelforms.txt:51
msgid "Not represented in the form"
msgstr "Не представлено на форме"

# 82ce53716b384fa5be2658b92c1ac53a
#: ../../topics/forms/modelforms.txt:53
msgid "``BigIntegerField``"
msgstr "``BigIntegerField``"

# d91ed8f9177d43bf94d18ef5833fdb75
#: ../../topics/forms/modelforms.txt:53
msgid ""
"``IntegerField`` with ``min_value`` set to -9223372036854775808 and "
"``max_value`` set to 9223372036854775807."
msgstr ""
"``IntegerField`` с атрибутом ``min_value`` равным -9223372036854775808 и "
"атрибутом ``max_value`` равным 9223372036854775807."

# 85b3687a05c542bb89b9572b0e88b1f3
# b058d101b6bb42f88967fc749c142966
#: ../../topics/forms/modelforms.txt:57
msgid "``BooleanField``"
msgstr "``BooleanField``"

# 06dfc26648034826be26357675b60cb4
# b251942ec1b44f0197a5e042dfeb0895
# 540c8f05b7a649d4bb00de783a005619
# 6c7f36e666214ccda839715fb68d95a3
#: ../../topics/forms/modelforms.txt:59 ../../topics/forms/modelforms.txt:62
#: ../../topics/forms/modelforms.txt:74 ../../topics/forms/modelforms.txt:91
msgid "``CharField``"
msgstr "``CharField``"

# f9fd94d5384f4f6ab9935e14e39ebc3d
#: ../../topics/forms/modelforms.txt:59
msgid ""
"``CharField`` with ``max_length`` set to the model field's ``max_length``"
msgstr ""
"``CharField`` с атрибутом ``max_length`` равным значению атрибута "
"``max_length`` модели"

# 9b602838f0e44abd8247497932d2af8b
#: ../../topics/forms/modelforms.txt:62
msgid "``CommaSeparatedIntegerField``"
msgstr "``CommaSeparatedIntegerField``"

# ccdb9110f74d452fa3166c576d31ff9b
# 95e2487e438748b4998d4a75a34e38ae
#: ../../topics/forms/modelforms.txt:64
msgid "``DateField``"
msgstr "``DateField``"

# d61ccc5fae37482a8635bbed8e4c07ec
# 74383f59e9fc473cb07763c25d9384ee
#: ../../topics/forms/modelforms.txt:66
msgid "``DateTimeField``"
msgstr "``DateTimeField``"

# 4361c770e5bf44d984740bd2a025fe74
# 5f2dead6eabe4575b3051ca1be1a444b
#: ../../topics/forms/modelforms.txt:68
msgid "``DecimalField``"
msgstr "``DecimalField``"

# acec8b2692f74a02a4a34a617e1504ce
# fd8bb4bdfa3043f4a8c020e381f84f28
#: ../../topics/forms/modelforms.txt:70
msgid "``EmailField``"
msgstr "``EmailField``"

# 7a459094f89949b2a61f64e69ed12e3d
# 55482fea865a45c5adb8ca02e61118ff
#: ../../topics/forms/modelforms.txt:72
msgid "``FileField``"
msgstr "``FileField``"

# 131d89f885eb4dd7bac1bea6b0a02c46
#: ../../topics/forms/modelforms.txt:74
msgid "``FilePathField``"
msgstr "``FilePathField``"

# 8be21997a4a445528ec0914eac0b3eae
# 0ddbd62ee10e4e7fba6d635a6d70f17f
#: ../../topics/forms/modelforms.txt:76
msgid "``FloatField``"
msgstr "``FloatField``"

# e29a8d34cb73478aaf1de164da8ebdfb
#: ../../topics/forms/modelforms.txt:78
msgid "``ForeignKey``"
msgstr "``ForeignKey``"

# 34d4a1ca37364f79be3787900f426e2c
#: ../../topics/forms/modelforms.txt:78
msgid "``ModelChoiceField`` (see below)"
msgstr "``ModelChoiceField`` (см. далее)"

# 21c281419507433999c1c6ffb19de817
# c8fba84720fb4d33948cbf345ac8ac83
#: ../../topics/forms/modelforms.txt:80
msgid "``ImageField``"
msgstr "``ImageField``"

# a3f6492d93714bd1b78df4ff96e3d55e
# 7b11d5c4a7ba4b4691e1a1872f862688
# eb98762f63134ebebb902ec82b177d30
# 9e1905ab6fa5458cbc61312fabe06535
# e02b76bcb4354feeb75d2e777864bec2
#: ../../topics/forms/modelforms.txt:82 ../../topics/forms/modelforms.txt:96
#: ../../topics/forms/modelforms.txt:98 ../../topics/forms/modelforms.txt:102
msgid "``IntegerField``"
msgstr "``IntegerField``"

# fb4905aa86cc43a18db6369614a719d6
# a0c1d846995e4a26aec734a5b2471b21
#: ../../topics/forms/modelforms.txt:84
msgid "``IPAddressField``"
msgstr "``IPAddressField``"

# 975d79a7731a46d493a95f45ae39e8a9
# 9912ff14c784494992d8f92a5928d839
#: ../../topics/forms/modelforms.txt:86
msgid "``GenericIPAddressField``"
msgstr "``GenericIPAddressField``"

# 87010fd46f8343c6b205d29c12fc382a
#: ../../topics/forms/modelforms.txt:88
msgid "``ManyToManyField``"
msgstr "``ManyToManyField``"

# a6d1d95a214c428189d56d57ccc4b900
#: ../../topics/forms/modelforms.txt:88
msgid "``ModelMultipleChoiceField`` (see below)"
msgstr "``ModelMultipleChoiceField`` (см. далее)"

# c322c5f9f6e544caba86791b004e3ef0
#: ../../topics/forms/modelforms.txt:91
msgid "``NullBooleanField``"
msgstr "``NullBooleanField``"

# 8e378f6b6f254d58bfd1ddf5124c645e
#: ../../topics/forms/modelforms.txt:93
msgid "``PhoneNumberField``"
msgstr "``PhoneNumberField``"

# a4233ddf2375451ca7a03bb97406dbd8
#: ../../topics/forms/modelforms.txt:93
msgid "``USPhoneNumberField`` (from ``django.contrib.localflavor.us``)"
msgstr "``USPhoneNumberField`` (из модуля ``django.contrib.localflavor.us``)"

# 391ac1a833ab4a7b90119a0021497054
#: ../../topics/forms/modelforms.txt:96
msgid "``PositiveIntegerField``"
msgstr "``PositiveIntegerField``"

# 4da8de9ddd4a4d26a61856c74c6bd79d
#: ../../topics/forms/modelforms.txt:98
msgid "``PositiveSmallIntegerField``"
msgstr "``PositiveSmallIntegerField``"

# 0fb9cf73ba4847d5a231a1696e6f389c
# 616d9f91a84a470385c62750510179a3
#: ../../topics/forms/modelforms.txt:100
msgid "``SlugField``"
msgstr "``SlugField``"

# 2737cffc4fdc45d3b20f1d0b6039be93
#: ../../topics/forms/modelforms.txt:102
msgid "``SmallIntegerField``"
msgstr "``SmallIntegerField``"

# 75bb52fe1f5a40b9a7231e8fd3e3540b
#: ../../topics/forms/modelforms.txt:104
msgid "``TextField``"
msgstr "``TextField``"

# c4c0e61dbf144f5292aa772d84bc1695
#: ../../topics/forms/modelforms.txt:104
msgid "``CharField`` with ``widget=forms.Textarea``"
msgstr "``CharField`` с ``widget=forms.Textarea``"

# 1927af4f21ca4a3ba99953d94c4aedc7
# 3e58a8d0199d476b83a0cfea20e63d35
#: ../../topics/forms/modelforms.txt:107
msgid "``TimeField``"
msgstr "``TimeField``"

# 13c804f2175f4e8fa0fc5d4ddcfedaca
#: ../../topics/forms/modelforms.txt:109
msgid "``URLField``"
msgstr "``URLField``"

# 1f63702a8c0147f3a33221a54e03c84e
#: ../../topics/forms/modelforms.txt:109
msgid ""
"``URLField`` with ``verify_exists`` set to the model field's "
"``verify_exists``"
msgstr ""
"``URLField`` с атрибутом ``verify_exists`` равным атрибутом "
"``verify_exists`` поля модели."

# 2f3d8bc7941149e1bd80f392ea8f8f0b
#: ../../topics/forms/modelforms.txt:117
msgid ""
"As you might expect, the ``ForeignKey`` and ``ManyToManyField`` model field "
"types are special cases:"
msgstr ""
"Как вы могли ожидать, ``ForeignKey`` и ``ManyToManyField`` поля модели "
"являются особыми случаями:"

# e9b13c0d05b0452f94e7365fdc6acae0
#: ../../topics/forms/modelforms.txt:120
msgid ""
"``ForeignKey`` is represented by ``django.forms.ModelChoiceField``, which is "
"a ``ChoiceField`` whose choices are a model ``QuerySet``."
msgstr ""
"Поле ``ForeignKey`` модели представлено полем формы ``ModelChoiceField``, "
"которое является обычным ``ChoiceField``, но с вариантами значений, "
"полученными из ``QuerySet``."

# 39b8f82f7b0742a18d8c217007550612
#: ../../topics/forms/modelforms.txt:123
msgid ""
"``ManyToManyField`` is represented by ``django.forms."
"ModelMultipleChoiceField``, which is a ``MultipleChoiceField`` whose choices "
"are a model ``QuerySet``."
msgstr ""
"Поле ``ManyToManyField`` модели представлено полем формы "
"``ModelMultipleChoiceField``, которое является обычным "
"``MultipleChoiceField`, но с вариантами значений, полученными из "
"``QuerySet``."

# 347ab207aae3490ea1b32e6ea79b5702
#: ../../topics/forms/modelforms.txt:127
msgid "In addition, each generated form field has attributes set as follows:"
msgstr "В дополнение, каждое поле созданной формы имеет следующие атрибуты:"

# 1243c9df186946c8a8fff0833f6d13dc
#: ../../topics/forms/modelforms.txt:129
msgid ""
"If the model field has ``blank=True``, then ``required`` is set to ``False`` "
"on the form field. Otherwise, ``required=True``."
msgstr ""
"Если у поля модели есть ``blank=True``, тогда к полю формы будет добавлено "
"``required=False``, иначе -- ``required=True``."

# f5f9d967a6824d12bc8b58aa38a6c310
#: ../../topics/forms/modelforms.txt:132
msgid ""
"The form field's ``label`` is set to the ``verbose_name`` of the model "
"field, with the first character capitalized."
msgstr ""
"Значением атрибута ``label`` поля будет значение поля ``verbose_name`` "
"модели, причём первый символ этого значения будет преобразован в верхний "
"регистр."

# 56611b0f9ba04edca44231985b2f2fc7
#: ../../topics/forms/modelforms.txt:135
msgid ""
"The form field's ``help_text`` is set to the ``help_text`` of the model "
"field."
msgstr ""
"Значением атрибута ``help_text`` поля формы будет значение атрибута "
"``help_text`` поля модели."

# fcdb4da98d9a4cffa6612d76e443e613
#: ../../topics/forms/modelforms.txt:138
msgid ""
"If the model field has ``choices`` set, then the form field's ``widget`` "
"will be set to ``Select``, with choices coming from the model field's "
"``choices``. The choices will normally include the blank choice which is "
"selected by default. If the field is required, this forces the user to make "
"a selection. The blank choice will not be included if the model field has "
"``blank=False`` and an explicit ``default`` value (the ``default`` value "
"will be initially selected instead)."
msgstr ""
"Если для поля модели установлен атрибут ``choices``, тогда для поля формы "
"будет использоваться виджет ``Select``, который будет отображать содержимое "
"этого атрибута. Варианты выбора обычно содержат пустой вариант, который "
"выбран по умолчанию. Если поле является обязательным, то оно требует от "
"пользователя сделать выбор. Пустой вариант не отображается, если у поля "
"модели есть атрибут ``blank=False`` и явное значение ``default`` (при этом, "
"это значение будет выбрано по умолчанию)."

# 7315215d4e56431781141d302086eeee
#: ../../topics/forms/modelforms.txt:146
msgid ""
"Finally, note that you can override the form field used for a given model "
"field. See `Overriding the default field types or widgets`_ below."
msgstr ""
"В конце, следует отметить, что вы можете переопределить поле формы, "
"используемое для определённого поля модели. Обратитесь к `Overriding the "
"default field types or widgets`_ далее."

# e272a3725f134aaa9a4679ee6da8d73d
#: ../../topics/forms/modelforms.txt:150
msgid "A full example"
msgstr "Полный пример"

# cdbaa262da3d40978bd5b84d15c70547
#: ../../topics/forms/modelforms.txt:152
msgid "Consider this set of models::"
msgstr "Рассмотрим этот набор полей::"

# 2ccb0a665b9845c2a0d462466018c4d3
#: ../../topics/forms/modelforms.txt:183
msgid ""
"With these models, the ``ModelForm`` subclasses above would be roughly "
"equivalent to this (the only difference being the ``save()`` method, which "
"we'll discuss in a moment.)::"
msgstr ""
"Для этих моделей показанные выше классы ``ModelForm`` будут аналогичны "
"следующим формам (разница будет только в методе ``save()``, что мы вскоре "
"рассмотрим.)::"

# 8c8ad0976dcf460e8004f21a6c44f1c3
#: ../../topics/forms/modelforms.txt:200
msgid "The ``is_valid()`` method and ``errors``"
msgstr "Метод ``is_valid()`` и список ``errors``"

# 9cd6cee2c8654c8bb3399d01e9881721
#: ../../topics/forms/modelforms.txt:202
msgid ""
"The first time you call ``is_valid()`` or access the ``errors`` attribute of "
"a ``ModelForm`` triggers form validation as well as :ref:`model validation "
"<validating-objects>`. This has the side-effect of cleaning the model you "
"pass to the ``ModelForm`` constructor. For instance, calling ``is_valid()`` "
"on your form will convert any date fields on your model to actual date "
"objects."
msgstr ""
"При первом вызове метода ``is_valid()`` или обращении к атрибуту ``errors`` "
"форма ``ModelForm`` выполняет валидацию полученный данных, как это описано "
"в :ref:`model validation <validating-objects>`. Побочным эффектом данного "
"действия является очистка модели, которую вы передали в конструктор "
"``ModelForm``. Например, вызов ``is_valid()`` для вашей формы преобразует "
"все поля дат вашей модели в настоящие объекты даты."

# f0ab2badb7ed4ef6bc676508638ed111
#: ../../topics/forms/modelforms.txt:210
msgid "The ``save()`` method"
msgstr "Метод ``save()``"

# 13c1a367f9c949719c6a94f1ab2719b6
#: ../../topics/forms/modelforms.txt:212
msgid ""
"Every form produced by ``ModelForm`` also has a ``save()`` method. This "
"method creates and saves a database object from the data bound to the form. "
"A subclass of ``ModelForm`` can accept an existing model instance as the "
"keyword argument ``instance``; if this is supplied, ``save()`` will update "
"that instance. If it's not supplied, ``save()`` will create a new instance "
"of the specified model::"
msgstr ""
"Каждая форма, созданная с помощью ``ModelForm``, обладает методом ``save()"
"``. Этот метод создаёт и сохраняет объект в базе данных, используя для этого "
"данные, введённые в форму. Класс, унаследованный от ``ModelForm`` может "
"принимать существующий экземпляр модели через именованный аргумент "
"``instance``. Если такой аргумент указан, то ``save()`` обновит переданную "
"модель. В противном случае, ``save()`` создаст новый экземпляр указанной "
"модели::"

# c95cf7a589724e9ab30ad82736ead9e1
#: ../../topics/forms/modelforms.txt:236
msgid ""
"Note that ``save()`` will raise a ``ValueError`` if the data in the form "
"doesn't validate -- i.e., if form.errors evaluates to True."
msgstr ""
"Следует отметить, что метод ``save()`` вызывает исключение ``ValueError``, "
"если данные формы не прошли проверку, т.е. атрибут ``errors`` формы "
"вычисляется в ``True``."

# eab5d8f0e2104cbca795c53005a5f316
#: ../../topics/forms/modelforms.txt:239
msgid ""
"This ``save()`` method accepts an optional ``commit`` keyword argument, "
"which accepts either ``True`` or ``False``. If you call ``save()`` with "
"``commit=False``, then it will return an object that hasn't yet been saved "
"to the database. In this case, it's up to you to call ``save()`` on the "
"resulting model instance. This is useful if you want to do custom processing "
"on the object before saving it, or if you want to use one of the "
"specialized :ref:`model saving options <ref-models-force-insert>`. "
"``commit`` is ``True`` by default."
msgstr ""
"Метод ``save()`` принимает необязательный именованный аргумент ``commit``, "
"который может иметь значения ``True`` или ``False``. Если вы вызовите ``save"
"()`` с ``commit=False``, то метод вернёт объект, который ещё не был сохранён "
"в базе данных. В этом случае, вам самостоятельно придётся вызвать метод "
"``save()`` у полученного объекта. Это бывает полезно, когда требуется "
"выполнить дополнительные действия над объектом до его сохранения или если "
"вам требуется воспользоваться одним из :ref:`параметров сохранения модели "
"<ref-models-force-insert>`. Атрибут ``commit`` по умолчанию имеет значение "
"``True``."

# 9cdf2fd9050b4c52b246351f85e69704
#: ../../topics/forms/modelforms.txt:248
msgid ""
"Another side effect of using ``commit=False`` is seen when your model has a "
"many-to-many relation with another model. If your model has a many-to-many "
"relation and you specify ``commit=False`` when you save a form, Django "
"cannot immediately save the form data for the many-to-many relation. This is "
"because it isn't possible to save many-to-many data for an instance until "
"the instance exists in the database."
msgstr ""
"Использование ``commit=False`` также полезно в случае, когда ваша модель "
"имеет связь \"многие-ко-многим\" с другой моделью. Для такой модели, если "
"метод ``save()`` вызван с аргументом ``commit=False``, то Django не может "
"немедленно сохранить данные для такой связи. Это происходит так, потому что "
"невозможно создать такую связь для экземпляра, пока он не сохранён в базе "
"данных."

# 2910adec46fd4d1fa2bd3c5bfda2b7ee
#: ../../topics/forms/modelforms.txt:255
msgid ""
"To work around this problem, every time you save a form using "
"``commit=False``, Django adds a ``save_m2m()`` method to your ``ModelForm`` "
"subclass. After you've manually saved the instance produced by the form, you "
"can invoke ``save_m2m()`` to save the many-to-many form data. For example::"
msgstr ""
"Чтобы решить эту задачу, каждый раз когда вы сохраняете форму, указывая "
"``commit=False``, Django добавляет метод ``save_m2m()`` к вашему классу "
"``ModelForm``. После того, как вы вручную сохранили экземпляр формы, вы "
"можете вызвать метод ``save_m2m()`` для сохранения данных, связанних через "
"\"многие-ко-многим\". Например::"

# 898a1e938a6e4287949d753d758cc13f
#: ../../topics/forms/modelforms.txt:275
msgid ""
"Calling ``save_m2m()`` is only required if you use ``save(commit=False)``. "
"When you use a simple ``save()`` on a form, all data -- including many-to-"
"many data -- is saved without the need for any additional method calls. For "
"example::"
msgstr ""
"Вызов метода ``save_m2m()`` требуется только в случае, если вы используете "
"``save(commit=False)``. Если вы просто используете ``save()`` для формы, то "
"все данные (включая связи \"многие-ко-многим\"), будут сохранены, не требуя "
"для этого дополнительных действий. Например::"

# 038eb052304d40ab898756132b1dea47
#: ../../topics/forms/modelforms.txt:287
msgid ""
"Other than the ``save()`` and ``save_m2m()`` methods, a ``ModelForm`` works "
"exactly the same way as any other ``forms`` form. For example, the ``is_valid"
"()`` method is used to check for validity, the ``is_multipart()`` method is "
"used to determine whether a form requires multipart file upload (and hence "
"whether ``request.FILES`` must be passed to the form), etc. See :ref:"
"`binding-uploaded-files` for more information."
msgstr ""
"Если не принимать во внимание методы ``save()`` и ``save_m2m()``, то "
"``ModelForm`` работает аналогично обычной ``Form``. Например, метод "
"``is_valid()`` используется для проверки данных, метод ``is_multipart()`` "
"используется для определения загрузки файла (в этом случае ``request.FILES`` "
"должен быть передан форме) и так далее. Обратитесь к документу :ref:`binding-"
"uploaded-files` для получения подробностей."

# 3e19e93afd224658bc0c30e6b943bbc2
#: ../../topics/forms/modelforms.txt:295
msgid "Using a subset of fields on the form"
msgstr "Использование части полей на форме"

# 081d4ece79d34db98892784f68ebb801
#: ../../topics/forms/modelforms.txt:297
msgid ""
"In some cases, you may not want all the model fields to appear on the "
"generated form. There are three ways of telling ``ModelForm`` to use only a "
"subset of the model fields:"
msgstr ""
"В некоторых случаях может потребоваться выводить лишь часть полей модели на "
"форме. Существует три способа указать ``ModelForm``, какие именно поля "
"модели надо использовать:"

# 6ab6a0e1d09b49f3ab49f08f2f8f3140
#: ../../topics/forms/modelforms.txt:301
msgid ""
"Set ``editable=False`` on the model field. As a result, *any* form created "
"from the model via ``ModelForm`` will not include that field."
msgstr ""
"Установите ``editable=False`` для поля модели. В результате, *каждая* форма, "
"созданная по модели с помощью ``ModelForm`` не будет включать в себя это "
"поле."

# 5dd89b097aa547639cd261216330302a
#: ../../topics/forms/modelforms.txt:305
msgid ""
"Use the ``fields`` attribute of the ``ModelForm``'s inner ``Meta`` class.  "
"This attribute, if given, should be a list of field names to include in the "
"form. The order in which the fields names are specified in that list is "
"respected when the form renders them."
msgstr ""
"Используйте атрибут ``fields`` внутреннего класса ``ModelForm.Meta``. Этот "
"атрибут, если он указан, должен содержать список имён полей, которые должны "
"отображаться на форме. Порядок определения полей в этом списке влияет на "
"порядок полей на форме."

# 98d3e8ed99a64c71aed78c134b8e0716
#: ../../topics/forms/modelforms.txt:310
msgid ""
"Use the ``exclude`` attribute of the ``ModelForm``'s inner ``Meta`` class.  "
"This attribute, if given, should be a list of field names to exclude from "
"the form."
msgstr ""
"Используйте атрибут ``exclude`` внутреннего класса ``ModelForm.Meta``. Этот "
"атрибут, если он указан, должен содержать список имён полей, которые не "
"должны отображаться на форме."

# 3f877e0e0a134d8f8b0cc077f7380711
#: ../../topics/forms/modelforms.txt:314
msgid ""
"For example, if you want a form for the ``Author`` model (defined above) "
"that includes only the ``name`` and ``title`` fields, you would specify "
"``fields`` or ``exclude`` like this::"
msgstr ""
"Например, если требуется, чтобы форма для модели ``Author`` (определена "
"выше) отображала только поля ``name`` и ``title``, укажите атрибуты "
"``fields`` или ``exclude`` вот так::"

# 6bacf02656f74343a4c19917c14b66fd
#: ../../topics/forms/modelforms.txt:328
msgid ""
"Since the Author model has only 3 fields, 'name', 'title', and 'birth_date', "
"the forms above will contain exactly the same fields."
msgstr ""
"Так как модель ``Author`` содержит всего три поля: ``name ``title `` и "
"``birth_date``, то вышеприведённые формы будут отображать одни и те же поля."

# 9315e8685d854d4d9bea2c4bdd273879
#: ../../topics/forms/modelforms.txt:333
msgid ""
"If you specify ``fields`` or ``exclude`` when creating a form with "
"``ModelForm``, then the fields that are not in the resulting form will not "
"be set by the form's ``save()`` method. Also, if you manually add the "
"excluded fields back to the form, they will not be initialized from the "
"model instance."
msgstr ""
"Если вы указываете ``fields`` или ``exclude`` при создании формы через "
"``ModelForm``, то поля, которые не определены в форме, не будут учитываться "
"при вызове метода ``save()``. Также, если вы вручную добавите в форму "
"исключенные поля, то они не будут заполняться из экземпляра модели."

# 731018659b9b47aaaa2efdb0caaa79f8
#: ../../topics/forms/modelforms.txt:339
msgid ""
"Django will prevent any attempt to save an incomplete model, so if the model "
"does not allow the missing fields to be empty, and does not provide a "
"default value for the missing fields, any attempt to ``save()`` a "
"``ModelForm`` with missing fields will fail.  To avoid this failure, you "
"must instantiate your model with initial values for the missing, but "
"required fields::"
msgstr ""
"Django будет препятствовать всем попыткам сохранить неполную модель. Таким "
"образом, если модель требует заполнения определённых полей и для них не "
"предоставлено значение по умолчанию, то сохранить форму для такой модели не "
"получится. Для решения этой проблемы вам потребуется создать экземпляр такой "
"модели, передав ему начальные значения для обязательных, но незаполненных "
"полей::"

# cbd58db7aaf74b5699280af0c082d068
#: ../../topics/forms/modelforms.txt:350
msgid ""
"Alternatively, you can use ``save(commit=False)`` and manually set any extra "
"required fields::"
msgstr ""
"В качестве альтернативы, вы можете использовать ``save(commit=False)`` и "
"вручную определить все необходимые поля::"

# 7db6b3fb54084ae7bb6370b986ce44c2
#: ../../topics/forms/modelforms.txt:358
msgid ""
"See the `section on saving forms`_ for more details on using ``save"
"(commit=False)``."
msgstr ""
"Обратитесь к разделу `section on saving forms`_ для подробностей по "
"использованию ``save(commit=False)``."

# f082e00437194e1a82dd3cf4cfdbfe5a
#: ../../topics/forms/modelforms.txt:364
msgid "Overriding the default field types or widgets"
msgstr "Переопределение стандартных типов полей или виджетов"

# daa9bfa4ac004f5b84ca03a05aba8b7d
#: ../../topics/forms/modelforms.txt:369
msgid ""
"The default field types, as described in the `Field types`_ table above, are "
"sensible defaults. If you have a ``DateField`` in your model, chances are "
"you'd want that to be represented as a ``DateField`` in your form. But "
"``ModelForm`` gives you the flexibility of changing the form field type and "
"widget for a given model field."
msgstr ""
"Стандартные типы полей, описанные выше, имеют целесообразные настройки по "
"умолчанию. Если ваша модель имеет поля типа ``DateField``, то скорее всего "
"вы пожелаете, чтобы форма использовала поле ``DateField`` для его "
"отображения. Но класс ``ModelForm`` представляет широкие возможности по "
"управлению типами полей формы, а также виджетами для их представления."

# cfb04b403700472baa66b4153dc2c5cc
#: ../../topics/forms/modelforms.txt:375
msgid ""
"To specify a custom widget for a field, use the ``widgets`` attribute of the "
"inner ``Meta`` class. This should be a dictionary mapping field names to "
"widget classes or instances."
msgstr ""
"Для того, чтобы указать собственный виджет для поля следует использовать "
"атрибут ``widgets`` внутреннего класса ``Meta``. Его значением должен быть "
"словарь, ключами которого являются имена полей, а значениями — классы или "
"экземпляры виджетов."

# f79d9c6bfc624543b497d5210dea7f1a
#: ../../topics/forms/modelforms.txt:379
msgid ""
"For example, if you want the a ``CharField`` for the ``name`` attribute of "
"``Author`` to be represented by a ``<textarea>`` instead of its default "
"``<input type=\"text\">``, you can override the field's widget::"
msgstr ""
"Например, если необходимо, чтобы поле ``name`` модели ``Author`` было "
"представлено в виде ``<textarea>`` вместо стандартного ``<input type=\"text"
"\">``, то вы можете переопределить виджет поля::"

# d3b008aa1e2448289472cd8f17df5a0e
#: ../../topics/forms/modelforms.txt:394
msgid ""
"The ``widgets`` dictionary accepts either widget instances (e.g., ``Textarea"
"(...)``) or classes (e.g., ``Textarea``)."
msgstr ""
"Ещё раз напомним, что аргумент ``widgets`` принимает словарь с  экземплярами "
"(т.е., ``Textarea(...)``) или классами (т.е., ``Textarea``) виджетов."

# 3b79ffaaf10b4a0fa1f52ae7ae6ba54b
#: ../../topics/forms/modelforms.txt:397
msgid ""
"If you want to further customize a field -- including its type, label, etc. "
"-- you can do this by declaratively specifying fields like you would in a "
"regular ``Form``. Declared fields will override the default ones generated "
"by using the ``model`` attribute."
msgstr ""
"Если вы желаете продолжить настойку поля, включая его тип, метку и так "
"далее, то вы можете явно указать поля, как это делается при использовании "
"``Form``. Эти поля переопределят поля модели."

# a73cbe6a513142e9a2e709ffd18a5227
#: ../../topics/forms/modelforms.txt:402
msgid ""
"For example, if you wanted to use ``MyDateFormField`` for the ``pub_date`` "
"field, you could do the following::"
msgstr ""
"Например, если надо использовать ``MyDateFormField`` для поля ``pub_date``, "
"вы можете сделать следующее::"

# 4c2079b46f97467e9a845835cbec4dba
#: ../../topics/forms/modelforms.txt:411
msgid ""
"If you want to override a field's default label, then specify the ``label`` "
"parameter when declaring the form field::"
msgstr ""
"Если вам требуется изменить стандартную метку у поля, то укажите параметр "
"``label `` при определении поля формы::"

# 186c7f046000428ba75560e43973d497
#: ../../topics/forms/modelforms.txt:422
msgid ""
"If you explicitly instantiate a form field like this, Django assumes that "
"you want to completely define its behavior; therefore, default attributes "
"(such as ``max_length`` or ``required``) are not drawn from the "
"corresponding model. If you want to maintain the behavior specified in the "
"model, you must set the relevant arguments explicitly when declaring the "
"form field."
msgstr ""
"При явном создании поля, Django предполагает, что вы будете определять "
"поведение формы в целом. Следовательно, стандартные атрибуты модели (такие "
"как ``max_length`` или ``required``) не передаются полям формы. Если вам "
"потребуется обеспечить поведение, определённое в модели, вам потребуется "
"явно установить соответствующие аргументы при определении поля формы."

# ecf394c9f4904e0799606e34be5486ab
#: ../../topics/forms/modelforms.txt:428
msgid "For example, if the ``Article`` model looks like this::"
msgstr "Например, если модель ``Article`` выглядит так::"

# 25404a06803f460d8d5675778fba3bcb
#: ../../topics/forms/modelforms.txt:435
msgid ""
"and you want to do some custom validation for ``headline``, while keeping "
"the ``blank`` and ``help_text`` values as specified, you might define "
"``ArticleForm`` like this::"
msgstr ""
"и вы желаете выполнить свою проверку поля ``headline``, оставляя неизменными "
"атрибуты  ``blank`` и ``help_text``, вы можете определить ``ArticleForm`` "
"следующим образом::"

# 11eb6e116b4342e494cd84848d1054b3
#: ../../topics/forms/modelforms.txt:446
msgid ""
"See the :doc:`form field documentation </ref/forms/fields>` for more "
"information on fields and their arguments."
msgstr ""
"Обратитесь к `документации на поля формы`</ref/forms/fields>`_ для получения "
"дополнительной информации о полях и их аргументах."

# 22d4a11ae4aa4a4fa9c0bd67a8d1b60c
#: ../../topics/forms/modelforms.txt:450
msgid "Changing the order of fields"
msgstr "Изменение порядка полей"

# 77cb9af5cc8e4904b80082dc8952cf8b
#: ../../topics/forms/modelforms.txt:452
msgid ""
"By default, a ``ModelForm`` will render fields in the same order that they "
"are defined on the model, with ``ManyToManyField`` instances appearing last. "
"If you want to change the order in which fields are rendered, you can use "
"the ``fields`` attribute on the ``Meta`` class."
msgstr ""
"По умолчанию ``ModelForm`` выводит поля в порядке, в котором они определены "
"в модели, добавляя в конец экземпляры ``ManyToManyField``. Если вам "
"потребуется изменить порядок отображения полей, вы можете использовать "
"атрибут ``fields`` класса ``Meta``."

# abe6a4281d5942698af4ce1dc034b837
#: ../../topics/forms/modelforms.txt:457
msgid ""
"The ``fields`` attribute defines the subset of model fields that will be "
"rendered, and the order in which they will be rendered. For example given "
"this model::"
msgstr ""
"Атрибут ``fields`` определяет набор полей модели, подлежащих отображению, и "
"их порядок на форме. Например, рассмотрим эту модель::"

# fbffc4f6bfda4665b5a37f19a5659ce9
#: ../../topics/forms/modelforms.txt:465
msgid ""
"the ``author`` field would be rendered first. If we wanted the title field "
"to be rendered first, we could specify the following ``ModelForm``::"
msgstr ""
"поле ``author`` будет выведено первым. Если же надо первым вывести поле "
"``title``, то определим ``ModelForm`` так::"

# b3917f7e1bb74edc850cd1265564ecd4
#: ../../topics/forms/modelforms.txt:476
msgid "Overriding the clean() method"
msgstr "Переопределение метода clean()"

# 9af32a86a05e41f4ac671f437071c823
#: ../../topics/forms/modelforms.txt:478
msgid ""
"You can override the ``clean()`` method on a model form to provide "
"additional validation in the same way you can on a normal form."
msgstr ""
"Вы можете переопределить метод ``clean()`` модели для того, чтобы обеспечить "
"дополнительную проверку. Всё это аналогично работе с обычной формой."

# 72f29aab7a5c4783988414122b7242a2
#: ../../topics/forms/modelforms.txt:481
msgid ""
"In this regard, model forms have two specific characteristics when compared "
"to forms:"
msgstr ""
"Учитывая это, модельные формы обладают двумя особенностями по сравнению с "
"формами:"

# 96fedd3df350464ea03698bb17a87655
#: ../../topics/forms/modelforms.txt:484
msgid ""
"By default the ``clean()`` method validates the uniqueness of fields that "
"are marked as ``unique``, ``unique_together`` or ``unique_for_date|month|"
"year`` on the model.  Therefore, if you would like to override the ``clean()"
"`` method and maintain the default validation, you must call the parent "
"class's ``clean()`` method."
msgstr ""
"По умолчанию метод ``clean()`` проверяет уникальность полей, которые "
"помечены в модели как ``unique``, ``unique_together`` или ``unique_for_date|"
"month|year``. Таким образом, если вам потребуется переопределить этот метод, "
"то не забудьте вызвать метод ``clean()`` базового класса для проверки "
"уникальности полей."

# b29f760595ce4e3ca927c3f3536d4263
#: ../../topics/forms/modelforms.txt:490
msgid ""
"Also, a model form instance bound to a model object will contain a ``self."
"instance`` attribute that gives model form methods access to that specific "
"model instance."
msgstr ""
"Экземпляр модельной формы, привязанный к объекту модели имеет атрибут ``self."
"instance``, через который методы модельной формы имеют доступ к "
"соответствующему экземпляру модели."

# 401017d49e9b43f0a5144a76e81c41a3
#: ../../topics/forms/modelforms.txt:495
msgid "Form inheritance"
msgstr "Наследование форм"

# 247fcf186b2f4776b15b6bb3890aaac0
#: ../../topics/forms/modelforms.txt:497
msgid ""
"As with basic forms, you can extend and reuse ``ModelForms`` by inheriting "
"them. This is useful if you need to declare extra fields or extra methods on "
"a parent class for use in a number of forms derived from models. For "
"example, using the previous ``ArticleForm`` class::"
msgstr ""
"Аналогично обычным формам, вы можете наследоваться ``ModelForm``. Это удобно "
"когда надо добавить дополнительные поля или методы к базовому классу и "
"использовать результат для создания других модельных форм. Например, для "
"класса ``ArticleForm``::"

# b27f96f6ca2d400aa523584573271078
#: ../../topics/forms/modelforms.txt:506
msgid ""
"This creates a form that behaves identically to ``ArticleForm``, except "
"there's some extra validation and cleaning for the ``pub_date`` field."
msgstr ""
"Мы создали форму, аналогичную ``ArticleForm``, добавив дополнительную "
"проверку и обработку для поля ``pub_date``."

# 6cc6b3a9466341ea8e677a5c69a9e8d0
#: ../../topics/forms/modelforms.txt:509
msgid ""
"You can also subclass the parent's ``Meta`` inner class if you want to "
"change the ``Meta.fields`` or ``Meta.excludes`` lists::"
msgstr ""
"Вы также можете наследовать внутренний класс ``Meta``, если требуется внести "
"изменения в списки ``Meta.fields`` или ``Meta.excludes``::"

# 8ceadecabb9347aab44c9bd06e803376
#: ../../topics/forms/modelforms.txt:516
msgid ""
"This adds the extra method from the ``EnhancedArticleForm`` and modifies the "
"original ``ArticleForm.Meta`` to remove one field."
msgstr ""
"Здесь мы добавили метод из ``EnhancedArticleForm`` и изменили оригинальный "
"``ArticleForm.Meta``, убрав одно поле."

# ad7e17c35565473d83c1afaf8b78852f
#: ../../topics/forms/modelforms.txt:519
msgid "There are a couple of things to note, however."
msgstr "Тем не менее, надо уточнить несколько моментов."

# b1c2ef9193d24d46ad49efd3da9fb750
#: ../../topics/forms/modelforms.txt:521
msgid ""
"Normal Python name resolution rules apply. If you have multiple base classes "
"that declare a ``Meta`` inner class, only the first one will be used. This "
"means the child's ``Meta``, if it exists, otherwise the ``Meta`` of the "
"first parent, etc."
msgstr ""
"Применяются стандартные правила языка Python для разрешения имён. Если ваш "
"класс унаследован от нескольких базовых классов, которые обладают внутренним "
"классом ``Meta``, и для него не определён собственный ``Meta`` класс, то "
"этот класс будет унаследован из первого базового."

# 838ac9d9cd1b458f95c64921212cfe55
#: ../../topics/forms/modelforms.txt:526
msgid ""
"For technical reasons, a subclass cannot inherit from both a ``ModelForm`` "
"and a ``Form`` simultaneously."
msgstr ""
"По техническим причинам, дочерний класс не может одновременно наследоваться "
"от ``ModelForm`` и ``Form``."

# 90e98409a366483e806a771e430dac7a
#: ../../topics/forms/modelforms.txt:529
msgid ""
"Chances are these notes won't affect you unless you're trying to do "
"something tricky with subclassing."
msgstr ""
"Скорее всего вы с этим не столкнетесь до тех пор, пока не потребуется "
"сделать что-то хитрое, используя наследование."

# 3cc98bb9e299484498f446f7c68742b8
#: ../../topics/forms/modelforms.txt:533
msgid "Interaction with model validation"
msgstr "Взаимодействие с механизмами модели"

# afe94c9dfc8e458bb7a20dca2385192d
#: ../../topics/forms/modelforms.txt:535
msgid ""
"As part of its validation process, ``ModelForm`` will call the ``clean()`` "
"method of each field on your model that has a corresponding field on your "
"form. If you have excluded any model fields, validation will not be run on "
"those fields. See the :doc:`form validation </ref/forms/validation>` "
"documentation for more on how field cleaning and validation work. Also, your "
"model's ``clean()`` method will be called before any uniqueness checks are "
"made. See :ref:`Validating objects <validating-objects>` for more "
"information on the model's ``clean()`` hook."
msgstr ""
"В процессе проверки данных ``ModelForm`` будет вызывать метод ``clean()`` "
"каждого поля вашей модели, соответствующего полю формы. Для полей модели, "
"которые были исключены из формы, проверка данных производиться не будет. "
"Обратитесь к документации по :doc:`проверке форм </ref/forms/validation>` "
"для получения информации о том как работает проверка данных поля.  Также, "
"метод ``clean()`` вашей модели будет вызываются перед каждой проверкой на "
"уникальность. Обратитесь к документации по :ref:`проверке объектов "
"<validating-objects>` для получения информации по методу ``clean()`` модели."

# 98b8d4e21eb549d48d05f8e2b89c5426
#: ../../topics/forms/modelforms.txt:547
msgid "Model formsets"
msgstr "Наборы модельных форм"

# ebc94c9e61204b4f877e77c08aaeee6f
#: ../../topics/forms/modelforms.txt:549
msgid ""
"Like :doc:`regular formsets </topics/forms/formsets>`, Django provides a "
"couple of enhanced formset classes that make it easy to work with Django "
"models. Let's reuse the ``Author`` model from above::"
msgstr ""
"Аналогично :doc:`наборам обычных форм </topics/forms/formsets>`, Django "
"представляет ряд расширенных классов наборов форм, которые упрощают "
"взаимодействие с моделями Django. Давайте воспользуемся моделью ``Author``::"

# 86817225edf141808fd7c7628b49e7f8
#: ../../topics/forms/modelforms.txt:556
msgid ""
"This will create a formset that is capable of working with the data "
"associated with the ``Author`` model. It works just like a regular formset::"
msgstr ""
"Этот код создаст набор форм, которые будут работать с данными модели "
"``Author``. По функционалу набор модельных форм аналогичен набору обычных "
"форм::"

# aff5ba1db79e44d79a724f5914a7819b
#: ../../topics/forms/modelforms.txt:572
msgid ""
"``modelformset_factory`` uses ``formset_factory`` to generate formsets. This "
"means that a model formset is just an extension of a basic formset that "
"knows how to interact with a particular model."
msgstr ""
"Фабрика по созданию модельных форм ``modelformset_factory`` использует "
"фабрику обычных форм ``formset_factory`` для создания набора форм. Это "
"означает, что функционал модельных форм является надстройкой над "
"функционалом набора обычных форм."

# dd188a6bbbe74719849843964c4c9303
#: ../../topics/forms/modelforms.txt:577
msgid "Changing the queryset"
msgstr "Изменение выборки"

# ae9ecc3c009a4ba3b423bd34196f4072
#: ../../topics/forms/modelforms.txt:579
msgid ""
"By default, when you create a formset from a model, the formset will use a "
"queryset that includes all objects in the model (e.g., ``Author.objects.all()"
"``). You can override this behavior by using the ``queryset`` argument::"
msgstr ""
"По умолчанию, при создании набора модельных форм используется выборка, "
"которая содержит все объекты модели (т.е., ``Author.objects.all()``). Такое "
"поведение можно скорректировать, используя аргумент ``queryset``::"

# a4f8f86d90d74f88b2f6cb001ab7b58c
#: ../../topics/forms/modelforms.txt:586
msgid ""
"Alternatively, you can create a subclass that sets ``self.queryset`` in "
"``__init__``::"
msgstr ""
"Также вы можете унаследоваться от класса набора модельных форм и определить "
"``self.queryset`` в конструкторе, указав необходимые параметры выборки::"

# 1181dd5182424a82ae06fb8db0a48b37
#: ../../topics/forms/modelforms.txt:596
msgid "Then, pass your ``BaseAuthorFormSet`` class to the factory function::"
msgstr "Теперь передадим ваш класс ``BaseAuthorFormSet`` в функцию фабрики::"

# 62de07011e974fb2ad273fd4dd3bfee6
#: ../../topics/forms/modelforms.txt:600
msgid ""
"If you want to return a formset that doesn't include *any* pre-existing "
"instances of the model, you can specify an empty QuerySet::"
msgstr ""
"Если требуется создать пустой набор форм, т.е. который не включает *ни одну* "
"существующую модель, то передайте в набор пустую выборку::"

# 7dd39290b9a94f009b4254221714541a
#: ../../topics/forms/modelforms.txt:607
msgid "Controlling which fields are used with ``fields`` and ``exclude``"
msgstr ""
"Управляйте списком отображаемых полей через атрибуты ``fields`` и ``exclude``"

# 5d498e1e0918473bb3694a901dec8f82
#: ../../topics/forms/modelforms.txt:609
msgid ""
"By default, a model formset uses all fields in the model that are not marked "
"with ``editable=False``. However, this can be overridden at the formset "
"level::"
msgstr ""
"По умолчанию набор модельных форм использует все поля модели, которые не "
"отмечены как ``editable=False``. Тем не менее, такое поведение может быть "
"изменено на уровне набора форм::"

# f36a7f29ae364090a72fdaf5327bfc05
#: ../../topics/forms/modelforms.txt:614
msgid ""
"Using ``fields`` restricts the formset to use only the given fields. "
"Alternatively, you can take an \"opt-out\" approach, specifying which fields "
"to exclude::"
msgstr ""
"Использование аргумента``fields`` ограничивает набор форм указанным списком "
"полей. В качестве альтернативы можно определить список полей, которые не "
"должны отображаться на формах. Сделать это можно с помощью аргумента "
"``exclude``::"

# bec2e37221ba4c58b2b567d880e1522e
#: ../../topics/forms/modelforms.txt:621
msgid "Providing initial values"
msgstr "Передача начальных значений"

# e0df0c6377064cb589cda8a491596b51
#: ../../topics/forms/modelforms.txt:625
msgid ""
"As with regular formsets, it's possible to :ref:`specify initial data "
"<formsets-initial-data>` for forms in the formset by specifying an "
"``initial`` parameter when instantiating the model formset class returned by "
"``modelformset_factory``. However, with model formsets, the initial values "
"only apply to extra forms, those that aren't bound to an existing object "
"instance."
msgstr ""
"Аналогично набору обычных форм, есть возможность :ref:`указать начальные "
"данные <formsets-initial-data>` для форм набора, передав параметр "
"``initial`` при создании экземпляра набора, возвращенного  "
"``modelformset_factory``. Тем не менее, в случае набора модельных форм, "
"начальными значениями заполняются только пустые, т.е. новые, формы."

# 2cbdcb04648c43a9b68675b307f8132d
#: ../../topics/forms/modelforms.txt:634
msgid "Saving objects in the formset"
msgstr "Сохранение объектов набора форм"

# a71deea1eff14a8ea9d0134e695281aa
#: ../../topics/forms/modelforms.txt:636
msgid ""
"As with a ``ModelForm``, you can save the data as a model object. This is "
"done with the formset's ``save()`` method::"
msgstr ""
"Благодаря ``ModelForm``, вы можете сохранять данные в модели. Для этого надо "
"использовать метод ``save()`` набора форм::"

# 4d514823e5a342f48dc52c77717ca008
#: ../../topics/forms/modelforms.txt:645
msgid ""
"The ``save()`` method returns the instances that have been saved to the "
"database. If a given instance's data didn't change in the bound data, the "
"instance won't be saved to the database and won't be included in the return "
"value (``instances``, in the above example)."
msgstr ""
"Метод ``save()`` возвращает экземпляры объектов, которые были сохранены в "
"базе данных. Те объекты, данные которых не изменились, не сохраняются в базе "
"данных и не отображаются в возвращаемом значении (``instances`` из "
"предыдущего примера)."

# 2efe6753b19d4ddd8f0dff3e1ad855e3
#: ../../topics/forms/modelforms.txt:650
msgid ""
"When fields are missing from the form (for example because they have been "
"excluded), these fields will not be set by the ``save()`` method. You can "
"find more information about this restriction, which also holds for regular "
"``ModelForms``, in `Using a subset of fields on the form`_."
msgstr ""
"Когда форма содержит не все поля модели (например, потому что некоторые из "
"них были явно исключены), то отсутствующие поля не будут сохранены через "
"метод ``save()``. Подробнее об этом ограничении модельных форм написано в "
"`Using a subset of fields on the form`_."

# 21efc3324afb49b9b715b4ee6073396a
#: ../../topics/forms/modelforms.txt:656
msgid "Pass ``commit=False`` to return the unsaved model instances::"
msgstr ""
"Передайте ``commit=False``, чтобы получить экземпляры моделей, которые ещё "
"не сохранены в базе данных::"

# 1c0d7f5eea7744a5843cf25e99a640ca
#: ../../topics/forms/modelforms.txt:664
msgid ""
"This gives you the ability to attach data to the instances before saving "
"them to the database. If your formset contains a ``ManyToManyField``, you'll "
"also need to call ``formset.save_m2m()`` to ensure the many-to-many "
"relationships are saved properly."
msgstr ""
"Это позволяет вам добавлять данные к экземплярам моделей перед их "
"сохранением в базе данных. Если ваш набор форм содержит  "
"``ManyToManyField``, вам также потребуется вызвать метод ``formset.save_m2m()"
"`` для того, чтобы обеспечить сохранение связей «многие-ко-многим»."

# 4374320a015d4c68b2d908fd78bb3654
#: ../../topics/forms/modelforms.txt:672
msgid "Limiting the number of editable objects"
msgstr "Ограничение количества редактируемых объектов"

# 8399bc82433f49d7ae46ca0014a34258
#: ../../topics/forms/modelforms.txt:676
msgid ""
"As with regular formsets, you can use the ``max_num`` and ``extra`` "
"parameters to ``modelformset_factory`` to limit the number of extra forms "
"displayed."
msgstr ""
"Как и в случае набора обычных форм, вы можете использовать аргументы "
"``max_num`` и ``extra`` функции ``modelformset_factory`` для ограничения "
"числа дополнительно отображаемых форм."

# 93079533b0c048e1892bebed0cb84a0c
#: ../../topics/forms/modelforms.txt:679
msgid "``max_num`` does not prevent existing objects from being displayed::"
msgstr ""
"Аргумент ``max_num`` не препятствует отображению существующих объектов::"

# 1c4c6050be4b405f9d620f84b2e0e9b4
#: ../../topics/forms/modelforms.txt:689
msgid ""
"If the value of ``max_num`` is greater than the number of existing related "
"objects, up to ``extra`` additional blank forms will be added to the "
"formset, so long as the total number of forms does not exceed ``max_num``::"
msgstr ""
"Если значение ``max_num`` больше чем количество существующих объектов, то к "
"будет добавлено ``extra`` пустых форм к набору. Так будет происходить до "
"достижения максимального количества форм, ограниченного параметром "
"``max_num``::"

# 178bad3957c546fd9f6d37126c1d1e67
#: ../../topics/forms/modelforms.txt:704
msgid ""
"A ``max_num`` value of ``None`` (the default) puts no limit on the number of "
"forms displayed."
msgstr ""
"Присвоение ``max_num`` значения ``None`` (по умолчанию) снимет ограничение "
"на количество отображаемых набором форм."

# f70bc46b6c804dbbae65071e733a426d
#: ../../topics/forms/modelforms.txt:708
msgid "Using a model formset in a view"
msgstr "Использование набора модельных форм в представлении"

# ac9f99d5fd6046f697dcdb026e1d37a3
#: ../../topics/forms/modelforms.txt:710
msgid ""
"Model formsets are very similar to formsets. Let's say we want to present a "
"formset to edit ``Author`` model instances::"
msgstr ""
"Наборы модельных форм во многом похожи на наборы обычных форм. Для "
"отображения набора форм для редактирования экземпляров модели ``Author``::"

# 99b1d233559d415193d693024c154e0c
#: ../../topics/forms/modelforms.txt:726
msgid ""
"As you can see, the view logic of a model formset isn't drastically "
"different than that of a \"normal\" formset. The only difference is that we "
"call ``formset.save()`` to save the data into the database. (This was "
"described above, in :ref:`saving-objects-in-the-formset`.)"
msgstr ""
"Как вы можете видеть, логика представления не сильно отличается отличается "
"логики обычного набора. Отличием является вызов ``formset.save()`` для "
"сохранения данных. (Это было описано ранее в :ref:`saving-objects-in-the-"
"formset`.)"

# 820e97d5f77847e5b4ef56ac30c345f8
#: ../../topics/forms/modelforms.txt:732
msgid "Overiding ``clean()`` on a ``model_formset``"
msgstr "Переопределение ``clean()`` у ``model_formset``"

# ca81213f42d344e3a6d48a4d826f408c
#: ../../topics/forms/modelforms.txt:734
msgid ""
"Just like with ``ModelForms``, by default the ``clean()`` method of a "
"``model_formset`` will validate that none of the items in the formset "
"violate the unique constraints on your model (either ``unique``, "
"``unique_together`` or ``unique_for_date|month|year``).  If you want to "
"override the ``clean()`` method on a ``model_formset`` and maintain this "
"validation, you must call the parent class's ``clean`` method::"
msgstr ""
"Подобно``Forms``, по умолчанию метод ``clean()`` набора модельных форм будет "
"проверять все данные на нарушение ограничений уникальности, определённых в "
"вашей модели (``unique``, ``unique_together`` или ``unique_for_date|month|"
"year``).  Желая сохранить данный функционал при переопределении метода "
"``clean()``, следует вызывать метод ``clean()`` базового класса::"

# f8171973e5ed403ab552ded4ef0672da
#: ../../topics/forms/modelforms.txt:749
msgid "Using a custom queryset"
msgstr "Использование собственной выборки"

# 64a342d60a48409f84c4eecf46342787
#: ../../topics/forms/modelforms.txt:751
msgid ""
"As stated earlier, you can override the default queryset used by the model "
"formset::"
msgstr ""
"Как было сказано ранее, в можете переопределить стандартную выборку, которая "
"используется набором модельных форм::"

# 41779a4e2c404091b897fba89c6e4c79
#: ../../topics/forms/modelforms.txt:768
msgid ""
"Note that we pass the ``queryset`` argument in both the ``POST`` and ``GET`` "
"cases in this example."
msgstr ""
"Следует отметить, что мы передаём аргумент ``queryset`` в обе ветки ``POST`` "
"и ``GET`` в этом примере."

# 8f00e403e1e949108e03a98c37fdefad
#: ../../topics/forms/modelforms.txt:772
msgid "Using the formset in the template"
msgstr "Использование набора форм в шаблоне"

# e299be46dfa0461991d23dbc47be760d
#: ../../topics/forms/modelforms.txt:776
msgid "There are three ways to render a formset in a Django template."
msgstr "Существует три способа отображения набора форм в шаблоне Django."

# f1558e75babb4d5ca8add1761898c30d
#: ../../topics/forms/modelforms.txt:778
msgid "First, you can let the formset do most of the work::"
msgstr "Во-первых, вы можете позволить набору форм самому сделать всю работу::"

# 3422c9f643dd42ef8efe7adf1923d2e2
#: ../../topics/forms/modelforms.txt:784
msgid ""
"Second, you can manually render the formset, but let the form deal with "
"itself::"
msgstr ""
"Во-вторых, в можете вручную вывести набор форм, но позволить его формам "
"отображаться самостоятельно::"

# 9a265fcfa38541408f40c966e2754235
#: ../../topics/forms/modelforms.txt:794
msgid ""
"When you manually render the forms yourself, be sure to render the "
"management form as shown above. See the :ref:`management form documentation "
"<understanding-the-managementform>`."
msgstr ""
"При самостоятельном отображении форм, не забудьте отобразить техническую "
"форму, как было показано выше. Обратитесь к документации на :ref:"
"`технические формы <understanding-the-managementform>`."

# 6bab26c4614b4167894f85bcdc06be66
#: ../../topics/forms/modelforms.txt:798
msgid "Third, you can manually render each field::"
msgstr "В-третьих, вы можете вручную выводит все поля::"

# 360f2bf54fcf422d9d94e9a45442b73f
#: ../../topics/forms/modelforms.txt:809
msgid ""
"If you opt to use this third method and you don't iterate over the fields "
"with a ``{% for %}`` loop, you'll need to render the primary key field. For "
"example, if you were rendering the ``name`` and ``age`` fields of a model::"
msgstr ""
"Если вы предпочтёте третий способ и не будете использовать ``{% for %}`` для "
"итерации по полям, то вам понадобится вывести поле для первичного ключа. "
"Рассмотрим случай, когда требуется вывести поля ``name`` и ``age`` модели::"

# a44de2d0e964439b9204f648d998e96c
#: ../../topics/forms/modelforms.txt:824
msgid ""
"Notice how we need to explicitly render ``{{ form.id }}``. This ensures that "
"the model formset, in the ``POST`` case, will work correctly. (This example "
"assumes a primary key named ``id``. If you've explicitly defined your own "
"primary key that isn't called ``id``, make sure it gets rendered.)"
msgstr ""
"Обратите внимание на то, как мы явно выводим ``{{ form.id }}``. Это "
"гарантирует, что набор модельных форм, в случае ``POST``, будет работать "
"правильно. (Этот пример предполагает, что первичный ключ имеет имя ``id``. "
"Если вы изменили имя первичного ключа, то учтите это в данном примере.)"

# 72f15d1acb3b42c3b477929d232e33d3
#: ../../topics/forms/modelforms.txt:832
msgid "Inline formsets"
msgstr "Встраиваемые наборы форм"

# 24281fa4db0946d383c94aaeb1ffdec0
#: ../../topics/forms/modelforms.txt:834
msgid ""
"Inline formsets is a small abstraction layer on top of model formsets. These "
"simplify the case of working with related objects via a foreign key. Suppose "
"you have these two models::"
msgstr ""
"Встраиваемые наборы форм являются небольшим абстрактным слоем над набором "
"модельных форм. Они упрощают работу со связанными через внешний ключ "
"объектами. Предположим у вас есть следующие две модели::"

# 75161a1ab5234c9b89318256c23a22f0
#: ../../topics/forms/modelforms.txt:845
msgid ""
"If you want to create a formset that allows you to edit books belonging to a "
"particular author, you could do this::"
msgstr ""
"Если вам требуется создать набор форм для редактирования книг принадлежащих "
"определенному автору, вы можете сделать следующее::"

# 428f1162ee1247178f8ea8f3fa02ab60
#: ../../topics/forms/modelforms.txt:854
msgid ""
"``inlineformset_factory`` uses ``modelformset_factory`` and marks "
"``can_delete=True``."
msgstr ""
"``inlineformset_factory`` использует ``modelformset_factory`` и "
"устанавливает ``can_delete=True``."

# c2a65179f23f4af389217b786c61c6d9
#: ../../topics/forms/modelforms.txt:859
msgid ""
":ref:`Manually rendered can_delete and can_order <manually-rendered-can-"
"delete-and-can-order>`."
msgstr ""
":ref:`Ручное управление can_delete и can_order <manually-rendered-can-delete-"
"and-can-order>`."

# ba26d089dea242a6bde7a3c75ac4b5a1
#: ../../topics/forms/modelforms.txt:862
msgid "More than one foreign key to the same model"
msgstr "Более одного внешнего ключа к одной модели"

# 81339f11efe9484eb20fb0630f6ffa32
#: ../../topics/forms/modelforms.txt:864
msgid ""
"If your model contains more than one foreign key to the same model, you'll "
"need to resolve the ambiguity manually using ``fk_name``. For example, "
"consider the following model::"
msgstr ""
"Если ваша модель иметь больше одного внешнего ключа на одну и ту же модель, "
"вам следует разрешить эту путаницу, указав ``fk_name``. Например, рассмотрим "
"следующую модель::"

# 6edc4239f70f498087e7919caff36c17
#: ../../topics/forms/modelforms.txt:873
msgid "To resolve this, you can use ``fk_name`` to ``inlineformset_factory``::"
msgstr ""
"Чтобы разрешить эту неопределенность, вы может использовать ``fk_name`` в "
"``inlineformset_factory``::"

# 0312094e06d745248792909142713204
#: ../../topics/forms/modelforms.txt:878
msgid "Using an inline formset in a view"
msgstr "Использование вторичного набора форм в представлении"

# 260a270bb7a641bd9583993b9b811977
#: ../../topics/forms/modelforms.txt:880
msgid ""
"You may want to provide a view that allows a user to edit the related "
"objects of a model. Here's how you can do that::"
msgstr ""
"Вам может понадобиться создать представление, которое позволит пользователю "
"редактировать связанные объекты модели. Вот как это можно сделать::"

# d907f3367fa748b1892a5efb622d4145
#: ../../topics/forms/modelforms.txt:897
msgid "Notice how we pass ``instance`` in both the ``POST`` and ``GET`` cases."
msgstr ""
"Следует отметить, что мы передаём  ``instance`` в обоих (``POST`` и ``GET``) "
"случаях."
