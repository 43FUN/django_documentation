# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated <>, 2012, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-08-21 17:15\n"
"PO-Revision-Date: 2013-08-22 01:44+0400\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 3548e5028bb843b7b7b156dff3a4d711
#: ../../topics/forms/index.txt:3
msgid "Working with forms"
msgstr "Работа с формами"

# 642e485c7c374cdfb5651af3bf32a331
#: ../../topics/forms/index.txt:7
msgid ""
"This document provides an introduction to Django's form handling features. "
"For a more detailed look at specific areas of the forms API, see :doc:`/ref/"
"forms/api`, :doc:`/ref/forms/fields`, and :doc:`/ref/forms/validation`."
msgstr ""
"Этот документ знакомит со способами работы с формами. Для более детальной "
"информации по API форм обращайтесь к :doc:`/ref/forms/api`, :doc:`/ref/forms/"
"fields` и :doc:`/ref/forms/validation`."

# c9eb827b67d4482c9aee20b6e40b829f
#: ../../topics/forms/index.txt:14
msgid "``django.forms`` is Django's form-handling library."
msgstr "``django.forms`` -- библиотека для работы с формами."

# b7fe6395b37f4e1393407e629157be1e
#: ../../topics/forms/index.txt:16
msgid ""
"While it is possible to process form submissions just using Django's :class:"
"`~django.http.HttpRequest` class, using the form library takes care of a "
"number of common form-related tasks. Using it, you can:"
msgstr ""
"Несмотря на наличие возможности обработки форм через обычный класс Django :"
"class:`~django.http.HttpRequest`, использование специализированной "
"библиотеки предоставляет решение для общих задач, возникающих при работе с "
"формами. Используя библиотек, вы можете:"

# 8e2abbe97eb144c3a71adf6dc6abb30c
#: ../../topics/forms/index.txt:20
msgid "Display an HTML form with automatically generated form widgets."
msgstr ""
"Автоматически генерировать HTML код формы с использованием необходимых "
"виджетов."

# b858354f11554f99a4497446a8dbed8d
#: ../../topics/forms/index.txt:21
msgid "Check submitted data against a set of validation rules."
msgstr "Проверять переданную информацию с помощью набора правил валидации."

# ef9ef415a4a14e1b9118845899221aee
#: ../../topics/forms/index.txt:22
msgid "Redisplay a form in the case of validation errors."
msgstr "Заново отображать форму при обнаружении ошибок."

# 8e2cc90df85b4b56af3553c4179bf9dd
#: ../../topics/forms/index.txt:23
msgid "Convert submitted form data to the relevant Python data types."
msgstr ""
"Преобразовывать переданную информацию в соответствующие типы данных языка "
"Python."

# 595d715fa1aa46cc882221fe19cf5f37
#: ../../topics/forms/index.txt:26
msgid "Overview"
msgstr "Введение"

# ae65f0b3f450437d891c2e8f66d05bff
#: ../../topics/forms/index.txt:28
msgid "The library deals with these concepts:"
msgstr "Библиотека работает с нижеперечисленными сущностями:"

# 547a794f8694428d9696a3bf79b51377
#: ../../topics/forms/index.txt:33
msgid ""
"A class that corresponds to an HTML form widget, e.g. ``<input type=\"text"
"\">`` or ``<textarea>``. This handles rendering of the widget as HTML."
msgstr ""
"Класс, который соответствует определённому HTML коду т.е. ``<input type="
"\"text\">`` или ``<textarea>``. Он реализует генерацию HTML кода для виджета."

# c369e42e879044c9a07bb617643fd140
#: ../../topics/forms/index.txt:38
msgid ""
"A class that is responsible for doing validation, e.g. an ``EmailField`` "
"that makes sure its data is a valid email address."
msgstr ""
"Класс, который отвечает за проведение валидации, т.е. ``EmailField`` "
"обеспечивает получение правильного адреса электронной почты."

# eed44f6d41f44c07aeb90ea0ad8e9141
#: ../../topics/forms/index.txt:42
msgid ""
"A collection of fields that knows how to validate itself and display itself "
"as HTML."
msgstr ""
"Коллекция полей, которые знаю как проверять введённую информацию и "
"отображать себя в виде HTML кода."

# 7178a16bb52c499cbfd32ebc0ec9e790
#: ../../topics/forms/index.txt:46
msgid "The CSS and JavaScript resources that are required to render a form."
msgstr ""
"CSS и JavaScript ресурсы, которые необходимы для правильного отображения "
"формы."

# dc5fc3742bd840ecb48cb64cec4a587e
#: ../../topics/forms/index.txt:48
msgid ""
"The library is decoupled from the other Django components, such as the "
"database layer, views and templates. It relies only on Django settings, a "
"couple of ``django.utils`` helper functions and Django's "
"internationalization hooks (but you're not required to be using "
"internationalization features to use this library)."
msgstr ""
"Эта библиотека отделена от остальных компонентов Django, таких как слой "
"взаимодействия с базой данных, представления и шаблоны. Оно зависит только "
"от настроек Django, ряда вспомогательных функций из  ``django.utils`` и "
"механизма интернационализации (необязательная зависимость)."

# 0ac37298c54642afabb8abc02536dbbd
#: ../../topics/forms/index.txt:55
msgid "Form objects"
msgstr "Объекты форм"

# 9284a96b0b9c49bf8f15e4585aaecaf9
#: ../../topics/forms/index.txt:57
msgid ""
"A Form object encapsulates a sequence of form fields and a collection of "
"validation rules that must be fulfilled in order for the form to be "
"accepted. Form classes are created as subclasses of ``django.forms.Form`` "
"and make use of a declarative style that you'll be familiar with if you've "
"used Django's database models."
msgstr ""
"Объект формы содержит в себе последовательность полей формы и коллекцию "
"правил валидации, которые должны быть пройдены для того, чтобы форма приняла "
"переданную информацию. Классы форм создаются как подклассы ``django.forms."
"Form`` и используют декларативный стиль, аналогичный используемому в моделях "
"Django."

# a617e11c4a3b4538a38f0e83f0f41bde
#: ../../topics/forms/index.txt:63
msgid ""
"For example, consider a form used to implement \"contact me\" functionality "
"on a personal Web site:"
msgstr ""
"Например, рассмотрим форму созданную для реализации функционала \"свяжитесь "
"со мной\" на личном веб сайте:"

# 50eb1e5efc254d9589c5d3e5a09c4de4
#: ../../topics/forms/index.txt:76
msgid ""
"A form is composed of ``Field`` objects. In this case, our form has four "
"fields: ``subject``, ``message``, ``sender`` and ``cc_myself``. "
"``CharField``, ``EmailField`` and ``BooleanField`` are just three of the "
"available field types; a full list can be found in :doc:`/ref/forms/fields`."
msgstr ""
"Форма составлена из объектов ``Field`` objects. В нашем случае, форма "
"содержит четыре поля: ``subject``, ``message``, ``sender`` и ``cc_myself``. "
"``CharField``, ``EmailField`` и ``BooleanField`` -- это просто три "
"стандартных типа поля; полный список полей может быть найден в  :doc:`/ref/"
"forms/fields`."

# 78d4ddb7d4de4c90805138b3d565e653
#: ../../topics/forms/index.txt:81
msgid ""
"If your form is going to be used to directly add or edit a Django model, you "
"can use a :doc:`ModelForm </topics/forms/modelforms>` to avoid duplicating "
"your model description."
msgstr ""
"Если ваша форма будет использоваться для прямого доступа к модели Django, вы "
"можете использовать  :doc:`ModelForm </topics/forms/modelforms>`, чтобы "
"исключить дублирование описания вашей модели."

# 8bf1919e080246a38fe8dd8bda60e5fa
#: ../../topics/forms/index.txt:88
msgid "Using a form in a view"
msgstr "Использование формы в представлении"

# 03eebb5d44d8499487872117850fb296
#: ../../topics/forms/index.txt:90
msgid "The standard pattern for processing a form in a view looks like this:"
msgstr ""
"Стандартный шаблон для работы с формой в представлении выглядит следующим "
"образом:"

# 17b46fec0bed474f804b5b5246e32e05
#: ../../topics/forms/index.txt:112
msgid "There are three possible code paths here:"
msgstr "В этом коде заложено три сценария:"

# 8a8d8e114ebc4de6bb1aee74af675256
#: ../../topics/forms/index.txt:115
msgid "Form submitted?"
msgstr "Форма отправлена?"

# 97d62ae5f6584d6fb4b0757b431b18b2
#: ../../topics/forms/index.txt:115
msgid "Data?"
msgstr "Данные"

# 197e26357a67444fb61cebd2be0fd2e4
#: ../../topics/forms/index.txt:115
msgid "What occurs"
msgstr "Что происходит"

# ac3ca998f8424d17a069adb3375ae771
#: ../../topics/forms/index.txt:117
msgid "Unsubmitted"
msgstr "Неотправлена"

# f9eda6bbba5e42d3aeafbcf53c75b564
#: ../../topics/forms/index.txt:117
msgid "None yet"
msgstr "Ещё нет"

# 115873e9029d4c2c9b2ec65ac1a984ca
#: ../../topics/forms/index.txt:117
msgid "Template gets passed unbound instance of ContactForm."
msgstr "Шаблон получает пустой экземпляр ContactForm."

# 5c84124e4ca141f499f3bdebae73093e
# 5a130ec64e8e40c7acd6b24d8c1cf9f4
#: ../../topics/forms/index.txt:120 ../../topics/forms/index.txt:123
msgid "Submitted"
msgstr "Отправлена"

# 7a5bb621ed4b464eb590ee7cf17a9500
#: ../../topics/forms/index.txt:120
msgid "Invalid data"
msgstr "Неверные данные"

# 5da0f001648644aea3f9c898be60dd64
#: ../../topics/forms/index.txt:120
msgid "Template gets passed bound instance of ContactForm."
msgstr "Шаблон получает заполненный экземпляр ContactForm."

# 3916a285b64c4c4caa730542fb158def
#: ../../topics/forms/index.txt:123
msgid "Valid data"
msgstr "Правильные данные"

# 8ab8a9290eb44d279c4a8e2f70ea50ce
#: ../../topics/forms/index.txt:123
msgid "Valid data is processed. Redirect to a \"thanks\" page."
msgstr ""
"Данные обрабатываются. Перенаправление на страницу с \"благодарностями\"."

# baf64a6a7a914ef393065f268146e6ed
#: ../../topics/forms/index.txt:127
msgid ""
"The distinction between :ref:`ref-forms-api-bound-unbound` is important:"
msgstr "Важно понимать разницу между :ref:`ref-forms-api-bound-unbound`:"

# d93da22ee09b498d9350b0d70e336ceb
#: ../../topics/forms/index.txt:129
msgid ""
"An unbound form has no data associated with it. When rendered to the user, "
"it will be empty or will contain default values."
msgstr ""
"Незаполненная форма не содержит данных, привязанных к её полям. При "
"отображении формы пользователь увидит её пустой или содержащей значения по "
"умолчанию."

# 588878e489a1405e9f411f0c37ab2949
#: ../../topics/forms/index.txt:132
msgid ""
"A bound form has submitted data, and hence can be used to tell if that data "
"is valid. If an invalid bound form is rendered, it can include inline error "
"messages telling the user what data to correct."
msgstr ""
"Заполненная форма содержит переданную информацию и, следовательно, может "
"быть использована для проверки введённых данных. При отображении заполненной "
"формы, не прошедшей проверку, она будет содержать встроенные сообщения об "
"ошибках, которые расскажут пользователю о причинах отказа в принятии его "
"данных."

# 56babcbca8cb4f6a9f1b3b35a2ef8ad2
#: ../../topics/forms/index.txt:137
msgid "Handling file uploads with a form"
msgstr "Обработка закачки файла через форму"

# c82d104cd764468b85296e3de66bf339
#: ../../topics/forms/index.txt:139
msgid ""
"To see how to handle file uploads with your form, see :ref:`binding-uploaded-"
"files`."
msgstr ""
"Чтобы узнать как обрабатывать загрузку файлов через форму обратитесь к :ref:"
"`binding-uploaded-files`."

# b57a96b9baa6476e863bc19fd78786bb
#: ../../topics/forms/index.txt:143
msgid "Processing the data from a form"
msgstr "Обработка данных формы"

# ac8b288fc7b444b291ccfd01f561fa7d
#: ../../topics/forms/index.txt:145
msgid ""
"Once ``is_valid()`` returns ``True``, the successfully validated form data "
"will be in the ``form.cleaned_data`` dictionary. This data will have been "
"converted nicely into Python types for you."
msgstr ""
"Если ``is_valid()`` возвратила ``True``, то проверенные данные будут "
"располагаться в словаре ``form.cleaned_data``. Все значения этого словаря "
"приведены к соответствующему типу данных."

# a2dc0584c61642539e7f27830a82bad7
#: ../../topics/forms/index.txt:151
msgid ""
"You can still access the unvalidated data directly from ``request.POST`` at "
"this point, but the validated data is better."
msgstr ""
"Также вы можете напрямую обратиться к непроверенным данным через ``request."
"POST``, но лучше использовать проверенные данные."

# a1922bca4159423cb0c2fc3697773abe
#: ../../topics/forms/index.txt:154
msgid ""
"In the above example, ``cc_myself`` will be a boolean value. Likewise, "
"fields such as ``IntegerField`` and ``FloatField`` convert values to a "
"Python int and float respectively."
msgstr ""
"В приведённом ранее примере, ``cc_myself`` будет булевым значением. "
"Аналогично, такие поля как ``IntegerField`` и ``FloatField`` преобразовывают "
"свои значения в типы Python int и float соответственно."

# 81f22e88846d4014ba82f243046fa398
#: ../../topics/forms/index.txt:158
msgid ""
"Read-only fields are not available in ``form.cleaned_data`` (and setting a "
"value in a custom ``clean()`` method won't have any effect). These fields "
"are displayed as text rather than as input elements, and thus are not posted "
"back to the server."
msgstr ""
"Поля \"только для чтения\" не доступны через ``form.cleaned_data`` (и "
"установка значения в собственном методе ``clean()`` не даст никакого "
"эффекта). Такие поля отображаются в виде текста, а не в виде элемента ввода "
"и, следовательно, не отправляются на сервер."

# 3a5b10193c7e47e0b7d66e32c16b1e2c
#: ../../topics/forms/index.txt:163
msgid ""
"Extending the earlier example, here's how the form data could be processed:"
msgstr ""
"Продолжая работать над предыдущим примером, покажем как могут быть "
"обработаны данные из формы:"

# 36f8d70fd4d44fc297854735310b18e8
#: ../../topics/forms/index.txt:183
msgid "For more on sending email from Django, see :doc:`/topics/email`."
msgstr ""
"Подробную информацию про отправку электронной почты с помощью Django можно "
"найти в :doc:`/topics/email`."

# 132ae3965e8f4747a74c51a7984942cc
#: ../../topics/forms/index.txt:186
msgid "Displaying a form using a template"
msgstr "Отображение формы с помощью шаблона"

# 72d35b966a044252b2f019a4c120382a
#: ../../topics/forms/index.txt:188
msgid ""
"Forms are designed to work with the Django template language. In the above "
"example, we passed our ``ContactForm`` instance to the template using the "
"context variable ``form``. Here's a simple example template::"
msgstr ""
"Формы разработаны для работы с шаблонным языком Django. В приведённом ранее "
"примере мы передавали экземпляр ``ContactForm`` в шаблон, используя "
"контекстную переменную ``form``. Покажем простой пример шаблона::"

# b8a2d53c66ad40acbf285b7f253b92a1
#: ../../topics/forms/index.txt:197
msgid ""
"The form only outputs its own fields; it is up to you to provide the "
"surrounding ``<form>`` tags and the submit button."
msgstr ""
"Форма просто выводит свои поля. Указание тага ``<form>`` и кнопки для "
"отправки формы -- это ваша задача."

# 9719c58369d046d4acbf4074256056a4
#: ../../topics/forms/index.txt:200
msgid ""
"If your form includes uploaded files, be sure to include ``enctype="
"\"multipart/form-data\"`` in the ``form`` element. If you wish to write a "
"generic template that will work whether or not the form has files, you can "
"use the :meth:`~django.forms.Form.is_multipart` attribute on the form::"
msgstr ""
"Если ваша форма содержит загружаемые файлы, удостоверьтесь, что элемент "
"``form`` имеет атрибут ``enctype=\"multipart/form-data\"``. Если вам "
"потребуется создать общий шаблон, не зависящий от наличия функционала "
"загрузки файлов, вы можете использовать атрибут формы :meth:`~django.forms."
"Form.is_multipart`::"

# a845262370ab42f996e12a74af9626b7
#: ../../topics/forms/index.txt:210
msgid ""
"Django ships with an easy-to-use :doc:`protection against Cross Site Request "
"Forgeries </ref/contrib/csrf>`. When submitting a form via POST with CSRF "
"protection enabled you must use the :ttag:`csrf_token` template tag as in "
"the preceding example. However, since CSRF protection is not directly tied "
"to forms in templates, this tag is omitted from the following examples in "
"this document."
msgstr ""
"Django поставляется с :doc:`защитой против Cross Site Request Forgeries </"
"ref/contrib/csrf>`. Для отправки формы через POST при включенной защите от "
"CSRF вы должны использовать шаблонный таг :ttag:`csrf_token`, как показано в "
"предыдущем примере. Тем не менее, раз CSRF защита не обязательна для "
"применения в шаблонах при оформлении формы, этот таг опущен в последующих "
"примерах."

# d04382d8802649ffaa8439e29121b5f5
#: ../../topics/forms/index.txt:217
msgid ""
"``form.as_p`` will output the form with each form field and accompanying "
"label wrapped in a paragraph. Here's the output for our example template::"
msgstr ""
"Таг ``form.as_p`` выводит поля формы в виде параграфов (т.е. ``<p/>``) "
"вместе с соответствующими метками. Ниже представлены пример с результатом "
"использования нашего шаблона::"

# 5d49b8a5614140fbb8ffd629360ca453
#: ../../topics/forms/index.txt:232
msgid ""
"Note that each form field has an ID attribute set to ``id_<field-name>``, "
"which is referenced by the accompanying label tag. This is important for "
"ensuring forms are accessible to assistive technology such as screen reader "
"software. You can also :ref:`customize the way in which labels and ids are "
"generated <ref-forms-api-configuring-label>`."
msgstr ""
"Следует отметить, что каждое поле формы обладает атрибутом с идентификатором "
"``id_<field-name>``, с помощью которого обеспечивается связь с тагом метки. "
"Это позволяет формам быть дружественными к вспомогательным технологиям, "
"например, это поможет работе ПО для слепых. Также вы можете :ref:`настроить "
"способ генерации меток и идентификаторов <ref-forms-api-configuring-label>`."

# 9fbdbdc15bb24601b29872cdd9c1438e
#: ../../topics/forms/index.txt:238
msgid ""
"You can also use ``form.as_table`` to output table rows (you'll need to "
"provide your own ``<table>`` tags) and ``form.as_ul`` to output list items."
msgstr ""
"Вы можете использовать ``form.as_table`` для вывода полей формы в виде "
"таблицы (потребуется прописать в шаблоне таги ``<table>``) и ``form.as_ul`` "
"для вывода полей формы в виде элементов списка."

# d700e18901ca4b6787a6b5d5f4409f7a
#: ../../topics/forms/index.txt:242
msgid "Customizing the form template"
msgstr "Настройка шаблона формы"

# 7de2b9dd3a654371bb66f2f29584c603
#: ../../topics/forms/index.txt:244
msgid ""
"If the default generated HTML is not to your taste, you can completely "
"customize the way a form is presented using the Django template language. "
"Extending the above example::"
msgstr ""
"Если сгенерированный по умолчанию HTML не подходит для решения вашей задачи, "
"вы можете изменить представление формы с помощью шаблонного языка Django. "
"Продолжая работу с приведённым ранее примером::"

# 4fd086364ead4e0d841d81ef593c1d7f
#: ../../topics/forms/index.txt:273
msgid ""
"Each named form-field can be output to the template using ``{{ form."
"name_of_field }}``, which will produce the HTML needed to display the form "
"widget. Using ``{{ form.name_of_field.errors }}`` displays a list of form "
"errors, rendered as an unordered list. This might look like::"
msgstr ""
"Каждое именованное поле формы может быть выведено в шаблоне с помощью тага ``"
"{{ form.name_of_field }}``, который создаст HTML код необходимый для "
"отображения виджета. Использование тага ``{{ form.name_of_field.errors }}`` "
"отобразит список ошибок поля формы в виде ненумерованного списка. Результат "
"может быть таким::"

# 7aa879ce5ac04fe1a34b35ea4d89e3b0
#: ../../topics/forms/index.txt:282
msgid ""
"The list has a CSS class of ``errorlist`` to allow you to style its "
"appearance. If you wish to further customize the display of errors you can "
"do so by looping over them::"
msgstr ""
"Списку назначен  CSS класс ``errorlist``, что позволяет вам настроить "
"параметры его отображения. Если потребуется более тонкая настройка "
"отображения ошибок, вы можете это организовать с помощью цикла по ним::"

# 3dad1b00ccaa41c7946d85ae678f6936
#: ../../topics/forms/index.txt:295
msgid "Looping over the form's fields"
msgstr "Цикл по полям формы"

# c657a3e1408849fdb0d02115af17d717
#: ../../topics/forms/index.txt:297
msgid ""
"If you're using the same HTML for each of your form fields, you can reduce "
"duplicate code by looping through each field in turn using a ``{% for %}`` "
"loop::"
msgstr ""
"Если вы используете однотипный HTML для каждого поля формы, вы можете "
"избежать дублирования кода, используя таг ``{% for %}`` для прохода по полям "
"формы::"

# d79186e16c134b29aad267ccb5d1e4c2
#: ../../topics/forms/index.txt:311
msgid ""
"Within this loop, ``{{ field }}`` is an instance of :class:`~django.forms."
"BoundField`. ``BoundField`` also has the following attributes, which can be "
"useful in your templates:"
msgstr ""
"Внутри цикла таг ``{{ field }}`` представляет собой экземпляр класса :class:"
"`~django.forms.BoundField`. Класс ``BoundField`` также имеет приведённые "
"далее атрибуты, которые могут быть полезны в ваших шаблонах:"

# 2abbef4263824fc49077c4be053711b3
#: ../../topics/forms/index.txt:316
msgid "``{{ field.label }}``"
msgstr "``{{ field.label }}``"

# 07429c499b33436084dc86e90da0bb95
#: ../../topics/forms/index.txt:316
msgid "The label of the field, e.g. ``Email address``."
msgstr "Метка поля, т.е. ``Email address``."

# 5d0ff96a2d184411a1ec27b22089b495
#: ../../topics/forms/index.txt:320
msgid "``{{ field.label_tag }}``"
msgstr "``{{ field.label_tag }}``"

# f7835c78f1fd4282ab0dc8258669a144
#: ../../topics/forms/index.txt:319
msgid ""
"The field's label wrapped in the appropriate HTML ``<label>`` tag, e.g. "
"``<label for=\"id_email\">Email address</label>``"
msgstr ""
"Метка поля обёрнута в соответствующий HTML таг ``<label>``, т.е. ``<label "
"for=\"id_email\">Email address</label>``."

# 49309bed1d6849feaf2e5a0253416aa7
#: ../../topics/forms/index.txt:323
msgid "``{{ field.value }}``"
msgstr "``{{ field.value }}``"

# 5bf862eec06a42c991fc4b7588938125
#: ../../topics/forms/index.txt:323
msgid "The value of the field. e.g ``someone@example.com``"
msgstr "Значение поля, т.е. ``someone@example.com``."

# e14194e35acf4683ae1e775b952c1d52
#: ../../topics/forms/index.txt:327
msgid "``{{ field.html_name }}``"
msgstr "``{{ field.html_name }}``"

# 33d895e5c6c446588dc6bf6aa90449c4
#: ../../topics/forms/index.txt:326
msgid ""
"The name of the field that will be used in the input element's name field. "
"This takes the form prefix into account, if it has been set."
msgstr ""
"Имя поля, которое будет использовано в HTML поле. Здесь учитывается префикс "
"формы, если он был установлен."

# c0ef903a04ce46b39228540b37a20074
#: ../../topics/forms/index.txt:330
msgid "``{{ field.help_text }}``"
msgstr "``{{ field.help_text }}``"

# 3b42f7c2359f489ebda5dcf05b1ba566
#: ../../topics/forms/index.txt:330
msgid "Any help text that has been associated with the field."
msgstr "Любой вспомогательный текст, который привязан к полю."

# 81afca76e115450585674c1cbf48fa3a
#: ../../topics/forms/index.txt:337
msgid "``{{ field.errors }}``"
msgstr "``{{ field.errors }}``"

# 9f95dc7a544d4932b4ae25727c6c9847
#: ../../topics/forms/index.txt:333
msgid ""
"Outputs a ``<ul class=\"errorlist\">`` containing any validation errors "
"corresponding to this field. You can customize the presentation of the "
"errors with a ``{% for error in field.errors %}`` loop. In this case, each "
"object in the loop is a simple string containing the error message."
msgstr ""
"Вывод ``<ul class=\"errorlist\">``, содержащий все ошибка валидации, "
"относящиеся к полю. Вы можете настраивать представление списка ошибок с "
"помощью цикла ``{% for error in field.errors %}``. В этом случае, каждый "
"объект в цикле является простой строкой, содержащей сообщение об ошибке."

# b8c9bd2812fa4a988148450aa969a45e
#: ../../topics/forms/index.txt:346
msgid "``{{ field.is_hidden }}``"
msgstr "``{{ field.is_hidden }}``"

# 8eaf036bdfae4b29b89ef7ae3e78e6cf
#: ../../topics/forms/index.txt:340
msgid ""
"This attribute is ``True`` if the form field is a hidden field and ``False`` "
"otherwise. It's not particularly useful as a template variable, but could be "
"useful in conditional tests such as::"
msgstr ""
"Значение этого атрибута равно ``True``, если поля является скрытым, и "
"``False`` в противном случае. Данный атрибут обычно не используется при "
"выводе формы, но может быть полезен в условиях подобных этому::"

# 6ead6cb4b29e424bb99ca3d99a0bf586
#: ../../topics/forms/index.txt:352
msgid "``{{ field.field }}``"
msgstr "``{{ field.field }}``"

# 2ba7fe7567074b98b6ff90083c94015a
#: ../../topics/forms/index.txt:349
msgid ""
"The :class:`~django.forms.Field` instance from the form class that this :"
"class:`~django.forms.BoundField` wraps. You can use it to access :class:"
"`~django.forms.Field` attributes , e.g. ``{{ char_field.field.max_length }}"
"``."
msgstr ""
"Экземпляр :class:`~django.forms.Field` из класса формы, который обёрнут с "
"помощью :class:`~django.forms.BoundField`. Он предоставляет доступ к "
"атрибутам :class:`~django.forms.Field`, т.е. ``{{ char_field.field."
"max_length }}``."

# 2b1592ca173b4905bbaead99d71b622b
#: ../../topics/forms/index.txt:355
msgid "Looping over hidden and visible fields"
msgstr "Цикл по скрытым и отображаемым полям"

# 4c21c8bb22aa482fbe0a401e63bed636
#: ../../topics/forms/index.txt:357
msgid ""
"If you're manually laying out a form in a template, as opposed to relying on "
"Django's default form layout, you might want to treat ``<input type=\"hidden"
"\">`` fields differently than non-hidden fields. For example, because hidden "
"fields don't display anything, putting error messages \"next to\" the field "
"could cause confusion for your users -- so errors for those fields should be "
"handled differently."
msgstr ""
"Если вы вручную размещаете форму в шаблоне, то у вас появляется возможность "
"трактовать ``<input type=\"hidden\">`` поля по своему. Например, так как "
"скрытые поля не отображаются на форме, размещение сообщений об ошибке для "
"поля \"перейти далее\" может смутить пользователей. Такие ошибки следует "
"обрабатывать другим способом."

# d719c68fcf534d11a027ec5cb36f49f7
#: ../../topics/forms/index.txt:364
msgid ""
"Django provides two methods on a form that allow you to loop over the hidden "
"and visible fields independently: ``hidden_fields()`` and ``visible_fields()"
"``. Here's a modification of an earlier example that uses these two methods::"
msgstr ""
"Django предоставляет два метода класса формы, которые позволяют организовать "
"раздельные циклы по скрытым и отображаемым полям: ``hidden_fields()`` и "
"``visible_fields()``. Покажем как изменится наш пример, если воспользоваться "
"этими методами::"

# 3ce789f362c64c84b3a8615d559c10fd
#: ../../topics/forms/index.txt:384
msgid ""
"This example does not handle any errors in the hidden fields. Usually, an "
"error in a hidden field is a sign of form tampering, since normal form "
"interaction won't alter them. However, you could easily insert some error "
"displays for those form errors, as well."
msgstr ""
"Этот пример не обрабатывает ошибки в скрытых полях. Обычно ошибка в скрытом "
"поле означает наличие подмены в форме, так как обычный сценарий работы с "
"формами не предполагает изменения этих полей. Тем не менее, вы можете "
"реализовать отображение таких ошибок формы."

# 85bfc38e02074feab04a370dab34c6b3
#: ../../topics/forms/index.txt:390
msgid "Reusable form templates"
msgstr "Повторное использование шаблонов форм"

# c1f95572e8874ed5baca4bc5e8f3f880
#: ../../topics/forms/index.txt:392
msgid ""
"If your site uses the same rendering logic for forms in multiple places, you "
"can reduce duplication by saving the form's loop in a standalone template "
"and using the :ttag:`include` tag to reuse it in other templates::"
msgstr ""
"Если на вашем сайте используется однотипная логика отображения форм, вы "
"можете избежать дублирования кода, сохранив цикл по полям формы в отдельном "
"шаблоне и подключая его в другие шаблоны с помощью тага :ttag:`include`::"

# 29a2f047ffd54e67b2ecd8c8ab3328ad
#: ../../topics/forms/index.txt:410
msgid ""
"If the form object passed to a template has a different name within the "
"context, you can alias it using the ``with`` argument of the :ttag:`include` "
"tag::"
msgstr ""
"Если объект формы, переданный в шаблон, имеет другое имя в контексте, вы "
"можете создать для него псевдоним, используя аргумент ``with`` тага :ttag:"
"`include`::"

# 9a204fe0ad9b4d8684269984ca3aee28
#: ../../topics/forms/index.txt:419
msgid ""
"If you find yourself doing this often, you might consider creating a custom :"
"ref:`inclusion tag<howto-custom-template-tags-inclusion-tags>`."
msgstr ""
"Если вам придётся делать такое часто, то можно создать собственный :ref:"
"`включающий таг<howto-custom-template-tags-inclusion-tags>`."

# 6e3b07bacb6f494fb32d863dd9d87de1
#: ../../topics/forms/index.txt:423
msgid "Further topics"
msgstr "Изучите далее"

# 0cbef1f19d15499ba7ffaac0f526ad75
#: ../../topics/forms/index.txt:425
msgid "This covers the basics, but forms can do a whole lot more:"
msgstr "Мы рассмотрели базовые возможности форм, но они могут больше:"

# 241e7edbfc684ae5a42fdbc4de948c15
#: ../../topics/forms/index.txt:437
msgid ":doc:`The Forms Reference </ref/forms/index>`"
msgstr ":doc:`Справочник по формам </ref/forms/index>`"

# c7bf4868ca3d4300a0a48589e6fbc644
#: ../../topics/forms/index.txt:437
msgid ""
"Covers the full API reference, including form fields, form widgets, and form "
"and field validation."
msgstr ""
"Предоставляет полный справочник на API, включая поля, виджеты и валидацию "
"как полей, так и формы."

# aed074783a83499d947808074ae15dff
#~ msgid ""
#~ "If the form has not been submitted, an unbound instance of ContactForm is "
#~ "created and passed to the template."
#~ msgstr ""
#~ "Если форме не передана информация, то создаётся чистый экземпляр "
#~ "``ContactForm`` и передаётся в шаблон."

# 39e9630b780146acae9868f34d4791a9
#~ msgid ""
#~ "If the form has been submitted, a bound instance of the form is created "
#~ "using ``request.POST``. If the submitted data is valid, it is processed "
#~ "and the user is re-directed to a \"thanks\" page."
#~ msgstr ""
#~ "Если форма получила переданную информацию, создаётся заполненный из "
#~ "``request.POST`` экземпляр формы. Если переданная информация прошла "
#~ "проверку, то она обрабатывается и пользователь перенаправляется на "
#~ "страницу с благодарностью за ввод информации."

# bfce3e4802f048b484c231f9ad6c60e5
#~ msgid ""
#~ "If the form has been submitted but is invalid, the bound form instance is "
#~ "passed on to the template."
#~ msgstr ""
#~ "Если форма была заполнена, но переданная информация не прошла проверку, "
#~ "то заполненный экземпляр формы отправляется в шаблон."

# 01d0d65e4d0d4c04b3cbe9ee6cfe208b
#~ msgid ""
#~ "See :ref:`ref-forms-api-bound-unbound` for further information on the "
#~ "differences between bound and unbound forms."
#~ msgstr ""
#~ "Обратитесь к :ref:`ref-forms-api-bound-unbound` для подробной информации "
#~ "по различиям между заполненной и незаполненной формами."

# af86990082b24cec877a070d83c3a2f1
#~ msgid ""
#~ "Once ``is_valid()`` returns ``True``, you can process the form submission "
#~ "safe in the knowledge that it conforms to the validation rules defined by "
#~ "your form. While you could access ``request.POST`` directly at this "
#~ "point, it is better to access ``form.cleaned_data``. This data has not "
#~ "only been validated but will also be converted in to the relevant Python "
#~ "types for you. In the above example, ``cc_myself`` will be a boolean "
#~ "value. Likewise, fields such as ``IntegerField`` and ``FloatField`` "
#~ "convert values to a Python int and float respectively. Note that read-"
#~ "only fields are not available in ``form.cleaned_data`` (and setting a "
#~ "value in a custom ``clean()`` method won't have any effect) because these "
#~ "fields are displayed as text rather than as input elements, and thus are "
#~ "not posted back to the server."
#~ msgstr ""
#~ "После того, как ``is_valid()`` возвратила ``True``, вы можете спокойно "
#~ "работать с полученными данными, зная, что они прошли валидацию в вашей "
#~ "форме. Несмотря на наличие прямого доступа к  ``request.POST``, "
#~ "рекомендуется использовать ``form.cleaned_data``. Данные, представленные "
#~ "этой структурой не только проверены, но и преобразованы в соответствующие "
#~ "типы языка Python. В приведённом выше примере, ``cc_myself`` представлено "
#~ "булевым значением. Аналогично, поля, подобные ``IntegerField`` и "
#~ "``FloatField`` преобразуют значения в типы ``int`` и ``float`` "
#~ "соответственно. Следует отметить, что нередактируемые поля (readonly) не "
#~ "представлены ``form.cleaned_data`` (и установка значения в перекрытом "
#~ "методе ``clean()`` не будет иметь эффекта), потому что эти поля "
#~ "отображаются как текст, а не элемент ввода и, таким образом, не "
#~ "отправляются обратно на сервер."
