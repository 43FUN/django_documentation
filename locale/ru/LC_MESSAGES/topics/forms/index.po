# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-02-15 15:13\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 3548e5028bb843b7b7b156dff3a4d711
#: ../../topics/forms/index.txt:3
msgid "Working with forms"
msgstr ""

# 642e485c7c374cdfb5651af3bf32a331
#: ../../topics/forms/index.txt:7
msgid ""
"This document provides an introduction to Django's form handling features. "
"For a more detailed look at specific areas of the forms API, see :doc:`/ref/"
"forms/api`, :doc:`/ref/forms/fields`, and :doc:`/ref/forms/validation`."
msgstr ""

# c9eb827b67d4482c9aee20b6e40b829f
#: ../../topics/forms/index.txt:14
msgid "``django.forms`` is Django's form-handling library."
msgstr ""

# b7fe6395b37f4e1393407e629157be1e
#: ../../topics/forms/index.txt:16
msgid ""
"While it is possible to process form submissions just using Django's :class:"
"`~django.http.HttpRequest` class, using the form library takes care of a "
"number of common form-related tasks. Using it, you can:"
msgstr ""

# 8e2abbe97eb144c3a71adf6dc6abb30c
#: ../../topics/forms/index.txt:20
msgid "Display an HTML form with automatically generated form widgets."
msgstr ""

# b858354f11554f99a4497446a8dbed8d
#: ../../topics/forms/index.txt:21
msgid "Check submitted data against a set of validation rules."
msgstr ""

# ef9ef415a4a14e1b9118845899221aee
#: ../../topics/forms/index.txt:22
msgid "Redisplay a form in the case of validation errors."
msgstr ""

# 8e2cc90df85b4b56af3553c4179bf9dd
#: ../../topics/forms/index.txt:23
msgid "Convert submitted form data to the relevant Python data types."
msgstr ""

# 595d715fa1aa46cc882221fe19cf5f37
#: ../../topics/forms/index.txt:26
msgid "Overview"
msgstr ""

# ae65f0b3f450437d891c2e8f66d05bff
#: ../../topics/forms/index.txt:28
msgid "The library deals with these concepts:"
msgstr ""

# 547a794f8694428d9696a3bf79b51377
#: ../../topics/forms/index.txt:33
msgid ""
"A class that corresponds to an HTML form widget, e.g. ``<input type=\"text"
"\">`` or ``<textarea>``. This handles rendering of the widget as HTML."
msgstr ""

# c369e42e879044c9a07bb617643fd140
#: ../../topics/forms/index.txt:38
msgid ""
"A class that is responsible for doing validation, e.g. an ``EmailField`` "
"that makes sure its data is a valid email address."
msgstr ""

# eed44f6d41f44c07aeb90ea0ad8e9141
#: ../../topics/forms/index.txt:42
msgid ""
"A collection of fields that knows how to validate itself and display itself "
"as HTML."
msgstr ""

# 7178a16bb52c499cbfd32ebc0ec9e790
#: ../../topics/forms/index.txt:46
msgid "The CSS and JavaScript resources that are required to render a form."
msgstr ""

# dc5fc3742bd840ecb48cb64cec4a587e
#: ../../topics/forms/index.txt:48
msgid ""
"The library is decoupled from the other Django components, such as the "
"database layer, views and templates. It relies only on Django settings, a "
"couple of ``django.utils`` helper functions and Django's "
"internationalization hooks (but you're not required to be using "
"internationalization features to use this library)."
msgstr ""

# 0ac37298c54642afabb8abc02536dbbd
#: ../../topics/forms/index.txt:55
msgid "Form objects"
msgstr ""

# 9284a96b0b9c49bf8f15e4585aaecaf9
#: ../../topics/forms/index.txt:57
msgid ""
"A Form object encapsulates a sequence of form fields and a collection of "
"validation rules that must be fulfilled in order for the form to be "
"accepted. Form classes are created as subclasses of ``django.forms.Form`` "
"and make use of a declarative style that you'll be familiar with if you've "
"used Django's database models."
msgstr ""

# a617e11c4a3b4538a38f0e83f0f41bde
#: ../../topics/forms/index.txt:63
msgid ""
"For example, consider a form used to implement \"contact me\" functionality "
"on a personal Web site:"
msgstr ""

# 50eb1e5efc254d9589c5d3e5a09c4de4
#: ../../topics/forms/index.txt:76
msgid ""
"A form is composed of ``Field`` objects. In this case, our form has four "
"fields: ``subject``, ``message``, ``sender`` and ``cc_myself``. "
"``CharField``, ``EmailField`` and ``BooleanField`` are just three of the "
"available field types; a full list can be found in :doc:`/ref/forms/fields`."
msgstr ""

# 78d4ddb7d4de4c90805138b3d565e653
#: ../../topics/forms/index.txt:81
msgid ""
"If your form is going to be used to directly add or edit a Django model, you "
"can use a :doc:`ModelForm </topics/forms/modelforms>` to avoid duplicating "
"your model description."
msgstr ""

# 8bf1919e080246a38fe8dd8bda60e5fa
#: ../../topics/forms/index.txt:86
msgid "Using a form in a view"
msgstr ""

# 03eebb5d44d8499487872117850fb296
#: ../../topics/forms/index.txt:88
msgid "The standard pattern for processing a form in a view looks like this:"
msgstr ""

# 17b46fec0bed474f804b5b5246e32e05
#: ../../topics/forms/index.txt:107
msgid "There are three code paths here:"
msgstr ""

# aed074783a83499d947808074ae15dff
#: ../../topics/forms/index.txt:109
msgid ""
"If the form has not been submitted, an unbound instance of ContactForm is "
"created and passed to the template."
msgstr ""

# 39e9630b780146acae9868f34d4791a9
#: ../../topics/forms/index.txt:111
msgid ""
"If the form has been submitted, a bound instance of the form is created "
"using ``request.POST``. If the submitted data is valid, it is processed and "
"the user is re-directed to a \"thanks\" page."
msgstr ""

# bfce3e4802f048b484c231f9ad6c60e5
#: ../../topics/forms/index.txt:114
msgid ""
"If the form has been submitted but is invalid, the bound form instance is "
"passed on to the template."
msgstr ""

# 588878e489a1405e9f411f0c37ab2949
#: ../../topics/forms/index.txt:117
msgid ""
"The distinction between **bound** and **unbound** forms is important. An "
"unbound form does not have any data associated with it; when rendered to the "
"user, it will be empty or will contain default values. A bound form does "
"have submitted data, and hence can be used to tell if that data is valid. If "
"an invalid bound form is rendered it can include inline error messages "
"telling the user where they went wrong."
msgstr ""

# 01d0d65e4d0d4c04b3cbe9ee6cfe208b
#: ../../topics/forms/index.txt:124
msgid ""
"See :ref:`ref-forms-api-bound-unbound` for further information on the "
"differences between bound and unbound forms."
msgstr ""

# 56babcbca8cb4f6a9f1b3b35a2ef8ad2
#: ../../topics/forms/index.txt:128
msgid "Handling file uploads with a form"
msgstr ""

# c82d104cd764468b85296e3de66bf339
#: ../../topics/forms/index.txt:130
msgid ""
"To see how to handle file uploads with your form see :ref:`binding-uploaded-"
"files` for more information."
msgstr ""

# b57a96b9baa6476e863bc19fd78786bb
#: ../../topics/forms/index.txt:134
msgid "Processing the data from a form"
msgstr ""

# af86990082b24cec877a070d83c3a2f1
#: ../../topics/forms/index.txt:136
msgid ""
"Once ``is_valid()`` returns ``True``, you can process the form submission "
"safe in the knowledge that it conforms to the validation rules defined by "
"your form. While you could access ``request.POST`` directly at this point, "
"it is better to access ``form.cleaned_data``. This data has not only been "
"validated but will also be converted in to the relevant Python types for "
"you. In the above example, ``cc_myself`` will be a boolean value. Likewise, "
"fields such as ``IntegerField`` and ``FloatField`` convert values to a "
"Python int and float respectively. Note that read-only fields are not "
"available in ``form.cleaned_data`` (and setting a value in a custom ``clean()"
"`` method won't have any effect) because these fields are displayed as text "
"rather than as input elements, and thus are not posted back to the server."
msgstr ""

# 3a5b10193c7e47e0b7d66e32c16b1e2c
#: ../../topics/forms/index.txt:148
msgid ""
"Extending the above example, here's how the form data could be processed:"
msgstr ""

# 36f8d70fd4d44fc297854735310b18e8
#: ../../topics/forms/index.txt:166
msgid "For more on sending email from Django, see :doc:`/topics/email`."
msgstr ""

# 132ae3965e8f4747a74c51a7984942cc
#: ../../topics/forms/index.txt:169
msgid "Displaying a form using a template"
msgstr ""

# 72d35b966a044252b2f019a4c120382a
#: ../../topics/forms/index.txt:171
msgid ""
"Forms are designed to work with the Django template language. In the above "
"example, we passed our ``ContactForm`` instance to the template using the "
"context variable ``form``. Here's a simple example template::"
msgstr ""

# b8a2d53c66ad40acbf285b7f253b92a1
#: ../../topics/forms/index.txt:180
msgid ""
"The form only outputs its own fields; it is up to you to provide the "
"surrounding ``<form>`` tags and the submit button."
msgstr ""

# a845262370ab42f996e12a74af9626b7
#: ../../topics/forms/index.txt:185
msgid ""
"Django ships with an easy-to-use :doc:`protection against Cross Site Request "
"Forgeries </ref/contrib/csrf>`. When submitting a form via POST with CSRF "
"protection enabled you must use the :ttag:`csrf_token` template tag as in "
"the preceding example. However, since CSRF protection is not directly tied "
"to forms in templates, this tag is omitted from the following examples in "
"this document."
msgstr ""

# d04382d8802649ffaa8439e29121b5f5
#: ../../topics/forms/index.txt:192
msgid ""
"``form.as_p`` will output the form with each form field and accompanying "
"label wrapped in a paragraph. Here's the output for our example template::"
msgstr ""

# 5d49b8a5614140fbb8ffd629360ca453
#: ../../topics/forms/index.txt:207
msgid ""
"Note that each form field has an ID attribute set to ``id_<field-name>``, "
"which is referenced by the accompanying label tag. This is important for "
"ensuring forms are accessible to assistive technology such as screen reader "
"software. You can also :ref:`customize the way in which labels and ids are "
"generated <ref-forms-api-configuring-label>`."
msgstr ""

# 9fbdbdc15bb24601b29872cdd9c1438e
#: ../../topics/forms/index.txt:213
msgid ""
"You can also use ``form.as_table`` to output table rows (you'll need to "
"provide your own ``<table>`` tags) and ``form.as_ul`` to output list items."
msgstr ""

# d700e18901ca4b6787a6b5d5f4409f7a
#: ../../topics/forms/index.txt:217
msgid "Customizing the form template"
msgstr ""

# 7de2b9dd3a654371bb66f2f29584c603
#: ../../topics/forms/index.txt:219
msgid ""
"If the default generated HTML is not to your taste, you can completely "
"customize the way a form is presented using the Django template language. "
"Extending the above example::"
msgstr ""

# 4fd086364ead4e0d841d81ef593c1d7f
#: ../../topics/forms/index.txt:248
msgid ""
"Each named form-field can be output to the template using ``{{ form."
"name_of_field }}``, which will produce the HTML needed to display the form "
"widget. Using ``{{ form.name_of_field.errors }}`` displays a list of form "
"errors, rendered as an unordered list. This might look like::"
msgstr ""

# 7aa879ce5ac04fe1a34b35ea4d89e3b0
#: ../../topics/forms/index.txt:257
msgid ""
"The list has a CSS class of ``errorlist`` to allow you to style its "
"appearance. If you wish to further customize the display of errors you can "
"do so by looping over them::"
msgstr ""

# 3dad1b00ccaa41c7946d85ae678f6936
#: ../../topics/forms/index.txt:270
msgid "Looping over the form's fields"
msgstr ""

# c657a3e1408849fdb0d02115af17d717
#: ../../topics/forms/index.txt:272
msgid ""
"If you're using the same HTML for each of your form fields, you can reduce "
"duplicate code by looping through each field in turn using a ``{% for %}`` "
"loop::"
msgstr ""

# d79186e16c134b29aad267ccb5d1e4c2
#: ../../topics/forms/index.txt:286
msgid ""
"Within this loop, ``{{ field }}`` is an instance of :class:`BoundField`. "
"``BoundField`` also has the following attributes, which can be useful in "
"your templates:"
msgstr ""

# 07429c499b33436084dc86e90da0bb95
#: ../../topics/forms/index.txt:291
msgid "The label of the field, e.g. ``Email address``."
msgstr ""

# f7835c78f1fd4282ab0dc8258669a144
#: ../../topics/forms/index.txt:294
msgid ""
"The field's label wrapped in the appropriate HTML ``<label>`` tag, e.g. "
"``<label for=\"id_email\">Email address</label>``"
msgstr ""

# 5bf862eec06a42c991fc4b7588938125
#: ../../topics/forms/index.txt:298
msgid "The value of the field. e.g ``someone@example.com``"
msgstr ""

# 33d895e5c6c446588dc6bf6aa90449c4
#: ../../topics/forms/index.txt:301
msgid ""
"The name of the field that will be used in the input element's name field. "
"This takes the form prefix into account, if it has been set."
msgstr ""

# 3b42f7c2359f489ebda5dcf05b1ba566
#: ../../topics/forms/index.txt:305
msgid "Any help text that has been associated with the field."
msgstr ""

# 9f95dc7a544d4932b4ae25727c6c9847
#: ../../topics/forms/index.txt:308
msgid ""
"Outputs a ``<ul class=\"errorlist\">`` containing any validation errors "
"corresponding to this field. You can customize the presentation of the "
"errors with a ``{% for error in field.errors %}`` loop. In this case, each "
"object in the loop is a simple string containing the error message."
msgstr ""

# 8eaf036bdfae4b29b89ef7ae3e78e6cf
#: ../../topics/forms/index.txt:315
msgid ""
"This attribute is ``True`` if the form field is a hidden field and ``False`` "
"otherwise. It's not particularly useful as a template variable, but could be "
"useful in conditional tests such as::"
msgstr ""

# 2b1592ca173b4905bbaead99d71b622b
#: ../../topics/forms/index.txt:324
msgid "Looping over hidden and visible fields"
msgstr ""

# 4c21c8bb22aa482fbe0a401e63bed636
#: ../../topics/forms/index.txt:326
msgid ""
"If you're manually laying out a form in a template, as opposed to relying on "
"Django's default form layout, you might want to treat ``<input type=\"hidden"
"\">`` fields differently than non-hidden fields. For example, because hidden "
"fields don't display anything, putting error messages \"next to\" the field "
"could cause confusion for your users -- so errors for those fields should be "
"handled differently."
msgstr ""

# d719c68fcf534d11a027ec5cb36f49f7
#: ../../topics/forms/index.txt:333
msgid ""
"Django provides two methods on a form that allow you to loop over the hidden "
"and visible fields independently: ``hidden_fields()`` and ``visible_fields()"
"``. Here's a modification of an earlier example that uses these two methods::"
msgstr ""

# 3ce789f362c64c84b3a8615d559c10fd
#: ../../topics/forms/index.txt:353
msgid ""
"This example does not handle any errors in the hidden fields. Usually, an "
"error in a hidden field is a sign of form tampering, since normal form "
"interaction won't alter them. However, you could easily insert some error "
"displays for those form errors, as well."
msgstr ""

# 85bfc38e02074feab04a370dab34c6b3
#: ../../topics/forms/index.txt:359
msgid "Reusable form templates"
msgstr ""

# c1f95572e8874ed5baca4bc5e8f3f880
#: ../../topics/forms/index.txt:361
msgid ""
"If your site uses the same rendering logic for forms in multiple places, you "
"can reduce duplication by saving the form's loop in a standalone template "
"and using the :ttag:`include` tag to reuse it in other templates::"
msgstr ""

# 29a2f047ffd54e67b2ecd8c8ab3328ad
#: ../../topics/forms/index.txt:379
msgid ""
"If the form object passed to a template has a different name within the "
"context, you can alias it using the ``with`` argument of the :ttag:`include` "
"tag::"
msgstr ""

# 9a204fe0ad9b4d8684269984ca3aee28
#: ../../topics/forms/index.txt:388
msgid ""
"If you find yourself doing this often, you might consider creating a custom :"
"ref:`inclusion tag<howto-custom-template-tags-inclusion-tags>`."
msgstr ""

# 6e3b07bacb6f494fb32d863dd9d87de1
#: ../../topics/forms/index.txt:392
msgid "Further topics"
msgstr ""

# 0cbef1f19d15499ba7ffaac0f526ad75
#: ../../topics/forms/index.txt:394
msgid "This covers the basics, but forms can do a whole lot more:"
msgstr ""

# c7bf4868ca3d4300a0a48589e6fbc644
#: ../../topics/forms/index.txt:406
msgid ""
"Covers the full API reference, including form fields, form widgets, and form "
"and field validation."
msgstr ""
