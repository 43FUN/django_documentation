# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-03-12 13:35\n"
"PO-Revision-Date: 2012-03-12 13:35\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# edb29a0f29534bb1a1d69e3b369426aa
#: ../../releases/0.95.txt:3
msgid "Django version 0.95 release notes"
msgstr ""

# 332f64226abb436886540b19f1b2129f
#: ../../releases/0.95.txt:5
msgid "Welcome to the Django 0.95 release."
msgstr ""

# eb55f778a0394a188326de45e3cfa4c6
#: ../../releases/0.95.txt:7
msgid ""
"This represents a significant advance in Django development since the 0.91 "
"release in January 2006. The details of every change in this release would "
"be too extensive to list in full, but a summary is presented below."
msgstr ""

# f97ba9f6783b422ca5e9a9a833306c8c
#: ../../releases/0.95.txt:12
msgid "Suitability and API stability"
msgstr ""

# 91567415138e4b94840189a9a383e500
#: ../../releases/0.95.txt:14
msgid ""
"This release is intended to provide a stable reference point for developers "
"wanting to work on production-level applications that use Django."
msgstr ""

# 25874f2bd68b4979acd835fddfb4d677
#: ../../releases/0.95.txt:17
msgid ""
"However, it's not the 1.0 release, and we'll be introducing further changes "
"before 1.0. For a clear look at which areas of the framework will change "
"(and which ones will *not* change) before 1.0, see the api-stability.txt "
"file, which lives in the docs/ directory of the distribution."
msgstr ""

# e5d8b57ccfbb4123a95025e15549cfed
#: ../../releases/0.95.txt:22
msgid ""
"You may have a need to use some of the features that are marked as \"subject "
"to API change\" in that document, but that's OK with us as long as it's OK "
"with you, and as long as you understand APIs may change in the future."
msgstr ""

# e7e71329e7ec4faeaa7af674cc0c251a
#: ../../releases/0.95.txt:26
msgid ""
"Fortunately, most of Django's core APIs won't be changing before version "
"1.0. There likely won't be as big of a change between 0.95 and 1.0 versions "
"as there was between 0.91 and 0.95."
msgstr ""

# c210118f100d477aaaded7b94ad2b7d9
#: ../../releases/0.95.txt:31
msgid "Changes and new features"
msgstr ""

# 2161c9208a9e4dddaf0c803143cc4c1f
#: ../../releases/0.95.txt:33
msgid ""
"The major changes in this release (for developers currently using the 0.91 "
"release) are a result of merging the 'magic-removal' branch of development. "
"This branch removed a number of constraints in the way Django code had to be "
"written that were a consequence of decisions made in the early days of "
"Django, prior to its open-source release. It's now possible to write more "
"natural, Pythonic code that works as expected, and there's less \"black magic"
"\" happening behind the scenes."
msgstr ""

# 1693faea930b49cda2b9047d04cbb8f2
#: ../../releases/0.95.txt:41
msgid ""
"Aside from that, another main theme of this release is a dramatic increase "
"in usability. We've made countless improvements in error messages, "
"documentation, etc., to improve developers' quality of life."
msgstr ""

# 61ea088c0db348a0989f1a137717a194
#: ../../releases/0.95.txt:45
msgid "The new features and changes introduced in 0.95 include:"
msgstr ""

# d2a2d6b755f246f0a047744462327cc5
#: ../../releases/0.95.txt:47
msgid ""
"Django now uses a more consistent and natural filtering interface for "
"retrieving objects from the database."
msgstr ""

# 068210fa30d946339c6fb51fbbd0741d
#: ../../releases/0.95.txt:50
msgid ""
"User-defined models, functions and constants now appear in the module "
"namespace they were defined in. (Previously everything was magically "
"transferred to the django.models.* namespace.)"
msgstr ""

# 5dc9f94351ca4ce4a9725a723e5f1153
#: ../../releases/0.95.txt:54
msgid ""
"Some optional applications, such as the FlatPage, Sites and Redirects apps, "
"have been decoupled and moved into django.contrib. If you don't want to use "
"these applications, you no longer have to install their database tables."
msgstr ""

# 0a9cca21332d4433940cb117edb762ac
#: ../../releases/0.95.txt:59
msgid "Django now has support for managing database transactions."
msgstr ""

# ff775cc295144d6ba678de335cfbc7ae
#: ../../releases/0.95.txt:61
msgid ""
"We've added the ability to write custom authentication and authorization "
"backends for authenticating users against alternate systems, such as LDAP."
msgstr ""

# 3dc1a988822f4d0f86df11349c0823c3
#: ../../releases/0.95.txt:65
msgid ""
"We've made it easier to add custom table-level functions to models, through "
"a new \"Manager\" API."
msgstr ""

# bd4872c7987d443191d5b269e4d8527a
#: ../../releases/0.95.txt:68
msgid ""
"It's now possible to use Django without a database. This simply means that "
"the framework no longer requires you to have a working database set up just "
"to serve dynamic pages. In other words, you can just use URLconfs/views on "
"their own. Previously, the framework required that a database be configured, "
"regardless of whether you actually used it."
msgstr ""

# 04bd3c533c6a4255bcde718e5bb18aa6
#: ../../releases/0.95.txt:74
msgid ""
"It's now more explicit and natural to override save() and delete() methods "
"on models, rather than needing to hook into the pre_save() and post_save() "
"method hooks."
msgstr ""

# 1525409ba7b343f29ba0c8ba870e64b8
#: ../../releases/0.95.txt:78
msgid ""
"Individual pieces of the framework now can be configured without requiring "
"the setting of an environment variable. This permits use of, for example, "
"the Django templating system inside other applications."
msgstr ""

# 6e98d39bca65490fb0295eb908c42879
#: ../../releases/0.95.txt:82
msgid ""
"More and more parts of the framework have been internationalized, as we've "
"expanded internationalization (i18n) support. The Django codebase, including "
"code and templates, has now been translated, at least in part, into 31 "
"languages. From Arabic to Chinese to Hungarian to Welsh, it is now possible "
"to use Django's admin site in your native language."
msgstr ""

# 2640efefa7834150a9aa9e5e5659cb7e
#: ../../releases/0.95.txt:88
msgid ""
"The number of changes required to port from 0.91-compatible code to the 0.95 "
"code base are significant in some cases. However, they are, for the most "
"part, reasonably routine and only need to be done once. A list of the "
"necessary changes is described in the `Removing The Magic`_ wiki page. There "
"is also an easy checklist_ for reference when undertaking the porting "
"operation."
msgstr ""

# 403ffa8721e1457a92d3e901e17738e2
#: ../../releases/0.95.txt:98
msgid "Problem reports and getting help"
msgstr ""

# e3d7ee61fe574eddb1b3c3fe1bb0abff
#: ../../releases/0.95.txt:100
msgid ""
"Need help resolving a problem with Django? The documentation in the "
"distribution is also available :doc:`online </index>` at the `Django Web "
"site`_. The :doc:`FAQ </faq/index>` document is especially recommended, as "
"it contains a number of issues that come up time and again."
msgstr ""

# 831c6f2873754316bf35f118730810e1
#: ../../releases/0.95.txt:105
msgid ""
"For more personalized help, the `django-users`_ mailing list is a very "
"active list, with more than 2,000 subscribers who can help you solve any "
"sort of Django problem. We recommend you search the archives first, though, "
"because many common questions appear with some regularity, and any "
"particular problem may already have been answered."
msgstr ""

# 133e4f42fa7a4f90af8826c1bb599df9
#: ../../releases/0.95.txt:111
msgid ""
"Finally, for those who prefer the more immediate feedback offered by IRC, "
"there's a #django channel on irc.freenode.net that is regularly populated by "
"Django users and developers from around the world. Friendly people are "
"usually available at any hour of the day -- to help, or just to chat."
msgstr ""

# 4c5abd25cefe400ca9d4f7c015411181
#: ../../releases/0.95.txt:119
msgid "Thanks for using Django!"
msgstr ""

# 11bb2e1ba2f645878ef0b38b622cb824
#: ../../releases/0.95.txt:121
msgid "The Django Team July 2006"
msgstr ""

# 145e8c4e94b14ff382a9f01bd451fd2f
#: ../../releases/0.96.txt:3
msgid "Django version 0.96 release notes"
msgstr ""

# acf43918be37466bb33797a26a58f223
#: ../../releases/0.96.txt:5
msgid "Welcome to Django 0.96!"
msgstr ""

# 2b812d02b0954126a43cee809f0820cf
#: ../../releases/0.96.txt:7
msgid ""
"The primary goal for 0.96 is a cleanup and stabilization of the features "
"introduced in 0.95. There have been a few small `backwards-incompatible "
"changes`_ since 0.95, but the upgrade process should be fairly simple and "
"should not require major changes to existing applications."
msgstr ""

# 3c1b30b9be7d437683bec8343e42226a
#: ../../releases/0.96.txt:12
msgid ""
"However, we're also releasing 0.96 now because we have a set of backwards-"
"incompatible changes scheduled for the near future. Once completed, they "
"will involve some code changes for application developers, so we recommend "
"that you stick with Django 0.96 until the next official release; then you'll "
"be able to upgrade in one step instead of needing to make incremental "
"changes to keep up with the development version of Django."
msgstr ""

# 7b998e3c9a64446fb9511b175690acfb
# 31b4d8288ae0415998b314f75bf5b8c0
#: ../../releases/0.96.txt:21 ../../releases/1.0.txt:33
msgid "Backwards-incompatible changes"
msgstr ""

# 3109b3c4b1f54de2aa962bd13ce13aa2
#: ../../releases/0.96.txt:23
msgid ""
"The following changes may require you to update your code when you switch "
"from 0.95 to 0.96:"
msgstr ""

# 3e3cc0a502d94bb7b01cab56220f6031
#: ../../releases/0.96.txt:27
msgid "``MySQLdb`` version requirement"
msgstr ""

# 6aad415e4c0b411ca9a4e801e100849b
#: ../../releases/0.96.txt:29
msgid ""
"Due to a bug in older versions of the ``MySQLdb`` Python module (which "
"Django uses to connect to MySQL databases), Django's MySQL backend now "
"requires version 1.2.1p2 or higher of ``MySQLdb``, and will raise exceptions "
"if you attempt to use an older version."
msgstr ""

# ce5fa81c19704a9fb55efe36b91d626f
#: ../../releases/0.96.txt:34
msgid ""
"If you're currently unable to upgrade your copy of ``MySQLdb`` to meet this "
"requirement, a separate, backwards-compatible backend, called \"mysql_old\", "
"has been added to Django. To use this backend, change the :setting:"
"`DATABASE_ENGINE` setting in your Django settings file from this::"
msgstr ""

# cbe825bfa2be42d2ba625597a1f24ab5
# 2da92ffc2740419ebad52f8236d90a34
#: ../../releases/0.96.txt:42 ../../releases/1.2.txt:596
msgid "to this::"
msgstr ""

# f1de5c5b6a7a4e9a85d1a3f77097c18d
#: ../../releases/0.96.txt:46
msgid ""
"However, we strongly encourage MySQL users to upgrade to a more recent "
"version of ``MySQLdb`` as soon as possible, The \"mysql_old\" backend is "
"provided only to ease this transition, and is considered deprecated; aside "
"from any necessary security fixes, it will not be actively maintained, and "
"it will be removed in a future release of Django."
msgstr ""

# 258e4bd0a9fd47bd9c00e5e2931336ba
#: ../../releases/0.96.txt:52
msgid ""
"Also, note that some features, like the new :setting:`DATABASE_OPTIONS` "
"setting (see the :doc:`databases documentation </ref/databases>` for "
"details), are only available on the \"mysql\" backend, and will not be made "
"available for \"mysql_old\"."
msgstr ""

# 30e7f5f7af024c1bb55f87111f129ab6
#: ../../releases/0.96.txt:58
msgid "Database constraint names changed"
msgstr ""

# 545003e9b4b147d5b8a7351ebee76701
#: ../../releases/0.96.txt:60
msgid ""
"The format of the constraint names Django generates for foreign key "
"references have changed slightly. These names are generally only used when "
"it is not possible to put the reference directly on the affected column, so "
"they are not always visible."
msgstr ""

# 67da82c3f14646e7929a5037dcb243a0
#: ../../releases/0.96.txt:65
msgid ""
"The effect of this change is that running ``manage.py reset`` and similar "
"commands against an existing database may generate SQL with the new form of "
"constraint name, while the database itself contains constraints named in the "
"old form; this will cause the database server to raise an error message "
"about modifying non-existent constraints."
msgstr ""

# 0eb782b2fd08440da8655643ae46db7b
#: ../../releases/0.96.txt:71
msgid "If you need to work around this, there are two methods available:"
msgstr ""

# 9108c77bed0741f08662c256f2782d68
#: ../../releases/0.96.txt:73
msgid ""
"Redirect the output of ``manage.py`` to a file, and edit the generated SQL "
"to use the correct constraint names before executing it."
msgstr ""

# f622c111a3954653957f30b0acb67d6d
#: ../../releases/0.96.txt:77
msgid ""
"Examine the output of ``manage.py sqlall`` to see the new-style constraint "
"names, and use that as a guide to rename existing constraints in your "
"database."
msgstr ""

# b7e3590bfedb4016bdd2d221243ee0e7
#: ../../releases/0.96.txt:82
msgid "Name changes in ``manage.py``"
msgstr ""

# 0ce6ace6a9094f8dbed2227cd5d9e6db
#: ../../releases/0.96.txt:84
msgid ""
"A few of the options to ``manage.py`` have changed with the addition of "
"fixture support:"
msgstr ""

# db29b0c93f294d79acaa858851c828e9
#: ../../releases/0.96.txt:87
msgid ""
"There are new ``dumpdata`` and ``loaddata`` commands which, as you might "
"expect, will dump and load data to/from the database. These commands can "
"operate against any of Django's supported serialization formats."
msgstr ""

# d5d8d6c855ac472d91413a2fb5e664b9
#: ../../releases/0.96.txt:92
msgid ""
"The ``sqlinitialdata`` command has been renamed to ``sqlcustom`` to "
"emphasize that ``loaddata`` should be used for data (and ``sqlcustom`` for "
"other custom SQL -- views, stored procedures, etc.)."
msgstr ""

# c0e5e1e8fb3d4e03b2103305257156e4
#: ../../releases/0.96.txt:96
msgid "The vestigial ``install`` command has been removed. Use ``syncdb``."
msgstr ""

# 775fb152a9084d299de75a44b65e2de8
#: ../../releases/0.96.txt:99
msgid "Backslash escaping changed"
msgstr ""

# 7789e1b79f88455a85deb143ba30af6c
#: ../../releases/0.96.txt:101
msgid ""
"The Django database API now escapes backslashes given as query parameters. "
"If you have any database API code that matches backslashes, and it was "
"working before (despite the lack of escaping), you'll have to change your "
"code to \"unescape\" the slashes one level."
msgstr ""

# 77af8e83ee074ee3ba3e12c4963038e3
#: ../../releases/0.96.txt:106
msgid "For example, this used to work::"
msgstr ""

# f9ee38bf48d743ab948fbf7fb2bdccd6
#: ../../releases/0.96.txt:111
msgid "The above is now incorrect, and should be rewritten as::"
msgstr ""

# d42ff5877eb54b8588df106228d55893
#: ../../releases/0.96.txt:117
msgid "Removed ENABLE_PSYCO setting"
msgstr ""

# 8392fcaf08e44a38ae1fba6eb7aefec0
#: ../../releases/0.96.txt:119
msgid ""
"The ``ENABLE_PSYCO`` setting no longer exists. If your settings file "
"includes ``ENABLE_PSYCO`` it will have no effect; to use Psyco_, we "
"recommend writing a middleware class to activate it."
msgstr ""

# 4554383ae7b044158abe18b41bbaf646
#: ../../releases/0.96.txt:126
msgid "What's new in 0.96?"
msgstr ""

# dc069758e7c944e486efd396ffbb5083
#: ../../releases/0.96.txt:128
msgid ""
"This revision represents over a thousand source commits and over four "
"hundred bug fixes, so we can't possibly catalog all the changes. Here, we "
"describe the most notable changes in this release."
msgstr ""

# 3b33fc1c3861428d9b67d24b27af3d37
#: ../../releases/0.96.txt:133
msgid "New forms library"
msgstr ""

# 28518b87556f4e759f7aa455a4b992b2
#: ../../releases/0.96.txt:135
msgid ""
"``django.newforms`` is Django's new form-handling library. It's a "
"replacement for ``django.forms``, the old form/manipulator/validation "
"framework.  Both APIs are available in 0.96, but over the next two releases "
"we plan to switch completely to the new forms system, and deprecate and "
"remove the old system."
msgstr ""

# 48141fcb0610414bab72a34527491366
#: ../../releases/0.96.txt:141
msgid "There are three elements to this transition:"
msgstr ""

# 9fd0a09a1348463aa73ebe638a39c449
#: ../../releases/0.96.txt:143
msgid ""
"We've copied the current ``django.forms`` to ``django.oldforms``. This "
"allows you to upgrade your code *now* rather than waiting for the backwards-"
"incompatible change and rushing to fix your code after the fact.  Just "
"change your import statements like this::"
msgstr ""

# d534836de4044a8a96414ee1b9df1545
#: ../../releases/0.96.txt:152
msgid ""
"The next official release of Django will move the current ``django."
"newforms`` to ``django.forms``. This will be a backwards-incompatible "
"change, and anyone still using the old version of ``django.forms`` at that "
"time will need to change their import statements as described above."
msgstr ""

# ab550d2d02a842ffb4a13498df0d824b
#: ../../releases/0.96.txt:158
msgid "The next release after that will completely remove ``django.oldforms``."
msgstr ""

# 60ac3793abb14fe0983aa0137376cb4d
#: ../../releases/0.96.txt:161
msgid ""
"Although the ``newforms`` library will continue to evolve, it's ready for "
"use for most common cases. We recommend that anyone new to form handling "
"skip the old forms system and start with the new."
msgstr ""

# 46ce33aeecf544669035a0fa291f2e82
#: ../../releases/0.96.txt:165
msgid ""
"For more information about ``django.newforms``, read the :doc:`newforms "
"documentation </topics/forms/index>`."
msgstr ""

# 587c7319612d4fa0ac69d1a563d2df27
#: ../../releases/0.96.txt:169
msgid "URLconf improvements"
msgstr ""

# d93340d599c9447fb2da8edf73774e6c
#: ../../releases/0.96.txt:171
msgid ""
"You can now use any callable as the callback in URLconfs (previously, only "
"strings that referred to callables were allowed). This allows a much more "
"natural use of URLconfs. For example, this URLconf::"
msgstr ""

# ed01656d8867438a91b530c4414de822
#: ../../releases/0.96.txt:181
msgid "can now be rewritten as::"
msgstr ""

# 419ec8944bde4b98957a5788e0cb6f77
#: ../../releases/0.96.txt:190
msgid ""
"One useful application of this can be seen when using decorators; this "
"change allows you to apply decorators to views *in your URLconf*. Thus, you "
"can make a generic view require login very easily::"
msgstr ""

# ec36d03479eb4e44a471901ce8809f84
#: ../../releases/0.96.txt:208
msgid ""
"Note that both syntaxes (strings and callables) are valid, and will continue "
"to be valid for the foreseeable future."
msgstr ""

# e567b953b8134e45ac7795ee1cdd8312
#: ../../releases/0.96.txt:212
msgid "The test framework"
msgstr ""

# 74c094657d884ea59efeb900135c905d
#: ../../releases/0.96.txt:214
msgid ""
"Django now includes a test framework so you can start transmuting fear into "
"boredom (with apologies to Kent Beck). You can write tests based on :mod:"
"`doctest` or :mod:`unittest` and test your views with a simple test client."
msgstr ""

# d4c4b3f77f3b4b2bb563e0c63e0257a9
#: ../../releases/0.96.txt:218
msgid ""
"There is also new support for \"fixtures\" -- initial data, stored in any of "
"the supported :doc:`serialization formats </topics/serialization>`, that "
"will be loaded into your database at the start of your tests. This makes "
"testing with real data much easier."
msgstr ""

# 5633174b511247e4b281b93b80c22860
#: ../../releases/0.96.txt:223
msgid ""
"See :doc:`the testing documentation </topics/testing>` for the full details."
msgstr ""

# 8d2a4eb64ec24271a0cf62844f440417
#: ../../releases/0.96.txt:226
msgid "Improvements to the admin interface"
msgstr ""

# 47b1dbc56f054774b11b0caff9688cff
#: ../../releases/0.96.txt:228
msgid ""
"A small change, but a very nice one: dedicated views for adding and updating "
"users have been added to the admin interface, so you no longer need to worry "
"about working with hashed passwords in the admin."
msgstr ""

# 033815e318044c87ac7364955317f9af
#: ../../releases/0.96.txt:233
msgid "Thanks"
msgstr ""

# b5b560b7b5ae4628bf2f24640a242087
#: ../../releases/0.96.txt:235
msgid ""
"Since 0.95, a number of people have stepped forward and taken a major new "
"role in Django's development. We'd like to thank these people for all their "
"hard work:"
msgstr ""

# a871c74f51804cfaacce210c884ac380
#: ../../releases/0.96.txt:239
msgid ""
"Russell Keith-Magee and Malcolm Tredinnick for their major code "
"contributions. This release wouldn't have been possible without them."
msgstr ""

# e32a62bf6de34d08bd04086371066408
#: ../../releases/0.96.txt:242
msgid ""
"Our new release manager, James Bennett, for his work in getting out 0.95.1, "
"0.96, and (hopefully) future release."
msgstr ""

# 8a203d663f374b08991e3a54f59d0de3
#: ../../releases/0.96.txt:245
msgid ""
"Our ticket managers Chris Beaven (aka SmileyChris), Simon Greenhill, Michael "
"Radziej, and Gary Wilson. They agreed to take on the monumental task of "
"wrangling our tickets into nicely cataloged submission. Figuring out what to "
"work on is now about a million times easier; thanks again, guys."
msgstr ""

# 8a9cec2d4411488a80a565532bc7845c
#: ../../releases/0.96.txt:251
msgid ""
"Everyone who submitted a bug report, patch or ticket comment. We can't "
"possibly thank everyone by name -- over 200 developers submitted patches "
"that went into 0.96 -- but everyone who's contributed to Django is listed in "
"AUTHORS_."
msgstr ""

# be883357471d473c9372c5ac5e0bf03d
#: ../../releases/1.0.txt:3
msgid "Django 1.0 release notes"
msgstr ""

# ad33d094ebf34f5b880127792622e234
#: ../../releases/1.0.txt:5
msgid "Welcome to Django 1.0!"
msgstr ""

# 983bca832d744f18b0bb82bff0c55bca
#: ../../releases/1.0.txt:7
msgid ""
"We've been looking forward to this moment for over three years, and it's "
"finally here. Django 1.0 represents a the largest milestone in Django's "
"development to date: a Web framework that a group of perfectionists can "
"truly be proud of."
msgstr ""

# d8d3e88af6774024917d33f88613f904
#: ../../releases/1.0.txt:11
msgid ""
"Django 1.0 represents over three years of community development as an Open "
"Source project. Django's received contributions from hundreds of developers, "
"been translated into fifty languages, and today is used by developers on "
"every continent and in every kind of job."
msgstr ""

# c14ff79dda2743e8b0366c23b8730ce0
#: ../../releases/1.0.txt:16
msgid ""
"An interesting historical note: when Django was first released in July 2005, "
"the initial released version of Django came from an internal repository at "
"revision number 8825. Django 1.0 represents revision 8961 of our public "
"repository. It seems fitting that our 1.0 release comes at the moment where "
"community contributions overtake those made privately."
msgstr ""

# 8639c9ad64c04c3d8e328bd7ee0706ca
#: ../../releases/1.0.txt:23
msgid "Stability and forwards-compatibility"
msgstr ""

# 913f2d5018cf486a81e210f005b307ed
#: ../../releases/1.0.txt:25
msgid ""
":doc:`The release of Django 1.0 </releases/1.0>` comes with a promise of API "
"stability and forwards-compatibility. In a nutshell, this means that code "
"you develop against Django 1.0 will continue to work against 1.1 unchanged, "
"and you should need to make only minor changes for any 1.X release."
msgstr ""

# d9d16fe47e3c4965895df8afaf63811c
#: ../../releases/1.0.txt:30
msgid ""
"See the :doc:`API stability guide </misc/api-stability>` for full details."
msgstr ""

# d16233c2cb8843d6bc62e82362e3f1be
#: ../../releases/1.0.txt:35
msgid ""
"Django 1.0 has a number of backwards-incompatible changes from Django 0.96. "
"If you have apps written against Django 0.96 that you need to port, see our "
"detailed porting guide:"
msgstr ""

# 88b4d75204a64d9ebf58e8e292a47023
#: ../../releases/1.0.txt:44
msgid ""
"A complete list of backwards-incompatible changes can be found at http://"
"code.djangoproject.com/wiki/BackwardsIncompatibleChanges."
msgstr ""

# f9bf731d6af049178b96fcec007e1c95
#: ../../releases/1.0.txt:48
msgid "What's new in Django 1.0"
msgstr ""

# 40ac0f519821459e97448bb20ae6210c
#: ../../releases/1.0.txt:50
msgid "A *lot*!"
msgstr ""

# 6f906543b2ba497c9388a683c0a759ad
#: ../../releases/1.0.txt:52
msgid ""
"Since Django 0.96, we've made over 4,000 code commits, fixed more than 2,000 "
"bugs, and edited, added, or removed around 350,000 lines of code. We've also "
"added 40,000 lines of new documentation, and greatly improved what was "
"already there."
msgstr ""

# 741ce66f86d44772bf64dfdda9ba227f
#: ../../releases/1.0.txt:57
msgid ""
"In fact, new documentation is one of our favorite features of Django 1.0, so "
"we might as well start there. First, there's a new documentation site:"
msgstr ""

# 5c51f05265804ceeb4fee80cc9d2e1e5
#: ../../releases/1.0.txt:60
msgid "http://docs.djangoproject.com/"
msgstr ""

# 8d78acf9c8ed41d1bbac135759d63d8b
#: ../../releases/1.0.txt:62
msgid ""
"The documentation has been greatly improved, cleaned up, and generally made "
"awesome. There's now dedicated search, indexes, and more."
msgstr ""

# 298c78c70f20491a89793fd0b8a26327
#: ../../releases/1.0.txt:65
msgid ""
"We can't possibly document everything that's new in 1.0, but the "
"documentation will be your definitive guide. Anywhere you see something like:"
msgstr ""

# f11b3f35a6b7430b9f000e581168c6bf
#: ../../releases/1.0.txt:71
msgid "You'll know that you're looking at something new or changed."
msgstr ""

# bffa3c2ee73f4ff892a32cc1515ee87c
#: ../../releases/1.0.txt:73
msgid "The other major highlights of Django 1.0 are:"
msgstr ""

# 026accb422c140f98dfbbf86db8d9743
#: ../../releases/1.0.txt:76
msgid "Re-factored admin application"
msgstr ""

# cdcfa0e8b41c41dd90694a51bdbf18ad
# 6d9a9bb814b8442c8ef28e2075f960cd
#: ../../releases/1.0.txt:78 ../../releases/1.0-alpha-1.txt:25
msgid ""
"The Django administrative interface (``django.contrib.admin``) has been "
"completely refactored; admin definitions are now completely decoupled from "
"model definitions (no more ``class Admin`` declaration in models!), "
"rewritten to use Django's new form-handling library (introduced in the 0.96 "
"release as ``django.newforms``, and now available as simply ``django."
"forms``) and redesigned with extensibility and customization in mind. Full "
"documentation for the admin application is available online in the official "
"Django documentation:"
msgstr ""

# a79e1e4be38e464e852156d470092c68
#: ../../releases/1.0.txt:86
msgid "See the :doc:`admin reference </ref/contrib/admin/index>` for details"
msgstr ""

# 488fc967505841e1bacb1513a493a94c
#: ../../releases/1.0.txt:89
msgid "Improved Unicode handling"
msgstr ""

# b24f594f0e1445b6940ada16960b89b1
#: ../../releases/1.0.txt:91
msgid ""
"Django's internals have been refactored to use Unicode throughout; this "
"drastically simplifies the task of dealing with non-Western-European content "
"and data in Django. Additionally, utility functions have been provided to "
"ease interoperability with third-party libraries and systems which may or "
"may not handle Unicode gracefully. Details are available in Django's Unicode-"
"handling documentation."
msgstr ""

# a54a96861afb4ed0993542e740352167
#: ../../releases/1.0.txt:98
msgid "See :doc:`/ref/unicode`."
msgstr ""

# 969b41cd5463438c86595138db49fa44
#: ../../releases/1.0.txt:101
msgid "An improved ORM"
msgstr ""

# 29b8f877128c47348139a155beb0a764
#: ../../releases/1.0.txt:103
msgid ""
"Django's object-relational mapper -- the component which provides the "
"mapping between Django model classes and your database, and which mediates "
"your database queries -- has been dramatically improved by a massive "
"refactoring. For most users of Django this is backwards-compatible; the "
"public-facing API for database querying underwent a few minor changes, but "
"most of the updates took place in the ORM's internals. A guide to the "
"changes, including backwards-incompatible modifications and mentions of new "
"features opened up by this refactoring, is `available on the Django wiki`__."
msgstr ""

# 5fdfe6cce9e947debb8b24fd3c31ddc5
#: ../../releases/1.0.txt:115
msgid "Automatic escaping of template variables"
msgstr ""

# 5764e0eff4014bde96f7473441d6d89e
# 5e0cdfe27b7f470f9c14df024f851265
#: ../../releases/1.0.txt:117 ../../releases/1.0-alpha-1.txt:63
msgid ""
"To provide improved security against cross-site scripting (XSS) "
"vulnerabilities, Django's template system now automatically escapes the "
"output of variables. This behavior is configurable, and allows both "
"variables and larger template constructs to be marked as safe (requiring no "
"escaping) or unsafe (requiring escaping). A full guide to this feature is in "
"the documentation for the :ttag:`autoescape` tag."
msgstr ""

# 2b690c1c816d4faa8f0da9969df1bb8a
#: ../../releases/1.0.txt:125
msgid "``django.contrib.gis`` (GeoDjango)"
msgstr ""

# 1e6dd84e826d4d74bf8aa3354d1cff1e
#: ../../releases/1.0.txt:127
msgid ""
"A project over a year in the making, this adds world-class GIS (`Geographic "
"Information Systems`_) support to Django, in the form of a ``contrib`` "
"application. Its documentation is currently being maintained externally, and "
"will be merged into the main Django documentation shortly. Huge thanks go to "
"Justin Bronn, Jeremy Dunck, Brett Hoerner and Travis Pinney for their "
"efforts in creating and completing this feature."
msgstr ""

# 302cfcdd10ef40eeb5615c477dae8b25
#: ../../releases/1.0.txt:134
msgid "See http://geodjango.org/ for details."
msgstr ""

# 4e845cce8b7844378a0295e6ad384a02
#: ../../releases/1.0.txt:139
msgid "Pluggable file storage"
msgstr ""

# e661142a80df48ca8fb52298596267c7
# 605810ff85034f9db94ba4b7525a62aa
#: ../../releases/1.0.txt:141 ../../releases/1.0-alpha-2.txt:36
msgid ""
"Django's built-in ``FileField`` and ``ImageField`` now can take advantage of "
"pluggable file-storage backends, allowing extensive customization of where "
"and how uploaded files get stored by Django. For details, see :doc:`the "
"files documentation </topics/files>`; big thanks go to Marty Alchin for "
"putting in the hard work to get this completed."
msgstr ""

# e655c43f28ff490cb50460b58745ae01
#: ../../releases/1.0.txt:148
msgid "Jython compatibility"
msgstr ""

# 4da15e5281a842f7a2e6e66e3709cd51
# c85f64e9929643cb8ee61c63932b3adf
#: ../../releases/1.0.txt:150 ../../releases/1.0-alpha-2.txt:43
msgid ""
"Thanks to a lot of work from Leo Soto during a Google Summer of Code "
"project, Django's codebase has been refactored to remove incompatibilities "
"with `Jython`_, an implementation of Python written in Java, which runs "
"Python code on the Java Virtual Machine. Django is now compatible with the "
"forthcoming Jython 2.5 release."
msgstr ""

# e5f268e66d894efbafd38e593bfe35ec
#: ../../releases/1.0.txt:156
msgid "See :doc:`/howto/jython`."
msgstr ""

# 7511759951394812940d41570f229227
#: ../../releases/1.0.txt:161
msgid "Generic relations in forms and admin"
msgstr ""

# 4533c470d8ec48c08d264cee40bf4477
# 677f10acc25b42ea901fdac3e28adc5c
#: ../../releases/1.0.txt:163 ../../releases/1.0-beta.txt:29
msgid ""
"Classes are now included in ``django.contrib.contenttypes`` which can be "
"used to support generic relations in both the admin interface and in end-"
"user forms. See :ref:`the documentation for generic relations <generic-"
"relations>` for details."
msgstr ""

# e3f9601d4f4542768600b28989289033
#: ../../releases/1.0.txt:168
msgid "``INSERT``/``UPDATE`` distinction"
msgstr ""

# 0126d6236c98408e801c16383bc52b61
#: ../../releases/1.0.txt:170
msgid ""
"Although Django's default behavior of having a model's ``save()`` method "
"automatically determine whether to perform an ``INSERT`` or an ``UPDATE`` at "
"the SQL level is suitable for the majority of cases, there are occasional "
"situations where forcing one or the other is useful. As a result, models can "
"now support an additional parameter to ``save()`` which can force a specific "
"operation."
msgstr ""

# 78c530ab8b144ebda015d01936fe5347
#: ../../releases/1.0.txt:176
msgid "See :ref:`ref-models-force-insert` for details."
msgstr ""

# f192c24ffc114f2ea6d52fb3730d216d
#: ../../releases/1.0.txt:179
msgid "Split ``CacheMiddleware``"
msgstr ""

# 164560b9e95e4e3e92826232ca7abaa8
#: ../../releases/1.0.txt:181
msgid ""
"Django's ``CacheMiddleware`` has been split into three classes: "
"``CacheMiddleware`` itself still exists and retains all of its previous "
"functionality, but it is now built from two separate middleware classes "
"which handle the two parts of caching (inserting into and reading from the "
"cache) separately, offering additional flexibility for situations where "
"combining these functions into a single middleware posed problems."
msgstr ""

# d8c11d3c2e01476bb982ee1011e3fe6e
#: ../../releases/1.0.txt:188
msgid ""
"Full details, including updated notes on appropriate use, are in :doc:`the "
"caching documentation </topics/cache>`."
msgstr ""

# f3310cb4f73c49c2a2595c5eea81ad21
#: ../../releases/1.0.txt:192
msgid "Refactored ``django.contrib.comments``"
msgstr ""

# c0ab5dcbab534259818a5c723f900576
#: ../../releases/1.0.txt:194
msgid ""
"As part of a Google Summer of Code project, Thejaswi Puthraya carried out a "
"major rewrite and refactoring of Django's bundled comment system, greatly "
"increasing its flexibility and customizability. :doc:`Full documentation </"
"ref/contrib/comments/index>` is available, as well as :doc:`an upgrade guide "
"</ref/contrib/comments/upgrade>` if you were using the previous incarnation "
"of the comments application."
msgstr ""

# 8b05822c70d841058e6d27c33b866935
#: ../../releases/1.0.txt:202
msgid "Removal of deprecated features"
msgstr ""

# b0e65dc5c4c14b29a0fb951db8b9e9ef
#: ../../releases/1.0.txt:204
msgid ""
"A number of features and methods which had previously been marked as "
"deprecated, and which were scheduled for removal prior to the 1.0 release, "
"are no longer present in Django. These include imports of the form library "
"from ``django.newforms`` (now located simply at ``django.forms``), the "
"``form_for_model`` and ``form_for_instance`` helper functions (which have "
"been replaced by ``ModelForm``) and a number of deprecated features which "
"were replaced by the dispatcher, file-uploading and file-storage "
"refactorings introduced in the Django 1.0 alpha releases."
msgstr ""

# 0dda444871884defb87588a5de7fd4c3
#: ../../releases/1.0.txt:214
msgid "Known issues"
msgstr ""

# b645fe77a70845bfbd139410cbcabd3e
#: ../../releases/1.0.txt:216
msgid ""
"We've done our best to make Django 1.0 as solid as possible, but "
"unfortunately there are a couple of issues that we know about in the release."
msgstr ""

# 6eb514afe1914433837e8ce704da7f60
#: ../../releases/1.0.txt:220
msgid "Multi-table model inheritance with ``to_field``"
msgstr ""

# a738634e5a394307955fa94a96555042
#: ../../releases/1.0.txt:222
msgid ""
"If you're using :ref:`multiple table model inheritance <multi-table-"
"inheritance>`, be aware of this caveat: child models using a custom "
"``parent_link`` and ``to_field`` will cause database integrity errors. A set "
"of models like the following are **not valid**::"
msgstr ""

# fdcf5e55d1fd4d6dbe00c8b31b708048
#: ../../releases/1.0.txt:235
msgid "This bug will be fixed in the next release of Django."
msgstr ""

# f9a1337476864cdf944433157fa2bcf0
#: ../../releases/1.0.txt:238
msgid "Caveats with support of certain databases"
msgstr ""

# 594a63bc69704ac3af860b41ff5573e9
#: ../../releases/1.0.txt:240
msgid ""
"Django attempts to support as many features as possible on all database "
"backends. However, not all database backends are alike, and in particular "
"many of the supported database differ greatly from version to version. It's "
"a good idea to checkout our :doc:`notes on supported database </ref/"
"databases>`:"
msgstr ""

# c4a2cc17c5894e1c87a3e998b83884db
#: ../../releases/1.0.txt:243
msgid ":ref:`mysql-notes`"
msgstr ""

# 9a384cd070bb4ea699bcda67459bba81
#: ../../releases/1.0.txt:244
msgid ":ref:`sqlite-notes`"
msgstr ""

# 710a4baa38584aa4bbf43f9f198b8e18
#: ../../releases/1.0.txt:245
msgid ":ref:`oracle-notes`"
msgstr ""

# 7585cdd3e0334686965dc6abb2fb6766
#: ../../releases/1.0-alpha-1.txt:3
msgid "Django 1.0 alpha release notes"
msgstr ""

# 295a0cb9ed9847c681a67666e4668acd
#: ../../releases/1.0-alpha-1.txt:5
msgid "Welcome to Django 1.0 alpha!"
msgstr ""

# 855857cd78164406b31b06d054d825c4
#: ../../releases/1.0-alpha-1.txt:7
msgid ""
"This is the first in a series of preview/development releases leading up to "
"the eventual release of Django 1.0, currently scheduled to take place in "
"early September 2008. This release is primarily targeted at developers who "
"are interested in testing the Django codebase and helping to identify and "
"resolve bugs prior to the final 1.0 release."
msgstr ""

# 799fd9850c904a708a37b710f987d224
# bb1fa8c2729544a7bbe605416efb3ef2
#: ../../releases/1.0-alpha-1.txt:13 ../../releases/1.0-alpha-2.txt:13
msgid ""
"As such, this release is *not* intended for production use, and any such use "
"is strongly discouraged."
msgstr ""

# a33af4a877764ceeb638ea68a9b89e0e
#: ../../releases/1.0-alpha-1.txt:18
msgid "What's new in Django 1.0 alpha"
msgstr ""

# d7214a6ba2bb460392dd0c755171293d
#: ../../releases/1.0-alpha-1.txt:20
msgid ""
"Django's development trunk has been the site of nearly constant activity "
"over the past year, with several major new features landing since the 0.96 "
"release. Some of the highlights include:"
msgstr ""

# 6762fffc7c5c4bc1a611b526941d2e70
#: ../../releases/1.0-alpha-1.txt:35
msgid ":doc:`admin reference </ref/contrib/admin/index>`"
msgstr ""

# 45e1f4d8c2584aac93a1ef60b163e4c4
#: ../../releases/1.0-alpha-1.txt:38
msgid ""
"Django's internals have been refactored to use Unicode throughout; this "
"drastically simplifies the task of dealing with non-Western-European content "
"and data in Django. Additionally, utility functions have been provided to "
"ease interoperability with third-party libraries and systems which may or "
"may not handle Unicode gracefully. Details are available in Django's Unicode-"
"handling documentation:"
msgstr ""

# b2d1d57f390646ffb91a6f28f2b69bea
#: ../../releases/1.0-alpha-1.txt:46
msgid ":doc:`unicode reference </ref/unicode>`"
msgstr ""

# 31a564a7ae744e9da9711da32cbeee2e
#: ../../releases/1.0-alpha-1.txt:49
msgid ""
"Django's object-relational mapper -- the component which provides the "
"mapping between Django model classes and your database, and which mediates "
"your database queries -- has been dramatically improved by a massive "
"refactoring. For most users of Django this is backwards-compatible; the "
"public-facing API for database querying underwent a few minor changes, but "
"most of the updates took place in the ORM's internals. A guide to the "
"changes, including backwards-incompatible modifications and mentions of new "
"features opened up by this refactoring, is available on the Django wiki:"
msgstr ""

# 72d696fc50ea46469bbec7802ac50d93
#: ../../releases/1.0-alpha-1.txt:60
msgid "http://code.djangoproject.com/wiki/QuerysetRefactorBranch"
msgstr ""

# e6ec8e0224d045dfa3dccb79ff8effa5
#: ../../releases/1.0-alpha-1.txt:71
msgid ""
"There are many more new features, many bugfixes and many enhancements to "
"existing features from previous releases. The ``newforms`` library, for "
"example, has undergone massive improvements including several useful add-ons "
"in ``django.contrib`` which complement and build on Django's form-handling "
"capabilities, and Django's file-uploading handlers have been refactored to "
"allow finer-grained control over the uploading process as well as streaming "
"uploads of large files."
msgstr ""

# bced0373e68747a6a8af9cc02130441a
#: ../../releases/1.0-alpha-1.txt:79
msgid ""
"Along with these improvements and additions, we've made a number of of "
"backwards-incompatible changes to the framework, as features have been "
"fleshed out and APIs have been finalized for the 1.0 release. A complete "
"guide to these changes will be available as part of the final Django 1.0 "
"release, and a comprehensive list of backwards-incompatible changes is also "
"available on the Django wiki for those who want to begin developing and "
"testing their upgrade process:"
msgstr ""

# d0fc507e864c4341a2ed3b2c324dd97c
#: ../../releases/1.0-alpha-1.txt:87
msgid "http://code.djangoproject.com/wiki/BackwardsIncompatibleChanges"
msgstr ""

# d4897d74fbd34da8902beea6383e2a28
# 8b03d729dc1f445480e1e28784ddc08d
# bb8527e025ca46ab8497121f6971c393
# 2e7f9ebb724f4d8994d501f4c37a55d6
#: ../../releases/1.0-alpha-1.txt:91 ../../releases/1.0-alpha-2.txt:64
#: ../../releases/1.0-beta.txt:86 ../../releases/1.0-beta-2.txt:65
msgid "The Django 1.0 roadmap"
msgstr ""

# 46a63eb9b6144915ae5805a8b4383975
#: ../../releases/1.0-alpha-1.txt:93
msgid ""
"One of the primary goals of this alpha release is to focus attention on the "
"remaining features to be implemented for Django 1.0, and on the bugs that "
"need to be resolved before the final release. Following this release, we'll "
"be conducting a series of sprints building up to a series of beta releases "
"and a release-candidate stage, followed soon after by Django 1.0. The "
"timeline is projected to be:"
msgstr ""

# ee4e4d2de52d4688901ca80a3655fac4
#: ../../releases/1.0-alpha-1.txt:100
msgid "August 1, 2008: Sprint (based in Washington, DC, and online)."
msgstr ""

# 01f29fd067ca4a56bf01f5d39a960372
#: ../../releases/1.0-alpha-1.txt:102
msgid ""
"August 5, 2008: Django 1.0 beta 1 release. This will also constitute the "
"feature freeze for 1.0. Any feature to be included in 1.0 must be completed "
"and in trunk by this time."
msgstr ""

# 3b9ff56680c44cf9b286f320651a5561
#: ../../releases/1.0-alpha-1.txt:106
msgid "August 8, 2008: Sprint (based in Lawrence, KS, and online)."
msgstr ""

# eb17b69110184e5d9915082f893693d9
#: ../../releases/1.0-alpha-1.txt:108
msgid "August 12, 2008: Django 1.0 beta 2 release."
msgstr ""

# 61aa42bfa3864bb3a365a490ba4d51b9
#: ../../releases/1.0-alpha-1.txt:110
msgid "August 15, 2008: Sprint (based in Austin, TX, and online)."
msgstr ""

# b8a2a0f5a4cc4288ad7a28460e9ee3f6
#: ../../releases/1.0-alpha-1.txt:112
msgid "August 19, 2008: Django 1.0 release candidate 1."
msgstr ""

# 303a4c9bf325450089240c1827f1e007
#: ../../releases/1.0-alpha-1.txt:114
msgid "August 22, 2008: Sprint (based in Portland, OR, and online)."
msgstr ""

# 818c77d7b5ce477281d9bc553ee2e45f
#: ../../releases/1.0-alpha-1.txt:116
msgid "August 26, 2008: Django 1.0 release candidate 2."
msgstr ""

# ef5e31e9d2e84d8da90d60f9cd24b644
#: ../../releases/1.0-alpha-1.txt:118
msgid ""
"September 2, 2008: Django 1.0 final release. The official Django 1.0 release "
"party will take place during the first-ever DjangoCon, to be held in "
"Mountain View, CA, September 6-7."
msgstr ""

# 34d682ca3a0c4eacba60ff69a07643fb
# 13e2228a34504d9584bec4fad7ac4016
# 3b48b90bcc2e4421af26b9b2e52ae04d
#: ../../releases/1.0-alpha-1.txt:122 ../../releases/1.0-alpha-2.txt:97
#: ../../releases/1.0-beta.txt:114
msgid ""
"Of course, like any estimated timeline, this is subject to change as "
"requirements dictate. The latest information will always be available on the "
"Django project wiki:"
msgstr ""

# 49fa23bf3d1c4eeabb2f144fd56d83ac
# bd55f05c41134c3aaac2419ae6868276
# b215624873554ed2b6442383403a7ab6
#: ../../releases/1.0-alpha-1.txt:126 ../../releases/1.0-alpha-2.txt:101
#: ../../releases/1.0-beta.txt:118
msgid "http://code.djangoproject.com/wiki/VersionOneRoadmap"
msgstr ""

# 9e219e01b19840c09e7790859ecb5377
# cd9f90afaed54543807759d66337f958
# b658acf3bc464b058f0d40e1ea21c2a4
# d6a33dcd656a48869493e7c3570984eb
# 722f9a460451429290a1730cf8173691
# db152c0b6bb04f29ba1680c2c3e76553
# 15b1bcc6d3d8462a838811c430d6924d
# 283d2f656440492a8d80660aede7b75b
# 5a289c56b3214bff9e00d647564df15e
# 9b9df2b7e6b047a0a2e5652c7812ebbc
# f635c1147cfb4178a6a1645bdf8e2768
# 20cab9bf572140c9b0a198242a97e6c0
# 838458bca5f84dfd9bf39eddf87e11e5
# da50317b77644764ac574d65cf9715ed
#: ../../releases/1.0-alpha-1.txt:130 ../../releases/1.0-alpha-2.txt:105
#: ../../releases/1.0-beta.txt:122 ../../releases/1.0-beta-2.txt:88
#: ../../releases/1.1-alpha-1.txt:129 ../../releases/1.1-beta-1.txt:174
#: ../../releases/1.1-rc-1.txt:78 ../../releases/1.2-alpha-1.txt:554
#: ../../releases/1.2-beta-1.txt:137 ../../releases/1.2-rc-1.txt:70
#: ../../releases/1.3-alpha-1.txt:368 ../../releases/1.3-beta-1.txt:204
#: ../../releases/1.4-alpha-1.txt:1090 ../../releases/1.4-beta-1.txt:1162
msgid "What you can do to help"
msgstr ""

# 9364e73a202741e199e548186acfb2f4
# 3ccb2a8820f84371aee577419e156bd1
#: ../../releases/1.0-alpha-1.txt:132 ../../releases/1.0-alpha-2.txt:107
msgid ""
"In order to provide a high-quality 1.0 release, we need your help. Although "
"this alpha release is, again, *not* intended for production use, you can "
"help the Django team by trying out the alpha codebase in a safe test "
"environment and reporting any bugs or issues you encounter. The Django "
"ticket tracker is the central place to search for open issues:"
msgstr ""

# ed530d4f7d914278a5166fd9a78cd9eb
# 1afbbe989cf441eb981b3c5bf969a76a
# 65a5ad8bd6494fd3b8565791eab4b721
# 45264e30ff7b44afac4bc9660f7ddd16
# b10072c015ec42278d174d4910dbfa58
# 0a39a0aabcdb4de885128840dd354b55
# e5b26747ff614c34b52cc1b77b872015
# 89c112edf42a4555a1ac775f3af6cd63
# 2da781bcc99a48a199920d7bfd383785
# 83560229b7e0457a82558002b8f1b004
# 9cfd70f0f0c949f3a998eb6a1352b601
# 7deb384f6f62445d820f95fa6ea27fa4
# 416b3db5c57441d69cea8d0a8a2ee0bc
# a58b2d552a3f469eb9bc0697af760112
#: ../../releases/1.0-alpha-1.txt:139 ../../releases/1.0-alpha-2.txt:114
#: ../../releases/1.0-beta.txt:131 ../../releases/1.0-beta-2.txt:97
#: ../../releases/1.1-alpha-1.txt:137 ../../releases/1.1-beta-1.txt:182
#: ../../releases/1.1-rc-1.txt:87 ../../releases/1.2-alpha-1.txt:562
#: ../../releases/1.2-beta-1.txt:146 ../../releases/1.2-rc-1.txt:79
#: ../../releases/1.3-alpha-1.txt:376 ../../releases/1.3-beta-1.txt:212
#: ../../releases/1.4-alpha-1.txt:1098 ../../releases/1.4-beta-1.txt:1170
msgid "http://code.djangoproject.com/timeline"
msgstr ""

# 0cd40116bd2145debb8ec5dffa03c538
# c879fbb1caf3436f87b17c397a3fbdf2
# 1dd4c58f30a34cb8aa0ae360b3bbc2c2
# e47ec06998214708ac4f21890ce78ccc
# a06020b3e48246539248d55255278f36
# 5a7a678967da47c793346450446d8260
# 96aa5245f07149fba5ad1445a297d6e8
# 84899d4dc70a4037b3e78a27babe0ad0
# d646df971f7a4912b17cf6de706694b7
# f1a0b271b4c940a49e099146cb019961
# 68aecbed8b7e46d0a7175eebb2a0490c
# ff18a50ac3f14299b425e890d7149ef0
#: ../../releases/1.0-alpha-1.txt:141 ../../releases/1.0-alpha-2.txt:116
#: ../../releases/1.0-beta.txt:133 ../../releases/1.0-beta-2.txt:99
#: ../../releases/1.1-alpha-1.txt:139 ../../releases/1.1-beta-1.txt:184
#: ../../releases/1.2-alpha-1.txt:564 ../../releases/1.2-beta-1.txt:148
#: ../../releases/1.3-alpha-1.txt:378 ../../releases/1.3-beta-1.txt:214
#: ../../releases/1.4-alpha-1.txt:1100 ../../releases/1.4-beta-1.txt:1172
msgid ""
"Please open new tickets if no existing ticket corresponds to a problem "
"you're running into."
msgstr ""

# 1e9efdb7684743439831926c692df6bc
# c98017b13aaa4062b9979adaaeb6f989
# c5199b4976c647dca37cbe7bf427a420
# 30a40489f8554e0f9fc0050730eb20bb
#: ../../releases/1.0-alpha-1.txt:144 ../../releases/1.0-alpha-2.txt:119
#: ../../releases/1.0-beta.txt:136 ../../releases/1.0-beta-2.txt:102
msgid ""
"Additionally, discussion of Django development, including progress toward "
"the 1.0 release, takes place daily on the django-developers mailing list:"
msgstr ""

# 485b77dd6be74bbe887dd8b882cb925e
# bb483abbfc954470a151abb7f98fa41e
# b2e3e9621f814bfca26848d2809535e8
# 620f25bae21045818da6317fd7e99e35
# 953c953007c94f2fb3ab97fdc815729a
# f9117aef5b3243c3bc9e8fdf9443a943
# 36fb5c4b60bf42cb8dca154ac0860cb3
# 7e7a6b47ddab46ed84c3897a755ff228
# db1e43a0972c4c1498935791d5f69d65
# d399f50a5c5b45969c4ee9ec2fa94c35
# 460ee41df9c143a89f5554cdd530883d
# 44d9c25b408a4480a0585c56a54c73ef
# 195be6e976674bada643b3067cbe9ee2
# 7f56bccf4ef64fa0890cbebb48ddebd3
# 34049a599de747978c019ac36ac07a12
#: ../../releases/1.0-alpha-1.txt:148 ../../releases/1.0-alpha-2.txt:123
#: ../../releases/1.0-beta.txt:140 ../../releases/1.0-beta-2.txt:106
#: ../../releases/1.1.txt:449 ../../releases/1.1-alpha-1.txt:145
#: ../../releases/1.1-beta-1.txt:190 ../../releases/1.1-rc-1.txt:96
#: ../../releases/1.2-alpha-1.txt:570 ../../releases/1.2-beta-1.txt:155
#: ../../releases/1.2-rc-1.txt:88 ../../releases/1.3-alpha-1.txt:384
#: ../../releases/1.3-beta-1.txt:220 ../../releases/1.4-alpha-1.txt:1106
#: ../../releases/1.4-beta-1.txt:1178
msgid "http://groups.google.com/group/django-developers"
msgstr ""

# 95e1107469784a63a2fd09e3e6d9a6bb
# a1b9efbfd82342a390786f17ce906690
# fafaeca09cc342bab11afcf3aad310d8
# 51ac97e55d104fa3b3787b7514382f32
#: ../../releases/1.0-alpha-1.txt:150 ../../releases/1.0-alpha-2.txt:125
#: ../../releases/1.0-beta.txt:142 ../../releases/1.0-beta-2.txt:108
msgid ""
"...and in the ``#django-dev`` IRC channel on ``irc.freenode.net``. If you're "
"interested in helping out with Django's development, feel free to join the "
"discussions there."
msgstr ""

# 5fb658a55678470ba6868795317b889a
# af609d3709f74f68b4a6174db6621960
# dd93fc9a5c6a4820ab17f1058c21ffe3
# 557ad5b07d3b45018866995d8cb5469f
# 504a9fb59520466cbd88621eeb47fd43
# 245729c06397406c8dc143ec52bba1a4
# 73b7ff3de0554dddb79540c38f2565ce
# 60a3d5e64a2f4f3188cb44924b580dd2
# 458fd6eecd6147fbaccd42814c242d03
# 96ba4c3a19ec4ef68d5937e4706b528d
# b0ac7ed164644b1086c1b026b0a23064
# ada94e6e7acf4ef997d359a30c05a58a
# e7b0a93f18c94fa3a5c87ef7d47d06be
# 616dd301481b4093afe79c5c93cd621f
# 138269bed4eb4f4d8dd97c2d1f43b1ea
#: ../../releases/1.0-alpha-1.txt:154 ../../releases/1.0-alpha-2.txt:129
#: ../../releases/1.0-beta.txt:146 ../../releases/1.0-beta-2.txt:112
#: ../../releases/1.1.txt:454 ../../releases/1.1-alpha-1.txt:151
#: ../../releases/1.1-beta-1.txt:196 ../../releases/1.1-rc-1.txt:102
#: ../../releases/1.2-alpha-1.txt:576 ../../releases/1.2-beta-1.txt:161
#: ../../releases/1.2-rc-1.txt:94 ../../releases/1.3-alpha-1.txt:390
#: ../../releases/1.3-beta-1.txt:226 ../../releases/1.4-alpha-1.txt:1112
#: ../../releases/1.4-beta-1.txt:1184
msgid ""
"Django's online documentation also includes pointers on how to contribute to "
"Django:"
msgstr ""

# 1bc7eebc64f84004aa1e63341be6df5b
# 575af332943f4c24a897ad53317dabd7
# 626a5612c33a4c24bb3cd211f21fd242
# e3a399c0945042209c5de89bca5bebd4
#: ../../releases/1.0-alpha-1.txt:157 ../../releases/1.0-alpha-2.txt:132
#: ../../releases/1.0-beta.txt:149 ../../releases/1.0-beta-2.txt:115
msgid ":doc:`contributing to Django </internals/contributing/index>`"
msgstr ""

# 38a1f00f97e3488db20a7344468b6553
# a63fc555a4904913be869904a8fc313a
# c7c81a293c8543a3bc87cd227f3d6333
# 1d3cf27c044d44a19bc07104a4ecf8b4
# faa6d43f9c2945bc8675eab28de153aa
# ba1f9137a3694574a5ad7bb799c06aff
# 8038d11548cf435a8290996eed87b9a4
# 5019e149b46641a6bb7c9d9f13e2c8b1
# 222b2d575a964e53a613c64dcbbcc047
# b7a4de7df79943d4935a590b0d3a41eb
# 73d0cab435484e6d99202fd4137b49ea
# 59874b4497b0496cb1db3987c24a5893
# 143e25a7f8a24f82947a237cfa130bf9
# 6fa12909f47a445bba28a4730b044bce
# fab7dbc1c7974f1988094642e9d21912
#: ../../releases/1.0-alpha-1.txt:159 ../../releases/1.0-alpha-2.txt:134
#: ../../releases/1.0-beta.txt:151 ../../releases/1.0-beta-2.txt:117
#: ../../releases/1.1.txt:459 ../../releases/1.1-alpha-1.txt:156
#: ../../releases/1.1-beta-1.txt:201 ../../releases/1.1-rc-1.txt:107
#: ../../releases/1.2-alpha-1.txt:581 ../../releases/1.2-beta-1.txt:166
#: ../../releases/1.2-rc-1.txt:99 ../../releases/1.3-alpha-1.txt:395
#: ../../releases/1.3-beta-1.txt:231 ../../releases/1.4-alpha-1.txt:1117
#: ../../releases/1.4-beta-1.txt:1189
msgid ""
"Contributions on any level -- developing code, writing documentation or "
"simply triaging tickets and helping to test proposed bugfixes -- are always "
"welcome and appreciated."
msgstr ""

# edc572ddd2884687bce4c9dddb951b13
#: ../../releases/1.0-alpha-2.txt:3
msgid "Django 1.0 alpha 2 release notes"
msgstr ""

# 3bd268b1b8d9489a9535898033f206e4
#: ../../releases/1.0-alpha-2.txt:5
msgid "Welcome to Django 1.0 alpha 2!"
msgstr ""

# 8f5d164f38a64e5a97de801d592e3f39
#: ../../releases/1.0-alpha-2.txt:7
msgid ""
"This is the second in a series of preview/development releases leading up to "
"the eventual release of Django 1.0, currently scheduled to take place in "
"early September 2008. This releases is primarily targeted at developers who "
"are interested in testing the Django codebase and helping to identify and "
"resolve bugs prior to the final 1.0 release."
msgstr ""

# 582dd06db3264fe7aee02d9e344e2c11
#: ../../releases/1.0-alpha-2.txt:18
msgid "What's new in Django 1.0 alpha 2"
msgstr ""

# 4b253884e838425ea50bb9b37bf31326
#: ../../releases/1.0-alpha-2.txt:20
msgid ""
"Django's development trunk has been the site of nearly constant activity "
"over the past year, with several major new features landing since the 0.96 "
"release. For features which were new as of Django 1.0 alpha 1, see :doc:`the "
"1.0 alpha 1 release notes </releases/1.0-alpha-1>`. Since the 1.0 alpha 1 "
"release several new features have landed, including:"
msgstr ""

# 0d9d132a4e9b403e9ba4cce56de6c87d
#: ../../releases/1.0-alpha-2.txt:27
msgid ""
"A project over a year in the making, this adds world-class GIS (`Geographic "
"Information Systems`_) support to Django, in the form of a ``contrib`` "
"application.  `Its documentation`_ is currently being maintained externally, "
"and will be merged into the main Django documentation prior to the final 1.0 "
"release. Huge thanks go to Justin Bronn, Jeremy Dunck, Brett Hoerner and "
"Travis Pinney for their efforts in creating and completing this feature."
msgstr ""

# d6df51e1537a4f1a9a588801a923a9f4
#: ../../releases/1.0-alpha-2.txt:50
msgid ""
"There are many other new features and improvements in this release, "
"including two major performance boosts: strings marked for translation "
"using :doc:`Django's internationalization system </topics/i18n/index>` now "
"consume far less memory, and Django's internal dispatcher -- which is "
"invoked frequently during request/response processing and when working with "
"Django's object-relational mapper -- is now significantly faster."
msgstr ""

# ae595e912c384c7b9c149bc54ace5f9d
#: ../../releases/1.0-alpha-2.txt:66
msgid ""
"One of the primary goals of this alpha release is to focus attention on the "
"remaining features to be implemented for Django 1.0, and on the bugs that "
"need to be resolved before the final release. Following this release, we'll "
"be conducting a series of development sprints building up to the beta and "
"release-candidate stages, followed soon after by Django 1.0. The timeline is "
"projected to be:"
msgstr ""

# b9ecf8b1df9748c396fc903f07619131
#: ../../releases/1.0-alpha-2.txt:73
msgid ""
"**August 14, 2008: Django 1.0 beta release.** Past this point Django will be "
"in a \"feature freeze\" for the 1.0 release; after Django 1.0 beta, the "
"development focus will be solely on bug fixes and stabilization."
msgstr ""

# 81ebc0222fa8437f88efee0d8220ff02
# c88511575c5e471aaf56c8f20aca9caa
#: ../../releases/1.0-alpha-2.txt:78 ../../releases/1.0-beta.txt:95
msgid "August 15, 2008: Sprint (based in Austin, Texas, USA, and online)."
msgstr ""

# f69f5d15f7a04b28af6d67cd98bd38d0
# 41f5daf6eb6249db9041a671a4585267
#: ../../releases/1.0-alpha-2.txt:80 ../../releases/1.0-beta.txt:97
msgid "August 17, 2008: Sprint (based in Tel Aviv, Israel, and online)."
msgstr ""

# f98b40198a5d46ffb540d555dd985b8e
# 177e570dcca94e3eba248a3a122ee34d
#: ../../releases/1.0-alpha-2.txt:82 ../../releases/1.0-beta.txt:99
msgid ""
"**August 21, 2008: Django 1.0 release candidate 1.** At this point, all "
"strings marked for translation within Django's codebase will be frozen, to "
"provide contributors time to check and finalize all of Django's bundled "
"translation files prior to the final 1.0 release."
msgstr ""

# c21b9cfac5194ffdbceb95c56443ebf6
# 7d4d6c6eac75440ca075ede7e8befd21
#: ../../releases/1.0-alpha-2.txt:87 ../../releases/1.0-beta.txt:104
msgid "August 22, 2008: Sprint (based in Portland, Oregon, USA, and online)."
msgstr ""

# 890cfdfd23d444ba8d3c1b408f1e314d
# c55fdc4fe54342e9b4d68fb6aa8d747c
#: ../../releases/1.0-alpha-2.txt:89 ../../releases/1.0-beta.txt:106
msgid "**August 26, 2008: Django 1.0 release candidate 2.**"
msgstr ""

# 1f80ed65215743e0ac48ffc306b86635
# 24dfed9faf0a4e9fad8e15c07f8f2898
#: ../../releases/1.0-alpha-2.txt:91 ../../releases/1.0-beta.txt:108
msgid "August 30, 2008: Sprint (based in London, England, UK, and online)."
msgstr ""

# 5b646ba2d5864526a416959af19fa1c5
# 8987e6769adf4f7e8fd16bfab9e80c6b
#: ../../releases/1.0-alpha-2.txt:93 ../../releases/1.0-beta.txt:110
msgid ""
"**September 2, 2008: Django 1.0 final release.** The official Django 1.0 "
"release party will take place during the first-ever DjangoCon, to be held in "
"Mountain View, California, USA, September 6-7."
msgstr ""

# 658c73c8db2845be9ec6d82dc03ac8e7
#: ../../releases/1.0-beta.txt:3
msgid "Django 1.0 beta 1 release notes"
msgstr ""

# 94c38d3772e3470bb01bf5dbb817f416
#: ../../releases/1.0-beta.txt:5
msgid "Welcome to Django 1.0 beta 1!"
msgstr ""

# 8bb802eaf0da4081be89c47c31eaaa37
#: ../../releases/1.0-beta.txt:7
msgid ""
"This is the third in a series of preview/development releases leading up to "
"the eventual release of Django 1.0, currently scheduled to take place in "
"early September 2008. This releases is primarily targeted at developers who "
"are interested in testing the Django codebase and helping to identify and "
"resolve bugs prior to the final 1.0 release."
msgstr ""

# 835e684ecf8d49e09616a2e3e39b29e6
# ead87008054d44b7b5357b04365124d9
# 3738d4db8073452eaf849a6552fc4a36
# 8de4e166330c44ceb2aa3e1dadf73232
# 707d33d6020d493fabc42f211dcb131b
# ec13e0dcc4aa485785afec8c82bb4368
# 2c456cc62e644bc1b1717f7253179922
# e195391ac69e45e4ad8b3e654cee0c75
# db983255d57c4b6b8fddba79109055c9
# 753c3a32ba9c4bec95bd0e3ead9eb0e5
#: ../../releases/1.0-beta.txt:13 ../../releases/1.0-beta-2.txt:13
#: ../../releases/1.1-alpha-1.txt:15 ../../releases/1.1-beta-1.txt:15
#: ../../releases/1.2-alpha-1.txt:15 ../../releases/1.2-beta-1.txt:16
#: ../../releases/1.3-alpha-1.txt:15 ../../releases/1.3-beta-1.txt:13
#: ../../releases/1.4-alpha-1.txt:15 ../../releases/1.4-beta-1.txt:15
msgid ""
"As such, this release is *not* intended for production use, and any such use "
"is discouraged."
msgstr ""

# 21cd13d8ac724700995d90de06df62e0
#: ../../releases/1.0-beta.txt:17
msgid "What's new in Django 1.0 beta 1"
msgstr ""

# 95120787d0274b91bf91b75e8bf89b4e
#: ../../releases/1.0-beta.txt:19
msgid ""
"Django's development trunk has been the site of nearly constant activity "
"over the past year, with several major new features landing since the 0.96 "
"release. For features which were new as of Django 1.0 alpha 1, see :doc:`the "
"1.0 alpha 1 release notes </releases/1.0-alpha-1>`. For features which were "
"new as of Django 1.0 alpha 2, see :doc:`the 1.0 alpha 2 release notes </"
"releases/1.0-alpha-2>`."
msgstr ""

# 38e68f581ea44b2292469d48673cae22
#: ../../releases/1.0-beta.txt:25
msgid ""
"This beta release does not contain any major new features, but does include "
"several smaller updates and improvements to Django:"
msgstr ""

# 622725a40bd447078e3b9e1cca4bdde1
#: ../../releases/1.0-beta.txt:35
msgid ""
"Following up on the refactoring of Django's administrative interface "
"(``django.contrib.admin``), introduced in Django 1.0 alpha 1, two new hooks "
"have been added to allow customized pre- and post-save handling of model "
"instances in the admin. Full details are in :doc:`the admin documentation </"
"ref/contrib/admin/index>`."
msgstr ""

# 599066f80e4e4d0586e003a825239e8c
#: ../../releases/1.0-beta.txt:42
msgid ""
"Although Django's default behavior of having a model's ``save()`` method "
"automatically determine whether to perform an ``INSERT`` or an ``UPDATE`` at "
"the SQL level is suitable for the majority of cases, there are occasional "
"situations where forcing one or the other is useful. As a result, models can "
"now support an additional parameter to ``save()`` which can force a specific "
"operation. Consult the database API documentation for details and important "
"notes about appropriate use of this parameter."
msgstr ""

# 009c1f105577404397393d9663146df0
#: ../../releases/1.0-beta.txt:52
msgid ""
"Django's ``CacheMiddleware`` has been split into three classes: "
"``CacheMiddleware`` itself still exists and retains all of its previous "
"functionality, but it is now built from two separate middleware classes "
"which handle the two parts of caching (inserting into and reading from the "
"cache) separately, offering additional flexibility for situations where "
"combining these functions into a single middleware posed problems. Full "
"details, including updated notes on appropriate use, are in :doc:`the "
"caching documentation </topics/cache>`."
msgstr ""

# c6d21906e4e64735975bf7f9eab12f31
#: ../../releases/1.0-beta.txt:63
msgid ""
"A number of features and methods which had previously been marked as "
"deprecated, and which were scheduled for removal prior to the 1.0 release, "
"are no longer present in Django. These include imports of the form library "
"from ``django.newforms`` (now located simply at ``django.forms``), the "
"``form_for_model`` and ``form_for_instance`` helper functions (which have "
"been replaced by ``ModelForm``) and a number of deprecated features which "
"were replaced by the dispatcher, file-uploading and file-storage "
"refactorings introduced in the Django 1.0 alpha releases. A full list of "
"these and all other backwards-incompatible changes is available on `the "
"Django wiki`_."
msgstr ""

# a818c5a40ba74090950cbd5f02289ce3
#: ../../releases/1.0-beta.txt:75
msgid ""
"A number of other improvements and bugfixes have also been included: some "
"tricky cases involving case-sensitivity in differing MySQL collations have "
"been resolved, Windows packaging and installation has been improved and the "
"method by which Django generates unique session identifiers has been made "
"much more robust."
msgstr ""

# 476ecaa71e58412b94aa4ff539df86e4
#: ../../releases/1.0-beta.txt:88
msgid ""
"One of the primary goals of this beta release is to focus attention on the "
"remaining features to be implemented for Django 1.0, and on the bugs that "
"need to be resolved before the final release. Following this release, we'll "
"be conducting a series of development sprints building up to the release-"
"candidate stage, followed soon after by Django 1.0. The timeline is "
"projected to be:"
msgstr ""

# 713b32a425454508bb58d13bfdfb3c13
# f32a7dc1dfca480c94cca836ae4c9e91
#: ../../releases/1.0-beta.txt:124 ../../releases/1.0-beta-2.txt:90
msgid ""
"In order to provide a high-quality 1.0 release, we need your help. Although "
"this beta release is, again, *not* intended for production use, you can help "
"the Django team by trying out the beta codebase in a safe test environment "
"and reporting any bugs or issues you encounter. The Django ticket tracker is "
"the central place to search for open issues:"
msgstr ""

# b49b2971042e4cb7907583dc42d755fe
#: ../../releases/1.0-beta-2.txt:3
msgid "Django 1.0 beta 2 release notes"
msgstr ""

# f58e9ee3edb443cbb9ef2631e9ef2fb3
#: ../../releases/1.0-beta-2.txt:5
msgid "Welcome to Django 1.0 beta 2!"
msgstr ""

# a9178bc7855d441190cc4e49e6a0ec4f
#: ../../releases/1.0-beta-2.txt:7
msgid ""
"This is the fourth in a series of preview/development releases leading up to "
"the eventual release of Django 1.0, currently scheduled to take place in "
"early September 2008. This releases is primarily targeted at developers who "
"are interested in testing the Django codebase and helping to identify and "
"resolve bugs prior to the final 1.0 release."
msgstr ""

# 2519ddba54a94674bb7db79a26bfc5df
#: ../../releases/1.0-beta-2.txt:17
msgid "What's new in Django 1.0 beta 2"
msgstr ""

# 33b4919a5bea4fb090da235ee06e8362
#: ../../releases/1.0-beta-2.txt:19
msgid ""
"Django's development trunk has been the site of nearly constant activity "
"over the past year, with several major new features landing since the 0.96 "
"release.  For features which were new as of Django 1.0 alpha 1, see :doc:"
"`the 1.0 alpha 1 release notes </releases/1.0-alpha-1>`. For features which "
"were new as of Django 1.0 alpha 2, see :doc:`the 1.0 alpha 2 release notes </"
"releases/1.0-alpha-2>`. For features which were new as of Django 1.0 beta 1, "
"see :doc:`the 1.0 beta 1 release notes </releases/1.0-beta>`."
msgstr ""

# 5bdfc7c96e104c58a0c7bb7652823318
#: ../../releases/1.0-beta-2.txt:28
msgid "This beta release includes two major features:"
msgstr ""

# dece9925836c4f97a84565a2a2fa085f
#: ../../releases/1.0-beta-2.txt:31
msgid ""
"As part of a Google Summer of Code project, Thejaswi Puthraya carried out a "
"major rewrite and refactoring of Django's bundled comment system, greatly "
"increasing its flexibility and customizability. :doc:`Full documentation </"
"ref/contrib/comments/index>` is available, as well as :doc:`an upgrade guide "
"</ref/contrib/comments/upgrade>` if you were using the previous incarnation "
"of the comments application.."
msgstr ""

# 066e7b0488ad4b01b72b974f27e397e5
#: ../../releases/1.0-beta-2.txt:40
msgid ""
"Django's bundled and online documentation has also been significantly "
"refactored; the new documentation system uses `Sphinx`_ to build the docs "
"and handle such niceties as topical indexes, reference documentation and "
"cross-references within the docs. You can check out the new documentation "
"`online`_ or, if you have Sphinx installed, build the HTML yourself from the "
"documentation files bundled with Django."
msgstr ""

# bd871b6497fb48848395829143c443be
#: ../../releases/1.0-beta-2.txt:51
msgid ""
"Along with these new features, the Django team has also been hard at work "
"polishing Django's codebase for the final 1.0 release; this beta release "
"contains a large number of smaller improvements and bugfixes from the "
"ongoing push to 1.0."
msgstr ""

# 00ceed46e525479a9c5f2044f05111b1
#: ../../releases/1.0-beta-2.txt:56
msgid ""
"Also, as part of its ongoing deprecation process, Django's old form-handling "
"system has been removed; this means ``django.oldforms`` no longer exists, "
"and its various API hooks (such as automatic manipulators) are no longer "
"present in Django. This system has been completely replaced by :doc:`the new "
"form-handling system </topics/forms/index>` in ``django.forms``."
msgstr ""

# 89db79c18fc649d4acfc18510ed6fec6
#: ../../releases/1.0-beta-2.txt:67
msgid ""
"One of the primary goals of this beta release is to focus attention on the "
"remaining features to be implemented for Django 1.0, and on the bugs that "
"need to be resolved before the final release. As of this beta release, "
"Django is in its final \"feature freeze\" for 1.0; feature requests will be "
"deferred to later releases, and the development effort will be focused "
"solely on bug-fixing and stability. Django is also now in a \"string freeze"
"\"; translatable strings (labels, error messages, etc.) in Django's codebase "
"will not be changed prior to the release, in order to allow our translators "
"to produce the final 1.0 version of Django's translation files."
msgstr ""

# 5ddd074fa9ae4ffa8b81720c288bfc97
#: ../../releases/1.0-beta-2.txt:78
msgid ""
"Following this release, we'll be conducting a final development sprint on "
"August 30, 2008, based in London and coordinated online; the goal of this "
"sprint will be to squash as many bugs as possible in anticipation of the "
"final 1.0 release, which is currently targeted for **September 2, 2008**. "
"The official Django 1.0 release party will take place during the first-ever "
"DjangoCon, to be held in Mountain View, California, USA, September 6-7."
msgstr ""

# e923ab0968714645b0b01086e435c156
#: ../../releases/1.0-porting-guide.txt:3
msgid "Porting your apps from Django 0.96 to 1.0"
msgstr ""

# 13d5099322f74915a3966b4045b44e8d
#: ../../releases/1.0-porting-guide.txt:7
msgid "Django 1.0 breaks compatibility with 0.96 in some areas."
msgstr ""

# 468f68a62d4a446dbfeefcb9f8b50cd8
#: ../../releases/1.0-porting-guide.txt:9
msgid ""
"This guide will help you port 0.96 projects and apps to 1.0. The first part "
"of this document includes the common changes needed to run with 1.0. If "
"after going through the first part your code still breaks, check the section "
"`Less-common Changes`_ for a list of a bunch of less-common compatibility "
"issues."
msgstr ""

# b550b9138af84a8c8fa86184f00e70e3
#: ../../releases/1.0-porting-guide.txt:16
msgid ""
"The :doc:`1.0 release notes </releases/1.0>`. That document explains the new "
"features in 1.0 more deeply; the porting guide is more concerned with "
"helping you quickly update your code."
msgstr ""

# 4cff7ee2bb71433ea5e9e78424f3f8e4
#: ../../releases/1.0-porting-guide.txt:21
msgid "Common changes"
msgstr ""

# 551dff1536864cfb95a3b3178d85063e
#: ../../releases/1.0-porting-guide.txt:23
msgid ""
"This section describes the changes between 0.96 and 1.0 that most users will "
"need to make."
msgstr ""

# 265d7018659741379d4bcad3ade5b6d3
#: ../../releases/1.0-porting-guide.txt:27
msgid "Use Unicode"
msgstr ""

# fb2f81134a844ef7ac6610700bd2e927
#: ../../releases/1.0-porting-guide.txt:29
msgid ""
"Change string literals (``'foo'``) into Unicode literals (``u'foo'``). "
"Django now uses Unicode strings throughout. In most places, raw strings will "
"continue to work, but updating to use Unicode literals will prevent some "
"obscure problems."
msgstr ""

# 8b2770c269944477b06c57af20422194
#: ../../releases/1.0-porting-guide.txt:34
msgid "See :doc:`/ref/unicode` for full details."
msgstr ""

# 245fb9e02c9f40e2ad54f9cbea0a2db1
#: ../../releases/1.0-porting-guide.txt:37
msgid "Models"
msgstr ""

# aba01ec0becf4b4b9dab16abc7edc36b
#: ../../releases/1.0-porting-guide.txt:39
msgid "Common changes to your models file:"
msgstr ""

# 7ca8b0d127a64860a32f1917ab2a406d
#: ../../releases/1.0-porting-guide.txt:42
msgid "Rename ``maxlength`` to ``max_length``"
msgstr ""

# ca44402a1ad548cf975e0297781c8dfa
#: ../../releases/1.0-porting-guide.txt:44
msgid ""
"Rename your ``maxlength`` argument to ``max_length`` (this was changed to be "
"consistent with form fields):"
msgstr ""

# fffbfb7049314e9ea7d934d1df2f0aff
#: ../../releases/1.0-porting-guide.txt:48
msgid "Replace ``__str__`` with ``__unicode__``"
msgstr ""

# d6507ba11772404cb9ea759f7ad16569
#: ../../releases/1.0-porting-guide.txt:50
msgid ""
"Replace your model's ``__str__`` function with a ``__unicode__`` method, and "
"make sure you `use Unicode`_ (``u'foo'``) in that method."
msgstr ""

# 890f9ba6832542b88d7a82c3975c145e
#: ../../releases/1.0-porting-guide.txt:54
msgid "Remove ``prepopulated_from``"
msgstr ""

# 83bc4590428a4dd68e0cc2ad23723335
#: ../../releases/1.0-porting-guide.txt:56
msgid ""
"Remove the ``prepopulated_from`` argument on model fields. It's no longer "
"valid and has been moved to the ``ModelAdmin`` class in ``admin.py``. See "
"`the admin`_, below, for more details about changes to the admin."
msgstr ""

# 59adc8728f1a48bf8266096c0c8a6c54
#: ../../releases/1.0-porting-guide.txt:61
msgid "Remove ``core``"
msgstr ""

# 90c0e888ef8245d38f95e875b1901068
#: ../../releases/1.0-porting-guide.txt:63
msgid ""
"Remove the ``core`` argument from your model fields. It is no longer "
"necessary, since the equivalent functionality (part of :ref:`inline editing "
"<admin-inlines>`) is handled differently by the admin interface now. You "
"don't have to worry about inline editing until you get to `the admin`_ "
"section, below. For now, remove all references to ``core``."
msgstr ""

# f91d35d680d44e96b51006d779c190ba
#: ../../releases/1.0-porting-guide.txt:70
msgid "Replace ``class Admin:`` with ``admin.py``"
msgstr ""

# 172e177dda304dcaabb048ebf9b0125d
#: ../../releases/1.0-porting-guide.txt:72
msgid ""
"Remove all your inner ``class Admin`` declarations from your models. They "
"won't break anything if you leave them, but they also won't do anything. To "
"register apps with the admin you'll move those declarations to an ``admin."
"py`` file; see `the admin`_ below for more details."
msgstr ""

# 03cf51dd92ad4a98ae33d0a8a5e769a6
#: ../../releases/1.0-porting-guide.txt:79
msgid ""
"A contributor to djangosnippets__ has written a script that'll `scan your "
"models.py and generate a corresponding admin.py`__."
msgstr ""

# 3683b41400644aa5acabb8c4da530c4c
#: ../../releases/1.0-porting-guide.txt:86
msgid "Example"
msgstr ""

# 6a054038cad44cc7961ede96bd8c2a2d
#: ../../releases/1.0-porting-guide.txt:88
msgid ""
"Below is an example ``models.py`` file with all the changes you'll need to "
"make:"
msgstr ""

# 50a1e52bc64b498f89bb61492c00155e
#: ../../releases/1.0-porting-guide.txt:90
msgid "Old (0.96) ``models.py``::"
msgstr ""

# 8ff307a0f82b456ea4f75fe85c30af38
#: ../../releases/1.0-porting-guide.txt:103
msgid "New (1.0) ``models.py``::"
msgstr ""

# 7f9259c606464bca9085ec065a135902
#: ../../releases/1.0-porting-guide.txt:113
msgid "New (1.0) ``admin.py``::"
msgstr ""

# cd0ab55e1c534f5f9d1a48d70cb024d5
#: ../../releases/1.0-porting-guide.txt:127
msgid "The Admin"
msgstr ""

# 6045af72799c47b993470b42c5f49c33
#: ../../releases/1.0-porting-guide.txt:129
msgid ""
"One of the biggest changes in 1.0 is the new admin. The Django "
"administrative interface (``django.contrib.admin``) has been completely "
"refactored; admin definitions are now completely decoupled from model "
"definitions, the framework has been rewritten to use Django's new form-"
"handling library and redesigned with extensibility and customization in mind."
msgstr ""

# 2cb21cd3083740a48de6cb047aa5db63
#: ../../releases/1.0-porting-guide.txt:135
msgid ""
"Practically, this means you'll need to rewrite all of your ``class Admin`` "
"declarations. You've already seen in `models`_ above how to replace your "
"``class Admin`` with a ``admin.site.register()`` call in an ``admin.py`` "
"file. Below are some more details on how to rewrite that ``Admin`` "
"declaration into the new syntax."
msgstr ""

# 0e9d49937697452d9fde6a3b49b99bd6
#: ../../releases/1.0-porting-guide.txt:142
msgid "Use new inline syntax"
msgstr ""

# e9a90aeff7af4acfb80ffea922881456
#: ../../releases/1.0-porting-guide.txt:144
msgid ""
"The new ``edit_inline`` options have all been moved to ``admin.py``. Here's "
"an example:"
msgstr ""

# cf21a0f5332546588e4be06c8a3cbd48
# 7d7fbdc151b54cd19e769e1b7e99e7ab
# ee7b07c1c47245619660ecb2cfd6a383
# a3bfcfeb8cca468cb74b24c086aec5a9
# 127b24c5fa6140c0a8b33f9e6390c9c8
# 6c029f0e24154cdf960bdcdeea961a0f
#: ../../releases/1.0-porting-guide.txt:147
#: ../../releases/1.0-porting-guide.txt:176
#: ../../releases/1.0-porting-guide.txt:482
#: ../../releases/1.0-porting-guide.txt:504
#: ../../releases/1.0-porting-guide.txt:521
#: ../../releases/1.0-porting-guide.txt:647
msgid "Old (0.96)::"
msgstr ""

# 6b0eb0d6d55e40f1a7a4a030e0bc7106
# 426fe7c1ee7f4495af511ce1d46c6f98
# 0cafb51fce854ecd9403bba6ac7fc435
# f86068c8063a4590a57407991d14fd26
# a04c01a1725f43a8a41be7b9c13ddfb8
# 3cb10bad18784d059b5ac9fc9eaecebc
#: ../../releases/1.0-porting-guide.txt:156
#: ../../releases/1.0-porting-guide.txt:196
#: ../../releases/1.0-porting-guide.txt:489
#: ../../releases/1.0-porting-guide.txt:510
#: ../../releases/1.0-porting-guide.txt:527
#: ../../releases/1.0-porting-guide.txt:653
msgid "New (1.0)::"
msgstr ""

# 32b02a11c5094615b98874c3334c7dd7
#: ../../releases/1.0-porting-guide.txt:168
msgid "See :ref:`admin-inlines` for more details."
msgstr ""

# 854c080d7ba6486aa00e5caa278f0cce
#: ../../releases/1.0-porting-guide.txt:171
msgid "Simplify ``fields``, or use ``fieldsets``"
msgstr ""

# de461d43af0d4a9a8594d4e0c7ef85e8
#: ../../releases/1.0-porting-guide.txt:173
msgid ""
"The old ``fields`` syntax was quite confusing, and has been simplified. The "
"old syntax still works, but you'll need to use ``fieldsets`` instead."
msgstr ""

# 312bbc0eae744a38a36ed9d726118aa2
#: ../../releases/1.0-porting-guide.txt:210
msgid ""
"More detailed information about the changes and the reasons behind them can "
"be found on the `NewformsAdminBranch wiki page`__"
msgstr ""

# 7a5ff24bbe4d4faa8cb1f7b9a8950878
#: ../../releases/1.0-porting-guide.txt:213
msgid ""
"The new admin comes with a ton of new features; you can read about them in "
"the :doc:`admin documentation </ref/contrib/admin/index>`."
msgstr ""

# d362cb26459d4a789ddab693cbd7c458
#: ../../releases/1.0-porting-guide.txt:219
msgid "URLs"
msgstr ""

# 2ebb00fe684a4191a7517a1f96e39d3a
#: ../../releases/1.0-porting-guide.txt:222
msgid "Update your root ``urls.py``"
msgstr ""

# 4c53bdc280fa43d4a13b5080fca78fa6
#: ../../releases/1.0-porting-guide.txt:224
msgid ""
"If you're using the admin site, you need to update your root ``urls.py``."
msgstr ""

# 8f34316e47164b63be18801ea2661bf8
#: ../../releases/1.0-porting-guide.txt:226
msgid "Old (0.96) ``urls.py``::"
msgstr ""

# bb59cb1d69c543b3bcf9879a20eb2959
#: ../../releases/1.0-porting-guide.txt:236
msgid "New (1.0) ``urls.py``::"
msgstr ""

# ca47015b617347689a4bb67fbc7d02f2
#: ../../releases/1.0-porting-guide.txt:251
msgid "Views"
msgstr ""

# 7c3a6d79c28f49bfbe6c9b5294267e5e
#: ../../releases/1.0-porting-guide.txt:254
msgid "Use ``django.forms`` instead of ``newforms``"
msgstr ""

# 40d5b913988e440286cfffbdf80a78c9
#: ../../releases/1.0-porting-guide.txt:256
msgid ""
"Replace ``django.newforms`` with ``django.forms`` -- Django 1.0 renamed the "
"``newforms`` module (introduced in 0.96) to plain old ``forms``. The "
"``oldforms`` module was also removed."
msgstr ""

# 177d77360e44408bb47d1cd085b34dca
#: ../../releases/1.0-porting-guide.txt:260
msgid ""
"If you're already using the ``newforms`` library, and you used our "
"recommended ``import`` statement syntax, all you have to do is change your "
"import statements."
msgstr ""

# 9f2ab95a6d3440769045b058b5442575
#: ../../releases/1.0-porting-guide.txt:264
msgid "Old::"
msgstr ""

# 847a13584fa94d3aa25463c9a7a84600
#: ../../releases/1.0-porting-guide.txt:268
msgid "New::"
msgstr ""

# 729738e5cefb48b2bcae543314795255
#: ../../releases/1.0-porting-guide.txt:272
msgid ""
"If you're using the old forms system (formerly known as ``django.forms`` and "
"``django.oldforms``), you'll have to rewrite your forms. A good place to "
"start is the :doc:`forms documentation </topics/forms/index>`"
msgstr ""

# 13b0515f0238479e904a7839040fe7f0
#: ../../releases/1.0-porting-guide.txt:277
msgid "Handle uploaded files using the new API"
msgstr ""

# fcec00319f304d3fab6842d61bfce5ae
#: ../../releases/1.0-porting-guide.txt:279
msgid ""
"Replace use of uploaded files -- that is, entries in ``request.FILES`` -- as "
"simple dictionaries with the new :class:`~django.core.files.UploadedFile`. "
"The old dictionary syntax no longer works."
msgstr ""

# 97f9b444ccf84be69af50a8179f344f5
#: ../../releases/1.0-porting-guide.txt:283
msgid "Thus, in a view like::"
msgstr ""

# 15f2d0059294487fa7030c2f7907c43f
#: ../../releases/1.0-porting-guide.txt:289
msgid "...you'd need to make the following changes:"
msgstr ""

# db22702c7f9e4ee48a6be911bcfd1697
# 4760522d96cd47828127a5e48b62a610
# 50977428ba754890a80288bca3ad4c5c
# 8afcada13b8d4c77b49380787b94df4f
#: ../../releases/1.0-porting-guide.txt:292
#: ../../releases/1.0-porting-guide.txt:309
#: ../../releases/1.0-porting-guide.txt:381
#: ../../releases/1.0-porting-guide.txt:739
msgid "Old (0.96)"
msgstr ""

# 2f41ab5fd89d4d26bc99867110c2ed73
# 65b064a5861747068e8c8c948f4ff4c9
# 51efca8070554935b80be119221ef276
# 09742da390d342c19f1c522a8c172db8
#: ../../releases/1.0-porting-guide.txt:292
#: ../../releases/1.0-porting-guide.txt:309
#: ../../releases/1.0-porting-guide.txt:381
#: ../../releases/1.0-porting-guide.txt:739
msgid "New (1.0)"
msgstr ""

# 57802bd942b94f2092bdb5a66303f7bf
#: ../../releases/1.0-porting-guide.txt:294
msgid "``f['content']``"
msgstr ""

# cffee84f2c2241dda0285c4173660a17
#: ../../releases/1.0-porting-guide.txt:294
msgid "``f.read()``"
msgstr ""

# 9547f9a1613547779570a8539d0a1bdb
#: ../../releases/1.0-porting-guide.txt:295
msgid "``f['filename']``"
msgstr ""

# e1bd08c4847f4e768c7355357e972cb2
#: ../../releases/1.0-porting-guide.txt:295
msgid "``f.name``"
msgstr ""

# 4931eb3e1c454d9bab10d3aca5856847
#: ../../releases/1.0-porting-guide.txt:296
msgid "``f['content-type']``"
msgstr ""

# fd1948672a5944b2a4fe1f2c1124cf22
#: ../../releases/1.0-porting-guide.txt:296
msgid "``f.content_type``"
msgstr ""

# eb9b987229b24a9f9d13cb89169516f8
#: ../../releases/1.0-porting-guide.txt:300
msgid "Work with file fields using the new API"
msgstr ""

# a2e6719fd3394e5b92b1905c829f76bd
#: ../../releases/1.0-porting-guide.txt:302
msgid ""
"The internal implementation of :class:`django.db.models.FileField` have "
"changed. A visible result of this is that the way you access special "
"attributes (URL, filename, image size, etc) of these model fields has "
"changed. You will need to make the following changes, assuming your model's :"
"class:`~django.db.models.FileField` is called ``myfile``:"
msgstr ""

# 1de97f71c8ad4feaba0567ca4c4f0cce
#: ../../releases/1.0-porting-guide.txt:311
msgid "``myfile.get_content_filename()``"
msgstr ""

# 8387f16bc4de431fac3a22625a8773fd
#: ../../releases/1.0-porting-guide.txt:311
msgid "``myfile.content.path``"
msgstr ""

# c1e34dbce56a498cae51e209b495df36
#: ../../releases/1.0-porting-guide.txt:312
msgid "``myfile.get_content_url()``"
msgstr ""

# a609c1298c71471b8984fef0ba5ecba3
#: ../../releases/1.0-porting-guide.txt:312
msgid "``myfile.content.url``"
msgstr ""

# 0a5ee23aa158466e9d03fa29e0ed57f9
#: ../../releases/1.0-porting-guide.txt:313
msgid "``myfile.get_content_size()``"
msgstr ""

# 19fc819784804b62b1c8f9f3996aec6c
#: ../../releases/1.0-porting-guide.txt:313
msgid "``myfile.content.size``"
msgstr ""

# 8e68c7694c1843b6b6dc79644ce13bf7
#: ../../releases/1.0-porting-guide.txt:314
msgid "``myfile.save_content_file()``"
msgstr ""

# efe903a78e8e442482752592fd24bc96
#: ../../releases/1.0-porting-guide.txt:314
msgid "``myfile.content.save()``"
msgstr ""

# 88d03c2152d14a568fa9b1b9e0990898
#: ../../releases/1.0-porting-guide.txt:315
msgid "``myfile.get_content_width()``"
msgstr ""

# ac70806f27b94490b28ebfc32804bbce
#: ../../releases/1.0-porting-guide.txt:315
msgid "``myfile.content.width``"
msgstr ""

# 216e73fa37a04a25ac76ccedbc35bcea
#: ../../releases/1.0-porting-guide.txt:316
msgid "``myfile.get_content_height()``"
msgstr ""

# 3987133a1fa54712a25885218413ea2f
#: ../../releases/1.0-porting-guide.txt:316
msgid "``myfile.content.height``"
msgstr ""

# 6118e405067840b7acc4a80060045671
#: ../../releases/1.0-porting-guide.txt:319
msgid ""
"Note that the ``width`` and ``height`` attributes only make sense for :class:"
"`~django.db.models.ImageField` fields. More details can be found in the :doc:"
"`model API </ref/models/fields>` documentation."
msgstr ""

# a2f77e733a7246ce90d5483b1401997c
#: ../../releases/1.0-porting-guide.txt:324
msgid "Use ``Paginator`` instead of ``ObjectPaginator``"
msgstr ""

# 338cf2852b5a4ac29654c7120de651dc
#: ../../releases/1.0-porting-guide.txt:326
msgid ""
"The ``ObjectPaginator`` in 0.96 has been removed and replaced with an "
"improved version, :class:`django.core.paginator.Paginator`."
msgstr ""

# 6fdf883237a048b19d09f0f7678255f3
#: ../../releases/1.0-porting-guide.txt:330
msgid "Templates"
msgstr ""

# 4eda28960faf4a49b7e5d7b78c441f40
#: ../../releases/1.0-porting-guide.txt:333
msgid "Learn to love autoescaping"
msgstr ""

# 721180f0fbb9414d970f5776d15c7e1c
#: ../../releases/1.0-porting-guide.txt:335
msgid ""
"By default, the template system now automatically HTML-escapes the output of "
"every variable. To learn more, see :ref:`automatic-html-escaping`."
msgstr ""

# 87ec5bea5f1e439ebd804aab99bd39fb
#: ../../releases/1.0-porting-guide.txt:338
msgid ""
"To disable auto-escaping for an individual variable, use the :tfilter:`safe` "
"filter:"
msgstr ""

# 2eb33f7742064447999b3c1bb5b99801
#: ../../releases/1.0-porting-guide.txt:346
msgid ""
"To disable auto-escaping for an entire template, wrap the template (or just "
"a particular section of the template) in the :ttag:`autoescape` tag:"
msgstr ""

# 8119b53eebc24e1394df0941262e6771
#: ../../releases/1.0-porting-guide.txt:356
msgid "Less-common changes"
msgstr ""

# 3f8a4f4680e4487aa4bfd580178b8d0e
#: ../../releases/1.0-porting-guide.txt:358
msgid ""
"The following changes are smaller, more localized changes. They should only "
"affect more advanced users, but it's probably worth reading through the list "
"and checking your code for these things."
msgstr ""

# 0840af7e16d34051b871094d9372acea
#: ../../releases/1.0-porting-guide.txt:363
msgid "Signals"
msgstr ""

# 37eac1a3aeea4e5b897d85a7377d73c1
#: ../../releases/1.0-porting-guide.txt:365
msgid "Add ``**kwargs`` to any registered signal handlers."
msgstr ""

# 910040a204204079acbaba720b7ef809
#: ../../releases/1.0-porting-guide.txt:367
msgid ""
"Connect, disconnect, and send signals via methods on the :class:`~django."
"dispatch.Signal` object instead of through module methods in ``django."
"dispatch.dispatcher``."
msgstr ""

# 7ed6c1089c7f457b88ce432ce940e697
#: ../../releases/1.0-porting-guide.txt:371
msgid ""
"Remove any use of the ``Anonymous`` and ``Any`` sender options; they no "
"longer exist. You can still receive signals sent by any sender by using "
"``sender=None``"
msgstr ""

# ce80c5ebca7843bda21813e83958a30a
#: ../../releases/1.0-porting-guide.txt:375
msgid ""
"Make any custom signals you've declared into instances of :class:`django."
"dispatch.Signal` instead of anonymous objects."
msgstr ""

# 8885ea8e92124f779c9add5d806f7345
#: ../../releases/1.0-porting-guide.txt:378
msgid "Here's quick summary of the code changes you'll need to make:"
msgstr ""

# 897e67b67a5e4b9985a474554bd192cd
#: ../../releases/1.0-porting-guide.txt:383
msgid "``def callback(sender)``"
msgstr ""

# 42974ce5a5bf407ca20cba8b5e326e9b
#: ../../releases/1.0-porting-guide.txt:383
msgid "``def callback(sender, **kwargs)``"
msgstr ""

# 800f5298152c495eac414622a59c89ac
#: ../../releases/1.0-porting-guide.txt:384
msgid "``sig = object()``"
msgstr ""

# a8529dacd1ad4f5f94e094a47fbf3d89
#: ../../releases/1.0-porting-guide.txt:384
msgid "``sig = django.dispatch.Signal()``"
msgstr ""

# 82452646b65948d386b57813de14a167
#: ../../releases/1.0-porting-guide.txt:385
msgid "``dispatcher.connect(callback, sig)``"
msgstr ""

# 7ad188d2804e4e9abf8d96661d367657
#: ../../releases/1.0-porting-guide.txt:385
msgid "``sig.connect(callback)``"
msgstr ""

# b7098f68d7c64dd190fc6d142db6288b
#: ../../releases/1.0-porting-guide.txt:386
msgid "``dispatcher.send(sig, sender)``"
msgstr ""

# d9a8c599638c4689ba61d6eee219bae2
#: ../../releases/1.0-porting-guide.txt:386
msgid "``sig.send(sender)``"
msgstr ""

# 4178f10e5bef41ca80bbf2a4aca64e62
#: ../../releases/1.0-porting-guide.txt:387
msgid "``dispatcher.connect(callback, sig, sender=Any)``"
msgstr ""

# e288d183189c4620bef74700841a4799
#: ../../releases/1.0-porting-guide.txt:387
msgid "``sig.connect(callback, sender=None)``"
msgstr ""

# 7ad109d3bcb84a5ba417edf587c55a40
#: ../../releases/1.0-porting-guide.txt:391
msgid "Comments"
msgstr ""

# f3ad17b09ed54e639475c1346bc45e6f
#: ../../releases/1.0-porting-guide.txt:393
msgid ""
"If you were using Django 0.96's ``django.contrib.comments`` app, you'll need "
"to upgrade to the new comments app introduced in 1.0. See :doc:`/ref/contrib/"
"comments/upgrade` for details."
msgstr ""

# cd2930cf813f46518df8f6c75a781b0b
#: ../../releases/1.0-porting-guide.txt:398
msgid "Template tags"
msgstr ""

# 4c2a9bbb896b4922821daa6a0e7a5a6f
#: ../../releases/1.0-porting-guide.txt:401
msgid ":ttag:`spaceless` tag"
msgstr ""

# 0d2ec17ef3c649159562d505aeb2aab8
#: ../../releases/1.0-porting-guide.txt:403
msgid ""
"The spaceless template tag now removes *all* spaces between HTML tags, "
"instead of preserving a single space."
msgstr ""

# 39e3bd474f7f48c2a0637095ddc21cfa
#: ../../releases/1.0-porting-guide.txt:407
msgid "Local flavors"
msgstr ""

# 97e70c0e9b644c3da14b0ea2acbc0ac2
#: ../../releases/1.0-porting-guide.txt:410
msgid "U.S. local flavor"
msgstr ""

# 37d31f16eb4a44998280e61365e9c16d
#: ../../releases/1.0-porting-guide.txt:412
msgid ""
"``django.contrib.localflavor.usa`` has been renamed to :mod:`django.contrib."
"localflavor.us`. This change was made to match the naming scheme of other "
"local flavors. To migrate your code, all you need to do is change the "
"imports."
msgstr ""

# 54efbed4ef1d4e9dbcff707985f668e1
#: ../../releases/1.0-porting-guide.txt:418
msgid "Sessions"
msgstr ""

# d844e75b07a34756b342829e62ddf9d7
#: ../../releases/1.0-porting-guide.txt:421
msgid "Getting a new session key"
msgstr ""

# 34cae06aabdf4e598416ea52b184a3a9
#: ../../releases/1.0-porting-guide.txt:423
msgid ""
"``SessionBase.get_new_session_key()`` has been renamed to "
"``_get_new_session_key()``. ``get_new_session_object()`` no longer exists."
msgstr ""

# fb61d16160084ff894a9e973e42f8971
#: ../../releases/1.0-porting-guide.txt:427
msgid "Fixtures"
msgstr ""

# 4f260d27d2b54e6386ef189b0e32e704
#: ../../releases/1.0-porting-guide.txt:430
msgid "Loading a row no longer calls ``save()``"
msgstr ""

# 13b6399905ba4d278711ffc787692f17
#: ../../releases/1.0-porting-guide.txt:432
msgid ""
"Previously, loading a row automatically ran the model's ``save()`` method. "
"This is no longer the case, so any fields (for example: timestamps) that "
"were auto-populated by a ``save()`` now need explicit values in any fixture."
msgstr ""

# 715e1a6698ea416d92fd5837ad023851
#: ../../releases/1.0-porting-guide.txt:437
msgid "Settings"
msgstr ""

# 22210d0b13c5407c8390229db5f41aa8
#: ../../releases/1.0-porting-guide.txt:440
msgid "Better exceptions"
msgstr ""

# 9db593c6148b4367bd90edd61d9c4bc1
#: ../../releases/1.0-porting-guide.txt:442
msgid ""
"The old :exc:`EnvironmentError` has split into an :exc:`ImportError` when "
"Django fails to find the settings module and a :exc:`RuntimeError` when you "
"try to reconfigure settings after having already used them"
msgstr ""

# e1b70cb50cb84a09a7e8ebacbef6a99f
#: ../../releases/1.0-porting-guide.txt:447
msgid ":setting:`LOGIN_URL` has moved"
msgstr ""

# f2d870b1c667467d946d9bc636e0a54f
#: ../../releases/1.0-porting-guide.txt:449
msgid ""
"The :setting:`LOGIN_URL` constant moved from ``django.contrib.auth`` into "
"the ``settings`` module. Instead of using ``from django.contrib.auth import "
"LOGIN_URL`` refer to :setting:`settings.LOGIN_URL <LOGIN_URL>`."
msgstr ""

# fbf8cd8b6f7e4e4ea4d1e8fa41e84c28
#: ../../releases/1.0-porting-guide.txt:454
msgid ":setting:`APPEND_SLASH` behavior has been updated"
msgstr ""

# 204233cf07dd45c9a484728c2789a058
#: ../../releases/1.0-porting-guide.txt:456
msgid ""
"In 0.96, if a URL didn't end in a slash or have a period in the final "
"component of its path, and :setting:`APPEND_SLASH` was True, Django would "
"redirect to the same URL, but with a slash appended to the end. Now, Django "
"checks to see whether the pattern without the trailing slash would be "
"matched by something in your URL patterns. If so, no redirection takes "
"place, because it is assumed you deliberately wanted to catch that pattern."
msgstr ""

# 41f52807b675462695167f248cdf813d
#: ../../releases/1.0-porting-guide.txt:463
msgid ""
"For most people, this won't require any changes. Some people, though, have "
"URL patterns that look like this::"
msgstr ""

# 7653298f36e44ca995e69b4bb5683d46
#: ../../releases/1.0-porting-guide.txt:468
msgid ""
"Previously, those patterns would have been redirected to have a trailing "
"slash. If you always want a slash on such URLs, rewrite the pattern as::"
msgstr ""

# fc4b33e86f074d388a32e6eb4f41f5d8
#: ../../releases/1.0-porting-guide.txt:474
msgid "Smaller model changes"
msgstr ""

# 0bd6568fa0284180a1c53f8b5a7aa41d
#: ../../releases/1.0-porting-guide.txt:477
msgid "Different exception from ``get()``"
msgstr ""

# 22b02cd31e354360bcbac18c6c1e7209
#: ../../releases/1.0-porting-guide.txt:479
msgid ""
"Managers now return a :exc:`MultipleObjectsReturned` exception instead of :"
"exc:`AssertionError`:"
msgstr ""

# e1a26be01d03421c8758b896aeeb7a5a
#: ../../releases/1.0-porting-guide.txt:497
msgid "``LazyDate`` has been fired"
msgstr ""

# 7cd346896cc04239b48efa5fab58565b
#: ../../releases/1.0-porting-guide.txt:499
msgid "The ``LazyDate`` helper class no longer exists."
msgstr ""

# ad4a90f97edb4605b992865d384612e1
#: ../../releases/1.0-porting-guide.txt:501
msgid ""
"Default field values and query arguments can both be callable objects, so "
"instances of ``LazyDate`` can be replaced with a reference to ``datetime."
"datetime.now``:"
msgstr ""

# a5274803ed8e46c19960e6148e08fb47
#: ../../releases/1.0-porting-guide.txt:519
msgid "``DecimalField`` is new, and ``FloatField`` is now a proper float"
msgstr ""

# d394019affa94fe795be7a6a6514740d
#: ../../releases/1.0-porting-guide.txt:533
msgid ""
"If you forget to make this change, you will see errors about ``FloatField`` "
"not taking a ``max_digits`` attribute in ``__init__``, because the new "
"``FloatField`` takes no precision-related arguments."
msgstr ""

# 146881551810472d922deeb0441a6f44
#: ../../releases/1.0-porting-guide.txt:537
msgid ""
"If you're using MySQL or PostgreSQL, no further changes are needed. The "
"database column types for ``DecimalField`` are the same as for the old "
"``FloatField``."
msgstr ""

# d03e2a05fd7447a8ac4ed25afac788fe
#: ../../releases/1.0-porting-guide.txt:541
msgid ""
"If you're using SQLite, you need to force the database to view the "
"appropriate columns as decimal types, rather than floats. To do this, you'll "
"need to reload your data. Do this after you have made the change to using "
"``DecimalField`` in your code and updated the Django code."
msgstr ""

# a9e3df83e39e475f83e1d8fafe3d9e3b
#: ../../releases/1.0-porting-guide.txt:548
msgid "**Back up your database first!**"
msgstr ""

# 9ca0c375b78a4d33865b425fa6b90377
#: ../../releases/1.0-porting-guide.txt:550
msgid ""
"For SQLite, this means making a copy of the single file that stores the "
"database (the name of that file is the :setting:`DATABASE_NAME` in your "
"settings.py file)."
msgstr ""

# 163fe4b079934d3f8a962bb9ca38314d
#: ../../releases/1.0-porting-guide.txt:554
msgid ""
"To upgrade each application to use a ``DecimalField``, you can do the "
"following, replacing ``<app>`` in the code below with each app's name:"
msgstr ""

# 1dba66fe9c5e47acaf60683ba17fe574
#: ../../releases/1.0-porting-guide.txt:563
msgid "Notes:"
msgstr ""

# c2ac54aa61474e06af32b2fa2afa5f49
#: ../../releases/1.0-porting-guide.txt:565
msgid ""
"It's important that you remember to use XML format in the first step of this "
"process. We are exploiting a feature of the XML data dumps that makes "
"porting floats to decimals with SQLite possible."
msgstr ""

# 980c0daa67da40129ca8428cdead460e
#: ../../releases/1.0-porting-guide.txt:569
msgid ""
"In the second step you will be asked to confirm that you are prepared to "
"lose the data for the application(s) in question. Say yes; we'll restore "
"this data in the third step, of course."
msgstr ""

# 2e7057fce8c04511aba93835b0e6ce60
#: ../../releases/1.0-porting-guide.txt:573
msgid ""
"``DecimalField`` is not used in any of the apps shipped with Django prior to "
"this change being made, so you do not need to worry about performing this "
"procedure for any of the standard Django models."
msgstr ""

# 067cf3c39132463c84f2b30140d4159f
#: ../../releases/1.0-porting-guide.txt:577
msgid ""
"If something goes wrong in the above process, just copy your backed up "
"database file over the original file and start again."
msgstr ""

# 088fc592c3344bf2acb9de3a45b8ba19
#: ../../releases/1.0-porting-guide.txt:581
msgid "Internationalization"
msgstr ""

# af85018ebe4e4a7ebe652a33b222ce1d
#: ../../releases/1.0-porting-guide.txt:584
msgid ":func:`django.views.i18n.set_language` now requires a POST request"
msgstr ""

# 2796fff2eb1149648ced1d1e3c251642
#: ../../releases/1.0-porting-guide.txt:586
msgid ""
"Previously, a GET request was used. The old behavior meant that state (the "
"locale used to display the site) could be changed by a GET request, which is "
"against the HTTP specification's recommendations. Code calling this view "
"must ensure that a POST request is now made, instead of a GET. This means "
"you can no longer use a link to access the view, but must use a form "
"submission of some kind (e.g. a button)."
msgstr ""

# 9cc82047ce5640daa5abc0893a44fe04
#: ../../releases/1.0-porting-guide.txt:594
msgid "``_()`` is no longer in builtins"
msgstr ""

# 362d091a3e5d40e3a74414598e6500cd
#: ../../releases/1.0-porting-guide.txt:596
msgid ""
"``_()`` (the callable object whose name is a single underscore) is no longer "
"monkeypatched into builtins -- that is, it's no longer available magically "
"in every module."
msgstr ""

# 8df8237dc2c84e7ebecb38ef02c5a730
#: ../../releases/1.0-porting-guide.txt:600
msgid ""
"If you were previously relying on ``_()`` always being present, you should "
"now explicitly import ``ugettext`` or ``ugettext_lazy``, if appropriate, and "
"alias it to ``_`` yourself::"
msgstr ""

# 056fcd1225a64b57831396a2d59d0348
#: ../../releases/1.0-porting-guide.txt:607
msgid "HTTP request/response objects"
msgstr ""

# f81c483556d24e9da768c4020008342b
#: ../../releases/1.0-porting-guide.txt:610
msgid "Dictionary access to ``HttpRequest``"
msgstr ""

# af66efc7a2444a319e0bf8f744416be0
#: ../../releases/1.0-porting-guide.txt:612
msgid ""
"``HttpRequest`` objects no longer directly support dictionary-style access; "
"previously, both ``GET`` and ``POST`` data were directly available on the "
"``HttpRequest`` object (e.g., you could check for a piece of form data by "
"using ``if 'some_form_key' in request`` or by reading ``request"
"['some_form_key']``. This is no longer supported; if you need access to the "
"combined ``GET`` and ``POST`` data, use ``request.REQUEST`` instead."
msgstr ""

# 86501c5e75b744078275b29c335ee15c
#: ../../releases/1.0-porting-guide.txt:620
msgid ""
"It is strongly suggested, however, that you always explicitly look in the "
"appropriate dictionary for the type of request you expect to receive "
"(``request.GET`` or ``request.POST``); relying on the combined ``request."
"REQUEST`` dictionary can mask the origin of incoming data."
msgstr ""

# 5feb4d897d4041ff855c8f3d071e65cf
#: ../../releases/1.0-porting-guide.txt:626
msgid "Accessing ``HTTPResponse`` headers"
msgstr ""

# f001736f091d47319c1bdddba9ea1b88
#: ../../releases/1.0-porting-guide.txt:628
msgid ""
"``django.http.HttpResponse.headers`` has been renamed to ``_headers`` and :"
"class:`~django.http.HttpResponse` now supports containment checking "
"directly. So use ``if header in response:`` instead of ``if header in "
"response.headers:``."
msgstr ""

# e5618821904e4e788c906605481f9b90
#: ../../releases/1.0-porting-guide.txt:633
msgid "Generic relations"
msgstr ""

# e54fcb71b1d84c328ddbf52531d7c4be
#: ../../releases/1.0-porting-guide.txt:636
msgid "Generic relations have been moved out of core"
msgstr ""

# 9335fe36bf114682b26a7ab47d6e1b4e
#: ../../releases/1.0-porting-guide.txt:638
msgid ""
"The generic relation classes -- ``GenericForeignKey`` and "
"``GenericRelation`` -- have moved into the :mod:`django.contrib."
"contenttypes` module."
msgstr ""

# 3e0f45cfdf5f4397a77b28c2996fbfd1
#: ../../releases/1.0-porting-guide.txt:642
msgid "Testing"
msgstr ""

# 461112e0ecfd4ddd80a43468876a251d
#: ../../releases/1.0-porting-guide.txt:645
msgid ":meth:`django.test.Client.login` has changed"
msgstr ""

# cad4567a30e04d2c884b208476552ad9
#: ../../releases/1.0-porting-guide.txt:659
msgid "Management commands"
msgstr ""

# 1ffadd4c4962431c85a36744031e1ce6
#: ../../releases/1.0-porting-guide.txt:662
msgid "Running management commands from your code"
msgstr ""

# e6d030c793114f6ba93a881db45a3826
#: ../../releases/1.0-porting-guide.txt:664
msgid ":mod:`django.core.management` has been greatly refactored."
msgstr ""

# e663d4e3ca7e4d08a2021fa72e9c4bda
#: ../../releases/1.0-porting-guide.txt:666
msgid ""
"Calls to management services in your code now need to use ``call_command``. "
"For example, if you have some test code that calls flush and load_data::"
msgstr ""

# 83c7623650624c5684ea84d8f8d17a9b
#: ../../releases/1.0-porting-guide.txt:674
msgid "...you'll need to change this code to read::"
msgstr ""

# fc71c768d4bc4eec9632afe34c62528f
#: ../../releases/1.0-porting-guide.txt:681
msgid "Subcommands must now precede options"
msgstr ""

# 7a0f622dfdc2485dacb93076de97b7d5
#: ../../releases/1.0-porting-guide.txt:683
msgid ""
"``django-admin.py`` and ``manage.py`` now require subcommands to precede "
"options. So:"
msgstr ""

# 9096959a5fb9499abe801f1616b29b1d
#: ../../releases/1.0-porting-guide.txt:690
msgid "...no longer works and should be changed to:"
msgstr ""

# 9d98c88faa6c4a8e94a32fabc50861ff
#: ../../releases/1.0-porting-guide.txt:697
msgid "Syndication"
msgstr ""

# 1e33747c1d79409593c8fd5667b42244
#: ../../releases/1.0-porting-guide.txt:700
msgid "``Feed.__init__`` has changed"
msgstr ""

# 90ae94a7586f4b2ca93a9e614f92894d
#: ../../releases/1.0-porting-guide.txt:702
msgid ""
"The ``__init__()`` method of the syndication framework's ``Feed`` class now "
"takes an ``HttpRequest`` object as its second parameter, instead of the "
"feed's URL. This allows the syndication framework to work without requiring "
"the sites framework. This only affects code that subclasses ``Feed`` and "
"overrides the ``__init__()`` method, and code that calls ``Feed.__init__()`` "
"directly."
msgstr ""

# f1db874397f844a5bc6d4b375d748ea5
#: ../../releases/1.0-porting-guide.txt:709
msgid "Data structures"
msgstr ""

# 8d5ff929fac74f72a004cb5ce4b7549d
#: ../../releases/1.0-porting-guide.txt:712
msgid "``SortedDictFromList`` is gone"
msgstr ""

# 5928e05cc5494159930532b6d6df9636
#: ../../releases/1.0-porting-guide.txt:714
msgid ""
"``django.newforms.forms.SortedDictFromList`` was removed. :class:`django."
"utils.datastructures.SortedDict` can now be instantiated with a sequence of "
"tuples."
msgstr ""

# 908db64b16d4457eb6f79a6ff1a49629
#: ../../releases/1.0-porting-guide.txt:718
msgid "To update your code:"
msgstr ""

# 6643edf5d71441dea10bbd2999db2a41
#: ../../releases/1.0-porting-guide.txt:720
msgid ""
"Use :class:`django.utils.datastructures.SortedDict` wherever you were using "
"``django.newforms.forms.SortedDictFromList``."
msgstr ""

# c1123d72be3b46adaf579343b4c66ae3
#: ../../releases/1.0-porting-guide.txt:723
msgid ""
"Because :meth:`django.utils.datastructures.SortedDict.copy` doesn't return a "
"deepcopy as ``SortedDictFromList.copy()`` did, you will need to update your "
"code if you were relying on a deepcopy. Do this by using ``copy.deepcopy`` "
"directly."
msgstr ""

# bcce9e7e19d345848ba4cd1f225aab90
#: ../../releases/1.0-porting-guide.txt:729
msgid "Database backend functions"
msgstr ""

# 0334497d325a4f5199fa72eb598605f8
#: ../../releases/1.0-porting-guide.txt:732
msgid "Database backend functions have been renamed"
msgstr ""

# eed24ff65d4442edb8f42a66265c39c7
#: ../../releases/1.0-porting-guide.txt:734
msgid ""
"Almost *all* of the database backend-level functions have been renamed and/"
"or relocated. None of these were documented, but you'll need to change your "
"code if you're using any of these functions, all of which are in :mod:"
"`django.db`:"
msgstr ""

# e74b1b3cb86c43048ac4d4c7e9641c05
#: ../../releases/1.0-porting-guide.txt:741
msgid "``backend.get_autoinc_sql``"
msgstr ""

# 2708fa12fb2b48cba6d686406c57dd12
#: ../../releases/1.0-porting-guide.txt:741
msgid "``connection.ops.autoinc_sql``"
msgstr ""

# c0609892b122450a998431c557a052e5
#: ../../releases/1.0-porting-guide.txt:742
msgid "``backend.get_date_extract_sql``"
msgstr ""

# 3db03b1207e240898d9ddbeac156c6e3
#: ../../releases/1.0-porting-guide.txt:742
msgid "``connection.ops.date_extract_sql``"
msgstr ""

# c237ce8cb2804569b947431f45652e40
#: ../../releases/1.0-porting-guide.txt:743
msgid "``backend.get_date_trunc_sql``"
msgstr ""

# 63eb0cd10920429687f9dd4f1b8d45ee
#: ../../releases/1.0-porting-guide.txt:743
msgid "``connection.ops.date_trunc_sql``"
msgstr ""

# 3c96356c9267434db1e4dd49c907773e
#: ../../releases/1.0-porting-guide.txt:744
msgid "``backend.get_datetime_cast_sql``"
msgstr ""

# 249c7a0a04ca48069c5aeae2279ba216
#: ../../releases/1.0-porting-guide.txt:744
msgid "``connection.ops.datetime_cast_sql``"
msgstr ""

# 5e202b5c098d4b329b7898d88a8cf20e
#: ../../releases/1.0-porting-guide.txt:745
msgid "``backend.get_deferrable_sql``"
msgstr ""

# 0804c2f3dad04eaa858a08a375b083f3
#: ../../releases/1.0-porting-guide.txt:745
msgid "``connection.ops.deferrable_sql``"
msgstr ""

# 345701d2b17d47eb8ba9a0b5dcd5e4ec
#: ../../releases/1.0-porting-guide.txt:746
msgid "``backend.get_drop_foreignkey_sql``"
msgstr ""

# 0c51fcf7da50468e87044baab3c63a2b
#: ../../releases/1.0-porting-guide.txt:746
msgid "``connection.ops.drop_foreignkey_sql``"
msgstr ""

# 7c29fdc324b34c07b05637a7076e3184
#: ../../releases/1.0-porting-guide.txt:747
msgid "``backend.get_fulltext_search_sql``"
msgstr ""

# f433965e1274428f81e895efe055bab4
#: ../../releases/1.0-porting-guide.txt:747
msgid "``connection.ops.fulltext_search_sql``"
msgstr ""

# 345a393c2b7348d88506d827fd71b1b1
#: ../../releases/1.0-porting-guide.txt:748
msgid "``backend.get_last_insert_id``"
msgstr ""

# f0e8b1860bdb4619a1ceef2384c51fad
#: ../../releases/1.0-porting-guide.txt:748
msgid "``connection.ops.last_insert_id``"
msgstr ""

# e3790897b4624f0cb4a5ea75cf5dfe23
#: ../../releases/1.0-porting-guide.txt:749
msgid "``backend.get_limit_offset_sql``"
msgstr ""

# e6254b2b24a04e0e93ed80a1846978ee
#: ../../releases/1.0-porting-guide.txt:749
msgid "``connection.ops.limit_offset_sql``"
msgstr ""

# 0d8432702f5848c6bd6551252ba053ab
#: ../../releases/1.0-porting-guide.txt:750
msgid "``backend.get_max_name_length``"
msgstr ""

# 97a14b90870545df846710ba066de553
#: ../../releases/1.0-porting-guide.txt:750
msgid "``connection.ops.max_name_length``"
msgstr ""

# 5e02ed56eabe43f59effafb07ebddf72
#: ../../releases/1.0-porting-guide.txt:751
msgid "``backend.get_pk_default_value``"
msgstr ""

# 7920396e774c40ddbdf4fd9452045c28
#: ../../releases/1.0-porting-guide.txt:751
msgid "``connection.ops.pk_default_value``"
msgstr ""

# 456aead52dc047c5a73743d6360678fa
#: ../../releases/1.0-porting-guide.txt:752
msgid "``backend.get_random_function_sql``"
msgstr ""

# 65657237029447eca48364ad6875d039
#: ../../releases/1.0-porting-guide.txt:752
msgid "``connection.ops.random_function_sql``"
msgstr ""

# a0f9fa4adb32479c9498ef57e1e41607
#: ../../releases/1.0-porting-guide.txt:753
msgid "``backend.get_sql_flush``"
msgstr ""

# 2528e7e5f7044d6a9f47d49cdef137ed
#: ../../releases/1.0-porting-guide.txt:753
msgid "``connection.ops.sql_flush``"
msgstr ""

# 7fc00026a2124fe1bdb85130bf46f86a
#: ../../releases/1.0-porting-guide.txt:754
msgid "``backend.get_sql_sequence_reset``"
msgstr ""

# 1a9b385b782241ce851e5ae1adc2ca9b
#: ../../releases/1.0-porting-guide.txt:754
msgid "``connection.ops.sequence_reset_sql``"
msgstr ""

# 9ad0fca87b974925bc85178166be2a2c
#: ../../releases/1.0-porting-guide.txt:755
msgid "``backend.get_start_transaction_sql``"
msgstr ""

# e9c41d8395de4d58bf4a9beeee597188
#: ../../releases/1.0-porting-guide.txt:755
msgid "``connection.ops.start_transaction_sql``"
msgstr ""

# 5307b484188541fe90d164d8fd9c0f40
#: ../../releases/1.0-porting-guide.txt:756
msgid "``backend.get_tablespace_sql``"
msgstr ""

# 7686d236946f41dcb8fbd0341f79712a
#: ../../releases/1.0-porting-guide.txt:756
msgid "``connection.ops.tablespace_sql``"
msgstr ""

# 83091e35219741c2bf24355817ffb989
#: ../../releases/1.0-porting-guide.txt:757
msgid "``backend.quote_name``"
msgstr ""

# 28c22aaf71834ab4a8a41a220b1fcf61
#: ../../releases/1.0-porting-guide.txt:757
msgid "``connection.ops.quote_name``"
msgstr ""

# 71987c0e746e4c01a3d748de5b38ca8c
#: ../../releases/1.0-porting-guide.txt:758
msgid "``backend.get_query_set_class``"
msgstr ""

# 62ddcd5d86554b12bcee6959a50e9811
#: ../../releases/1.0-porting-guide.txt:758
msgid "``connection.ops.query_set_class``"
msgstr ""

# e1421a0eed58477d92a751a375ec58ba
#: ../../releases/1.0-porting-guide.txt:759
msgid "``backend.get_field_cast_sql``"
msgstr ""

# 3efb7f892d3c463ba23f52edf8714bd9
#: ../../releases/1.0-porting-guide.txt:759
msgid "``connection.ops.field_cast_sql``"
msgstr ""

# 9de0ce0fa5264ea4818c901e878e1970
#: ../../releases/1.0-porting-guide.txt:760
msgid "``backend.get_drop_sequence``"
msgstr ""

# 8f3ce53f595f4a59946dd75c7cbf06db
#: ../../releases/1.0-porting-guide.txt:760
msgid "``connection.ops.drop_sequence_sql``"
msgstr ""

# a685ee9fdc524f3ab616d42a54f8639c
#: ../../releases/1.0-porting-guide.txt:761
msgid "``backend.OPERATOR_MAPPING``"
msgstr ""

# 20b833b4ae4347409db5785871c7bde8
#: ../../releases/1.0-porting-guide.txt:761
msgid "``connection.operators``"
msgstr ""

# 7d7cc89d56c44b648eed60346151af7b
#: ../../releases/1.0-porting-guide.txt:762
msgid "``backend.allows_group_by_ordinal``"
msgstr ""

# f9ad4ede0d7140528227514b645569bb
#: ../../releases/1.0-porting-guide.txt:762
msgid "``connection.features.allows_group_by_ordinal``"
msgstr ""

# ac107916bdbe491c97bd1c17dee2d82b
#: ../../releases/1.0-porting-guide.txt:763
msgid "``backend.allows_unique_and_pk``"
msgstr ""

# e9cd5362104b48c5ae1c01ec5eb42cdb
#: ../../releases/1.0-porting-guide.txt:763
msgid "``connection.features.allows_unique_and_pk``"
msgstr ""

# a024e8eb14574d348bee951235b113d9
#: ../../releases/1.0-porting-guide.txt:764
msgid "``backend.autoindexes_primary_keys``"
msgstr ""

# 06fd86841dd547c4943c8fb5ccc22a75
#: ../../releases/1.0-porting-guide.txt:764
msgid "``connection.features.autoindexes_primary_keys``"
msgstr ""

# 881a2ba7b9134281a7b1aa953f7cf171
#: ../../releases/1.0-porting-guide.txt:765
msgid "``backend.needs_datetime_string_cast``"
msgstr ""

# bc4634680b0e4dfbaea16892e6290b3f
#: ../../releases/1.0-porting-guide.txt:765
msgid "``connection.features.needs_datetime_string_cast``"
msgstr ""

# 4a1a8db1b1824de7bf3efa55bbdc4d2f
#: ../../releases/1.0-porting-guide.txt:766
msgid "``backend.needs_upper_for_iops``"
msgstr ""

# e558035c566640669f97666636703cb5
#: ../../releases/1.0-porting-guide.txt:766
msgid "``connection.features.needs_upper_for_iops``"
msgstr ""

# f6c8111591a04ddd950ef47f6a4d469c
#: ../../releases/1.0-porting-guide.txt:767
msgid "``backend.supports_constraints``"
msgstr ""

# f1850594e8ba4c0cbcf9a0179505f909
#: ../../releases/1.0-porting-guide.txt:767
msgid "``connection.features.supports_constraints``"
msgstr ""

# 79a7eaf0aee34267b9a52f00ceb8d1bf
#: ../../releases/1.0-porting-guide.txt:768
msgid "``backend.supports_tablespaces``"
msgstr ""

# 0b474b11ecd24ad4bd30bdff9406fabd
#: ../../releases/1.0-porting-guide.txt:768
msgid "``connection.features.supports_tablespaces``"
msgstr ""

# b34bacf949e64bcbb959c4828c31569f
#: ../../releases/1.0-porting-guide.txt:769
msgid "``backend.uses_case_insensitive_names``"
msgstr ""

# eaa69a96b9dc450eb8523e316d90d94a
#: ../../releases/1.0-porting-guide.txt:769
msgid "``connection.features.uses_case_insensitive_names``"
msgstr ""

# 8833457f2c7e434da19037ed9ad2ed4a
#: ../../releases/1.0-porting-guide.txt:770
msgid "``backend.uses_custom_queryset``"
msgstr ""

# 32d0f462ab4b454a841cbea9d55bc7a5
#: ../../releases/1.0-porting-guide.txt:770
msgid "``connection.features.uses_custom_queryset``"
msgstr ""

# 121ba7a562534ad9a6092333160cff44
#: ../../releases/1.0.1.txt:3
msgid "Django 1.0.1 release notes"
msgstr ""

# 6719384077d44cda95825c1057bd87e9
#: ../../releases/1.0.1.txt:5
msgid "Welcome to Django 1.0.1!"
msgstr ""

# 645dc002dc1e4afd84a9e9a96c66a525
#: ../../releases/1.0.1.txt:7
msgid ""
"This is the first \"bugfix\" release in the Django 1.0 series, improving the "
"stability and performance of the Django 1.0 codebase. As such, Django 1.0.1 "
"contains no new features (and, pursuant to :doc:`our compatibility policy </"
"misc/api-stability/>`, maintains backwards compatibility with Django 1.0), "
"but does contain a number of fixes and other improvements. Django 1.0.1 is a "
"recommended upgrade for any development or deployment currently using or "
"targeting Django 1.0."
msgstr ""

# cb3957c3bef14de6818112ae15570bda
#: ../../releases/1.0.1.txt:17
msgid "Fixes and improvements in Django 1.0.1"
msgstr ""

# 530cef5a45b34f5397f82654706d6f88
#: ../../releases/1.0.1.txt:19
msgid ""
"Django 1.0.1 contains over two hundred fixes to the original Django 1.0 "
"codebase; full details of every fix are available in `the Subversion log of "
"the 1.0.X branch`_, but here are some of the highlights:"
msgstr ""

# dd89f052eda14eb7a1bda7c2fd47f69d
#: ../../releases/1.0.1.txt:24
msgid ""
"Several fixes in ``django.contrib.comments``, pertaining to RSS feeds of "
"comments, default ordering of comments and the XHTML and "
"internationalization of the default templates for comments."
msgstr ""

# a22ebbabb3054163b6dcde124c650453
#: ../../releases/1.0.1.txt:28
msgid ""
"Multiple fixes for Django's support of Oracle databases, including "
"pagination support for GIS QuerySets, more efficient slicing of results and "
"improved introspection of existing databases."
msgstr ""

# 4f0cd91bbad8429f98ad0c8770d410a2
#: ../../releases/1.0.1.txt:32
msgid ""
"Several fixes for query support in the Django object-relational mapper, "
"including repeated setting and resetting of ordering and fixes for working "
"with ``INSERT``-only queries."
msgstr ""

# a3ae413dc92049dd9795f4319fa5949c
#: ../../releases/1.0.1.txt:36
msgid "Multiple fixes for inline forms in formsets."
msgstr ""

# 0172442dc5b648adb77ea09534300e5b
#: ../../releases/1.0.1.txt:38
msgid ""
"Multiple fixes for ``unique`` and ``unique_together`` model constraints in "
"automatically-generated forms."
msgstr ""

# 9dfc537b77d049d9be611a06bee45022
#: ../../releases/1.0.1.txt:41
msgid ""
"Fixed support for custom callable ``upload_to`` declarations when handling "
"file uploads through automatically-generated forms."
msgstr ""

# 1e6de9dc6c8f4c988f7e3a844d7e1360
#: ../../releases/1.0.1.txt:44
msgid ""
"Fixed support for sorting an admin change list based on a callable "
"attributes in ``list_display``."
msgstr ""

# 85116f8df83743938b016620eae6e967
#: ../../releases/1.0.1.txt:47
msgid ""
"A fix to the application of autoescaping for literal strings passed to the "
"``join`` template filter. Previously, literal strings passed to ``join`` "
"were automatically escaped, contrary to :ref:`the documented behavior for "
"autoescaping and literal strings <string-literals-and-automatic-escaping>`. "
"Literal strings passed to ``join`` are no longer automatically escaped, "
"meaning you must now manually escape them; this is an incompatibility if you "
"were relying on this bug, but not if you were relying on escaping behaving "
"as documented."
msgstr ""

# bc885aedecf04fa8a3d59c9f4afcf5ad
#: ../../releases/1.0.1.txt:57
msgid ""
"Improved and expanded translation files for many of the languages Django "
"supports by default."
msgstr ""

# 9b6db95959964831a845aabfabb8599a
#: ../../releases/1.0.1.txt:60
msgid ""
"And as always, a large number of improvements to Django's documentation, "
"including both corrections to existing documents and expanded and new "
"documentation."
msgstr ""

# 409c9d4d2fd1456aa19f2860f02ec661
#: ../../releases/1.0.2.txt:3
msgid "Django 1.0.2 release notes"
msgstr ""

# d2ba21086c68498a9e9e979745d15d1b
#: ../../releases/1.0.2.txt:5
msgid "Welcome to Django 1.0.2!"
msgstr ""

# 7591b45efe944edca46c96548c341961
#: ../../releases/1.0.2.txt:7
msgid ""
"This is the second \"bugfix\" release in the Django 1.0 series, improving "
"the stability and performance of the Django 1.0 codebase. As such, Django "
"1.0.2 contains no new features (and, pursuant to :doc:`our compatibility "
"policy </misc/api-stability>`, maintains backwards compatibility with Django "
"1.0.0), but does contain a number of fixes and other improvements. Django "
"1.0.2 is a recommended upgrade for any development or deployment currently "
"using or targeting Django 1.0."
msgstr ""

# 0ed2384dc4f24ecbb67a59397a3d4b0b
#: ../../releases/1.0.2.txt:17
msgid "Fixes and improvements in Django 1.0.2"
msgstr ""

# e26b0e01e51441fda780012cebd1d739
#: ../../releases/1.0.2.txt:19
msgid ""
"The primary reason behind this release is to remedy an issue in the recently-"
"released Django 1.0.1; the packaging scripts used for Django 1.0.1 omitted "
"some directories from the final release package, including one directory "
"required by ``django.contrib.gis`` and part of Django's unit-test suite."
msgstr ""

# e2b376642ece43c98ba8c72ee98d1cf1
#: ../../releases/1.0.2.txt:25
msgid ""
"Django 1.0.2 contains updated packaging scripts, and the release package "
"contains the directories omitted from Django 1.0.1. As such, this release "
"contains all of the fixes and improvements from Django 1.0.1; see :doc:`the "
"Django 1.0.1 release notes </releases/1.0.1>` for details."
msgstr ""

# 291316534c7d4f0bac7a87101b580b67
#: ../../releases/1.0.2.txt:31
msgid "Additionally, in the period since Django 1.0.1 was released:"
msgstr ""

# 6e52694f2dcc49cf913c46c3c69f5f9b
#: ../../releases/1.0.2.txt:33
msgid "Updated Hebrew and Danish translations have been added."
msgstr ""

# 7e08dded74ef441fb776e8cfcfdc90c6
#: ../../releases/1.0.2.txt:35
msgid ""
"The default ``__repr__`` method of Django models has been made more robust "
"in the face of bad Unicode data coming from the ``__unicode__`` method; "
"rather than raise an exception in such cases, ``repr()`` will now contain "
"the string \"[Bad Unicode data]\" in place of the invalid Unicode."
msgstr ""

# e7f3321de2ed4805bf6f7290a9a6be3b
#: ../../releases/1.0.2.txt:41
msgid ""
"A bug involving the interaction of Django's ``SafeUnicode`` class and the "
"MySQL adapter has been resolved; ``SafeUnicode`` instances (generated, for "
"example, by template rendering) can now be assigned to model attributes and "
"saved to MySQL without requiring an explicit intermediate cast to "
"``unicode``."
msgstr ""

# ab0832ed27fb4518b9e2b9e1780d66a1
#: ../../releases/1.0.2.txt:47
msgid ""
"A bug affecting filtering on a nullable ``DateField`` in SQLite has been "
"resolved."
msgstr ""

# 1f4c9aeb3a2d4430b39c3d622460233b
#: ../../releases/1.0.2.txt:50
msgid ""
"Several updates and improvements have been made to Django's documentation."
msgstr ""

# 0f8ac4474678487096f6ed6836bef42f
#: ../../releases/1.1.txt:3
msgid "Django 1.1 release notes"
msgstr ""

# f6abec5500254978a6000e706347837e
#: ../../releases/1.1.txt:6
msgid "July 29, 2009"
msgstr ""

# 0425a9f7bb434f019f537467d1d97f60
#: ../../releases/1.1.txt:8
msgid "Welcome to Django 1.1!"
msgstr ""

# 1c02316a8ea2470e8eb5f5a438f16a83
#: ../../releases/1.1.txt:10
msgid ""
"Django 1.1 includes a number of nifty `new features`_, lots of bug fixes, "
"and an easy upgrade path from Django 1.0."
msgstr ""

# fcd8f778fe8d41e9943b051b350cce05
#: ../../releases/1.1.txt:18
msgid "Backwards-incompatible changes in 1.1"
msgstr ""

# bc97bc4ad624430db234cf24f093d714
#: ../../releases/1.1.txt:20
msgid ""
"Django has a policy of :doc:`API stability </misc/api-stability>`. This "
"means that, in general, code you develop against Django 1.0 should continue "
"to work against 1.1 unchanged. However, we do sometimes make backwards-"
"incompatible changes if they're necessary to resolve bugs, and there are a "
"handful of such (minor) changes between Django 1.0 and Django 1.1."
msgstr ""

# ba59f9f86d3f499398a84cdea4ee42ce
#: ../../releases/1.1.txt:26
msgid ""
"Before upgrading to Django 1.1 you should double-check that the following "
"changes don't impact you, and upgrade your code if they do."
msgstr ""

# 53fafe7743ba4d17845ef07dc4d11e40
#: ../../releases/1.1.txt:30
msgid "Changes to constraint names"
msgstr ""

# 256ebdb326094d32b03c99e7960f62fc
#: ../../releases/1.1.txt:32
msgid ""
"Django 1.1 modifies the method used to generate database constraint names so "
"that names are consistent regardless of machine word size. This change is "
"backwards incompatible for some users."
msgstr ""

# de4b6e2068404a698aa121e40ccf0964
#: ../../releases/1.1.txt:36
msgid ""
"If you are using a 32-bit platform, you're off the hook; you'll observe no "
"differences as a result of this change."
msgstr ""

# 0e88f9905c1445548f46747f1a3b55ab
#: ../../releases/1.1.txt:39
msgid ""
"However, **users on 64-bit platforms may experience some problems** using "
"the :djadmin:`reset` management command. Prior to this change, 64-bit "
"platforms would generate a 64-bit, 16 character digest in the constraint "
"name; for example::"
msgstr ""

# 714a1caf640747c080aac645ec035b00
#: ../../releases/1.1.txt:46
msgid ""
"Following this change, all platforms, regardless of word size, will generate "
"a 32-bit, 8 character digest in the constraint name; for example::"
msgstr ""

# 07710cfab2944b76b8bd7fd4bb7c837b
#: ../../releases/1.1.txt:51
msgid ""
"As a result of this change, you will not be able to use the :djadmin:`reset` "
"management command on any table made by a 64-bit machine. This is because "
"the the new generated name will not match the historically generated name; "
"as a result, the SQL constructed by the reset command will be invalid."
msgstr ""

# aa7f4c396e704397acd301073537bf4b
#: ../../releases/1.1.txt:56
msgid ""
"If you need to reset an application that was created with 64-bit "
"constraints, you will need to manually drop the old constraint prior to "
"invoking :djadmin:`reset`."
msgstr ""

# 88fbce7d3b8c46dc8d35cec00613e4bb
#: ../../releases/1.1.txt:61
msgid "Test cases are now run in a transaction"
msgstr ""

# c35db59c350b4477a558ba8047ae4c76
#: ../../releases/1.1.txt:63
msgid ""
"Django 1.1 runs tests inside a transaction, allowing better test performance "
"(see `test performance improvements`_ for details)."
msgstr ""

# 3a2fc4095f4b4a85a5bc74ff24183fa8
#: ../../releases/1.1.txt:66
msgid ""
"This change is slightly backwards incompatible if existing tests need to "
"test transactional behavior, if they rely on invalid assumptions about the "
"test environment, or if they require a specific test case ordering."
msgstr ""

# b74df5cc476d4dbba21aea655ecb8bb2
#: ../../releases/1.1.txt:70
msgid ""
"For these cases, :class:`~django.test.TransactionTestCase` can be used "
"instead. This is a just a quick fix to get around test case errors revealed "
"by the new rollback approach; in the long-term tests should be rewritten to "
"correct the test case."
msgstr ""

# 9e789778d5204a0c90eccd40479b303f
#: ../../releases/1.1.txt:78
msgid "Removed ``SetRemoteAddrFromForwardedFor`` middleware"
msgstr ""

# d58673d3f59b41c38dc7d057abdf4e8d
#: ../../releases/1.1.txt:80
msgid ""
"For convenience, Django 1.0 included an optional middleware class -- "
"``django.middleware.http.SetRemoteAddrFromForwardedFor`` -- which updated "
"the value of ``REMOTE_ADDR`` based on the HTTP ``X-Forwarded-For`` header "
"commonly set by some proxy configurations."
msgstr ""

# c7185c873a234b6995cfa489c2cd8208
#: ../../releases/1.1.txt:85
msgid ""
"It has been demonstrated that this mechanism cannot be made reliable enough "
"for general-purpose use, and that (despite documentation to the contrary) "
"its inclusion in Django may lead application developers to assume that the "
"value of ``REMOTE_ADDR`` is \"safe\" or in some way reliable as a source of "
"authentication."
msgstr ""

# eba3a8098bf44cdbb134409ef5fb87dc
#: ../../releases/1.1.txt:90
msgid ""
"While not directly a security issue, we've decided to remove this middleware "
"with the Django 1.1 release. It has been replaced with a class that does "
"nothing other than raise a ``DeprecationWarning``."
msgstr ""

# d78535f02ad94e978a0db7b5f6694065
#: ../../releases/1.1.txt:94
msgid "If you've been relying on this middleware, the easiest upgrade path is:"
msgstr ""

# 8e7f2889c578444f86880e85ea64da2a
#: ../../releases/1.1.txt:96
msgid "Examine `the code as it existed before it was removed`__."
msgstr ""

# 2fe7186fc3ae48c780cd81b6cd1e5d0e
#: ../../releases/1.1.txt:98
msgid ""
"Verify that it works correctly with your upstream proxy, modifying it to "
"support your particular proxy (if necessary)."
msgstr ""

# 6191bd8b9fe54b6ab7a71d20177d7396
#: ../../releases/1.1.txt:101
msgid ""
"Introduce your modified version of ``SetRemoteAddrFromForwardedFor`` as a "
"piece of middleware in your own project."
msgstr ""

# 07072f362b32420aa9df63ce123ac640
#: ../../releases/1.1.txt:107
msgid "Names of uploaded files are available later"
msgstr ""

# 2f597d0b96fc40a2b3b7ca6d0b5b8a40
#: ../../releases/1.1.txt:111
msgid ""
"In Django 1.0, files uploaded and stored in a model's :class:`FileField` "
"were saved to disk before the model was saved to the database. This meant "
"that the actual file name assigned to the file was available before saving. "
"For example, it was available in a model's pre-save signal handler."
msgstr ""

# 98dba16c8bb64e3b9fa4a1ba582c4e23
#: ../../releases/1.1.txt:116
msgid ""
"In Django 1.1 the file is saved as part of saving the model in the database, "
"so the actual file name used on disk cannot be relied on until *after* the "
"model has been saved."
msgstr ""

# 926f48bd27204a43905fd5a522651c7c
#: ../../releases/1.1.txt:121
msgid "Changes to how model formsets are saved"
msgstr ""

# 74908397e348415ea6615d6bd7f9e4d6
#: ../../releases/1.1.txt:125
msgid ""
"In Django 1.1, :class:`BaseModelFormSet` now calls :meth:`ModelForm.save()`."
msgstr ""

# e436c59ee25d41ce9a7e1c8734740b45
#: ../../releases/1.1.txt:127
msgid ""
"This is backwards-incompatible if you were modifying ``self.initial`` in a "
"model formset's ``__init__``, or if you relied on the internal "
"``_total_form_count`` or ``_initial_form_count`` attributes of BaseFormSet. "
"Those attributes are now public methods."
msgstr ""

# 39bb8146c26b4c129325bbbb7d14dadb
#: ../../releases/1.1.txt:133
msgid "Fixed the ``join`` filter's escaping behavior"
msgstr ""

# 6cd5eef38e5d482680d64eb5a54060bf
#: ../../releases/1.1.txt:135
msgid ""
"The :ttag:`join` filter no longer escapes the literal value that is passed "
"in for the connector."
msgstr ""

# f7700a551b85466ea9796586d72e5564
#: ../../releases/1.1.txt:138
msgid ""
"This is backwards incompatible for the special situation of the literal "
"string containing one of the five special HTML characters. Thus, if you were "
"writing ``{{ foo|join:\"&\" }}``, you now have to write ``{{ foo|join:\"&amp;"
"\" }}``."
msgstr ""

# 24d59ebdb4c248609b931bc6794821b7
#: ../../releases/1.1.txt:142
msgid ""
"The previous behavior was a bug and contrary to what was documented and "
"expected."
msgstr ""

# e5412da4e3064f988d69550bd4708e99
#: ../../releases/1.1.txt:146
msgid "Permanent redirects and the ``redirect_to()`` generic view"
msgstr ""

# 48242f379c2f436a9b9ae2a900e1e985
#: ../../releases/1.1.txt:148
msgid ""
"Django 1.1 adds a ``permanent`` argument to the :func:`django.views.generic."
"simple.redirect_to()` view. This is technically backwards-incompatible if "
"you were using the ``redirect_to`` view with a format-string key called "
"'permanent', which is highly unlikely."
msgstr ""

# b9cea29c1e54481a965ce7fdbef642d9
#: ../../releases/1.1.txt:156
msgid "Features deprecated in 1.1"
msgstr ""

# b3e20d76befd4554a4247c79a42146ff
#: ../../releases/1.1.txt:158
msgid "One feature has been marked as deprecated in Django 1.1:"
msgstr ""

# ba8b78608d3c4967b4c497f2c0dd363f
#: ../../releases/1.1.txt:160
msgid ""
"You should no longer use ``AdminSite.root()`` to register that admin views. "
"That is, if your URLconf contains the line::"
msgstr ""

# 6a1037b15f2444b5a8f86a8679544152
#: ../../releases/1.1.txt:165
msgid "You should change it to read::"
msgstr ""

# 0c12949e69514855a1a5c23bb9be3321
#: ../../releases/1.1.txt:169
msgid ""
"You should begin to remove use of this feature from your code immediately."
msgstr ""

# 4d66c40d2d3d40f98748fc5c0ed2e4ba
#: ../../releases/1.1.txt:171
msgid ""
"``AdminSite.root`` will raise a ``PendingDeprecationWarning`` if used in "
"Django 1.1. This warning is hidden by default. In Django 1.2, this warning "
"will be upgraded to a ``DeprecationWarning``, which will be displayed "
"loudly. Django 1.3 will remove ``AdminSite.root()`` entirely."
msgstr ""

# 629fd6dae6ab4314adf7300bdcc56c39
#: ../../releases/1.1.txt:176
msgid ""
"For more details on our deprecation policies and strategy, see :doc:`/"
"internals/release-process`."
msgstr ""

# 3fbdb7d3a7fa4772b49829e909a5444b
#: ../../releases/1.1.txt:180
msgid "What's new in Django 1.1"
msgstr ""

# 5da4f915c30c4a2684c4587a98f43958
#: ../../releases/1.1.txt:182
msgid ""
"Quite a bit: since Django 1.0, we've made 1,290 code commits, fixed 1,206 "
"bugs, and added roughly 10,000 lines of documentation."
msgstr ""

# 8300fc962fd94efbb9b31c765f25211e
#: ../../releases/1.1.txt:185
msgid "The major new features in Django 1.1 are:"
msgstr ""

# bc8619e5c40f432c8c362a4ab2a9c15a
# 94fea7aac140459d91ae38048f5b2b46
#: ../../releases/1.1.txt:188 ../../releases/1.1-alpha-1.txt:22
msgid "ORM improvements"
msgstr ""

# 36e5bb06717a4e61b014f870bad2c4c0
#: ../../releases/1.1.txt:192
msgid ""
"Two major enhancements have been added to Django's object-relational mapper "
"(ORM): aggregate support, and query expressions."
msgstr ""

# e4da63beb88249f98be804981e452dbb
# 3fb5168069974ac1840bb784b570b5ca
#: ../../releases/1.1.txt:196 ../../releases/1.1-alpha-1.txt:28
msgid "Aggregate support"
msgstr ""

# a11a0636a22245e69b630c31f8267782
# 9465c1d63a3844d9b04fffae8077523d
#: ../../releases/1.1.txt:198 ../../releases/1.1-alpha-1.txt:32
msgid ""
"It's now possible to run SQL aggregate queries (i.e. ``COUNT()``, ``MAX()``, "
"``MIN()``, etc.) from within Django's ORM. You can choose to either return "
"the results of the aggregate directly, or else annotate the objects in a :"
"class:`QuerySet` with the results of the aggregate query."
msgstr ""

# 05e7ac9551db44caae7ad629b34f0079
#: ../../releases/1.1.txt:203
msgid ""
"This feature is available as new :meth:`QuerySet.aggregate()`` and :meth:"
"`QuerySet.annotate()`` methods, and is covered in detail in :doc:`the ORM "
"aggregation documentation </topics/db/aggregation>`."
msgstr ""

# f83bf4353997433f861f5981eef2982b
# 4c19d33ab01f444cbea3d503da05ac63
#: ../../releases/1.1.txt:208 ../../releases/1.1-alpha-1.txt:42
msgid "Query expressions"
msgstr ""

# d293c0c60fbb45ec82a2234dccf6b58c
# 9cb00d5358824af0b591c4694edcc5bb
#: ../../releases/1.1.txt:210 ../../releases/1.1-alpha-1.txt:44
msgid ""
"Queries can now refer to a another field on the query and can traverse "
"relationships to refer to fields on related models. This is implemented in "
"the new :class:`F` object; for full details, including examples, consult "
"the :ref:`documentation for F expressions <query-expressions>`."
msgstr ""

# a1e0d3846ba2419bbb4a8078dd50891b
# 9a491075798f46638b2254c2f03b7279
#: ../../releases/1.1.txt:216 ../../releases/1.1-beta-1.txt:27
msgid "Model improvements"
msgstr ""

# 94b19776d8a84285885d91fa45ded4cb
# 7715301bb6304eb5bd67621ff6f60e53
#: ../../releases/1.1.txt:218 ../../releases/1.1-beta-1.txt:31
msgid "A number of features have been added to Django's model layer:"
msgstr ""

# 0db286ad1e664538ba8bf69e1872486b
# 07fd3ee2e4d2412d91fb032a13e9ae06
#: ../../releases/1.1.txt:221 ../../releases/1.1-beta-1.txt:34
msgid "\"Unmanaged\" models"
msgstr ""

# b8754be14f884157bcfd568daaaf65a8
#: ../../releases/1.1.txt:223
msgid ""
"You can now control whether or not Django manages the life-cycle of the "
"database tables for a model using the :attr:`~Options.managed` model option. "
"This defaults to ``True``, meaning that Django will create the appropriate "
"database tables in :djadmin:`syncdb` and remove them as part of the :djadmin:"
"`reset` command. That is, Django *manages* the database table's lifecycle."
msgstr ""

# 496e8ca2395141c2a2ac4b1bf6c273e4
# 0440c98ebcec4efe949eca63f3ee2a50
#: ../../releases/1.1.txt:229 ../../releases/1.1-beta-1.txt:42
msgid ""
"If you set this to ``False``, however, no database table creating or "
"deletion will be automatically performed for this model. This is useful if "
"the model represents an existing table or a database view that has been "
"created by some other means."
msgstr ""

# 4f0634034e664c689cac541fd87c740c
# 904cc073ac42432c96f9ab35ad277cb5
#: ../../releases/1.1.txt:234 ../../releases/1.1-beta-1.txt:47
msgid ""
"For more details, see the documentation for the :attr:`~Options.managed` "
"option."
msgstr ""

# ec15c25099fb4a378d85184596a27bf7
# 00f54f1477124d67839d25b7169e3354
#: ../../releases/1.1.txt:238 ../../releases/1.1-beta-1.txt:51
msgid "Proxy models"
msgstr ""

# 6492297322c74bfeb55cfff3bc9a0297
#: ../../releases/1.1.txt:240
msgid ""
"You can now create :ref:`proxy models <proxy-models>`: subclasses of "
"existing models that only add Python-level (rather than database-level) "
"behavior and aren't represented by a new table. That is, the new model is a "
"*proxy* for some underlying model, which stores all the real data."
msgstr ""

# 9e45a793141945858d2a20bd91c14628
# 00c762bf81e24817a0baba9e519c9e67
#: ../../releases/1.1.txt:245 ../../releases/1.1-beta-1.txt:58
msgid ""
"All the details can be found in the :ref:`proxy models documentation <proxy-"
"models>`. This feature is similar on the surface to unmanaged models, so the "
"documentation has an explanation of :ref:`how proxy models differ from "
"unmanaged models <proxy-vs-unmanaged-models>`."
msgstr ""

# 858adcb37c1f435d9e3254915c48d3bd
# 9dcce3c9c67849239bdbfb2aeab33ed9
#: ../../releases/1.1.txt:251 ../../releases/1.1-beta-1.txt:64
msgid "Deferred fields"
msgstr ""

# 89d045b790204d219088f3e40befad64
# 085e69fd1aa34277b7458c22bc214c60
#: ../../releases/1.1.txt:253 ../../releases/1.1-beta-1.txt:66
msgid ""
"In some complex situations, your models might contain fields which could "
"contain a lot of data (for example, large text fields), or require expensive "
"processing to convert them to Python objects. If you know you don't need "
"those particular fields, you can now tell Django not to retrieve them from "
"the database."
msgstr ""

# a1cbffa0948d41b88774b520cc9ce1a9
# ed8b97141fc54ad6bed8d2e7089482b5
#: ../../releases/1.1.txt:259 ../../releases/1.1-beta-1.txt:72
msgid ""
"You'll do this with the new queryset methods :meth:`~django.db.models.query."
"QuerySet.defer` and :meth:`~django.db.models.query.QuerySet.only`."
msgstr ""

# 0c0f2e516138480ea509bbb6398f51ea
# 9e27228c116841a794b23e32a7888943
#: ../../releases/1.1.txt:264 ../../releases/1.1-beta-1.txt:100
msgid "Testing improvements"
msgstr ""

# c6299384a51e4445a9f5b65530551efd
#: ../../releases/1.1.txt:266
msgid ""
"A few notable improvements have been made to the :doc:`testing framework </"
"topics/testing>`."
msgstr ""

# 6c2d55b974864443aef4b6bc2e3ce858
#: ../../releases/1.1.txt:270
msgid "Test performance improvements"
msgstr ""

# 17621de0bf06416b9650cfd871748fc6
# d2a09796390e49bdaab29588e2c80106
#: ../../releases/1.1.txt:274 ../../releases/1.1-alpha-1.txt:54
msgid ""
"Tests written using Django's :doc:`testing framework </topics/testing>` now "
"run dramatically faster (as much as 10 times faster in many cases)."
msgstr ""

# 8af840ed539441969d76b8737d3f0f19
# cf44b8572ab04c26929768f8ac8ba39f
#: ../../releases/1.1.txt:277 ../../releases/1.1-alpha-1.txt:57
msgid ""
"This was accomplished through the introduction of transaction-based tests: "
"when using :class:`django.test.TestCase`, your tests will now be run in a "
"transaction which is rolled back when finished, instead of by flushing and "
"re-populating the database. This results in an immense speedup for most "
"types of unit tests. See the documentation for :class:`TestCase` and :class:"
"`TransactionTestCase` for a full description, and some important notes on "
"database support."
msgstr ""

# f0e8936687d344f7b6bd913699c2d74e
#: ../../releases/1.1.txt:285
msgid "Test client improvements"
msgstr ""

# a3a6de95ad034f93aa37c2265357222d
#: ../../releases/1.1.txt:289
msgid ""
"A couple of small -- but highly useful -- improvements have been made to the "
"test client:"
msgstr ""

# d2d80eb9282846529d3b2ad858752aca
# 055f2d0ea22f4095a714d88a08132a5b
#: ../../releases/1.1.txt:292 ../../releases/1.1-beta-1.txt:107
msgid ""
"The test :class:`Client` now can automatically follow redirects with the "
"``follow`` argument to :meth:`Client.get` and :meth:`Client.post`. This "
"makes testing views that issue redirects simpler."
msgstr ""

# 3fb89137517545a1a003367fb8a08b49
#: ../../releases/1.1.txt:296
msgid ""
"It's now easier to get at the template context in the response returned the "
"test client: you'll simply access the context as ``request.context[key]``. "
"The old way, which treats ``request.context`` as a list of contexts, one for "
"each rendered template in the inheritance chain, is still available if you "
"need it."
msgstr ""

# 8119a9b87b16426b98aa51b90960a27b
# 54da04848d194f5e8102bd142e32f672
#: ../../releases/1.1.txt:303 ../../releases/1.1-beta-1.txt:77
msgid "New admin features"
msgstr ""

# 49de2c3965db4c69a0db00b82804f0f1
#: ../../releases/1.1.txt:305
msgid ""
"Django 1.1 adds a couple of nifty new features to Django's admin interface:"
msgstr ""

# 20a01cc505d14451b32734584a1e24ca
# ca32a90cad1a4fc0aab8b86c95bb4474
#: ../../releases/1.1.txt:308 ../../releases/1.1-beta-1.txt:83
msgid "Editable fields on the change list"
msgstr ""

# 7c12b67165de4badb095bff8e06d1ca6
# d06906d4ee684b03a6980848812a0ec8
#: ../../releases/1.1.txt:310 ../../releases/1.1-beta-1.txt:85
msgid ""
"You can now make fields editable on the admin list views via the new :ref:"
"`list_editable <admin-list-editable>` admin option. These fields will show "
"up as form widgets on the list pages, and can be edited and saved in bulk."
msgstr ""

# d6ed6a2df35c4f7980d44fde62ead151
# aa091edb0e1d42699f0943c48ba57806
#: ../../releases/1.1.txt:315 ../../releases/1.1-beta-1.txt:90
msgid "Admin \"actions\""
msgstr ""

# c34344c8553f4df58ee431f87cfda065
# 2e520ac9592043caa034699a9d7422fb
#: ../../releases/1.1.txt:317 ../../releases/1.1-beta-1.txt:92
msgid ""
"You can now define :doc:`admin actions </ref/contrib/admin/actions>` that "
"can perform some action to a group of models in bulk. Users will be able to "
"select objects on the change list page and then apply these bulk actions to "
"all selected objects."
msgstr ""

# e3e3833dc9b243f798298468100e576a
# a2545cdf5c994bd58b1b0bc9b2ccabbc
#: ../../releases/1.1.txt:322 ../../releases/1.1-beta-1.txt:96
msgid ""
"Django ships with one pre-defined admin action to delete a group of objects "
"in one fell swoop."
msgstr ""

# 4c0f194d7ac345a7953255f42c3c88be
# 193ad7ab732e4d778376c2bf8649ec0f
#: ../../releases/1.1.txt:326 ../../releases/1.1-beta-1.txt:118
msgid "Conditional view processing"
msgstr ""

# a57ac2978ccd43d6b7a98bd2e05e6462
# 8354908e03c9472f9f1c07ac33ca1cf6
#: ../../releases/1.1.txt:328 ../../releases/1.1-beta-1.txt:120
msgid ""
"Django now has much better support for :doc:`conditional view processing </"
"topics/conditional-view-processing>` using the standard ``ETag`` and ``Last-"
"Modified`` HTTP headers. This means you can now easily short-circuit view "
"processing by testing less-expensive conditions. For many views this can "
"lead to a serious improvement in speed and reduction in bandwidth."
msgstr ""

# 19cc55794f0f40269900c838bd80e034
# 2f7b7001181c477bad10340788f9372f
#: ../../releases/1.1.txt:335 ../../releases/1.1-rc-1.txt:36
msgid "URL namespaces"
msgstr ""

# 5f20b4bde8664f18b30626c13b402be5
#: ../../releases/1.1.txt:337
msgid ""
"Django 1.1 improves :ref:`named URL patterns <naming-url-patterns>` with the "
"introduction of URL \"namespaces.\""
msgstr ""

# 8b62838184fa4dcbbf9bae0da53aff04
#: ../../releases/1.1.txt:340
msgid ""
"In short, this feature allows the same group of URLs, from the same "
"application, to be included in a Django URLConf multiple times, with varying "
"(and potentially nested) named prefixes which will be used when performing "
"reverse resolution. In other words, reusable applications like Django's "
"admin interface may be registered multiple times without URL conflicts."
msgstr ""

# f74f22d4ca0b4453a442ae7912d49e5e
#: ../../releases/1.1.txt:346
msgid ""
"For full details, see :ref:`the documentation on defining URL namespaces "
"<topics-http-defining-url-namespaces>`."
msgstr ""

# 4bc879d2f7ff4fdc9ee2bb0498f7b096
# f72240b458514c5a90a44e80ddf30c6e
# 5dfdcd1881b04a63bcf5b0b6a577d0c6
# 81ec8c7cf64549219a17769d8eddfa02
# 09c67ef67432442dbf469174d7a2d6b4
# b59fcecb869b496b928fb28bed284a55
#: ../../releases/1.1.txt:350 ../../releases/1.2.txt:341
#: ../../releases/1.2.txt:1084 ../../releases/1.2.4.txt:76
#: ../../releases/1.3.txt:261 ../../releases/1.3.txt:805
msgid "GeoDjango"
msgstr ""

# 7957a2151b444e7c8c4d1c3b83e07178
#: ../../releases/1.1.txt:352
msgid ""
"In Django 1.1, GeoDjango_ (i.e. ``django.contrib.gis``) has several new "
"features:"
msgstr ""

# 4c2cd30584484dd5a21d749e1657f892
#: ../../releases/1.1.txt:355
msgid ""
"Support for SpatiaLite_ -- a spatial database for SQLite -- as a spatial "
"backend."
msgstr ""

# 27a063c3c88043fd8b8e0b9f469178e6
#: ../../releases/1.1.txt:358
msgid ""
"Geographic aggregates (``Collect``, ``Extent``, ``MakeLine``, ``Union``) and "
"``F`` expressions."
msgstr ""

# 43a87e818b054170a45287549d898787
#: ../../releases/1.1.txt:361
msgid ""
"New ``GeoQuerySet`` methods: ``collect``, ``geojson``, and ``snap_to_grid``."
msgstr ""

# af71eb8ae13140b1aa80adefe058c2c8
#: ../../releases/1.1.txt:364
msgid "A new list interface methods for ``GEOSGeometry`` objects."
msgstr ""

# ba537dd148254f41b9df260b4574cb5c
#: ../../releases/1.1.txt:366
msgid "For more details, see the `GeoDjango documentation`_."
msgstr ""

# db5ce4d76ceb4d7996f509eddae73b45
# ab58fd2b916c4894b93c7c866070c3a1
# 8dccedebb5e24317abf86f5b6ff04593
#: ../../releases/1.1.txt:373 ../../releases/1.1-alpha-1.txt:65
#: ../../releases/1.1-beta-1.txt:127
msgid "Other improvements"
msgstr ""

# dbfd8ceb17d040f3b41eeeeea0e3f2e2
# 12cb16ca5fbc4cf6be968415a61b37b1
#: ../../releases/1.1.txt:375 ../../releases/1.1-alpha-1.txt:67
msgid "Other new features and changes introduced since Django 1.0 include:"
msgstr ""

# 6e9b7a98257f40ab864a66ee435bc2f4
# 4290e7a48a70479bbd23bf382953c8fa
#: ../../releases/1.1.txt:377 ../../releases/1.1-alpha-1.txt:69
msgid ""
"The :doc:`CSRF protection middleware </ref/contrib/csrf>` has been split "
"into two classes -- ``CsrfViewMiddleware`` checks incoming requests, and "
"``CsrfResponseMiddleware`` processes outgoing responses. The combined "
"``CsrfMiddleware`` class (which does both) remains for backwards-"
"compatibility, but using the split classes is now recommended in order to "
"allow fine-grained control of when and where the CSRF processing takes place."
msgstr ""

# a5d1a5199e8a478c96fa2a11dac93ca0
# 0280ccbce61a410c9b42cf034db2e9be
#: ../../releases/1.1.txt:385 ../../releases/1.1-alpha-1.txt:77
msgid ""
":func:`~django.core.urlresolvers.reverse` and code which uses it (e.g., the "
"``{% url %}`` template tag) now works with URLs in Django's administrative "
"site, provided that the admin URLs are set up via ``include(admin.site.urls)"
"`` (sending admin requests to the ``admin.site.root`` view still works, but "
"URLs in the admin will not be \"reversible\" when configured this way)."
msgstr ""

# 02b274736c814d95ba8c02fa9ef0d37e
# 1d3335fe88e04a27a13e54375b96ae8a
#: ../../releases/1.1.txt:391 ../../releases/1.1-alpha-1.txt:83
msgid ""
"The ``include()`` function in Django URLconf modules can now accept "
"sequences of URL patterns (generated by ``patterns()``) in addition to "
"module names."
msgstr ""

# e9836083382345c4ab40a9d569f4bb56
# 2598ce55c76241ea8af44449c4bcbdc9
#: ../../releases/1.1.txt:394 ../../releases/1.1-alpha-1.txt:86
msgid ""
"Instances of Django forms (see :doc:`the forms overview </topics/forms/"
"index>`) now have two additional methods, ``hidden_fields()`` and "
"``visible_fields()``, which return the list of hidden -- i.e., ``<input type="
"\"hidden\">`` -- and visible fields on the form, respectively."
msgstr ""

# 6b08da13406f486dbb14ac65f5e1dd18
# 85f6d30b5b31470b9faef5e0fd25c080
#: ../../releases/1.1.txt:399 ../../releases/1.1-alpha-1.txt:91
msgid ""
"The ``redirect_to`` generic view (see :doc:`the generic views documentation "
"</ref/generic-views>`) now accepts an additional keyword argument "
"``permanent``. If ``permanent`` is ``True``, the view will emit an HTTP "
"permanent redirect (status code 301). If ``False``, the view will emit an "
"HTTP temporary redirect (status code 302)."
msgstr ""

# 0e878046ca8b43f59cfb96e01b78815d
# 8e38b78178fd4f858edbc994635ce147
#: ../../releases/1.1.txt:405 ../../releases/1.1-alpha-1.txt:97
msgid ""
"A new database lookup type -- ``week_day`` -- has been added for "
"``DateField`` and ``DateTimeField``. This type of lookup accepts a number "
"between 1 (Sunday) and 7 (Saturday), and returns objects where the field "
"value matches that day of the week. See :ref:`the full list of lookup types "
"<field-lookups>` for details."
msgstr ""

# 32168a84e99842168233a5658093ea9f
# 260b1dae0bd34950a1fc432e1e242118
#: ../../releases/1.1.txt:411 ../../releases/1.1-alpha-1.txt:103
msgid ""
"The ``{% for %}`` tag in Django's template language now accepts an optional "
"``{% empty %}`` clause, to be displayed when ``{% for %}`` is asked to loop "
"over an empty sequence. See :doc:`the list of built-in template tags </ref/"
"templates/builtins>` for examples of this."
msgstr ""

# 9f0673af6a4445aa9f5c1d6ac87097c1
# 128588643007415fa9f3e2aa56f55596
#: ../../releases/1.1.txt:416 ../../releases/1.1-beta-1.txt:132
msgid ""
"The :djadmin:`dumpdata` management command now accepts individual model "
"names as arguments, allowing you to export the data just from particular "
"models."
msgstr ""

# 07f3fe90c1d74f4d8d136b62466ce04f
# 6b2b153266ec497fa098ea287c1c6cb6
#: ../../releases/1.1.txt:420 ../../releases/1.1-beta-1.txt:136
msgid ""
"There's a new :tfilter:`safeseq` template filter which works just like :"
"tfilter:`safe` for lists, marking each item in the list as safe."
msgstr ""

# a2f895e65bcf4f59834507b9f2a6c926
# 6644a47335c545ccb3a37445d567c7e6
#: ../../releases/1.1.txt:423 ../../releases/1.1-beta-1.txt:139
msgid ""
":doc:`Cache backends </topics/cache>` now support ``incr()`` and ``decr()`` "
"commands to increment and decrement the value of a cache key. On cache "
"backends that support atomic increment/decrement -- most notably, the "
"memcached backend -- these operations will be atomic, and quite fast."
msgstr ""

# 03b3eacdcc494ee2818bceba13e995d0
# 5161cfbeef674ec29107d4d069e9958c
#: ../../releases/1.1.txt:429 ../../releases/1.1-beta-1.txt:145
msgid ""
"Django now can :doc:`easily delegate authentication to the Web server </"
"howto/auth-remote-user>` via a new authentication backend that supports the "
"standard ``REMOTE_USER`` environment variable used for this purpose."
msgstr ""

# f8117f04d7d74cea9f311a4ac7dc20f7
# ae08dbaf72c9433aa732a41f44b7ecb6
#: ../../releases/1.1.txt:433 ../../releases/1.1-beta-1.txt:149
msgid ""
"There's a new :func:`django.shortcuts.redirect` function that makes it "
"easier to issue redirects given an object, a view name, or a URL."
msgstr ""

# 515609c40e894c3e9064a53373142e6a
# 617bf2df39df4971ab8e61f71725fa16
#: ../../releases/1.1.txt:436 ../../releases/1.1-beta-1.txt:152
msgid ""
"The ``postgresql_psycopg2`` backend now supports :ref:`native PostgreSQL "
"autocommit <postgresql-notes>`. This is an advanced, PostgreSQL-specific "
"feature, that can make certain read-heavy applications a good deal faster."
msgstr ""

# 272db1dcda7243fe81730935b4882782
#: ../../releases/1.1.txt:442
msgid "What's next?"
msgstr ""

# 8412850a33434b56ba1f1f936dc87e0e
#: ../../releases/1.1.txt:444
msgid ""
"We'll take a short break, and then work on Django 1.2 will begin -- no rest "
"for the weary! If you'd like to help, discussion of Django development, "
"including progress toward the 1.2 release, takes place daily on the django-"
"developers mailing list:"
msgstr ""

# b855398ab02d4f2ebf6f424e803d9271
#: ../../releases/1.1.txt:451
msgid ""
"... and in the ``#django-dev`` IRC channel on ``irc.freenode.net``. Feel "
"free to join the discussions!"
msgstr ""

# 52f84cb258c44717af9d43425720ccbd
# 562b513eb8b446049296e6ec8a5824cb
# fecc619b5d4040b7819ad16bfa8dfd50
# 3df490d82dad424d87b90a1dbe422ae6
# a9b5a3f3131f472d88626b6bca1a525d
# 7b457cdd3ec946bd8dff6eb03db3da78
# a871e9f274a64ce78477f6b48d42506f
# cc5ab522d774441db643e80acc55ae67
# 4f8d2844662d4d32a588af6b3ea76c2b
# 3480f44d75d74a9b9d60443acb0461db
# 3f168b36a2db4165908cb844df8dc7d4
#: ../../releases/1.1.txt:457 ../../releases/1.1-alpha-1.txt:154
#: ../../releases/1.1-beta-1.txt:199 ../../releases/1.1-rc-1.txt:105
#: ../../releases/1.2-alpha-1.txt:579 ../../releases/1.2-beta-1.txt:164
#: ../../releases/1.2-rc-1.txt:97 ../../releases/1.3-alpha-1.txt:393
#: ../../releases/1.3-beta-1.txt:229 ../../releases/1.4-alpha-1.txt:1115
#: ../../releases/1.4-beta-1.txt:1187
msgid ":doc:`How to contribute to Django </internals/contributing/index>`"
msgstr ""

# 5c01d137189b458c97a9a04edff33529
#: ../../releases/1.1.txt:463
msgid "And that's the way it is."
msgstr ""

# e563fd2efede451699705571f51ba11d
#: ../../releases/1.1-alpha-1.txt:3
msgid "Django 1.1 alpha 1 release notes"
msgstr ""

# b790df246b1449b8be41e1309ac7bb0c
#: ../../releases/1.1-alpha-1.txt:5
msgid "February 23, 2009"
msgstr ""

# b62f573a23244bbda9afb63df928e8f0
#: ../../releases/1.1-alpha-1.txt:7
msgid "Welcome to Django 1.1 alpha 1!"
msgstr ""

# 4dfba61d72824340a9f46f392b5c41d9
#: ../../releases/1.1-alpha-1.txt:9
msgid ""
"This is the first in a series of preview/development releases leading up to "
"the eventual release of Django 1.1, currently scheduled to take place in "
"April 2009. This release is primarily targeted at developers who are "
"interested in trying out new features and testing the Django codebase to "
"help identify and resolve bugs prior to the final 1.1 release."
msgstr ""

# e69917164e60451f9b8fd8428cad9b01
#: ../../releases/1.1-alpha-1.txt:19
msgid "What's new in Django 1.1 alpha 1"
msgstr ""

# 6ac5f14eb6804697bb16e054beac714d
#: ../../releases/1.1-alpha-1.txt:24
msgid ""
"Two major enhancements have been added to Django's object-relational mapper "
"(ORM):"
msgstr ""

# b78318d06e574a9c9bd0115b65ad563b
#: ../../releases/1.1-alpha-1.txt:37
msgid ""
"This feature is available as new :meth:`QuerySet.aggregate()`` and :meth:"
"`QuerySet.annotate()`` methods, and is covered in detail in :doc:`the ORM "
"aggregation documentation </topics/db/aggregation>`"
msgstr ""

# 4b002c05e0ed4b0d9be0be5f25245682
#: ../../releases/1.1-alpha-1.txt:50
msgid "Performance improvements"
msgstr ""

# bcd1c6f73a9c442293f2518e7c9f23e5
# 55806e3c3e624da18449d30835699feb
# 92e000f7448847c6b38684dcb7319d63
#: ../../releases/1.1-alpha-1.txt:109 ../../releases/1.1-beta-1.txt:158
#: ../../releases/1.1-rc-1.txt:64
msgid "The Django 1.1 roadmap"
msgstr ""

# caac7d8dc2e1410d854349abd9eee03f
#: ../../releases/1.1-alpha-1.txt:111
msgid ""
"Before Django 1.1 goes final, several other preview/development releases "
"will be made available. The current schedule consists of at least the "
"following:"
msgstr ""

# b9237bd8bed54fa6a78bd0ea53266afe
#: ../../releases/1.1-alpha-1.txt:114
msgid ""
"Week of *March 20, 2009:* Django 1.1 beta 1, at which point Django 1.1 will "
"be in \"feature freeze\": no new features will be implemented for 1.1 past "
"that point, and all new feature work will be deferred to Django 1.2."
msgstr ""

# 45a46c236c6f4e6795359f56889445c0
# 603359ad9f044d378e30b33808756fcf
#: ../../releases/1.1-alpha-1.txt:119 ../../releases/1.1-beta-1.txt:164
msgid ""
"Week of *April 2, 2009:* Django 1.1 release candidate. At this point all "
"strings marked for translation must freeze to allow translations to be "
"submitted in advance of the final release."
msgstr ""

# f9e9f9f20dc14ff58b6df0887be83a08
# 547e36d1c6f24fca8da1651dc47614f9
#: ../../releases/1.1-alpha-1.txt:123 ../../releases/1.1-beta-1.txt:168
msgid "Week of *April 13, 2009:* Django 1.1 final."
msgstr ""

# 9b0213eb2f0d42b689bdd1ecb41265fc
#: ../../releases/1.1-alpha-1.txt:125
msgid ""
"If deemed necessary, additional alpha, beta or release candidate packages "
"will be issued prior to the final 1.1 release."
msgstr ""

# 510131c584b944f3ad612b70586cedcc
#: ../../releases/1.1-alpha-1.txt:131
msgid ""
"In order to provide a high-quality 1.1 release, we need your help. Although "
"this alpha release is, again, *not* intended for production use, you can "
"help the Django team by trying out the alpha codebase in a safe test "
"environment and reporting any bugs or issues you encounter. The Django "
"ticket tracker is the central place to search for open issues:"
msgstr ""

# b45582a3622b48f892c8d661217a7357
# 2aff2cc9ac814271972d736cb7b08bf2
# 4c7611d073be4a22b991eba34afdb32b
#: ../../releases/1.1-alpha-1.txt:142 ../../releases/1.1-beta-1.txt:187
#: ../../releases/1.1-rc-1.txt:92
msgid ""
"Additionally, discussion of Django development, including progress toward "
"the 1.1 release, takes place daily on the django-developers mailing list:"
msgstr ""

# c0121045256c4052b32c07943a3bebeb
# 432c03ba21c24a1986c4ce57e4c58eef
# 2d19481645284006be1c3cd3061f7d3d
# e52f4b9dec6e46b09f21143bae2361c9
# 0bb6bf088c5a473a9d94da3c2e4fc23c
# 7ff732cf4b8c48d2a4c626b450eaeff0
# 49bab505ca6f4e9d929b116b6fc77116
# 2f8af0453a2843f2912aeeaeda66aca1
# 776037179aee4fc0b25a4ba35907f077
# 135370b1ee21438093da0dc4afb5073f
#: ../../releases/1.1-alpha-1.txt:147 ../../releases/1.1-beta-1.txt:192
#: ../../releases/1.1-rc-1.txt:98 ../../releases/1.2-alpha-1.txt:572
#: ../../releases/1.2-beta-1.txt:157 ../../releases/1.2-rc-1.txt:90
#: ../../releases/1.3-alpha-1.txt:386 ../../releases/1.3-beta-1.txt:222
#: ../../releases/1.4-alpha-1.txt:1108 ../../releases/1.4-beta-1.txt:1180
msgid ""
"... and in the ``#django-dev`` IRC channel on ``irc.freenode.net``. If "
"you're interested in helping out with Django's development, feel free to "
"join the discussions there."
msgstr ""

# ca03778cba5d4eef986b9b011d21151c
# 3e973d799a1c4a39967d59a4bc670249
#: ../../releases/1.1-alpha-1.txt:160 ../../releases/1.1-beta-1.txt:205
msgid ""
"Development sprints for Django 1.1 will also be taking place at PyCon US "
"2009, on the dedicated sprint days (March 30 through April 2), and anyone "
"who wants to help out is welcome to join in, either in person at PyCon or "
"virtually in the IRC channel or on the mailing list."
msgstr ""

# 54995978cb344566a34106211d1e71cd
#: ../../releases/1.1-beta-1.txt:3
msgid "Django 1.1 beta 1 release notes"
msgstr ""

# afa3c5051ba9405e924c41149613a997
#: ../../releases/1.1-beta-1.txt:5
msgid "March 23, 2009"
msgstr ""

# c2fdc0fa88604c3fa2cb569d0475f67b
#: ../../releases/1.1-beta-1.txt:7
msgid "Welcome to Django 1.1 beta 1!"
msgstr ""

# 1c779ae89e6e4e90a9258bff5c1abf7e
#: ../../releases/1.1-beta-1.txt:9
msgid ""
"This is the second in a series of preview/development releases leading up to "
"the eventual release of Django 1.1, currently scheduled to take place in "
"April 2009. This release is primarily targeted at developers who are "
"interested in trying out new features and testing the Django codebase to "
"help identify and resolve bugs prior to the final 1.1 release."
msgstr ""

# 73579fd7537a4fc18a1ccdb1b7c2e52c
#: ../../releases/1.1-beta-1.txt:19
msgid "What's new in Django 1.1 beta 1"
msgstr ""

# 015d47b333f14bf6af996da66979394f
#: ../../releases/1.1-beta-1.txt:23
msgid ""
"The :doc:`1.1 alpha release notes </releases/1.1-alpha-1>`, which has a list "
"of everything new between Django 1.0 and Django 1.1 alpha."
msgstr ""

# f1bfc57effe844e4b80a6f173eb8018f
#: ../../releases/1.1-beta-1.txt:36
msgid ""
"You can now control whether or not Django creates database tables for a "
"model using the :attr:`~Options.managed` model option. This defaults to "
"``True``, meaning that Django will create the appropriate database tables "
"in :djadmin:`syncdb` and remove them as part of :djadmin:`reset` command. "
"That is, Django *manages* the database table's lifecycle."
msgstr ""

# 2b33f637093d41ac943650f220dc9503
#: ../../releases/1.1-beta-1.txt:53
msgid ""
"You can now create :ref:`proxy models <proxy-models>`: subclasses of "
"existing models that only add Python behavior and aren't represented by a "
"new table. That is, the new model is a *proxy* for some underlying model, "
"which stores all the real data."
msgstr ""

# 7f810e7e57cb411eb71442879afd7bf6
#: ../../releases/1.1-beta-1.txt:79
msgid ""
"Since 1.1 alpha, a couple of new features have been added to Django's admin "
"application:"
msgstr ""

# c1ecaea0a7e14ce8bbf5f1f4598ab99f
#: ../../releases/1.1-beta-1.txt:104
msgid ""
"A couple of small but very useful improvements have been made to the :doc:"
"`testing framework </topics/testing>`:"
msgstr ""

# 938ebb8a11af41a58c7cb305c334084c
#: ../../releases/1.1-beta-1.txt:111
msgid ""
"It's now easier to get at the template context in the response returned the "
"test client: you'll simply access the context as ``request.context[key]``. "
"The old way, which treats ``request.context`` as a list of contexts, one for "
"each rendered template, is still available if you need it."
msgstr ""

# dd02be754b1a48ba9ce26378c8206123
#: ../../releases/1.1-beta-1.txt:129
msgid ""
"Finally, a grab-bag of other neat features made their way into this beta "
"release, including:"
msgstr ""

# 1987d83c171c45f79d6477d0a874c8fc
#: ../../releases/1.1-beta-1.txt:160
msgid ""
"Before Django 1.1 goes final, at least one other preview/development release "
"will be made available. The current schedule consists of at least the "
"following:"
msgstr ""

# 8e95f16fdc80422bb723ed04bcbf1be5
#: ../../releases/1.1-beta-1.txt:170
msgid ""
"If deemed necessary, additional beta or release candidate packages will be "
"issued prior to the final 1.1 release."
msgstr ""

# bae540de43894747a30114b8df36e547
#: ../../releases/1.1-beta-1.txt:176
msgid ""
"In order to provide a high-quality 1.1 release, we need your help. Although "
"this beta release is, again, *not* intended for production use, you can help "
"the Django team by trying out the beta codebase in a safe test environment "
"and reporting any bugs or issues you encounter. The Django ticket tracker is "
"the central place to search for open issues:"
msgstr ""

# a1c56c19f0bb4b8bbce536adc5883ec0
#: ../../releases/1.1-rc-1.txt:3
msgid "Django 1.1 RC 1 release notes"
msgstr ""

# 7a5d77715f5b47f0a458ba31d86e8e75
#: ../../releases/1.1-rc-1.txt:6
msgid "July 21, 2009"
msgstr ""

# 2550ceef077d4525934d4b9ec56ddf6e
#: ../../releases/1.1-rc-1.txt:8
msgid "Welcome to the first Django 1.1 release candidate!"
msgstr ""

# c0b3d983feab45c49dc8066dfd46985e
#: ../../releases/1.1-rc-1.txt:10
msgid ""
"This is the third -- and likely last -- in a series of preview/development "
"releases leading up to the eventual release of Django 1.1, currently "
"scheduled to take place approximately one week after this release candidate. "
"This release is targeted primarily at developers who are interested in "
"trying out new features and testing the Django codebase to help identify and "
"resolve any critical bugs prior to the final 1.1 release."
msgstr ""

# a29b719430fd489088f21743759079c2
# edf2cb4917ee462495f53bbb0468116d
#: ../../releases/1.1-rc-1.txt:18 ../../releases/1.2-rc-1.txt:17
msgid ""
"As such, this release is not yet intended for production use, and any such "
"use is discouraged."
msgstr ""

# 0a54e25716c34a2c8c2aef5489480879
#: ../../releases/1.1-rc-1.txt:23
msgid "What's new in Django 1.1 RC 1"
msgstr ""

# 33f4544d1fb4482f93a16a0f186b65ca
#: ../../releases/1.1-rc-1.txt:25
msgid ""
"The Django codebase has -- with one exception -- been in feature freeze "
"since the first 1.1 beta release, and so this release candidate contains "
"only one new feature (see below); work leading up to this release candidate "
"has instead been focused on bugfixing, particularly on the new features "
"introduced prior to the 1.1 beta."
msgstr ""

# 358ce642084747fb91e5338d73f7de98
#: ../../releases/1.1-rc-1.txt:31
msgid ""
"For an overview of those features, consult :doc:`the Django 1.1 beta release "
"notes </releases/1.1-beta-1>`."
msgstr ""

# adc7f6ed93684b5d86e8e6c28446574c
#: ../../releases/1.1-rc-1.txt:38
msgid ""
"The 1.1 beta release introduced the ability to use reverse URL resolution "
"with Django's admin application, which exposed a set of :ref:`named URLs "
"<naming-url-patterns>`. Unfortunately, achieving consistent and correct "
"reverse resolution for admin URLs proved extremely difficult, and so one "
"additional feature was added to Django to resolve this issue: URL namespaces."
msgstr ""

# 648f1102c47e40eb8e6ba8b487385f2c
#: ../../releases/1.1-rc-1.txt:45
msgid ""
"In short, this feature allows the same group of URLs, from the same "
"application, to be included in a Django URLConf multiple times, with varying "
"(and potentially nested) named prefixes which will be used when performing "
"reverse resolution. For full details, see :ref:`the documentation on "
"defining URL namespaces <topics-http-defining-url-namespaces>`."
msgstr ""

# 651144e1023c481d9bae30f0761fe363
#: ../../releases/1.1-rc-1.txt:52
msgid ""
"Due to the changes needed to support this feature, the URL pattern names "
"used when reversing admin URLs have changed since the 1.1 beta release; if "
"you were developing applications which took advantage of this new feature, "
"you will need to update your code to reflect the new names (for most "
"purposes, changing ``admin_`` to ``admin:`` in names to be reversed will "
"suffice). For a full list of URL pattern names used by the admin and "
"information on how namespaces are applied to them, consult the documentation "
"on :ref:`reversing admin URLs <admin-reverse-urls>`."
msgstr ""

# eda557d542114b48b3d7a5217fb41cb0
#: ../../releases/1.1-rc-1.txt:66
msgid ""
"As of this release candidate, Django 1.1 is in both feature freeze and "
"\"string freeze\" -- all strings marked for translation in the Django "
"codebase will retain their current form in the final Django 1.1 release. "
"Only critical release-blocking bugs will receive attention between now and "
"the final 1.1 release."
msgstr ""

# 6bc1ff3ceafd4f788cfee29feb9aef14
#: ../../releases/1.1-rc-1.txt:72
msgid ""
"If no such bugs are discovered, Django 1.1 will be released approximately "
"one week after this release candidate, on or about July 28, 2009."
msgstr ""

# 8aad6b4406cd4f54b2185b0963442453
#: ../../releases/1.1-rc-1.txt:80
msgid ""
"In order to provide a high-quality 1.1 release, we need your help. Although "
"this release candidate is, again, *not* intended for production use, you can "
"help the Django team by trying out this release candidate in a safe testing "
"environment and reporting any bugs or issues you encounter. The Django "
"ticket tracker is the central place to search for open issues:"
msgstr ""

# f4f28d38ef42419eabb297298379f82f
# 8fcb5de1bcda4d76a65477d8ae70e0fd
#: ../../releases/1.1-rc-1.txt:89 ../../releases/1.2-rc-1.txt:81
msgid ""
"Please open a new ticket only if no existing ticket corresponds to a problem "
"you're running into."
msgstr ""

# 64d6b685d67d475aae7442c4174d2ea6
#: ../../releases/1.1.2.txt:3
msgid "Django 1.1.2 release notes"
msgstr ""

# 93c3a867aa8f461eb325e3b2f73bc325
#: ../../releases/1.1.2.txt:5
msgid "Welcome to Django 1.1.2!"
msgstr ""

# f79a5aaee309489e8ffa8acb6c9cd0a3
#: ../../releases/1.1.2.txt:7
msgid ""
"This is the second \"bugfix\" release in the Django 1.1 series, improving "
"the stability and performance of the Django 1.1 codebase."
msgstr ""

# 0b00ff1c2633493da1616fe7a4b783a9
#: ../../releases/1.1.2.txt:10
msgid ""
"Django 1.1.2 maintains backwards compatibility with Django 1.1.0, but "
"contain a number of fixes and other improvements. Django 1.1.2 is a "
"recommended upgrade for any development or deployment currently using or "
"targeting Django 1.1."
msgstr ""

# 3bf1c7fe6806400eb16759cbc280d1ae
# 7894834d626d429d8ecde803850d4942
# 737acfce92524a2daadd556150250177
#: ../../releases/1.1.2.txt:15 ../../releases/1.1.3.txt:15
#: ../../releases/1.1.4.txt:15
msgid ""
"For full details on the new features, backwards incompatibilities, and "
"deprecated features in the 1.1 branch, see the :doc:`/releases/1.1`."
msgstr ""

# 2acee0baf5c14372bdecffb0bfb88237
#: ../../releases/1.1.2.txt:19
msgid "Backwards-incompatible changes in 1.1.2"
msgstr ""

# 5b3f983a4cbf4fe5b5986fd3d1c55f24
# 03708c246dbd47d293c4878aefcf5ad6
# d3c998bdd99f462db1cc2d2821ac0980
#: ../../releases/1.1.2.txt:22 ../../releases/1.2.txt:675
#: ../../releases/1.2-alpha-1.txt:181
msgid "Test runner exit status code"
msgstr ""

# f73579dbaa4c4d1887952877afd78cee
# 9474db4ab0ad4546a7a66d09ad1a1587
#: ../../releases/1.1.2.txt:24 ../../releases/1.2-alpha-1.txt:183
msgid ""
"The exit status code of the test runners (``tests/runtests.py`` and ``python "
"manage.py test``) no longer represents the number of failed tests, since a "
"failure of 256 or more tests resulted in a wrong exit status code.  The exit "
"status code for the test runner is now 0 for success (no failing tests) and "
"1 for any number of test failures.  If needed, the number of test failures "
"can be found at the end of the test runner's output."
msgstr ""

# 38a6135032554d6eb2d80645050b0a19
# afae395bf24f4cf585683d750d42d927
# d1728993f0ff4a629060c6383a3940bf
#: ../../releases/1.1.2.txt:32 ../../releases/1.2.txt:685
#: ../../releases/1.2-beta-1.txt:66
msgid "Cookie encoding"
msgstr ""

# d4daa15c70d94767841d3e923e4dd7a1
#: ../../releases/1.1.2.txt:34
msgid ""
"To fix bugs with cookies in Internet Explorer, Safari, and possibly other "
"browsers, our encoding of cookie values was changed so that the characters "
"comma and semi-colon are treated as non-safe characters, and are therefore "
"encoded as ``\\054`` and ``\\073`` respectively.  This could produce "
"backwards incompatibilities, especially if you are storing comma or semi-"
"colon in cookies and have javascript code that parses and manipulates cookie "
"values client-side."
msgstr ""

# 02c9ac691e8e41ccb07cdf0f413c7be5
# 7245777c1bee45e7b1a9e475cccaffbf
# 22c651e57bd945efba8f5dc8f55af134
#: ../../releases/1.1.2.txt:43 ../../releases/1.2.2.txt:19
#: ../../releases/1.2.4.txt:53
msgid "One new feature"
msgstr ""

# 675d65fb890c440ab89ad4ce5cc57e06
#: ../../releases/1.1.2.txt:45
msgid ""
"Ordinarily, a point release would not include new features, but in the case "
"of Django 1.1.2, we have made an exception to this rule. Django 1.2 (the "
"next major release of Django) will contain a feature that will improve "
"protection against Cross-Site Request Forgery (CSRF) attacks. This feature "
"requires the use of a new :ttag:`csrf_token` template tag in all forms that "
"Django renders."
msgstr ""

# c8a1a61e5562483e90c2ee5034029436
#: ../../releases/1.1.2.txt:52
msgid ""
"To make it easier to support both 1.1.X and 1.2.X versions of Django with "
"the same templates, we have decided to introduce the :ttag:`csrf_token` "
"template tag to the 1.1.X branch. In the 1.1.X branch, :ttag:`csrf_token` "
"does nothing - it has no effect on templates or form processing. However, it "
"means that the same template will work with Django 1.2."
msgstr ""

# 83e12f1958f043e48f15e361e2df5894
#: ../../releases/1.1.3.txt:3
msgid "Django 1.1.3 release notes"
msgstr ""

# 2d2d6e85d61e4fd1a135e9f5e19911e6
#: ../../releases/1.1.3.txt:5
msgid "Welcome to Django 1.1.3!"
msgstr ""

# 7bd6eedc997c488e8fef4f136cc87868
#: ../../releases/1.1.3.txt:7
msgid ""
"This is the third \"bugfix\" release in the Django 1.1 series, improving the "
"stability and performance of the Django 1.1 codebase."
msgstr ""

# 463040e6582544eab08383e25b49ed47
#: ../../releases/1.1.3.txt:10
msgid ""
"With one exception, Django 1.1.3 maintains backwards compatibility with "
"Django 1.1.2. It also contains a number of fixes and other improvements. "
"Django 1.1.2 is a recommended upgrade for any development or deployment "
"currently using or targeting Django 1.1."
msgstr ""

# 2a6332bb096b4eb1a425fce1ef34de5b
# de771b2fefa3416b8be7777d7e3c8b36
# 1e41ee17ffb24b518bc3aacfffdf81ac
# b6c1b3e9209d4a6ba051f2368b3f5f01
#: ../../releases/1.1.3.txt:19 ../../releases/1.1.4.txt:19
#: ../../releases/1.2.4.txt:19 ../../releases/1.2.5.txt:19
msgid "Backwards incompatible changes"
msgstr ""

# 1bb0f559b4044f3da272ca7957721ba1
# 0d004dc2250a43d89f2437237bbd37b2
# 6e3fbbfbe7694b3c883e9cfba2906361
#: ../../releases/1.1.3.txt:22 ../../releases/1.2.4.txt:22
#: ../../releases/1.3.txt:352
msgid "Restricted filters in admin interface"
msgstr ""

# 58127d283db9460c9bbb019a2cedfb4b
# 40a9d1a50a154453b5e4573efa878329
#: ../../releases/1.1.3.txt:24 ../../releases/1.2.4.txt:24
msgid ""
"The Django administrative interface, django.contrib.admin, supports "
"filtering of displayed lists of objects by fields on the corresponding "
"models, including across database-level relationships. This is implemented "
"by passing lookup arguments in the querystring portion of the URL, and "
"options on the ModelAdmin class allow developers to specify particular "
"fields or relationships which will generate automatic links for filtering."
msgstr ""

# d8826440e3f143cd96f1788a6e0d6b96
# 0e550846472d4ecbaea65e5310d35695
#: ../../releases/1.1.3.txt:32 ../../releases/1.2.4.txt:32
msgid ""
"One historically-undocumented and -unofficially-supported feature has been "
"the ability for a user with sufficient knowledge of a model's structure and "
"the format of these lookup arguments to invent useful new filters on the fly "
"by manipulating the querystring."
msgstr ""

# 4e39e47fbc8a49d2a3f23ce1b3b5c3fd
# 2a07a9ce511f45868a5fa9a7d88cf34d
#: ../../releases/1.1.3.txt:37 ../../releases/1.2.4.txt:37
msgid ""
"However, it has been demonstrated that this can be abused to gain access to "
"information outside of an admin user's permissions; for example, an attacker "
"with access to the admin and sufficient knowledge of model structure and "
"relations could construct query strings which -- with repeated use of "
"regular-expression lookups supported by the Django database API -- expose "
"sensitive information such as users' password hashes."
msgstr ""

# 5f0b2e7c71f44dd690b2fc5b79d44fd1
# af85374de25d437b83295fc52aa7507b
#: ../../releases/1.1.3.txt:45 ../../releases/1.2.4.txt:45
msgid ""
"To remedy this, django.contrib.admin will now validate that querystring "
"lookup arguments either specify only fields on the model being viewed, or "
"cross relations which have been explicitly whitelisted by the application "
"developer using the pre-existing mechanism mentioned above. This is "
"backwards-incompatible for any users relying on the prior ability to insert "
"arbitrary lookups."
msgstr ""

# 766bd967ff2d4fec845bda1f263e81f6
#: ../../releases/1.1.4.txt:3
msgid "Django 1.1.4 release notes"
msgstr ""

# df29c10d8fd841de98cc874520e22560
#: ../../releases/1.1.4.txt:5
msgid "Welcome to Django 1.1.4!"
msgstr ""

# 08254c3424604c7280931b91671ad0c0
#: ../../releases/1.1.4.txt:7
msgid ""
"This is the fourth \"bugfix\" release in the Django 1.1 series, improving "
"the stability and performance of the Django 1.1 codebase."
msgstr ""

# ef39c5ac6b2c4ff0b6e839799576ecb8
#: ../../releases/1.1.4.txt:10
msgid ""
"With one exception, Django 1.1.4 maintains backwards compatibility with "
"Django 1.1.3. It also contains a number of fixes and other improvements. "
"Django 1.1.4 is a recommended upgrade for any development or deployment "
"currently using or targeting Django 1.1."
msgstr ""

# f7be4b3c6506462e8b36c653fef9a98e
# fb6b4359fd844e958711bb61931acf6a
#: ../../releases/1.1.4.txt:22 ../../releases/1.2.5.txt:22
msgid "CSRF exception for AJAX requests"
msgstr ""

# 1be44ac92c3742399868726996e327dd
# e6cce2a365a544f3be212a1bc62ba4c6
#: ../../releases/1.1.4.txt:24 ../../releases/1.2.5.txt:24
msgid ""
"Django includes a CSRF-protection mechanism, which makes use of a token "
"inserted into outgoing forms. Middleware then checks for the token's "
"presence on form submission, and validates it."
msgstr ""

# b7c6eca2179741cd89438ea711ced5ce
# 683dfbb09d5b4d1ba944b4b086971993
#: ../../releases/1.1.4.txt:28 ../../releases/1.2.5.txt:28
msgid ""
"Prior to Django 1.2.5, our CSRF protection made an exception for AJAX "
"requests, on the following basis:"
msgstr ""

# 3b8ee8d0dd1d48d38c8c535780266809
# ff101f0b581b4d5089cc75146a7107a6
#: ../../releases/1.1.4.txt:31 ../../releases/1.2.5.txt:31
msgid ""
"Many AJAX toolkits add an X-Requested-With header when using XMLHttpRequest."
msgstr ""

# 157f4d0f3bbe4511941a9592f3727065
# dd02a587a67048118df07646aab07174
#: ../../releases/1.1.4.txt:34 ../../releases/1.2.5.txt:34
msgid "Browsers have strict same-origin policies regarding XMLHttpRequest."
msgstr ""

# 2bbffb9601b647d086274ea63ba5645a
# f73c88881b8847ac9efea42659114e69
#: ../../releases/1.1.4.txt:37 ../../releases/1.2.5.txt:37
msgid ""
"In the context of a browser, the only way that a custom header of this "
"nature can be added is with XMLHttpRequest."
msgstr ""

# fd6417bde9934670ade977e02f45b8e3
# e1bcb9813bcf45278c284a754e5467d5
#: ../../releases/1.1.4.txt:40 ../../releases/1.2.5.txt:40
msgid ""
"Therefore, for ease of use, we did not apply CSRF checks to requests that "
"appeared to be AJAX on the basis of the X-Requested-With header. The Ruby on "
"Rails web framework had a similar exemption."
msgstr ""

# f5efc23f541c4db3a9db21d4d639335b
# e1fe78eaf2a24d4696c312ea1097975d
#: ../../releases/1.1.4.txt:44 ../../releases/1.2.5.txt:44
msgid ""
"Recently, engineers at Google made members of the Ruby on Rails development "
"team aware of a combination of browser plugins and redirects which can allow "
"an attacker to provide custom HTTP headers on a request to any website. This "
"can allow a forged request to appear to be an AJAX request, thereby "
"defeating CSRF protection which trusts the same-origin nature of AJAX "
"requests."
msgstr ""

# 3c992805b4e34cf893912f82c270c738
# 02e15f7842d4429f81500b2e9f9ae005
#: ../../releases/1.1.4.txt:51 ../../releases/1.2.5.txt:51
msgid ""
"Michael Koziarski of the Rails team brought this to our attention, and we "
"were able to produce a proof-of-concept demonstrating the same vulnerability "
"in Django's CSRF handling."
msgstr ""

# 83a3b759b9dd46868fe7be1e93be68ba
# d6a8897280be4405bb2adb4df19147af
#: ../../releases/1.1.4.txt:55 ../../releases/1.2.5.txt:55
msgid ""
"To remedy this, Django will now apply full CSRF validation to all requests, "
"regardless of apparent AJAX origin. This is technically backwards-"
"incompatible, but the security risks have been judged to outweigh the "
"compatibility concerns in this case."
msgstr ""

# e2907c95ea21489099cc5b6bca1e355f
# fb0538caec8c4bee898c9d02e97a0c42
#: ../../releases/1.1.4.txt:60 ../../releases/1.2.5.txt:60
msgid ""
"Additionally, Django will now accept the CSRF token in the custom HTTP "
"header X-CSRFTOKEN, as well as in the form submission itself, for ease of "
"use with popular JavaScript toolkits which allow insertion of custom headers "
"into all AJAX requests."
msgstr ""

# edee639f481b4814b02312a0f5bf8298
# ff81d38ee03d4f6b829888edb90df213
#: ../../releases/1.1.4.txt:65 ../../releases/1.2.5.txt:65
msgid ""
"Please see the :ref:`CSRF docs for example jQuery code <csrf-ajax>` that "
"demonstrates this technique, ensuring that you are looking at the "
"documentation for your version of Django, as the exact code necessary is "
"different for some older versions of Django."
msgstr ""

# 125894d0df88436ea7d1f0d2a3c96f0c
#: ../../releases/1.2.txt:3
msgid "Django 1.2 release notes"
msgstr ""

# 7e1035e7d2084aefbcd42430a44d2624
#: ../../releases/1.2.txt:5
msgid "*May 17, 2010.*"
msgstr ""

# 0499eb456418412b92a98bbd4443f0f9
#: ../../releases/1.2.txt:7
msgid "Welcome to Django 1.2!"
msgstr ""

# 68475692cf7a4c0881448e9c6c38455c
#: ../../releases/1.2.txt:9
msgid ""
"Nearly a year in the making, Django 1.2 packs an impressive list of `new "
"features`_ and lots of bug fixes. These release notes cover the new "
"features, as well as important changes you'll want to be aware of when "
"upgrading from Django 1.1 or older versions."
msgstr ""

# 9c2c288e436340649f62cce3b7772b70
# 09db376e4c424650b4fcb802661c183e
#: ../../releases/1.2.txt:17 ../../releases/1.3.txt:16
msgid "Overview"
msgstr ""

# af77f03f32de4fb68a6deda34c5186e9
#: ../../releases/1.2.txt:19
msgid "Django 1.2 introduces several large, important new features, including:"
msgstr ""

# af7ecf6b618e471bb4dc04972e60e976
#: ../../releases/1.2.txt:21
msgid ""
"Support for `multiple database connections`_ in a single Django instance."
msgstr ""

# 3e40b23efb594cb9ab12c42d9638382f
#: ../../releases/1.2.txt:23
msgid "`Model validation`_ inspired by Django's form validation."
msgstr ""

# ef80222d9f2f4b09b86a3603fcd6b849
#: ../../releases/1.2.txt:25
msgid ""
"Vastly `improved protection against Cross-Site Request Forgery`_ (CSRF)."
msgstr ""

# 84306d1119ce47e7a2607337f7cd3fb6
#: ../../releases/1.2.txt:27
msgid ""
"A new `user \"messages\" framework`_ with support for cookie- and session-"
"based message for both anonymous and authenticated users."
msgstr ""

# 8e8116b4a0d54f10a9cba96872d0df21
#: ../../releases/1.2.txt:30
msgid ""
"Hooks for `object-level permissions`_, `permissions for anonymous users`_, "
"and `more flexible username requirements`_."
msgstr ""

# cbfe9c099cfe48e78e2f15af9f269a26
#: ../../releases/1.2.txt:33
msgid "Customization of email sending via `email backends`_."
msgstr ""

# 0f23275c72254dc3b34af1f7438a3275
#: ../../releases/1.2.txt:35
msgid ""
"New :ref:`\"smart\" if template tag <new-in-1.2-smart-if>` which supports "
"comparison operators."
msgstr ""

# 80e20faac2d4477783be9d42199ec98d
#: ../../releases/1.2.txt:43
msgid ""
"These are just the highlights; full details and a complete list of features "
"`may be found below`_."
msgstr ""

# a1bdbbead218472398b68375ece40cde
#: ../../releases/1.2.txt:50
msgid ""
"`Django Advent`_ covered the release of Django 1.2 with a series of articles "
"and tutorials that cover some of the new features in depth."
msgstr ""

# e62c48d0596f41f68bd161c22b80812b
#: ../../releases/1.2.txt:55
msgid ""
"Wherever possible these features have been introduced in a backwards-"
"compatible manner per :doc:`our API stability policy </misc/api-stability>` "
"policy."
msgstr ""

# c2a69d637ff044869ac40999045d28c9
#: ../../releases/1.2.txt:58
msgid ""
"However, a handful of features *have* changed in ways that, for some users, "
"will be backwards-incompatible. The big changes are:"
msgstr ""

# bc8ef1e0b9a9419b8dc26985efb8f80d
#: ../../releases/1.2.txt:61
msgid "Support for Python 2.3 has been dropped. See the full notes below."
msgstr ""

# 37b25fabc41144da936b4d07fd06f264
#: ../../releases/1.2.txt:64
msgid ""
"The new CSRF protection framework is not backwards-compatible with the old "
"system. Users of the old system will not be affected until the old system is "
"removed in Django 1.4."
msgstr ""

# 90b2d31671bb4ea6bd73a7d5b1f35578
#: ../../releases/1.2.txt:68
msgid ""
"However, upgrading to the new CSRF protection framework requires a few "
"important backwards-incompatible changes, detailed in `CSRF Protection`_, "
"below."
msgstr ""

# b8675b1286b1486d844131d0554dc197
#: ../../releases/1.2.txt:72
msgid ""
"Authors of custom :class:`~django.db.models.Field` subclasses should be "
"aware that a number of methods have had a change in prototype, detailed "
"under `get_db_prep_*() methods on Field`_, below."
msgstr ""

# 20dc41285c834ce5be9feb56f8b6ac04
#: ../../releases/1.2.txt:76
msgid ""
"The internals of template tags have changed somewhat; authors of custom "
"template tags that need to store state (e.g. custom control flow tags) "
"should ensure that their code follows the new rules for `stateful template "
"tags`_"
msgstr ""

# debd0996afac4ba6a84a5f8db3787dbf
#: ../../releases/1.2.txt:81
msgid ""
"The :func:`~django.contrib.auth.decorators.user_passes_test`, :func:`~django."
"contrib.auth.decorators.login_required`, and :func:`~django.contrib.auth."
"decorators.permission_required`, decorators from :mod:`django.contrib.auth` "
"only apply to functions and no longer work on methods. There's a simple one-"
"line fix `detailed below`_."
msgstr ""

# 2b9d2f1efb9c4522aea28fb649fc7bd9
#: ../../releases/1.2.txt:89
msgid ""
"Again, these are just the big features that will affect the most users. "
"Users upgrading from previous versions of Django are heavily encouraged to "
"consult the complete list of :ref:`backwards-incompatible changes <backwards-"
"incompatible-changes-1.2>` and the list of :ref:`deprecated features "
"<deprecated-features-1.2>`."
msgstr ""

# 577ac6f45e814a79bd27906827e9a71d
# 90050fe2d57b4213a8c8df2c90f3de9c
# c46a56a5834549b385d7993179e16ccd
# 1947b5d8b6dd4760b9a89a433aa305eb
# 5c0e5b75605d4f7eb215aaa6d185707f
# a5e4b8c6d60f4f669ab12198a8effb2f
#: ../../releases/1.2.txt:96 ../../releases/1.2-rc-1.txt:28
#: ../../releases/1.3.txt:54 ../../releases/1.4.txt:19
#: ../../releases/1.4-alpha-1.txt:28 ../../releases/1.4-beta-1.txt:44
msgid "Python compatibility"
msgstr ""

# 621b38bd5a43418e8f68577c9021f647
# 128a6da773ca40cb97a87f6c2e799b14
#: ../../releases/1.2.txt:98 ../../releases/1.2-rc-1.txt:30
msgid ""
"While not a new feature, it's important to note that Django 1.2 introduces "
"the first shift in our Python compatibility policy since Django's initial "
"public debut. Previous Django releases were tested and supported on 2.x "
"Python versions from 2.3 up; Django 1.2, however, drops official support for "
"Python 2.3. As such, the minimum Python version required for Django is now "
"2.4, and Django is tested and supported on Python 2.4, 2.5 and 2.6, and will "
"be supported on the as-yet-unreleased Python 2.7."
msgstr ""

# 6b10955c42d048a29edc5cb255ae5956
# cc44d9dc4394494ba40fed08f9c68bb5
#: ../../releases/1.2.txt:107 ../../releases/1.2-rc-1.txt:39
msgid ""
"This change should affect only a small number of Django users, as most "
"operating-system vendors today are shipping Python 2.4 or newer as their "
"default version. If you're still using Python 2.3, however, you'll need to "
"stick to Django 1.1 until you can upgrade; per :doc:`our support policy </"
"internals/release-process>`, Django 1.1 will continue to receive security "
"support until the release of Django 1.3."
msgstr ""

# 6a4ed35e25c6426d8a358247efcaacc3
# d55e848ac6a5407d9f61724b8e33c6ca
#: ../../releases/1.2.txt:114 ../../releases/1.2-rc-1.txt:46
msgid ""
"A roadmap for Django's overall 2.x Python support, and eventual transition "
"to Python 3.x, is currently being developed, and will be announced prior to "
"the release of Django 1.3."
msgstr ""

# aa93020b294040c293ab9bd1cc0d0e18
#: ../../releases/1.2.txt:119
msgid "What's new in Django 1.2"
msgstr ""

# 85da4ed073d24ac9bef1e97656cd3628
# 65bd56266c1e4edd9778cfd3027af4b9
#: ../../releases/1.2.txt:122 ../../releases/1.2-alpha-1.txt:427
msgid "Support for multiple databases"
msgstr ""

# 152955ae5a0c4e8abee3bdde2113746b
#: ../../releases/1.2.txt:124
msgid ""
"Django 1.2 adds the ability to use :doc:`more than one database </topics/db/"
"multi-db>` in your Django project. Queries can be issued at a specific "
"database with the `using()` method on ``QuerySet`` objects. Individual "
"objects can be saved to a specific database by providing a ``using`` "
"argument when you call ``save()``."
msgstr ""

# 125942c04ed04223a588fd263c276662
#: ../../releases/1.2.txt:131
msgid "Model validation"
msgstr ""

# 51d669af245e46cd8d2e0b168d6c7df3
#: ../../releases/1.2.txt:133
msgid ""
"Model instances now have support for :ref:`validating their own data "
"<validating-objects>`, and both model and form fields now accept "
"configurable lists of :doc:`validators </ref/validators>` specifying "
"reusable, encapsulated validation behavior. Note, however, that validation "
"must still be performed explicitly. Simply invoking a model instance's ``save"
"()`` method will not perform any validation of the instance's data."
msgstr ""

# 895148b749564413ab0b553c4f51897d
#: ../../releases/1.2.txt:141
msgid "Improved CSRF protection"
msgstr ""

# 295ae67a7cfe44b7b7cb1b3cdb574ec9
#: ../../releases/1.2.txt:143
msgid ""
"Django now has much improved protection against :doc:`Cross-Site Request "
"Forgery (CSRF) attacks</ref/contrib/csrf>`. This type of attack occurs when "
"a malicious Web site contains a link, a form button or some JavaScript that "
"is intended to perform some action on your Web site, using the credentials "
"of a logged-in user who visits the malicious site in their browser. A "
"related type of attack, \"login CSRF,\" where an attacking site tricks a "
"user's browser into logging into a site with someone else's credentials, is "
"also covered."
msgstr ""

# 5b67c6f9172f443d80e8ef5068ee3ae3
#: ../../releases/1.2.txt:152
msgid "Messages framework"
msgstr ""

# 551c96aef27447b1ac2b2c7fcf32218c
# 740695ae3c4e471e97526e4ac2bbdd44
#: ../../releases/1.2.txt:154 ../../releases/1.2-alpha-1.txt:419
msgid ""
"Django now includes a robust and configurable :doc:`messages framework </ref/"
"contrib/messages>` with built-in support for cookie- and session-based "
"messaging, for both anonymous and authenticated clients. The messages "
"framework replaces the deprecated user message API and allows you to "
"temporarily store messages in one request and retrieve them for display in a "
"subsequent request (usually the next one)."
msgstr ""

# ece765ada61b4519896734b0b302725f
# 983d87223c9b4dbf846ecb8dca299e1a
#: ../../releases/1.2.txt:162 ../../releases/1.2-beta-1.txt:87
msgid "Object-level permissions"
msgstr ""

# 5042d6e99955439ebad9f863d5636939
#: ../../releases/1.2.txt:164
msgid ""
"A foundation for specifying permissions at the per-object level has been "
"added. Although there is no implementation of this in core, a custom "
"authentication backend can provide this implementation and it will be used "
"by :class:`django.contrib.auth.models.User`. See the :doc:`authentication "
"docs </topics/auth>` for more information."
msgstr ""

# 85df9d001d41404cbbf2ab4e2ca90109
# 82e1ca7d1b3c4eab8d691892d6f39400
#: ../../releases/1.2.txt:171 ../../releases/1.2-beta-1.txt:99
msgid "Permissions for anonymous users"
msgstr ""

# 2ac7fbecb9e84152944c84651000e711
#: ../../releases/1.2.txt:173
msgid ""
"If you provide a custom auth backend with ``supports_anonymous_user`` set to "
"``True``, AnonymousUser will check the backend for permissions, just like "
"User already did.  This is useful for centralizing permission handling - "
"apps can always delegate the question of whether something is allowed or not "
"to the authorization/authentication backend. See the :doc:`authentication "
"docs </topics/auth>` for more details."
msgstr ""

# 08cfee7a0c5c4864a2c23be18a72974a
#: ../../releases/1.2.txt:181
msgid "Relaxed requirements for usernames"
msgstr ""

# 6b30d91a97c14cf094d4465c75bfde97
#: ../../releases/1.2.txt:183
msgid ""
"The built-in :class:`~django.contrib.auth.models.User` model's :attr:"
"`~django.contrib.auth.models.User.username` field now allows a wider range "
"of characters, including ``@``, ``+``, ``.`` and ``-`` characters."
msgstr ""

# f5d5da308ffa4c58a697ff38e0922dd0
#: ../../releases/1.2.txt:188
msgid "Email backends"
msgstr ""

# 34239eaba6134de596d3afa5cf5faf60
# 6bf29c196f414222a516d2216b457f70
#: ../../releases/1.2.txt:190 ../../releases/1.2-alpha-1.txt:401
msgid ""
"You can now :ref:`configure the way that Django sends email <topic-email-"
"backends>`. Instead of using SMTP to send all email, you can now choose a "
"configurable email backend to send messages. If your hosting provider uses a "
"sandbox or some other non-SMTP technique for sending mail, you can now "
"construct an email backend that will allow Django's standard :doc:`mail "
"sending methods</topics/email>` to use those facilities."
msgstr ""

# 2d424bdacbad4a1d88409598d0e06c5c
#: ../../releases/1.2.txt:198
msgid ""
"This also makes it easier to debug mail sending. Django ships with backend "
"implementations that allow you to send email to a :ref:`file<topic-email-"
"file-backend>`, to the :ref:`console<topic-email-console-backend>`, or to :"
"ref:`memory<topic-email-memory-backend>`. You can even configure all email "
"to be :ref:`thrown away<topic-email-dummy-backend>`."
msgstr ""

# f4e90932b82744168635443e77bd2e47
#: ../../releases/1.2.txt:208
msgid "\"Smart\" :ttag:`if` tag"
msgstr ""

# 4367ead0d9bd41bab66e3c493a1ec9a9
#: ../../releases/1.2.txt:210
msgid ""
"The :ttag:`if` tag has been upgraded to be much more powerful. First, we've "
"added support for comparison operators. No longer will you have to type:"
msgstr ""

# 3e0594af3e55455484a94eb363aa4b33
#: ../../releases/1.2.txt:219
msgid "You can now do this:"
msgstr ""

# 6f55ded25f0640b5ba585d4ad68198e6
#: ../../releases/1.2.txt:227
msgid ""
"There's really no reason to use ``{% ifequal %}`` or ``{% ifnotequal %}`` "
"anymore, unless you're the nostalgic type."
msgstr ""

# e197c3f316b94171a61d78f3a53e1e01
#: ../../releases/1.2.txt:230
msgid ""
"The operators supported are ``==``, ``!=``, ``<``, ``>``, ``<=``, ``>=``, "
"``in`` and ``not in``, all of which work like the Python operators, in "
"addition to ``and``, ``or`` and ``not``, which were already supported."
msgstr ""

# 7310151916b945459bd52d8dc61baf94
# 4c89ea192809407d85742330a637490f
#: ../../releases/1.2.txt:234 ../../releases/1.2-alpha-1.txt:459
msgid "Also, filters may now be used in the ``if`` expression. For example:"
msgstr ""

# a1de5cc8e88245ecb1148140475f7b41
# e65f9ac8350a45d898fc1f8f4d3682b9
#: ../../releases/1.2.txt:245 ../../releases/1.2-alpha-1.txt:470
msgid "Template caching"
msgstr ""

# c10d0994815f4fdf843a72ed17de0d42
#: ../../releases/1.2.txt:247
msgid ""
"In previous versions of Django, every time you rendered a template, it would "
"be reloaded from disk. In Django 1.2, you can use a :ref:`cached template "
"loader <template-loaders>` to load templates once, then cache the result for "
"every subsequent render. This can lead to a significant performance "
"improvement if your templates are broken into lots of smaller subtemplates "
"(using the ``{% extends %}`` or ``{% include %}`` tags)."
msgstr ""

# 85ca90b0b23a41639d645d42dfc9dccd
# 0d8c047f037542988c2cd273705fccc1
#: ../../releases/1.2.txt:255 ../../releases/1.2-alpha-1.txt:480
msgid ""
"As a side effect, it is now much easier to support non-Django template "
"languages. For more details, see the :ref:`notes on supporting non-Django "
"template languages<topic-template-alternate-language>`."
msgstr ""

# cd015aeb80a34c5890f05e7fb3f26df0
#: ../../releases/1.2.txt:260
msgid "Class-based template loaders"
msgstr ""

# 30381e76e23e4cfd84bfaea046687de6
#: ../../releases/1.2.txt:262
msgid ""
"As part of the changes made to introduce `Template caching`_  and following "
"a general trend in Django, the template loaders API has been modified to use "
"template loading mechanisms that are encapsulated in Python classes as "
"opposed to functions, the only method available until Django 1.1."
msgstr ""

# f6c1090504294eb78033eae2b702716c
#: ../../releases/1.2.txt:267
msgid ""
"All the template loaders :ref:`shipped with Django <template-loaders>` have "
"been ported to the new API but they still implement the function-based API "
"and the template core machinery still accepts function-based loaders "
"(builtin or third party) so there is no immediate need to modify your :"
"setting:`TEMPLATE_LOADERS` setting in existing projects, things will keep "
"working if you leave it untouched up to and including the Django 1.3 release."
msgstr ""

# 6ca1d24c9ba64b548a04ea61d5f197d5
#: ../../releases/1.2.txt:274
msgid ""
"If you have developed your own custom template loaders we suggest to "
"consider porting them to a class-based implementation because the code for "
"backwards compatibility with function-based loaders starts its deprecation "
"process in Django 1.2 and will be removed in Django 1.4.  There is a "
"description of the API these loader classes must implement :ref:`here <topic-"
"template-alternate-language>` and you can also examine the source code of "
"the loaders shipped with Django."
msgstr ""

# 70286533861a43eabfc617408a34e452
# 78ad6dfa454a4e2e8a675850756e5c7f
#: ../../releases/1.2.txt:283 ../../releases/1.2-alpha-1.txt:485
msgid "Natural keys in fixtures"
msgstr ""

# 4555b7dcdc7a4607946cf7a440617d11
#: ../../releases/1.2.txt:285
msgid ""
"Fixtures can now refer to remote objects using :ref:`topics-serialization-"
"natural-keys`. This lookup scheme is an alternative to the normal primary-"
"key based object references in a fixture, improving readability and "
"resolving problems referring to objects whose primary key value may not be "
"predictable or known."
msgstr ""

# 200b00511cc142759bc64fedd580c967
#: ../../releases/1.2.txt:292
msgid "Fast failure for tests"
msgstr ""

# 0db2c86d71f346bf8e635543e370f3fe
#: ../../releases/1.2.txt:294
msgid ""
"Both the :djadmin:`test` subcommand of ``django-admin.py`` and the "
"``runtests.py`` script used to run Django's own test suite now support a ``--"
"failfast`` option. When specified, this option causes the test runner to "
"exit after encountering a failure instead of continuing with the test run. "
"In addition, the handling of ``Ctrl-C`` during a test run has been improved "
"to trigger a graceful exit from the test run that reports details of the "
"tests that were run before the interruption."
msgstr ""

# 7c261f0543de4d2d8fb118709a14c890
# 4dbcb0fcde9c4e25aedf7ea645c91757
#: ../../releases/1.2.txt:303 ../../releases/1.2-alpha-1.txt:494
msgid "``BigIntegerField``"
msgstr ""

# d8fbec4df0644c678ed89dfe47f9d34d
#: ../../releases/1.2.txt:305
msgid ""
"Models can now use a 64-bit :class:`~django.db.models.BigIntegerField` type."
msgstr ""

# e61ecaa0143a4b4fb220db5dba9c8bfd
# 2aa410a8e4834c9ea2cb82425cd7c48f
#: ../../releases/1.2.txt:308 ../../releases/1.2-alpha-1.txt:509
msgid "Improved localization"
msgstr ""

# a61fa0b30006493b93d88865b77c63ac
#: ../../releases/1.2.txt:310
msgid ""
"Django's :doc:`internationalization framework </topics/i18n/index>` has been "
"expanded with locale-aware formatting and form processing. That means, if "
"enabled, dates and numbers on templates will be displayed using the format "
"specified for the current locale. Django will also use localized formats "
"when parsing data in forms. See :ref:`Format localization <format-"
"localization>` for more details."
msgstr ""

# 9e4262c3c8f34eb8b2864137968ac653
#: ../../releases/1.2.txt:317
msgid "``readonly_fields`` in ``ModelAdmin``"
msgstr ""

# a8f409ffcd884be7b8f0ca2c820234b0
#: ../../releases/1.2.txt:319
msgid ""
":attr:`django.contrib.admin.ModelAdmin.readonly_fields` has been added to "
"enable non-editable fields in add/change pages for models and inlines. Field "
"and calculated values can be displayed alongside editable fields."
msgstr ""

# 11c1a9f4b5564eaab71eef64dcd3e724
# 5298e68d54d04e3ea8dc783209c99786
#: ../../releases/1.2.txt:324 ../../releases/1.2-alpha-1.txt:526
msgid "Customizable syntax highlighting"
msgstr ""

# b62959e3b3ef42f9baf1011d22d1235e
#: ../../releases/1.2.txt:326
msgid ""
"You can now use a ``DJANGO_COLORS`` environment variable to modify or "
"disable the colors used by ``django-admin.py`` to provide :ref:`syntax "
"highlighting <syntax-coloring>`."
msgstr ""

# c18c0d3b2be645d6a27aa276313c6419
#: ../../releases/1.2.txt:331
msgid "Syndication feeds as views"
msgstr ""

# a853aaf4f55442ddb1e80e88a6a16c34
#: ../../releases/1.2.txt:333
msgid ""
":doc:`Syndication feeds </ref/contrib/syndication>` can now be used directly "
"as views in your :doc:`URLconf </topics/http/urls>`. This means that you can "
"maintain complete control over the URL structure of your feeds. Like any "
"other view, feeds views are passed a ``request`` object, so you can do "
"anything you would normally do with a view, like user based access control, "
"or making a feed a named URL."
msgstr ""

# 855e912cc1eb474c93c920acdabff62e
#: ../../releases/1.2.txt:343
msgid ""
"The most significant new feature for :doc:`GeoDjango </ref/contrib/gis/"
"index>` in 1.2 is support for multiple spatial databases.  As a result, the "
"following :ref:`spatial database backends <spatial-backends>` are now "
"included:"
msgstr ""

# 5fe82f2cddc443498761bf48320de4a4
#: ../../releases/1.2.txt:348
msgid ":mod:`django.contrib.gis.db.backends.postgis`"
msgstr ""

# b961143f675b463fb73a3f099078d861
#: ../../releases/1.2.txt:349
msgid ":mod:`django.contrib.gis.db.backends.mysql`"
msgstr ""

# 031b54d9072941a18d09d1dab4d290d9
#: ../../releases/1.2.txt:350
msgid ":mod:`django.contrib.gis.db.backends.oracle`"
msgstr ""

# ac6519d894bd44a08f00e0f86e1402e0
#: ../../releases/1.2.txt:351
msgid ":mod:`django.contrib.gis.db.backends.spatialite`"
msgstr ""

# f25424fbe6974e54b19f3e51afe5de51
#: ../../releases/1.2.txt:353
msgid ""
"GeoDjango now supports the rich capabilities added in the `PostGIS 1.5 "
"release <http://postgis.refractions.net/documentation/manual-1.5/>`_. New "
"features include suppport for the :ref:`geography type <geography-type>` and "
"enabling of :ref:`distance queries <distance-queries>` with non-point "
"geometries on geographic coordinate systems."
msgstr ""

# 2282cffe3b974f42bed4d2e9ea9f18e9
#: ../../releases/1.2.txt:359
msgid ""
"Support for 3D geometry fields was added, and may be enabled by setting the :"
"attr:`~django.contrib.gis.db.models.GeometryField.dim` keyword to 3 in your :"
"class:`~django.contrib.gis.db.models.GeometryField`. The :class:`~django."
"contrib.gis.db.models.Extent3D` aggregate and :meth:`~django.contrib.gis.db."
"models.GeoQuerySet.extent3d` ``GeoQuerySet`` method were added as a part of "
"this feature."
msgstr ""

# b23cde28ae104fcf83d61f432774614c
#: ../../releases/1.2.txt:366
msgid ""
"The following :class:`~django.contrib.gis.db.models.GeoQuerySet` methods are "
"new in 1.2:"
msgstr ""

# 36d462c7c97542cb9ffa490b871a15c4
#: ../../releases/1.2.txt:369
msgid ":meth:`~django.contrib.gis.db.models.GeoQuerySet.force_rhr`"
msgstr ""

# 4af46dc48d5c47a8bf63d39f3c94a72d
#: ../../releases/1.2.txt:370
msgid ":meth:`~django.contrib.gis.db.models.GeoQuerySet.reverse_geom`"
msgstr ""

# 96a9956e450148ea846fa18bea6b68a9
#: ../../releases/1.2.txt:371
msgid ":meth:`~django.contrib.gis.db.models.GeoQuerySet.geohash`"
msgstr ""

# 3078eae119bc4decbb73b4b812a8fd7a
#: ../../releases/1.2.txt:373
msgid ""
"The :ref:`GEOS interface <ref-geos>` was updated to use thread-safe C "
"library functions when available on the platform."
msgstr ""

# 0fed97c1db1042fd803c498d008a696f
#: ../../releases/1.2.txt:376
msgid ""
"The :ref:`GDAL interface <ref-gdal>` now allows the user to set a :attr:"
"`~django.contrib.gis.gdal.Layer.spatial_filter` on the features returned "
"when iterating over a :class:`~django.contrib.gis.gdal.Layer`."
msgstr ""

# 4f19c8ade6d8491aa9f6c19583402862
#: ../../releases/1.2.txt:381
msgid ""
"Finally, :doc:`GeoDjango's documentation </ref/contrib/gis/index>` is now "
"included with Django's and is no longer hosted separately at `geodjango.org "
"<http://geodjango.org/>`_."
msgstr ""

# fe88cfc68c4848ae8a08b8c4a336b07d
#: ../../releases/1.2.txt:388
msgid "JavaScript-assisted handling of inline related objects in the admin"
msgstr ""

# 60cfe905737b40ae8a3eeec9401f117a
#: ../../releases/1.2.txt:390
msgid ""
"If a user has JavaScript enabled in their browser, the interface for inline "
"objects in the admin now allows inline objects to be dynamically added and "
"removed. Users without JavaScript-enabled browsers will see no change in the "
"behavior of inline objects."
msgstr ""

# 5602df60c3d14f5fb66281e1eba72161
#: ../../releases/1.2.txt:396
msgid "New ``now`` template tag format specifier characters: ``c`` and ``u``"
msgstr ""

# 39023bf7423e4979b9808443fdec99b9
#: ../../releases/1.2.txt:398
msgid ""
"The argument to the :ttag:`now` has gained two new format characters: ``c`` "
"to specify that a datetime value should be formatted in ISO 8601 format, and "
"``u`` that allows output of the microseconds part of a datetime or time "
"value."
msgstr ""

# 117f4494d8b64178981cb90e6e8d7286
#: ../../releases/1.2.txt:403
msgid ""
"These are also available in others parts like the :tfilter:`date` and :"
"tfilter:`time` template filters, the ``humanize`` template tag library and "
"the new `format localization`_ framework."
msgstr ""

# e8664bdee03f4558b15b511bf16e4bd4
# 66bc07d31a0c4cfda0645b06b33c6bae
#: ../../releases/1.2.txt:412 ../../releases/1.2-alpha-1.txt:20
msgid "Backwards-incompatible changes in 1.2"
msgstr ""

# 839863060bd2471f9f6cd587e05c36e7
#: ../../releases/1.2.txt:414
msgid ""
"Wherever possible the new features above have been introduced in a backwards-"
"compatible manner per :doc:`our API stability policy </misc/api-stability>` "
"policy. This means that practically all existing code which worked with "
"Django 1.1 will continue to work with Django 1.2; such code will, however, "
"begin issuing warnings (see below for details)."
msgstr ""

# 41bd13b70b0b49e6a5411450a0c90086
#: ../../releases/1.2.txt:421
msgid ""
"However, a handful of features *have* changed in ways that, for some users, "
"will be immediately backwards-incompatible. Those changes are detailed below."
msgstr ""

# 0d1b2380ffba43a080e9dee9e0e8e22e
# 4254bcc8882a4e64a6ea1fc282416e6f
#: ../../releases/1.2.txt:426 ../../releases/1.2-alpha-1.txt:23
msgid "CSRF Protection"
msgstr ""

# e8e7fca3ef11437da4d66727534e4035
#: ../../releases/1.2.txt:428
msgid ""
"We've made large changes to the way CSRF protection works, detailed in :doc:"
"`the CSRF documentation </ref/contrib/csrf>`. Here are the major changes you "
"should be aware of:"
msgstr ""

# 63b182f615f04308ae65c08a1482d0ca
#: ../../releases/1.2.txt:432
msgid ""
"``CsrfResponseMiddleware`` and ``CsrfMiddleware`` have been deprecated and "
"will be removed completely in Django 1.4, in favor of a template tag that "
"should be inserted into forms."
msgstr ""

# 5bc5e8484d3c418ab68a7662ae754152
#: ../../releases/1.2.txt:436
msgid ""
"All contrib apps use a ``csrf_protect`` decorator to protect the view. This "
"requires the use of the ``csrf_token`` template tag in the template. If you "
"have used custom templates for contrib views, you MUST READ THE UPGRADE "
"INSTRUCTIONS to fix those templates."
msgstr ""

# 53d2b3ab397d4a0eaf4be11b4ec3a324
# 7ada4336d32e45f1b697f9be8f00f1a7
# 1db07521480a4a428fec57e27076a821
# 1cdff69057c5432283b8a46131ea4457
#: ../../releases/1.2.txt:443 ../../releases/1.2.txt:871
#: ../../releases/1.2-alpha-1.txt:40 ../../releases/1.2-alpha-1.txt:208
msgid ""
"The upgrade notes have been removed in current Django docs. Please refer to "
"the docs for Django 1.3 or older to find these instructions."
msgstr ""

# 8d518a66966642c180ebfe4ac683a8d8
#: ../../releases/1.2.txt:446
msgid ""
"``CsrfViewMiddleware`` is included in :setting:`MIDDLEWARE_CLASSES` by "
"default. This turns on CSRF protection by default, so views that accept POST "
"requests need to be written to work with the middleware. Instructions on how "
"to do this are found in the CSRF docs."
msgstr ""

# 528fbf7b46b9477abcc1d17df75e78d3
#: ../../releases/1.2.txt:451
msgid ""
"All of the CSRF has moved from contrib to core (with backwards compatible "
"imports in the old locations, which are deprecated and will cease to be "
"supported in Django 1.4)."
msgstr ""

# 2fea04db0ebc484693021caea896100c
#: ../../releases/1.2.txt:456
msgid "``get_db_prep_*()`` methods on ``Field``"
msgstr ""

# e3a480af08ac4db59e1d07a715569296
#: ../../releases/1.2.txt:458
msgid ""
"Prior to Django 1.2, a custom ``Field`` had the option of defining several "
"functions to support conversion of Python values into database-compatible "
"values. A custom field might look something like::"
msgstr ""

# 7634c9778a444ae8975e66f7f1658aa4
# d4e2abe160b949eab5a0fbd782cf9ef7
#: ../../releases/1.2.txt:476 ../../releases/1.2-alpha-1.txt:117
msgid ""
"In 1.2, these three methods have undergone a change in prototype, and two "
"extra methods have been introduced::"
msgstr ""

# 8eca38b9476d4b1e9661b8a7f3f5acb4
#: ../../releases/1.2.txt:500
msgid ""
"These changes are required to support multiple databases -- ``db_type`` and "
"``get_db_prep_*`` can no longer make any assumptions regarding the database "
"for which it is preparing. The ``connection`` argument now provides the "
"preparation methods with the specific connection for which the value is "
"being prepared."
msgstr ""

# 95f6de01c8b24c6496dc79bf50dae08a
#: ../../releases/1.2.txt:506
msgid ""
"The two new methods exist to differentiate general data-preparation "
"requirements from requirements that are database-specific. The ``prepared`` "
"argument is used to indicate to the database-preparation methods whether "
"generic value preparation has been performed. If an unprepared (i.e., "
"``prepared=False``) value is provided to the ``get_db_prep_*()`` calls, they "
"should invoke the corresponding ``get_prep_*()`` calls to perform generic "
"data preparation."
msgstr ""

# 08f01d58e41e4172b90cbfd3b5a31738
#: ../../releases/1.2.txt:514
msgid ""
"We've provided conversion functions that will transparently convert "
"functions adhering to the old prototype into functions compatible with the "
"new prototype. However, these conversion functions will be removed in Django "
"1.4, so you should upgrade your ``Field`` definitions to use the new "
"prototype as soon as possible."
msgstr ""

# f2cc147d93b04b39b6c0facb02b2ab08
#: ../../releases/1.2.txt:520
msgid ""
"If your ``get_db_prep_*()`` methods made no use of the database connection, "
"you should be able to upgrade by renaming ``get_db_prep_value()`` to "
"``get_prep_value()`` and ``get_db_prep_lookup()`` to ``get_prep_lookup()``. "
"If you require database specific conversions, then you will need to provide "
"an implementation ``get_db_prep_*`` that uses the ``connection`` argument to "
"resolve database-specific values."
msgstr ""

# f6be41d4ac9c4bfdb6e51b90a8bbc34e
# 21c788b1e0824dffa9bb7130b40a4696
#: ../../releases/1.2.txt:529 ../../releases/1.2-alpha-1.txt:167
msgid "Stateful template tags"
msgstr ""

# 81e39cb6d798451a89a36489731a4534
#: ../../releases/1.2.txt:531
msgid ""
"Template tags that store rendering state on their ``Node`` subclass have "
"always been vulnerable to thread-safety and other issues; as of Django 1.2, "
"however, they may also cause problems when used with the new :ref:`cached "
"template loader<template-loaders>`."
msgstr ""

# 2e00d4806c624b9eae0ebd41c154069d
#: ../../releases/1.2.txt:536
msgid ""
"All of the built-in Django template tags are safe to use with the cached "
"loader, but if you're using custom template tags that come from third party "
"packages, or from your own code, you should ensure that the ``Node`` "
"implementation for each tag is thread-safe. For more information, see :ref:"
"`template tag thread safety considerations<template_tag_thread_safety>`."
msgstr ""

# d784dd4713fc4b23929c3bd260c18351
#: ../../releases/1.2.txt:543
msgid ""
"You may also need to update your templates if you were relying on the "
"implementation of Django's template tags *not* being thread safe. The :ttag:"
"`cycle` tag is the most likely to be affected in this way, especially when "
"used in conjunction with the :ttag:`include` tag. Consider the following "
"template fragment::"
msgstr ""

# ef01f35eaa44478583a1c23e11f5423c
#: ../../releases/1.2.txt:553
msgid "with a ``subtemplate.html`` that reads::"
msgstr ""

# 1bfd28ed29c6492fbff012cb9a71d519
#: ../../releases/1.2.txt:557
msgid "Using the non-thread-safe, pre-Django 1.2 renderer, this would output::"
msgstr ""

# 0c08e482276b45db9987823b11e84a43
#: ../../releases/1.2.txt:561
msgid "Using the thread-safe Django 1.2 renderer, you will instead get::"
msgstr ""

# 5fc8da76751d42a8a67b406b21607489
#: ../../releases/1.2.txt:565
msgid ""
"This is because each rendering of the :ttag:`include` tag is an independent "
"rendering. When the :ttag:`cycle` tag was not thread safe, the state of the :"
"ttag:`cycle` tag would leak between multiple renderings of the same :ttag:"
"`include`. Now that the :ttag:`cycle` tag is thread safe, this leakage no "
"longer occurs."
msgstr ""

# 699b50570aa249c79dd57435cac59687
#: ../../releases/1.2.txt:572
msgid "``user_passes_test``, ``login_required`` and ``permission_required``"
msgstr ""

# a2d1b4fbebeb4511acf1b2e416ac04ac
#: ../../releases/1.2.txt:574
msgid ""
"``django.contrib.auth.decorators`` provides the decorators "
"``login_required``, ``permission_required`` and ``user_passes_test``. "
"Previously it was possible to use these decorators both on functions (where "
"the first argument is 'request') and on methods (where the first argument is "
"'self', and the second argument is 'request'). Unfortunately, flaws were "
"discovered in the code supporting this: it only works in limited "
"circumstances, and produces errors that are very difficult to debug when it "
"does not work."
msgstr ""

# 9b6e58e9a4e0401f8f6443279e198aaa
#: ../../releases/1.2.txt:584
msgid ""
"For this reason, the 'auto adapt' behavior has been removed, and if you are "
"using these decorators on methods, you will need to manually apply :func:"
"`django.utils.decorators.method_decorator` to convert the decorator to one "
"that works with methods. For example, you would change code from this::"
msgstr ""

# 3a7ac1115bfb4438a8e8416f6e80336b
#: ../../releases/1.2.txt:606
msgid "or::"
msgstr ""

# b8c397dbb1b74bf3b7d8cd685131e61c
#: ../../releases/1.2.txt:618
msgid ""
"For those of you who've been following the development trunk, this change "
"also applies to other decorators introduced since 1.1, including "
"``csrf_protect``, ``cache_control`` and anything created using "
"``decorator_from_middleware``."
msgstr ""

# f5d49cbb8e78418c8ac1e3ac1eabc1f9
# 94a8462b46894f3998a8f88ba539188a
#: ../../releases/1.2.txt:624 ../../releases/1.2-alpha-1.txt:53
msgid ":ttag:`if` tag changes"
msgstr ""

# 74f05b38785a44eeafd3f8e543d6256d
#: ../../releases/1.2.txt:626
msgid ""
"Due to new features in the :ttag:`if` template tag, it no longer accepts "
"'and', 'or' and 'not' as valid **variable** names. Previously, these strings "
"could be used as variable names. Now, the keyword status is always enforced, "
"and template code such as ``{% if not %}`` or ``{% if and %}`` will throw a "
"``TemplateSyntaxError``. Also, ``in`` is a new keyword and so is not a valid "
"variable name in this tag."
msgstr ""

# 76ed62c711c5478082d3dcb2ff6e48e3
# 111b62a20e7a48428091cd81d722aad9
#: ../../releases/1.2.txt:634 ../../releases/1.2-alpha-1.txt:62
msgid "``LazyObject``"
msgstr ""

# 6d40d7b03f9844f2858f204bc23acb9b
#: ../../releases/1.2.txt:636
msgid ""
"``LazyObject`` is an undocumented-but-often-used utility class used for "
"lazily wrapping other objects of unknown type."
msgstr ""

# 71742d23764b43ebb1b02b9a34d99ad7
#: ../../releases/1.2.txt:639
msgid ""
"In Django 1.1 and earlier, it handled introspection in a non-standard way, "
"depending on wrapped objects implementing a public method named "
"``get_all_members()``. Since this could easily lead to name clashes, it has "
"been changed to use the standard Python introspection method, involving "
"``__members__`` and ``__dir__()``."
msgstr ""

# 406e7eb1112f43bab839fe3885c14272
#: ../../releases/1.2.txt:645
msgid ""
"If you used ``LazyObject`` in your own code and implemented the "
"``get_all_members()`` method for wrapped objects, you'll need to make a "
"couple of changes:"
msgstr ""

# 0cf8e949a74c474cad11802e0a3444aa
#: ../../releases/1.2.txt:649
msgid ""
"First, if your class does not have special requirements for introspection (i."
"e., you have not implemented ``__getattr__()`` or other methods that allow "
"for attributes not discoverable by normal mechanisms), you can simply remove "
"the ``get_all_members()`` method. The default implementation on "
"``LazyObject`` will do the right thing."
msgstr ""

# 4bfed669ec3d4a8f8ba5b45939b1d6f0
#: ../../releases/1.2.txt:655
msgid ""
"If you have more complex requirements for introspection, first rename the "
"``get_all_members()`` method to ``__dir__()``. This is the standard "
"introspection method for Python 2.6 and above. If you require support for "
"Python versions earlier than 2.6, add the following code to the class::"
msgstr ""

# 6719228a36e04dc98ddd4ee9aee7ee88
#: ../../releases/1.2.txt:663
msgid "``__dict__`` on model instances"
msgstr ""

# 983be86c12684c609980840abd6bdc65
# f8277db5e2c843efad8ced172c4bd8db
#: ../../releases/1.2.txt:665 ../../releases/1.2-alpha-1.txt:89
msgid ""
"Historically, the ``__dict__`` attribute of a model instance has only "
"contained attributes corresponding to the fields on a model."
msgstr ""

# 54bd9b2b690a442998aab399a0fd3554
#: ../../releases/1.2.txt:668
msgid ""
"In order to support multiple database configurations, Django 1.2 has added a "
"``_state`` attribute to object instances. This attribute will appear in "
"``__dict__`` for a model instance. If your code relies on iterating over "
"``__dict__`` to obtain a list of fields, you must now be prepared to handle "
"or filter out the ``_state`` attribute."
msgstr ""

# 56452675127b4bc1b2aeb28df3bdc3ec
#: ../../releases/1.2.txt:677
msgid ""
"The exit status code of the test runners (``tests/runtests.py`` and ``python "
"manage.py test``) no longer represents the number of failed tests, because a "
"failure of 256 or more tests resulted in a wrong exit status code. The exit "
"status code for the test runner is now 0 for success (no failing tests) and "
"1 for any number of test failures. If needed, the number of test failures "
"can be found at the end of the test runner's output."
msgstr ""

# 55868cf49fd943bb9307fa4ddb5d4c73
#: ../../releases/1.2.txt:687
msgid ""
"To fix bugs with cookies in Internet Explorer, Safari, and possibly other "
"browsers, our encoding of cookie values was changed so that the comma and "
"semicolon are treated as non-safe characters, and are therefore encoded as ``"
"\\054`` and ``\\073`` respectively.  This could produce backwards "
"incompatibilities, especially if you are storing comma or semi-colon in "
"cookies and have javascript code that parses and manipulates cookie values "
"client-side."
msgstr ""

# bd4577d4962b4e74889c025b26107fb2
#: ../../releases/1.2.txt:696
msgid "``ModelForm.is_valid()`` and ``ModelForm.errors``"
msgstr ""

# c540161514814276b7b2f93157f0900b
#: ../../releases/1.2.txt:698
msgid ""
"Much of the validation work for ModelForms has been moved down to the model "
"level. As a result, the first time you call ``ModelForm.is_valid()``, access "
"``ModelForm.errors`` or otherwise trigger form validation, your model will "
"be cleaned in-place. This conversion used to happen when the model was "
"saved. If you need an unmodified instance of your model, you should pass a "
"copy to the ``ModelForm`` constructor."
msgstr ""

# a2cf1ff21ecb43fa9828cd663560245e
#: ../../releases/1.2.txt:706
msgid "``BooleanField`` on MySQL"
msgstr ""

# b8fd26f18c1d423684ada43a8b4be658
#: ../../releases/1.2.txt:708
msgid ""
"In previous versions of Django, a model's ``BooleanField`` under MySQL would "
"return its value as either ``1`` or ``0``, instead of ``True`` or ``False``; "
"for most people this wasn't a problem because ``bool`` is a subclass of "
"``int`` in Python. In Django 1.2, however, ``BooleanField`` on MySQL "
"correctly returns a real ``bool``.  The only time this should ever be an "
"issue is if you were expecting the ``repr`` of a ``BooleanField`` to print "
"``1`` or ``0``."
msgstr ""

# dd53126c9cb047ae9d74a6d25d0af181
#: ../../releases/1.2.txt:717
msgid "Changes to the interpretation of ``max_num`` in FormSets"
msgstr ""

# ec79d966e9fa4e099a25943c7d030648
#: ../../releases/1.2.txt:719
msgid ""
"As part of enhancements made to the handling of FormSets, the default value "
"and interpretation of the ``max_num`` parameter to the :ref:`django.forms."
"formsets.formset_factory() <formsets-max-num>` and :ref:`django.forms.models."
"modelformset_factory() <model-formsets-max-num>` functions has changed "
"slightly. This change also affects the way the ``max_num`` argument is :ref:"
"`used for inline admin objects <ref-contrib-admin-inline-max-num>`"
msgstr ""

# 01b3ee80aa874c1f9fa695879f88bc4c
#: ../../releases/1.2.txt:727
msgid ""
"Previously, the default value for ``max_num`` was ``0`` (zero). FormSets "
"then used the boolean value of ``max_num`` to determine if a limit was to be "
"imposed on the number of generated forms. The default value of ``0`` meant "
"that there was no default limit on the number of forms in a FormSet."
msgstr ""

# a1ee7a6ee544470a8c06fe7f6d7880f4
#: ../../releases/1.2.txt:733
msgid ""
"Starting with 1.2, the default value for ``max_num`` has been changed to "
"``None``, and FormSets will differentiate between a value of ``None`` and a "
"value of ``0``. A value of ``None`` indicates that no limit on the number of "
"forms is to be imposed; a value of ``0`` indicates that a maximum of 0 forms "
"should be imposed. This doesn't necessarily mean that no forms will be "
"displayed -- see the :ref:`ModelFormSet documentation <model-formsets-max-"
"num>` for more details."
msgstr ""

# 33323f67a3ce4a6fba5b6ed85dd0a94d
#: ../../releases/1.2.txt:742
msgid ""
"If you were manually specifying a value of ``0`` for ``max_num``, you will "
"need to update your FormSet and/or admin definitions."
msgstr ""

# ccb875770f61440382f3c90a32233d35
#: ../../releases/1.2.txt:747
msgid ":ref:`1.2-js-assisted-inlines`"
msgstr ""

# c13de6133392468fa07ae0c3b5aa526e
#: ../../releases/1.2.txt:750
msgid "``email_re``"
msgstr ""

# 9219afbda6f743759dc52b9a96e985b9
#: ../../releases/1.2.txt:752
msgid ""
"An undocumented regular expression for validating email addresses has been "
"moved from ``django.form.fields`` to ``django.core.validators``. You will "
"need to update your imports if you are using it."
msgstr ""

# 12b56e2291a44807a0755f46cf0fb956
# 7e4d5f0aa52046a5a453f7d97ec5bdcb
#: ../../releases/1.2.txt:759 ../../releases/1.2-alpha-1.txt:191
msgid "Features deprecated in 1.2"
msgstr ""

# 714a9ade484249ca9033c52069951d4e
#: ../../releases/1.2.txt:761
msgid ""
"Finally, Django 1.2 deprecates some features from earlier releases. These "
"features are still supported, but will be gradually phased out over the next "
"few release cycles."
msgstr ""

# 0bf803677749457180258c04b7587a88
#: ../../releases/1.2.txt:765
msgid ""
"Code taking advantage of any of the features below will raise a "
"``PendingDeprecationWarning`` in Django 1.2. This warning will be silent by "
"default, but may be turned on using Python's :mod:`warnings` module, or by "
"running Python with a ``-Wd`` or `-Wall` flag."
msgstr ""

# 80d2c56fb06241dfb8e5b51928cd6297
#: ../../releases/1.2.txt:770
msgid ""
"In Django 1.3, these warnings will become a ``DeprecationWarning``, which is "
"*not* silent. In Django 1.4 support for these features will be removed "
"entirely."
msgstr ""

# 5941eccb53d84188a6220fa8950e4627
#: ../../releases/1.2.txt:776
msgid ""
"For more details, see the documentation :doc:`Django's release process </"
"internals/release-process>` and our :doc:`deprecation timeline </internals/"
"deprecation>`.`"
msgstr ""

# 37af3c14820a49b08eea06c9a52f0ef4
# b06004d722724d23b86e8f00cd236612
#: ../../releases/1.2.txt:783 ../../releases/1.2-alpha-1.txt:248
msgid "Specifying databases"
msgstr ""

# 98b7a21b42284ea681bdbf342f133c12
#: ../../releases/1.2.txt:785
msgid ""
"Prior to Django 1.2, Django used a number of settings to control access to a "
"single database. Django 1.2 introduces support for multiple databases, and "
"as a result the way you define database settings has changed."
msgstr ""

# be21a6b3766c4c7cb578df9636072b46
#: ../../releases/1.2.txt:790
msgid ""
"Any existing Django settings file will continue to work as expected until "
"Django 1.4. Until then, old-style database settings will be automatically "
"translated to the new-style format."
msgstr ""

# 8e242a835ce64e55b4d46682a22587e4
#: ../../releases/1.2.txt:794
msgid ""
"In the old-style (pre 1.2) format, you had a number of ``DATABASE_`` "
"settings in your settings file. For example::"
msgstr ""

# 1ba319be2b6742afb9e317b132bbd8a6
#: ../../releases/1.2.txt:802
msgid ""
"These settings are now in a dictionary named :setting:`DATABASES`. Each item "
"in the dictionary corresponds to a single database connection, with the name "
"``'default'`` describing the default database connection. The setting names "
"have also been shortened. The previous sample settings would now look like "
"this::"
msgstr ""

# cff41a2ad4474043bcc27e35e2ca36e9
# a437123a636549ddac64777fc65646b6
#: ../../releases/1.2.txt:817 ../../releases/1.2-alpha-1.txt:283
msgid "This affects the following settings:"
msgstr ""

# 3274f86212df45289e10bf50a53a6075
# b0cb0b019c1442f7a42180c8f10f26ba
#: ../../releases/1.2.txt:820 ../../releases/1.2-alpha-1.txt:286
msgid "Old setting"
msgstr ""

# 7619b43f28b949719cf20f43338803e9
# e091540bb54f40648676a3ab72fde29d
#: ../../releases/1.2.txt:820 ../../releases/1.2-alpha-1.txt:286
msgid "New Setting"
msgstr ""

# 31c7d3f64c504dc6bce07161fbfbc2ca
# 4eb686e140f64d99b1bc96ffcf6ce2d4
#: ../../releases/1.2.txt:822 ../../releases/1.2-alpha-1.txt:288
msgid ":setting:`DATABASE_ENGINE`"
msgstr ""

# 2926c3c4bd574e4d94ad1442a9917325
# 47a18a8358414b11a76bf053c4b665ef
#: ../../releases/1.2.txt:822 ../../releases/1.2-alpha-1.txt:288
msgid ":setting:`ENGINE`"
msgstr ""

# 11659ce8c370412cb5eb69dfff828955
# 1741a59f6b894874bc83989768279487
#: ../../releases/1.2.txt:823 ../../releases/1.2-alpha-1.txt:289
msgid ":setting:`DATABASE_HOST`"
msgstr ""

# 284c758e603e400dbffe0701cc317f5a
# 38699ac4eb30415c9f471c5266538723
#: ../../releases/1.2.txt:823 ../../releases/1.2-alpha-1.txt:289
msgid ":setting:`HOST`"
msgstr ""

# 304273baf86645909b6f928228ee6649
# 2a28a9b548b14532ad4091c323987b7e
#: ../../releases/1.2.txt:824 ../../releases/1.2-alpha-1.txt:290
msgid ":setting:`DATABASE_NAME`"
msgstr ""

# 900a85cbc7214c9c801d3aa432b35d9b
# 35cbde32496e4367af83f0ac3628c1f3
#: ../../releases/1.2.txt:824 ../../releases/1.2-alpha-1.txt:290
msgid ":setting:`NAME`"
msgstr ""

# 18f4eea00cb04e318634b0b56f1ceb5a
# ff70d052557749c499ec95675c00f290
#: ../../releases/1.2.txt:825 ../../releases/1.2-alpha-1.txt:291
msgid ":setting:`DATABASE_OPTIONS`"
msgstr ""

# 5881c170b65a4bee81dc4881939f65cd
# 80baf8c1f7084f2a90381561ad58dbba
#: ../../releases/1.2.txt:825 ../../releases/1.2-alpha-1.txt:291
msgid ":setting:`OPTIONS`"
msgstr ""

# 1ef2c770de494c5ca7b8af2fb09a332d
# 60eb38d767bd46028333c5201f774283
#: ../../releases/1.2.txt:826 ../../releases/1.2-alpha-1.txt:292
msgid ":setting:`DATABASE_PASSWORD`"
msgstr ""

# 3af799915eca448494eba401eb5dd5fc
# d8ec1313291d4b51ab47f91201cb6adb
#: ../../releases/1.2.txt:826 ../../releases/1.2-alpha-1.txt:292
msgid ":setting:`PASSWORD`"
msgstr ""

# 7d0f32518ac74ef0ba3fcb654657ebef
# 73d016d985284ef3836e64e39dc9e49c
#: ../../releases/1.2.txt:827 ../../releases/1.2-alpha-1.txt:293
msgid ":setting:`DATABASE_PORT`"
msgstr ""

# 75a5c03ec4644b23ab27ba8b71f51428
# 47b1f08178fb4e80bf4509de7bf2962c
#: ../../releases/1.2.txt:827 ../../releases/1.2-alpha-1.txt:293
msgid ":setting:`PORT`"
msgstr ""

# ef404ceb7efa444f999cc00b54d1eae9
# 91976a802e834684904a01ab4db1c6f0
#: ../../releases/1.2.txt:828 ../../releases/1.2-alpha-1.txt:294
msgid ":setting:`DATABASE_USER`"
msgstr ""

# 5b690ed9368b4d3aa10cca909c4a0b12
# cebf85f677444aa1b292060f569505f9
#: ../../releases/1.2.txt:828 ../../releases/1.2-alpha-1.txt:294
msgid ":setting:`USER`"
msgstr ""

# 0e7e6e34c9864f20b7967283db4e7f92
# 9eedfff05cde4aae9258c2c483123b4c
#: ../../releases/1.2.txt:829 ../../releases/1.2-alpha-1.txt:295
msgid ":setting:`TEST_DATABASE_CHARSET`"
msgstr ""

# f9572d5fdba54028acebde734fd6e2ef
# 8d879f2d42d3425c8c286173e9c005fa
#: ../../releases/1.2.txt:829 ../../releases/1.2-alpha-1.txt:295
msgid ":setting:`TEST_CHARSET`"
msgstr ""

# 20a7c05eb67f4a1696e7d2fa30ecb144
# d161f4d268a445759d1b3bbed9862b6d
#: ../../releases/1.2.txt:830 ../../releases/1.2-alpha-1.txt:296
msgid ":setting:`TEST_DATABASE_COLLATION`"
msgstr ""

# c71f1d6fe02d43659cfd22618e6c1a83
# 4952afbe1b6b4e21b9f39a2dad1a7613
#: ../../releases/1.2.txt:830 ../../releases/1.2-alpha-1.txt:296
msgid ":setting:`TEST_COLLATION`"
msgstr ""

# ca1e08cfd4954cee9eb24985f42f1a26
# e53c9ad688d04e77b51a62fdd4f77f7f
#: ../../releases/1.2.txt:831 ../../releases/1.2-alpha-1.txt:297
msgid ":setting:`TEST_DATABASE_NAME`"
msgstr ""

# 4a64117d896f40d2a43998b6cf684c9f
# b8191d19479e4faf878954c856f4c865
#: ../../releases/1.2.txt:831 ../../releases/1.2-alpha-1.txt:297
msgid ":setting:`TEST_NAME`"
msgstr ""

# 4a5736660c2a402f9018d1cf4db26b83
# c53b75c6f2a2459d92aaccd48f652c72
#: ../../releases/1.2.txt:834 ../../releases/1.2-alpha-1.txt:300
msgid ""
"These changes are also required if you have manually created a database "
"connection using ``DatabaseWrapper()`` from your database backend of choice."
msgstr ""

# ab78953174184df98d689515365c218f
# 072df6b8702747e6937ed732dd76170f
#: ../../releases/1.2.txt:837 ../../releases/1.2-alpha-1.txt:303
msgid ""
"In addition to the change in structure, Django 1.2 removes the special "
"handling for the built-in database backends. All database backends must now "
"be specified by a fully qualified module name (i.e., ``django.db.backends."
"postgresql_psycopg2``, rather than just ``postgresql_psycopg2``)."
msgstr ""

# 3ebaf2736670490f80881fe32db98d21
#: ../../releases/1.2.txt:844
msgid "``postgresql`` database backend"
msgstr ""

# e8f816117fc04c4faba0673eeed23d38
#: ../../releases/1.2.txt:846
msgid ""
"The ``psycopg1`` library has not been updated since October 2005. As a "
"result, the ``postgresql`` database backend, which uses this library, has "
"been deprecated."
msgstr ""

# 1f6dd13a66c44ce296bc901b2bd900ef
#: ../../releases/1.2.txt:850
msgid ""
"If you are currently using the ``postgresql`` backend, you should migrate to "
"using the ``postgresql_psycopg2`` backend. To update your code, install the "
"``psycopg2`` library and change the :setting:`DATABASE_ENGINE` setting to "
"use ``django.db.backends.postgresql_psycopg2``."
msgstr ""

# 275838669821498389656542a2c147b2
#: ../../releases/1.2.txt:857
msgid "CSRF response-rewriting middleware"
msgstr ""

# 1debdf125aed495287873f50e21c7f79
#: ../../releases/1.2.txt:859
msgid ""
"``CsrfResponseMiddleware``, the middleware that automatically inserted CSRF "
"tokens into ``POST`` forms in outgoing pages, has been deprecated in favor "
"of a template tag method (see above), and will be removed completely in "
"Django 1.4. ``CsrfMiddleware``, which includes the functionality of "
"``CsrfResponseMiddleware`` and ``CsrfViewMiddleware``, has likewise been "
"deprecated."
msgstr ""

# 3b0e9fa1789841d5b094a878da3737ec
# d9aeb08f5aab46beaf7b45006dc0b925
#: ../../releases/1.2.txt:866 ../../releases/1.2-alpha-1.txt:203
msgid ""
"Also, the CSRF module has moved from contrib to core, and the old imports "
"are deprecated, as described in the upgrading notes."
msgstr ""

# e77d2320f3714c41b31bd35208464c4a
# 964acc283d534ca1be6e61b44cb9dff9
#: ../../releases/1.2.txt:875 ../../releases/1.2-alpha-1.txt:212
msgid "``SMTPConnection``"
msgstr ""

# a6beba9d42c748219bc1d76495efaf85
#: ../../releases/1.2.txt:877
msgid ""
"The ``SMTPConnection`` class has been deprecated in favor of a generic email "
"backend API. Old code that explicitly instantiated an instance of an "
"SMTPConnection::"
msgstr ""

# d58779342f6d48f592e9315e6f029b64
#: ../../releases/1.2.txt:886
msgid ""
"...should now call :meth:`~django.core.mail.get_connection()` to instantiate "
"a generic email connection::"
msgstr ""

# 39c38a2ff5914cad8713214339f19346
# 4f5b6009674543c2ba1ab6bebf1c3070
#: ../../releases/1.2.txt:894 ../../releases/1.2-alpha-1.txt:231
msgid ""
"Depending on the value of the :setting:`EMAIL_BACKEND` setting, this may not "
"return an SMTP connection. If you explicitly require an SMTP connection with "
"which to send email, you can explicitly request an SMTP connection::"
msgstr ""

# 8d0bf286e3ef4574aaae8c149c104225
# ce6455e56b794579aaa236b53fe9fcab
#: ../../releases/1.2.txt:904 ../../releases/1.2-alpha-1.txt:241
msgid ""
"If your call to construct an instance of ``SMTPConnection`` required "
"additional arguments, those arguments can be passed to the :meth:`~django."
"core.mail.get_connection()` call::"
msgstr ""

# aaeef13d0c8a4722991c3b32c0cdbaf3
# a643ca44c2a64f24b5fa77f8f72eec10
#: ../../releases/1.2.txt:911 ../../releases/1.2-alpha-1.txt:310
msgid "User Messages API"
msgstr ""

# 3c89e38c01bd4c1a830b1edd23ddd49b
# 17f9414fe4aa436c8652488182bdc5d3
#: ../../releases/1.2.txt:913 ../../releases/1.2-alpha-1.txt:312
msgid ""
"The API for storing messages in the user ``Message`` model (via ``user."
"message_set.create``) is now deprecated and will be removed in Django 1.4 "
"according to the standard :doc:`release process </internals/release-"
"process>`."
msgstr ""

# c0aa602371214a08915bb186a8c6c368
#: ../../releases/1.2.txt:917
msgid "To upgrade your code, you need to replace any instances of this::"
msgstr ""

# 778e480c6bac4bb2871abda2f0c32c26
#: ../../releases/1.2.txt:921
msgid "...with the following::"
msgstr ""

# d6d69e034d4247f795784ba6b235a738
# fb790d94438d4336b40089ffef694cae
#: ../../releases/1.2.txt:926 ../../releases/1.2-alpha-1.txt:325
msgid ""
"Additionally, if you make use of the method, you need to replace the "
"following::"
msgstr ""

# 53d9eeebe31e401e884f5f96e54691a6
#: ../../releases/1.2.txt:932
msgid "...with::"
msgstr ""

# 096121163e694e689fc6666235f64b9a
# e2765ec41b9b4d8fb9d8e6afc943a6cf
#: ../../releases/1.2.txt:938 ../../releases/1.2-alpha-1.txt:337
msgid ""
"For more information, see the full :doc:`messages documentation </ref/"
"contrib/messages>`. You should begin to update your code to use the new API "
"immediately."
msgstr ""

# 156e156bf6c2485b99df98548b9435de
# 9ad7e91b6d8b4dc3b34f71720298acf7
#: ../../releases/1.2.txt:943 ../../releases/1.2-alpha-1.txt:342
msgid "Date format helper functions"
msgstr ""

# 1f2acfdab00a47c7bb6337ffc10a8dc2
#: ../../releases/1.2.txt:945
msgid ""
"``django.utils.translation.get_date_formats()`` and ``django.utils."
"translation.get_partial_date_formats()`` have been deprecated in favor of "
"the appropriate calls to ``django.utils.formats.get_format()``, which is "
"locale-aware when :setting:`USE_L10N` is set to ``True``, and falls back to "
"default settings if set to ``False``."
msgstr ""

# cb33ad368a1f4a808ed7117e2f9da826
#: ../../releases/1.2.txt:951
msgid "To get the different date formats, instead of writing this::"
msgstr ""

# d2be326985774d478744aea8d6339e34
#: ../../releases/1.2.txt:956
msgid "...use::"
msgstr ""

# aaf4536fb22c4fc3928068c1e94088a9
#: ../../releases/1.2.txt:963
msgid "Or, when directly formatting a date value::"
msgstr ""

# 772421f22bc64ac3871734f5b9f25b43
# 40d22b7794e04df4a410f66f60ffc006
#: ../../releases/1.2.txt:968 ../../releases/1.2-alpha-1.txt:368
msgid "The same applies to the globals found in ``django.forms.fields``:"
msgstr ""

# 0475357d791d4252a4724b413d895b2f
# 47feb8dbbb664c508aefff24df93d8e0
#: ../../releases/1.2.txt:970 ../../releases/1.2-alpha-1.txt:370
msgid "``DEFAULT_DATE_INPUT_FORMATS``"
msgstr ""

# 421d8bc345c34acb80e7a04c3ada8274
# 5da6f4c0f55d4d008b9e3fbf763c76b0
#: ../../releases/1.2.txt:971 ../../releases/1.2-alpha-1.txt:371
msgid "``DEFAULT_TIME_INPUT_FORMATS``"
msgstr ""

# c4662da28c1847d99c008d2092b12007
# 3a75c57bcfc14ce1b518139a8274961a
#: ../../releases/1.2.txt:972 ../../releases/1.2-alpha-1.txt:372
msgid "``DEFAULT_DATETIME_INPUT_FORMATS``"
msgstr ""

# 2f93ee678d304a8397012a472d6caad0
# 2f35e792362741c594e429c89c48f9fd
#: ../../releases/1.2.txt:974 ../../releases/1.2-alpha-1.txt:374
msgid ""
"Use ``django.utils.formats.get_format()`` to get the appropriate formats."
msgstr ""

# 9af84bec7ffa4cc5826268afc1473a86
#: ../../releases/1.2.txt:977
msgid "Function-based test runners"
msgstr ""

# e473ef6ae62c425ca443259804c8dcf7
# ccb01fa108464ce0a4c1475a2db4a12b
#: ../../releases/1.2.txt:979 ../../releases/1.2-beta-1.txt:41
msgid ""
"Django 1.2 changes the test runner tools to use a class-based approach. Old "
"style function-based test runners will still work, but should be updated to "
"use the new :ref:`class-based runners <topics-testing-test_runner>`."
msgstr ""

# b4aa339c74824840bfbe89756d5b2ee2
#: ../../releases/1.2.txt:987
msgid "``Feed`` in ``django.contrib.syndication.feeds``"
msgstr ""

# edd0c097c25142d790a106693f1380e7
#: ../../releases/1.2.txt:989
msgid ""
"The :class:`django.contrib.syndication.feeds.Feed` class has been replaced "
"by the :class:`django.contrib.syndication.views.Feed` class. The old ``feeds."
"Feed`` class is deprecated, and will be removed in Django 1.4."
msgstr ""

# 01d0d798ffed4922941d3995a79398f0
#: ../../releases/1.2.txt:994
msgid ""
"The new class has an almost identical API, but allows instances to be used "
"as views. For example, consider the use of the old framework in the "
"following :doc:`URLconf </topics/http/urls>`::"
msgstr ""

# c2d8ca4649864bb9a58833534b559634
#: ../../releases/1.2.txt:1013
msgid ""
"Using the new Feed class, these feeds can be deployed directly as views::"
msgstr ""

# b90fb05f33ee42f290b636a72fd1ca80
#: ../../releases/1.2.txt:1025
msgid ""
"If you currently use the ``feed()`` view, the ``LatestEntries`` class would "
"often not need to be modified apart from subclassing the new :class:`~django."
"contrib.syndication.views.Feed` class. The exception is if Django was "
"automatically working out the name of the template to use to render the "
"feed's description and title elements (if you were not specifying the "
"``title_template`` and ``description_template`` attributes). You should "
"ensure that you always specify ``title_template`` and "
"``description_template`` attributes, or provide ``item_title()`` and "
"``item_description()`` methods."
msgstr ""

# a941eb26fd5b4d85b7c62aa36c41caad
#: ../../releases/1.2.txt:1034
msgid ""
"However, ``LatestEntriesByCategory`` uses the ``get_object()`` method with "
"the ``bits`` argument to specify a specific category to show. In the new :"
"class:`~django.contrib.syndication.views.Feed` class, ``get_object()`` "
"method takes a ``request`` and arguments from the URL, so it would look like "
"this::"
msgstr ""

# a820b09b3e084a0ea03538ae5c0a10fd
#: ../../releases/1.2.txt:1050
msgid ""
"Additionally, the ``get_feed()`` method on ``Feed`` classes now take "
"different arguments, which may impact you if you use the ``Feed`` classes "
"directly. Instead of just taking an optional ``url`` argument, it now takes "
"two arguments: the object returned by its own ``get_object()`` method, and "
"the current ``request`` object."
msgstr ""

# 7193c07773c6412f9929257686fcedb2
#: ../../releases/1.2.txt:1056
msgid ""
"To take into account ``Feed`` classes not being initialized for each "
"request, the ``__init__()`` method now takes no arguments by default. "
"Previously it would have taken the ``slug`` from the URL and the ``request`` "
"object."
msgstr ""

# ceb62c0431b24c9e8a722c795fa45cae
#: ../../releases/1.2.txt:1061
msgid ""
"In accordance with `RSS best practices`_, RSS feeds will now include an "
"``atom:link`` element. You may need to update your tests to take this into "
"account."
msgstr ""

# d7f47377bf174a08b9df7f00c7aa5d24
# 38ad32f40cc6440fb056a5493489c08a
#: ../../releases/1.2.txt:1065 ../../releases/1.2-beta-1.txt:59
msgid ""
"For more information, see the full :doc:`syndication framework documentation "
"</ref/contrib/syndication>`."
msgstr ""

# d9f215c5c4f145de92604faf43c0ee55
#: ../../releases/1.2.txt:1071
msgid "Technical message IDs"
msgstr ""

# d73ce9b2ddd24a7d9ca728155dce1780
#: ../../releases/1.2.txt:1073
msgid ""
"Up to version 1.1 Django used technical message IDs to provide localizers "
"the possibility to translate date and time formats. They were translatable :"
"term:`translation strings <translation string>` that could be recognized "
"because they were all upper case (for example :setting:`DATETIME_FORMAT`, :"
"setting:`DATE_FORMAT`, :setting:`TIME_FORMAT`). They have been deprecated in "
"favor of the new :ref:`Format localization <format-localization>` "
"infrastructure that allows localizers to specify that information in a "
"``formats.py`` file in the corresponding ``django/conf/locale/<locale name>/"
"`` directory."
msgstr ""

# 0aa2eb05df344932b4e174268b91a52f
#: ../../releases/1.2.txt:1086
msgid ""
"To allow support for multiple databases, the GeoDjango database internals "
"were changed substantially.  The largest backwards-incompatible change is "
"that the module ``django.contrib.gis.db.backend`` was renamed to :mod:"
"`django.contrib.gis.db.backends`, where the full-fledged :ref:`spatial "
"database backends <spatial-backends>` now exist.  The following sections "
"provide information on the most-popular APIs that were affected by these "
"changes."
msgstr ""

# c0177a8fd22c4fe7b5fc983521024a7a
#: ../../releases/1.2.txt:1095
msgid "``SpatialBackend``"
msgstr ""

# 5b84daad89fb492293478a90b0213388
#: ../../releases/1.2.txt:1097
msgid ""
"Prior to the creation of the separate spatial backends, the ``django.contrib."
"gis.db.backend.SpatialBackend`` object was provided as an abstraction to "
"introspect on the capabilities of the spatial database.  All of the "
"attributes and routines provided by ``SpatialBackend`` are now a part of the "
"``ops`` attribute of the database backend."
msgstr ""

# c9b714d7e6354391b6b04e59106738b7
#: ../../releases/1.2.txt:1104
msgid ""
"The old module ``django.contrib.gis.db.backend`` is still provided for "
"backwards-compatibility access to a ``SpatialBackend`` object, which is just "
"an alias to the ``ops`` module of the *default* spatial database connection."
msgstr ""

# 2eb3109f658544bf8944f0dcf354bb79
#: ../../releases/1.2.txt:1109
msgid ""
"Users that were relying on undocumented modules and objects within ``django."
"contrib.gis.db.backend``, rather the abstractions provided by "
"``SpatialBackend``, are required to modify their code. For example, the "
"following import which would work in 1.1 and below::"
msgstr ""

# 1fa44330e6a444cda9a1a17acebbc62a
#: ../../releases/1.2.txt:1117
msgid "Would need to be changed::"
msgstr ""

# e566fdc687ee45aa9f2023b72dc167b0
#: ../../releases/1.2.txt:1123
msgid "``SpatialRefSys`` and ``GeometryColumns`` models"
msgstr ""

# ac762909ef0948a3986907d1f118b842
#: ../../releases/1.2.txt:1125
msgid ""
"In previous versions of GeoDjango, :mod:`django.contrib.gis.db.models` had "
"``SpatialRefSys`` and ``GeometryColumns`` models for querying the OGC "
"spatial metadata tables ``spatial_ref_sys`` and ``geometry_columns``, "
"respectively."
msgstr ""

# 2403bc0baf3b40e591e04a15507fa3a4
#: ../../releases/1.2.txt:1130
msgid ""
"While these aliases are still provided, they are only for the *default* "
"database connection and exist only if the default connection is using a "
"supported spatial database backend."
msgstr ""

# f54c43496ce546e6ac4475f90baa9d3a
#: ../../releases/1.2.txt:1136
msgid ""
"Because the table structure of the OGC spatial metadata tables differs "
"across spatial databases, the ``SpatialRefSys`` and ``GeometryColumns`` "
"models can no longer be associated with the ``gis`` application name.  Thus, "
"no models will be returned when using the ``get_models`` method in the "
"following example::"
msgstr ""

# a4f94edda5304500bbf331ff14caf091
#: ../../releases/1.2.txt:1146
msgid ""
"To get the correct ``SpatialRefSys`` and ``GeometryColumns`` for your "
"spatial database use the methods provided by the spatial backend::"
msgstr ""

# e6dde606c017407c97d0f3cf59fbde7e
#: ../../releases/1.2.txt:1155
msgid ""
"When using the models returned from the ``spatial_ref_sys()`` and "
"``geometry_columns()`` method, you'll still need to use the correct database "
"alias when querying on the non-default connection. In other words, to ensure "
"that the models in the example above use the correct database::"
msgstr ""

# af5720521b6149e296bea89e2c2cf356
#: ../../releases/1.2.txt:1165
msgid "Language code ``no``"
msgstr ""

# a0b0dd3b7eee45298ecad1140095d6c7
#: ../../releases/1.2.txt:1167
msgid ""
"The currently used language code for Norwegian Bokmål ``no`` is being "
"replaced by the more common language code ``nb``."
msgstr ""

# d0ff25b92c4b42fd8be075e38cbee911
#: ../../releases/1.2.txt:1171
msgid "Function-based template loaders"
msgstr ""

# c56cac3060194ef99bbd1cd5ff481702
#: ../../releases/1.2.txt:1173
msgid ""
"Django 1.2 changes the template loading mechanism to use a class-based "
"approach. Old style function-based template loaders will still work, but "
"should be updated to use the new :ref:`class-based template loaders <topic-"
"template-alternate-language>`."
msgstr ""

# eb9211becb484edf9fa2230f4979d097
#: ../../releases/1.2-alpha-1.txt:3
msgid "Django 1.2 alpha 1 release notes"
msgstr ""

# 5c7369c6aab04eecb1e4703668414c32
#: ../../releases/1.2-alpha-1.txt:5
msgid "January 5, 2010"
msgstr ""

# 3a8e74694bed43e69f96cb4684bedbe2
#: ../../releases/1.2-alpha-1.txt:7
msgid "Welcome to Django 1.2 alpha 1!"
msgstr ""

# bc72b9e076724d67abc69a8c1c2600e6
#: ../../releases/1.2-alpha-1.txt:9
msgid ""
"This is the first in a series of preview/development releases leading up to "
"the eventual release of Django 1.2, currently scheduled to take place in "
"March 2010. This release is primarily targeted at developers who are "
"interested in trying out new features and testing the Django codebase to "
"help identify and resolve bugs prior to the final 1.2 release."
msgstr ""

# ed17f47bbe6e49c99e9db89bc0125577
#: ../../releases/1.2-alpha-1.txt:25
msgid ""
"There have been large changes to the way that CSRF protection works, "
"detailed in :doc:`the CSRF documentation </ref/contrib/csrf>`.  The "
"following are the major changes that developers must be aware of:"
msgstr ""

# a9c19b7f4da9419e834d3246ceb7b22c
#: ../../releases/1.2-alpha-1.txt:29
msgid ""
"``CsrfResponseMiddleware`` and ``CsrfMiddleware`` have been deprecated, and "
"**will be removed completely in Django 1.4**, in favor of a template tag "
"that should be inserted into forms."
msgstr ""

# 01c50dbe7b0d4f6281db8a3828f3dda2
#: ../../releases/1.2-alpha-1.txt:33
msgid ""
"All contrib apps use a ``csrf_protect`` decorator to protect the view. This "
"requires the use of the ``csrf_token`` template tag in the template, so if "
"you have used custom templates for contrib views, you MUST READ THE UPGRADE "
"INSTRUCTIONS to fix those templates."
msgstr ""

# c6a49d8ceb96458e9ed3120159fb71a6
#: ../../releases/1.2-alpha-1.txt:43
msgid ""
"``CsrfViewMiddleware`` is included in :setting:`MIDDLEWARE_CLASSES` by "
"default. This turns on CSRF protection by default, so that views that accept "
"POST requests need to be written to work with the middleware. Instructions "
"on how to do this are found in the CSRF docs."
msgstr ""

# de08018763ea4efb9b6cb0aa1261cfdf
#: ../../releases/1.2-alpha-1.txt:48
msgid ""
"CSRF-related code has moved from ``contrib`` to ``core`` (with backwards "
"compatible imports in the old locations, which are deprecated)."
msgstr ""

# 31fc44c9fd9f484ca02a07f0bcafd8d5
#: ../../releases/1.2-alpha-1.txt:55
msgid ""
"Due to new features in the :ttag:`if` template tag, it no longer accepts "
"'and', 'or' and 'not' as valid **variable** names.  Previously that worked "
"in some cases even though these strings were normally treated as keywords.  "
"Now, the keyword status is always enforced, and template code like ``{% if "
"not %}`` or ``{% if and %}`` will throw a TemplateSyntaxError."
msgstr ""

# 55de59b15c954941b4e571937f400a95
#: ../../releases/1.2-alpha-1.txt:64
msgid ""
"``LazyObject`` is an undocumented utility class used for lazily wrapping "
"other objects of unknown type.  In Django 1.1 and earlier, it handled "
"introspection in a non-standard way, depending on wrapped objects "
"implementing a public method ``get_all_members()``. Since this could easily "
"lead to name clashes, it has been changed to use the standard method, "
"involving ``__members__`` and ``__dir__()``. If you used ``LazyObject`` in "
"your own code, and implemented the ``get_all_members()`` method for wrapped "
"objects, you need to make the following changes:"
msgstr ""

# bdba72da84c545c18469ade92cf00b9c
#: ../../releases/1.2-alpha-1.txt:73
msgid ""
"If your class does not have special requirements for introspection (i.e. you "
"have not implemented ``__getattr__()`` or other methods that allow for "
"attributes not discoverable by normal mechanisms), you can simply remove the "
"``get_all_members()`` method.  The default implementation on ``LazyObject`` "
"will do the right thing."
msgstr ""

# f6bac4ab76954a609647fcf4978c6536
#: ../../releases/1.2-alpha-1.txt:79
msgid ""
"If you have more complex requirements for introspection, first rename the "
"``get_all_members()`` method to ``__dir__()``.  This is the standard method, "
"from Python 2.6 onwards, for supporting introspection.  If you are require "
"support for Python < 2.6, add the following code to the class::"
msgstr ""

# 46e96b5746b3400eb7b607d90bef38cd
#: ../../releases/1.2-alpha-1.txt:87
msgid "``__dict__`` on Model instances"
msgstr ""

# 98ee7fc12fde4aa0987d6135f2abf60d
#: ../../releases/1.2-alpha-1.txt:92
msgid ""
"In order to support multiple database configurations, Django 1.2 has added a "
"``_state`` attribute to object instances. This attribute will appear in "
"``__dict__`` for a model instance. If your code relies on iterating over "
"__dict__ to obtain a list of fields, you must now filter the ``_state`` "
"attribute of out ``__dict__``."
msgstr ""

# 0788213fd904466897815882dad82ce4
#: ../../releases/1.2-alpha-1.txt:99
msgid "``get_db_prep_*()`` methods on Field"
msgstr ""

# 680ebc65c3534c9a902fd655eaf29efd
#: ../../releases/1.2-alpha-1.txt:101
msgid ""
"Prior to v1.2, a custom field had the option of defining several functions "
"to support conversion of Python values into database-compatible values. A "
"custom field might look something like::"
msgstr ""

# 6a0435c0c44b4f42b22cf9944bcad023
#: ../../releases/1.2-alpha-1.txt:138
msgid ""
"These changes are required to support multiple databases: ``get_db_prep_*`` "
"can no longer make any assumptions regarding the database for which it is "
"preparing. The ``connection`` argument now provides the preparation methods "
"with the specific connection for which the value is being prepared."
msgstr ""

# bfa7622cbf7d43caa43501143ce78ac3
#: ../../releases/1.2-alpha-1.txt:144
msgid ""
"The two new methods exist to differentiate general data preparation "
"requirements, and requirements that are database-specific. The ``prepared`` "
"argument is used to indicate to the database preparation methods whether "
"generic value preparation has been performed. If an unprepared (i.e., "
"``prepared=False``) value is provided to the ``get_db_prep_*()`` calls, they "
"should invoke the corresponding ``get_prep_*()`` calls to perform generic "
"data preparation."
msgstr ""

# 3b9a98652b4249bcb1cecb4010ea1bbe
#: ../../releases/1.2-alpha-1.txt:152
msgid ""
"Conversion functions has been provided which will transparently convert "
"functions adhering to the old prototype into functions compatible with the "
"new prototype. However, this conversion function will be removed in Django "
"1.4, so you should upgrade your Field definitions to use the new prototype."
msgstr ""

# 8b6bf8dace4943d085157ab9e8f6b9f3
#: ../../releases/1.2-alpha-1.txt:158
msgid ""
"If your ``get_db_prep_*()`` methods made no use of the database connection, "
"you should be able to upgrade by renaming ``get_db_prep_value()`` to "
"``get_prep_value()`` and ``get_db_prep_lookup()`` to ``get_prep_lookup()`. "
"If you require database specific conversions, then you will need to provide "
"an implementation ``get_db_prep_*`` that uses the ``connection`` argument to "
"resolve database-specific values."
msgstr ""

# b643642f5624447ba451d3c995aae79c
#: ../../releases/1.2-alpha-1.txt:169
msgid ""
"Template tags that store rendering state on the node itself may experience "
"problems if they are used with the new :ref:`cached template loader<template-"
"loaders>`."
msgstr ""

# 76d7835fae4b493496c43f35a460b3aa
#: ../../releases/1.2-alpha-1.txt:173
msgid ""
"All of the built-in Django template tags are safe to use with the cached "
"loader, but if you're using custom template tags that come from third party "
"packages, or that you wrote yourself, you should ensure that the ``Node`` "
"implementation for each tag is thread-safe. For more information, see :ref:"
"`template tag thread safety considerations<template_tag_thread_safety>`."
msgstr ""

# 97722e82edc54be5a8de084f311faf93
#: ../../releases/1.2-alpha-1.txt:194
msgid "CSRF response rewriting middleware"
msgstr ""

# eafbb23063c34c568d8cb2c916714bbd
#: ../../releases/1.2-alpha-1.txt:196
msgid ""
"``CsrfResponseMiddleware``, the middleware that automatically inserted CSRF "
"tokens into POST forms in outgoing pages, has been deprecated in favor of a "
"template tag method (see above), and will be removed completely in Django "
"1.4. ``CsrfMiddleware``, which includes the functionality of "
"``CsrfResponseMiddleware`` and ``CsrfViewMiddleware`` has likewise been "
"deprecated."
msgstr ""

# a595c845e2c54242939cfe062ed92467
#: ../../releases/1.2-alpha-1.txt:214
msgid ""
"The ``SMTPConnection`` class has been deprecated in favor of a generic Email "
"backend API. Old code that explicitly instantiated an instance of an "
"SMTPConnection::"
msgstr ""

# ea6fe75b530e467a88dbf1045feec1b6
#: ../../releases/1.2-alpha-1.txt:223
msgid ""
"should now call :meth:`~django.core.mail.get_connection()` to instantiate a "
"generic email connection::"
msgstr ""

# 3611a94df17f421aaa0bf1fada794966
#: ../../releases/1.2-alpha-1.txt:250
msgid ""
"Prior to Django 1.1, Django used a number of settings to control access to a "
"single database. Django 1.2 introduces support for multiple databases, and "
"as a result, the way you define database settings has changed."
msgstr ""

# c6ecca8d21c94f12bf1ac0da275ce9aa
#: ../../releases/1.2-alpha-1.txt:254
msgid ""
"**Any existing Django settings file will continue to work as expected until "
"Django 1.4.** Old-style database settings will be automatically translated "
"to the new-style format."
msgstr ""

# da2b7ca240bd49579de1335397da944a
#: ../../releases/1.2-alpha-1.txt:258
msgid ""
"In the old-style (pre 1.2) format, there were a number of ``DATABASE_`` "
"settings at the top level of your settings file. For example::"
msgstr ""

# d929e6610b3d4023b97d9b7d33cbd376
#: ../../releases/1.2-alpha-1.txt:267
msgid ""
"These settings are now contained inside a dictionary named :setting:"
"`DATABASES`. Each item in the dictionary corresponds to a single database "
"connection, with the name ``'default'`` describing the default database "
"connection. The setting names have also been shortened to reflect the fact "
"that they are stored in a dictionary. The sample settings given previously "
"would now be stored using::"
msgstr ""

# baa92f2e1f744e4d843a9734a525e585
#: ../../releases/1.2-alpha-1.txt:316
msgid "To upgrade your code, you need to replace any instances of::"
msgstr ""

# c0159f882fe9467a9cad5df7bb6fcbac
#: ../../releases/1.2-alpha-1.txt:320
msgid "with the following::"
msgstr ""

# dd1317f9d69b4a05983837eabacba2cd
#: ../../releases/1.2-alpha-1.txt:331
msgid "with::"
msgstr ""

# 2f21ab3428324efb91de0c5e0ce4d982
#: ../../releases/1.2-alpha-1.txt:344
msgid ""
"``django.utils.translation.get_date_formats()`` and ``django.utils."
"translation.get_partial_date_formats()`` have been deprecated in favor of "
"the appropriate calls to ``django.utils.formats.get_format()`` which is "
"locale aware when :setting:`USE_L10N` is set to ``True``, and falls back to "
"default settings if set to ``False``."
msgstr ""

# 9a0341d283794c508930f2b33694b0d3
#: ../../releases/1.2-alpha-1.txt:350
msgid "To get the different date formats, instead of writing::"
msgstr ""

# 188e56e1847a4f82abf21a78c63e1046
#: ../../releases/1.2-alpha-1.txt:355
msgid "use::"
msgstr ""

# 8d62375ad02d487181598428f428a5b1
#: ../../releases/1.2-alpha-1.txt:363
msgid "or, when directly formatting a date value::"
msgstr ""

# 450cbf4a7f194c969e0d0f09fd93d273
#: ../../releases/1.2-alpha-1.txt:378
msgid "What's new in Django 1.2 alpha 1"
msgstr ""

# 48cc27e78d5141e9a40814a13c3ba76c
#: ../../releases/1.2-alpha-1.txt:380
msgid ""
"The following new features are present as of this alpha release; this "
"release also marks the end of major feature development for the 1.2 release "
"cycle. Some minor features will continue development until the 1.2 beta "
"release, however."
msgstr ""

# 6f51f3c981a347a888bdad24429410e4
#: ../../releases/1.2-alpha-1.txt:387
msgid "CSRF support"
msgstr ""

# d8c41b05cf754fb3af74096d30dc2178
#: ../../releases/1.2-alpha-1.txt:389
msgid ""
"Django now has much improved protection against :doc:`Cross-Site Request "
"Forgery (CSRF) attacks</ref/contrib/csrf>`. This type of attack occurs when "
"a malicious Web site contains a link, a form button or some javascript that "
"is intended to perform some action on your Web site, using the credentials "
"of a logged-in user who visits the malicious site in their browser. A "
"related type of attack, 'login CSRF', where an attacking site tricks a "
"user's browser into logging into a site with someone else's credentials, is "
"also covered."
msgstr ""

# 8b37f588594b4b628a60827fadc3e092
#: ../../releases/1.2-alpha-1.txt:399
msgid "Email Backends"
msgstr ""

# b9781bd8f5814bfa8c8121530bd668b5
#: ../../releases/1.2-alpha-1.txt:409
msgid ""
"This also makes it easier to debug mail sending - Django ships with backend "
"implementations that allow you to send email to a :ref:`file<topic-email-"
"file-backend>`, to the :ref:`console<topic-email-console-backend>`, or to :"
"ref:`memory<topic-email-memory-backend>` - you can even configure all email "
"to be :ref:`thrown away<topic-email-dummy-backend>`."
msgstr ""

# d61f1459bc6f4a409600c37080097c10
#: ../../releases/1.2-alpha-1.txt:417
msgid "Messages Framework"
msgstr ""

# 703c184403ba45fe9344e2aa941ef1cf
#: ../../releases/1.2-alpha-1.txt:429
msgid ""
"Django 1.2 adds the ability to use :doc:`more than one database </topics/db/"
"multi-db>` in your Django project. Queries can be issued at a specific "
"database with the `using()` method on querysets; individual objects can be "
"saved to a specific database by providing a ``using`` argument when you save "
"the instance."
msgstr ""

# d7bcca294fce4c93a0dba3c7df4f1e14
#: ../../releases/1.2-alpha-1.txt:436
msgid "'Smart' if tag"
msgstr ""

# b730071feed14fca8aca3a9d69e9e9e9
#: ../../releases/1.2-alpha-1.txt:438
msgid ""
"The :ttag:`if` tag has been upgraded to be much more powerful.  First, "
"support for comparison operators has been added. No longer will you have to "
"type:"
msgstr ""

# 1db4b5a5310147699a0c28811cf79fa7
#: ../../releases/1.2-alpha-1.txt:447
msgid "...as you can now do:"
msgstr ""

# 9657c742ccfe4571a05432092a6ffb19
#: ../../releases/1.2-alpha-1.txt:455
msgid ""
"The operators supported are ``==``, ``!=``, ``<``, ``>``, ``<=``, ``>=`` and "
"``in``, all of which work like the Python operators, in addition to ``and``, "
"``or`` and ``not`` which were already supported."
msgstr ""

# c384d4bdcc8a4c8790e55fffdd7ac7ab
#: ../../releases/1.2-alpha-1.txt:472
msgid ""
"In previous versions of Django, every time you rendered a template it would "
"be reloaded from disk. In Django 1.2, you can use a :ref:`cached template "
"loader <template-loaders>` to load templates once, then use the cached "
"result for every subsequent render. This can lead to a significant "
"performance improvement if your templates are broken into lots of smaller "
"subtemplates (using the ``{% extends %}`` or ``{% include %}`` tags)."
msgstr ""

# 18d3651b18f24ccb8bae0c6692d735de
#: ../../releases/1.2-alpha-1.txt:487
msgid ""
"Fixtures can refer to remote objects using :ref:`topics-serialization-"
"natural-keys`. This lookup scheme is an alternative to the normal primary-"
"key based object references in a fixture, improving readability, and "
"resolving problems referring to objects whose primary key value may not be "
"predictable or known."
msgstr ""

# 12d11611e3354660a0b7d440f60014ad
#: ../../releases/1.2-alpha-1.txt:496
msgid ""
"Models can now use a 64 bit :class:`~django.db.models.BigIntegerField` type."
msgstr ""

# 5121885345004a1689bccd93592795ce
#: ../../releases/1.2-alpha-1.txt:499
msgid "Fast Failure for Tests"
msgstr ""

# 2f081c88ab4c42debb0bdd8aeef661c2
#: ../../releases/1.2-alpha-1.txt:501
msgid ""
"The :djadmin:`test` subcommand of ``django-admin.py``, and the ``runtests."
"py`` script used to run Django's own test suite, support a new ``--"
"failfast`` option. When specified, this option causes the test runner to "
"exit after encountering a failure instead of continuing with the test run.  "
"In addition, the handling of ``Ctrl-C`` during a test run has been improved "
"to trigger a graceful exit from the test run that reports details of the "
"tests run before the interruption."
msgstr ""

# e3ebce7c15544a6792898cde4d42947b
#: ../../releases/1.2-alpha-1.txt:511
msgid ""
"Django's :doc:`internationalization framework </topics/i18n/index>` has been "
"expanded by locale aware formatting and form processing. That means, if "
"enabled, dates and numbers on templates will be displayed using the format "
"specified for the current locale. Django will also use localized formats "
"when parsing data in forms. See :ref:`Format localization <format-"
"localization>` for more details."
msgstr ""

# 4bc032edc3ce4fea8f52a09decd38efe
#: ../../releases/1.2-alpha-1.txt:519
msgid "Added ``readonly_fields`` to ``ModelAdmin``"
msgstr ""

# ff49edc207a64277adabf6eb552afe60
#: ../../releases/1.2-alpha-1.txt:521
msgid ""
":attr:`django.contrib.admin.ModelAdmin.readonly_fields` has been added to "
"enable non-editable fields in add/change pages for models and inlines. Field "
"and calculated values can be displayed along side editable fields."
msgstr ""

# 380eea0fd53942c680d91ed563cf99fc
#: ../../releases/1.2-alpha-1.txt:528
msgid ""
"You can now use the ``DJANGO_COLORS`` environment variable to modify or "
"disable the colors used by ``django-admin.py`` to provide :ref:`syntax "
"highlighting <syntax-coloring>`."
msgstr ""

# 1b34e27723ac46f09de77c791ebeab87
# 67b71ef54b4b4150a1a4f6216af18cb4
# 525dbab16ca743c6888a7dab3db93db1
#: ../../releases/1.2-alpha-1.txt:534 ../../releases/1.2-beta-1.txt:120
#: ../../releases/1.2-rc-1.txt:52
msgid "The Django 1.2 roadmap"
msgstr ""

# 5aa47603aa3b4284af7b361be21af5fb
#: ../../releases/1.2-alpha-1.txt:536
msgid ""
"Before the final Django 1.2 release, several other preview/development "
"releases will be made available. The current schedule consists of at least "
"the following:"
msgstr ""

# 714235e85fe2457bb8b343bf215f3279
#: ../../releases/1.2-alpha-1.txt:540
msgid ""
"Week of **January 26, 2010**: First Django 1.2 beta release. Final feature "
"freeze for Django 1.2."
msgstr ""

# 89790a018bf94b0b8165cfae4c186ed9
# 78bc59f5e94443bfa3e87f191a5e8e70
#: ../../releases/1.2-alpha-1.txt:543 ../../releases/1.2-beta-1.txt:126
msgid ""
"Week of **March 2, 2010**: First Django 1.2 release candidate. String freeze "
"for translations."
msgstr ""

# 63d41ade8da34ee59557a7bd2d0ae44f
# a396c6c6732a4f9e9e46280ac283a5ba
#: ../../releases/1.2-alpha-1.txt:546 ../../releases/1.2-beta-1.txt:129
msgid "Week of **March 9, 2010**: Django 1.2 final release."
msgstr ""

# 34147f60fad2470184a8c29142fa73f6
#: ../../releases/1.2-alpha-1.txt:548
msgid ""
"If necessary, additional alpha, beta or release-candidate packages will be "
"issued prior to the final 1.2 release. Django 1.2 will be released "
"approximately one week after the final release candidate."
msgstr ""

# c8f67204115f40918d35a2e76050d2e9
#: ../../releases/1.2-alpha-1.txt:556
msgid ""
"In order to provide a high-quality 1.2 release, we need your help. Although "
"this alpha release is, again, *not* intended for production use, you can "
"help the Django team by trying out the alpha codebase in a safe test "
"environment and reporting any bugs or issues you encounter. The Django "
"ticket tracker is the central place to search for open issues:"
msgstr ""

# 20f33be883d446ed8d496ae2d812f6f4
# 59363f98ab784dcc822c63261a37e47f
# 841e707cea9a4bf4af4b5efbc6b97786
#: ../../releases/1.2-alpha-1.txt:567 ../../releases/1.2-beta-1.txt:151
#: ../../releases/1.2-rc-1.txt:84
msgid ""
"Additionally, discussion of Django development, including progress toward "
"the 1.2 release, takes place daily on the django-developers mailing list:"
msgstr ""

# 03c48aba56d3401eaad468c33563e194
# 6b94387251dd48638cb979faf3714cd9
#: ../../releases/1.2-alpha-1.txt:585 ../../releases/1.2-beta-1.txt:170
msgid ""
"Development sprints for Django 1.2 will also be taking place at PyCon US "
"2010, on the dedicated sprint days (February 22 through 25), and anyone who "
"wants to help out is welcome to join in, either in person at PyCon or "
"virtually in the IRC channel or on the mailing list."
msgstr ""

# 14a38e121d89485f98ebc803366a28ca
#: ../../releases/1.2-beta-1.txt:3
msgid "Django 1.2 beta 1 release notes"
msgstr ""

# 4b8f5447317948b8817a88c44f740a3c
#: ../../releases/1.2-beta-1.txt:5
msgid "February 5, 2010"
msgstr ""

# 1930f2da44924401869dab79e1db74c3
#: ../../releases/1.2-beta-1.txt:7
msgid "Welcome to Django 1.2 beta 1!"
msgstr ""

# 69637a79d72c4530b60a07df8f782a42
#: ../../releases/1.2-beta-1.txt:9
msgid ""
"This is the second in a series of preview/development releases leading up to "
"the eventual release of Django 1.2, currently scheduled to take place in "
"March 2010. This release is primarily targeted at developers who are "
"interested in trying out new features and testing the Django codebase to "
"help identify and resolve bugs prior to the final 1.2 release."
msgstr ""

# 209e7b00d0d24ac4ae27add0ca607033
#: ../../releases/1.2-beta-1.txt:19
msgid ""
"This document covers changes since the Django 1.2 alpha release; the :doc:"
"`1.2 alpha release notes </releases/1.2-alpha-1>` cover new and updated "
"features in Django between 1.1 and 1.2 alpha."
msgstr ""

# 67a4323332bc4f29aeb1302567acb103
#: ../../releases/1.2-beta-1.txt:25
msgid "Deprecations and other changes in 1.2 beta"
msgstr ""

# 3c9708224e1e41b8bb335f59bedc9d96
#: ../../releases/1.2-beta-1.txt:27
msgid ""
"This beta release deprecates two portions of public API, and introduces a "
"potentially backwards-incompatible change to another. Under :doc:`our API "
"stability policy </misc/api-stability>`, deprecation proceeds over multiple "
"release cycles: initially, the deprecated API will raise "
"``PendingDeprecationWarning``, followed by raising ``DeprecationWarning`` in "
"the next release, and finally removal of the deprecated API in the release "
"after that. APIs beginning the deprecation process in Django 1.2 will be "
"removed in the Django 1.4 release."
msgstr ""

# a912398fb3dc4a8d99558833249993f5
#: ../../releases/1.2-beta-1.txt:39
msgid "Unit test runners"
msgstr ""

# 5aa7aeb1ab364d709494b64557b960b0
#: ../../releases/1.2-beta-1.txt:48
msgid "Syndication feeds"
msgstr ""

# 9f9567ea9977422c988cd6752e7f3260
#: ../../releases/1.2-beta-1.txt:50
msgid ""
"The :class:`django.contrib.syndication.feeds.Feed` class is being replaced "
"by the :class:`django.contrib.syndication.views.Feed` class. The old ``feeds."
"Feed`` class is deprecated. The new class has an almost identical API, but "
"allows instances to be used as views."
msgstr ""

# aa60f7ac51c343f696c1b7dc9b5bdac5
#: ../../releases/1.2-beta-1.txt:55
msgid ""
"Also, in accordance with `RSS best practices`_, RSS feeds will now include "
"an ``atom:link`` element. You may need to update your tests to take this "
"into account."
msgstr ""

# f065fac056144b418cfc0f6059f04606
#: ../../releases/1.2-beta-1.txt:68
msgid ""
"Due to cookie-handling bugs in Internet Explorer, Safari, and possibly other "
"browsers, Django's encoding of cookie values was changed so that the "
"characters comma (',') and semi-colon (';') are treated as non-safe "
"characters, and are therefore encoded as ``\\054`` and ``\\073`` "
"respectively. This could produce backwards incompatibilities if you are "
"relying on the ability to set these characters directly in cookie values."
msgstr ""

# 277afd730c294b07b43f7700adf74c24
#: ../../releases/1.2-beta-1.txt:78
msgid "What's new in 1.2 beta"
msgstr ""

# 55dc9cfccfbc4a1a99a4fb68e281f528
#: ../../releases/1.2-beta-1.txt:80
msgid ""
"This 1.2 beta release marks the final feature freeze for Django 1.2; while "
"most feature development was completed for 1.2 alpha (which constituted a "
"freeze on major features), a few other new features were added afterward and "
"so are new as of 1.2 beta."
msgstr ""

# cb51b046b53f4128bb03ddc480d5ae3b
#: ../../releases/1.2-beta-1.txt:89
msgid ""
"A foundation for specifying permissions at the per-object level was added in "
"Django 1.2 alpha but not documented with the alpha release."
msgstr ""

# b0bdf6b93abb4e77803f3622ec3b674c
#: ../../releases/1.2-beta-1.txt:92
msgid ""
"The default authentication backends shipped with Django do not currently "
"make use of this, but third-party authentication backends are free to do so. "
"See the :doc:`authentication docs </topics/auth>` for more information."
msgstr ""

# 1e510b118ae64d69999a9b810f1bf36b
#: ../../releases/1.2-beta-1.txt:101
msgid ""
"If you provide a custom authentication backend with the attribute "
"``supports_anonymous_user`` set to ``True``, the ``AnonymousUser`` class "
"will check the backend for permissions, just as the normal ``User`` does. "
"This is intended to help centralize permission handling; apps can always "
"delegate the question of whether something is allowed or not to the "
"authorization/authentication system. See the :doc:`authentication docs </"
"topics/auth>` for more details."
msgstr ""

# feffb3dc47ee4ac8a09ec5ae5d598de4
#: ../../releases/1.2-beta-1.txt:111
msgid "``select_related()`` improvements"
msgstr ""

# 419009faae3840bfa35e238746b83c0a
#: ../../releases/1.2-beta-1.txt:113
msgid ""
"The ``select_related()`` method of ``QuerySet`` now accepts the "
"``related_name`` of a reverse one-to-one relation in the list of fields to "
"select. One-to-one relations will not, however, be traversed by a depth-"
"based ``select_related()`` call."
msgstr ""

# 60fbb224bd91433f92cc729c463ebeb9
#: ../../releases/1.2-beta-1.txt:122
msgid ""
"Before the final Django 1.2 release, at least one additional preview/"
"development releases will be made available. The current schedule consists "
"of at least the following:"
msgstr ""

# 55024f7a69e54220b40da37ed4aa1a17
#: ../../releases/1.2-beta-1.txt:131
msgid ""
"If necessary, additional beta or release-candidate packages will be issued "
"prior to the final 1.2 release. Django 1.2 will be released approximately "
"one week after the final release candidate."
msgstr ""

# fe6280f642484dbbbc1cdc60edf512dc
#: ../../releases/1.2-beta-1.txt:139
msgid ""
"In order to provide a high-quality 1.2 release, we need your help. Although "
"this beta release is, again, *not* intended for production use, you can help "
"the Django team by trying out the beta codebase in a safe test environment "
"and reporting any bugs or issues you encounter. The Django ticket tracker is "
"the central place to search for open issues:"
msgstr ""

# c7783f9e71994af6acb4523b79664e3f
#: ../../releases/1.2-rc-1.txt:3
msgid "Django 1.2 RC 1 release notes"
msgstr ""

# 486a68722cba4ad88319e5d918c9b106
#: ../../releases/1.2-rc-1.txt:6
msgid "May 5, 2010"
msgstr ""

# 465e9c85f7ec4f3abe0948709668255f
#: ../../releases/1.2-rc-1.txt:8
msgid "Welcome to the first Django 1.2 release candidate!"
msgstr ""

# 1e8d1231bbf446e194a299f3d1c3894d
#: ../../releases/1.2-rc-1.txt:10
msgid ""
"This is the third -- and likely last -- in a series of preview/development "
"releases leading up to the eventual release of Django 1.2. This release is "
"targeted primarily at developers who are interested in trying out new "
"features and testing the Django codebase to help identify and resolve any "
"critical bugs prior to the final 1.2 release."
msgstr ""

# 61e9d12c83ef4cf6b9db0e12232929d2
#: ../../releases/1.2-rc-1.txt:20
msgid ""
"Django has been feature frozen since the 1.2 beta release, so this release "
"candidate contains no new features, only bugfixes; for a summary of features "
"new to Django 1.2, consult the :doc:`1.2 alpha </releases/1.2-alpha-1>` and :"
"doc:`1.2 beta </releases/1.2-beta-1>` release notes."
msgstr ""

# 2b2838ebb07346f3abffe69933ad73c6
#: ../../releases/1.2-rc-1.txt:54
msgid ""
"As of this release candidate, Django 1.2 is in both feature freeze and "
"\"string freeze\" -- all strings marked for translation in the Django "
"codebase will retain their current form in the final Django 1.2 release. "
"Only critical release-blocking bugs, documentation and updated translation "
"files will receive attention between now and the final 1.2 release. Note "
"that Django's localization infrastructure has been expanded for 1.2, and "
"translation packages should now include a ``formats.py`` file containing "
"data for localized formatting of numbers and dates."
msgstr ""

# 79ef13425e5942afb7f9755e9ce7e8ee
#: ../../releases/1.2-rc-1.txt:64
msgid ""
"If no critical bugs are discovered, Django 1.2 will be released "
"approximately one week after this release candidate, on or about May 12, "
"2010."
msgstr ""

# 9494cb9650fb40acb4057ce41696fce6
#: ../../releases/1.2-rc-1.txt:72
msgid ""
"In order to provide a high-quality 1.2 release, we need your help. Although "
"this release candidate is, again, *not* intended for production use, you can "
"help the Django team by trying out this release candidate in a safe testing "
"environment and reporting any bugs or issues you encounter. The Django "
"ticket tracker is the central place to search for open issues:"
msgstr ""

# 1a2e6d00bce14ee0b704f2cf9106d1f5
#: ../../releases/1.2.1.txt:3
msgid "Django 1.2.1 release notes"
msgstr ""

# c3351eae96c0401aa76d204016efa65b
#: ../../releases/1.2.1.txt:5
msgid ""
"Django 1.2.1 was released almost immediately after 1.2.0 to correct two "
"small bugs: one was in the documentation packaging script, the other was a "
"bug_ that affected datetime form field widgets when localisation was enabled."
msgstr ""

# 02879bb5760944c49d87c1acdeec149b
#: ../../releases/1.2.2.txt:3
msgid "Django 1.2.2 release notes"
msgstr ""

# e3ea1dc9d82c41cd8776194f07879613
#: ../../releases/1.2.2.txt:5
msgid "Welcome to Django 1.2.2!"
msgstr ""

# 9ca2507491bc4f86b1503f50a0f721a3
#: ../../releases/1.2.2.txt:7
msgid ""
"This is the second \"bugfix\" release in the Django 1.2 series, improving "
"the stability and performance of the Django 1.2 codebase."
msgstr ""

# 563291e5eea44ba593257b09d31ed104
#: ../../releases/1.2.2.txt:10
msgid ""
"Django 1.2.2 maintains backwards compatibility with Django 1.2.1, but "
"contain a number of fixes and other improvements. Django 1.2.2 is a "
"recommended upgrade for any development or deployment currently using or "
"targeting Django 1.2."
msgstr ""

# 7846b601633e48d8b5a60648e72c4bf0
# 5cbb9c85afba43949cea18fd3f729181
# f53e72645c4b4a5aac7ed0151ddddbb2
#: ../../releases/1.2.2.txt:15 ../../releases/1.2.4.txt:15
#: ../../releases/1.2.5.txt:15
msgid ""
"For full details on the new features, backwards incompatibilities, and "
"deprecated features in the 1.2 branch, see the :doc:`/releases/1.2`."
msgstr ""

# 9f7ba1f8a5714b7f8f5bc92a2c320d4e
#: ../../releases/1.2.2.txt:21
msgid ""
"Ordinarily, a point release would not include new features, but in the case "
"of Django 1.2.2, we have made an exception to this rule."
msgstr ""

# 063cd8bfa4414b348091a9ffaf623179
#: ../../releases/1.2.2.txt:24
msgid ""
"In order to test a bug fix that forms part of the 1.2.2 release, it was "
"necessary to add a feature -- the ``enforce_csrf_checks`` flag -- to the :"
"mod:`test client <django.test.client>`. This flag forces the test client to "
"perform full CSRF checks on forms. The default behavior of the test client "
"hasn't changed, but if you want to do CSRF checks with the test client, it "
"is now possible to do so."
msgstr ""

# 0a21ce21de334fa590c2f2bb75daf8ff
#: ../../releases/1.2.3.txt:3
msgid "Django 1.2.3 release notes"
msgstr ""

# 7d0d5fd516264948ac4a846193f872a0
#: ../../releases/1.2.3.txt:5
msgid ""
"Django 1.2.3 fixed a couple of release problems in the 1.2.2 release and was "
"released two days after 1.2.2."
msgstr ""

# 2897b0e080c24ae99493e1ddb1a37875
#: ../../releases/1.2.3.txt:8
msgid "This release corrects the following problems:"
msgstr ""

# 206920cb19754931b38b32bfe5cbbb00
#: ../../releases/1.2.3.txt:10
msgid ""
"The patch_ applied for the security issue covered in Django 1.2.2 caused "
"issues with non-ASCII responses using CSRF tokens."
msgstr ""

# 6c473563574c45baa0bbdbc4a3eabe43
#: ../../releases/1.2.3.txt:13
msgid ""
"The patch also caused issues with some forms, most notably the user-editing "
"forms in the Django administrative interface."
msgstr ""

# fab6cc3a62ee4e98998a7eb70ec3ae36
#: ../../releases/1.2.3.txt:16
msgid "The packaging manifest did not contain the full list of required files."
msgstr ""

# 959cbb17360744a9b3242ae885c6490c
#: ../../releases/1.2.4.txt:3
msgid "Django 1.2.4 release notes"
msgstr ""

# 4c1b76e9f2354ba3b572906e665afa12
#: ../../releases/1.2.4.txt:5
msgid "Welcome to Django 1.2.4!"
msgstr ""

# 79989de7ebc44cf2a5131c290892f23b
#: ../../releases/1.2.4.txt:7
msgid ""
"This is the fourth \"bugfix\" release in the Django 1.2 series, improving "
"the stability and performance of the Django 1.2 codebase."
msgstr ""

# f9363e9444a943ea8fd7402887f568fc
#: ../../releases/1.2.4.txt:10
msgid ""
"With one exception, Django 1.2.4 maintains backwards compatibility with "
"Django 1.2.3. It also contains a number of fixes and other improvements. "
"Django 1.2.4 is a recommended upgrade for any development or deployment "
"currently using or targeting Django 1.2."
msgstr ""

# 8455c6b7a34b4445b4fc8261e477826e
#: ../../releases/1.2.4.txt:55
msgid ""
"Ordinarily, a point release would not include new features, but in the case "
"of Django 1.2.4, we have made an exception to this rule."
msgstr ""

# f3e3481d8e0e4096b8aeabb95e1f3ed3
#: ../../releases/1.2.4.txt:58
msgid ""
"One of the bugs fixed in Django 1.2.4 involves a set of circumstances "
"whereby a running a test suite on a multiple database configuration could "
"cause the original source database (i.e., the actual production database) to "
"be dropped, causing catastrophic loss of data. In order to provide a fix for "
"this problem, it was necessary to introduce a new setting -- :setting:"
"`TEST_DEPENDENCIES` -- that allows you to define any creation order "
"dependencies in your database configuration."
msgstr ""

# e4c1dc81c29b4016b6eb382cc7f6da72
#: ../../releases/1.2.4.txt:67
msgid ""
"Most users -- even users with multiple-database configurations -- need not "
"be concerned about the data loss bug, or the manual configuration of :"
"setting:`TEST_DEPENDENCIES`. See the `original problem report`_ "
"documentation on :ref:`controlling the creation order of test databases "
"<topics-testing-creation-dependencies>` for details."
msgstr ""

# c4ff50a75d2f41de8f7ab0632ec4b7fe
#: ../../releases/1.2.4.txt:78
msgid ""
"The function-based :setting:`TEST_RUNNER` previously used to execute the "
"GeoDjango test suite, :func:`django.contrib.gis.tests.run_gis_tests`, was "
"finally deprecated in favor of a class-based test runner, :class:`django."
"contrib.gis.tests.GeoDjangoTestSuiteRunner`, added in this release."
msgstr ""

# c489afd8d56f40a2bac1239c41f5b69f
#: ../../releases/1.2.4.txt:84
msgid ""
"In addition, the GeoDjango test suite is now included when :ref:`running the "
"Django test suite <running-unit-tests>` with ``runtests.py`` and using :ref:"
"`spatial database backends <spatial-backends>`."
msgstr ""

# ff873c4ca44b42d7b195a7e20eb13402
#: ../../releases/1.2.5.txt:3
msgid "Django 1.2.5 release notes"
msgstr ""

# 47a0d16031144f7eba1399f6c2eca847
#: ../../releases/1.2.5.txt:5
msgid "Welcome to Django 1.2.5!"
msgstr ""

# ff799fbce6834e3395561224dc232fdb
#: ../../releases/1.2.5.txt:7
msgid ""
"This is the fifth \"bugfix\" release in the Django 1.2 series, improving the "
"stability and performance of the Django 1.2 codebase."
msgstr ""

# bbb553c61a28477b9b13644937c4e523
#: ../../releases/1.2.5.txt:10
msgid ""
"With four exceptions, Django 1.2.5 maintains backwards compatibility with "
"Django 1.2.4. It also contains a number of fixes and other improvements. "
"Django 1.2.5 is a recommended upgrade for any development or deployment "
"currently using or targeting Django 1.2."
msgstr ""

# 5623a8151ccd47588a0b6b7bccc56e50
#: ../../releases/1.2.5.txt:71
msgid "FileField no longer deletes files"
msgstr ""

# bf4f3ee4521b433f8f15951c7b362a06
#: ../../releases/1.2.5.txt:73
msgid ""
"In earlier Django versions, when a model instance containing a :class:"
"`~django.db.models.FileField` was deleted, :class:`~django.db.models."
"FileField` took it upon itself to also delete the file from the backend "
"storage. This opened the door to several potentially serious data-loss "
"scenarios, including rolled-back transactions and fields on different models "
"referencing the same file. In Django 1.2.5, :class:`~django.db.models."
"FileField` will never delete files from the backend storage. If you need "
"cleanup of orphaned files, you'll need to handle it yourself (for instance, "
"with a custom management command that can be run manually or scheduled to "
"run periodically via e.g. cron)."
msgstr ""

# 6fd0e58928bf4b41b2558316c87f758d
# 0dc994cd195641dd980404d3dba63a5c
#: ../../releases/1.2.5.txt:85 ../../releases/1.3.txt:537
msgid "Use of custom SQL to load initial data in tests"
msgstr ""

# a298591428654c76afa2979cbd252698
# eb7cacb6e6e3442c8bc7f7df8123d9ea
#: ../../releases/1.2.5.txt:87 ../../releases/1.3.txt:539
msgid ""
"Django provides a custom SQL hooks as a way to inject hand-crafted SQL into "
"the database synchronization process. One of the possible uses for this "
"custom SQL is to insert data into your database. If your custom SQL contains "
"``INSERT`` statements, those insertions will be performed every time your "
"database is synchronized. This includes the synchronization of any test "
"databases that are created when you run a test suite."
msgstr ""

# 872e06ae17bc4f2fb6f69faf476dfe07
# 45224c7bb8384179ac569bdaa5efa147
#: ../../releases/1.2.5.txt:95 ../../releases/1.3.txt:547
msgid ""
"However, in the process of testing the Django 1.3, it was discovered that "
"this feature has never completely worked as advertised. When using database "
"backends that don't support transactions, or when using a "
"TransactionTestCase, data that has been inserted using custom SQL will not "
"be visible during the testing process."
msgstr ""

# 98289a5edb8c4b9985c86c03c843afa0
# 42a1c0875d4a46268cd96ef66e8cf120
#: ../../releases/1.2.5.txt:101 ../../releases/1.3.txt:553
msgid ""
"Unfortunately, there was no way to rectify this problem without introducing "
"a backwards incompatibility. Rather than leave SQL-inserted initial data in "
"an uncertain state, Django now enforces the policy that data inserted by "
"custom SQL will *not* be visible during testing."
msgstr ""

# 2786a805942a479c95a91e8697596ad9
# e8a1839a03124bca99aaa116bd016b2c
#: ../../releases/1.2.5.txt:107 ../../releases/1.3.txt:559
msgid ""
"This change only affects the testing process. You can still use custom SQL "
"to load data into your production database as part of the syncdb process. If "
"you require data to exist during test conditions, you should either insert "
"it using :ref:`test fixtures <topics-testing-fixtures>`, or using the ``setUp"
"()`` method of your test case."
msgstr ""

# 71d85b4b7bba4115b0fada2eacf4ff47
#: ../../releases/1.2.5.txt:115
msgid "ModelAdmin.lookup_allowed signature changed"
msgstr ""

# 2b8c30c92ab8423dba819d436af2db24
#: ../../releases/1.2.5.txt:117
msgid ""
"Django 1.2.4 introduced a method ``lookup_allowed`` on ``ModelAdmin``, to "
"cope with a security issue (changeset `[15033] <http://code.djangoproject."
"com/changeset/15033>`_). Although this method was never documented, it seems "
"some people have overridden ``lookup_allowed``, especially to cope with "
"regressions introduced by that changeset. While the method is still "
"undocumented and not marked as stable, it may be helpful to know that the "
"signature of this function has changed."
msgstr ""

# aae6af6dbcc241c092f2d3a2baa371e4
#: ../../releases/1.2.6.txt:3
msgid "Django 1.2.6 release notes"
msgstr ""

# 6f79044c754a4d0a9803bb059058659f
# 47cb8f8ba8da4e9aa11c194acbc9b495
#: ../../releases/1.2.6.txt:5 ../../releases/1.3.1.txt:5
msgid "*September 9, 2011*"
msgstr ""

# 3fcf3631e33341e391ba59408d5e3499
#: ../../releases/1.2.6.txt:7
msgid "Welcome to Django 1.2.6!"
msgstr ""

# a1116b96733949fba090c707da695754
#: ../../releases/1.2.6.txt:9
msgid ""
"This is the sixth bugfix/security release in the Django 1.2 series, fixing "
"several security issues present in Django 1.2.5.  Django 1.2.6 is a "
"recommended upgrade for all users of any Django release in the 1.2.X series."
msgstr ""

# 45bbb80e2f2d400cb6c2efe54b29df8d
# afe4b80c09ce4c66abe95cc6c623baa9
#: ../../releases/1.2.6.txt:13 ../../releases/1.3.1.txt:13
msgid ""
"For a full list of issues addressed in this release, see the `security "
"advisory`_."
msgstr ""

# 072191d04dca484db522824b66609405
#: ../../releases/1.2.7.txt:3
msgid "Django 1.2.7 release notes"
msgstr ""

# 3ea567398e3a4812a5b6657b7f51b6d0
#: ../../releases/1.2.7.txt:5
msgid "*September 10, 2011*"
msgstr ""

# 327f5734c6e74d62814570e97bbd9b5c
#: ../../releases/1.2.7.txt:7
msgid "Welcome to Django 1.2.7!"
msgstr ""

# c8ce3127599640c79ff4727f364f78cb
#: ../../releases/1.2.7.txt:9
msgid ""
"This is the seventh bugfix/security release in the Django 1.2 series. It "
"replaces Django 1.2.6 due to problems with the 1.2.6 release tarball. Django "
"1.2.7 is a recommended upgrade for all users of any Django release in the "
"1.2.X series."
msgstr ""

# ef81b8a5d328492794d12337267e00cd
#: ../../releases/1.2.7.txt:14
msgid "For more information, see the `release advisory`_."
msgstr ""

# 3e42f04c51924d9d9644aa7c54041e06
#: ../../releases/1.3.txt:3
msgid "Django 1.3 release notes"
msgstr ""

# 0efb81f20b344bdcba27c50037eb8568
#: ../../releases/1.3.txt:5
msgid "*March 23, 2011*"
msgstr ""

# a50093ea6b97491abef0365071ed084b
#: ../../releases/1.3.txt:7
msgid "Welcome to Django 1.3!"
msgstr ""

# 9bca06debf7c49929b46433bae81bbfc
#: ../../releases/1.3.txt:9
msgid ""
"Nearly a year in the making, Django 1.3 includes quite a few `new features`_ "
"and plenty of bug fixes and improvements to existing features. These release "
"notes cover the new features in 1.3, as well as some `backwards-incompatible "
"changes`_ you'll want to be aware of when upgrading from Django 1.2 or older "
"versions."
msgstr ""

# 5bfe917a95fe4638ab740f63d2001fa3
#: ../../releases/1.3.txt:18
msgid ""
"Django 1.3's focus has mostly been on resolving smaller, long-standing "
"feature requests, but that hasn't prevented a few fairly significant new "
"features from landing, including:"
msgstr ""

# 1656185f9831445f9ab035cd15b82270
#: ../../releases/1.3.txt:22
msgid "A framework for writing `class-based views`_."
msgstr ""

# b575e8f2e0ec457394b2fe4bc00bbe9f
#: ../../releases/1.3.txt:24
msgid "Built-in support for `using Python's logging facilities`_."
msgstr ""

# cb69514f44194b75b6a58b990c6317d9
#: ../../releases/1.3.txt:26
msgid "Contrib support for `easy handling of static files`_."
msgstr ""

# 90a5b9eb895846c498601d25face574b
#: ../../releases/1.3.txt:28
msgid ""
"Django's testing framework now supports (and ships with a copy of) `the "
"unittest2 library`_."
msgstr ""

# 3c4c5d8710ad46559868a1876d1b091f
#: ../../releases/1.3.txt:31
msgid ""
"There's plenty more, of course; see the coverage of `new features`_ below "
"for a full rundown and details."
msgstr ""

# d1f6412db336432591ae588823d26fb5
#: ../../releases/1.3.txt:34
msgid ""
"Wherever possible, of course, new features are introduced in a backwards-"
"compatible manner per :doc:`our API stability policy </misc/api-stability>` "
"policy. As a result of this policy, Django 1.3 `begins the deprecation "
"process for some features`_."
msgstr ""

# 125c7556a5cb4c47bee55b7799fa61c7
#: ../../releases/1.3.txt:39
msgid ""
"Some changes, unfortunately, are genuinely backwards-incompatible; in most "
"cases these are due to security issues or bugs which simply couldn't be "
"fixed any other way. Django 1.3 includes a few of these, and descriptions of "
"them -- along with the (minor) modifications you'll need to make to handle "
"them -- are documented in the list of `backwards-incompatible changes`_ "
"below."
msgstr ""

# 3f7a3a1ab683423d8e8cc9200d539351
#: ../../releases/1.3.txt:56
msgid ""
"The release of Django 1.2 was notable for having the first shift in Django's "
"Python compatibility policy; prior to Django 1.2, Django supported any 2.x "
"version of Python from 2.3 up. As of Django 1.2, the minimum requirement was "
"raised to Python 2.4."
msgstr ""

# db3c4a8801884be380d59d44df5c77e1
#: ../../releases/1.3.txt:61
msgid ""
"Django 1.3 continues to support Python 2.4, but will be the final Django "
"release series to do so; beginning with Django 1.4, the minimum supported "
"Python version will be 2.5. A document outlining our full timeline for "
"deprecating Python 2.x and moving to Python 3.x will be published shortly "
"after the release of Django 1.3."
msgstr ""

# 240d2fa6c6914992b278d49c5697ec2d
#: ../../releases/1.3.txt:68
msgid "What's new in Django 1.3"
msgstr ""

# cbc14f4bf2b141b693db2cbbc25c0365
# 2342104facec452cba04fb558fcdea2b
#: ../../releases/1.3.txt:71 ../../releases/1.3-alpha-1.txt:30
msgid "Class-based views"
msgstr ""

# 9ee94aade05041109c4a726342422e0f
# 21f40b06bb564b9ebafffdac0cd83983
#: ../../releases/1.3.txt:73 ../../releases/1.3-alpha-1.txt:32
msgid ""
"Django 1.3 adds a framework that allows you to use a class as a view. This "
"means you can compose a view out of a collection of methods that can be "
"subclassed and overridden to provide common views of data without having to "
"write too much code."
msgstr ""

# 792b1d2c2ff94398b3ea74e2e80cf22f
# c9c9fbd35fa54a20b733c1842264bdc1
#: ../../releases/1.3.txt:78 ../../releases/1.3-alpha-1.txt:37
msgid ""
"Analogs of all the old function-based generic views have been provided, "
"along with a completely generic view base class that can be used as the "
"basis for reusable applications that can be easily extended."
msgstr ""

# f1fe5b7c3fa4442ab433cab894bc2296
#: ../../releases/1.3.txt:83
msgid ""
"See :doc:`the documentation on class-based generic views</topics/class-based-"
"views>` for more details. There is also a document to help you :doc:`convert "
"your function-based generic views to class-based views</topics/generic-views-"
"migration>`."
msgstr ""

# decb7d54ad62452eb4023c8f72b9ece2
# a2eddcf8214c417aa4bb6d2a8a64cbcf
#: ../../releases/1.3.txt:89 ../../releases/1.3-alpha-1.txt:47
msgid "Logging"
msgstr ""

# 99bf892698f644339f96bef8787f37fb
#: ../../releases/1.3.txt:91
msgid ""
"Django 1.3 adds framework-level support for Python's ``logging`` module.  "
"This means you can now easily configure and control logging as part of your "
"Django project. A number of logging handlers and logging calls have been "
"added to Django's own code as well -- most notably, the error emails sent on "
"a HTTP 500 server error are now handled as a logging activity. See :doc:`the "
"documentation on Django's logging interface </topics/logging>` for more "
"details."
msgstr ""

# d6ad0e3c25c34dc3995b06e693108ea1
# acc70c12f46d42d3a023f8d5e526bbd9
#: ../../releases/1.3.txt:100 ../../releases/1.3-alpha-1.txt:58
msgid "Extended static files handling"
msgstr ""

# 5c632fbd48f04d79ac8e2a01c4574d36
#: ../../releases/1.3.txt:102
msgid ""
"Django 1.3 ships with a new contrib app -- ``django.contrib.staticfiles`` -- "
"to help developers handle the static media files (images, CSS, Javascript, "
"etc.) that are needed to render a complete web page."
msgstr ""

# 9be6ac91a1624febbdb9631c42fe22a1
#: ../../releases/1.3.txt:107
msgid ""
"In previous versions of Django, it was common to place static assets in :"
"setting:`MEDIA_ROOT` along with user-uploaded files, and serve them both at :"
"setting:`MEDIA_URL`. Part of the purpose of introducing the ``staticfiles`` "
"app is to make it easier to keep static files separate from user-uploaded "
"files. Static assets should now go in ``static/`` subdirectories of your "
"apps or in other static assets directories listed in :setting:"
"`STATICFILES_DIRS`, and will be served at :setting:`STATIC_URL`."
msgstr ""

# 9148cd4ce822474b816fd675034a4c07
# 26a344f9d7d54185a75934e282fb02cd
#: ../../releases/1.3.txt:116 ../../releases/1.3-alpha-1.txt:74
msgid ""
"See the :doc:`reference documentation of the app </ref/contrib/staticfiles>` "
"for more details or learn how to :doc:`manage static files </howto/static-"
"files>`."
msgstr ""

# a3bf6c2b72834a1c88708b71864fab12
#: ../../releases/1.3.txt:121
msgid "unittest2 support"
msgstr ""

# 1929ba7bef264d338adb268658193712
#: ../../releases/1.3.txt:123
msgid ""
"Python 2.7 introduced some major changes to the ``unittest`` library, adding "
"some extremely useful features. To ensure that every Django project can "
"benefit from these new features, Django ships with a copy of unittest2_, a "
"copy of the Python 2.7 unittest library, backported for Python 2.4 "
"compatibility."
msgstr ""

# ac95464833464d46aa3cfe10a726b4be
#: ../../releases/1.3.txt:129
msgid ""
"To access this library, Django provides the ``django.utils.unittest`` module "
"alias. If you are using Python 2.7, or you have installed ``unittest2`` "
"locally, Django will map the alias to the installed version of the unittest "
"library. Otherwise, Django will use its own bundled version of unittest2."
msgstr ""

# 36f9c02359a84c158132d28525bf8692
#: ../../releases/1.3.txt:135
msgid "To take advantage of this alias, simply use::"
msgstr ""

# 30e09e36bd0940e78f51873cbf283366
# 997345f4d7084c1dbcde58d747de2866
#: ../../releases/1.3.txt:139 ../../releases/1.3-alpha-1.txt:97
msgid "wherever you would have historically used::"
msgstr ""

# 064f1d5ab82d4af39265bad22462e77b
#: ../../releases/1.3.txt:143
msgid ""
"If you want to continue to use the base unittest library, you can -- you "
"just won't get any of the nice new unittest2 features."
msgstr ""

# 9b5b16d1cd0c4ecb827fc64db06137a0
# 271c26ae92f14e8e9f231fb744ee89e8
#: ../../releases/1.3.txt:149 ../../releases/1.3-alpha-1.txt:107
msgid "Transaction context managers"
msgstr ""

# 9dcf8057b85343908c2f20c361096d0b
# a93148403b004918867129a9d42acac0
#: ../../releases/1.3.txt:151 ../../releases/1.3-alpha-1.txt:109
msgid ""
"Users of Python 2.5 and above may now use :ref:`transaction management "
"functions <transaction-management-functions>` as `context managers`_. For "
"example::"
msgstr ""

# f3c35bae0e174847bbf169c2ba33370b
# d4e7de1a9ea1431f911db08ef5f20179
#: ../../releases/1.3.txt:159 ../../releases/1.3-alpha-1.txt:117
msgid "For more information, see :ref:`transaction-management-functions`."
msgstr ""

# 6d57fedfc567428187fc1af14b73046e
# 7a2d26864507479599ef5300cbb715d4
#: ../../releases/1.3.txt:162 ../../releases/1.3-alpha-1.txt:120
msgid "Configurable delete-cascade"
msgstr ""

# b6463a1c9af54d7aa10e6e91398018a4
# bb673ff6a12442fc8210f244fe86ff27
#: ../../releases/1.3.txt:164 ../../releases/1.3-alpha-1.txt:122
msgid ""
":class:`~django.db.models.ForeignKey` and :class:`~django.db.models."
"OneToOneField` now accept an :attr:`~django.db.models.ForeignKey.on_delete` "
"argument to customize behavior when the referenced object is deleted. "
"Previously, deletes were always cascaded; available alternatives now include "
"set null, set default, set to any value, protect, or do nothing."
msgstr ""

# 85e9408295cf4597ba7cd555e0ad4618
# fcd11b061a474de7953a92cb02f76118
#: ../../releases/1.3.txt:171 ../../releases/1.3-alpha-1.txt:129
msgid ""
"For more information, see the :attr:`~django.db.models.ForeignKey.on_delete` "
"documentation."
msgstr ""

# 26e86db6ae2d46f78dbab35535774b0a
#: ../../releases/1.3.txt:175
msgid "Contextual markers and comments for translatable strings"
msgstr ""

# a384aa9d4f384df8a09d949fa3cb16f8
# 80712e5e4a4e4b499fc21434c26047b8
#: ../../releases/1.3.txt:177 ../../releases/1.3-alpha-1.txt:135
msgid ""
"For translation strings with ambiguous meaning, you can now use the "
"``pgettext`` function to specify the context of the string."
msgstr ""

# af0ff2beff694cc0a73b75c97ee33033
#: ../../releases/1.3.txt:180
msgid ""
"And if you just want to add some information for translators, you can also "
"add special translator comments in the source."
msgstr ""

# 2dc5c88c95304b919194214d81a950d9
#: ../../releases/1.3.txt:183
msgid ""
"For more information, see :ref:`contextual-markers` and :ref:`translator-"
"comments`."
msgstr ""

# 3de19a1075f64b0f953080b02c9ca2b4
#: ../../releases/1.3.txt:187
msgid "Improvements to built-in template tags"
msgstr ""

# ebb51d97a39246c88368f6afa9f731ba
#: ../../releases/1.3.txt:189
msgid ""
"A number of improvements have been made to Django's built-in template tags:"
msgstr ""

# c544792bb9c24e1db8c456d2e68e52f5
#: ../../releases/1.3.txt:191
msgid ""
"The :ttag:`include` tag now accepts a ``with`` option, allowing you to "
"specify context variables to the included template"
msgstr ""

# f93dd69cd5494bd5897416768a432935
#: ../../releases/1.3.txt:194
msgid ""
"The :ttag:`include` tag now accepts an ``only`` option, allowing you to "
"exclude the current context from the included context"
msgstr ""

# f5e265e37f224c05a4c597e347259fe0
#: ../../releases/1.3.txt:197
msgid ""
"The :ttag:`with` tag now allows you to define multiple context variables in "
"a single :ttag:`with` block."
msgstr ""

# 8c90592030304dfeab4217b4d36830e6
#: ../../releases/1.3.txt:200
msgid ""
"The :ttag:`load` tag now accepts a ``from`` argument, allowing you to load a "
"single tag or filter from a library."
msgstr ""

# 7afad57e8cad4928916fd5add8a6376e
#: ../../releases/1.3.txt:204
msgid "TemplateResponse"
msgstr ""

# 214a401c70b942d1b54b7b1b29f5f973
#: ../../releases/1.3.txt:206
msgid ""
"It can sometimes be beneficial to allow decorators or middleware to modify a "
"response *after* it has been constructed by the view. For example, you may "
"want to change the template that is used, or put additional data into the "
"context."
msgstr ""

# c71efb8819ea40bb8a57e2627cc82c51
#: ../../releases/1.3.txt:211
msgid ""
"However, you can't (easily) modify the content of a basic :class:`~django."
"http.HttpResponse` after it has been constructed. To overcome this "
"limitation, Django 1.3 adds a new :class:`~django.template.response."
"TemplateResponse` class. Unlike basic :class:`~django.http.HttpResponse` "
"objects, :class:`~django.template.response.TemplateResponse` objects retain "
"the details of the template and context that was provided by the view to "
"compute the response. The final output of the response is not computed until "
"it is needed, later in the response process."
msgstr ""

# a4d69c5cf2f14f82a31cc4935c9e6993
#: ../../releases/1.3.txt:221
msgid ""
"For more details, see the :doc:`documentation </ref/template-response>` on "
"the :class:`~django.template.response.TemplateResponse` class."
msgstr ""

# a45790707f6e448e88d1a907441765bd
#: ../../releases/1.3.txt:225
msgid "Caching changes"
msgstr ""

# f4591bebe8f0499ea339f1be12d84bcd
#: ../../releases/1.3.txt:227
msgid ""
"Django 1.3 sees the introduction of several improvements to the Django's "
"caching infrastructure."
msgstr ""

# 6a9898a3af214e808e699c3f5208baec
#: ../../releases/1.3.txt:230
msgid ""
"Firstly, Django now supports multiple named caches. In the same way that "
"Django 1.2 introduced support for multiple database connections, Django 1.3 "
"allows you to use the new :setting:`CACHES` setting to define multiple named "
"cache connections."
msgstr ""

# 82886519a0ea481f8b9be05658984455
#: ../../releases/1.3.txt:235
msgid ""
"Secondly, :ref:`versioning <cache_versioning>`, :ref:`site-wide prefixing "
"<cache_key_prefixing>` and :ref:`transformation <cache_key_transformation>` "
"have been added to the cache API."
msgstr ""

# dbb6592355fb473ca2f09920c944842d
#: ../../releases/1.3.txt:239
msgid ""
"Thirdly, :ref:`cache key creation <using-vary-headers>` has been updated to "
"take the request query string into account on ``GET`` requests."
msgstr ""

# fff957a70d6344baa5b4710df9e482e5
#: ../../releases/1.3.txt:243
msgid ""
"Finally, support for pylibmc_ has been added to the memcached cache backend."
msgstr ""

# 41165ec9dc2b46298c95f1c1af431e30
#: ../../releases/1.3.txt:246
msgid ""
"For more details, see the :doc:`documentation on caching in Django</topics/"
"cache>`."
msgstr ""

# 088691c12dbc413cb2a01499a715d4d4
# 197583d662e24626a5fde83300625a2e
#: ../../releases/1.3.txt:252 ../../releases/1.3-beta-1.txt:59
msgid "Permissions for inactive users"
msgstr ""

# cca0871416764ca88003497731f2619c
#: ../../releases/1.3.txt:254
msgid ""
"If you provide a custom auth backend with ``supports_inactive_user`` set to "
"``True``, an inactive ``User`` instance will check the backend for "
"permissions.  This is useful for further centralizing the permission "
"handling. See the :doc:`authentication docs </topics/auth>` for more details."
msgstr ""

# d7b55cd9b0bf4e868b894d8074873fa0
#: ../../releases/1.3.txt:263
msgid ""
"The GeoDjango test suite is now included when :ref:`running the Django test "
"suite <running-unit-tests>` with ``runtests.py`` when using :ref:`spatial "
"database backends <spatial-backends>`."
msgstr ""

# dc3a01d00a4348b6bfeba72fbf8319b8
#: ../../releases/1.3.txt:268
msgid ":setting:`MEDIA_URL` and :setting:`STATIC_URL` must end in a slash"
msgstr ""

# 271508047ae34688a57172f1e8068355
#: ../../releases/1.3.txt:270
msgid ""
"Previously, the :setting:`MEDIA_URL` setting only required a trailing slash "
"if it contained a suffix beyond the domain name."
msgstr ""

# aba9429135094338b9165b609021ff13
#: ../../releases/1.3.txt:273
msgid ""
"A trailing slash is now *required* for :setting:`MEDIA_URL` and the new :"
"setting:`STATIC_URL` setting as long as it is not blank. This ensures there "
"is a consistent way to combine paths in templates."
msgstr ""

# d2fabb87fb3448f3ae0c40766f2a3e9f
#: ../../releases/1.3.txt:277
msgid ""
"Project settings which provide either of both settings without a trailing "
"slash will now raise a ``PendingDeprecationWarning``."
msgstr ""

# 063c58634264497894de88973603840c
#: ../../releases/1.3.txt:280
msgid ""
"In Django 1.4 this same condition will raise ``DeprecationWarning``, and in "
"Django 1.5 will raise an ``ImproperlyConfigured`` exception."
msgstr ""

# d49f63e7fc414e13947ead3cf2385fb6
# c8f2576a310d41dfb1a64c587fa72259
#: ../../releases/1.3.txt:284 ../../releases/1.3-alpha-1.txt:141
msgid "Everything else"
msgstr ""

# 607763876fc840208ec1c2c097f12a91
# 0040abc98ae4450fa41cc1448d34f407
#: ../../releases/1.3.txt:286 ../../releases/1.3-alpha-1.txt:143
msgid ""
"Django :doc:`1.1 <1.1>` and :doc:`1.2 <1.2>` added lots of big ticket items "
"to Django, like multiple-database support, model validation, and a session-"
"based messages framework. However, this focus on big features came at the "
"cost of lots of smaller features."
msgstr ""

# 37e1bc4dd8ef4c0786664e6ace1a8eb0
# dd62e64a6f21449ebb4e24dec6c63f8b
#: ../../releases/1.3.txt:292 ../../releases/1.3-alpha-1.txt:149
msgid ""
"To compensate for this, the focus of the Django 1.3 development process has "
"been on adding lots of smaller, long standing feature requests. These "
"include:"
msgstr ""

# a8d66054dfca40be8b387b8ba025a22b
#: ../../releases/1.3.txt:296
msgid ""
"Improved tools for accessing and manipulating the current :class:`~django."
"contrib.sites.models.Site` object in :doc:`the sites framework </ref/contrib/"
"sites>`."
msgstr ""

# de025e84f0bb4f0b87a91fb4a20255c5
# 7d300b2b1a2a4f76b19ff0a68457343b
#: ../../releases/1.3.txt:300 ../../releases/1.3-alpha-1.txt:156
msgid ""
"A :class:`~django.test.client.RequestFactory` for mocking requests in tests."
msgstr ""

# 68400f4d88164b4fa296eb553f02c137
#: ../../releases/1.3.txt:303
msgid ""
"A new test assertion -- :meth:`~django.test.TestCase.assertNumQueries` -- "
"making it easier to test the database activity associated with a view."
msgstr ""

# 57714578ce134894b8de7d49fd7919d5
#: ../../releases/1.3.txt:307
msgid ""
"Support for lookups spanning relations in admin's :attr:`~django.contrib."
"admin.ModelAdmin.list_filter`."
msgstr ""

# 9ec4fb7a80084cb1950fbe5eddc0691e
#: ../../releases/1.3.txt:310
msgid "Support for HTTPOnly_ cookies."
msgstr ""

# c50c9eafec424607b0ea8086699fc600
#: ../../releases/1.3.txt:312
msgid ""
":meth:`~django.core.mail.mail_admins()` and :meth:`~django.core.mail."
"mail_managers()` now support easily attaching HTML content to messages."
msgstr ""

# 3ea12568e4cd4a65b45a8023e1e240c8
#: ../../releases/1.3.txt:316
msgid ":class:`~django.core.mail.EmailMessage` now supports CC's."
msgstr ""

# f5377dc1cfb84cd4a5ed14b71755b856
#: ../../releases/1.3.txt:318
msgid ""
"Error emails now include more of the detail and formatting of the debug "
"server error page."
msgstr ""

# e9d66a434f8d4490ba2abbd29218839a
#: ../../releases/1.3.txt:321
msgid ""
":meth:`~django.template.Library.simple_tag` now accepts a ``takes_context`` "
"argument, making it easier to write simple template tags that require access "
"to template context."
msgstr ""

# b745aa2a034c4146beb22b57d13dfa59
#: ../../releases/1.3.txt:325
msgid ""
"A new :meth:`~django.shortcuts.render()` shortcut -- an alternative to :meth:"
"`~django.shortcuts.render_to_response()` providing a :class:`~django."
"template.RequestContext` by default."
msgstr ""

# 037043dead694f2e91ad0334b1fe546d
#: ../../releases/1.3.txt:329
msgid ""
"Support for combining :ref:`F() expressions <query-expressions>` with "
"timedelta values when retrieving or updating database values."
msgstr ""

# 2863b569f80241319a3b06bd0d0f0c5d
#: ../../releases/1.3.txt:337
msgid "Backwards-incompatible changes in 1.3"
msgstr ""

# 2ff22fcb2a534b42a2f76bcf449c2024
#: ../../releases/1.3.txt:340
msgid "CSRF validation now applies to AJAX requests"
msgstr ""

# 4994da06fe734348a9b52f0fccfb27fe
#: ../../releases/1.3.txt:342
msgid ""
"Prior to Django 1.2.5, Django's CSRF-prevention system exempted AJAX "
"requests from CSRF verification; due to `security issues`_ reported to us, "
"however, *all* requests are now subjected to CSRF verification. Consult :doc:"
"`the Django CSRF documentation </ref/contrib/csrf>` for details on how to "
"handle CSRF verification in AJAX requests."
msgstr ""

# 2ab1a8949aaf48a08924b75d74c240d3
#: ../../releases/1.3.txt:354
msgid ""
"Prior to Django 1.2.5, the Django administrative interface allowed filtering "
"on any model field or relation -- not just those specified in "
"``list_filter`` -- via query string manipulation. Due to security issues "
"reported to us, however, query string lookup arguments in the admin must be "
"for fields or relations specified in ``list_filter`` or ``date_hierarchy``."
msgstr ""

# db4833ccb0d744bdae325712d92ab608
#: ../../releases/1.3.txt:362
msgid "Deleting a model doesn't delete associated files"
msgstr ""

# 76a743e98af84b73b8d70c07ac51b88c
#: ../../releases/1.3.txt:364
msgid ""
"In earlier Django versions, when a model instance containing a :class:"
"`~django.db.models.FileField` was deleted, :class:`~django.db.models."
"FileField` took it upon itself to also delete the file from the backend "
"storage. This opened the door to several data-loss scenarios, including "
"rolled-back transactions and fields on different models referencing the same "
"file. In Django 1.3, when a model is deleted the :class:`~django.db.models."
"FileField`'s :func:`~django.db.models.FileField.delete` method won't be "
"called.  If you need cleanup of orphaned files, you'll need to handle it "
"yourself (for instance, with a custom management command that can be run "
"manually or scheduled to run periodically via e.g. cron)."
msgstr ""

# 0eaa9b59bb3c44ff85cc811445786e7d
# f5a9d241da3e4752ade2e8cda5e0e7a8
#: ../../releases/1.3.txt:377 ../../releases/1.3-alpha-1.txt:170
msgid "PasswordInput default rendering behavior"
msgstr ""

# ecc805df64c1405c9c5f3b686a7ea8c4
# a4f44cf27b0a49aa96c9cb2d04d87afa
#: ../../releases/1.3.txt:379 ../../releases/1.3-alpha-1.txt:172
msgid ""
"The :class:`~django.forms.PasswordInput` form widget, intended for use with "
"form fields which represent passwords, accepts a boolean keyword argument "
"``render_value`` indicating whether to send its data back to the browser "
"when displaying a submitted form with errors. Prior to Django 1.3, this "
"argument defaulted to ``True``, meaning that the submitted password would be "
"sent back to the browser as part of the form. Developers who wished to add a "
"bit of additional security by excluding that value from the redisplayed form "
"could instantiate a :class:`~django.forms.PasswordInput` passing "
"``render_value=False`` ."
msgstr ""

# 5ce2d7e4e25d4a0bae49a4e026fa0268
# 8b88f500e6c5462485e4bacb6e2fd484
#: ../../releases/1.3.txt:389 ../../releases/1.3-alpha-1.txt:182
msgid ""
"Due to the sensitive nature of passwords, however, Django 1.3 takes this "
"step automatically; the default value of ``render_value`` is now ``False``, "
"and developers who want the password value returned to the browser on a "
"submission with errors (the previous behavior) must now explicitly indicate "
"this. For example::"
msgstr ""

# 2c8d91b897cd403dbc83cebbf2b28e09
# fa4d2f883bef452e98a3f9666e1dbe68
#: ../../releases/1.3.txt:400 ../../releases/1.3-alpha-1.txt:194
msgid "Clearable default widget for FileField"
msgstr ""

# ae87f57c53004697b14fcd4a1a34db48
#: ../../releases/1.3.txt:402
msgid ""
"Django 1.3 now includes a :class:`~django.forms.ClearableFileInput` form "
"widget in addition to :class:`~django.forms.FileInput`. "
"``ClearableFileInput`` renders with a checkbox to clear the field's value "
"(if the field has a value and is not required); ``FileInput`` provided no "
"means for clearing an existing file from a ``FileField``."
msgstr ""

# 313174c8784a4917bee889ccec957acc
# ce5bb2a0a8774da0a4b5b682497cf282
#: ../../releases/1.3.txt:408 ../../releases/1.3-alpha-1.txt:201
msgid ""
"``ClearableFileInput`` is now the default widget for a ``FileField``, so "
"existing forms including ``FileField`` without assigning a custom widget "
"will need to account for the possible extra checkbox in the rendered form "
"output."
msgstr ""

# e0e3a440d7714f7c962fb2e3e0535aa2
# 04128e39c1b74ba6be181da2a074c41d
#: ../../releases/1.3.txt:412 ../../releases/1.3-alpha-1.txt:205
msgid ""
"To return to the previous rendering (without the ability to clear the "
"``FileField``), use the ``FileInput`` widget in place of "
"``ClearableFileInput``. For instance, in a ``ModelForm`` for a hypothetical "
"``Document`` model with a ``FileField`` named ``document``::"
msgstr ""

# ddbac7941fed49f8b83e538c7afc900c
# 35f4588f8c564b26943e01797d2633f1
#: ../../releases/1.3.txt:426 ../../releases/1.3-alpha-1.txt:219
msgid "New index on database session table"
msgstr ""

# 181a9ccfa6d44f00bd8ca30288be75dd
# 6f601588f0b8483d99e09c61fbd6cf77
#: ../../releases/1.3.txt:428 ../../releases/1.3-alpha-1.txt:221
msgid ""
"Prior to Django 1.3, the database table used by the database backend for "
"the :doc:`sessions </topics/http/sessions>` app had no index on the "
"``expire_date`` column. As a result, date-based queries on the session table "
"-- such as the query that is needed to purge old sessions -- would be very "
"slow if there were lots of sessions."
msgstr ""

# 294e11e58aa34e47ae4c704f07dcb65b
# 67f7915a92814fe4bd434f865234d96c
#: ../../releases/1.3.txt:434 ../../releases/1.3-alpha-1.txt:227
msgid ""
"If you have an existing project that is using the database session backend, "
"you don't have to do anything to accommodate this change. However, you may "
"get a significant performance boost if you manually add the new index to the "
"session table. The SQL that will add the index can be found by running the :"
"djadmin:`sqlindexes` admin command::"
msgstr ""

# 34126b284ec84c158765d556c2bc9288
# 744c1d28f0374e59bdc85551b299c743
#: ../../releases/1.3.txt:444 ../../releases/1.3-alpha-1.txt:237
msgid "No more naughty words"
msgstr ""

# ab1d402efd4940e6b22e6e3e3ecb742e
# 7158d5df91174173aecc1e58902601e4
#: ../../releases/1.3.txt:446 ../../releases/1.3-alpha-1.txt:239
msgid ""
"Django has historically provided (and enforced) a list of profanities. The :"
"doc:`comments app </ref/contrib/comments/index>` has enforced this list of "
"profanities, preventing people from submitting comments that contained one "
"of those profanities."
msgstr ""

# 42ff6bf9df3442fbadeb82ae2b83fc8c
#: ../../releases/1.3.txt:451
msgid ""
"Unfortunately, the technique used to implement this profanities list was "
"woefully naive, and prone to the `Scunthorpe problem`_. Improving the built-"
"in filter to fix this problem would require significant effort, and since "
"natural language processing isn't the normal domain of a web framework, we "
"have \"fixed\" the problem by making the list of prohibited words an empty "
"list."
msgstr ""

# 6bcede6bb3aa41b584b6666b2cf3a6a1
# c8362dbe3173470bb86d450e32bb0da1
#: ../../releases/1.3.txt:458 ../../releases/1.3-alpha-1.txt:251
msgid ""
"If you want to restore the old behavior, simply put a :setting:"
"`PROFANITIES_LIST` setting in your settings file that includes the words "
"that you want to prohibit (see the `commit that implemented this change`_ if "
"you want to see the list of words that was historically prohibited). "
"However, if avoiding profanities is important to you, you would be well "
"advised to seek out a better, less naive approach to the problem."
msgstr ""

# fe258361dcdc4835bd1063bccbb9374f
# 4ce73a925240452695f96ba24085a11e
#: ../../releases/1.3.txt:470 ../../releases/1.3-alpha-1.txt:263
msgid "Localflavor changes"
msgstr ""

# 69be947e5fec4892a87ac628702bd5ac
# 67de1018586c4a71b8ef4a7e4e0a3052
#: ../../releases/1.3.txt:472 ../../releases/1.3-alpha-1.txt:265
msgid ""
"Django 1.3 introduces the following backwards-incompatible changes to local "
"flavors:"
msgstr ""

# 7c80749180394f18bf39939ee4a78ae0
#: ../../releases/1.3.txt:475
msgid ""
"Canada (ca) -- The province \"Newfoundland and Labrador\" has had its "
"province code updated to \"NL\", rather than the older \"NF\". In addition, "
"the Yukon Territory has had its province code corrected to \"YT\", instead "
"of \"YK\"."
msgstr ""

# 46a5a49d19b14a57b2b099cd70081a34
# 0b2427a5e614483fb28e2c14af76e34f
#: ../../releases/1.3.txt:480 ../../releases/1.3-alpha-1.txt:268
msgid ""
"Indonesia (id) -- The province \"Nanggroe Aceh Darussalam (NAD)\" has been "
"removed from the province list in favor of the new official designation "
"\"Aceh (ACE)\"."
msgstr ""

# 07691388e17a4808a4eb6c62d4c53010
#: ../../releases/1.3.txt:484
msgid ""
"United States of America (us) -- The list of \"states\" used by "
"``USStateField`` has expanded to include Armed Forces postal codes. This is "
"backwards-incompatible if you were relying on ``USStateField`` not including "
"them."
msgstr ""

# 0147d015af7c432589d2f0dc23869074
#: ../../releases/1.3.txt:490
msgid "FormSet updates"
msgstr ""

# 797e38f19e824cb48503e1542580e7df
#: ../../releases/1.3.txt:492
msgid ""
"In Django 1.3 ``FormSet`` creation behavior is modified slightly. "
"Historically the class didn't make a distinction between not being passed "
"data and being passed empty dictionary. This was inconsistent with behavior "
"in other parts of the framework. Starting with 1.3 if you pass in empty "
"dictionary the ``FormSet`` will raise a ``ValidationError``."
msgstr ""

# 5e891438f1ea48e5946c92cc73df7a94
#: ../../releases/1.3.txt:498
msgid "For example with a ``FormSet``::"
msgstr ""

# b86c94fb8d7c4d7ca09d2c5b25fcfff3
#: ../../releases/1.3.txt:505
msgid "the following code will raise a ``ValidationError``::"
msgstr ""

# d3b07a57f1ad41709b36273960af0ce6
#: ../../releases/1.3.txt:512
msgid ""
"if you need to instantiate an empty ``FormSet``, don't pass in the data or "
"use ``None``::"
msgstr ""

# 223ee09abb454fbe85761317765c8661
#: ../../releases/1.3.txt:519
msgid "Callables in templates"
msgstr ""

# 39e7bfbc4d3341a7af8fce113741e86e
#: ../../releases/1.3.txt:521
msgid ""
"Previously, a callable in a template would only be called automatically as "
"part of the variable resolution process if it was retrieved via attribute "
"lookup. This was an inconsistency that could result in confusing and "
"unhelpful behavior::"
msgstr ""

# 8964aad993e74b699944218dc1aeff69
#: ../../releases/1.3.txt:531
msgid ""
"This has been resolved in Django 1.3 - the result in both cases will be "
"``u'Joe Bloggs'``. Although the previous behavior was not useful for a "
"template language designed for web designers, and was never deliberately "
"supported, it is possible that some templates may be broken by this change."
msgstr ""

# d47354c7ac4b45f7961495d519472c56
#: ../../releases/1.3.txt:567
msgid "Changed priority of translation loading"
msgstr ""

# 757f62f715e742db9ef08c4f88208993
#: ../../releases/1.3.txt:569
msgid ""
"Work has been done to simplify, rationalize and properly document the "
"algorithm used by Django at runtime to build translations from the different "
"translations found on disk, namely:"
msgstr ""

# 458e1fa334cd4af8ac67067cc0062d85
#: ../../releases/1.3.txt:573
msgid ""
"For translatable literals found in Python code and templates (``'django'`` "
"gettext domain):"
msgstr ""

# b6db0c370a0247e9aae90d1dec2f6993
#: ../../releases/1.3.txt:576
msgid ""
"Priorities of translations included with applications listed in the :setting:"
"`INSTALLED_APPS` setting were changed. To provide a behavior consistent with "
"other parts of Django that also use such setting (templates, etc.) now, when "
"building the translation that will be made available, the apps listed first "
"have higher precedence than the ones listed later."
msgstr ""

# 4ba863c8a18d4f19aa59f83f19c7e6d4
#: ../../releases/1.3.txt:582
msgid ""
"Now it is possible to override the translations shipped with applications by "
"using the :setting:`LOCALE_PATHS` setting whose translations have now higher "
"precedence than the translations of :setting:`INSTALLED_APPS` applications. "
"The relative priority among the values listed in this setting has also been "
"modified so the paths listed first have higher precedence than the ones "
"listed later."
msgstr ""

# 635766c283a2495199634ee3b6f90cdb
#: ../../releases/1.3.txt:589
msgid ""
"The ``locale`` subdirectory of the directory containing the settings, that "
"usually coincides with and is know as the *project directory* is being "
"deprecated in this release as a source of translations. (the precedence of "
"these translations is intermediate between applications and :setting:"
"`LOCALE_PATHS` translations). See the `corresponding deprecated features "
"section`_ of this document."
msgstr ""

# fba9e561651743c7986b29ad97419f04
#: ../../releases/1.3.txt:596
msgid ""
"For translatable literals found in Javascript code (``'djangojs'`` gettext "
"domain):"
msgstr ""

# aa5e2bb2442f43c4a394f8901002dbfb
#: ../../releases/1.3.txt:599
msgid ""
"Similarly to the ``'django'`` domain translations: Overriding of "
"translations shipped with applications by using the :setting:`LOCALE_PATHS` "
"setting is now possible for this domain too. These translations have higher "
"precedence than the translations of Python packages passed to the :ref:"
"`javascript_catalog view <javascript_catalog-view>`.  Paths listed first "
"have higher precedence than the ones listed later."
msgstr ""

# cd35e99dc4644f5caa3eda190fea6cf5
#: ../../releases/1.3.txt:606
msgid ""
"Translations under the ``locale`` subdirectory of the *project directory* "
"have never been taken in account for JavaScript translations and remain in "
"the same situation considering the deprecation of such location."
msgstr ""

# 316f01c2895e4622a478d0b3af793f4a
#: ../../releases/1.3.txt:613
msgid "Transaction management"
msgstr ""

# f14d477a526b4a31be4f429adf3da8d9
#: ../../releases/1.3.txt:615
msgid ""
"When using managed transactions -- that is, anything but the default "
"autocommit mode -- it is important when a transaction is marked as \"dirty"
"\". Dirty transactions are committed by the :func:`~django.db.transaction."
"commit_on_success` decorator or the :class:`~django.middleware.transaction."
"TransactionMiddleware`, and :func:`~django.db.transaction.commit_manually` "
"forces them to be closed explicitly; clean transactions \"get a pass\", "
"which means they are usually rolled back at the end of a request when the "
"connection is closed."
msgstr ""

# 6ccfe54430f440df87e56378ef697cf9
#: ../../releases/1.3.txt:625
msgid ""
"Until Django 1.3, transactions were only marked dirty when Django was aware "
"of a modifying operation performed in them; that is, either some model was "
"saved, some bulk update or delete was performed, or the user explicitly "
"called ``transaction.set_dirty()``. In Django 1.3, a transaction is marked "
"dirty when *any* database operation is performed."
msgstr ""

# 824aeb07325649f393e10105bf12cbe1
#: ../../releases/1.3.txt:632
msgid ""
"As a result of this change, you no longer need to set a transaction dirty "
"explicitly when you execute raw SQL or use a data-modifying ``SELECT``. "
"However, you *do* need to explicitly close any read-only transactions that "
"are being managed using :func:`~django.db.transaction.commit_manually`. For "
"example::"
msgstr ""

# 3e43703a542444dbad93fd0c3d615456
#: ../../releases/1.3.txt:643
msgid ""
"Prior to Django 1.3, this would work without error. However, under Django "
"1.3, this will raise a :class:`~django.db.transaction."
"TransactionManagementError` because the read operation that retrieves the "
"``MyObject`` instance leaves the transaction in a dirty state."
msgstr ""

# b5238b2ab2c54bfba721faa94096ace7
#: ../../releases/1.3.txt:650
msgid "No password reset for inactive users"
msgstr ""

# 0868a795a9184e10964a43cac081532e
#: ../../releases/1.3.txt:652
msgid ""
"Prior to Django 1.3, inactive users were able to request a password reset "
"email and reset their password. In Django 1.3 inactive users will receive "
"the same message as a nonexistent account."
msgstr ""

# 3a16fbe7939d45689ea53e7fbb7e5114
# 5ddc637f65f247998d64e28ffb756db1
#: ../../releases/1.3.txt:659 ../../releases/1.3-alpha-1.txt:274
msgid "Features deprecated in 1.3"
msgstr ""

# bbeaa8c1508d44fd87297602674d1819
# 85f743c9a0854b5a9cd5204d9920af4b
#: ../../releases/1.3.txt:661 ../../releases/1.3-alpha-1.txt:276
msgid ""
"Django 1.3 deprecates some features from earlier releases. These features "
"are still supported, but will be gradually phased out over the next few "
"release cycles."
msgstr ""

# efefd23d264e48daaf822039e72784a9
# 8f81b72cec3a4d33af15cd85f667d05e
#: ../../releases/1.3.txt:665 ../../releases/1.3-alpha-1.txt:280
msgid ""
"Code taking advantage of any of the features below will raise a "
"``PendingDeprecationWarning`` in Django 1.3. This warning will be silent by "
"default, but may be turned on using Python's :mod:`warnings` module, or by "
"running Python with a ``-Wd`` or `-Wall` flag."
msgstr ""

# bcb5a2acd21448efaab2f1ab4735779b
# 964b894f4f9642deac9082a4ca850aed
#: ../../releases/1.3.txt:670 ../../releases/1.3-alpha-1.txt:285
msgid ""
"In Django 1.4, these warnings will become a ``DeprecationWarning``, which is "
"*not* silent. In Django 1.5 support for these features will be removed "
"entirely."
msgstr ""

# 465a2bfbea3140de96582fde1490a919
# 9447ef7e52634f39931bcb3e24417d46
#: ../../releases/1.3.txt:676 ../../releases/1.3-alpha-1.txt:291
msgid ""
"For more details, see the documentation :doc:`Django's release process </"
"internals/release-process>` and our :doc:`deprecation timeline </internals/"
"deprecation>`."
msgstr ""

# 25d6090844de4e709066d51dbda4ff6d
# 958743a99ff4492d96d4375753124d57
#: ../../releases/1.3.txt:681 ../../releases/1.3-alpha-1.txt:296
msgid "``mod_python`` support"
msgstr ""

# 4b982fcb12af4b6a9c685cb358b2d7c2
# a95c115402474ae1a82fab3255ae3e69
#: ../../releases/1.3.txt:683 ../../releases/1.3-alpha-1.txt:298
msgid ""
"The ``mod_python`` library has not had a release since 2007 or a commit "
"since 2008. The Apache Foundation board voted to remove ``mod_python`` from "
"the set of active projects in its version control repositories, and its lead "
"developer has shifted all of his efforts toward the lighter, slimmer, more "
"stable, and more flexible ``mod_wsgi`` backend."
msgstr ""

# 5d165cda29c34145ab5f5fee56576a0c
#: ../../releases/1.3.txt:689
msgid ""
"If you are currently using the ``mod_python`` request handler, you should "
"redeploy your Django projects using another request handler. :doc:`mod_wsgi "
"</howto/deployment/wsgi/modwsgi>` is the request handler recommended by the "
"Django project, but :doc:`FastCGI </howto/deployment/fastcgi>` is also "
"supported. Support for ``mod_python`` deployment will be removed in Django "
"1.5."
msgstr ""

# e7aad8843afd4296a33a0f505a062d22
# d62814ef56b84d95abae1490ce84f356
#: ../../releases/1.3.txt:697 ../../releases/1.3-alpha-1.txt:309
msgid "Function-based generic views"
msgstr ""

# 94ee5d6136ad47caa51e9c468a47764f
# 67f8a2e81d2f412e9e9bf32c2d435221
#: ../../releases/1.3.txt:699 ../../releases/1.3-alpha-1.txt:311
msgid ""
"As a result of the introduction of class-based generic views, the function-"
"based generic views provided by Django have been deprecated. The following "
"modules and the views they contain have been deprecated:"
msgstr ""

# a4a4afd4eb994fcda150cfb619975f7d
# 4b9883f632624088952592436597fffb
#: ../../releases/1.3.txt:703 ../../releases/1.3-alpha-1.txt:315
msgid ":mod:`django.views.generic.create_update`"
msgstr ""

# 182f0b64840f424fad15ff2df0ff8be3
# a51d1ebff6c143f2b66602c690750901
#: ../../releases/1.3.txt:705 ../../releases/1.3-alpha-1.txt:316
msgid ":mod:`django.views.generic.date_based`"
msgstr ""

# 538a5da1d8ae4951b0df996f8b0c646b
# f4f120301b37414daabb86ac7af6949d
#: ../../releases/1.3.txt:707 ../../releases/1.3-alpha-1.txt:317
msgid ":mod:`django.views.generic.list_detail`"
msgstr ""

# fde4a7b0e8d44b238b1c96c5576b4189
# 0be175b774084edc99da2c05e27ca270
#: ../../releases/1.3.txt:709 ../../releases/1.3-alpha-1.txt:318
msgid ":mod:`django.views.generic.simple`"
msgstr ""

# baa3230806fc43e7bfcb3f19c9a00a1f
# 8bd7ada05eec4583be4621f8b1e71548
#: ../../releases/1.3.txt:712 ../../releases/1.3-alpha-1.txt:321
msgid "Test client response ``template`` attribute"
msgstr ""

# 90c1c59641c2478d865cc952157cc2fd
# 16465a575739423795dd20fbc7b5490b
#: ../../releases/1.3.txt:714 ../../releases/1.3-alpha-1.txt:323
msgid ""
"Django's :ref:`test client <test-client>` returns :class:`~django.test."
"client.Response` objects annotated with extra testing information. In Django "
"versions prior to 1.3, this included a :attr:`~django.test.client.Response."
"template` attribute containing information about templates rendered in "
"generating the response: either None, a single :class:`~django.template."
"Template` object, or a list of :class:`~django.template.Template` objects. "
"This inconsistency in return values (sometimes a list, sometimes not) made "
"the attribute difficult to work with."
msgstr ""

# 8c3258502122499e805ee269d400415d
# f395e32f2118434e9a380750c99795fa
#: ../../releases/1.3.txt:723 ../../releases/1.3-alpha-1.txt:332
msgid ""
"In Django 1.3 the :attr:`~django.test.client.Response.template` attribute is "
"deprecated in favor of a new :attr:`~django.test.client.Response.templates` "
"attribute, which is always a list, even if it has only a single element or "
"no elements."
msgstr ""

# 6c0dcc3f53264d94bc44f814b7031c3b
# 42bd705400704bfa8cd28bae5b796ad1
#: ../../releases/1.3.txt:729 ../../releases/1.3-alpha-1.txt:338
msgid "``DjangoTestRunner``"
msgstr ""

# 852be0a80ded4a7ca3d1b73af25e47e1
# 66ba7a7518404721bcc0dc50702664d8
#: ../../releases/1.3.txt:731 ../../releases/1.3-alpha-1.txt:340
msgid ""
"As a result of the introduction of support for unittest2, the features of :"
"class:`django.test.simple.DjangoTestRunner` (including fail-fast and Ctrl-C "
"test termination) have been made redundant. In view of this redundancy, :"
"class:`~django.test.simple.DjangoTestRunner` has been turned into an empty "
"placeholder class, and will be removed entirely in Django 1.5."
msgstr ""

# 889816cdaf5b47abb8cc0de86d3165fd
#: ../../releases/1.3.txt:739
msgid "Changes to :ttag:`url` and :ttag:`ssi`"
msgstr ""

# e5af5c17fb6b41ccbad14ab9cf1ca33d
#: ../../releases/1.3.txt:741
msgid ""
"Most template tags will allow you to pass in either constants or variables "
"as arguments -- for example::"
msgstr ""

# e20b57c77da040b4a6ad4ec34bfc38ba
#: ../../releases/1.3.txt:746
msgid ""
"allows you to specify a base template as a constant, but if you have a "
"context variable ``templ`` that contains the value ``base.html``::"
msgstr ""

# e8d7153cb5e840e29f6345075af6deee
#: ../../releases/1.3.txt:751
msgid "is also legal."
msgstr ""

# 71455bb9600e4b5c92c599b8c2085d58
#: ../../releases/1.3.txt:753
msgid ""
"However, due to an accident of history, the :ttag:`url` and :ttag:`ssi` are "
"different. These tags use the second, quoteless syntax, but interpret the "
"argument as a constant. This means it isn't possible to use a context "
"variable as the target of a :ttag:`url` and :ttag:`ssi` tag."
msgstr ""

# 1a2ce1a378024d9d908b818150f21c5b
#: ../../releases/1.3.txt:759
msgid ""
"Django 1.3 marks the start of the process to correct this historical "
"accident. Django 1.3 adds a new template library -- ``future`` -- that "
"provides alternate implementations of the :ttag:`url` and :ttag:`ssi` "
"template tags. This ``future`` library implement behavior that makes the "
"handling of the first argument consistent with the handling of all other "
"variables. So, an existing template that contains::"
msgstr ""

# 2b660f7ef6ad4613aa5916c41f19f770
#: ../../releases/1.3.txt:768
msgid "should be replaced with::"
msgstr ""

# 321e1025c7614a0a8c9f6810235a3fcf
#: ../../releases/1.3.txt:773
msgid ""
"The tags implementing the old behavior have been deprecated, and in Django "
"1.5, the old behavior will be replaced with the new behavior. To ensure "
"compatibility with future versions of Django, existing templates should be "
"modified to use the new ``future`` libraries and syntax."
msgstr ""

# b523080b5f7b487b91b5000db56d75ec
# 3bed0088185240649fda9095a3446a4e
#: ../../releases/1.3.txt:780 ../../releases/1.3-beta-1.txt:124
msgid "Changes to the login methods of the admin"
msgstr ""

# d0deb44c431e42b2925b146ed341d5a9
# 4d026b8e4b9d4d528a0ab0e443ef4a70
#: ../../releases/1.3.txt:782 ../../releases/1.3-beta-1.txt:126
msgid ""
"In previous version the admin app defined login methods in multiple "
"locations and ignored the almost identical implementation in the already "
"used auth app. A side effect of this duplication was the missing adoption of "
"the changes made in r12634_ to support a broader set of characters for "
"usernames."
msgstr ""

# 0940db66f7b245438cc96d95924b7bca
# 3bf712e453494ce69be2df680dcb3f00
#: ../../releases/1.3.txt:787 ../../releases/1.3-beta-1.txt:131
msgid ""
"This release refactors the admin's login mechanism to use a subclass of the :"
"class:`~django.contrib.auth.forms.AuthenticationForm` instead of a manual "
"form validation. The previously undocumented method ``'django.contrib.admin."
"sites.AdminSite.display_login_form'`` has been removed in favor of a new :"
"attr:`~django.contrib.admin.AdminSite.login_form` attribute."
msgstr ""

# 29c59a665e6e4e3f82829e687e59424f
#: ../../releases/1.3.txt:797
msgid "``reset`` and ``sqlreset`` management commands"
msgstr ""

# 37505b9e27b34bf2b930ae5874911a86
#: ../../releases/1.3.txt:799
msgid ""
"Those commands have been deprecated. The ``flush`` and ``sqlflush`` commands "
"can be used to delete everything. You can also use ALTER TABLE or DROP TABLE "
"statements manually."
msgstr ""

# 418e023b350e43f68e9343b7fedd6c28
#: ../../releases/1.3.txt:807
msgid ""
"The function-based :setting:`TEST_RUNNER` previously used to execute the "
"GeoDjango test suite, :func:`django.contrib.gis.tests.run_gis_tests`, was "
"deprecated for the class-based runner, :class:`django.contrib.gis.tests."
"GeoDjangoTestSuiteRunner`."
msgstr ""

# 22e4b91ba7cc4c00925fb84f796cf412
#: ../../releases/1.3.txt:813
msgid ""
"Previously, calling :meth:`~django.contrib.gis.geos.GEOSGeometry.transform` "
"would silently do nothing when GDAL wasn't available.  Now, a :class:"
"`~django.contrib.gis.geos.GEOSException` is properly raised to indicate "
"possible faulty application code.  A warning is now raised if :meth:`~django."
"contrib.gis.geos.GEOSGeometry.transform` is called when the SRID of the "
"geometry is less than 0 or ``None``."
msgstr ""

# 679ceed6915a4218a92c2b00c5b8dc44
#: ../../releases/1.3.txt:822
msgid "``CZBirthNumberField.clean``"
msgstr ""

# a7773159933144c39f8486f566d49456
#: ../../releases/1.3.txt:824
msgid ""
"Previously this field's ``clean()`` method accepted a second, gender, "
"argument which allowed stronger validation checks to be made, however since "
"this argument could never actually be passed from the Django form machinery "
"it is now pending deprecation."
msgstr ""

# 2f0dbe3074744d6992bc9675a5222b77
#: ../../releases/1.3.txt:830
msgid "``CompatCookie``"
msgstr ""

# c897f7c32064452680394c744cb68216
#: ../../releases/1.3.txt:832
msgid ""
"Previously, ``django.http`` exposed an undocumented ``CompatCookie`` class, "
"which was a bug-fix wrapper around the standard library ``SimpleCookie``. As "
"the fixes are moving upstream, this is now deprecated - you should use "
"``from django.http import SimpleCookie`` instead."
msgstr ""

# b8768b55edc04346a7ed31a6ea27d37d
#: ../../releases/1.3.txt:840
msgid "Loading of *project-level* translations"
msgstr ""

# 19e650ec3d2a484fb4fa919998f0a06e
#: ../../releases/1.3.txt:842
msgid ""
"This release of Django starts the deprecation process for inclusion of "
"translations located under the so-called *project path* in the translation "
"building process performed at runtime. The :setting:`LOCALE_PATHS` setting "
"can be used for the same task by adding the filesystem path to a ``locale`` "
"directory containing project-level translations to the value of that setting."
msgstr ""

# 1489bb0906784de68a6ab584e7d9b62e
#: ../../releases/1.3.txt:848
msgid "Rationale for this decision:"
msgstr ""

# 43575b1b331342e4927da9d83d3a7691
#: ../../releases/1.3.txt:850
msgid ""
"The *project path* has always been a loosely defined concept (actually, the "
"directory used for locating project-level translations is the directory "
"containing the settings module) and there has been a shift in other parts of "
"the framework to stop using it as a reference for location of assets at "
"runtime."
msgstr ""

# f241da9af73d4adba40480bb18ffa039
#: ../../releases/1.3.txt:856
msgid ""
"Detection of the ``locale`` subdirectory tends to fail when the deployment "
"scenario is more complex than the basic one. e.g. it fails when the settings "
"module is a directory (ticket #10765)."
msgstr ""

# ba5a8483672541a4a2080ecfd510fa01
#: ../../releases/1.3.txt:860
msgid ""
"There are potential strange development- and deployment-time problems like "
"the fact that the ``project_dir/locale/`` subdir can generate spurious error "
"messages when the project directory is added to the Python path (``manage.py "
"runserver`` does this) and then it clashes with the equally named standard "
"library module, this is a typical warning message::"
msgstr ""

# af589d7c8e5c4b188f26ce1d0bc10085
#: ../../releases/1.3.txt:870
msgid ""
"This location wasn't included in the translation building process for "
"JavaScript literals. This deprecation removes such inconsistency."
msgstr ""

# 869e17500a3046c290d22848d4ae4cf4
#: ../../releases/1.3.txt:875
msgid "``PermWrapper`` moved to ``django.contrib.auth.context_processors``"
msgstr ""

# 58e07f1fcdff4299b708030cba4b4588
#: ../../releases/1.3.txt:877
msgid ""
"In Django 1.2, we began the process of changing the location of the ``auth`` "
"context processor from ``django.core.context_processors`` to ``django."
"contrib.auth.context_processors``. However, the ``PermWrapper`` support "
"class was mistakenly omitted from that migration. In Django 1.3, the "
"``PermWrapper`` class has also been moved to ``django.contrib.auth."
"context_processors``, along with the ``PermLookupDict`` support class. The "
"new classes are functionally identical to their old versions; only the "
"module location has changed."
msgstr ""

# 95bfa70f9c1d43dc9231de0b0e5187ac
#: ../../releases/1.3.txt:887
msgid "Removal of ``XMLField``"
msgstr ""

# c54a3be754d74358b0f45c73c1eb9b5d
#: ../../releases/1.3.txt:889
msgid ""
"When Django was first released, Django included an :class:`~django.db.models."
"XMLField` that performed automatic XML validation for any field input. "
"However, this validation function hasn't been performed since the "
"introduction of ``newforms``, prior to the 1.0 release. As a result, "
"``XMLField`` as currently implemented is functionally indistinguishable from "
"a simple :class:`~django.db.models.TextField`."
msgstr ""

# 3aa99067152b4adaa7a0399610313bd4
#: ../../releases/1.3.txt:896
msgid ""
"For this reason, Django 1.3 has fast-tracked the deprecation of ``XMLField`` "
"-- instead of a two-release deprecation, ``XMLField`` will be removed "
"entirely in Django 1.4."
msgstr ""

# 3ff7955b3775403ea3525aab39e423e3
#: ../../releases/1.3.txt:900
msgid ""
"It's easy to update your code to accommodate this change -- just replace all "
"uses of ``XMLField`` with ``TextField``, and remove the ``schema_path`` "
"keyword argument (if it is specified)."
msgstr ""

# db7d80bdf2cd446b9c4f3ade4e8b5511
#: ../../releases/1.3-alpha-1.txt:3
msgid "Django 1.3 alpha 1 release notes"
msgstr ""

# dc31b90006754ba18f2892471002682d
#: ../../releases/1.3-alpha-1.txt:5
msgid "November 11, 2010"
msgstr ""

# a0dae5d6880e44e6a605cf505f8f523a
#: ../../releases/1.3-alpha-1.txt:7
msgid "Welcome to Django 1.3 alpha 1!"
msgstr ""

# a36a57cffbfd49898a326c053ea2f70b
#: ../../releases/1.3-alpha-1.txt:9
msgid ""
"This is the first in a series of preview/development releases leading up to "
"the eventual release of Django 1.3. This release is primarily targeted at "
"developers who are interested in trying out new features and testing the "
"Django codebase to help identify and resolve bugs prior to the final 1.3 "
"release."
msgstr ""

# f5809e0745604facaca092b420f89157
#: ../../releases/1.3-alpha-1.txt:18
msgid ""
"As of this alpha release, Django 1.3 contains a number of nifty `new "
"features`_, lots of bug fixes, some minor `backwards incompatible changes`_ "
"and an easy upgrade path from Django 1.2."
msgstr ""

# b635ae49a407494e959eb42f48cd4bd5
#: ../../releases/1.3-alpha-1.txt:27
msgid "What's new in Django 1.3 alpha 1"
msgstr ""

# 90e73b8e4fe5422daa3c9ab1d90ebae7
#: ../../releases/1.3-alpha-1.txt:41
msgid ""
"See :doc:`the documentation on Class-based Generic Views </topics/class-"
"based-views>` for more details. There is also a document to help you :doc:"
"`convert your function-based generic views to class-based views</topics/"
"generic-views-migration>`."
msgstr ""

# 9bd4300fc8d24b64902e8adcbde8ac4b
#: ../../releases/1.3-alpha-1.txt:49
msgid ""
"Django 1.3 adds framework-level support for Python's logging module. This "
"means you can now easily configure and control logging as part of your "
"Django project. A number of logging handlers and logging calls have been "
"added to Django's own code as well -- most notably, the error emails sent on "
"a HTTP 500 server error are now handled as a logging activity. See :doc:`the "
"documentation on Django's logging interface </topics/logging>` for more "
"details."
msgstr ""

# bfb81c37a261406a90cde7937dd38666
#: ../../releases/1.3-alpha-1.txt:60
msgid ""
"Django 1.3 ships with a new contrib app ``'django.contrib.staticfiles'`` to "
"help developers handle the static media files (images, CSS, Javascript, "
"etc.) that are needed to render a complete web page."
msgstr ""

# 6f708ddd6a074b9c8ff81888e4522564
#: ../../releases/1.3-alpha-1.txt:64
msgid ""
"In previous versions of Django, it was common to place static assets in :"
"setting:`MEDIA_ROOT` along with user-uploaded files, and serve them both at :"
"setting:`MEDIA_URL`. Part of the purpose of introducing the ``staticfiles`` "
"app is to make it easier to keep static files separate from user-uploaded "
"files. For this reason, you will probably want to make your :setting:"
"`MEDIA_ROOT` and :setting:`MEDIA_URL` different from your :setting:"
"`STATICFILES_ROOT` and :setting:`STATICFILES_URL`. You will need to arrange "
"for serving of files in :setting:`MEDIA_ROOT` yourself; ``staticfiles`` does "
"not deal with user-uploaded media at all."
msgstr ""

# 729e4cb82dcb4859bc6265bde3b7c0d0
#: ../../releases/1.3-alpha-1.txt:79
msgid "``unittest2`` support"
msgstr ""

# 41952a98e329425d8f75c78968c4bd6d
#: ../../releases/1.3-alpha-1.txt:81
msgid ""
"Python 2.7 introduced some major changes to the unittest library, adding "
"some extremely useful features. To ensure that every Django project can "
"benefit from these new features, Django ships with a copy of unittest2_, a "
"copy of the Python 2.7 unittest library, backported for Python 2.4 "
"compatibility."
msgstr ""

# 6edfda05c48e4d5889abf1997d940233
#: ../../releases/1.3-alpha-1.txt:87
msgid ""
"To access this library, Django provides the ``django.utils.unittest`` module "
"alias. If you are using Python 2.7, or you have installed unittest2 locally, "
"Django will map the alias to the installed version of the unittest library. "
"Otherwise, Django will use it's own bundled version of unittest2."
msgstr ""

# a891c3939bf24bf58579883c7ce542ca
#: ../../releases/1.3-alpha-1.txt:93
msgid "To use this alias, simply use::"
msgstr ""

# bc434c6fa3cb4a0fba7d0a030224481e
#: ../../releases/1.3-alpha-1.txt:101
msgid ""
"If you want to continue to use the base unittest libary, you can -- you just "
"won't get any of the nice new unittest2 features."
msgstr ""

# d6661fe35f3b47ecbf988ff4c5d7385f
#: ../../releases/1.3-alpha-1.txt:133
msgid "Contextual markers in translatable strings"
msgstr ""

# 681d618754854326a7c1e7dfd2b50524
#: ../../releases/1.3-alpha-1.txt:138
msgid "For more information, see :ref:`contextual-markers`"
msgstr ""

# d98aab833cfa4b1b91352c9a1d0616cd
#: ../../releases/1.3-alpha-1.txt:153
msgid ""
"Improved tools for accessing and manipulating the current Site via :func:"
"`django.contrib.sites.models.get_current_site`."
msgstr ""

# a9db2ae3260f46c28dd5ec489e405406
#: ../../releases/1.3-alpha-1.txt:159
msgid ""
"A new test assertion -- :meth:`~django.test.client.Client.assertNumQueries` "
"-- making it easier to test the database activity associated with a view."
msgstr ""

# 5c5cac4017a34faaab3d0f934270a74b
#: ../../releases/1.3-alpha-1.txt:167
msgid "Backwards-incompatible changes in 1.3 alpha 1"
msgstr ""

# e7058743013648af8b847ad96acdf310
#: ../../releases/1.3-alpha-1.txt:196
msgid ""
"Django 1.3 now includes a ``ClearableFileInput`` form widget in addition to "
"``FileInput``. ``ClearableFileInput`` renders with a checkbox to clear the "
"field's value (if the field has a value and is not required); ``FileInput`` "
"provided no means for clearing an existing file from a ``FileField``."
msgstr ""

# 836bb1c89f0f4ed690ffb18e3730bb3d
#: ../../releases/1.3-alpha-1.txt:244
msgid ""
"Unfortunately, the technique used to implement this profanities list was "
"woefully naive, and prone to the `Scunthorpe problem`_. Fixing the built in "
"filter to fix this problem would require significant effort, and since "
"natural language processing isn't the normal domain of a web framework, we "
"have \"fixed\" the problem by making the list of prohibited words an empty "
"list."
msgstr ""

# 48536c9015204b0c876800929b30735c
#: ../../releases/1.3-alpha-1.txt:304
msgid ""
"If you are currently using the ``mod_python`` request handler, you are "
"strongly encouraged to redeploy your Django instances using :doc:`mod_wsgi </"
"howto/deployment/wsgi/modwsgi>`."
msgstr ""

# 0b71b73e9bff42679b8e858a836519d4
# 9a04eb1bdefc44d9bb15e946dc65b1cc
#: ../../releases/1.3-alpha-1.txt:348 ../../releases/1.3-beta-1.txt:187
msgid "The Django 1.3 roadmap"
msgstr ""

# 8cb10865f729407cbaf06c00dd7ab1b7
# 1d74c3a94d7546838f9f6403e77f2c8b
#: ../../releases/1.3-alpha-1.txt:350 ../../releases/1.3-beta-1.txt:189
msgid ""
"Before the final Django 1.3 release, several other preview/development "
"releases will be made available. The current schedule consists of at least "
"the following:"
msgstr ""

# cfb7d17b9f7843d59f7afef417a76ba6
#: ../../releases/1.3-alpha-1.txt:354
msgid ""
"Week of **November 29, 2010**: First Django 1.3 beta release. Final feature "
"freeze for Django 1.3."
msgstr ""

# fe9cd0c3724b478199ffcfd470035c8a
#: ../../releases/1.3-alpha-1.txt:357
msgid ""
"Week of **January 10, 2011**: First Django 1.3 release candidate. String "
"freeze for translations."
msgstr ""

# cc5219a55a0749ffb491085a0ee79074
#: ../../releases/1.3-alpha-1.txt:360
msgid "Week of **January 17, 2011**: Django 1.3 final release."
msgstr ""

# 49b26a743b294ea3885c99a3a06fb8b3
#: ../../releases/1.3-alpha-1.txt:362
msgid ""
"If necessary, additional alpha, beta or release-candidate packages will be "
"issued prior to the final 1.3 release. Django 1.3 will be released "
"approximately one week after the final release candidate."
msgstr ""

# 5a5f41b00d514a488619b2b7c539a571
#: ../../releases/1.3-alpha-1.txt:370
msgid ""
"In order to provide a high-quality 1.3 release, we need your help. Although "
"this alpha release is, again, *not* intended for production use, you can "
"help the Django team by trying out the alpha codebase in a safe test "
"environment and reporting any bugs or issues you encounter. The Django "
"ticket tracker is the central place to search for open issues:"
msgstr ""

# 1a9019084a87442393d88bae47c581b6
# d932503b5d6c4a56877fc59467d8faff
# 0604355f71344bbba88032174e6561f8
#: ../../releases/1.3-alpha-1.txt:381 ../../releases/1.3-beta-1.txt:217
#: ../../releases/1.4-alpha-1.txt:1103
msgid ""
"Additionally, discussion of Django development, including progress toward "
"the 1.3 release, takes place daily on the django-developers mailing list:"
msgstr ""

# 05b388ef20fd4c748a56512935c90a0c
#: ../../releases/1.3-alpha-1.txt:399
msgid ""
"Several development sprints will also be taking place before the 1.3 "
"release; these will typically be announced in advance on the django-"
"developers mailing list, and anyone who wants to help is welcome to join in."
msgstr ""

# de6c3f0c008e487a98d32caab67ef1da
#: ../../releases/1.3-beta-1.txt:3
msgid "Django 1.3 beta 1 release notes"
msgstr ""

# 27977ba4300848f1aa1387b2f41b4cbc
#: ../../releases/1.3-beta-1.txt:5
msgid "Welcome to Django 1.3 beta 1!"
msgstr ""

# c5405d5f266b45a78def524bad4fed03
#: ../../releases/1.3-beta-1.txt:7
msgid ""
"This is the second in a series of preview/development releases leading up to "
"the eventual release of Django 1.3. This release is primarily targeted at "
"developers who are interested in trying out new features and testing the "
"Django codebase to help identify and resolve bugs prior to the final 1.3 "
"release."
msgstr ""

# b4bcacf7977146dcbab1793a8553ab31
#: ../../releases/1.3-beta-1.txt:17
msgid "What's new in Django 1.3 beta 1"
msgstr ""

# d31bb8116fc448bcab1bc2c4a59fe221
#: ../../releases/1.3-beta-1.txt:20
msgid "Further tweaks to the staticfiles app"
msgstr ""

# 8384ddcf3e1f4ee79ac877ed511a0006
#: ../../releases/1.3-beta-1.txt:22
msgid ""
"Django 1.3 ships with a new contrib app :mod:`django.contrib.staticfiles` to "
"help developers handle the static media files (images, CSS, JavaScript, "
"etc.) that are needed to render a complete web page."
msgstr ""

# 7df6c8305c724f9cb8e30479dfcb443a
#: ../../releases/1.3-beta-1.txt:26
msgid ""
"The :mod:`~django.contrib.staticfiles` app ships with the ability to "
"automatically serve static files during development (if the :setting:`DEBUG` "
"setting is ``True``) when using the :djadmin:`runserver` management command. "
"Based on feedback from the community this release adds two new options to "
"the :djadmin:`runserver` command to modify this behavior:"
msgstr ""

# b618fd3ab6514e63a6a630a5bd4be2bf
#: ../../releases/1.3-beta-1.txt:32
msgid ""
"``--nostatic``: prevents the :djadmin:`runserver` command from serving files "
"completely."
msgstr ""

# 1c81ea6284ef4083856464ddc890cfbe
#: ../../releases/1.3-beta-1.txt:35
msgid ""
"``--insecure``: enables serving of static files even if running with :"
"setting:`DEBUG` set to False. (This is **not** recommended!)"
msgstr ""

# d17aeccdfc4e4f2db571f9e7121ed0e9
#: ../../releases/1.3-beta-1.txt:38
msgid ""
"See the :doc:`staticfiles reference documentation </ref/contrib/"
"staticfiles>` for more details, or learn :doc:`how to manage static files </"
"howto/static-files>`."
msgstr ""

# 8290b5c2b90847ce9b2da92cb3783437
#: ../../releases/1.3-beta-1.txt:43
msgid "Translation comments"
msgstr ""

# 47958275cf6e49629ccc1e7348c1f1ec
#: ../../releases/1.3-beta-1.txt:45
msgid ""
"If you would like to give translators hints about a translatable string, you "
"can add a comment prefixed with the ``Translators`` keyword on the line "
"preceding the string, e.g.::"
msgstr ""

# 86bb68f961f64217a848d5c9d04031fb
#: ../../releases/1.3-beta-1.txt:53
msgid ""
"The comment will appear in the resulting .po file and should also be "
"displayed by most translation tools."
msgstr ""

# 411e390e478e452384d771caa2a9846c
#: ../../releases/1.3-beta-1.txt:56
msgid "For more information, see :ref:`translator-comments`."
msgstr ""

# 4cf31119319d4bffbec587ca6ee288fc
#: ../../releases/1.3-beta-1.txt:61
msgid ""
"If you provide a custom auth backend with ``supports_inactive_user`` set to "
"``True``, an inactive user model will check the backend for permissions. "
"This is useful for further centralizing the permission handling. See the :"
"doc:`authentication docs </topics/auth>` for more details."
msgstr ""

# 168c991b4204493c999f6b7ca1430efe
#: ../../releases/1.3-beta-1.txt:67
msgid "Backwards-incompatible changes in 1.3 alpha 2"
msgstr ""

# d90a7aa57a6e4d7192925f509cf5d4d7
#: ../../releases/1.3-beta-1.txt:70
msgid "Change to admin lookup filters"
msgstr ""

# 7217e1f073104ac7b5db2a0a83ed4e65
#: ../../releases/1.3-beta-1.txt:72
msgid ""
"The Django admin has long had an undocumented \"feature\" allowing savvy "
"users to manipulate the query string of changelist pages to filter the list "
"of objects displayed. However, this also creates a security issue, as a "
"staff user with sufficient knowledge of model structure could use this "
"\"feature\" to gain access to information he or she would not normally have."
msgstr ""

# b0ff52326500436e993827cfa08c0a67
#: ../../releases/1.3-beta-1.txt:79
msgid ""
"As a result, changelist filtering now explicitly validates all lookup "
"arguments in the query string, and permits only fields which are directly on "
"the model, or relations explicitly permitted by the ``ModelAdmin`` "
"definition. If you were relying on this undocumented feature, you will need "
"to update your ``ModelAdmin`` definitions to whitelist the relations you "
"choose to expose for filtering."
msgstr ""

# e7cb76e3755f47eaa3befd3791639c3d
#: ../../releases/1.3-beta-1.txt:87
msgid "Introduction of STATIC_URL and STATIC_ROOT settings"
msgstr ""

# d433f768dacc4f33a6fede46f92955bd
#: ../../releases/1.3-beta-1.txt:89
msgid ""
"The newly introduced :mod:`~django.contrib.staticfiles` app -- which extends "
"Django's abilities to handle static files for apps and projects -- required "
"the additon of two new settings to refer to those files in templates and "
"code, especially in contrast to the :setting:`MEDIA_URL` and :setting:"
"`MEDIA_ROOT` settings that refer to user-uploaded files."
msgstr ""

# a207fb78739547e88e53385cb734ca3f
#: ../../releases/1.3-beta-1.txt:95
msgid ""
"Prior to 1.3 alpha 2 these settings were called ``STATICFILES_URL`` and "
"``STATICFILES_ROOT`` to follow the naming scheme for app-centric settings. "
"Based on feedback from the community it became apparent that those settings "
"created confusion, especially given the fact that handling static files is "
"also desired outside the use of the optional :mod:`~django.contrib."
"staticfiles` app."
msgstr ""

# 92536bb2858e4ed8bb0c9d1fdc82fc45
#: ../../releases/1.3-beta-1.txt:101
msgid "As a result, we took the following steps to rectify the issue:"
msgstr ""

# 6f5663e30778456e9eeee1b72ad60aa8
#: ../../releases/1.3-beta-1.txt:103
msgid ""
"Two new global settings were added that will be used by, **but are not "
"limited to**, the :doc:`staticfiles</ref/contrib/staticfiles>` app:"
msgstr ""

# 110f1df7439f4fa68c745910f6b3a464
#: ../../releases/1.3-beta-1.txt:106
msgid ":setting:`STATIC_ROOT` (formally ``STATICFILES_ROOT``)"
msgstr ""

# 840f02fba0b740b99208f986b73353ef
#: ../../releases/1.3-beta-1.txt:108
msgid ":setting:`STATIC_URL` (formally ``STATICFILES_URL``)"
msgstr ""

# f83aab080c2e4c0683d96df804ec9c78
#: ../../releases/1.3-beta-1.txt:110
msgid ""
"The ``django.contrib.staticfiles.templatetags.staticfiles."
"get_staticfiles_prefix`` template tag was moved to Django's core (``django."
"templatetags.static``) and renamed to :ttag:`get_static_prefix`."
msgstr ""

# c215ac3ada9848bda20c7e3126aaae7c
#: ../../releases/1.3-beta-1.txt:114
msgid ""
"The ``django.contrib.staticfiles.context_processors.staticfiles`` context "
"processor was moved to Django's core (``django.core.context_processors."
"static``) and renamed to :func:`~django.core.context_processors.static`."
msgstr ""

# 6ae31e2d1e6e4cb6b6c24a097adae314
#: ../../releases/1.3-beta-1.txt:119
msgid ""
":ref:`form-media-paths` now uses :setting:`STATIC_URL` as the prefix **if "
"the value is not None**, and falls back to the previously used :setting:"
"`MEDIA_URL` setting otherwise."
msgstr ""

# 92f6477e7e904b1283c6f43971e8e60b
#: ../../releases/1.3-beta-1.txt:141
msgid "Changes to ``USStateField``"
msgstr ""

# 5358cfc1f83141449f23b202ff4c2c01
#: ../../releases/1.3-beta-1.txt:143
msgid ""
"The :mod:`django.contrib.localflavor` application contains collections of "
"code relevant to specific countries or cultures. One such is :class:`~django."
"contrib.localflavor.us.models.USStateField`, which provides a field for "
"storing the two-letter postal abbreviation of a U.S. state. This field has "
"consistently caused problems, however, because it is often used to store the "
"state portion of a U.S postal address, but not all \"states\" recognized by "
"the U.S Postal Service are actually states of the U.S. or even U.S. "
"territory. Several compromises over the list of choices resulted in some "
"users feeling the field supported too many locations, while others felt it "
"supported too few."
msgstr ""

# 2602f239de4149efabe9954d3cac26c1
#: ../../releases/1.3-beta-1.txt:155
msgid ""
"In Django 1.3 we're taking a new approach to this problem, implemented as a "
"pair of changes:"
msgstr ""

# 5c8ce2c2125b4b88ba8d82157cebbf12
#: ../../releases/1.3-beta-1.txt:158
msgid ""
"The choice list for `USStateField` has changed. Previously, it consisted of "
"the 50 U.S. states, the District of Columbia and U.S. overseas territories. "
"As of Django 1.3 it includes all previous choices, plus the U.S. Armed "
"Forces postal codes."
msgstr ""

# 4b369d4087474ec99c52d3cf924720b5
#: ../../releases/1.3-beta-1.txt:163
msgid ""
"A new model field, :class:`django.contrib.localflavor.us.models."
"USPostalCodeField`, has been added which draws its choices from a list of "
"all postal abbreviations recognized by the U.S Postal Service. This includes "
"all abbreviations recognized by `USStateField`, plus three independent "
"nations -- the Federated States of Micronesia, the Republic of the Marshall "
"Islands and the Republic of Palau -- which are serviced under treaty by the "
"U.S. postal system. A new form widget, :class:`django.contrib.localflavor.us."
"forms.USPSSelect`, is also available and provides the same set of choices."
msgstr ""

# 9da162afc3cb489295c2694a988185b3
#: ../../releases/1.3-beta-1.txt:174
msgid ""
"Additionally, several finer-grained choice tuples are provided which allow "
"mixing and matching of subsets of the U.S. states and territories, and other "
"locations serviced by the U.S. postal system. Consult the :mod:`django."
"contrib.localflavor` documentation for more details."
msgstr ""

# 64b72e9eac3a4e5cb06b2097471e77aa
#: ../../releases/1.3-beta-1.txt:180
msgid ""
"The change to `USStateField` is technically backwards-incompatible for users "
"who expect this field to exclude Armed Forces locations. If you need to "
"support U.S. mailing addresses without Armed Forces locations, see the list "
"of choice tuples available in the localflavor documentation."
msgstr ""

# c4aa4cb496044849b1a37ec5968b9593
#: ../../releases/1.3-beta-1.txt:193
msgid ""
"Week of **January 24, 2011**: First Django 1.3 release candidate. String "
"freeze for translations."
msgstr ""

# befaf4a31fde4ad6859673fff71af413
#: ../../releases/1.3-beta-1.txt:196
msgid "Week of **January 31, 2011**: Django 1.3 final release."
msgstr ""

# a4e73d1179bf44d4b011ffcc9146830a
#: ../../releases/1.3-beta-1.txt:198
msgid ""
"If necessary, additional beta or release-candidate packages will be issued "
"prior to the final 1.3 release. Django 1.3 will be released approximately "
"one week after the final release candidate."
msgstr ""

# 383f680df16b48ca84a617697303e66b
#: ../../releases/1.3-beta-1.txt:206
msgid ""
"In order to provide a high-quality 1.3 release, we need your help. Although "
"this beta release is, again, *not* intended for production use, you can help "
"the Django team by trying out the beta codebase in a safe test environment "
"and reporting any bugs or issues you encounter. The Django ticket tracker is "
"the central place to search for open issues:"
msgstr ""

# ce39b7b3ef7b49f680dded19cc23bfd1
#: ../../releases/1.3.1.txt:3
msgid "Django 1.3.1 release notes"
msgstr ""

# 9cf2ee20a44c41ed891a5271e9e2b007
#: ../../releases/1.3.1.txt:7
msgid "Welcome to Django 1.3.1!"
msgstr ""

# fff702ee316242e2860ed6fe32e81d4c
#: ../../releases/1.3.1.txt:9
msgid ""
"This is the first security release in the Django 1.3 series, fixing several "
"security issues in Django 1.3.  Django 1.3.1 is a recommended upgrade for "
"all users of Django 1.3."
msgstr ""

# 545beabc3604470b951b77656b624b8e
#: ../../releases/1.4.txt:3
msgid "Django 1.4 release notes - UNDER DEVELOPMENT"
msgstr ""

# c49dc3cf19ae4bc2811443187f074a53
#: ../../releases/1.4.txt:5
msgid ""
"This page documents release notes for the as-yet-unreleased Django 1.4. As "
"such, it's tentative and subject to change. It provides up-to-date "
"information for those who are following trunk."
msgstr ""

# 8ae756c4abcf467f92f300047837d7df
#: ../../releases/1.4.txt:9
msgid ""
"Django 1.4 includes various `new features`_ and some minor `backwards "
"incompatible changes`_. We've also dropped some features, which are detailed "
"in :doc:`our deprecation plan </internals/deprecation>`, and we've `begun "
"the deprecation process for some features`_."
msgstr ""

# 8a442e85169540f6b9946003e2efa0eb
#: ../../releases/1.4.txt:21
msgid ""
"Django 1.4 has dropped support for Python 2.4. Python 2.5 is now the minimum "
"required Python version. Django is tested and supported on Python 2.5, 2.6 "
"and 2.7."
msgstr ""

# 90ee42cee459427a872a3a99d8151410
#: ../../releases/1.4.txt:25
msgid ""
"This change should affect only a small number of Django users, as most "
"operating-system vendors today are shipping Python 2.5 or newer as their "
"default version. If you're still using Python 2.4, however, you'll need to "
"stick to Django 1.3 until you can upgrade. Per :doc:`our support policy </"
"internals/release-process>`, Django 1.3 will continue to receive security "
"support until the release of Django 1.5."
msgstr ""

# eb8f8bee5887448c904d7be74bb86a63
#: ../../releases/1.4.txt:32
msgid ""
"Django does not support Python 3.x at this time. At some point before the "
"release of Django 1.4, we plan to publish a document outlining our full "
"timeline for deprecating Python 2.x and moving to Python 3.x."
msgstr ""

# 911778713d074132b887097aebb8b489
# 891045cc60cc47b8a0f7c6dca078d0d3
# bf6ab66d218f477eb19c330cb8fb0068
#: ../../releases/1.4.txt:37 ../../releases/1.4-alpha-1.txt:48
#: ../../releases/1.4-beta-1.txt:64
msgid "What's new in Django 1.4"
msgstr ""

# d3e6a882f55240ac8485087cfc27943b
# 8555491f10c3431ba98ab0b40c12d70e
# b91b05f8b2154c2090018f60adc677d2
#: ../../releases/1.4.txt:40 ../../releases/1.4-alpha-1.txt:51
#: ../../releases/1.4-beta-1.txt:67
msgid "Support for in-browser testing frameworks"
msgstr ""

# 820feff585c841c097dd8c5c12a07fc6
# b7c934e228f440e7a8fc93c2f9cf56fb
# 692f3f93a7154acdb5b1d4c2a1f652f9
#: ../../releases/1.4.txt:42 ../../releases/1.4-alpha-1.txt:53
#: ../../releases/1.4-beta-1.txt:69
msgid ""
"Django 1.4 supports integration with in-browser testing frameworks like "
"Selenium_. The new :class:`django.test.LiveServerTestCase` base class lets "
"you test the interactions between your site's front and back ends more "
"comprehensively. See the :class:`documentation<django.test."
"LiveServerTestCase>` for more details and concrete examples."
msgstr ""

# 7ac5d9837bc041c6b21a9996678af940
# 82e51bbcb8984faa9c247338fedb32dd
# bc2b6642b9614aa0b63b6db4764634cd
#: ../../releases/1.4.txt:52 ../../releases/1.4-alpha-1.txt:63
#: ../../releases/1.4-beta-1.txt:79
msgid "``SELECT FOR UPDATE`` support"
msgstr ""

# 8ba65aa9073844db82ee3cc3221b96bf
#: ../../releases/1.4.txt:54
msgid ""
"Django 1.4 includes a :meth:`QuerySet.select_for_update() <django.db.models."
"query.QuerySet.select_for_update>` method, which generates a ``SELECT ... "
"FOR UPDATE`` SQL query. This will lock rows until the end of the "
"transaction, meaning other transactions cannot modify or delete rows matched "
"by a ``FOR UPDATE`` query."
msgstr ""

# 196405689b644ffebd7538415bdcbee0
# 91d55dfeb6ef41f9a83df71dda990fc7
# 311b01a48dc049e1bcd7f5a44edd70f3
#: ../../releases/1.4.txt:60 ../../releases/1.4-alpha-1.txt:71
#: ../../releases/1.4-beta-1.txt:87
msgid ""
"For more details, see the documentation for :meth:`~django.db.models.query."
"QuerySet.select_for_update`."
msgstr ""

# 0da74219dacc4081944813fa850eb4ea
# 3c3d7afca098447bbda73c00552c2f4a
# ae5bf210ce83424c93e78a683ed1310f
#: ../../releases/1.4.txt:64 ../../releases/1.4-alpha-1.txt:75
#: ../../releases/1.4-beta-1.txt:91
msgid "``Model.objects.bulk_create`` in the ORM"
msgstr ""

# 6225547e44d341fd848d7ad633370bf2
#: ../../releases/1.4.txt:66
msgid ""
"This method lets you create multiple objects more efficiently. It can result "
"in significant performance increases if you have many objects."
msgstr ""

# 7b62c641e55145098f1f28d560219e5d
#: ../../releases/1.4.txt:69
msgid ""
"Django makes use of this internally, meaning some operations (such as "
"database setup for test suites) have seen a performance benefit as a result."
msgstr ""

# d9cf39630de04d7e9730940f9efe73c1
# 00ee498bb2984b1997ceeefec7f8bc2b
# 974b4dc6753e4182b2fbbc62bb5d7a2e
#: ../../releases/1.4.txt:72 ../../releases/1.4-alpha-1.txt:82
#: ../../releases/1.4-beta-1.txt:98
msgid ""
"See the :meth:`~django.db.models.query.QuerySet.bulk_create` docs for more "
"information."
msgstr ""

# 7950596a774e417ea6962f6a75445ced
# fdbe5a4c89d74b369f4079033fe4c281
# 7a3cd20d1abd4496810ef46e9ca41abf
#: ../../releases/1.4.txt:76 ../../releases/1.4-alpha-1.txt:86
#: ../../releases/1.4-beta-1.txt:102
msgid "``QuerySet.prefetch_related``"
msgstr ""

# 9bd30e8855674a72ac9ee989982ee576
#: ../../releases/1.4.txt:78
msgid ""
"Similar to :meth:`~django.db.models.query.QuerySet.select_related` but with "
"a different strategy and broader scope, :meth:`~django.db.models.query."
"QuerySet.prefetch_related` has been added to :class:`~django.db.models.query."
"QuerySet`. This method returns a new ``QuerySet`` that will prefetch each of "
"the specified related lookups in a single batch as soon as the query begins "
"to be evaluated. Unlike ``select_related``, it does the joins in Python, not "
"in the database, and supports many-to-many relationships, :class:`~django."
"contrib.contenttypes.generic.GenericForeignKey` and more. This allows you to "
"fix a very common performance problem in which your code ends up doing O(n) "
"database queries (or worse) if objects on your primary ``QuerySet`` each "
"have many related objects that you also need to fetch."
msgstr ""

# ce36d5a2c4db44c89b395d21eb903687
# 38d39027ab234e81b59684e1fc7cb2f4
# ce0c1cbe329d4af78fe46b1eef8907a1
#: ../../releases/1.4.txt:92 ../../releases/1.4-alpha-1.txt:102
#: ../../releases/1.4-beta-1.txt:118
msgid "Improved password hashing"
msgstr ""

# 4874370e38eb48598959e09f95df0887
# a9b658193ce041cfb5ed92686e2e8cfd
# c64198414fec4f278fcb5bcda8da5022
#: ../../releases/1.4.txt:94 ../../releases/1.4-alpha-1.txt:104
#: ../../releases/1.4-beta-1.txt:120
msgid ""
"Django's auth system (``django.contrib.auth``) stores passwords using a one-"
"way algorithm. Django 1.3 uses the SHA1_ algorithm, but increasing processor "
"speeds and theoretical attacks have revealed that SHA1 isn't as secure as "
"we'd like. Thus, Django 1.4 introduces a new password storage system: by "
"default Django now uses the PBKDF2_ algorithm (as recommended by NIST_). You "
"can also easily choose a different algorithm (including the popular bcrypt_ "
"algorithm). For more details, see :ref:`auth_password_storage`."
msgstr ""

# 98d5030a4c49470e98d6141a5ce14ac0
#: ../../releases/1.4.txt:108
msgid "HTML5 doctype"
msgstr ""

# a08d5f437f11447198be604ad95dde16
# a86b3f96cd7146d89edc20803ccfc498
# 8c1ee5c447f348e68fb5e5b9d46dc22b
#: ../../releases/1.4.txt:110 ../../releases/1.4-alpha-1.txt:121
#: ../../releases/1.4-beta-1.txt:152
msgid ""
"We've switched the admin and other bundled templates to use the HTML5 "
"doctype. While Django will be careful to maintain compatibility with older "
"browsers, this change means that you can use any HTML5 features you need in "
"admin pages without having to lose HTML validity or override the provided "
"templates to change the doctype."
msgstr ""

# de24a9f24ff64f2eb61048210075163d
# 71e89079f8c841a4b2f4d8ac62d47dd9
# 338b4375932d4810a51f23b6c962df50
#: ../../releases/1.4.txt:117 ../../releases/1.4-alpha-1.txt:128
#: ../../releases/1.4-beta-1.txt:159
msgid "List filters in admin interface"
msgstr ""

# 9824b75006354b7c8f8edff8800d2c1b
#: ../../releases/1.4.txt:119
msgid ""
"Prior to Django 1.4, the :mod:`~django.contrib.admin` app let you specify "
"change list filters by specifying a field lookup, but it didn't allow you to "
"create custom filters. This has been rectified with a simple API (previously "
"used internally and known as \"FilterSpec\"). For more details, see the "
"documentation for :attr:`~django.contrib.admin.ModelAdmin.list_filter`."
msgstr ""

# 366562c3b05c4943ba77fc7bd372dc12
# 46a98ae1c88a4675988bdfaa75e0ffbb
# 218e331591c84a1e84d2421a5625f39e
#: ../../releases/1.4.txt:126 ../../releases/1.4-alpha-1.txt:137
#: ../../releases/1.4-beta-1.txt:168
msgid "Multiple sort in admin interface"
msgstr ""

# 979c05204cc247248b6462b1ca67aaa3
#: ../../releases/1.4.txt:128
msgid ""
"The admin change list now supports sorting on multiple columns. It respects "
"all elements of the :attr:`~django.contrib.admin.ModelAdmin.ordering` "
"attribute, and sorting on multiple columns by clicking on headers is "
"designed to mimic the behavior of desktop GUIs. We also added a :meth:"
"`~django.contrib.admin.ModelAdmin.get_ordering` method for specifying the "
"ordering dynamically (i.e., depending on the request)."
msgstr ""

# 13d5535b135a436c8dee081f8986a713
# d3512301539e40a28af6b092f01bc70c
# 039b51b4517c4ffd91147099c74c3c4e
#: ../../releases/1.4.txt:136 ../../releases/1.4-alpha-1.txt:147
#: ../../releases/1.4-beta-1.txt:178
msgid "New ``ModelAdmin`` methods"
msgstr ""

# b4e695b87a88481aa97d212116a515d2
#: ../../releases/1.4.txt:138
msgid ""
"We added a :meth:`~django.contrib.admin.ModelAdmin.save_related` method to :"
"mod:`~django.contrib.admin.ModelAdmin` to ease customization of how related "
"objects are saved in the admin."
msgstr ""

# a63697d5a8d24bdaa22913c2d98638dc
#: ../../releases/1.4.txt:142
msgid ""
"Two other new :class:`~django.contrib.admin.ModelAdmin` methods, :meth:"
"`~django.contrib.admin.ModelAdmin.get_list_display` and :meth:`~django."
"contrib.admin.ModelAdmin.get_list_display_links` enable dynamic "
"customization of fields and links displayed on the admin change list."
msgstr ""

# 0053c59553cf4c438d2de2794fe49be3
# 2fc3583d53d340e8bf96ad1dfbf4279a
# ef8c7d192b8947618f7ddf555172abc7
#: ../../releases/1.4.txt:149 ../../releases/1.4-alpha-1.txt:160
#: ../../releases/1.4-beta-1.txt:191
msgid "Admin inlines respect user permissions"
msgstr ""

# 2e75b104ddfd423daa4da9818e52a816
#: ../../releases/1.4.txt:151
msgid ""
"Admin inlines now only allow those actions for which the user has "
"permission. For ``ManyToMany`` relationships with an auto-created "
"intermediate model (which does not have its own permissions), the change "
"permission for the related model determines if the user has the permission "
"to add, change or delete relationships."
msgstr ""

# 59b6a915a4a343cd826be224830a3e12
# df564c1c303d47e8b4cf535822d411e4
# 7202aa3d9d204d49a0246b4cb53d60af
#: ../../releases/1.4.txt:158 ../../releases/1.4-alpha-1.txt:169
#: ../../releases/1.4-beta-1.txt:200
msgid "Tools for cryptographic signing"
msgstr ""

# ce972478f97b4412973644345e223b1f
# 50139987b045456eb1cc78f4ca731208
# b269e18d259643c7b0b3470ccb1cf29b
#: ../../releases/1.4.txt:160 ../../releases/1.4-alpha-1.txt:171
#: ../../releases/1.4-beta-1.txt:202
msgid ""
"Django 1.4 adds both a low-level API for signing values and a high-level API "
"for setting and reading signed cookies, one of the most common uses of "
"signing in Web applications."
msgstr ""

# bb0ced34f9da4d73b7ec9337589abaf5
# 8bc7c2753d614ed6992818bf13b9e996
# 544a8b371a9044f986ca808ff9141540
#: ../../releases/1.4.txt:164 ../../releases/1.4-alpha-1.txt:175
#: ../../releases/1.4-beta-1.txt:206
msgid ""
"See the :doc:`cryptographic signing </topics/signing>` docs for more "
"information."
msgstr ""

# e88b76457eb045b09296cfc7dcc05080
# e33816d176a340a2a3b704b53f2d2f06
# f11fc8c4dff249048176f194fa1c85fe
#: ../../releases/1.4.txt:168 ../../releases/1.4-alpha-1.txt:179
#: ../../releases/1.4-beta-1.txt:210
msgid "Cookie-based session backend"
msgstr ""

# afdd025709ba45aba3840681ff3a35b8
#: ../../releases/1.4.txt:170
msgid ""
"Django 1.4 introduces a cookie-based session backend that uses the tools "
"for :doc:`cryptographic signing </topics/signing>` to store the session data "
"in the client's browser."
msgstr ""

# 399d9f8154e44674bef29a9a60e64c0d
#: ../../releases/1.4.txt:176
msgid ""
"Session data is signed and validated by the server, but it's not encrypted. "
"This means a user can view any data stored in the session but cannot change "
"it. Please read the documentation for further clarification before using "
"this backend."
msgstr ""

# 17545cd46d5d4ab68f15203b1bfe27f1
# a3af59d2eec147c3ab00799f265de9ae
# 15927709947a4a4e9efda3c38eb5fa38
#: ../../releases/1.4.txt:181 ../../releases/1.4-alpha-1.txt:185
#: ../../releases/1.4-beta-1.txt:223
msgid ""
"See the :ref:`cookie-based session backend <cookie-session-backend>` docs "
"for more information."
msgstr ""

# 232d3c4082aa410db10504703c637bdd
# f9b1c09cbead4954a184c69cb8220b5f
# 75fccdf7839342539f529ba9b128868d
#: ../../releases/1.4.txt:185 ../../releases/1.4-alpha-1.txt:189
#: ../../releases/1.4-beta-1.txt:227
msgid "New form wizard"
msgstr ""

# 34d2f15f7b9a4dde9bfd10763e664e0c
# 13ecdb357c9b42ef85b9f67a48d9f37a
# b07fcd4d2e064006a09c1ace58a78fe5
#: ../../releases/1.4.txt:187 ../../releases/1.4-alpha-1.txt:191
#: ../../releases/1.4-beta-1.txt:229
msgid ""
"The previous ``FormWizard`` from the formtools contrib app has been replaced "
"with a new implementation based on the class-based views introduced in "
"Django 1.3. It features a pluggable storage API and doesn't require the "
"wizard to pass around hidden fields for every previous step."
msgstr ""

# 9e3d2706133847a1b85561ea118b84e2
# 01ac0dcd3fd748ba8c83c337037b2eff
# 468f8cdd296c4bbb99f17e4586dea4ff
#: ../../releases/1.4.txt:192 ../../releases/1.4-alpha-1.txt:196
#: ../../releases/1.4-beta-1.txt:234
msgid ""
"Django 1.4 ships with a session-based storage backend and a cookie-based "
"storage backend. The latter uses the tools for :doc:`cryptographic signing </"
"topics/signing>` also introduced in Django 1.4 to store the wizard's state "
"in the user's cookies."
msgstr ""

# e1280ca46e314a07b6b4949a86c58694
# 552dff20fde3412587ad4779d703ae9a
# ddca5d7c22c84d1b94b841c943c99907
#: ../../releases/1.4.txt:197 ../../releases/1.4-alpha-1.txt:201
#: ../../releases/1.4-beta-1.txt:239
msgid ""
"See the :doc:`form wizard </ref/contrib/formtools/form-wizard>` docs for "
"more information."
msgstr ""

# 2bc294e2b2ae4b688de5169ee7e52efd
# 39c04de16b624e91af7fe36017cc391c
# ccf79b0b03eb475c97cc6cbd6cac562a
#: ../../releases/1.4.txt:201 ../../releases/1.4-alpha-1.txt:205
#: ../../releases/1.4-beta-1.txt:243
msgid "``reverse_lazy``"
msgstr ""

# c53a7cf72a3c41b7918281d98d4d88fd
#: ../../releases/1.4.txt:203
msgid ""
"A lazily evaluated version of :func:`django.core.urlresolvers.reverse` was "
"added to allow using URL reversals before the project's URLconf gets loaded."
msgstr ""

# 6325963a549d44e79701220e30ca43c3
# 06f3f3b485cc4bdfa5b04d769295b125
# 1209490896ce4cf88c9ce64473b54aef
#: ../../releases/1.4.txt:207 ../../releases/1.4-alpha-1.txt:211
#: ../../releases/1.4-beta-1.txt:249
msgid "Translating URL patterns"
msgstr ""

# d593618808a54e728b0143696c233cf3
#: ../../releases/1.4.txt:209
msgid ""
"Django can now look for a language prefix in the URLpattern when using the "
"new :func:`~django.conf.urls.i18n.i18n_patterns` helper function. It's also "
"now possible to define translatable URL patterns using :func:`~django.utils."
"translation.ugettext_lazy`. See :ref:`url-internationalization` for more "
"information about the language prefix and how to internationalize URL "
"patterns."
msgstr ""

# fb4be14b5d554b79aaabeb3dc2e6718b
# 30bb5c5cadb84a908a276ccb666b31bb
# 7a5b2b5010134c0b934edfc215a73757
#: ../../releases/1.4.txt:217 ../../releases/1.4-alpha-1.txt:221
#: ../../releases/1.4-beta-1.txt:259
msgid ""
"Contextual translation support for ``{% trans %}`` and ``{% blocktrans %}``"
msgstr ""

# 7e9379d9af1e4f7583f4a837fc9e8eb1
# 3dd00ece015447638ddc18cef0f8a32e
# 7e844cbe6eea4539a88e11cf39460ab1
#: ../../releases/1.4.txt:219 ../../releases/1.4-alpha-1.txt:223
#: ../../releases/1.4-beta-1.txt:261
msgid ""
"The :ref:`contextual translation<contextual-markers>` support introduced in "
"Django 1.3 via the ``pgettext`` function has been extended to the :ttag:"
"`trans` and :ttag:`blocktrans` template tags using the new ``context`` "
"keyword."
msgstr ""

# a202ddca3f9b4d80b05ef160367e2552
# f9158f278a8844ecab2e7b7521e4170f
# 7674acc2f7964656a4eb108259111ffc
#: ../../releases/1.4.txt:225 ../../releases/1.4-alpha-1.txt:229
#: ../../releases/1.4-beta-1.txt:267
msgid "Customizable ``SingleObjectMixin`` URLConf kwargs"
msgstr ""

# b97d2a3000ab4f62a4a7748fd1803fa4
#: ../../releases/1.4.txt:227
msgid ""
"Two new attributes, :attr:`pk_url_kwarg<django.views.generic.detail."
"SingleObjectMixin.pk_url_kwarg>` and :attr:`slug_url_kwarg<django.views."
"generic.detail.SingleObjectMixin.slug_url_kwarg>`, have been added to :class:"
"`~django.views.generic.detail.SingleObjectMixin` to enable the customization "
"of URLconf keyword arguments used for single object generic views."
msgstr ""

# 364e5ed9e139478280aff9d76c57f78d
# bbfb1d634c2348ef867f20fb5d55b3b9
# 0b04441b053b4cd68c9d28c5498c1713
#: ../../releases/1.4.txt:236 ../../releases/1.4-alpha-1.txt:240
#: ../../releases/1.4-beta-1.txt:278
msgid "Assignment template tags"
msgstr ""

# 3bad06eb274e4624bb387a5ab95fae10
# 0a037803db5c447187434b4e12d163f4
# 4e2eb4d114574ce198ce39810c9866f2
#: ../../releases/1.4.txt:238 ../../releases/1.4-alpha-1.txt:242
#: ../../releases/1.4-beta-1.txt:280
msgid ""
"A new :ref:`assignment_tag<howto-custom-template-tags-assignment-tags>` "
"helper function was added to ``template.Library`` to ease the creation of "
"template tags that store data in a specified context variable."
msgstr ""

# c45d4509774a4d0bbb5691449132919f
# b60455a2793b48b2bfba94c9fb5e02e4
# 52ea1a17463b41e4acd33b6af24a921c
#: ../../releases/1.4.txt:243 ../../releases/1.4-alpha-1.txt:247
#: ../../releases/1.4-beta-1.txt:285
msgid "``*args`` and ``**kwargs`` support for template tag helper functions"
msgstr ""

# 8d931262104f46c1b3c13f07d919e91a
# b952380c44cd42c3854998e0f4a3bb13
# 83d54032cae2434d9031232c722a11be
#: ../../releases/1.4.txt:245 ../../releases/1.4-alpha-1.txt:249
#: ../../releases/1.4-beta-1.txt:287
msgid ""
"The :ref:`simple_tag<howto-custom-template-tags-simple-tags>`, :ref:"
"`inclusion_tag <howto-custom-template-tags-inclusion-tags>` and newly "
"introduced :ref:`assignment_tag<howto-custom-template-tags-assignment-tags>` "
"template helper functions may now accept any number of positional or keyword "
"arguments. For example:"
msgstr ""

# fb59801c14d0478c9a4a2287819e4eac
#: ../../releases/1.4.txt:261
msgid ""
"Then, in the template, any number of arguments may be passed to the template "
"tag. For example:"
msgstr ""

# 98f9197ac3554308adc21d901c8c893c
# 7a2f4bb84a484169a4da0734ca0b8a97
# 9769e2dd3bcb4782a3282ac383b1c7cf
#: ../../releases/1.4.txt:269 ../../releases/1.4-alpha-1.txt:273
#: ../../releases/1.4-beta-1.txt:311
msgid "No wrapping of exceptions in ``TEMPLATE_DEBUG`` mode"
msgstr ""

# 6410e4c401294c8395ed3bb012f68630
# ddc23df8d24d4e7c8b520d12e481b16d
# 3ec275ec008f44f4afcfe1c834315e74
#: ../../releases/1.4.txt:271 ../../releases/1.4-alpha-1.txt:275
#: ../../releases/1.4-beta-1.txt:313
msgid ""
"In previous versions of Django, whenever the :setting:`TEMPLATE_DEBUG` "
"setting was ``True``, any exception raised during template rendering (even "
"exceptions unrelated to template syntax) were wrapped in "
"``TemplateSyntaxError`` and re-raised. This was done in order to provide "
"detailed template source location information in the debug 500 page."
msgstr ""

# 36623034f9f64469bc75e8ee55152a1a
# 811135de2f6448ffa01543da052c60ae
# 20730787b3c04653832fb1ac61347d64
#: ../../releases/1.4.txt:277 ../../releases/1.4-alpha-1.txt:281
#: ../../releases/1.4-beta-1.txt:319
msgid ""
"In Django 1.4, exceptions are no longer wrapped. Instead, the original "
"exception is annotated with the source information. This means that catching "
"exceptions from template rendering is now consistent regardless of the value "
"of :setting:`TEMPLATE_DEBUG`, and there's no need to catch and unwrap "
"``TemplateSyntaxError`` in order to catch other errors."
msgstr ""

# e90ce44b4366422ba52662fb4d5d2a83
# 2b85a9cac8c8450381452863c9d1de75
# 8a4d3388b7fd4520ae55aeb2dd449f63
#: ../../releases/1.4.txt:284 ../../releases/1.4-alpha-1.txt:288
#: ../../releases/1.4-beta-1.txt:326
msgid "``truncatechars`` template filter"
msgstr ""

# 03690a983a8e4380998a7babcdac7c51
#: ../../releases/1.4.txt:286
msgid ""
"This new filter truncates a string to be no longer than the specified number "
"of characters. Truncated strings end with a translatable ellipsis sequence "
"(\"...\"). See the documentation for :tfilter:`truncatechars` for more "
"details."
msgstr ""

# 7f274c4262d843debb004bb776a1c2b3
# c131980dafd546e0ab57e6c383d39eb9
# 67581de2dabe46eb842161ad13d7d4c4
#: ../../releases/1.4.txt:292 ../../releases/1.4-alpha-1.txt:296
#: ../../releases/1.4-beta-1.txt:334
msgid "``static`` template tag"
msgstr ""

# 8d4f062f08f546558d73fe8a6e7a63aa
# 9c21abd3fd7243b5b027ae7fe57d6a36
# a895f6fc1eab4f07a96f43eb9499b415
#: ../../releases/1.4.txt:294 ../../releases/1.4-alpha-1.txt:298
#: ../../releases/1.4-beta-1.txt:336
msgid ""
"The :mod:`staticfiles<django.contrib.staticfiles>` contrib app has a new :"
"ttag:`static<staticfiles-static>` template tag to refer to files saved with "
"the :setting:`STATICFILES_STORAGE` storage backend. It uses the storage "
"backend's ``url`` method and therefore supports advanced features such as :"
"ref:`serving files from a cloud service<staticfiles-from-cdn>`."
msgstr ""

# 1a6b997f93884893ae85f69134526690
# 6c5ea88810dc471fbdb0e1064968fd8e
# 3ac8a41521e64221b58e571751480ea5
#: ../../releases/1.4.txt:301 ../../releases/1.4-alpha-1.txt:305
#: ../../releases/1.4-beta-1.txt:343
msgid "``CachedStaticFilesStorage`` storage backend"
msgstr ""

# 6e3c41e23cb042499e2ac29177de805e
#: ../../releases/1.4.txt:303
msgid ""
"The :mod:`staticfiles<django.contrib.staticfiles>` contrib app now has a :"
"class:`~django.contrib.staticfiles.storage.CachedStaticFilesStorage` backend "
"that caches the files it saves (when running the :djadmin:`collectstatic` "
"management command) by appending the MD5 hash of the file's content to the "
"filename. For example, the file ``css/styles.css`` would also be saved as "
"``css/styles.55e7cbb9ba48.css``"
msgstr ""

# 78e233e3ae184a0a9ac2807722fef24b
# 5ef049746654458d92d0b684db6051c8
# c7cd9201207b488184a14c8d04df8055
#: ../../releases/1.4.txt:310 ../../releases/1.4-alpha-1.txt:315
#: ../../releases/1.4-beta-1.txt:353
msgid ""
"See the :class:`~django.contrib.staticfiles.storage."
"CachedStaticFilesStorage` docs for more information."
msgstr ""

# 4261d4f3520c40f88a72288aea255c4e
# 7389e5d764554111a94fe5c4ff7552e1
# 5e2ec68f51bc4ce6b80d72caf6da5169
#: ../../releases/1.4.txt:314 ../../releases/1.4-alpha-1.txt:319
#: ../../releases/1.4-beta-1.txt:357
msgid "Simple clickjacking protection"
msgstr ""

# fc51e5964ea64a9da6d918fb079aa5cd
# 1027d34e5ceb4b0bb0484b36caf7e00b
# 34497d5bfe214e328f3f04374478efdb
#: ../../releases/1.4.txt:316 ../../releases/1.4-alpha-1.txt:321
#: ../../releases/1.4-beta-1.txt:359
msgid ""
"We've added a middleware to provide easy protection against `clickjacking "
"<http://en.wikipedia.org/wiki/Clickjacking>`_ using the ``X-Frame-Options`` "
"header. It's not enabled by default for backwards compatibility reasons, but "
"you'll almost certainly want to :doc:`enable it </ref/clickjacking/>` to "
"help plug that security hole for browsers that support the header."
msgstr ""

# 2a33ee344d8846c6860fdca721719b58
# 263138f4e9cc47cdbf113496765a4925
# f26dd5f8efcb44a49cc3f82092ac8a3e
#: ../../releases/1.4.txt:323 ../../releases/1.4-alpha-1.txt:328
#: ../../releases/1.4-beta-1.txt:366
msgid "CSRF improvements"
msgstr ""

# 4f4cf768050147c89b169567ec8abe23
#: ../../releases/1.4.txt:325
msgid ""
"We've made various improvements to our CSRF features, including the :func:"
"`~django.views.decorators.csrf.ensure_csrf_cookie` decorator, which can help "
"with AJAX-heavy sites; protection for PUT and DELETE requests; and the :"
"setting:`CSRF_COOKIE_SECURE` and :setting:`CSRF_COOKIE_PATH` settings, which "
"can improve the security and usefulness of CSRF protection. See the :doc:"
"`CSRF docs </ref/contrib/csrf>` for more information."
msgstr ""

# fdf5e9522bcd4931ae41fe995e856e98
# e5b987ea0ee74db38cabaec55b83d418
# 00803cd79d524fedba66f184f3babb64
#: ../../releases/1.4.txt:333 ../../releases/1.4-alpha-1.txt:338
#: ../../releases/1.4-beta-1.txt:376
msgid "Error report filtering"
msgstr ""

# 272b4b0c54e94749b161e5b66bb21262
#: ../../releases/1.4.txt:335
msgid ""
"We added two function decorators, :func:`sensitive_variables` and :func:"
"`sensitive_post_parameters`, to allow designating the local variables and "
"POST parameters that may contain sensitive information and should be "
"filtered out of error reports."
msgstr ""

# df60d986c71e4a3084cbb43219872006
#: ../../releases/1.4.txt:340
msgid ""
"All POST parameters are now systematically filtered out of error reports for "
"certain views (``login``, ``password_reset_confirm``, ``password_change`` "
"and ``add_view`` in :mod:`django.contrib.auth.views`, as well as "
"``user_change_password`` in the admin app) to prevent the leaking of "
"sensitive information such as user passwords."
msgstr ""

# d753493d26e748b1b56ebcde8f13ab0a
#: ../../releases/1.4.txt:346
msgid ""
"You can override or customize the default filtering by writing a :ref:"
"`custom filter<custom-error-reports>`. For more information see the docs on :"
"ref:`Filtering error reports<filtering-error-reports>`."
msgstr ""

# 3d22ce1bb8c34cd59dca546195bfc8d2
# a4459faac25d4628bfbcf62f0c2f5764
# e067c81b8044472db641e6c4ca86fe97
#: ../../releases/1.4.txt:351 ../../releases/1.4-alpha-1.txt:356
#: ../../releases/1.4-beta-1.txt:394
msgid "Extended IPv6 support"
msgstr ""

# 5c01d4f56bd74abb803458f6c58ca604
#: ../../releases/1.4.txt:353
msgid ""
"The previously added support for IPv6 addresses when using the runserver "
"management command in Django 1.3 has been extended with a :class:`~django.db."
"models.fields.GenericIPAddressField` model field, a :class:`~django.forms."
"fields.GenericIPAddressField` form field and the validators :data:`~django."
"core.validators.validate_ipv46_address` and :data:`~django.core.validators."
"validate_ipv6_address`"
msgstr ""

# 909583d5e094418a875add79657d03fa
# 1579597fee36454c8a2db2693fe521b7
# 6cd09479fd52468eaad2fe5a439c041b
#: ../../releases/1.4.txt:361 ../../releases/1.4-alpha-1.txt:366
#: ../../releases/1.4-beta-1.txt:404
msgid "Updated default project layout and ``manage.py``"
msgstr ""

# a0b4683d377543a885272c486e9f72c0
# 577b117a1877413993e60570a3588973
# c788c89f40c04369a79a36aedd9ab028
#: ../../releases/1.4.txt:363 ../../releases/1.4-alpha-1.txt:368
#: ../../releases/1.4-beta-1.txt:406
msgid ""
"Django 1.4 ships with an updated default project layout and ``manage.py`` "
"file for the :djadmin:`startproject` management command. These fix some "
"issues with the previous ``manage.py`` handling of Python import paths that "
"caused double imports, trouble moving from development to deployment, and "
"other difficult-to-debug path issues."
msgstr ""

# f7970421d05b4f46a255d8c55d90e55b
#: ../../releases/1.4.txt:369
msgid ""
"The previous ``manage.py`` called functions that are now deprecated, and "
"thus projects upgrading to Django 1.4 should update their ``manage.py``. "
"(The old-style ``manage.py`` will continue to work as before until Django "
"1.6. In 1.5 it will raise ``DeprecationWarning``)."
msgstr ""

# a1643309e5f8487399025bd75f39287e
# 11e4273d47ea4aad8d507f4e206c43d5
# 82c43b618e4a411ab8fd33a9bd75dd00
#: ../../releases/1.4.txt:374 ../../releases/1.4-alpha-1.txt:379
#: ../../releases/1.4-beta-1.txt:417
msgid "The new recommended ``manage.py`` file should look like this::"
msgstr ""

# 0261e6b4ef914048b9fd3476d9af9144
# 1fde988b40084f59acc8a17a9df297df
# d7171d691d8842488d2a4a192833cfb8
#: ../../releases/1.4.txt:386 ../../releases/1.4-alpha-1.txt:391
#: ../../releases/1.4-beta-1.txt:429
msgid ""
"``{{ project_name }}`` should be replaced with the Python package name of "
"the actual project."
msgstr ""

# 06c5daa59f694b44ad71a0ddf439fdcb
#: ../../releases/1.4.txt:389
msgid ""
"If settings, URLconfs and apps within the project are imported or referenced "
"using the project name prefix (e.g. ``myproject.settings``, ``ROOT_URLCONF = "
"\"myproject.urls\"``, etc), the new ``manage.py`` will need to be moved one "
"directory up, so it is outside the project package rather than adjacent to "
"``settings.py`` and ``urls.py``."
msgstr ""

# b28bc5b0cc964b8690f346fa18989c7d
# 5d3fb3c6e4cc4e729a8864b2f2852030
# a30b359d2ae04adbbf1d7f423a6fa70e
#: ../../releases/1.4.txt:395 ../../releases/1.4-alpha-1.txt:400
#: ../../releases/1.4-beta-1.txt:438
msgid "For instance, with the following layout::"
msgstr ""

# 41cf8a5cf0774aeab496ab1480146a07
# 903fa9b99d864bfc84bcd1cd625c394e
# 675026e6eca4410bb1d43c9d7e6fe23c
#: ../../releases/1.4.txt:406 ../../releases/1.4-alpha-1.txt:411
#: ../../releases/1.4-beta-1.txt:449
msgid ""
"You could import ``mysite.settings``, ``mysite.urls``, and ``mysite.myapp``, "
"but not ``settings``, ``urls``, or ``myapp`` as top-level modules."
msgstr ""

# 117208ea1cfe4fdd87cbf376cdc41354
# c4e49c64907444bc9ef449721be336b1
# 4379eb99e36f4b7687032be1a27dd2d1
#: ../../releases/1.4.txt:409 ../../releases/1.4-alpha-1.txt:414
#: ../../releases/1.4-beta-1.txt:452
msgid ""
"Anything imported as a top-level module can be placed adjacent to the new "
"``manage.py``. For instance, to decouple \"myapp\" from the project module "
"and import it as just ``myapp``, place it outside the ``mysite/`` directory::"
msgstr ""

# c6471d069b0a4d00acd1c2d5006a0a1c
# 5e08bfdb3e8c4d6b9214a18f4967011e
# ea6b5a9d89664106af8d87032fb0836e
#: ../../releases/1.4.txt:422 ../../releases/1.4-alpha-1.txt:427
#: ../../releases/1.4-beta-1.txt:465
msgid ""
"If the same code is imported inconsistently (some places with the project "
"prefix, some places without it), the imports will need to be cleaned up when "
"switching to the new ``manage.py``."
msgstr ""

# 6de6638e8aee4a17ab9096af0c5d5364
# 2b4bb731c85e447ab44720a2806e59ad
# 4f0f726bbfbf44ac87febae252ea242e
#: ../../releases/1.4.txt:427 ../../releases/1.4-alpha-1.txt:432
#: ../../releases/1.4-beta-1.txt:470
msgid "Improved WSGI support"
msgstr ""

# 738b23a6a91d4c79babdbac104a4f846
# 0b96d29e03b54e97b4b30eb07cc86593
# e0b71b055030485aaa586ebf13d98e0a
#: ../../releases/1.4.txt:429 ../../releases/1.4-alpha-1.txt:434
#: ../../releases/1.4-beta-1.txt:472
msgid ""
"The :djadmin:`startproject` management command now adds a :file:`wsgi.py` "
"module to the initial project layout, containing a simple WSGI application "
"that can be used for :doc:`deploying with WSGI app servers</howto/deployment/"
"wsgi/index>`."
msgstr ""

# 34e49264703846b68087b43301246866
#: ../../releases/1.4.txt:434
msgid ""
"The :djadmin:`built-in development server<runserver>` now supports using an "
"externally-defined WSGI callable, which makes it possible to run runserver "
"with the same WSGI configuration that is used for deployment. The new :"
"setting:`WSGI_APPLICATION` setting lets you configure which WSGI callable :"
"djadmin:`runserver` uses."
msgstr ""

# b2b6724cc7394150b993203b769898f9
# 5583f3c58b8c4bcabc23249d2eee122a
# 30d752ad11f84ebab56fab0cc2e9a27d
#: ../../releases/1.4.txt:440 ../../releases/1.4-alpha-1.txt:445
#: ../../releases/1.4-beta-1.txt:483
msgid ""
"(The :djadmin:`runfcgi` management command also internally wraps the WSGI "
"callable configured via :setting:`WSGI_APPLICATION`.)"
msgstr ""

# b3bc162934e341d79a0574d40723016a
# 0bd9a4a3d8a34305b800c37d39fb4810
# 2c7ac9eb3d87430d8b89505973ace5c1
#: ../../releases/1.4.txt:444 ../../releases/1.4-alpha-1.txt:449
#: ../../releases/1.4-beta-1.txt:487
msgid "Custom project and app templates"
msgstr ""

# a32b43ba0d1743fabf1a12abdded7882
#: ../../releases/1.4.txt:446
msgid ""
"The :djadmin:`startapp` and :djadmin:`startproject` management commands now "
"have a ``--template`` option for specifying a path or URL to a custom app or "
"project template."
msgstr ""

# 01e85cf6adc9420392a888717f2652f8
#: ../../releases/1.4.txt:450
msgid ""
"For example, Django will use the ``/path/to/my_project_template`` directory "
"when you run the following command::"
msgstr ""

# 91f2e58cab7047c5a8a8685c5880f036
# eeb27e14be21474bb9411fda1d10fa9a
# 0c8707870b904b7f85cc6b66713a3e68
#: ../../releases/1.4.txt:455 ../../releases/1.4-alpha-1.txt:460
#: ../../releases/1.4-beta-1.txt:498
msgid ""
"You can also now provide a destination directory as the second argument to "
"both :djadmin:`startapp` and :djadmin:`startproject`::"
msgstr ""

# 995c9004cea34b498c442820a5ba4778
# 692d127c34cb4128b2b515dbb7b871e7
# 52db6c34591b485fa97fbd08fdf1f571
#: ../../releases/1.4.txt:461 ../../releases/1.4-alpha-1.txt:466
#: ../../releases/1.4-beta-1.txt:504
msgid ""
"For more information, see the :djadmin:`startapp` and :djadmin:"
"`startproject` documentation."
msgstr ""

# 15005eab81194f63ac416590a02ab744
# f7af94836f994d31885a15505927020d
# 04c7d0eab1844d1d93b1135c949cca08
#: ../../releases/1.4.txt:465 ../../releases/1.4-alpha-1.txt:470
#: ../../releases/1.4-beta-1.txt:508
msgid "Support for time zones"
msgstr ""

# 6e7d69fd1ec541b8bcf0834bb6251119
#: ../../releases/1.4.txt:467
msgid ""
"Django 1.4 adds :ref:`support for time zones <time-zones>`. When it's "
"enabled, Django stores date and time information in UTC in the database, "
"uses time-zone-aware datetime objects internally and translates them to the "
"end user's time zone in templates and forms."
msgstr ""

# 7d550a508e42443887453b45c1e43732
# aac3302c68b34972ace93efd2b655d0d
# 8bd39fee005f43e78f4fbe685ce9b466
#: ../../releases/1.4.txt:472 ../../releases/1.4-alpha-1.txt:477
#: ../../releases/1.4-beta-1.txt:515
msgid "Reasons for using this feature include:"
msgstr ""

# 94a67943118d44eabea96537db8773c9
# fc53f45e494f4510bb39df812f4c6d21
# 9a5fbda84b8b44dca7d271fad70bde6c
#: ../../releases/1.4.txt:474 ../../releases/1.4-alpha-1.txt:479
#: ../../releases/1.4-beta-1.txt:517
msgid "Customizing date and time display for users around the world."
msgstr ""

# 9deb94aff4e84f62877e9e694c894de7
# 8b9e9903c5bf4489ba68230fbb0d7ab9
# c7fec5e661c04b4eac0c9cc815ac236d
#: ../../releases/1.4.txt:475 ../../releases/1.4-alpha-1.txt:480
#: ../../releases/1.4-beta-1.txt:518
msgid ""
"Storing datetimes in UTC for database portability and interoperability. "
"(This argument doesn't apply to PostgreSQL, because it already stores "
"timestamps with time zone information in Django 1.3.)"
msgstr ""

# 1cabc5ed548647708706c9cb839f0c09
# 5cca1926119e419b805fde4bbfcf5aa8
# 35a555a71ccf4bdba90907053add222a
#: ../../releases/1.4.txt:478 ../../releases/1.4-alpha-1.txt:483
#: ../../releases/1.4-beta-1.txt:521
msgid "Avoiding data corruption problems around DST transitions."
msgstr ""

# 23adf60534724c12bb3e0c2f4554e639
#: ../../releases/1.4.txt:480
msgid ""
"Time zone support is enabled by default in new projects created with :"
"djadmin:`startproject`. If you want to use this feature in an existing "
"project, read the :ref:`migration guide <time-zones-migration-guide>`. If "
"you encounter problems, there's a helpful :ref:`FAQ <time-zones-faq>`."
msgstr ""

# 7e8f1710412e4dea8e895fa622e5e38c
#: ../../releases/1.4.txt:486
msgid "HTML comparisons in tests"
msgstr ""

# 7593797757414dd9968d396971141ab1
#: ../../releases/1.4.txt:488
msgid ""
"The base classes in :mod:`django.test` now have some helpers to compare HTML "
"without tripping over irrelevant differences in whitespace, argument quoting/"
"ordering and closing of self-closing tags. You can either compare HTML "
"directly with the new :meth:`~django.test.SimpleTestCase.assertHTMLEqual` "
"and :meth:`~django.test.SimpleTestCase.assertHTMLNotEqual` assertions, or "
"use the ``html=True`` flag with :meth:`~django.test.TestCase.assertContains` "
"and :meth:`~django.test.TestCase.assertNotContains` to test whether the "
"client's response contains a given HTML fragment. See the :ref:`assertions "
"documentation <assertions>` for more."
msgstr ""

# 93a4150739a14d9c8f32eb5a392381aa
# 01be29a6caf34e9c8f0e4b41da4f711e
#: ../../releases/1.4.txt:501 ../../releases/1.4-beta-1.txt:528
msgid "Two new date format strings"
msgstr ""

# 944d7baa1a6f44648fb3cf88da5762c0
# 10f4f742a9b84c4daed6f5ba9a5dd76a
#: ../../releases/1.4.txt:503 ../../releases/1.4-beta-1.txt:530
msgid ""
"Two new :tfilter:`date` formats were added for use in template filters, "
"template tags and :ref:`format-localization`:"
msgstr ""

# 68b3e899abdc41268df57279c654242a
# baee715402fd4a8fb3bf4a8ccd7a2d95
#: ../../releases/1.4.txt:506 ../../releases/1.4-beta-1.txt:533
msgid "``e`` -- the name of the timezone of the given datetime object"
msgstr ""

# 490f4d721bf24ababd42c997f93a0234
# 425fda9b00c248598df49fe7b33d1204
#: ../../releases/1.4.txt:507 ../../releases/1.4-beta-1.txt:534
msgid "``o`` -- the ISO 8601 year number"
msgstr ""

# 8c73cb27fd90425da5eaf127ed8e3259
# 8ee12ce6f9b04d6eadc4b22a47fb2a84
#: ../../releases/1.4.txt:509 ../../releases/1.4-beta-1.txt:536
msgid ""
"Please make sure to update your :ref:`custom format files <custom-format-"
"files>` if they contain either ``e`` or ``o`` in a format string. For "
"example a Spanish localization format previously only escaped the ``d`` "
"format character::"
msgstr ""

# 3e500b295667466e9215e89bce02297d
# a128abfac4504a5581677115125cc2e1
#: ../../releases/1.4.txt:516 ../../releases/1.4-beta-1.txt:543
msgid "But now it needs to also escape ``e`` and ``o``::"
msgstr ""

# 5eaa43150c95487c81f38a8bdd958a76
# a53b58ad5f264b6686ff14c886ef565c
#: ../../releases/1.4.txt:520 ../../releases/1.4-beta-1.txt:547
msgid "For more information, see the :tfilter:`date` documentation."
msgstr ""

# fb0f05eb1f8e43c6a760c3ed961f528d
# 1160a36624184668bbde3c8dc0013e3a
# da3d4295f4124780a72abd495f036e13
#: ../../releases/1.4.txt:523 ../../releases/1.4-alpha-1.txt:490
#: ../../releases/1.4-beta-1.txt:550
msgid "Minor features"
msgstr ""

# bdf736d91ec5417a88d2ca716cbe617e
# d784f4a4d75e4a0a81575aa9818627e6
# 00ddecd278b7468a86f759297a656636
#: ../../releases/1.4.txt:525 ../../releases/1.4-alpha-1.txt:492
#: ../../releases/1.4-beta-1.txt:552
msgid "Django 1.4 also includes several smaller improvements worth noting:"
msgstr ""

# 91b8038c5a974cce8b739f27cb901cdd
#: ../../releases/1.4.txt:527
msgid ""
"A more usable stacktrace in the technical 500 page. Frames in the stack "
"trace that reference Django's framework code are dimmed out, while frames in "
"application code are slightly emphasized. This change makes it easier to "
"scan a stacktrace for issues in application code."
msgstr ""

# 6400679aba0742c4a1220228a14afc2a
# 66fb440ad4a1429b8da457a229c577ae
# b17b393c33c34ab780437b09eb665a67
#: ../../releases/1.4.txt:532 ../../releases/1.4-alpha-1.txt:499
#: ../../releases/1.4-beta-1.txt:559
msgid ":doc:`Tablespace support </topics/db/tablespaces>` in PostgreSQL."
msgstr ""

# 1f38cd54b0a840cd83826b04b967c877
# 49b30a133aad482b8832074615cb6144
# b3dda29a16ff44029fb2b806072983c7
#: ../../releases/1.4.txt:534 ../../releases/1.4-alpha-1.txt:501
#: ../../releases/1.4-beta-1.txt:561
msgid "Customizable names for :meth:`~django.template.Library.simple_tag`."
msgstr ""

# 15ff01f9356144cebc2e88b9a0f57f35
# cc42332d80e444f9995b94fbdf1fff00
# b09b2fd0a00442c19dc5398b0d3c9c93
#: ../../releases/1.4.txt:536 ../../releases/1.4-alpha-1.txt:503
#: ../../releases/1.4-beta-1.txt:563
msgid ""
"In the documentation, a helpful :doc:`security overview </topics/security>` "
"page."
msgstr ""

# 2271bf9a69024bf789aface79ecb8676
#: ../../releases/1.4.txt:539
msgid ""
"The :func:`django.contrib.auth.models.check_password` function has been "
"moved to the :mod:`django.contrib.auth.hashers` module. Importing it from "
"the old location will still work, but you should update your imports."
msgstr ""

# 15fbc844cf1748d48e30157e4f6669c4
#: ../../releases/1.4.txt:543
msgid ""
"The :djadmin:`collectstatic` management command now has a ``--clear`` option "
"to delete all files at the destination before copying or linking the static "
"files."
msgstr ""

# 07a8ab254cdd43db94d13c36a9536400
#: ../../releases/1.4.txt:547
msgid ""
"It's now possible to load fixtures containing forward references when using "
"MySQL with the InnoDB database engine."
msgstr ""

# 8d757935b5e74b50a407bf2b260d526f
# eb7c0ebc99254036b35506568097b47b
# 69e729ae5f9c486e8aa80c99b3ec4d4f
#: ../../releases/1.4.txt:550 ../../releases/1.4-alpha-1.txt:517
#: ../../releases/1.4-beta-1.txt:577
msgid ""
"A new 403 response handler has been added as ``'django.views.defaults."
"permission_denied'``. You can set your own handler by setting the value of :"
"data:`django.conf.urls.handler403`. See the documentation about :ref:`the "
"403 (HTTP Forbidden) view<http_forbidden_view>` for more information."
msgstr ""

# 3bfa3dc18db54b8aad9b2f20fa468e3b
#: ../../releases/1.4.txt:556
msgid ""
"The :djadmin:`makemessages` command uses a new and more accurate lexer, "
"`JsLex`_, for extracting translatable strings from JavaScript files."
msgstr ""

# d0123ab74a6540d5b3738cfa02a2b177
# 5a2718b8d8b64c8d843269a71226ba0c
# a66798f653a642dca3d67b45f276f941
#: ../../releases/1.4.txt:561 ../../releases/1.4-alpha-1.txt:523
#: ../../releases/1.4-beta-1.txt:583
msgid ""
"The :ttag:`trans` template tag now takes an optional ``as`` argument to be "
"able to retrieve a translation string without displaying it but setting a "
"template context variable instead."
msgstr ""

# 2c4853ffad3445d3ad5fd47840e817b0
# aeb09b5eb37f42ecbb43b7d4b3378ef0
# 19c99519404548429008af945a70ed07
#: ../../releases/1.4.txt:565 ../../releases/1.4-alpha-1.txt:527
#: ../../releases/1.4-beta-1.txt:587
msgid "The :ttag:`if` template tag now supports ``{% elif %}`` clauses."
msgstr ""

# b9245581408045cab866cfcaa0b9b964
#: ../../releases/1.4.txt:567
msgid ""
"If your Django app is behind a proxy, you might find the new :setting:"
"`SECURE_PROXY_SSL_HEADER` setting useful. It solves the problem of your "
"proxy \"eating\" the fact that a request came in via HTTPS. But only use "
"this setting if you know what you're doing."
msgstr ""

# 3f7a37d2267b48ac91306718562cadb0
#: ../../releases/1.4.txt:572
msgid ""
"A new, plain-text, version of the HTTP 500 status code internal error page "
"served when :setting:`DEBUG` is ``True`` is now sent to the client when "
"Django detects that the request has originated in JavaScript code. (:meth:"
"`~django.http.HttpRequest.is_ajax` is used for this.)"
msgstr ""

# 4bd404e434e944c2b5ac316d4172f578
#: ../../releases/1.4.txt:577
msgid ""
"Like its HTML counterpart, it contains a collection of different pieces of "
"information about the state of the application."
msgstr ""

# 680b23ef9a344787bd6801f30fd8934a
#: ../../releases/1.4.txt:580
msgid ""
"This should make it easier to read when debugging interaction with client-"
"side JavaScript."
msgstr ""

# a4ca6cc1890148aca1c397c330525dd9
# 05e5abf727ab4d18aac5bf40aa8a0b87
# 19498c22148248d391e98f71e6cfe362
#: ../../releases/1.4.txt:583 ../../releases/1.4-alpha-1.txt:540
#: ../../releases/1.4-beta-1.txt:600
msgid ""
"Added the :djadminopt:`--no-location` option to the :djadmin:`makemessages` "
"command."
msgstr ""

# ed5e79ddf06449bd96d5b511572a5046
# 6ef3b83e052f4895b79384c7969e0043
# 9bfbb30121d040fb83731bd31183b2a8
#: ../../releases/1.4.txt:586 ../../releases/1.4-alpha-1.txt:543
#: ../../releases/1.4-beta-1.txt:603
msgid ""
"Changed the ``locmem`` cache backend to use ``pickle.HIGHEST_PROTOCOL`` for "
"better compatibility with the other cache backends."
msgstr ""

# f33782036aaf4c37a5b7a7fd98a7ce12
# b0afb98115e24b0a88cb78f0feb5daf6
# c82489738c5c47a3880dc50e94387890
#: ../../releases/1.4.txt:590 ../../releases/1.4-alpha-1.txt:547
#: ../../releases/1.4-beta-1.txt:607
msgid ""
"Added support in the ORM for generating ``SELECT`` queries containing "
"``DISTINCT ON``."
msgstr ""

# d9533ff963b14daea018fd84c6e7d001
# 57c7f2f456f84c9b8391a02a10921130
# 5f4959b1e61747738479fdb29bbc63cd
#: ../../releases/1.4.txt:593 ../../releases/1.4-alpha-1.txt:550
#: ../../releases/1.4-beta-1.txt:610
msgid ""
"The ``distinct()`` ``QuerySet`` method now accepts an optional list of model "
"field names. If specified, then the ``DISTINCT`` statement is limited to "
"these fields. This is only supported in PostgreSQL."
msgstr ""

# ac8e27ac13c64d4fbb14be499746a214
# 8d260136936849c7b33df7d9810c6cd0
# faaab12f59c340b6b95690ebf48b8de8
#: ../../releases/1.4.txt:597 ../../releases/1.4-alpha-1.txt:554
#: ../../releases/1.4-beta-1.txt:614
msgid ""
"For more details, see the documentation for :meth:`~django.db.models.query."
"QuerySet.distinct`."
msgstr ""

# a84fa9a45bdd42aabbeec1ef85341f65
#: ../../releases/1.4.txt:600
msgid ""
"The admin login page will add a password reset link if you include a URL "
"with the name `'admin_password_reset'` in your urls.py, so plugging in the "
"built-in password reset mechanism and making it available is now much "
"easier. For details, see :ref:`auth_password_reset`."
msgstr ""

# 1686b9f9a3114031812387c90f6ebba4
#: ../../releases/1.4.txt:605
msgid ""
"The MySQL database backend can now make use of the savepoint feature "
"implemented by MySQL version 5.0.3 or newer with the InnoDB storage engine."
msgstr ""

# f5daefd2fbf24ff2b4cb371c6c10faca
#: ../../releases/1.4.txt:608
msgid ""
"It's now possible to pass initial values to the model forms that are part of "
"both model formsets and inline model formsets as returned from factory "
"functions ``modelformset_factory`` and ``inlineformset_factory`` "
"respectively just like with regular formsets. However, initial values only "
"apply to extra forms, i.e. those which are not bound to an existing model "
"instance."
msgstr ""

# 84c83b526dd849be895a174b43b127d4
#: ../../releases/1.4.txt:614
msgid ""
"The sitemaps framework can now handle HTTPS links using the new :attr:"
"`Sitemap.protocol <django.contrib.sitemaps.Sitemap.protocol>` class "
"attribute."
msgstr ""

# 6d6a48a4229a44ad8a724a962a4aac37
#: ../../releases/1.4.txt:618
msgid ""
"A new :class:`django.test.SimpleTestCase` subclass of :class:`unittest."
"TestCase` that is comparatively lighter than :class:`django.test.TestCase` "
"and company. It can be useful in testing scenarios where e.g. no database "
"interaction is needed. See :ref:`testcase_hierarchy_diagram`."
msgstr ""

# d7f989d450484a899035d5559224b1ef
# a97d90c05c184945992e9cbd9abbd021
# 59f8c5f8d6e245449fff5ae1e90e2eb1
#: ../../releases/1.4.txt:625 ../../releases/1.4-alpha-1.txt:558
#: ../../releases/1.4-beta-1.txt:626
msgid "Backwards incompatible changes in 1.4"
msgstr ""

# 0c52c6b743f14eac9529482f58e174d5
#: ../../releases/1.4.txt:628
msgid "SECRET_KEY setting is required"
msgstr ""

# 85a5e3cead4e444f982b6b6f99468b62
#: ../../releases/1.4.txt:630
msgid ""
"Running Django with an empty or known :setting:`SECRET_KEY` disables many of "
"Django's security protections and can lead to remote-code-execution "
"vulnerabilities. No Django site should ever be run without a :setting:"
"`SECRET_KEY`."
msgstr ""

# 01691266da454f4598392fa2d69848eb
#: ../../releases/1.4.txt:635
msgid ""
"In Django 1.4, starting Django with an empty :setting:`SECRET_KEY` will "
"raise a `DeprecationWarning`. In Django 1.5, it will raise an exception and "
"Django will refuse to start. This is slightly accelerated from the usual "
"deprecation path due to the severity of the consequences of running Django "
"with no :setting:`SECRET_KEY`."
msgstr ""

# 05cba0a787bd4567a95dfbfc1b284c7a
# f42ba139ed09464bae1ad73fa56cee2e
# 692a882d7ef54238b80d9b55e9636f3c
#: ../../releases/1.4.txt:642 ../../releases/1.4-alpha-1.txt:561
#: ../../releases/1.4-beta-1.txt:629
msgid "django.contrib.admin"
msgstr ""

# 2b42ca6011894f9dad19b220f8ba623a
# 878350ad659e413e96eb1860e1eab0e8
# c2e29cd31e3f4501be973b47a1d597ef
#: ../../releases/1.4.txt:644 ../../releases/1.4-alpha-1.txt:563
#: ../../releases/1.4-beta-1.txt:631
msgid ""
"The included administration app ``django.contrib.admin`` has for a long time "
"shipped with a default set of static files such as JavaScript, images and "
"stylesheets. Django 1.3 added a new contrib app ``django.contrib."
"staticfiles`` to handle such files in a generic way and defined conventions "
"for static files included in apps."
msgstr ""

# 93e07044c140473a879848c59c77970d
#: ../../releases/1.4.txt:650
msgid ""
"Starting in Django 1.4, the admin's static files also follow this "
"convention, to make the files easier to deploy. In previous versions of "
"Django, it was also common to define an ``ADMIN_MEDIA_PREFIX`` setting to "
"point to the URL where the admin's static files live on a Web server. This "
"setting has now been deprecated and replaced by the more general setting :"
"setting:`STATIC_URL`. Django will now expect to find the admin static files "
"under the URL ``<STATIC_URL>/admin/``."
msgstr ""

# f2d3e7bfa4c54a328cbc0cb00a7096a1
#: ../../releases/1.4.txt:658
msgid ""
"If you've previously used a URL path for ``ADMIN_MEDIA_PREFIX`` (e.g. ``/"
"media/``) simply make sure :setting:`STATIC_URL` and :setting:`STATIC_ROOT` "
"are configured and your Web server serves those files correctly. The "
"development server continues to serve the admin files just like before. Read "
"the :doc:`static files howto </howto/static-files>` for more details."
msgstr ""

# 03898200f6144d27839486db40d30a22
#: ../../releases/1.4.txt:664
msgid ""
"If your ``ADMIN_MEDIA_PREFIX`` is set to an specific domain (e.g. ``http://"
"media.example.com/admin/``), make sure to also set your :setting:"
"`STATIC_URL` setting to the correct URL -- for example, ``http://media."
"example.com/``."
msgstr ""

# 3ac8b4967bd949c3879d94bab4164ed8
#: ../../releases/1.4.txt:671
msgid ""
"If you're implicitly relying on the path of the admin static files within "
"Django's source code, you'll need to update that path. The files were moved "
"from :file:`django/contrib/admin/media/` to :file:`django/contrib/admin/"
"static/admin/`."
msgstr ""

# f9bfdf9ba1a94f1f9bb93451a5349de6
# 2a2799ef404244cfb3b2cc5255c834b3
# 0cfe4f520b4c48f1bdc79e7c34fd9ff7
#: ../../releases/1.4.txt:677 ../../releases/1.4-alpha-1.txt:597
#: ../../releases/1.4-beta-1.txt:665
msgid "Supported browsers for the admin"
msgstr ""

# 5b51559f7a5a44dca3578e372ec2d943
#: ../../releases/1.4.txt:679
msgid ""
"Django hasn't had a clear policy on which browsers are supported by the "
"admin app. Our new policy formalizes existing practices: `YUI's A-grade`_ "
"browsers should provide a fully-functional admin experience, with the "
"notable exception of Internet Explorer 6, which is no longer supported."
msgstr ""

# b73a6a5121f842bdbbbbf9d98205063a
#: ../../releases/1.4.txt:684
msgid ""
"Released over 10 years ago, IE6 imposes many limitations on modern Web "
"development. The practical implications of this policy are that contributors "
"are free to improve the admin without consideration for these limitations."
msgstr ""

# 977b34fee4ec4255a59593c399840240
#: ../../releases/1.4.txt:688
msgid ""
"Obviously, this new policy **has no impact** on sites you develop using "
"Django. It only applies to the Django admin. Feel free to develop apps "
"compatible with any range of browsers."
msgstr ""

# b3c0add65dd841f5b9f4790a5bf51154
# 68d3363f97e343f2951ea76f75d05199
# b861d6c65f6541b3aa258acc242d1ae4
#: ../../releases/1.4.txt:695 ../../releases/1.4-alpha-1.txt:614
#: ../../releases/1.4-beta-1.txt:682
msgid "Removed admin icons"
msgstr ""

# 11565b07906c4be3bdb81271fde235e6
#: ../../releases/1.4.txt:697
msgid ""
"As part of an effort to improve the performance and usability of the admin's "
"change-list sorting interface and :attr:`horizontal <django.contrib.admin."
"ModelAdmin.filter_horizontal>` and :attr:`vertical <django.contrib.admin."
"ModelAdmin.filter_vertical>` \"filter\" widgets, some icon files were "
"removed and grouped into two sprite files."
msgstr ""

# ef0131a26644475d94f4afd5a1da45fb
# ac8d1561a00c4061ac146d7dd8f790a0
# 24eec33b3de24f90a3c6af11a0f4449e
#: ../../releases/1.4.txt:703 ../../releases/1.4-alpha-1.txt:622
#: ../../releases/1.4-beta-1.txt:690
msgid ""
"Specifically: ``selector-add.gif``, ``selector-addall.gif``, ``selector-"
"remove.gif``, ``selector-removeall.gif``, ``selector_stacked-add.gif`` and "
"``selector_stacked-remove.gif`` were combined into ``selector-icons.gif``; "
"and ``arrow-up.gif`` and ``arrow-down.gif`` were combined into ``sorting-"
"icons.gif``."
msgstr ""

# 15d833f1c3d94b6494478be9d7982390
#: ../../releases/1.4.txt:709
msgid ""
"If you used those icons to customize the admin, then you'll need to replace "
"them with your own icons or get the files from a previous release."
msgstr ""

# 1bd1351317cd4c13abf42104a11460f2
# 8518dfe3f22948c2a75585840771c36c
# 5a0d40f5f4b848538c263cf2fc00afeb
#: ../../releases/1.4.txt:713 ../../releases/1.4-alpha-1.txt:632
#: ../../releases/1.4-beta-1.txt:700
msgid "CSS class names in admin forms"
msgstr ""

# f2a3cc855e5c4b4db0d2f5595f476bc7
#: ../../releases/1.4.txt:715
msgid ""
"To avoid conflicts with other common CSS class names (e.g. \"button\"), we "
"added a prefix (\"field-\") to all CSS class names automatically generated "
"from the form field names in the main admin forms, stacked inline forms and "
"tabular inline cells. You'll need to take that prefix into account in your "
"custom style sheets or JavaScript files if you previously used plain field "
"names as selectors for custom styles or JavaScript transformations."
msgstr ""

# 31dfa78b1deb4591b74f8d91b26c8ecc
# 76d3946ac8994da3ad4b83cb9cb3920e
# 5440c95227e34d3a8631dd3aea90aeef
#: ../../releases/1.4.txt:723 ../../releases/1.4-alpha-1.txt:642
#: ../../releases/1.4-beta-1.txt:710
msgid "Compatibility with old signed data"
msgstr ""

# cd534b57fa7c4ab2a9bd7c7be37b8e6e
# 50c1ec1e47ad401ebeae00bb4892d55f
# 2bca480cde254a5584ab7ec6824d50fd
#: ../../releases/1.4.txt:725 ../../releases/1.4-alpha-1.txt:644
#: ../../releases/1.4-beta-1.txt:712
msgid ""
"Django 1.3 changed the cryptographic signing mechanisms used in a number of "
"places in Django. While Django 1.3 kept fallbacks that would accept hashes "
"produced by the previous methods, these fallbacks are removed in Django 1.4."
msgstr ""

# b29f371aa93c412bacc9a4529943ac7d
# 14c71b32d4404d5c9723019153e8416b
# 7c85dc53054f428e98df74e36842152f
#: ../../releases/1.4.txt:729 ../../releases/1.4-alpha-1.txt:648
#: ../../releases/1.4-beta-1.txt:716
msgid ""
"So, if you upgrade to Django 1.4 directly from 1.2 or earlier, you may lose/"
"invalidate certain pieces of data that have been cryptographically signed "
"using an old method. To avoid this, use Django 1.3 first for a period of "
"time to allow the signed data to expire naturally. The affected parts are "
"detailed below, with 1) the consequences of ignoring this advice and 2) the "
"amount of time you need to run Django 1.3 for the data to expire or become "
"irrelevant."
msgstr ""

# 0b458c988e3c4152b6ddb4c9e8f8616b
# bd39ecde0a014b539abfeed0874f3adf
# 66ea8de541c74a64b6881d23b413da17
#: ../../releases/1.4.txt:736 ../../releases/1.4-alpha-1.txt:655
#: ../../releases/1.4-beta-1.txt:723
msgid "``contrib.sessions`` data integrity check"
msgstr ""

# 3c00fa2e1cfd4ab18c6f4d45bc51e800
#: ../../releases/1.4.txt:738
msgid ""
"Consequences: The user will be logged out, and session data will be lost."
msgstr ""

# cccbcd7bf1f44d1e8f666e30821f5355
#: ../../releases/1.4.txt:740
msgid "Time period: Defined by :setting:`SESSION_COOKIE_AGE`."
msgstr ""

# 8f9e61817712432999938f955548a22b
# cbbd292630514463a940f42b61d0cc33
# 13ec3f556fbb437099ee7d1fbab3ea56
#: ../../releases/1.4.txt:742 ../../releases/1.4-alpha-1.txt:661
#: ../../releases/1.4-beta-1.txt:729
msgid "``contrib.auth`` password reset hash"
msgstr ""

# bd5752cb0e1442eeb1ac88f60eaaf5f7
#: ../../releases/1.4.txt:744
msgid ""
"Consequences: Password reset links from before the upgrade will not work."
msgstr ""

# 7c0859f1cd11404f8c5f8e542ebb902e
#: ../../releases/1.4.txt:746
msgid "Time period: Defined by :setting:`PASSWORD_RESET_TIMEOUT_DAYS`."
msgstr ""

# 7f3684fcace040c592801c29a46d3322
#: ../../releases/1.4.txt:748
msgid ""
"Form-related hashes: these have a are much shorter lifetime and are relevant "
"only for the short window where a user might fill in a form generated by the "
"pre-upgrade Django instance and try to submit it to the upgraded Django "
"instance:"
msgstr ""

# e25fb160351d49a88e5c21d01b87b6bb
# 286666011efc45ea8ebc9aa5ee391255
# c1ea81f14e0046d2bb3e96e863149ec3
#: ../../releases/1.4.txt:753 ../../releases/1.4-alpha-1.txt:671
#: ../../releases/1.4-beta-1.txt:739
msgid "``contrib.comments`` form security hash"
msgstr ""

# 7bc54abb4e6b4573b4894ced28a3bfd9
#: ../../releases/1.4.txt:755
msgid ""
"Consequences: The user will see the validation error \"Security hash failed."
"\""
msgstr ""

# a96df37086144615982a2a5f7050bcf0
#: ../../releases/1.4.txt:757
msgid ""
"Time period: The amount of time you expect users to take filling out comment "
"forms."
msgstr ""

# efc9e667cd4e4db794c3292f44a4405c
# 75618cdff4ab45c792bde95e81f72e05
# 06d6e323733f4e0c8c4c808887c59788
#: ../../releases/1.4.txt:760 ../../releases/1.4-alpha-1.txt:678
#: ../../releases/1.4-beta-1.txt:746
msgid "``FormWizard`` security hash"
msgstr ""

# 3d01aa0f2b894862ab658cf8c6931b84
#: ../../releases/1.4.txt:762
msgid ""
"Consequences: The user will see an error about the form having expired and "
"will be sent back to the first page of the wizard, losing the data he has "
"entered so far."
msgstr ""

# 299f2af091f549d2a7eb995fd45324c9
#: ../../releases/1.4.txt:766
msgid ""
"Time period: The amount of time you expect users to take filling out the "
"affected forms."
msgstr ""

# ad4454fcf01b4e5ba8947f32cd635c24
# d536d6fb545643138830be6b9fcb6c4c
# a3d17e471a3a42dca1a187a7935c9d92
#: ../../releases/1.4.txt:769 ../../releases/1.4-alpha-1.txt:687
#: ../../releases/1.4-beta-1.txt:755
msgid "CSRF check"
msgstr ""

# ebab61dd4ee44266b76feb634254c5b8
#: ../../releases/1.4.txt:771
msgid ""
"Note: This is actually a Django 1.1 fallback, not Django 1.2, and it applies "
"only if you're upgrading from 1.1."
msgstr ""

# b33f7e5b194e44c1a4a91f38116db657
#: ../../releases/1.4.txt:774
msgid ""
"Consequences: The user will see a 403 error with any CSRF-protected POST "
"form."
msgstr ""

# 3ba115d117a741f0b2fd5a94ad8de34d
#: ../../releases/1.4.txt:777
msgid ""
"Time period: The amount of time you expect user to take filling out such "
"forms."
msgstr ""

# 4c7a17fce83d4263bcc4467ad2bb9c74
# 3aa56f0aaf2047229f51d24c5b4026d4
# 7aeef1f606244738934c50fb77453d56
#: ../../releases/1.4.txt:782 ../../releases/1.4-alpha-1.txt:699
#: ../../releases/1.4-beta-1.txt:767
msgid "django.contrib.flatpages"
msgstr ""

# f569c5ada42e4c26a2da69cca3fdf234
#: ../../releases/1.4.txt:784
msgid ""
"Starting in 1.4, the :class:`~django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware` only adds a trailing slash and redirects if the "
"resulting URL refers to an existing flatpage. For example, requesting ``/"
"notaflatpageoravalidurl`` in a previous version would redirect to ``/"
"notaflatpageoravalidurl/``, which would subsequently raise a 404. Requesting "
"``/notaflatpageoravalidurl`` now will immediately raise a 404."
msgstr ""

# 91fa75edf3d74176b1fbcc8693033bdf
#: ../../releases/1.4.txt:792
msgid ""
"Also, redirects returned by flatpages are now permanent (with 301 status "
"code), to match the behavior of :class:`~django.middleware.common."
"CommonMiddleware`."
msgstr ""

# 3f2743f56f044e1d9a24511d600c8474
# d14ab21f032d484b93d776b94a2583bf
# c900576634214d41965a25481e075e7d
#: ../../releases/1.4.txt:796 ../../releases/1.4-alpha-1.txt:712
#: ../../releases/1.4-beta-1.txt:780
msgid ""
"Serialization of :class:`~datetime.datetime` and :class:`~datetime.time`"
msgstr ""

# f56a9fbd77d447dd87ea497e7410dd1e
#: ../../releases/1.4.txt:798
msgid ""
"As a consequence of time-zone support, and according to the ECMA-262 "
"specification, we made changes to the JSON serializer:"
msgstr ""

# 5c12aeee78fc4227b43c46909fbf69b7
# 8ba9e5dc75424b7f969b8bf7bc8d7c3c
# 67ce2dd734ca45248e0f62b4353406b9
#: ../../releases/1.4.txt:801 ../../releases/1.4-alpha-1.txt:717
#: ../../releases/1.4-beta-1.txt:785
msgid ""
"It includes the time zone for aware datetime objects. It raises an exception "
"for aware time objects."
msgstr ""

# 13866d667ef547eaa9b6b6ac1dec5406
# b6679e24918743a699d609921d7ea38e
# f664e280dcd845efb7f4d666c3a688db
#: ../../releases/1.4.txt:803 ../../releases/1.4-alpha-1.txt:719
#: ../../releases/1.4-beta-1.txt:787
msgid ""
"It includes milliseconds for datetime and time objects. There is still some "
"precision loss, because Python stores microseconds (6 digits) and JSON only "
"supports milliseconds (3 digits). However, it's better than discarding "
"microseconds entirely."
msgstr ""

# 32a92bbb450247ba8eb41a5b625c2372
#: ../../releases/1.4.txt:808
msgid ""
"We changed the XML serializer to use the ISO8601 format for datetimes. The "
"letter ``T`` is used to separate the date part from the time part, instead "
"of a space. Time zone information is included in the ``[+-]HH:MM`` format."
msgstr ""

# 49d00d5d9ff44a5d8f0cef8190f133fd
#: ../../releases/1.4.txt:812
msgid ""
"Though the serializers now use these new formats when creating fixtures, "
"they can still load fixtures that use the old format."
msgstr ""

# 60d6dfe740a6467ab7ccd114b13448fa
# 04a3055353334f5eba238d2fe699b183
# ab55b93a24074a8494e37255adaea7bd
#: ../../releases/1.4.txt:816 ../../releases/1.4-alpha-1.txt:732
#: ../../releases/1.4-beta-1.txt:800
msgid "``supports_timezone`` changed to ``False`` for SQLite"
msgstr ""

# ac50a5c9d8a54454bbff6d7ea5853808
# 1e82ccfd053d489eab511773d11ccb7e
# 70199b23a482425195e245aa9d47722a
#: ../../releases/1.4.txt:818 ../../releases/1.4-alpha-1.txt:734
#: ../../releases/1.4-beta-1.txt:802
msgid ""
"The database feature ``supports_timezone`` used to be ``True`` for SQLite. "
"Indeed, if you saved an aware datetime object, SQLite stored a string that "
"included an UTC offset. However, this offset was ignored when loading the "
"value back from the database, which could corrupt the data."
msgstr ""

# efd78f9f388547bb9fcc71fc95b8a542
#: ../../releases/1.4.txt:823
msgid ""
"In the context of time-zone support, this flag was changed to ``False``, and "
"datetimes are now stored without time-zone information in SQLite. When :"
"setting:`USE_TZ` is ``False``, if you attempt to save an aware datetime "
"object, Django raises an exception."
msgstr ""

# 5280ca7a8e7e4880a795b23f1f62364b
#: ../../releases/1.4.txt:829
msgid "``MySQLdb``-specific exceptions"
msgstr ""

# b8ad1632159c48ef9a81a49c7da4511e
#: ../../releases/1.4.txt:831
msgid ""
"The MySQL backend historically has raised :class:`MySQLdb.OperationalError` "
"when a query triggered an exception. We've fixed this bug, and we now raise :"
"class:`django.db.utils.DatabaseError` instead. If you were testing for :"
"class:`MySQLdb.OperationalError`, you'll need to update your ``except`` "
"clauses."
msgstr ""

# 48280fc4969c44debf49ed12511282d7
# 1e0c9003c3a246118a0053f59f237e32
# 200ab955216e438da4de82e5b7e6c4e3
#: ../../releases/1.4.txt:838 ../../releases/1.4-alpha-1.txt:745
#: ../../releases/1.4-beta-1.txt:813
msgid "Database connection's thread-locality"
msgstr ""

# 30eeacf7d0b74279a8fd8b68c9279e6b
# fa9f503cd033433f9733ccd30e2759d7
# 49508e2036db4c62b5f45373f31a326c
#: ../../releases/1.4.txt:840 ../../releases/1.4-alpha-1.txt:747
#: ../../releases/1.4-beta-1.txt:815
msgid ""
"``DatabaseWrapper`` objects (i.e. the connection objects referenced by "
"``django.db.connection`` and ``django.db.connections[\"some_alias\"]``) used "
"to be thread-local. They are now global objects in order to be potentially "
"shared between multiple threads. While the individual connection objects are "
"now global, the ``django.db.connections`` dictionary referencing those "
"objects is still thread-local. Therefore if you just use the ORM or "
"``DatabaseWrapper.cursor()`` then the behavior is still the same as before. "
"Note, however, that ``django.db.connection`` does not directly reference the "
"default ``DatabaseWrapper`` object anymore and is now a proxy to access that "
"object's attributes. If you need to access the actual ``DatabaseWrapper`` "
"object, use ``django.db.connections[DEFAULT_DB_ALIAS]`` instead."
msgstr ""

# 4ca80f53c93d49e0914a837c0d65a721
# f3b3278ec811407ebfe84b1b0644539b
# 563243c945c44d559b2bcaac6f76e6bc
#: ../../releases/1.4.txt:852 ../../releases/1.4-alpha-1.txt:759
#: ../../releases/1.4-beta-1.txt:827
msgid ""
"As part of this change, all underlying SQLite connections are now enabled "
"for potential thread-sharing (by passing the ``check_same_thread=False`` "
"attribute to pysqlite). ``DatabaseWrapper`` however preserves the previous "
"behavior by disabling thread-sharing by default, so this does not affect any "
"existing code that purely relies on the ORM or on ``DatabaseWrapper.cursor()"
"``."
msgstr ""

# 0335b04fb2f24bc89b0e996e9d20f601
#: ../../releases/1.4.txt:858
msgid ""
"Finally, while it's now possible to pass connections between threads, Django "
"doesn't make any effort to synchronize access to the underlying backend. "
"Concurrency behavior is defined by the underlying backend implementation. "
"Check their documentation for details."
msgstr ""

# 4565e952cb2940aa9883f5091c9f20ae
# fb5a54d727ec4bc286c937ac15121d49
# 834f6003b546494eaad50c5b30a9d7de
#: ../../releases/1.4.txt:864 ../../releases/1.4-alpha-1.txt:771
#: ../../releases/1.4-beta-1.txt:839
msgid "`COMMENTS_BANNED_USERS_GROUP` setting"
msgstr ""

# 9366bc01fbd94b2e8f428018e9ba8268
# 7fcf42adc4cd437cafd81fe10b2708fa
# 6111bd913520445c84a5591e79b120a0
#: ../../releases/1.4.txt:866 ../../releases/1.4-alpha-1.txt:773
#: ../../releases/1.4-beta-1.txt:841
msgid ""
"Django's :doc:`comments app </ref/contrib/comments/index>` has historically "
"supported excluding the comments of a special user group, but we've never "
"documented the feature properly and didn't enforce the exclusion in other "
"parts of the app such as the template tags. To fix this problem, we removed "
"the code from the feed class."
msgstr ""

# 54f8e3c9b8ab40aa907dcc18d62d6481
#: ../../releases/1.4.txt:872
msgid ""
"If you rely on the feature and want to restore the old behavior, use a "
"custom comment model manager to exclude the user group, like this::"
msgstr ""

# 26ce84d5f3f04037ac1badb1051b97b5
#: ../../releases/1.4.txt:887
msgid ""
"Save this model manager in your custom comment app (e.g., in "
"``my_comments_app/managers.py``) and add it your :ref:`custom comment app "
"model <custom-comment-app-api>`::"
msgstr ""

# 3488b5946f4d49c592d406bd0e664f4e
# 35fcbeee25b14829ac0fee0c5ac4e5c2
# 5e4c2cb75d9042d586e418db03180fbf
#: ../../releases/1.4.txt:901 ../../releases/1.4-alpha-1.txt:808
#: ../../releases/1.4-beta-1.txt:876
msgid ""
"For more details, see the documentation about :doc:`customizing the comments "
"framework </ref/contrib/comments/custom>`."
msgstr ""

# 10c3f9ce103c4c9ca8ef6657b765ca45
# 2ed074167ec0449c9c648bcd315edf9c
# ac98e164888c4f9f90b1ce28978f8b5f
#: ../../releases/1.4.txt:905 ../../releases/1.4-alpha-1.txt:812
#: ../../releases/1.4-beta-1.txt:880
msgid "`IGNORABLE_404_STARTS` and `IGNORABLE_404_ENDS` settings"
msgstr ""

# 5667265841db4069b96b3e4d352ef62c
# 1d6449dc2c4b4578bb045be4976731b2
# 0b3c284739a44244bf45280d2eedb52c
#: ../../releases/1.4.txt:907 ../../releases/1.4-alpha-1.txt:814
#: ../../releases/1.4-beta-1.txt:882
msgid ""
"Until Django 1.3, it was possible to exclude some URLs from Django's :doc:"
"`404 error reporting</howto/error-reporting>` by adding prefixes to :setting:"
"`IGNORABLE_404_STARTS` and suffixes to :setting:`IGNORABLE_404_ENDS`."
msgstr ""

# b07199d2f8aa42af849f1ae96754a20a
# cbe5684a89be4f20aeee0df627ae49dc
# e9c7c1c0ffb4409d8ed2528eed176e3d
#: ../../releases/1.4.txt:911 ../../releases/1.4-alpha-1.txt:818
#: ../../releases/1.4-beta-1.txt:886
msgid ""
"In Django 1.4, these two settings are superseded by :setting:"
"`IGNORABLE_404_URLS`, which is a list of compiled regular expressions. "
"Django won't send an email for 404 errors on URLs that match any of them."
msgstr ""

# dde2bdbfb27141208fe329cfc1eb1f4e
# 4bb5baa4dab54415a57cebd4ba2fd351
# 7aa290f95a4242a689d50d21d46b0198
#: ../../releases/1.4.txt:915 ../../releases/1.4-alpha-1.txt:822
#: ../../releases/1.4-beta-1.txt:890
msgid ""
"Furthermore, the previous settings had some rather arbitrary default values::"
msgstr ""

# 0946e3b24d8b45e8bca8a3b8aaf8af45
# 1580ab36e271416bb735a4777e3ea7d5
# 37ec528c80b44a8985be946516e2a6da
#: ../../releases/1.4.txt:921 ../../releases/1.4-alpha-1.txt:828
#: ../../releases/1.4-beta-1.txt:896
msgid ""
"It's not Django's role to decide if your website has a legacy ``/cgi-bin/`` "
"section or a ``favicon.ico``. As a consequence, the default values of :"
"setting:`IGNORABLE_404_URLS`, :setting:`IGNORABLE_404_STARTS` and :setting:"
"`IGNORABLE_404_ENDS` are all now empty."
msgstr ""

# 99db0ecb11fa49ae924c9c944b20f61b
# 7add810aae6e4285b6e3df94c499f423
# 87f557a4196948e58a76dade8e59def0
#: ../../releases/1.4.txt:926 ../../releases/1.4-alpha-1.txt:833
#: ../../releases/1.4-beta-1.txt:901
msgid ""
"If you have customized :setting:`IGNORABLE_404_STARTS` or :setting:"
"`IGNORABLE_404_ENDS`, or if you want to keep the old default value, you "
"should add the following lines in your settings file::"
msgstr ""

# 1fb8114061db4633a41805a1d5137bca
#: ../../releases/1.4.txt:938
msgid ""
"Don't forget to escape characters that have a special meaning in a regular "
"expression, such as periods."
msgstr ""

# afacdd3454864331b5c163b3cec9009f
# 6742ab5479034e6094d95af54befaf59
# 0ebb7868ad094d56a636d45e4f40bab0
#: ../../releases/1.4.txt:942 ../../releases/1.4-alpha-1.txt:849
#: ../../releases/1.4-beta-1.txt:917
msgid "CSRF protection extended to PUT and DELETE"
msgstr ""

# 79519f72fe844a9290ae8b13fb33b8d0
#: ../../releases/1.4.txt:944
msgid ""
"Previously, Django's :doc:`CSRF protection </ref/contrib/csrf/>` provided "
"protection only against POST requests. Since use of PUT and DELETE methods "
"in AJAX applications is becoming more common, we now protect all methods not "
"defined as safe by :rfc:`2616` -- i.e., we exempt GET, HEAD, OPTIONS and "
"TRACE, and we enforce protection on everything else."
msgstr ""

# ad1466ff7250408db4ea3ad5c0baa16d
#: ../../releases/1.4.txt:950
msgid ""
"If you're using PUT or DELETE methods in AJAX applications, please see the :"
"ref:`instructions about using AJAX and CSRF <csrf-ajax>`."
msgstr ""

# 76bc009dc1b748f99709d75810170ccb
# 727e295ac9604aef89859f77e17404d6
# 7c84c6e63c7545d8a870c844575771f4
#: ../../releases/1.4.txt:954 ../../releases/1.4-alpha-1.txt:861
#: ../../releases/1.4-beta-1.txt:929
msgid "``django.core.template_loaders``"
msgstr ""

# 368accf6e41e40b0918763bef7d4092b
#: ../../releases/1.4.txt:956
msgid ""
"This was an alias to ``django.template.loader`` since 2005, and we've "
"removed it without emitting a warning due to the length of the deprecation. "
"If your code still referenced this, please use ``django.template.loader`` "
"instead."
msgstr ""

# e4865290d0c545e5a7d682650a84d414
# ac6756e47ec740dfb4d3562fe67fe8d5
# f75dedcfd29d4c53ab502b3e4f17dc67
#: ../../releases/1.4.txt:961 ../../releases/1.4-alpha-1.txt:868
#: ../../releases/1.4-beta-1.txt:936
msgid "``django.db.models.fields.URLField.verify_exists``"
msgstr ""

# 160a6189dee74a6f8f85c7d0775d72d3
# 7718bc66b99942dd814f7c4aa73c9175
# af9e7c068de241c8bc03268955009e88
#: ../../releases/1.4.txt:963 ../../releases/1.4-alpha-1.txt:870
#: ../../releases/1.4-beta-1.txt:938
msgid ""
"This functionality has been removed due to intractable performance and "
"security issues. Any existing usage of ``verify_exists`` should be removed."
msgstr ""

# dd2e971f076846a09384fd5ef5b9f75f
# 90413b59049e4193a10a15d2fa597f15
# 61c75e73d04b4b0b92159a5ab9f77f35
#: ../../releases/1.4.txt:968 ../../releases/1.4-alpha-1.txt:875
#: ../../releases/1.4-beta-1.txt:943
msgid "``django.core.files.storage.Storage.open``"
msgstr ""

# e3289554c6934f77aba419be4e89ec60
#: ../../releases/1.4.txt:970
msgid ""
"The ``open`` method of the base Storage class used to take an obscure "
"parameter ``mixin`` that allowed you to dynamically change the base classes "
"of the returned file object. This has been removed. In the rare case you "
"relied on the `mixin` parameter, you can easily achieve the same by "
"overriding the `open` method, like this::"
msgstr ""

# ac0bbce85acd4494b7750f9aa19f78a5
# a3977d28a3314327a5d3f3495f6af49c
# 332d205a840e446e94cfeaecfb50798b
#: ../../releases/1.4.txt:994 ../../releases/1.4-alpha-1.txt:901
#: ../../releases/1.4-beta-1.txt:969
msgid "YAML deserializer now uses ``yaml.safe_load``"
msgstr ""

# 8f38c11ba1e343a4b0d15242f7af3dde
#: ../../releases/1.4.txt:996
msgid ""
"``yaml.load`` is able to construct any Python object, which may trigger "
"arbitrary code execution if you process a YAML document that comes from an "
"untrusted source. This feature isn't necessary for Django's YAML "
"deserializer, whose primary use is to load fixtures consisting of simple "
"objects. Even though fixtures are trusted data, the YAML deserializer now "
"uses ``yaml.safe_load`` for additional security."
msgstr ""

# 3a1925c0921c45fabc5fd27def93037d
# b2d783bf7faa4d6185b9be16cb469b23
# 4427925034cc41d3857e288286467de7
#: ../../releases/1.4.txt:1004 ../../releases/1.4-alpha-1.txt:1044
#: ../../releases/1.4-beta-1.txt:1112
msgid "Session cookies now have the ``httponly`` flag by default"
msgstr ""

# 3a7d53a2ca0d48e5bbcba4f80946828a
#: ../../releases/1.4.txt:1006
msgid ""
"Session cookies now include the ``httponly`` attribute by default to help "
"reduce the impact of potential XSS attacks. As a consequence of this change, "
"session cookie data, including sessionid, is no longer accessible from "
"JavaScript in many browsers. For strict backwards compatibility, use "
"``SESSION_COOKIE_HTTPONLY = False`` in your settings file."
msgstr ""

# 31636cf316184e3080901563b048fd69
#: ../../releases/1.4.txt:1014
msgid "The :tfilter:`urlize` filter no longer escapes every URL"
msgstr ""

# 975bfe7e91094f5fb0fc483268d7ba85
#: ../../releases/1.4.txt:1016
msgid ""
"When a URL contains a ``%xx`` sequence, where ``xx`` are two hexadecimal "
"digits, :tfilter:`urlize` now assumes that the URL is already escaped and "
"doesn't apply URL escaping again. This is wrong for URLs whose unquoted form "
"contains a ``%xx`` sequence, but such URLs are very unlikely to happen in "
"the wild, because they would confuse browsers too."
msgstr ""

# 392b477c9e34401882bc4041dbf48329
#: ../../releases/1.4.txt:1023
msgid "``assertTemplateUsed`` and ``assertTemplateNotUsed`` as context manager"
msgstr ""

# 42bb8fe8d8e44743875d6ca87e22839d
#: ../../releases/1.4.txt:1025
msgid ""
"It's now possible to check whether a template was used within a block of "
"code with :meth:`~django.test.test.TestCase.assertTemplateUsed` and :meth:"
"`~django.test.test.TestCase.assertTemplateNotUsed`. And they can be used as "
"a context manager::"
msgstr ""

# 171282cb30974aa7b7a0d42e233f96e0
#: ../../releases/1.4.txt:1035
msgid "See the :ref:`assertion documentation<assertions>` for more."
msgstr ""

# 8e0993f8967d4949b6b5ade9cba4a660
#: ../../releases/1.4.txt:1038
msgid "Database connections after running the test suite"
msgstr ""

# ac3ab1f4d13b417dba072476a3cc394a
#: ../../releases/1.4.txt:1040
msgid ""
"The default test runner no longer restores the database connections after "
"tests' execution. This prevents the production database from being exposed "
"to potential threads that would still be running and attempting to create "
"new connections."
msgstr ""

# afe091f6bc584ad099d2176355e98587
#: ../../releases/1.4.txt:1045
msgid ""
"If your code relied on connections to the production database being created "
"after tests' execution, then you can restore the previous behavior by "
"subclassing ``DjangoTestRunner`` and overriding its ``teardown_databases()`` "
"method."
msgstr ""

# 6c5339b9707f4331ac0d17554183b0bc
#: ../../releases/1.4.txt:1051
msgid "Output of :djadmin:`manage.py help <help>`"
msgstr ""

# ec3015ed55f2409295cfe950a043d9a7
#: ../../releases/1.4.txt:1053
msgid ""
":djadmin:`manage.py help <help>` now groups available commands by "
"application. If you depended on the output of this command -- if you parsed "
"it, for example -- then you'll need to update your code. To get a list of "
"all available management commands in a script, use :djadmin:`manage.py help "
"--commands <help>` instead."
msgstr ""

# dede8292ca31435d9e93715261a4a8ba
#: ../../releases/1.4.txt:1060
msgid "``extends`` template tag"
msgstr ""

# cef4055d778d453b9f7f05093b2aa154
#: ../../releases/1.4.txt:1062
msgid ""
"Previously, the :ttag:`extends` tag used a buggy method of parsing "
"arguments, which could lead to it erroneously considering an argument as a "
"string literal when it wasn't. It now uses ``parser.compile_filter``, like "
"other tags."
msgstr ""

# baca98c6aff84912843d18cf965cd4df
#: ../../releases/1.4.txt:1066
msgid ""
"The internals of the tag aren't part of the official stable API, but in the "
"interests of full disclosure, the ``ExtendsNode.__init__`` definition has "
"changed, which may break any custom tags that use this class."
msgstr ""

# 7852e961773d492c90f8b52bba6f2af2
# 6f473639d7cf4f42b1ab44b08943568a
# 38246950d917482ba39d3f042930abc8
#: ../../releases/1.4.txt:1071 ../../releases/1.4-alpha-1.txt:911
#: ../../releases/1.4-beta-1.txt:979
msgid "Features deprecated in 1.4"
msgstr ""

# ff057d43074a430bb0a684099f5f66e9
# 82e704ff575e4feeaf7aa1241455fc4e
# fc9e0ba49e7f4cde99a3ccdedd1ff937
#: ../../releases/1.4.txt:1074 ../../releases/1.4-alpha-1.txt:914
#: ../../releases/1.4-beta-1.txt:982
msgid "Old styles of calling ``cache_page`` decorator"
msgstr ""

# cfc3c9f39b6f43c582cc72198a5460b0
#: ../../releases/1.4.txt:1076
msgid ""
"Some legacy ways of calling :func:`~django.views.decorators.cache."
"cache_page` have been deprecated. Please see the documentation for the "
"correct way to use this decorator."
msgstr ""

# d054ac3e2b6e4c56a2aa0e782c5dcc78
# 348fdc2c3f0046c2ac240da85f3d74ba
# 82be46ad6a714e0897ef671840fa3f3a
#: ../../releases/1.4.txt:1081 ../../releases/1.4-alpha-1.txt:921
#: ../../releases/1.4-beta-1.txt:989
msgid "Support for PostgreSQL versions older than 8.2"
msgstr ""

# 0fc9bdc4a96e44a7ab14d89e0acd2e99
#: ../../releases/1.4.txt:1083
msgid ""
"Django 1.3 dropped support for PostgreSQL versions older than 8.0, and we "
"suggested using a more recent version because of performance improvements "
"and, more importantly, the end of upstream support periods for 8.0 and 8.1 "
"was near (November 2010)."
msgstr ""

# b33a465ccdc3463c8b9acbc37ef3657a
# 873670f837d642de99c265f28857db22
# cc2f48cae8de449d9b5380bd8916779d
#: ../../releases/1.4.txt:1088 ../../releases/1.4-alpha-1.txt:928
#: ../../releases/1.4-beta-1.txt:996
msgid ""
"Django 1.4 takes that policy further and sets 8.2 as the minimum PostgreSQL "
"version it officially supports."
msgstr ""

# 21ab448c76f543cc87df78051acc114d
# c0b2fdd75cf54ea99ade64d6fd1d3f54
# cf6f978422b64cee8bc9f430ea673218
#: ../../releases/1.4.txt:1092 ../../releases/1.4-alpha-1.txt:932
#: ../../releases/1.4-beta-1.txt:1000
msgid "Request exceptions are now always logged"
msgstr ""

# d4aa1af236944c6b989c3998c815566f
#: ../../releases/1.4.txt:1094
msgid ""
"When we added :doc:`logging support </topics/logging/>` in Django in 1.3, "
"the admin error email support was moved into the :class:`django.utils.log."
"AdminEmailHandler`, attached to the ``'django.request'`` logger. In order to "
"maintain the established behavior of error emails, the ``'django.request'`` "
"logger was called only when :setting:`DEBUG` was ``False``."
msgstr ""

# c390bb2fbf5a45fdadca3befa5f42544
# 43728cb1e53147469d5288469d289404
# cf046a7906a546fba45124df8a5731cf
#: ../../releases/1.4.txt:1101 ../../releases/1.4-alpha-1.txt:941
#: ../../releases/1.4-beta-1.txt:1009
msgid ""
"To increase the flexibility of error logging for requests, the ``'django."
"request'`` logger is now called regardless of the value of :setting:`DEBUG`, "
"and the default settings file for new projects now includes a separate "
"filter attached to :class:`django.utils.log.AdminEmailHandler` to prevent "
"admin error emails in ``DEBUG`` mode::"
msgstr ""

# a9f15d34353f458786ab8b856dce8544
#: ../../releases/1.4.txt:1120
msgid ""
"If your project was created prior to this change, your :setting:`LOGGING` "
"setting will not include this new filter. In order to maintain backwards-"
"compatibility, Django will detect that your ``'mail_admins'`` handler "
"configuration includes no ``'filters'`` section and will automatically add "
"this filter for you and issue a pending-deprecation warning. This will "
"become a deprecation warning in Django 1.5, and in Django 1.6 the backwards-"
"compatibility shim will be removed entirely."
msgstr ""

# 8199b66433b24a238adb385fb8c57ebb
# c63e8e42eeb746259fdca758c44cd0cf
# a73850527ea9431a88fe6170372ec14e
#: ../../releases/1.4.txt:1128 ../../releases/1.4-alpha-1.txt:968
#: ../../releases/1.4-beta-1.txt:1036
msgid ""
"The existence of any ``'filters'`` key under the ``'mail_admins'`` handler "
"will disable this backward-compatibility shim and deprecation warning."
msgstr ""

# 2f90fb1c015547b0b874e582d78971c8
# 01096744c030495bbf4c8722b9a08605
# 49663fc1f63d41649d0b26bbee8877f0
#: ../../releases/1.4.txt:1132 ../../releases/1.4-alpha-1.txt:972
#: ../../releases/1.4-beta-1.txt:1040
msgid "``django.conf.urls.defaults``"
msgstr ""

# 3f0af685caa142e5af1314b74fe75f32
#: ../../releases/1.4.txt:1134
msgid ""
"Until Django 1.3, the functions :func:`~django.conf.urls.include`, :func:"
"`~django.conf.urls.patterns` and :func:`~django.conf.urls.url` plus :data:"
"`~django.conf.urls.handler404`, :data:`~django.conf.urls.handler500` were "
"located in a ``django.conf.urls.defaults`` module."
msgstr ""

# fcb948a36b18449fa6bcf9fde46919af
#: ../../releases/1.4.txt:1139
msgid "In Django 1.4, they live in :mod:`django.conf.urls`."
msgstr ""

# 367055f9ede443c58fc6bcbc68a2e73e
# d6de069d37c94cd8bd12f22426335527
# 94f3b2444b4c486dadd898cf9aea44a0
#: ../../releases/1.4.txt:1142 ../../releases/1.4-alpha-1.txt:982
#: ../../releases/1.4-beta-1.txt:1050
msgid "``django.contrib.databrowse``"
msgstr ""

# b4d660cf0e9247a09bef874ba6f9af40
# 773ffdee4049426e8a3c7acf28002ec4
# 5b6362b9353247d289fcd403d3132034
#: ../../releases/1.4.txt:1144 ../../releases/1.4-alpha-1.txt:984
#: ../../releases/1.4-beta-1.txt:1052
msgid ""
"Databrowse has not seen active development for some time, and this does not "
"show any sign of changing. There had been a suggestion for a `GSOC project`_ "
"to integrate the functionality of databrowse into the admin, but no progress "
"was made. While Databrowse has been deprecated, an enhancement of ``django."
"contrib.admin`` providing a similar feature set is still possible."
msgstr ""

# 66bfd556016946138c000c2fc3314a66
#: ../../releases/1.4.txt:1152
msgid ""
"The code that powers Databrowse is licensed under the same terms as Django "
"itself, so it's available to be adopted by an individual or group as a third-"
"party project."
msgstr ""

# 0c53d87c17cc41e28a55a69ba554dff8
# 54497ce3ad72444ea0d1f43fd955c44e
# 446bdea31c80447c88b8e231b7058149
#: ../../releases/1.4.txt:1157 ../../releases/1.4-alpha-1.txt:997
#: ../../releases/1.4-beta-1.txt:1065
msgid "``django.core.management.setup_environ``"
msgstr ""

# 4f620d287abd4d418430ab9cd9a4d3ac
# 795f6f75af094b06accc8e2dd60440d8
# 424327e45ac8446eac6a4d4e5724783b
#: ../../releases/1.4.txt:1159 ../../releases/1.4-alpha-1.txt:999
#: ../../releases/1.4-beta-1.txt:1067
msgid ""
"This function temporarily modified ``sys.path`` in order to make the parent "
"\"project\" directory importable under the old flat :djadmin:`startproject` "
"layout. This function is now deprecated, as its path workarounds are no "
"longer needed with the new ``manage.py`` and default project layout."
msgstr ""

# dc7e06041f524461bf12f03a810a6fd0
#: ../../releases/1.4.txt:1164
msgid ""
"This function was never documented or part of the public API, but it was "
"widely recommended for use in setting up a \"Django environment\" for a user "
"script. These uses should be replaced by setting the "
"``DJANGO_SETTINGS_MODULE`` environment variable or using :func:`django.conf."
"settings.configure`."
msgstr ""

# 23cb9c1f8e184872bcac9bbe7784035a
# 8d9b6a3a094c464e891b05789ac390f2
# 7e3981c7efc54de79e0226244c3c2cf5
#: ../../releases/1.4.txt:1170 ../../releases/1.4-alpha-1.txt:1010
#: ../../releases/1.4-beta-1.txt:1078
msgid "``django.core.management.execute_manager``"
msgstr ""

# cfa141e7b83147bf95dba4c34bf19a0b
# 3d63859c915f4757a83c09ab6bda05b9
# 6b02c4466a664d8da09ae5bc9db53f86
#: ../../releases/1.4.txt:1172 ../../releases/1.4-alpha-1.txt:1012
#: ../../releases/1.4-beta-1.txt:1080
msgid ""
"This function was previously used by ``manage.py`` to execute a management "
"command. It is identical to ``django.core.management."
"execute_from_command_line``, except that it first calls ``setup_environ``, "
"which is now deprecated. As such, ``execute_manager`` is also deprecated; "
"``execute_from_command_line`` can be used instead. Neither of these "
"functions is documented as part of the public API, but a deprecation path is "
"needed due to use in existing ``manage.py`` files."
msgstr ""

# d370e98136dd43928c5d38322c2b3ca3
# da563576d49e43729ba9cd3e4ed4ed21
# 65b43fea898f4017b9b2b4ccf76844a8
#: ../../releases/1.4.txt:1181 ../../releases/1.4-alpha-1.txt:1021
#: ../../releases/1.4-beta-1.txt:1089
msgid "``is_safe`` and ``needs_autoescape`` attributes of template filters"
msgstr ""

# 5a7e26ce0e334b50967fa97d3243fb82
# 2206a99fd92f4fddaea14f948e325d39
# 3547f555993f4ee8b96dd56cbfeac868
#: ../../releases/1.4.txt:1183 ../../releases/1.4-alpha-1.txt:1023
#: ../../releases/1.4-beta-1.txt:1091
msgid ""
"Two flags, ``is_safe`` and ``needs_autoescape``, define how each template "
"filter interacts with Django's auto-escaping behavior. They used to be "
"attributes of the filter function::"
msgstr ""

# 69e4b875943f488c9a997f5a208e3502
# 1f7edd6d99084bb8b895d7769827784d
# ac0994089bf54de2bcd45a4b000e9be7
#: ../../releases/1.4.txt:1192 ../../releases/1.4-alpha-1.txt:1032
#: ../../releases/1.4-beta-1.txt:1100
msgid ""
"However, this technique caused some problems in combination with decorators, "
"especially :func:`@stringfilter <django.template.defaultfilters."
"stringfilter>`. Now, the flags are keyword arguments of :meth:`@register."
"filter <django.template.Library.filter>`::"
msgstr ""

# 4cf3ee1f07c24836a95717c0b64ac4df
# 25dbbed31dea4153bce6faa156cb1ba8
# 7ab735e1a84d413d8965d8957f473fe6
#: ../../releases/1.4.txt:1201 ../../releases/1.4-alpha-1.txt:1041
#: ../../releases/1.4-beta-1.txt:1109
msgid ""
"See :ref:`filters and auto-escaping <filters-auto-escaping>` for more "
"information."
msgstr ""

# 0e571032611e4a18acb19dfe37267926
# 725b0cf90f7043088e68c8e951d912fa
# 370ce79061c7466aa457b37ddd2b884d
#: ../../releases/1.4.txt:1204 ../../releases/1.4-alpha-1.txt:1051
#: ../../releases/1.4-beta-1.txt:1122
msgid "Wildcard expansion of application names in `INSTALLED_APPS`"
msgstr ""

# 4df430529a5743d3beb121aec5db62e1
# 4f4201574dc143c6a92d2306ff3dcf3c
# 05a38637153b4fcf99f24c677e7beeb9
#: ../../releases/1.4.txt:1206 ../../releases/1.4-alpha-1.txt:1053
#: ../../releases/1.4-beta-1.txt:1124
msgid ""
"Until Django 1.3, :setting:`INSTALLED_APPS` accepted wildcards in "
"application names, like ``django.contrib.*``. The expansion was performed by "
"a filesystem-based implementation of ``from <package> import *``. "
"Unfortunately, `this can't be done reliably`_."
msgstr ""

# ebc90d6652be47ce9c94fb2f758636b3
# f7b1199bed004abf915f76ad3a9c0a88
# a808da6fdc024989aeebc5f3b1ccab14
#: ../../releases/1.4.txt:1211 ../../releases/1.4-alpha-1.txt:1058
#: ../../releases/1.4-beta-1.txt:1129
msgid ""
"This behavior was never documented. Since it is un-pythonic and not "
"obviously useful, it was removed in Django 1.4. If you relied on it, you "
"must edit your settings file to list all your applications explicitly."
msgstr ""

# 1de79cff635c42e9a798bf9b08a28e4a
# b7b88eb9d527422bb7a07aa1ffca44f3
# c3a042ae66e7440e9d23127f1f2a3c60
#: ../../releases/1.4.txt:1218 ../../releases/1.4-alpha-1.txt:1065
#: ../../releases/1.4-beta-1.txt:1136
msgid "``HttpRequest.raw_post_data`` renamed to ``HttpRequest.body``"
msgstr ""

# 5961cd982dd84ea7bd325ff396d21617
# b9cd19e841f247c793e9b124899d1b79
# f77d9af47ad242eba82e5c07efce923a
#: ../../releases/1.4.txt:1220 ../../releases/1.4-alpha-1.txt:1067
#: ../../releases/1.4-beta-1.txt:1138
msgid ""
"This attribute was confusingly named ``HttpRequest.raw_post_data``, but it "
"actually provided the body of the HTTP request. It's been renamed to "
"``HttpRequest.body``, and ``HttpRequest.raw_post_data`` has been deprecated."
msgstr ""

# c995fb1cb7ab4d32be0fcaab60ca400f
#: ../../releases/1.4.txt:1225
msgid ""
"``django.contrib.sitemaps`` bug fix with potential performance implications"
msgstr ""

# 6f515cd97a674d048802e91a17cc66e2
#: ../../releases/1.4.txt:1227
msgid ""
"In previous versions, ``Paginator`` objects used in sitemap classes were "
"cached, which could result in stale site maps. We've removed the caching, so "
"each request to a site map now creates a new Paginator object and calls the :"
"attr:`~django.contrib.sitemaps.Sitemap.items()` method of the :class:"
"`~django.contrib.sitemaps.Sitemap` subclass. Depending on what your ``items()"
"`` method is doing, this may have a negative performance impact. To mitigate "
"the performance impact, consider using the :doc:`caching framework </topics/"
"cache>` within your ``Sitemap`` subclass."
msgstr ""

# 8182b086395f453ca4afad2c69154705
#: ../../releases/1.4-alpha-1.txt:3
msgid "Django 1.4 alpha release notes"
msgstr ""

# 3e783e230a2546e8b4fe3cfc971e4f87
#: ../../releases/1.4-alpha-1.txt:5
msgid "December 22, 2011."
msgstr ""

# 4cbba663e44c483ca022df546127efcd
#: ../../releases/1.4-alpha-1.txt:7
msgid "Welcome to Django 1.4 alpha!"
msgstr ""

# 9d91ffb28b8d4cd2840e429b3e8a1e5f
#: ../../releases/1.4-alpha-1.txt:9
msgid ""
"This is the first in a series of preview/development releases leading up to "
"the eventual release of Django 1.4, scheduled for March 2012. This release "
"is primarily targeted at developers who are interested in trying out new "
"features and testing the Django codebase to help identify and resolve bugs "
"prior to the final 1.4 release."
msgstr ""

# de1bc6ee8eac45e3826cdc71ef34677d
#: ../../releases/1.4-alpha-1.txt:18
msgid ""
"Django 1.4 alpha includes various `new features`_ and some minor `backwards "
"incompatible changes`_. There are also some features that have been dropped, "
"which are detailed in :doc:`our deprecation plan </internals/deprecation>`, "
"and we've `begun the deprecation process for some features`_."
msgstr ""

# bff80c0ae38747479bac8b1f2001e909
# d679a1b034b8429f9548b2b6c5f30bac
#: ../../releases/1.4-alpha-1.txt:30 ../../releases/1.4-beta-1.txt:46
msgid ""
"While not a new feature, it's important to note that Django 1.4 introduces "
"the second shift in our Python compatibility policy since Django's initial "
"public debut. Django 1.2 dropped support for Python 2.3; now Django 1.4 "
"drops support for Python 2.4. As such, the minimum Python version required "
"for Django is now 2.5, and Django is tested and supported on Python 2.5, 2.6 "
"and 2.7."
msgstr ""

# c482d884f6774ca0a3fa0f1754141c90
# c0ebddf1e8f44c67ba1b3a0f61ea968f
#: ../../releases/1.4-alpha-1.txt:36 ../../releases/1.4-beta-1.txt:52
msgid ""
"This change should affect only a small number of Django users, as most "
"operating-system vendors today are shipping Python 2.5 or newer as their "
"default version. If you're still using Python 2.4, however, you'll need to "
"stick to Django 1.3 until you can upgrade; per :doc:`our support policy </"
"internals/release-process>`, Django 1.3 will continue to receive security "
"support until the release of Django 1.5."
msgstr ""

# c0269e9f33a144c1a0e2cb93f0cf88a4
# 783c3cd7c2bd4111a637ba1c56f84058
#: ../../releases/1.4-alpha-1.txt:43 ../../releases/1.4-beta-1.txt:59
msgid ""
"Django does not support Python 3.x at this time. A document outlining our "
"full timeline for deprecating Python 2.x and moving to Python 3.x will be "
"published before the release of Django 1.4."
msgstr ""

# 88f3826f844947f4a6ed4e40a98a74c0
# 237873fc5cb84fb18bf184307f00f318
#: ../../releases/1.4-alpha-1.txt:65 ../../releases/1.4-beta-1.txt:81
msgid ""
"Django 1.4 now includes a :meth:`QuerySet.select_for_update() <django.db."
"models.query.QuerySet.select_for_update>` method which generates a "
"``SELECT ... FOR UPDATE`` SQL query. This will lock rows until the end of "
"the transaction, meaning that other transactions cannot modify or delete "
"rows matched by a ``FOR UPDATE`` query."
msgstr ""

# facd7d6b734a4661bef53bb1becdbc07
# 5975012797a949419f72f1e832a246ff
#: ../../releases/1.4-alpha-1.txt:77 ../../releases/1.4-beta-1.txt:93
msgid ""
"This method allows for more efficient creation of multiple objects in the "
"ORM. It can provide significant performance increases if you have many "
"objects. Django makes use of this internally, meaning some operations (such "
"as database setup for test suites) have seen a performance benefit as a "
"result."
msgstr ""

# 48653a59420447b8babef0cc83056851
# 95f17a79d8174005902e2185e01830a6
#: ../../releases/1.4-alpha-1.txt:88 ../../releases/1.4-beta-1.txt:104
msgid ""
"Similar to :meth:`~django.db.models.query.QuerySet.select_related` but with "
"a different strategy and broader scope, :meth:`~django.db.models.query."
"QuerySet.prefetch_related` has been added to :class:`~django.db.models.query."
"QuerySet`. This method returns a new ``QuerySet`` that will prefetch each of "
"the specified related lookups in a single batch as soon as the query begins "
"to be evaluated. Unlike ``select_related``, it does the joins in Python, not "
"in the database, and supports many-to-many relationships, :class:`~django."
"contrib.contenttypes.generic.GenericForeignKey` and more. This allows you to "
"fix a very common performance problem in which your code ends up doing O(n) "
"database queries (or worse) if objects on your primary ``QuerySet`` each "
"have many related objects that you also need."
msgstr ""

# 757ae883ac7c41eb8508f9c533e20c85
# 68f2a4197e8a48899f7f37793f6e48f9
#: ../../releases/1.4-alpha-1.txt:119 ../../releases/1.4-beta-1.txt:150
msgid "HTML5 Doctype"
msgstr ""

# 6fabf52b2f964fa481ed9e450f166a7a
# 03c909ef6de043c1be48dcfd38a9d310
#: ../../releases/1.4-alpha-1.txt:130 ../../releases/1.4-beta-1.txt:161
msgid ""
"Prior to Django 1.4, the :mod:`~django.contrib.admin` app allowed you to "
"specify change list filters by specifying a field lookup, but didn't allow "
"you to create custom filters. This has been rectified with a simple API "
"(previously used internally and known as \"FilterSpec\"). For more details, "
"see the documentation for :attr:`~django.contrib.admin.ModelAdmin."
"list_filter`."
msgstr ""

# d28b2b6b1bd64de4a3d079a05ea2ca06
# 1ffd259fdddb4855bd4a3f6c6ad888a8
#: ../../releases/1.4-alpha-1.txt:139 ../../releases/1.4-beta-1.txt:170
msgid ""
"The admin change list now supports sorting on multiple columns. It respects "
"all elements of the :attr:`~django.contrib.admin.ModelAdmin.ordering` "
"attribute, and sorting on multiple columns by clicking on headers is "
"designed to mimic the behavior of desktop GUIs. The :meth:`~django.contrib."
"admin.ModelAdmin.get_ordering` method for specifying the ordering "
"dynamically (e.g. depending on the request) has also been added."
msgstr ""

# 9a0ed0742b194b0780bd7893cd84d305
# 622af18bc34e4f06b9d90fac0d2b0d55
#: ../../releases/1.4-alpha-1.txt:149 ../../releases/1.4-beta-1.txt:180
msgid ""
"A new :meth:`~django.contrib.admin.ModelAdmin.save_related` method was added "
"to :mod:`~django.contrib.admin.ModelAdmin` to ease customization of how "
"related objects are saved in the admin."
msgstr ""

# 732ea447009a4fb8a007bb4dc79ad2ae
# c607f4be62f94edaa172989c99696d12
#: ../../releases/1.4-alpha-1.txt:153 ../../releases/1.4-beta-1.txt:184
msgid ""
"Two other new methods, :meth:`~django.contrib.admin.ModelAdmin."
"get_list_display` and :meth:`~django.contrib.admin.ModelAdmin."
"get_list_display_links` were added to :class:`~django.contrib.admin."
"ModelAdmin` to enable the dynamic customization of fields and links "
"displayed on the admin change list."
msgstr ""

# 9fcfd9f553db45a9902846bea596a6ee
# a0a25fd2ebaa4ad595a3e3252c30a872
#: ../../releases/1.4-alpha-1.txt:162 ../../releases/1.4-beta-1.txt:193
msgid ""
"Admin inlines will now only allow those actions for which the user has "
"permission. For ``ManyToMany`` relationships with an auto-created "
"intermediate model (which does not have its own permissions), the change "
"permission for the related model determines if the user has the permission "
"to add, change or delete relationships."
msgstr ""

# 08078bfcf6d84a1ba3c44fa9907ab1c1
# 28e68ac426214b9bb30e0cd81d659b77
#: ../../releases/1.4-alpha-1.txt:181 ../../releases/1.4-beta-1.txt:212
msgid ""
"Django 1.4 introduces a new cookie-based backend for the session framework "
"which uses the tools for :doc:`cryptographic signing </topics/signing>` to "
"store the session data in the client's browser."
msgstr ""

# a1bac65ffb1d4c58ac7347d4c4a6d846
# 31b91db27e3f4d93a9cfd07f70f8094b
#: ../../releases/1.4-alpha-1.txt:207 ../../releases/1.4-beta-1.txt:245
msgid ""
"A lazily evaluated version of :func:`django.core.urlresolvers.reverse` was "
"added to allow using URL reversals before the project's URLConf gets loaded."
msgstr ""

# 4888dfddd8bb49ff9feeccf656433ca8
# f2eb84899a6443099fd9c09ace742a64
#: ../../releases/1.4-alpha-1.txt:213 ../../releases/1.4-beta-1.txt:251
msgid ""
"Django 1.4 gained the ability to look for a language prefix in the URL "
"pattern when using the new :func:`~django.conf.urls.i18n.i18n_patterns` "
"helper function. Additionally, it's now possible to define translatable URL "
"patterns using :func:`~django.utils.translation.ugettext_lazy`. See :ref:"
"`url-internationalization` for more information about the language prefix "
"and how to internationalize URL patterns."
msgstr ""

# 26cc7218dc1a41a5a9186c8b58d550dd
# 3ffae25529ee461dbef90263295f93e3
#: ../../releases/1.4-alpha-1.txt:231 ../../releases/1.4-beta-1.txt:269
msgid ""
"Two new attributes, :attr:`pk_url_kwarg<django.views.generic.detail."
"SingleObjectMixin.pk_url_kwarg>` and :attr:`slug_url_kwarg<django.views."
"generic.detail.SingleObjectMixin.slug_url_kwarg>`, have been added to :class:"
"`~django.views.generic.detail.SingleObjectMixin` to enable the customization "
"of URLConf keyword arguments used for single object generic views."
msgstr ""

# 5c8deeecb1774f33b79bc704a05fc5cf
# c1232f50147a45e9a2dfd0a3e898257e
#: ../../releases/1.4-alpha-1.txt:265 ../../releases/1.4-beta-1.txt:303
msgid ""
"Then in the template any number of arguments may be passed to the template "
"tag. For example:"
msgstr ""

# f9d69094246243d8b0b00dce25934713
# 5ca6b3e2d7964fb38280c61b2bc62334
#: ../../releases/1.4-alpha-1.txt:290 ../../releases/1.4-beta-1.txt:328
msgid ""
"Added a filter which truncates a string to be no longer than the specified "
"number of characters. Truncated strings end with a translatable ellipsis "
"sequence (\"...\"). See the documentation for :tfilter:`truncatechars` for "
"more details."
msgstr ""

# b5d42d4428a84d0092e970c75092e92f
# 695f6f1f701342a4b20b3a06c0ca41e4
#: ../../releases/1.4-alpha-1.txt:307 ../../releases/1.4-beta-1.txt:345
msgid ""
"In addition to the `static template tag`_, the :mod:`staticfiles<django."
"contrib.staticfiles>` contrib app now has a :class:`~django.contrib."
"staticfiles.storage.CachedStaticFilesStorage` backend which caches the files "
"it saves (when running the :djadmin:`collectstatic` management command) by "
"appending the MD5 hash of the file's content to the filename. For example, "
"the file ``css/styles.css`` would also be saved as ``css/styles.55e7cbb9ba48."
"css``"
msgstr ""

# 285b09c14c9b4ee79b0a1099158f901a
# 88c79bd3db52494890cfcdb48d4e32ed
#: ../../releases/1.4-alpha-1.txt:330 ../../releases/1.4-beta-1.txt:368
msgid ""
"We've made various improvements to our CSRF features, including the :func:"
"`~django.views.decorators.csrf.ensure_csrf_cookie` decorator which can help "
"with AJAX heavy sites, protection for PUT and DELETE requests, and the :"
"setting:`CSRF_COOKIE_SECURE` and :setting:`CSRF_COOKIE_PATH` settings which "
"can improve the security and usefulness of the CSRF protection. See the :doc:"
"`CSRF docs </ref/contrib/csrf>` for more information."
msgstr ""

# 7d35d4ec11684a1096d4095c97e5b62d
# 4bd8612dbe9842618e11dc1debef9038
#: ../../releases/1.4-alpha-1.txt:340 ../../releases/1.4-beta-1.txt:378
msgid ""
"Two new function decorators, :func:`sensitive_variables` and :func:"
"`sensitive_post_parameters`, were added to allow designating the local "
"variables and POST parameters which may contain sensitive information and "
"should be filtered out of error reports."
msgstr ""

# e9777d03607e435ca341f0afdb48dc85
# 2ba62074048040d5b2305bfd4913ca2a
#: ../../releases/1.4-alpha-1.txt:345 ../../releases/1.4-beta-1.txt:383
msgid ""
"All POST parameters are now systematically filtered out of error reports for "
"certain views (``login``, ``password_reset_confirm``, ``password_change``, "
"and ``add_view`` in :mod:`django.contrib.auth.views`, as well as "
"``user_change_password`` in the admin app) to prevent the leaking of "
"sensitive information such as user passwords."
msgstr ""

# 6272019c9e15425f96943aa3596fff0b
# e7e5aeb7b04e4d2ba2bef62135c8d3f0
#: ../../releases/1.4-alpha-1.txt:351 ../../releases/1.4-beta-1.txt:389
msgid ""
"You may override or customize the default filtering by writing a :ref:"
"`custom filter<custom-error-reports>`. For more information see the docs on :"
"ref:`Filtering error reports<filtering-error-reports>`."
msgstr ""

# 94b60b0f0da24c43876c24d9ae901284
# b52ff8c4c11847129cd00cbb36b218da
#: ../../releases/1.4-alpha-1.txt:358 ../../releases/1.4-beta-1.txt:396
msgid ""
"The previously added support for IPv6 addresses when using the runserver "
"management command in Django 1.3 has now been further extended by adding a :"
"class:`~django.db.models.fields.GenericIPAddressField` model field, a :class:"
"`~django.forms.fields.GenericIPAddressField` form field and the validators :"
"data:`~django.core.validators.validate_ipv46_address` and :data:`~django."
"core.validators.validate_ipv6_address`"
msgstr ""

# 68b49fe99aa44cbcad9e801b05d907e8
# 45d38f2a493e49de9cb951506470e5a8
#: ../../releases/1.4-alpha-1.txt:374 ../../releases/1.4-beta-1.txt:412
msgid ""
"The previous ``manage.py`` called functions that are now deprecated, and "
"thus projects upgrading to Django 1.4 should update their ``manage.py``. "
"(The old-style ``manage.py`` will continue to work as before until Django "
"1.6; in 1.5 it will raise ``DeprecationWarning``)."
msgstr ""

# 4ba57dd8272046da8f66f3a9e54a23f9
# e453a522c57542728586131b8a22d2b9
#: ../../releases/1.4-alpha-1.txt:394 ../../releases/1.4-beta-1.txt:432
msgid ""
"If settings, URLconfs, and apps within the project are imported or "
"referenced using the project name prefix (e.g. ``myproject.settings``, "
"``ROOT_URLCONF = \"myproject.urls\"``, etc), the new ``manage.py`` will need "
"to be moved one directory up, so it is outside the project package rather "
"than adjacent to ``settings.py`` and ``urls.py``."
msgstr ""

# 6b9ac5ad916c4d61848795ef10618492
# fb5f73b57f2c45b4829f84027e947956
#: ../../releases/1.4-alpha-1.txt:439 ../../releases/1.4-beta-1.txt:477
msgid ""
"The :djadmin:`built-in development server<runserver>` now supports using an "
"externally-defined WSGI callable, so as to make it possible to run runserver "
"with the same WSGI configuration that is used for deployment. A new :setting:"
"`WSGI_APPLICATION` setting is available to configure which WSGI callable :"
"djadmin:`runserver` uses."
msgstr ""

# 1940495cb71c449e8afe808ddfe9d9d2
# 32eaf472b1fa4d4da95932f8a1a2f01c
#: ../../releases/1.4-alpha-1.txt:451 ../../releases/1.4-beta-1.txt:489
msgid ""
"The :djadmin:`startapp` and :djadmin:`startproject` management commands got "
"a ``--template`` option for specifying a path or URL to a custom app or "
"project template."
msgstr ""

# 71d35b645eeb4513bad2710eac06e82f
# ffd8ecaea0d3437080b0bf27657609ab
#: ../../releases/1.4-alpha-1.txt:455 ../../releases/1.4-beta-1.txt:493
msgid ""
"For example, Django will use the ``/path/to/my_project_template`` directory "
"when running the following command::"
msgstr ""

# 1b383d2a1f564498bf5a9c89b07f3ed3
# fa081ebc0b604feea83fba1e0ee839ad
#: ../../releases/1.4-alpha-1.txt:472 ../../releases/1.4-beta-1.txt:510
msgid ""
"Django 1.4 adds :ref:`support for time zones <time-zones>`. When it's "
"enabled, Django stores date and time information in UTC in the database, "
"uses time zone-aware datetime objects internally, and translates them to the "
"end user's time zone in templates and forms."
msgstr ""

# 32b1df39081e43ec9bba2d9db678b085
# bfb974519bb7464aab98d9db4cdeea4e
#: ../../releases/1.4-alpha-1.txt:485 ../../releases/1.4-beta-1.txt:523
msgid ""
"Time zone support is enabled by default in new projects created with :"
"djadmin:`startproject`. If you want to use this feature in an existing "
"project, there is a :ref:`migration guide <time-zones-migration-guide>`."
msgstr ""

# 54e1c6ffb5024d53a95e85dfa9f40987
# 0dbba783fdd448408688ad2f2b96ed49
#: ../../releases/1.4-alpha-1.txt:494 ../../releases/1.4-beta-1.txt:554
msgid ""
"A more usable stacktrace in the technical 500 page: frames in the stack "
"trace which reference Django's code are dimmed out, while frames in user "
"code are slightly emphasized. This change makes it easier to scan a "
"stacktrace for issues in user code."
msgstr ""

# 5c61c8aa4e994d19aea98b59ab06661a
# 39210548c43b492c96a90c13a73063a7
#: ../../releases/1.4-alpha-1.txt:506 ../../releases/1.4-beta-1.txt:566
msgid ""
"The :func:`django.contrib.auth.models.check_password` function has been "
"moved to the :mod:`django.contrib.auth.utils` module. Importing it from the "
"old location will still work, but you should update your imports."
msgstr ""

# 1c353fd717d34ab58ae4bb1a3084f926
# 643da3942c63488e959f5a13f527d718
#: ../../releases/1.4-alpha-1.txt:510 ../../releases/1.4-beta-1.txt:570
msgid ""
"The :djadmin:`collectstatic` management command gained a ``--clear`` option "
"to delete all files at the destination before copying or linking the static "
"files."
msgstr ""

# e35f1b460d444197bf0c45fedb556b46
# 0ef7229115674960aed58a4a193a7cae
#: ../../releases/1.4-alpha-1.txt:514 ../../releases/1.4-beta-1.txt:574
msgid ""
"It is now possible to load fixtures containing forward references when using "
"MySQL with the InnoDB database engine."
msgstr ""

# 6eedac6866c5496f8e676162fea49df3
# e93d8625186340578b69e66a4cf53606
#: ../../releases/1.4-alpha-1.txt:529 ../../releases/1.4-beta-1.txt:589
msgid ""
"A new plain text version of the HTTP 500 status code internal error page "
"served when :setting:`DEBUG` is ``True`` is now sent to the client when "
"Django detects that the request has originated in JavaScript code (:meth:"
"`~django.http.HttpRequest.is_ajax` is used for this)."
msgstr ""

# e19d7a7120344033803f450ad824e1a0
# 854c298a725645aab5383f19af7fef14
#: ../../releases/1.4-alpha-1.txt:534 ../../releases/1.4-beta-1.txt:594
msgid ""
"Similarly to its HTML counterpart, it contains a collection of different "
"pieces of information about the state of the web application."
msgstr ""

# 96a6a9a512eb4b709ac45151833948e0
# 486682fef70f455280bddee63b3bed7c
#: ../../releases/1.4-alpha-1.txt:537 ../../releases/1.4-beta-1.txt:597
msgid ""
"This should make it easier to read when debugging interaction with client-"
"side Javascript code."
msgstr ""

# ee0ae91af3b84b0c8fe07feef48126d9
# 72d704439b554192b475f87544034967
#: ../../releases/1.4-alpha-1.txt:569 ../../releases/1.4-beta-1.txt:637
msgid ""
"Starting in Django 1.4 the admin's static files also follow this convention "
"to make it easier to deploy the included files. In previous versions of "
"Django, it was also common to define an ``ADMIN_MEDIA_PREFIX`` setting to "
"point to the URL where the admin's static files are served by a web server. "
"This setting has now been deprecated and replaced by the more general "
"setting :setting:`STATIC_URL`. Django will now expect to find the admin "
"static files under the URL ``<STATIC_URL>/admin/``."
msgstr ""

# 3c8e86a27361480fb37b8fce834b8df1
# b9e1c8bac4ff477e8501bd32b6f62ee5
#: ../../releases/1.4-alpha-1.txt:577 ../../releases/1.4-beta-1.txt:645
msgid ""
"If you've previously used a URL path for ``ADMIN_MEDIA_PREFIX`` (e.g. ``/"
"media/``) simply make sure :setting:`STATIC_URL` and :setting:`STATIC_ROOT` "
"are configured and your web server serves the files correctly. The "
"development server continues to serve the admin files just like before. "
"Don't hesitate to consult the :doc:`static files howto </howto/static-"
"files>` for further details."
msgstr ""

# 2a39e09da0a2482683797282c901cc4f
# 0a1dc225dcb744a1acda38bb4cafa8eb
#: ../../releases/1.4-alpha-1.txt:584 ../../releases/1.4-beta-1.txt:652
msgid ""
"In case your ``ADMIN_MEDIA_PREFIX`` is set to an specific domain (e.g. "
"``http://media.example.com/admin/``) make sure to also set your :setting:"
"`STATIC_URL` setting to the correct URL, for example ``http://media.example."
"com/``."
msgstr ""

# 26d62d6026cb49158ea11cb645c2c688
# 57baebb0f8e043ce86bfe60d79e23f6a
#: ../../releases/1.4-alpha-1.txt:591 ../../releases/1.4-beta-1.txt:659
msgid ""
"If you're implicitly relying on the path of the admin static files on your "
"server's file system when you deploy your site, you have to update that "
"path. The files were moved from :file:`django/contrib/admin/media/` to :file:"
"`django/contrib/admin/static/admin/`."
msgstr ""

# 1ce3bdcfee3e4dffb9a9d0ac62b4b117
# bb8a24d10ad648998657c6587fb06a15
#: ../../releases/1.4-alpha-1.txt:599 ../../releases/1.4-beta-1.txt:667
msgid ""
"Django hasn't had a clear policy on which browsers are supported for using "
"the admin app. Django's new policy formalizes existing practices: `YUI's A-"
"grade`_ browsers should provide a fully-functional admin experience, with "
"the notable exception of IE6, which is no longer supported."
msgstr ""

# 231f283fbc5141959a64414b96015690
# 90dc78b6faec4956804379718aa5966a
#: ../../releases/1.4-alpha-1.txt:604 ../../releases/1.4-beta-1.txt:672
msgid ""
"Released over ten years ago, IE6 imposes many limitations on modern web "
"development. The practical implications of this policy are that contributors "
"are free to improve the admin without consideration for these limitations."
msgstr ""

# 66e076f0fbe541a29b2766c1562ed88e
# c74ea99a61224e1e80e85db7927d1cdb
#: ../../releases/1.4-alpha-1.txt:608 ../../releases/1.4-beta-1.txt:676
msgid ""
"This new policy **has no impact** on development outside of the admin. Users "
"of Django are free to develop webapps compatible with any range of browsers."
msgstr ""

# a86893c5b94e4509a70922c1b88d952d
# 7dbdbeb065c9458bb6251c9d2b7903c0
#: ../../releases/1.4-alpha-1.txt:616 ../../releases/1.4-beta-1.txt:684
msgid ""
"As part of an effort to improve the performance and usability of the admin's "
"changelist sorting interface and of the admin's :attr:`horizontal <django."
"contrib.admin.ModelAdmin.filter_horizontal>` and :attr:`vertical <django."
"contrib.admin.ModelAdmin.filter_vertical>` \"filter\" widgets, some icon "
"files were removed and grouped into two sprite files."
msgstr ""

# 7434764cf810478b81db67d03df38a1b
# cd3dc9146e1549c380549e4f9c220527
#: ../../releases/1.4-alpha-1.txt:628 ../../releases/1.4-beta-1.txt:696
msgid ""
"If you used those icons to customize the admin then you will want to replace "
"them with your own icons or retrieve them from a previous release."
msgstr ""

# 6d0d659f61e0489193d7a20b6cb10507
# 075ab796971c4263b6080f8e5af3d7cd
#: ../../releases/1.4-alpha-1.txt:634 ../../releases/1.4-beta-1.txt:702
msgid ""
"To avoid conflicts with other common CSS class names (e.g. \"button\"), a "
"prefix \"field-\" has been added to all CSS class names automatically "
"generated from the form field names in the main admin forms, stacked inline "
"forms and tabular inline cells. You will need to take that prefix into "
"account in your custom style sheets or javascript files if you previously "
"used plain field names as selectors for custom styles or javascript "
"transformations."
msgstr ""

# cf538d05d2314288996a43887e4c2c96
# 8dd9c9a949094cf7a5e061042c39049d
#: ../../releases/1.4-alpha-1.txt:657 ../../releases/1.4-beta-1.txt:725
msgid ""
"consequences: the user will be logged out, and session data will be lost."
msgstr ""

# c5f0cfe2ae84464a8af9d8bdadd1e16c
# abfab853401c425782f72b4252df43be
#: ../../releases/1.4-alpha-1.txt:659 ../../releases/1.4-beta-1.txt:727
msgid "time period: defined by :setting:`SESSION_COOKIE_AGE`."
msgstr ""

# 60e5ded1680b44acb09a083d42af2f96
# f05a33934e5e43aa8635a579f388d168
#: ../../releases/1.4-alpha-1.txt:663 ../../releases/1.4-beta-1.txt:731
msgid ""
"consequences: password reset links from before the upgrade will not work."
msgstr ""

# 0f4576728b374ca99275f9f1f48d4d51
# 696c112266d847f4aa2281a74ad5bea3
#: ../../releases/1.4-alpha-1.txt:665 ../../releases/1.4-beta-1.txt:733
msgid "time period: defined by :setting:`PASSWORD_RESET_TIMEOUT_DAYS`."
msgstr ""

# b3ac9db5cc584762b148fa9f5c2187bd
# 813c98d89f5d480696e49c6dbc237442
#: ../../releases/1.4-alpha-1.txt:667 ../../releases/1.4-beta-1.txt:735
msgid ""
"Form-related hashes — these are much shorter lifetime, and are relevant only "
"for the short window where a user might fill in a form generated by the pre-"
"upgrade Django instance, and try to submit it to the upgraded Django "
"instance:"
msgstr ""

# 65d7b05ae17b451e80eb2e6ff153de5e
# 831f00b7e4584a78bea46b07f89f4cb2
#: ../../releases/1.4-alpha-1.txt:673 ../../releases/1.4-beta-1.txt:741
msgid ""
"consequences: the user will see a validation error \"Security hash failed\"."
msgstr ""

# 15d7b9a601544d859a4bf4ccbc37f315
# 0f1f80bb728343d690b4301328b54534
#: ../../releases/1.4-alpha-1.txt:675 ../../releases/1.4-beta-1.txt:743
msgid ""
"time period: the amount of time you expect users to take filling out comment "
"forms."
msgstr ""

# 489b2f8d115d477c9e1febb6a6ad5dd4
# 2e1ad728a83948c292e049c87971cc87
#: ../../releases/1.4-alpha-1.txt:680 ../../releases/1.4-beta-1.txt:748
msgid ""
"consequences: the user will see an error about the form having expired, and "
"will be sent back to the first page of the wizard, losing the data they have "
"entered so far."
msgstr ""

# 89655fa47c3a478b9e446f97969655d2
# 45f688154c21419a980f5bcbe7ff58b8
#: ../../releases/1.4-alpha-1.txt:684 ../../releases/1.4-beta-1.txt:752
msgid ""
"time period: the amount of time you expect users to take filling out the "
"affected forms."
msgstr ""

# 77cf79d779a44a06b9e1ed91baa089f5
# 6607e59a991d45d4b6436220068d9500
#: ../../releases/1.4-alpha-1.txt:689 ../../releases/1.4-beta-1.txt:757
msgid ""
"Note: This is actually a Django 1.1 fallback, not Django 1.2, and applies "
"only if you are upgrading from 1.1."
msgstr ""

# 606a71dc434946f49790b71097417492
# 2b077a99df214f699911ea4dfc8f2b64
#: ../../releases/1.4-alpha-1.txt:692 ../../releases/1.4-beta-1.txt:760
msgid ""
"consequences: the user will see a 403 error with any CSRF protected POST "
"form."
msgstr ""

# a3ecfb3eb3b7487fa360c4758b852b8b
# 71311f3a06d54f3d9e98d2b5adb2a22f
#: ../../releases/1.4-alpha-1.txt:695 ../../releases/1.4-beta-1.txt:763
msgid ""
"time period: the amount of time you expect user to take filling out such "
"forms."
msgstr ""

# 35564798f02c4d1dbae585285ae17769
# ea10b4a53b904c16839ceeb6bd0c091e
#: ../../releases/1.4-alpha-1.txt:701 ../../releases/1.4-beta-1.txt:769
msgid ""
"Starting in the 1.4 release the :class:`~django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware` only adds a trailing slash and redirects if the "
"resulting URL refers to an existing flatpage. For example, requesting ``/"
"notaflatpageoravalidurl`` in a previous version would redirect to ``/"
"notaflatpageoravalidurl/``, which would subsequently raise a 404. Requesting "
"``/notaflatpageoravalidurl`` now will immediately raise a 404. Additionally "
"redirects returned by flatpages are now permanent (301 status code) to match "
"the behavior of the :class:`~django.middleware.common.CommonMiddleware`."
msgstr ""

# 465a3e03bb4446dbb931639b61f3d861
# ab913cf4f9ab480a9f15ff679ab5e718
#: ../../releases/1.4-alpha-1.txt:714 ../../releases/1.4-beta-1.txt:782
msgid ""
"As a consequence of time zone support, and according to the ECMA-262 "
"specification, some changes were made to the JSON serializer:"
msgstr ""

# aa758cfa32424a4d9b24ac709b40c8e5
# 0fbe423e5c294d3caa969144ce01a022
#: ../../releases/1.4-alpha-1.txt:724 ../../releases/1.4-beta-1.txt:792
msgid ""
"The XML serializer was also changed to use the ISO8601 format for datetimes. "
"The letter ``T`` is used to separate the date part from the time part, "
"instead of a space. Time zone information is included in the ``[+-]HH:MM`` "
"format."
msgstr ""

# 67febe33c63944fb9ce9c18b8ef00a29
# 8d3a926726144c9a8f4b9c11d0252010
#: ../../releases/1.4-alpha-1.txt:728 ../../releases/1.4-beta-1.txt:796
msgid ""
"The serializers will dump datetimes in fixtures with these new formats. They "
"can still load fixtures that use the old format."
msgstr ""

# 83ba51c2171944e2a080fc958c5728fc
# 941e5b3c3ae945d98b7a29733eaa7d53
#: ../../releases/1.4-alpha-1.txt:739 ../../releases/1.4-beta-1.txt:807
msgid ""
"In the context of time zone support, this flag was changed to ``False``, and "
"datetimes are now stored without time zone information in SQLite. When :"
"setting:`USE_TZ` is ``False``, if you attempt to save an aware datetime "
"object, Django raises an exception."
msgstr ""

# ec8f27ad5eb44b7a8dd85550c882e992
# c88ad51b595d4e31b7fd02280b5ddf7a
#: ../../releases/1.4-alpha-1.txt:765 ../../releases/1.4-beta-1.txt:833
msgid ""
"Finally, while it is now possible to pass connections between threads, "
"Django does not make any effort to synchronize access to the underlying "
"backend. Concurrency behavior is defined by the underlying backend "
"implementation. Check their documentation for details."
msgstr ""

# 6d99f4f0d6d44bd9b43f5df49dfd7124
# 1ea9c0511dfe45a48ad5fa4d89e74d6d
#: ../../releases/1.4-alpha-1.txt:779 ../../releases/1.4-beta-1.txt:847
msgid ""
"If you rely on the feature and want to restore the old behavior, simply use "
"a custom comment model manager to exclude the user group, like this::"
msgstr ""

# e05b5a219c7a44b3b3252dba852e6b9a
# 47dc990345cc49d1af907bd0961f2257
#: ../../releases/1.4-alpha-1.txt:794 ../../releases/1.4-beta-1.txt:862
msgid ""
"Save this model manager in your custom comment app (e.g. in "
"``my_comments_app/managers.py``) and add it your :ref:`custom comment app "
"model <custom-comment-app-api>`::"
msgstr ""

# eb99b01c1a994df78b7c8da31134eb40
# 2cfad8e2881343b28ced86977f4ce22a
#: ../../releases/1.4-alpha-1.txt:845 ../../releases/1.4-beta-1.txt:913
msgid ""
"Don't forget to escape characters that have a special meaning in a regular "
"expression."
msgstr ""

# e97ace07fb6340c48c4bc7d080f31b95
# d6687e534e714595a70e7f6f733a0415
#: ../../releases/1.4-alpha-1.txt:851 ../../releases/1.4-beta-1.txt:919
msgid ""
"Previously, Django's :doc:`CSRF protection </ref/contrib/csrf/>` provided "
"protection against only POST requests. Since use of PUT and DELETE methods "
"in AJAX applications is becoming more common, we now protect all methods not "
"defined as safe by :rfc:`2616` i.e. we exempt GET, HEAD, OPTIONS and TRACE, "
"and enforce protection on everything else."
msgstr ""

# 24640571cc654fbd9f2237a0b14d3228
# 52cd2b9418f34ed2a63aa365eaefb200
#: ../../releases/1.4-alpha-1.txt:857 ../../releases/1.4-beta-1.txt:925
msgid ""
"If you are using PUT or DELETE methods in AJAX applications, please see the :"
"ref:`instructions about using AJAX and CSRF <csrf-ajax>`."
msgstr ""

# 936ba7ac46bf4a279187d1369d85c8f6
# 341c532039ce41f28b11355f95803d94
#: ../../releases/1.4-alpha-1.txt:863 ../../releases/1.4-beta-1.txt:931
msgid ""
"This was an alias to ``django.template.loader`` since 2005, it has been "
"removed without emitting a warning due to the length of the deprecation. If "
"your code still referenced this please use ``django.template.loader`` "
"instead."
msgstr ""

# 8dcfbe1590204ba0931bfb2b3ab9c7b0
# bb95f2dc1b6b4c5cb6978a1436e176ac
#: ../../releases/1.4-alpha-1.txt:877 ../../releases/1.4-beta-1.txt:945
msgid ""
"The ``open`` method of the base Storage class took an obscure parameter "
"``mixin`` which allowed you to dynamically change the base classes of the "
"returned file object. This has been removed. In the rare case you relied on "
"the `mixin` parameter, you can easily achieve the same by overriding the "
"`open` method, e.g.::"
msgstr ""

# eab1d33c948e4276b87ed378b42442c5
# 4e3f1b3bfed143759b0d20504bf81d3e
#: ../../releases/1.4-alpha-1.txt:903 ../../releases/1.4-beta-1.txt:971
msgid ""
"``yaml.load`` is able to construct any Python object, which may trigger "
"arbitrary code execution if you process a YAML document that comes from an "
"untrusted source. This feature isn't necessary for Django's YAML "
"deserializer, whose primary use is to load fixtures consisting of simple "
"objects. Even though fixtures are trusted data, for additional security, the "
"YAML deserializer now uses ``yaml.safe_load``."
msgstr ""

# f3065cf98ddc49fb8d385198323ba3cc
# 65b0ebe52d824150ab6ecbe6be61b4a4
#: ../../releases/1.4-alpha-1.txt:916 ../../releases/1.4-beta-1.txt:984
msgid ""
"Some legacy ways of calling :func:`~django.views.decorators.cache."
"cache_page` have been deprecated, please see the docs for the correct way to "
"use this decorator."
msgstr ""

# 280cef75edb14e9391429a483d2426f0
# 0c9d12f2b5214535bb7178abf45940fb
#: ../../releases/1.4-alpha-1.txt:923 ../../releases/1.4-beta-1.txt:991
msgid ""
"Django 1.3 dropped support for PostgreSQL versions older than 8.0 and the "
"relevant documents suggested to use a recent version because of performance "
"reasons but more importantly because end of the upstream support periods for "
"releases 8.0 and 8.1 was near (November 2010)."
msgstr ""

# fc0d4c97c1204afbb117327243c0d399
# d136ef9885c2481384c2c7c326bc4eaa
#: ../../releases/1.4-alpha-1.txt:934 ../../releases/1.4-beta-1.txt:1002
msgid ""
"When :doc:`logging support </topics/logging/>` was added to Django in 1.3, "
"the admin error email support was moved into the :class:`django.utils.log."
"AdminEmailHandler`, attached to the ``'django.request'`` logger. In order to "
"maintain the established behavior of error emails, the ``'django.request'`` "
"logger was called only when :setting:`DEBUG` was ``False``."
msgstr ""

# dffbfaac9272428b95246d4f32fb9f0c
# 2afa629f91824add8d55cf4ec9ac6ea9
#: ../../releases/1.4-alpha-1.txt:960 ../../releases/1.4-beta-1.txt:1028
msgid ""
"If your project was created prior to this change, your :setting:`LOGGING` "
"setting will not include this new filter. In order to maintain backwards-"
"compatibility, Django will detect that your ``'mail_admins'`` handler "
"configuration includes no ``'filters'`` section, and will automatically add "
"this filter for you and issue a pending-deprecation warning. This will "
"become a deprecation warning in Django 1.5, and in Django 1.6 the backwards-"
"compatibility shim will be removed entirely."
msgstr ""

# 6125a564459c4ff08f3d89fbfdf31eba
# 155e044b4cbb41bfbc047cbfe05d43cd
#: ../../releases/1.4-alpha-1.txt:974 ../../releases/1.4-beta-1.txt:1042
msgid ""
"Until Django 1.3 the functions :func:`~django.conf.urls.include`, :func:"
"`~django.conf.urls.patterns` and :func:`~django.conf.urls.url` plus :data:"
"`~django.conf.urls.handler404`, :data:`~django.conf.urls.handler500` were "
"located in a ``django.conf.urls.defaults`` module."
msgstr ""

# c623401ef9ea41df948fef61c3e16382
# 51da4591b494445086407ec50d646a68
#: ../../releases/1.4-alpha-1.txt:979 ../../releases/1.4-beta-1.txt:1047
msgid ""
"Starting with Django 1.4 they are now available in :mod:`django.conf.urls`."
msgstr ""

# 40ff36de5605475982a31834c6339038
# 0814c3116b3c45deba6fbac06301a14d
#: ../../releases/1.4-alpha-1.txt:992 ../../releases/1.4-beta-1.txt:1060
msgid ""
"The code that powers Databrowse is licensed under the same terms as Django "
"itself, and so is available to be adopted by an individual or group as a "
"third-party project."
msgstr ""

# 098e628c17574d5aa3a7d75f9758a0a8
# 136759671f6d4d22a6194d8f84716fa8
#: ../../releases/1.4-alpha-1.txt:1004 ../../releases/1.4-beta-1.txt:1072
msgid ""
"This function was never documented or part of the public API, but was widely "
"recommended for use in setting up a \"Django environment\" for a user "
"script. These uses should be replaced by setting the "
"``DJANGO_SETTINGS_MODULE`` environment variable or using :func:`django.conf."
"settings.configure`."
msgstr ""

# a99e8a5107934e0baf35af4384226800
#: ../../releases/1.4-alpha-1.txt:1046
msgid ""
"Session cookies now include the ``httponly`` attribute by default to help "
"reduce the impact of potential XSS attacks. For strict backwards "
"compatibility, use ``SESSION_COOKIE_HTTPONLY = False`` in your settings file."
msgstr ""

# 74b464bfe18847cb932e01e9154d90fc
# 72ccee354c09475584c1f3e2564abf3e
#: ../../releases/1.4-alpha-1.txt:1072 ../../releases/1.4-beta-1.txt:1144
msgid "The Django 1.4 roadmap"
msgstr ""

# 1dd69faa1011495d9330dba51bb12e16
# 2ebb65cd2a0540d994b6918f61527bfb
#: ../../releases/1.4-alpha-1.txt:1074 ../../releases/1.4-beta-1.txt:1146
msgid ""
"Before the final Django 1.4 release, several other preview/development "
"releases will be made available. The current schedule consists of at least "
"the following:"
msgstr ""

# f80af9d6b8844007afce1c6fe621cb74
#: ../../releases/1.4-alpha-1.txt:1077
msgid ""
"Week of **January 30, 2012**: First Django 1.4 beta release; final feature "
"freeze for Django 1.4."
msgstr ""

# da458864e4e44466a79ea3017a50d0f2
# 6b8fb154b7ec4041905bfa3825e10329
#: ../../releases/1.4-alpha-1.txt:1080 ../../releases/1.4-beta-1.txt:1152
msgid ""
"Week of **February 27, 2012**: First Django 1.4 release candidate; string "
"freeze for translations."
msgstr ""

# 85286104479444898fe9ace93c139c52
# a03f1de4cc094fb69aaf5f29ce537970
#: ../../releases/1.4-alpha-1.txt:1083 ../../releases/1.4-beta-1.txt:1155
msgid "Week of **March 5, 2012**: Django 1.4 final release."
msgstr ""

# e288573784cc4ecc8504843399cb9b55
# aa55f2537a734a08ac81d4ce71dce60a
#: ../../releases/1.4-alpha-1.txt:1085 ../../releases/1.4-beta-1.txt:1157
msgid ""
"If necessary, additional alpha, beta or release-candidate packages will be "
"issued prior to the final 1.4 release. Django 1.4 will be released "
"approximately one week after the final release candidate."
msgstr ""

# 30132725f3254738a15f7ffa9bf99319
#: ../../releases/1.4-alpha-1.txt:1092
msgid ""
"In order to provide a high-quality 1.4 release, we need your help. Although "
"this alpha release is, again, *not* intended for production use, you can "
"help the Django team by trying out the alpha codebase in a safe test "
"environment and reporting any bugs or issues you encounter. The Django "
"ticket tracker is the central place to search for open issues:"
msgstr ""

# cdeb840931e944af879fb639efc8f403
# ec0f60b00c364e8696c2f876efc278cf
#: ../../releases/1.4-alpha-1.txt:1121 ../../releases/1.4-beta-1.txt:1193
msgid ""
"Several development sprints will also be taking place before the 1.4 "
"release; these will typically be announced in advance on the django-"
"developers mailing list, and anyone who wants to help is welcome to join in."
msgstr ""

# 08eab69b3cd04fd3ab6e2eaf029611d1
#: ../../releases/1.4-beta-1.txt:3
msgid "Django 1.4 beta release notes"
msgstr ""

# 66270930a5b848c6bbbee9ebfb20e28b
#: ../../releases/1.4-beta-1.txt:5
msgid "February 15, 2012."
msgstr ""

# 23a66e1c1bbc4dd89567d971da7c7067
#: ../../releases/1.4-beta-1.txt:7
msgid "Welcome to Django 1.4 beta!"
msgstr ""

# 272134c428214659ad6464bcae6dd6cb
#: ../../releases/1.4-beta-1.txt:9
msgid ""
"This is the second in a series of preview/development releases leading up to "
"the eventual release of Django 1.4, scheduled for March 2012. This release "
"is primarily targeted at developers who are interested in trying out new "
"features and testing the Django codebase to help identify and resolve bugs "
"prior to the final 1.4 release."
msgstr ""

# 15eac6f4034b42b78c931bdf2f437992
#: ../../releases/1.4-beta-1.txt:18
msgid ""
"Django 1.4 beta includes various `new features`_ and some minor `backwards "
"incompatible changes`_. There are also some features that have been dropped, "
"which are detailed in :doc:`our deprecation plan </internals/deprecation>`, "
"and we've `begun the deprecation process for some features`_."
msgstr ""

# 29f2f3b39e4c423c87fdd710ad99c528
#: ../../releases/1.4-beta-1.txt:29
msgid "Version numbering"
msgstr ""

# 7ce26d5ce5b948e38a076ef6371ffb8f
#: ../../releases/1.4-beta-1.txt:31
msgid ""
"Internally, Django's version number is represented by the tuple ``django."
"VERSION``. This is used to generate human-readable version number strings; "
"as of Django 1.4 beta 1, the algorithm for generating these strings has been "
"changed to match the recommendations of :pep:`386`. This only affects the "
"human-readable strings identifying Django alphas, betas and release "
"candidates, and should not affect end users in any way."
msgstr ""

# 0add61a128c74d02a4b164ffbf47f27c
#: ../../releases/1.4-beta-1.txt:38
msgid ""
"For example purposes, the old algorithm would give Django 1.4 beta 1 a "
"version string of the form \"1.4 beta 1\". The new algorithm generates the "
"version string \"1.4b1\"."
msgstr ""

# 9fb6896497534a5d91452a42b863e79b
#: ../../releases/1.4-beta-1.txt:135
msgid ""
"Django 1.4 alpha contained a bug that corrupted PBKDF2 hashes. To determine "
"which accounts are affected, run :djadmin:`manage.py shell <shell>` and "
"paste this snippet::"
msgstr ""

# 1dd14ea0cbae445893c741e20c8ef1b7
#: ../../releases/1.4-beta-1.txt:147
msgid "These users should reset their passwords."
msgstr ""

# 051e21208dda4826814bb66bd2f5a610
#: ../../releases/1.4-beta-1.txt:218
msgid ""
"Session data is signed and validated by the server, but is not encrypted.  "
"This means that a user can view any data stored in the session, but cannot "
"change it. Please read the documentation for further clarification before "
"using this backend."
msgstr ""

# 3422b553877a46d69d908db0f4c81976
#: ../../releases/1.4-beta-1.txt:617
msgid ""
"New phrases added to ``HIDDEN_SETTINGS`` regex in `django/views/debug.py`_."
msgstr ""

# a521faae19174730b31cd4f174d556f4
#: ../../releases/1.4-beta-1.txt:619
msgid ""
"``'API'``, ``'TOKEN'``, ``'KEY'`` were added, ``'PASSWORD'`` was changed to "
"``'PASS'``."
msgstr ""

# 22a20145b42649b2a61682050678fc0d
#: ../../releases/1.4-beta-1.txt:1114
msgid ""
"Session cookies now include the ``httponly`` attribute by default to help "
"reduce the impact of potential XSS attacks. As a consequence of this change, "
"session cookie data, including sessionid, is no longer accessible from "
"Javascript in many browsers. For strict backwards compatibility, use "
"``SESSION_COOKIE_HTTPONLY = False`` in your settings file."
msgstr ""

# c724c0b8c9a54269ad2cb7b5be4ebe10
#: ../../releases/1.4-beta-1.txt:1149
msgid ""
"Week of **January 13, 2012**: First Django 1.4 beta release; final feature "
"freeze for Django 1.4."
msgstr ""

# 2a18d96d704a4f71afc79a088861b772
#: ../../releases/1.4-beta-1.txt:1164
msgid ""
"In order to provide a high-quality 1.4 release, we need your help. Although "
"this beta release is, again, *not* intended for production use, you can help "
"the Django team by trying out the beta codebase in a safe test environment "
"and reporting any bugs or issues you encounter. The Django ticket tracker is "
"the central place to search for open issues:"
msgstr ""

# a700548646d2498b847d350fe22e4497
#: ../../releases/1.4-beta-1.txt:1175
msgid ""
"Additionally, discussion of Django development, including progress toward "
"the 1.4 release, takes place daily on the django-developers mailing list:"
msgstr ""

# b71033ee882a4bd9ac6b1af116387ae1
#: ../../releases/index.txt:3
msgid "Release notes"
msgstr ""

# 47756bfd8d0d41dc9d5b99c4f38191b0
#: ../../releases/index.txt:5
msgid ""
"Release notes for the official Django releases. Each release note will tell "
"you what's new in each version, and will also describe any backwards-"
"incompatible changes made in that version."
msgstr ""

# 2b1e2a1d6e024717a915572eda3c0e4e
#: ../../releases/index.txt:9
msgid ""
"For those upgrading to a new version of Django, you will need to check all "
"the backwards-incompatible changes and deprecated features for each 'final' "
"release from the one after your current Django version, up to and including "
"the new version."
msgstr ""

# 02031131efeb4b2d85bfec257d1a5270
#: ../../releases/index.txt:15
msgid "Final releases"
msgstr ""

# 3d9acec859fa460bae119c06a5fac70c
#: ../../releases/index.txt:19
msgid "1.4 release"
msgstr ""

# d7167d84cd1d4176910eeda1373ceb97
#: ../../releases/index.txt:26
msgid "1.3 release"
msgstr ""

# 55fce78d5b354f1b82d036be73afc013
#: ../../releases/index.txt:34
msgid "1.2 release"
msgstr ""

# 4631addc5b6147b9b911e16e40cffd8d
#: ../../releases/index.txt:48
msgid "1.1 release"
msgstr ""

# 05d79d5e886b43b79e54d2fb92e2b4c3
#: ../../releases/index.txt:58
msgid "1.0 release"
msgstr ""

# 524b1c9e85264d92a00ed4117f80428f
#: ../../releases/index.txt:67
msgid "Pre-1.0 releases"
msgstr ""

# 5bf6b8dae7a84f069f04fd61b7706dff
#: ../../releases/index.txt:75
msgid "Development releases"
msgstr ""

# e0ed0957bec8459bb3dc729f1a90e8a6
#: ../../releases/index.txt:77
msgid ""
"These notes are retained for historical purposes. If you are upgrading "
"between formal Django releases, you don't need to worry about these notes."
msgstr ""
